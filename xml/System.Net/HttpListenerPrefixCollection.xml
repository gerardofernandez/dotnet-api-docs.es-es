<Type Name="HttpListenerPrefixCollection" FullName="System.Net.HttpListenerPrefixCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="24ed896b5097c0293079cbdb27b8273a2e5a3d0f" /><Meta Name="ms.sourcegitcommit" Value="0609891c89ddaa91e4c02970acb00072fcc29baf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/13/2019" /><Meta Name="ms.locfileid" Value="65558502" /></Metadata><TypeSignature Language="C#" Value="public class HttpListenerPrefixCollection : System.Collections.Generic.ICollection&lt;string&gt;, System.Collections.Generic.IEnumerable&lt;string&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpListenerPrefixCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;string&gt;, class System.Collections.Generic.IEnumerable`1&lt;string&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerPrefixCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpListenerPrefixCollection&#xA;Implements ICollection(Of String), IEnumerable(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerPrefixCollection : System::Collections::Generic::ICollection&lt;System::String ^&gt;, System::Collections::Generic::IEnumerable&lt;System::String ^&gt;" />
  <TypeSignature Language="F#" Value="type HttpListenerPrefixCollection = class&#xA;    interface ICollection&lt;string&gt;&#xA;    interface seq&lt;string&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="98d7a-101">Representa la colección utilizada para almacenar los prefijos de identificador uniforme de recursos (URI) de <see cref="T:System.Net.HttpListener" /> objetos.</span><span class="sxs-lookup"><span data-stu-id="98d7a-101">Represents the collection used to store Uniform Resource Identifier (URI) prefixes for <see cref="T:System.Net.HttpListener" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-102">El <xref:System.Net.HttpListener.Prefixes%2A> propiedad devuelve instancias de esta colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-102">The <xref:System.Net.HttpListener.Prefixes%2A> property returns instances of this collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98d7a-103">En el ejemplo de código siguiente se crea un <xref:System.Net.HttpListener> y agrega los prefijos especificados por el usuario para su <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="98d7a-103">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Add : string -&gt; unit&#xA;override this.Add : string -&gt; unit" Usage="httpListenerPrefixCollection.Add uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="98d7a-104"><see cref="T:System.String" /> que identifica la información de URI que se compara en las solicitudes entrantes.</span><span class="sxs-lookup"><span data-stu-id="98d7a-104">A <see cref="T:System.String" /> that identifies the URI information that is compared in incoming requests.</span></span> <span data-ttu-id="98d7a-105">El prefijo debe terminar con una barra diagonal ("/").</span><span class="sxs-lookup"><span data-stu-id="98d7a-105">The prefix must be terminated with a forward slash ("/").</span></span></param>
        <summary><span data-ttu-id="98d7a-106">Agrega un prefijo del identificador uniforme de recursos (URI) a la colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-106">Adds a Uniform Resource Identifier (URI) prefix to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-107">Este método agrega un prefijo URI al conjunto de prefijos administrado por el asociado <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="98d7a-107">This method adds a URI prefix to the set of prefixes managed by the associated <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="98d7a-108">Cuando se protejan `uriPrefix` para asegurarse de es válido, mayúsculas y minúsculas se ignoran.</span><span class="sxs-lookup"><span data-stu-id="98d7a-108">When checking `uriPrefix` to ensure it is valid, case is ignored.</span></span>  
  
 <span data-ttu-id="98d7a-109">Una cadena de prefijo URI se compone de un esquema (http o https), un host, un puerto opcional y una ruta de acceso opcional, por ejemplo, "`http://www.contoso.com:8080/customerData/`".</span><span class="sxs-lookup"><span data-stu-id="98d7a-109">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path, for example, "`http://www.contoso.com:8080/customerData/`".</span></span> <span data-ttu-id="98d7a-110">El prefijo debe terminar con una barra diagonal ("/").</span><span class="sxs-lookup"><span data-stu-id="98d7a-110">The prefix must be terminated with a forward slash ("/").</span></span> <span data-ttu-id="98d7a-111">El <xref:System.Net.HttpListener> con el prefijo que mejor coincida con un identificador URI solicitado responde a la solicitud.</span><span class="sxs-lookup"><span data-stu-id="98d7a-111">The <xref:System.Net.HttpListener> with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="98d7a-112">Varios <xref:System.Net.HttpListener> objetos no pueden agregar el mismo prefijo.</span><span class="sxs-lookup"><span data-stu-id="98d7a-112">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix.</span></span> <span data-ttu-id="98d7a-113">Un <xref:System.Net.HttpListenerException> excepción se produce si un <xref:System.Net.HttpListener> agrega un prefijo que ya está en usar.</span><span class="sxs-lookup"><span data-stu-id="98d7a-113">An <xref:System.Net.HttpListenerException> exception is thrown if an <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>  
  
 <span data-ttu-id="98d7a-114">Cuando se especifica un puerto, el elemento host puede reemplazarse por "`*`" para indicar que el <xref:System.Net.HttpListener> acepta las solicitudes enviadas al puerto si el URI solicitado no coincide con ningún otro prefijo.</span><span class="sxs-lookup"><span data-stu-id="98d7a-114">When a port is specified, the host element can be replaced with "`*`" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="98d7a-115">Por ejemplo recibir todas las solicitudes enviadas al puerto 8080 al URI solicitado no está controlado por ningún otro <xref:System.Net.HttpListener>, es el prefijo "`http://*:8080/`".</span><span class="sxs-lookup"><span data-stu-id="98d7a-115">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any other <xref:System.Net.HttpListener>, the prefix is "`http://*:8080/`".</span></span> <span data-ttu-id="98d7a-116">De forma similar, para especificar que el <xref:System.Net.HttpListener> acepta todas las solicitudes enviadas a un puerto, reemplace el elemento de host con el "`+`"character",`https://+:8080/`".</span><span class="sxs-lookup"><span data-stu-id="98d7a-116">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "`+`" character, "`https://+:8080/`".</span></span> <span data-ttu-id="98d7a-117">El "`*`"y"`+`" caracteres pueden estar presentes en prefijos que incluyen rutas de acceso.</span><span class="sxs-lookup"><span data-stu-id="98d7a-117">The "`*`" and "`+`" characters can be present in prefixes that include paths.</span></span>  
  
 <span data-ttu-id="98d7a-118">A partir de .NET 4.5.3 con Windows 10, subdominios comodín se admiten en los prefijos URI que se administran mediante un <xref:System.Net.HttpListener> objeto.</span><span class="sxs-lookup"><span data-stu-id="98d7a-118">Starting with .NET 4.5.3 and Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="98d7a-119">Para especificar un comodín de subdominio, use el "\*" caracteres como parte del nombre de host en un prefijo URI: por ejemplo, `http://*.foo.com/`y pasar como argumento al método HttpListenerPrefixCollection.Add.</span><span class="sxs-lookup"><span data-stu-id="98d7a-119">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix: for example, `http://*.foo.com/`, and pass this as the argument to the HttpListenerPrefixCollection.Add method.</span></span> <span data-ttu-id="98d7a-120">Esto funcionará en .NET 4.5.3 y Windows 10; en versiones anteriores, esto generaría un <xref:System.Net.HttpListenerException></span><span class="sxs-lookup"><span data-stu-id="98d7a-120">This will work on .NET 4.5.3 and Windows 10; in earlier versions, this would generate an <xref:System.Net.HttpListenerException></span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98d7a-121">En el ejemplo de código siguiente se crea un <xref:System.Net.HttpListener> y agrega los prefijos especificados por el usuario para su <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="98d7a-121">The following code example creates an <xref:System.Net.HttpListener> and adds user-specified prefixes to its <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
 [!code-vb[Net_Listener_Basic#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98d7a-122">El valor de <paramref name="uriPrefix" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-122"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="98d7a-123"><paramref name="uriPrefix" /> no utiliza el esquema http:// o https://.</span><span class="sxs-lookup"><span data-stu-id="98d7a-123"><paramref name="uriPrefix" /> does not use the http:// or https:// scheme.</span></span> <span data-ttu-id="98d7a-124">Estos son los únicos esquemas admitidos en los objetos <see cref="T:System.Net.HttpListener" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-124">These are the only schemes supported for <see cref="T:System.Net.HttpListener" /> objects.</span></span>  
  
<span data-ttu-id="98d7a-125">-o bien-</span><span class="sxs-lookup"><span data-stu-id="98d7a-125">-or-</span></span> 
 <span data-ttu-id="98d7a-126"><paramref name="uriPrefix" /> no es un prefijo URI con formato correcto.</span><span class="sxs-lookup"><span data-stu-id="98d7a-126"><paramref name="uriPrefix" /> is not a correctly formatted URI prefix.</span></span> <span data-ttu-id="98d7a-127">Asegúrese de que la cadena finaliza con un "/".</span><span class="sxs-lookup"><span data-stu-id="98d7a-127">Make sure the string is terminated with a "/".</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="98d7a-128">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-128">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="98d7a-129">Error al llamar a una función de Windows.</span><span class="sxs-lookup"><span data-stu-id="98d7a-129">A Windows function call failed.</span></span> <span data-ttu-id="98d7a-130">Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</span><span class="sxs-lookup"><span data-stu-id="98d7a-130">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span> <span data-ttu-id="98d7a-131">Se produce esta excepción si otro objeto <see cref="T:System.Net.HttpListener" /> ya ha agregado el prefijo <paramref name="uriPrefix" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-131">This exception is thrown if another <see cref="T:System.Net.HttpListener" /> has already added the prefix <paramref name="uriPrefix" />.</span></span></exception>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="98d7a-132">Para aceptar conexiones de red.</span><span class="sxs-lookup"><span data-stu-id="98d7a-132">To accept network connections.</span></span> <span data-ttu-id="98d7a-133">Enumeración asociada: <see cref="F:System.Net.NetworkAccess.Accept" /></span><span class="sxs-lookup"><span data-stu-id="98d7a-133">Associated enumeration: <see cref="F:System.Net.NetworkAccess.Accept" /></span></span></permission>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="httpListenerPrefixCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98d7a-134">Quita todos los prefijos de identificador uniforme de recursos (URI) de la colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-134">Removes all the Uniform Resource Identifier (URI) prefixes from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-135">Después de llamar a este método, no se puede iniciar asociado <xref:System.Net.HttpListener> sin agregar nuevos prefijos; si intenta hacerlo, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="98d7a-135">After calling this method, you cannot start the associated <xref:System.Net.HttpListener> without adding new prefixes; if you try to do so, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98d7a-136">El ejemplo de código siguiente quita todos los prefijos de un <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="98d7a-136">The following code example removes all prefixes in an <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#6)]  
 [!code-vb[Net_Listener_Basic#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="98d7a-137">Error al llamar a una función de Windows.</span><span class="sxs-lookup"><span data-stu-id="98d7a-137">A Windows function call failed.</span></span> <span data-ttu-id="98d7a-138">Examine la propiedad <see cref="P:System.Net.HttpListenerException.ErrorCode" /> de la excepción para determinar su causa.</span><span class="sxs-lookup"><span data-stu-id="98d7a-138">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="98d7a-139">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-139">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="98d7a-140">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="98d7a-140">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="98d7a-141">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="98d7a-141">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Contains : string -&gt; bool&#xA;override this.Contains : string -&gt; bool" Usage="httpListenerPrefixCollection.Contains uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="98d7a-142">Un <see cref="T:System.String" /> que contiene el prefijo de identificador uniforme de recursos (URI) para probar.</span><span class="sxs-lookup"><span data-stu-id="98d7a-142">A <see cref="T:System.String" /> that contains the Uniform Resource Identifier (URI) prefix to test.</span></span></param>
        <summary><span data-ttu-id="98d7a-143">Devuelve un <see cref="T:System.Boolean" /> valor que indica si el prefijo especificado se encuentra en la colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-143">Returns a <see cref="T:System.Boolean" /> value that indicates whether the specified prefix is contained in the collection.</span></span></summary>
        <returns><span data-ttu-id="98d7a-144"><see langword="true" /> Si esta colección contiene el prefijo especificado por <paramref name="uriPrefix" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-144"><see langword="true" /> if this collection contains the prefix specified by <paramref name="uriPrefix" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-145">El prefijo especificado debe coincidir exactamente con un valor existente.</span><span class="sxs-lookup"><span data-stu-id="98d7a-145">The specified prefix must exactly match an existing value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98d7a-146">El siguiente código de ejemplo comprueba si un prefijo especificado por el usuario se encuentra en la colección de prefijos un <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="98d7a-146">The following code example checks to see whether a user-specified prefix is contained in the prefix collection of an <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#4)]  
 [!code-vb[Net_Listener_Basic#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98d7a-147">El valor de <paramref name="uriPrefix" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-147"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98d7a-148">Copia el contenido de un <see cref="T:System.Net.HttpListenerPrefixCollection" /> en la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-148">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-149">La matriz debe ser capaz de contener cadenas y no puede ser multidimensional.</span><span class="sxs-lookup"><span data-stu-id="98d7a-149">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, int offset);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="98d7a-150">Unidimensional <see cref="T:System.Array" /> que recibe las cadenas de prefijo de identificador uniforme de recursos (URI) de esta colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-150">The one dimensional <see cref="T:System.Array" /> that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span></span></param>
        <param name="offset"><span data-ttu-id="98d7a-151">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="98d7a-151">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="98d7a-152">Copia el contenido de un <see cref="T:System.Net.HttpListenerPrefixCollection" /> en la matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-152">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-153">La matriz debe ser capaz de contener cadenas y no puede ser multidimensional.</span><span class="sxs-lookup"><span data-stu-id="98d7a-153">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98d7a-154">El siguiente ejemplo de código copia los prefijos de un <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="98d7a-154">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
 [!code-vb[Net_Listener_Basic#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="98d7a-155"><paramref name="array" /> tiene más de una dimensión.</span><span class="sxs-lookup"><span data-stu-id="98d7a-155"><paramref name="array" /> has more than one dimension.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="98d7a-156">Esta colección contiene más elementos que pueden almacenarse en <paramref name="array" /> comenzando en <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-156">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="98d7a-157">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-157">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="98d7a-158"><paramref name="array" /> no se puede almacenar valores de cadena.</span><span class="sxs-lookup"><span data-stu-id="98d7a-158"><paramref name="array" /> cannot store string values.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (string[] array, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(string[] array, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.CopyTo(System.String[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As String(), offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::String ^&gt; ^ array, int offset);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : string[] * int -&gt; unit&#xA;override this.CopyTo : string[] * int -&gt; unit" Usage="httpListenerPrefixCollection.CopyTo (array, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.String[]" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="98d7a-159">La matriz de cadenas unidimensional que recibe las cadenas de prefijo de identificador uniforme de recursos (URI) de esta colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-159">The one dimensional string array that receives the Uniform Resource Identifier (URI) prefix strings in this collection.</span></span></param>
        <param name="offset"><span data-ttu-id="98d7a-160">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="98d7a-160">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="98d7a-161">Copia el contenido de un <see cref="T:System.Net.HttpListenerPrefixCollection" /> a la matriz de cadena especificada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-161">Copies the contents of an <see cref="T:System.Net.HttpListenerPrefixCollection" /> to the specified string array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-162">La matriz debe ser capaz de contener cadenas y no puede ser multidimensional.</span><span class="sxs-lookup"><span data-stu-id="98d7a-162">The array must be able to contain strings and cannot be multidimensional.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98d7a-163">El siguiente ejemplo de código copia los prefijos de un <xref:System.Net.HttpListenerPrefixCollection>.</span><span class="sxs-lookup"><span data-stu-id="98d7a-163">The following code example copies the prefixes in a <xref:System.Net.HttpListenerPrefixCollection>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#7)]  
 [!code-vb[Net_Listener_Basic#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="98d7a-164"><paramref name="array" /> tiene más de una dimensión.</span><span class="sxs-lookup"><span data-stu-id="98d7a-164"><paramref name="array" /> has more than one dimension.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="98d7a-165">Esta colección contiene más elementos que pueden almacenarse en <paramref name="array" /> comenzando en <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-165">This collection contains more elements than can be stored in <paramref name="array" /> starting at <paramref name="offset" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="98d7a-166">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-166">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Net.HttpListenerPrefixCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98d7a-167">Obtiene el número de prefijos contenidos en la colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-167">Gets the number of prefixes contained in the collection.</span></span></summary>
        <value><span data-ttu-id="98d7a-168">Un <see cref="T:System.Int32" /> que contiene el número de prefijos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-168">An <see cref="T:System.Int32" /> that contains the number of prefixes in this collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="98d7a-169">El ejemplo de código siguiente muestra los prefijos de una colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-169">The following code example displays the prefixes in a collection.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
 [!code-vb[Net_Listener_Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;string&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;string&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::String ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;string&gt;" Usage="httpListenerPrefixCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98d7a-170">Devuelve un objeto que puede utilizarse para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-170">Returns an object that can be used to iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="98d7a-171">Un objeto que implementa el <see cref="T:System.Collections.IEnumerator" /> interfaz y proporciona acceso a las cadenas de esta colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-171">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-172">El objeto devuelto por este método se coloca inicialmente antes del primer elemento de esta colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-172">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="98d7a-173">Debe llamar a la <xref:System.Collections.IEnumerator.MoveNext%2A> método antes de poder acceder al primer elemento.</span><span class="sxs-lookup"><span data-stu-id="98d7a-173">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="98d7a-174">Para tener acceso al elemento en la posición actual, llame a la <xref:System.Collections.IEnumerator.Current%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="98d7a-174">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="98d7a-175">No modifique la colección al usar el enumerador.</span><span class="sxs-lookup"><span data-stu-id="98d7a-175">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="98d7a-176">Si se modifica la colección mientras se encuentra en un enumerador utilice, un intento para establecer la posición mediante una llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> hace que un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="98d7a-176">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="98d7a-177">Para obtener una descripción detallada de los enumeradores, consulte la documentación para el <xref:System.Collections.IEnumerator> clase y el <xref:System.Collections.IEnumerable.GetEnumerator%2A> método.</span><span class="sxs-lookup"><span data-stu-id="98d7a-177">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98d7a-178">En el ejemplo de código siguiente se muestra cómo enumerar una colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-178">The following code example demonstrates enumerating through a collection.</span></span> <span data-ttu-id="98d7a-179">Tenga en cuenta que los ejemplos de Visual Basic y C# usan instrucciones específicas del lenguaje para enumerar la colección en lugar de recuperar el enumerador.</span><span class="sxs-lookup"><span data-stu-id="98d7a-179">Note that the Visual Basic and C# examples use language specific statements to enumerate through the collection instead of retrieving the enumerator.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
 [!code-vb[Net_Listener_Basic#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Net_Listener_Basic/VB/test.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Net.HttpListenerPrefixCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98d7a-180">Obtiene un valor que indica si el acceso a la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="98d7a-180">Gets a value that indicates whether access to the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="98d7a-181">Siempre devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-181">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Net.HttpListenerPrefixCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98d7a-182">Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</span><span class="sxs-lookup"><span data-stu-id="98d7a-182">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="98d7a-183">Esta propiedad devuelve siempre <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-183">This property always returns <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-184">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="98d7a-184">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="98d7a-185">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="98d7a-185">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="98d7a-186">Para garantizar la seguridad para subprocesos durante la enumeración, puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="98d7a-186">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions that result from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string uriPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string uriPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (uriPrefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ uriPrefix);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; bool&#xA;override this.Remove : string -&gt; bool" Usage="httpListenerPrefixCollection.Remove uriPrefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="98d7a-187">Un <see cref="T:System.String" /> que contiene el prefijo URI para quitar.</span><span class="sxs-lookup"><span data-stu-id="98d7a-187">A <see cref="T:System.String" /> that contains the URI prefix to remove.</span></span></param>
        <summary><span data-ttu-id="98d7a-188">Quita el identificador uniforme de recursos (URI) especificado de la lista de prefijos controlada por el <see cref="T:System.Net.HttpListener" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="98d7a-188">Removes the specified Uniform Resource Identifier (URI) from the list of prefixes handled by the <see cref="T:System.Net.HttpListener" /> object.</span></span></summary>
        <returns><span data-ttu-id="98d7a-189"><see langword="true" /> Si el <paramref name="uriPrefix" /> se encontró en el <see cref="T:System.Net.HttpListenerPrefixCollection" /> y se quita; en caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-189"><see langword="true" /> if the <paramref name="uriPrefix" /> was found in the <see cref="T:System.Net.HttpListenerPrefixCollection" /> and removed; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-190">Si `uriPrefix` es no está en la colección, este método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-190">If `uriPrefix` is not in the collection, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98d7a-191">El valor de <paramref name="uriPrefix" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="98d7a-191"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.HttpListenerException"><span data-ttu-id="98d7a-192">Error al llamar a una función de Windows.</span><span class="sxs-lookup"><span data-stu-id="98d7a-192">A Windows function call failed.</span></span> <span data-ttu-id="98d7a-193">Para determinar la causa de la excepción, compruebe el código de error de la excepción.</span><span class="sxs-lookup"><span data-stu-id="98d7a-193">To determine the cause of the exception, check the exception's error code.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="98d7a-194">La clase <see cref="T:System.Net.HttpListener" /> asociada a esta colección está cerrada.</span><span class="sxs-lookup"><span data-stu-id="98d7a-194">The <see cref="T:System.Net.HttpListener" /> associated with this collection is closed.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="98d7a-195">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="98d7a-195">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="98d7a-196">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="98d7a-196">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span></para></block>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerPrefixCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98d7a-197">Devuelve un objeto que puede utilizarse para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-197">Returns an object that can be used to iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="98d7a-198">Un objeto que implementa el <see cref="T:System.Collections.IEnumerator" /> interfaz y proporciona acceso a las cadenas de esta colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-198">An object that implements the <see cref="T:System.Collections.IEnumerator" /> interface and provides access to the strings in this collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98d7a-199">El objeto devuelto por este método se coloca inicialmente antes del primer elemento de esta colección.</span><span class="sxs-lookup"><span data-stu-id="98d7a-199">The object that is returned by this method is initially positioned before the first element in this collection.</span></span> <span data-ttu-id="98d7a-200">Debe llamar a la <xref:System.Collections.IEnumerator.MoveNext%2A> método antes de poder acceder al primer elemento.</span><span class="sxs-lookup"><span data-stu-id="98d7a-200">You must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method before you can access the first element.</span></span> <span data-ttu-id="98d7a-201">Para tener acceso al elemento en la posición actual, llame a la <xref:System.Collections.IEnumerator.Current%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="98d7a-201">To access the element at the current position, call the <xref:System.Collections.IEnumerator.Current%2A> property.</span></span>  
  
 <span data-ttu-id="98d7a-202">No modifique la colección al usar el enumerador.</span><span class="sxs-lookup"><span data-stu-id="98d7a-202">Do not modify the collection while using the enumerator.</span></span> <span data-ttu-id="98d7a-203">Si se modifica la colección mientras se encuentra en un enumerador utilice, un intento para establecer la posición mediante una llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> hace que un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="98d7a-203">If the collection is modified while an enumerator is in use, an attempt to set the position by calling <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> causes an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="98d7a-204">Para obtener una descripción detallada de los enumeradores, consulte la documentación para el <xref:System.Collections.IEnumerator> clase y el <xref:System.Collections.IEnumerable.GetEnumerator%2A> método.</span><span class="sxs-lookup"><span data-stu-id="98d7a-204">For a detailed description of enumerators, see the documentation for the <xref:System.Collections.IEnumerator> class and the <xref:System.Collections.IEnumerable.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
      </Docs>
    </Member>
  </Members>
</Type>
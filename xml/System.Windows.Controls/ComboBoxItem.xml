<Type Name="ComboBoxItem" FullName="System.Windows.Controls.ComboBoxItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cbc060688a5703fd37bf0acdd80fe6c6e864366f" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52612063" /></Metadata><TypeSignature Language="C#" Value="public class ComboBoxItem : System.Windows.Controls.ListBoxItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ComboBoxItem extends System.Windows.Controls.ListBoxItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ComboBoxItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBoxItem&#xA;Inherits ListBoxItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComboBoxItem : System::Windows::Controls::ListBoxItem" />
  <TypeSignature Language="F#" Value="type ComboBoxItem = class&#xA;    inherit ListBoxItem" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ListBoxItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ComboBox)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="47e11-101">Implementa un elemento seleccionable dentro de un elemento <see cref="T:System.Windows.Controls.ComboBox" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-101">Implements a selectable item inside a <see cref="T:System.Windows.Controls.ComboBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="47e11-102">De forma predeterminada, el <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> de un <xref:System.Windows.Controls.ComboBoxItem> está establecido en <xref:System.Windows.HorizontalAlignment.Stretch>.</span><span class="sxs-lookup"><span data-stu-id="47e11-102">By default, the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> of a <xref:System.Windows.Controls.ComboBoxItem> is set to <xref:System.Windows.HorizontalAlignment.Stretch>.</span></span> <span data-ttu-id="47e11-103">La posición horizontal del valor predeterminado de un <xref:System.Windows.Controls.StackPanel> es <xref:System.Windows.HorizontalAlignment.Center>.</span><span class="sxs-lookup"><span data-stu-id="47e11-103">The default horizontal position of a <xref:System.Windows.Controls.StackPanel> is <xref:System.Windows.HorizontalAlignment.Center>.</span></span> <span data-ttu-id="47e11-104">Si establece la <xref:System.Windows.FrameworkElement.Width%2A> propiedad de un <xref:System.Windows.Controls.ComboBoxItem> a través de un <xref:System.Windows.Controls.StackPanel>, se aplica el valor predeterminado del panel y se centrará el elemento.</span><span class="sxs-lookup"><span data-stu-id="47e11-104">If you set the <xref:System.Windows.FrameworkElement.Width%2A> property of a <xref:System.Windows.Controls.ComboBoxItem> through a <xref:System.Windows.Controls.StackPanel>, the panel's default is applied and the item will be centered.</span></span>  
  
 <span data-ttu-id="47e11-105">Un <xref:System.Windows.Controls.ComboBoxItem> es un <xref:System.Windows.Controls.ContentControl>, lo que significa que puede contener un único objeto de cualquier tipo (por ejemplo, una cadena, una imagen o un panel).</span><span class="sxs-lookup"><span data-stu-id="47e11-105">A <xref:System.Windows.Controls.ComboBoxItem> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="47e11-106">Para obtener más información, vea la clase <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="47e11-106">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
## <a name="customizing-the-comboboxitem-control"></a><span data-ttu-id="47e11-107">Personalizar el Control ComboBoxItem</span><span class="sxs-lookup"><span data-stu-id="47e11-107">Customizing the ComboBoxItem Control</span></span>  
 <span data-ttu-id="47e11-108">Para aplicar la misma configuración de la propiedad a varios <xref:System.Windows.Controls.ComboBoxItem> controles, utilizar el <xref:System.Windows.FrameworkElement.Style%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="47e11-108">To apply the same property settings to multiple <xref:System.Windows.Controls.ComboBoxItem> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="47e11-109">Puede modificar el valor predeterminado <xref:System.Windows.Controls.ControlTemplate> para proporcionar el control una apariencia única.</span><span class="sxs-lookup"><span data-stu-id="47e11-109">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="47e11-110">Para obtener más información acerca de cómo crear un <xref:System.Windows.Controls.ControlTemplate>, consulte [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="47e11-110">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="47e11-111">Para ver las partes y los Estados que son específicos de la <xref:System.Windows.Controls.ComboBoxItem>, consulte [plantillas y estilos de cuadro combinado](~/docs/framework/wpf/controls/combobox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="47e11-111">To see the parts and states that are specific to the <xref:System.Windows.Controls.ComboBoxItem>, see [ComboBox Styles and Templates](~/docs/framework/wpf/controls/combobox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="47e11-112">Las propiedades de dependencia para este control pueden establecerse mediante el estilo del control de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="47e11-112">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="47e11-113">Si una propiedad se establece mediante un estilo predeterminado, puede cambiar la propiedad de su valor predeterminado cuando el control aparece en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="47e11-113">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="47e11-114">El estilo predeterminado se determina por el tema de escritorio que se utiliza cuando se ejecuta la aplicación.</span><span class="sxs-lookup"><span data-stu-id="47e11-114">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="47e11-115">Para obtener más información, consulte [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="47e11-115">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="47e11-116">Establecer una propiedad visual solo tendrá un efecto si esa propiedad está presente en ambos <xref:System.Windows.Controls.ComboBoxItem> control de la plantilla predeterminada y se establece mediante el uso de una.</span><span class="sxs-lookup"><span data-stu-id="47e11-116">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.ComboBoxItem> control's default template and is set by using a .</span></span> <span data-ttu-id="47e11-117">Puede encontrar una lista de propiedades visuales en la sección "Cambiar la estructura Visual de un Control" en [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="47e11-117">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ComboBox" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741921(v=vs.90)"><span data-ttu-id="47e11-118">Plantilla de Control ComboBoxItem</span><span class="sxs-lookup"><span data-stu-id="47e11-118">ComboBoxItem Control Template</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComboBoxItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComboBoxItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="47e11-119">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.ComboBoxItem" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-119">Initializes a new instance of the <see cref="T:System.Windows.Controls.ComboBoxItem" /> class</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlighted">
      <MemberSignature Language="C#" Value="public bool IsHighlighted { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHighlighted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHighlighted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsHighlighted {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHighlighted : bool with get, set" Usage="System.Windows.Controls.ComboBoxItem.IsHighlighted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e11-120">Obtiene un valor que indica si el elemento está resaltado.</span><span class="sxs-lookup"><span data-stu-id="47e11-120">Gets a value that indicates whether the item is highlighted.</span></span></summary>
        <value><span data-ttu-id="47e11-121">Es <see langword="true" /> si aparece resaltado un control <see cref="T:System.Windows.Controls.ComboBoxItem" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-121"><see langword="true" /> if a <see cref="T:System.Windows.Controls.ComboBoxItem" /> is highlighted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="47e11-122">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-122">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="47e11-123">Esta propiedad se puede utilizar con los estilos que necesitan un resaltado para indicar la selección.</span><span class="sxs-lookup"><span data-stu-id="47e11-123">This property can be used by styles that need a highlight to indicate selection.</span></span>  
  
 <span data-ttu-id="47e11-124">Comenzando con la versión de .NET Framework 3.0 Service Pack 1, <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> tiene un establecedor protegido.</span><span class="sxs-lookup"><span data-stu-id="47e11-124">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> has a protected setter.</span></span> <span data-ttu-id="47e11-125">Para usar esta funcionalidad, la aplicación debe tener como destino la versión 3.5 de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="47e11-125">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="47e11-126">Para más información, vea [Versiones y dependencias](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="47e11-126">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHighlighted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="47e11-127">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="47e11-127">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="47e11-128">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="47e11-128">Identifier Field</span></span>|<xref:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty>|  
|<span data-ttu-id="47e11-129">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="47e11-129">Metadata properties set to `true`</span></span>|<span data-ttu-id="47e11-130">None</span><span class="sxs-lookup"><span data-stu-id="47e11-130">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="47e11-131">En el ejemplo siguiente se cambia la apariencia de un <xref:System.Windows.Controls.ComboBoxItem> cuando <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="47e11-131">The following example changes the appearance of a <xref:System.Windows.Controls.ComboBoxItem> when <xref:System.Windows.Controls.ComboBoxItem.IsHighlighted%2A> is `true`.</span></span>  
  
 [!code-xaml[ComboBoxSimple#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ComboBoxSimple/CSharp/Pane1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHighlightedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHighlightedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHighlightedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ComboBoxItem.IsHighlightedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHighlightedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHighlightedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHighlightedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ComboBoxItem.IsHighlightedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="47e11-132">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-132">Identifies the <see cref="P:System.Windows.Controls.ComboBoxItem.IsHighlighted" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="comboBoxItem.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent"><span data-ttu-id="47e11-133">Contenido antiguo.</span><span class="sxs-lookup"><span data-stu-id="47e11-133">Old content.</span></span></param>
        <param name="newContent"><span data-ttu-id="47e11-134">Contenido nuevo.</span><span class="sxs-lookup"><span data-stu-id="47e11-134">New content.</span></span></param>
        <summary><span data-ttu-id="47e11-135">Se le llama cuando cambia la propiedad <see cref="P:System.Windows.Controls.ContentControl.Content" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-135">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="comboBoxItem.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="47e11-136">Argumentos de eventos de entradas de teclado.</span><span class="sxs-lookup"><span data-stu-id="47e11-136">Keyboard input event arguments.</span></span></param>
        <summary><span data-ttu-id="47e11-137">Anuncia que el teclado tiene el foco en este elemento.</span><span class="sxs-lookup"><span data-stu-id="47e11-137">Announces that the keyboard is focused on this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="47e11-138">Proporciona datos para <see cref="T:System.Windows.Input.MouseEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-138">Provides data for <see cref="T:System.Windows.Input.MouseEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="47e11-139">Responde a un evento <see cref="E:System.Windows.UIElement.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-139">Responds to a <see cref="E:System.Windows.UIElement.MouseEnter" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="47e11-140">Proporciona datos para <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-140">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="47e11-141">Responde al evento <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-141">Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ComboBoxItem.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="comboBoxItem.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="47e11-142">Proporciona datos para <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-142">Provides data for <see cref="T:System.Windows.Input.MouseButtonEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="47e11-143">Responde al evento <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="47e11-143">Responds to the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
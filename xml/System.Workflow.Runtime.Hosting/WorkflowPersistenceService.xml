<Type Name="WorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cbc9cd683f0346f1532afdb1709c1ce11dec398" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51935422" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowPersistenceService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowPersistenceService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type WorkflowPersistenceService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="191fb-101">La clase base abstracta de la que se derivan todos los servicios de persistencia.</span><span class="sxs-lookup"><span data-stu-id="191fb-101">The abstract base class from which all persistence services are derived.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="191fb-102">Cuando se producen ciertas condiciones mientras el flujo de trabajo está en ejecución, el motor en tiempo de ejecución de flujo de trabajo conserva información de estado sobre la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-102">When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</span></span> <span data-ttu-id="191fb-103">Por ejemplo, la persistencia se puede producir cuando una transacción atómica finaliza, cuando la instancia de flujo de trabajo se vuelve inactiva, cuando el host llama <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> en la instancia de flujo de trabajo, o cuando una instancia de flujo de trabajo se finaliza o termina.</span><span class="sxs-lookup"><span data-stu-id="191fb-103">Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on the workflow instance, or when a workflow instance is terminated or finishes.</span></span> <span data-ttu-id="191fb-104">Cuando la semántica del motor en tiempo de ejecución de flujo de trabajo dicta que se debe producir la persistencia, el motor en tiempo de ejecución de flujo de trabajo llama a los métodos proporcionados por un servicio de persistencia para guardar información de estado sobre la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-104">When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</span></span> <span data-ttu-id="191fb-105">Igualmente, cuando el motor en tiempo de ejecución de flujo de trabajo necesita restaurar una instancia de flujo de trabajo previamente conservada, llama a los métodos proporcionados por el servicio de persistencia para cargar esta información de estado.</span><span class="sxs-lookup"><span data-stu-id="191fb-105">Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</span></span> <span data-ttu-id="191fb-106">El motor en tiempo de ejecución de flujo de trabajo administra toda la semántica relacionada con el momento de realizar la persistencia.</span><span class="sxs-lookup"><span data-stu-id="191fb-106">The workflow runtime engine handles all the semantics regarding when to perform persistence.</span></span> <span data-ttu-id="191fb-107">El servicio de persistencia administra el guardado y carga de la información de estado del flujo de trabajo a o de un almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-107">The persistence service handles actually saving and loading the workflow state information to or from a data store.</span></span>  
  
 <span data-ttu-id="191fb-108">Puede crear un servicio de persistencia derivando una clase de la clase <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>.</span><span class="sxs-lookup"><span data-stu-id="191fb-108">You can create a persistence service by deriving a class from the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="191fb-109">Puede agregar su servicio de persistencia al motor de tiempo de ejecución de flujo de trabajo llamando a <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> o realizando una entrada adecuada en el archivo de configuración de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="191fb-109">You can add your persistence service to the workflow runtime engine by calling <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> or by making an appropriate entry in the application configuration file.</span></span> <span data-ttu-id="191fb-110"><xref:System.Workflow.Runtime.WorkflowRuntime> debe contener solo uno servicio de persistencia.</span><span class="sxs-lookup"><span data-stu-id="191fb-110">The <xref:System.Workflow.Runtime.WorkflowRuntime> should only contain one persistence service.</span></span> <span data-ttu-id="191fb-111">Windows Workflow Foundation proporciona la clase <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>, un servicio de persistencia original que puede utilizar como es o ampliarlo.</span><span class="sxs-lookup"><span data-stu-id="191fb-111">Windows Workflow Foundation provides the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, an out-of-box persistence service, which you can use as is or extend.</span></span>  
  
 <span data-ttu-id="191fb-112">El motor en tiempo de ejecución de flujo de trabajo tiene la semántica para bloquear información de estado del flujo de trabajo para el uso en entornos donde los servicios de persistencia que funcionan en diferentes podrían tener acceso a un almacén de datos único.</span><span class="sxs-lookup"><span data-stu-id="191fb-112">The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</span></span> <span data-ttu-id="191fb-113">La clase <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> proporciona la capacidad para admitir esta funcionalidad del motor en tiempo de ejecución de flujo de trabajo proporcionando un parámetro a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> que especifica si la información de estado de una instancia de flujo de trabajo se debe desbloquear en el almacén de datos, y proporcionando un método <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> para desbloquear la información de estado del flujo de trabajo previamente bloqueada.</span><span class="sxs-lookup"><span data-stu-id="191fb-113">The <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> to unlock previously locked workflow state information.</span></span> <span data-ttu-id="191fb-114">En un servicio de persistencia que implementa el bloqueo, una llamada a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> debe bloquear la información de estado para una instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-114">In a persistence service that implements locking, a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> should lock the state information for a workflow instance.</span></span>  
  
 <span data-ttu-id="191fb-115">Su servicio de persistencia debe iniciar <xref:System.Workflow.Runtime.Hosting.PersistenceException> si no guarda información de estado en su almacén de datos o si carga información de estado de su almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-115">Your persistence service should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> if it fails to save state information to its data store or load state information from its data store.</span></span> <span data-ttu-id="191fb-116">El motor de tiempo de ejecución de flujo de trabajo espera este comportamiento.</span><span class="sxs-lookup"><span data-stu-id="191fb-116">The workflow runtime engine expects this behavior.</span></span>  
  
 <span data-ttu-id="191fb-117">Se proporciona un mecanismo por lotes a los servicios que utilizan un almacén duradero para guardar información de estado de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-117">A batching mechanism is provided for services that use a durable store to save workflow state information.</span></span> <span data-ttu-id="191fb-118">Es importante en estos casos mantener la coherencia entre el almacén duradero que usa el servicio de persistencia y el estado interno del motor de tiempo de ejecución de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-118">It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</span></span> <span data-ttu-id="191fb-119">Puede agregar funcionalidad definida por la interfaz <xref:System.Workflow.Runtime.IPendingWork> a su servicio y, a continuación, participar en procesamiento por lotes de transacción de flujo de trabajo proporcionado por <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> agregando los cambios a su almacén de datos como elementos de trabajo a <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span><span class="sxs-lookup"><span data-stu-id="191fb-119">You can add functionality defined by the <xref:System.Workflow.Runtime.IPendingWork> interface to your service, and then participate in workflow transaction batching provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> by adding changes to your data store as work items to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="191fb-120">El propio almacén duradero debe implementar la interfaz <xref:System.Transactions.IEnlistmentNotification>, para que la información del flujo de trabajo no se conserve incorrectamente en caso de una recuperación de la transacción.</span><span class="sxs-lookup"><span data-stu-id="191fb-120">The durable store itself should implement the <xref:System.Transactions.IEnlistmentNotification> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</span></span> <span data-ttu-id="191fb-121">Para obtener más información, vea <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> o <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span><span class="sxs-lookup"><span data-stu-id="191fb-121">For more information, see <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> or <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowPersistenceService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowPersistenceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="191fb-122">Cuando se implementa en una clase derivada, inicializa una instancia nueva de la clase <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />.</span><span class="sxs-lookup"><span data-stu-id="191fb-122">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="191fb-123">En el ejemplo siguiente se muestra cómo crear una instancia de la clase `SqlWorkflowPersistenceService` (derivada de `WorkflowPersistenceService`).</span><span class="sxs-lookup"><span data-stu-id="191fb-123">The following example demonstrates creating an instance of the `SqlWorkflowPersistenceService` class (derived from `WorkflowPersistenceService`).</span></span> <span data-ttu-id="191fb-124">Este ejemplo forma parte de la muestra de SDK de Controladores de excepciones anidados, de la clase Program.cs.</span><span class="sxs-lookup"><span data-stu-id="191fb-124">This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.</span></span>  <span data-ttu-id="191fb-125">Para obtener más información, consulte el [ejemplo de controladores de excepciones anidados](https://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span><span class="sxs-lookup"><span data-stu-id="191fb-125">For more information, see the [Nested Exception Handlers Sample](https://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span></span>  
  
 [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]
 [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig unsigned int8[] GetDefaultSerializedForm(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Byte&gt; ^ GetDefaultSerializedForm(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetDefaultSerializedForm : System.Workflow.ComponentModel.Activity -&gt; byte[]" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="191fb-126"><see cref="T:System.Workflow.ComponentModel.Activity" /> cuyo formulario serializado se solicita.</span><span class="sxs-lookup"><span data-stu-id="191fb-126">The <see cref="T:System.Workflow.ComponentModel.Activity" /> whose serialized form is requested.</span></span></param>
        <summary><span data-ttu-id="191fb-127">Recupera el formulario predeterminado serializado de <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="191fb-127">Retrieves the serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <returns><span data-ttu-id="191fb-128">El formulario predeterminado serializado de <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="191fb-128">The serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsBlocked">
      <MemberSignature Language="C#" Value="protected internal static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool GetIsBlocked(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetIsBlocked (rootActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool GetIsBlocked(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetIsBlocked : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="191fb-129">La actividad raíz de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-129">The root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="191fb-130">Indica si se bloquea la actividad determinada.</span><span class="sxs-lookup"><span data-stu-id="191fb-130">Indicates whether the given activity is blocked.</span></span></summary>
        <returns><span data-ttu-id="191fb-131"><see langword="true" /> si se bloquea la actividad determinada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="191fb-131"><see langword="true" /> if the given activity is blocked; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuspendOrTerminateInfo">
      <MemberSignature Language="C#" Value="protected internal static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig string GetSuspendOrTerminateInfo(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetSuspendOrTerminateInfo (rootActivity As Activity) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::String ^ GetSuspendOrTerminateInfo(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetSuspendOrTerminateInfo : System.Workflow.ComponentModel.Activity -&gt; string" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="191fb-132">La actividad raíz de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-132">The root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="191fb-133">Recupera la finalización o suspende la información de la actividad determinada.</span><span class="sxs-lookup"><span data-stu-id="191fb-133">Retrieves the termination or suspend information of the given activity.</span></span></summary>
        <returns><span data-ttu-id="191fb-134"><see cref="T:System.String" /> que contiene la finalización o suspende información.</span><span class="sxs-lookup"><span data-stu-id="191fb-134">A <see cref="T:System.String" /> that contains the termination or suspend information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowStatus">
      <MemberSignature Language="C#" Value="protected internal static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig valuetype System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetWorkflowStatus (rootActivity As Activity) As WorkflowStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::Workflow::Runtime::WorkflowStatus GetWorkflowStatus(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowStatus : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.Runtime.WorkflowStatus" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="191fb-135">La actividad raíz de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-135">The root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="191fb-136">Recupera el estado del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-136">Retrieves the status of the workflow.</span></span></summary>
        <returns><span data-ttu-id="191fb-137">Un <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> valor de enumeración que denota el estado del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-137">A <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> enumeration value that denotes the status of the workflow.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid scopeId, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadCompletedContextActivity (scopeId As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid scopeId, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="abstract member LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadCompletedContextActivity (scopeId, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="scopeId"><span data-ttu-id="191fb-138"><see cref="T:System.Guid" /> del ámbito completado.</span><span class="sxs-lookup"><span data-stu-id="191fb-138">The <see cref="T:System.Guid" /> of the completed scope.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="191fb-139"><see cref="T:System.Workflow.ComponentModel.Activity" /> que representa la actividad que incluye el ámbito completado.</span><span class="sxs-lookup"><span data-stu-id="191fb-139">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the activity that encloses the completed scope.</span></span></param>
        <summary><span data-ttu-id="191fb-140">Cuando se implementa en una clase derivada, se vuelve a cargar en la memoria el ámbito completado especificado.</span><span class="sxs-lookup"><span data-stu-id="191fb-140">When implemented in a derived class, loads the specified completed scope back into memory.</span></span></summary>
        <returns><span data-ttu-id="191fb-141"><see cref="T:System.Workflow.ComponentModel.Activity" /> que representa el ámbito completado.</span><span class="sxs-lookup"><span data-stu-id="191fb-141">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191fb-142">El motor en tiempo de ejecución de flujo de trabajo utiliza <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> para implementar la compensación.</span><span class="sxs-lookup"><span data-stu-id="191fb-142">The workflow runtime engine uses <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> to implement compensation.</span></span> <span data-ttu-id="191fb-143">Debe restaurar una copia idéntica del ámbito completado.</span><span class="sxs-lookup"><span data-stu-id="191fb-143">You must restore an identical copy of the completed scope.</span></span> <span data-ttu-id="191fb-144">Para ello, debe restaurar un <xref:System.IO.Stream> válido a partir de su representación del ámbito completado en el almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-144">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the completed scope in the data store.</span></span> <span data-ttu-id="191fb-145">A continuación, debe pasar <xref:System.IO.Stream> a uno de los métodos sobrecargados de <xref:System.Workflow.ComponentModel.Activity.Load%2A> para realizar la deserialización del ámbito.</span><span class="sxs-lookup"><span data-stu-id="191fb-145">Then you must pass this <xref:System.IO.Stream> to one of the overloaded methods of <xref:System.Workflow.ComponentModel.Activity.Load%2A> to perform deserialization of the scope.</span></span>  
  
 <span data-ttu-id="191fb-146">Si su servicio de persistencia no puede cargar el ámbito completado de su almacén de datos, debe iniciar <xref:System.Workflow.Runtime.Hosting.PersistenceException> con un mensaje adecuado.</span><span class="sxs-lookup"><span data-stu-id="191fb-146">If your persistence service cannot load the completed scope from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191fb-147">En el siguiente ejemplo se muestra una implementación del método `LoadCompletedContextActivity`.</span><span class="sxs-lookup"><span data-stu-id="191fb-147">The following example demonstrates an implementation of the `LoadCompletedContextActivity` method.</span></span> <span data-ttu-id="191fb-148">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="191fb-148">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="191fb-149">Para obtener más información, consulte [ejemplo de servicio de persistencia personalizado](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="191fb-149">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadWorkflowInstanceState (instanceId As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadWorkflowInstanceState instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId"><span data-ttu-id="191fb-150"><see cref="T:System.Guid" /> de la actividad raíz de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-150">The <see cref="T:System.Guid" /> of the root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="191fb-151">Cuando se implementa en una clase derivada, carga de nuevo en la memoria el estado especificado de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-151">When implemented in a derived class, loads the specified state of the workflow instance back into memory.</span></span></summary>
        <returns><span data-ttu-id="191fb-152"><see cref="T:System.Workflow.ComponentModel.Activity" /> que representa la actividad raíz de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-152">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191fb-153">Debe restaurar una copia idéntica de la actividad.</span><span class="sxs-lookup"><span data-stu-id="191fb-153">You must restore an identical copy of the activity.</span></span> <span data-ttu-id="191fb-154">Para ello, debe restaurar un <xref:System.IO.Stream> válido a partir de su representación de la instancia de flujo de trabajo en el almacén de datos; a continuación, debe pasar <xref:System.IO.Stream> a uno de los métodos <xref:System.Workflow.ComponentModel.Activity.Load%2A> sobrecargados para deserializar el estado de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-154">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the workflow instance in the data store; then you must pass this <xref:System.IO.Stream> to one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Load%2A> methods to deserialize the workflow instance state.</span></span> <span data-ttu-id="191fb-155">Si su servicio de persistencia no puede cargar el estado de la instancia de flujo de trabajo de su almacén de datos, debe iniciar <xref:System.Workflow.Runtime.Hosting.PersistenceException> con un mensaje adecuado.</span><span class="sxs-lookup"><span data-stu-id="191fb-155">If your persistence service cannot load the workflow instance state from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
 <span data-ttu-id="191fb-156">El motor en tiempo de ejecución de flujo de trabajo implementa la semántica del bloqueo para restringir el acceso a un estado de la instancia de flujo de trabajo guardado en un almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-156">The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</span></span> <span data-ttu-id="191fb-157">Los servicios de persistencia que se ejecutan en varios procesos pueden tener acceso a esto.</span><span class="sxs-lookup"><span data-stu-id="191fb-157">This can be accessed by persistence services that run in multiple processes.</span></span> <span data-ttu-id="191fb-158">Las semántica del bloqueo está diseñadas para evitar que los servicios de persistencia que se ejecutan en dos procesos diferentes se carguen a la misma instancia de flujo de trabajo al mismo tiempo en la memoria.</span><span class="sxs-lookup"><span data-stu-id="191fb-158">The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="191fb-159">Dependiendo del tipo de entorno que pueda admitir su servicio de persistencia, puede decidir si admitir esta funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="191fb-159">Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</span></span> <span data-ttu-id="191fb-160">Si decide admitir las semántica del bloqueo en tiempo de ejecución, y si otro proceso ha bloqueado previamente este estado de la instancia de flujo de trabajo, a continuación, debe iniciar <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span><span class="sxs-lookup"><span data-stu-id="191fb-160">If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="191fb-161">De lo contrario, debe bloquear el acceso al estado de instancia de flujo de trabajo en su almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-161">Otherwise, you should lock access to the workflow instance state in your data store.</span></span> <span data-ttu-id="191fb-162">Se puede desbloquear el estado de la instancia de flujo de trabajo mediante una llamada a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> o una llamada a <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> con el parámetro desbloqueado establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="191fb-162">The workflow instance state can be unlocked by a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> or a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> with the unlock parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191fb-163">En el siguiente ejemplo se muestra una implementación del método `LoadWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="191fb-163">The following example demonstrates an implementation of the `LoadWorkflowInstanceState` method.</span></span> <span data-ttu-id="191fb-164">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="191fb-164">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="191fb-165">Para obtener más información, consulte [ejemplo de servicio de persistencia personalizado](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="191fb-165">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#266](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#266)]
 [!code-vb[WF_Samples#266](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#266)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFromDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm(unsigned int8[] activityBytes, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RestoreFromDefaultSerializedForm (activityBytes As Byte(), outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Workflow::ComponentModel::Activity ^ RestoreFromDefaultSerializedForm(cli::array &lt;System::Byte&gt; ^ activityBytes, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="static member RestoreFromDefaultSerializedForm : byte[] * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm (activityBytes, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityBytes" Type="System.Byte[]" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activityBytes"><span data-ttu-id="191fb-166">El formulario predeterminado serializado de <see cref="T:System.Workflow.ComponentModel.Activity" />.</span><span class="sxs-lookup"><span data-stu-id="191fb-166">The serialized form of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></param>
        <param name="outerActivity"><span data-ttu-id="191fb-167">El <see cref="T:System.Workflow.ComponentModel.Activity" />exterior, que contiene <see cref="T:System.Workflow.ComponentModel.Activity" /> para restaurar.</span><span class="sxs-lookup"><span data-stu-id="191fb-167">The outer <see cref="T:System.Workflow.ComponentModel.Activity" />, containing the <see cref="T:System.Workflow.ComponentModel.Activity" /> to restore.</span></span></param>
        <summary><span data-ttu-id="191fb-168">Restaura <see cref="T:System.Workflow.ComponentModel.Activity" /> a partir de su formulario serializado.</span><span class="sxs-lookup"><span data-stu-id="191fb-168">Restores the <see cref="T:System.Workflow.ComponentModel.Activity" /> from its serialized form.</span></span></summary>
        <returns><span data-ttu-id="191fb-169">La clase <see cref="T:System.Workflow.ComponentModel.Activity" /> restaurada.</span><span class="sxs-lookup"><span data-stu-id="191fb-169">The restored <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="191fb-170">En el siguiente ejemplo se muestra una implementación del método `RestoreFromDefaultSerializedForm`.</span><span class="sxs-lookup"><span data-stu-id="191fb-170">The following example demonstrates an implementation of the `RestoreFromDefaultSerializedForm` method.</span></span> <span data-ttu-id="191fb-171">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="191fb-171">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="191fb-172">Para obtener más información, consulte [ejemplo de servicio de persistencia personalizado](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="191fb-172">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.SaveCompletedContextActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="191fb-173"><see cref="T:System.Workflow.ComponentModel.Activity" /> que representa el ámbito completado.</span><span class="sxs-lookup"><span data-stu-id="191fb-173">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></param>
        <summary><span data-ttu-id="191fb-174">Cuando se implementa en una clase derivada, guarda en la memoria el ámbito completado especificado.</span><span class="sxs-lookup"><span data-stu-id="191fb-174">When implemented in a derived class, saves the specified completed scope to a data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191fb-175">El motor en tiempo de ejecución de flujo de trabajo guarda el estado de las actividades del ámbito completadas para implementar la compensación.</span><span class="sxs-lookup"><span data-stu-id="191fb-175">The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</span></span> <span data-ttu-id="191fb-176">Debe llamar a uno de los métodos <xref:System.Workflow.ComponentModel.Activity.Save%2A> sobrecargados para serializar `activity` en <xref:System.IO.Stream>; a continuación, puede decidir procesar también <xref:System.IO.Stream> antes de escribirlo en su almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-176">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `activity` into a <xref:System.IO.Stream>; you may then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="191fb-177">Sin embargo, cuando el motor en tiempo de ejecución de flujo de trabajo llama <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, debe restaurar una copia idéntica de la actividad.</span><span class="sxs-lookup"><span data-stu-id="191fb-177">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, you must restore an identical copy of the activity.</span></span>  
  
 <span data-ttu-id="191fb-178">Debe poder asociar el ámbito completado a su instancia de flujo de trabajo envolvente para marcar el ámbito como innecesario en su almacén de datos cuando la instancia de flujo de trabajo termina o se finaliza.</span><span class="sxs-lookup"><span data-stu-id="191fb-178">You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</span></span> <span data-ttu-id="191fb-179">Por consiguiente, también debe guardar <xref:System.Guid> de la instancia de flujo de trabajo que está asociada al ámbito completado; esto se puede obtener de la propiedad <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> de <xref:System.Workflow.Runtime.WorkflowInstance> asociada a `activity`.</span><span class="sxs-lookup"><span data-stu-id="191fb-179">Therefore, you should also save the <xref:System.Guid> of the workflow instance that is associated with the completed scope; this can be obtained from the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property of the <xref:System.Workflow.Runtime.WorkflowInstance> associated with `activity`.</span></span>  
  
 <span data-ttu-id="191fb-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> toma <xref:System.Guid> del ámbito completado como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="191fb-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> takes the <xref:System.Guid> of the completed scope as a parameter.</span></span> <span data-ttu-id="191fb-181">Por consiguiente, también debe guardar la propiedad <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> asociada a `activity`.</span><span class="sxs-lookup"><span data-stu-id="191fb-181">Therefore, you must also save the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> property associated with `activity`.</span></span> <span data-ttu-id="191fb-182">Se puede hacer referencia a esta propiedad a través del campo <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> de `activity`.</span><span class="sxs-lookup"><span data-stu-id="191fb-182">This property can be referenced through the <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> field of `activity`.</span></span>  
  
 <span data-ttu-id="191fb-183">Si implementa un servicio de persistencia que utiliza un almacén duradero, para mantener la coherencia con el estado interno del motor en runtime del flujo de trabajo, debería participar en el procesamiento por lotes de las transacciones del flujo de trabajo para aplazar la escritura real a su almacén duradero hasta un punto de confirmación del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-183">If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="191fb-184">Para participar en procesamiento por lotes, agregue un elemento de trabajo a la propiedad <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> que representa los cambios pendientes en la base de datos e implemente la interfaz <xref:System.Workflow.Runtime.IPendingWork> en su servicio de persistencia.</span><span class="sxs-lookup"><span data-stu-id="191fb-184">To participate in batching, add a work item to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property that represents the pending changes to the database, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
 <span data-ttu-id="191fb-185">Si no puede guardar el ámbito completado en su almacén de datos, debe iniciar <xref:System.Workflow.Runtime.Hosting.PersistenceException> con un mensaje de error adecuado.</span><span class="sxs-lookup"><span data-stu-id="191fb-185">If you cannot save the completed scope to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191fb-186">En el siguiente ejemplo se muestra una implementación del método `SaveCompletedContextActivity`.</span><span class="sxs-lookup"><span data-stu-id="191fb-186">The following example demonstrates an implementation of the `SaveCompletedContextActivity` method.</span></span> <span data-ttu-id="191fb-187">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="191fb-187">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="191fb-188">Para obtener más información, consulte [ejemplo de servicio de persistencia personalizado](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="191fb-188">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#268](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#268)]
 [!code-vb[WF_Samples#268](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#268)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="abstract member SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="workflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="191fb-189">La actividad raíz de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-189">The root activity of the workflow instance.</span></span></param>
        <param name="unlock"><span data-ttu-id="191fb-190"><see langword="true" /> si no se debe bloquear la instancia de flujo de trabajo; <see langword="false" /> si se debe bloquear la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-190"><see langword="true" /> if the workflow instance should not be locked; <see langword="false" /> if the workflow instance should be locked.</span></span></param>
        <summary><span data-ttu-id="191fb-191">Cuando se implementa en una clase derivada, guarda el estado de la instancia de flujo de trabajo en un almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-191">When implemented in a derived class, saves the workflow instance state to a data store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191fb-192">Debe llamar a uno de los métodos <xref:System.Workflow.ComponentModel.Activity.Save%2A> sobrecargados para serializar `rootActivity` en <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="191fb-192">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `rootActivity` into a <xref:System.IO.Stream>.</span></span> <span data-ttu-id="191fb-193">A continuación, puede decidir procesar también <xref:System.IO.Stream> antes de escribirlo en su almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-193">You can then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="191fb-194">Sin embargo, cuando el motor en tiempo de ejecución de flujo de trabajo llama <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, debe restaurar una copia idéntica de la actividad raíz.</span><span class="sxs-lookup"><span data-stu-id="191fb-194">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, you must restore an identical copy of the root activity.</span></span> <span data-ttu-id="191fb-195">Si no puede guardar el estado de la instancia de flujo de trabajo en su almacén de datos, debe iniciar <xref:System.Workflow.Runtime.Hosting.PersistenceException> con un mensaje de error adecuado.</span><span class="sxs-lookup"><span data-stu-id="191fb-195">If you cannot save the workflow instance state to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
 <span data-ttu-id="191fb-196">El motor en tiempo de ejecución de flujo de trabajo proporciona la semántica del bloqueo para restringir el acceso a un estado de la instancia de flujo de trabajo guardado en el almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-196">The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</span></span> <span data-ttu-id="191fb-197">Los servicios de persistencia pueden tener acceso a esto ejecutándose en varios hosts y señalando al mismo almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-197">This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</span></span> <span data-ttu-id="191fb-198">La semántica del bloqueo está diseñada para evitar que los servicios de persistencia que se ejecutan en dos tiempos de ejecución de flujo de trabajo diferentes se carguen a la misma instancia de flujo de trabajo al mismo tiempo en la memoria.</span><span class="sxs-lookup"><span data-stu-id="191fb-198">The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="191fb-199">Dependiendo del tipo de entorno que pueda admitir su servicio de persistencia, puede decidir si admitir o no esta funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="191fb-199">Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</span></span> <span data-ttu-id="191fb-200">Si decide admitir las semántica del bloqueo en tiempo de ejecución, a continuación, si un servicio de persistencia intenta guardar un estado de la instancia de flujo de trabajo bloqueado previamente por otro servicio de persistencia, debe iniciar <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span><span class="sxs-lookup"><span data-stu-id="191fb-200">If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="191fb-201">Si `unlock` es `true`, debe desbloquear el acceso al estado de la instancia de flujo de trabajo después de guardarlo.</span><span class="sxs-lookup"><span data-stu-id="191fb-201">If `unlock` is `true`, you should unlock access to the workflow instance state after you save it.</span></span>  
  
 <span data-ttu-id="191fb-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> toma <xref:System.Guid> de la instancia de flujo de trabajo como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="191fb-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> takes the <xref:System.Guid> of the workflow instance as a parameter.</span></span> <span data-ttu-id="191fb-203">Por consiguiente, debe guardar este <xref:System.Guid>.</span><span class="sxs-lookup"><span data-stu-id="191fb-203">Therefore, you should save this <xref:System.Guid>.</span></span> <span data-ttu-id="191fb-204">También puede utilizar <xref:System.Guid> para asociar la instancia de flujo de trabajo a los estados guardados de sus ámbitos completados.</span><span class="sxs-lookup"><span data-stu-id="191fb-204">You can also use this <xref:System.Guid> to associate the workflow instance with the saved states of its completed scopes.</span></span> <span data-ttu-id="191fb-205">Debe hacer esto porque debe poder marcar estos ámbitos completados como innecesarios cuando se complete la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-205">You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</span></span>  
  
 <span data-ttu-id="191fb-206">El motor en tiempo de ejecución de flujo de trabajo llama <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> una hora final cuando la instancia de flujo de trabajo se completa o finaliza.</span><span class="sxs-lookup"><span data-stu-id="191fb-206">The workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> a final time when the workflow instance is completed or terminated.</span></span> <span data-ttu-id="191fb-207">Por consiguiente, si <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> es igual a <xref:System.Workflow.Runtime.WorkflowStatus.Completed> o <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, puede eliminar sin ningún riesgo la instancia de flujo de trabajo y todos sus ámbitos completados asociados a su almacén de datos.</span><span class="sxs-lookup"><span data-stu-id="191fb-207">Therefore, if <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> is equal to <xref:System.Workflow.Runtime.WorkflowStatus.Completed> or <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, you can safely delete the workflow instance and all its associated completed scopes from your data store.</span></span> <span data-ttu-id="191fb-208">Alternativamente, puede suscribir a <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> o los eventos <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> para determinar cuando está seguro para eliminar registros asociados a la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-208">Alternatively, you can subscribe to the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> or <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events to determine when it is safe to delete records associated with the workflow instance.</span></span> <span data-ttu-id="191fb-209">Si realmente elimina los registros de su almacén de datos depende de su implementación.</span><span class="sxs-lookup"><span data-stu-id="191fb-209">Whether you actually delete the records from your data store depends on your implementation.</span></span>  
  
 <span data-ttu-id="191fb-210">Si implementa un servicio de persistencia que utiliza un almacén duradero, a continuación, para mantener la coherencia con el estado interno del motor en tiempo de ejecución de flujo de trabajo, debe participar en procesamiento por lotes de transacción de flujo de trabajo para diferir la escritura real a su almacén duradero hasta un punto de confirmación de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-210">If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="191fb-211">Para participar en procesamiento por lotes, agregue un elemento de trabajo que represente los elementos pendientes en su almacén duradero a la propiedad <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>, e implemente la interfaz <xref:System.Workflow.Runtime.IPendingWork> en su servicio de persistencia.</span><span class="sxs-lookup"><span data-stu-id="191fb-211">To participate in batching, add a work item that represents the pending changes to your durable store to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191fb-212">En el siguiente ejemplo se muestra una implementación del método `SaveWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="191fb-212">The following example demonstrates an implementation of the `SaveWorkflowInstanceState` method.</span></span> <span data-ttu-id="191fb-213">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="191fb-213">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="191fb-214">Para obtener más información, consulte [ejemplo de servicio de persistencia personalizado](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="191fb-214">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#264](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#264)]
 [!code-vb[WF_Samples#264](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#264)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="workflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="191fb-215"><see cref="T:System.Workflow.ComponentModel.Activity" /> que representa el ámbito completado.</span><span class="sxs-lookup"><span data-stu-id="191fb-215">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span></span></param>
        <summary><span data-ttu-id="191fb-216">Determina si un flujo de trabajo se debe descargar cuando está inactivo.</span><span class="sxs-lookup"><span data-stu-id="191fb-216">Determines whether a workflow should be unloaded when idle.</span></span></summary>
        <returns><span data-ttu-id="191fb-217">Si es <see langword="true" />, el motor en tiempo de ejecución del flujo de trabajo descarga el flujo de trabajo especificado cuando esté inactivo.</span><span class="sxs-lookup"><span data-stu-id="191fb-217">If <see langword="true" />, the workflow runtime engine unloads the specified workflow when it becomes idle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="191fb-218">En el siguiente ejemplo se muestra una implementación del método `UnloadOnIdle`.</span><span class="sxs-lookup"><span data-stu-id="191fb-218">The following example demonstrates an implementation of the `UnloadOnIdle` method.</span></span> <span data-ttu-id="191fb-219">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="191fb-219">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="191fb-220">Para obtener más información, consulte [ejemplo de servicio de persistencia personalizado](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="191fb-220">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#270](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#270)]
 [!code-vb[WF_Samples#270](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#270)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="abstract member UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity"><span data-ttu-id="191fb-221">La actividad raíz de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-221">The root activity of the workflow instance.</span></span></param>
        <summary><span data-ttu-id="191fb-222">Cuando se invalida en una clase derivada, desbloquea el estado de la instancia de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="191fb-222">When overridden in a derived class, unlocks the workflow instance state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="191fb-223">Este método es abstracto, por lo que no contiene una implementación predeterminada bloqueo y desbloqueo.</span><span class="sxs-lookup"><span data-stu-id="191fb-223">This method is abstract, so it does not contain a default implementation on locking and unlocking.</span></span>  
  
 <span data-ttu-id="191fb-224">Cuando se implementa un servicio de persistencia personalizado, si desea implementar un esquema de bloqueo necesitará invalidar este método y proporcionar un mecanismo de bloqueo-desbloqueo en el método <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> basado en el valor del parámetro desbloqueado.</span><span class="sxs-lookup"><span data-stu-id="191fb-224">While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> method based on the value of the unlock parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="191fb-225">En el siguiente ejemplo se muestra una implementación del método `UnlockWorkflowInstanceState`.</span><span class="sxs-lookup"><span data-stu-id="191fb-225">The following example demonstrates an implementation of the `UnlockWorkflowInstanceState` method.</span></span> <span data-ttu-id="191fb-226">Este ejemplo pertenece a la muestra Servicio de persistencia personalizado, del archivo FilePersistenceService.cs.</span><span class="sxs-lookup"><span data-stu-id="191fb-226">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="191fb-227">Para obtener más información, consulte [ejemplo de servicio de persistencia personalizado](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span><span class="sxs-lookup"><span data-stu-id="191fb-227">For more information, see [Custom Persistence Service Sample](https://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#267](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#267)]
 [!code-vb[WF_Samples#267](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#267)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
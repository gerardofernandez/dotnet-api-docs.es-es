<Type Name="InvokePattern" FullName="System.Windows.Automation.InvokePattern">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d86538c09cbbca148dd90a69ae118a1278514392" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51886672" /></Metadata><TypeSignature Language="C#" Value="public class InvokePattern : System.Windows.Automation.BasePattern" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InvokePattern extends System.Windows.Automation.BasePattern" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.InvokePattern" />
  <TypeSignature Language="VB.NET" Value="Public Class InvokePattern&#xA;Inherits BasePattern" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvokePattern : System::Windows::Automation::BasePattern" />
  <TypeSignature Language="F#" Value="type InvokePattern = class&#xA;    inherit BasePattern" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationClient</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.BasePattern</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="2cdbc-101">Representa los controles que inician o realizan una única acción inequívoca y que no mantienen el estado cuando se activan.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-101">Represents controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdbc-102">Los controles admiten <xref:System.Windows.Automation.InvokePattern> si el mismo comportamiento no se expone a través de otro patrón de control.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-102">Controls support <xref:System.Windows.Automation.InvokePattern> if the same behavior is not exposed through another control pattern.</span></span> <span data-ttu-id="2cdbc-103">Por ejemplo, si la <xref:System.Windows.Automation.InvokePattern.Invoke%2A> método en un control realiza la misma acción que el <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> o <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> método, el control no admitirá <xref:System.Windows.Automation.InvokePattern>.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-103">For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control will not support <xref:System.Windows.Automation.InvokePattern>.</span></span>  
  
 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] <span data-ttu-id="2cdbc-104">los elementos que representan controles como casillas y botones de radio, que mantienen un estado, se admiten en su lugar <xref:System.Windows.Automation.TogglePattern> o <xref:System.Windows.Automation.SelectionItemPattern>.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-104">elements that represent controls such as check boxes and radio buttons, which maintain a state, instead support <xref:System.Windows.Automation.TogglePattern> or <xref:System.Windows.Automation.SelectionItemPattern>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Provider.IInvokeProvider" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="2cdbc-105">Información general acerca de los patrones de control de UI Automation</span><span class="sxs-lookup"><span data-stu-id="2cdbc-105">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-for-clients.md"><span data-ttu-id="2cdbc-106">Patrones de controles de UI Automation para clientes</span><span class="sxs-lookup"><span data-stu-id="2cdbc-106">UI Automation Control Patterns for Clients</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="2cdbc-107">Llamar a un control utilizando la UI Automation</span><span class="sxs-lookup"><span data-stu-id="2cdbc-107">Invoke a Control Using UI Automation</span></span></related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="2cdbc-108">Ejemplo de elemento de menú ExpandCollapsePattern y InvokePattern</span><span class="sxs-lookup"><span data-stu-id="2cdbc-108">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.InvokePattern.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="member this.Invoke : unit -&gt; unit" Usage="invokePattern.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2cdbc-109">Envía una solicitud para activar un control e iniciar su acción única e inequívoca.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-109">Sends a request to activate a control and initiate its single, unambiguous action.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdbc-110">Las llamadas a <xref:System.Windows.Automation.InvokePattern.Invoke%2A> debe volver inmediatamente sin bloquearse.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-110">Calls to <xref:System.Windows.Automation.InvokePattern.Invoke%2A> should return immediately without blocking.</span></span> <span data-ttu-id="2cdbc-111">Sin embargo, este comportamiento es totalmente dependiente de la [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] implementación del proveedor.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-111">However, this behavior is entirely dependent on the [!INCLUDE[TLA#tla_uiautomation](~/includes/tlasharptla-uiautomation-md.md)] provider implementation.</span></span> <span data-ttu-id="2cdbc-112">En escenarios donde una llamada a <xref:System.Windows.Automation.InvokePattern.Invoke%2A> provoca un problema de bloqueo (por ejemplo, un cuadro de diálogo modal) en otro subproceso auxiliar es posible que deba llamar al método.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-112">In scenarios where calling <xref:System.Windows.Automation.InvokePattern.Invoke%2A> causes a blocking issue (such as a modal dialog) a separate helper thread may be required to call the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cdbc-113">En el ejemplo siguiente una <xref:System.Windows.Automation.InvokePattern> se obtiene el patrón de control de un control y el <xref:System.Windows.Automation.InvokePattern.Invoke%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-113">In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.</span></span>  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2cdbc-114">El elemento no admite el patrón de control <see cref="T:System.Windows.Automation.InvokePattern" />, o está oculto o bloqueado.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-114">The element does not support the <see cref="T:System.Windows.Automation.InvokePattern" /> control pattern or is hidden or blocked.</span></span></exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException"><span data-ttu-id="2cdbc-115">El elemento no está habilitado.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-115">The element is not enabled.</span></span> <span data-ttu-id="2cdbc-116">Se puede generar si un proveedor de UI Automation implementó su propio control de la propiedad <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-116">Can be raised when a UI Automation provider has implemented its own handling of the <see cref="P:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled" /> property.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="2cdbc-117">Llamar a un control utilizando la UI Automation</span><span class="sxs-lookup"><span data-stu-id="2cdbc-117">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="2cdbc-118">Ejemplo de elemento de menú ExpandCollapsePattern y InvokePattern</span><span class="sxs-lookup"><span data-stu-id="2cdbc-118">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InvokedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationEvent InvokedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InvokedEvent As AutomationEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationEvent ^ InvokedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable InvokedEvent : System.Windows.Automation.AutomationEvent" Usage="System.Windows.Automation.InvokePattern.InvokedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdbc-119">Identifica el evento que se genera cuando se invoca o activa un control.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-119">Identifies the event raised when a control is invoked or activated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdbc-120">Este identificador se usa en las aplicaciones cliente de automatización de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-120">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="2cdbc-121">Proveedores de UI Automation deben usar el campo equivalente en <xref:System.Windows.Automation.InvokePatternIdentifiers>.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-121">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="2cdbc-122">El <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identificador se pasa como parámetro a <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-122">The <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier is passed as a parameter to <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cdbc-123">En el ejemplo siguiente, el controlador de eventos identifica el evento como un evento Invoked comparando el <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> en los argumentos de evento con el <xref:System.Windows.Automation.InvokePattern.InvokedEvent> campo identificador.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-123">In the following example, the event handler identifies the event as an Invoked event by comparing the <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in the event arguments with the <xref:System.Windows.Automation.InvokePattern.InvokedEvent> identifier field.</span></span>  
  
 [!code-csharp[UIAClient_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAClient_snip/CSharp/ClientForm.cs#101)]
 [!code-vb[UIAClient_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAClient_snip/VisualBasic/ClientForm.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="2cdbc-124">Llamar a un control utilizando la UI Automation</span><span class="sxs-lookup"><span data-stu-id="2cdbc-124">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="2cdbc-125">Ejemplo de elemento de menú ExpandCollapsePattern y InvokePattern</span><span class="sxs-lookup"><span data-stu-id="2cdbc-125">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.AutomationPattern Pattern;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.AutomationPattern Pattern" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.InvokePattern.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pattern As AutomationPattern " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::AutomationPattern ^ Pattern;" />
      <MemberSignature Language="F#" Value=" staticval mutable Pattern : System.Windows.Automation.AutomationPattern" Usage="System.Windows.Automation.InvokePattern.Pattern" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationClient</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2cdbc-126">Identifica el patrón de control <see cref="T:System.Windows.Automation.InvokePattern" />.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-126">Identifies the <see cref="T:System.Windows.Automation.InvokePattern" /> control pattern.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2cdbc-127">Este identificador se usa en las aplicaciones cliente de automatización de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-127">This identifier is used by UI Automation client applications.</span></span> <span data-ttu-id="2cdbc-128">Proveedores de UI Automation deben usar el campo equivalente en <xref:System.Windows.Automation.InvokePatternIdentifiers>.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-128">UI Automation providers should use the equivalent field in <xref:System.Windows.Automation.InvokePatternIdentifiers>.</span></span>  
  
 <span data-ttu-id="2cdbc-129">El identificador del patrón se pasa a métodos como <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> para recuperar el patrón de control de interés de especificado <xref:System.Windows.Automation.AutomationElement>.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-129">The pattern identifier is passed to methods such as <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> to retrieve the control pattern of interest from the specified <xref:System.Windows.Automation.AutomationElement>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2cdbc-130">En el ejemplo siguiente una <xref:System.Windows.Automation.InvokePattern> se obtiene el patrón de control de un control y el <xref:System.Windows.Automation.InvokePattern.Invoke%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="2cdbc-130">In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.</span></span>  
  
 [!code-csharp[UIAInvokePattern_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAInvokePattern_snip/CSharp/UIAInvokePattern_snippets.cs#101)]
 [!code-vb[UIAInvokePattern_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAInvokePattern_snip/VisualBasic/UIAInvokePattern_snippets.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5ee2de3f-256c-43ec-b64c-62ace91f9983"><span data-ttu-id="2cdbc-131">Llamar a un control utilizando la UI Automation</span><span class="sxs-lookup"><span data-stu-id="2cdbc-131">Invoke a Control Using UI Automation</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771636(v=vs.90)"><span data-ttu-id="2cdbc-132">Ejemplo de elemento de menú ExpandCollapsePattern y InvokePattern</span><span class="sxs-lookup"><span data-stu-id="2cdbc-132">InvokePattern and ExpandCollapsePattern Menu Item Sample</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
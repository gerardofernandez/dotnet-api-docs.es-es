<Type Name="HttpCookie" FullName="System.Web.HttpCookie">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c13078afd09510aa9edb156eb3b33c27af65ad3f" /><Meta Name="ms.sourcegitcommit" Value="ddce15914650a504a7399d539ac1f7cfed3c2caa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/07/2019" /><Meta Name="ms.locfileid" Value="66759318" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpCookie" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpCookie extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpCookie" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpCookie" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpCookie sealed" />
  <TypeSignature Language="F#" Value="type HttpCookie = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fa424-101">Proporciona un método con seguridad de tipos para crear y manipular cookies HTTP individuales.</span><span class="sxs-lookup"><span data-stu-id="fa424-101">Provides a type-safe way to create and manipulate individual HTTP cookies.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa424-102">La <xref:System.Web.HttpCookie> clase obtiene y establece las propiedades de cookies individuales.</span><span class="sxs-lookup"><span data-stu-id="fa424-102">The <xref:System.Web.HttpCookie> class gets and sets properties of individual cookies.</span></span> <span data-ttu-id="fa424-103">La <xref:System.Web.HttpCookieCollection> clase proporciona métodos para almacenar, recuperar y administrar varias cookies.</span><span class="sxs-lookup"><span data-stu-id="fa424-103">The <xref:System.Web.HttpCookieCollection> class provides methods to store, retrieve, and manage multiple cookies.</span></span>  
  
 <span data-ttu-id="fa424-104">ASP.NET incluye dos colecciones de cookies intrínseca.</span><span class="sxs-lookup"><span data-stu-id="fa424-104">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="fa424-105">La colección que tiene acceso a través del <xref:System.Web.HttpRequest.Cookies%2A> colección de la <xref:System.Web.HttpRequest> objeto contiene cookies transmitidas por el cliente al servidor en el `Cookie` encabezado.</span><span class="sxs-lookup"><span data-stu-id="fa424-105">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of the <xref:System.Web.HttpRequest> object contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="fa424-106">La colección que tiene acceso a través del <xref:System.Web.HttpResponse.Cookies%2A> colección de la <xref:System.Web.HttpResponse> objeto contiene nuevas cookies creadas en el servidor y transmite al cliente en el `Set-Cookie` encabezado de respuesta HTTP.</span><span class="sxs-lookup"><span data-stu-id="fa424-106">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of the <xref:System.Web.HttpResponse> object contains new cookies created on the server and transmitted to the client in the `Set-Cookie` HTTP response header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa424-107">El código siguiente muestra cómo comprobar una cookie denominada `DateCookieExample` en el <xref:System.Web.HttpRequest> objeto.</span><span class="sxs-lookup"><span data-stu-id="fa424-107">The following code example demonstrates how to check for a cookie named `DateCookieExample` in the <xref:System.Web.HttpRequest> object.</span></span> <span data-ttu-id="fa424-108">Si no se encuentra la cookie, se crea y agrega a la <xref:System.Web.HttpResponse> objeto.</span><span class="sxs-lookup"><span data-stu-id="fa424-108">If the cookie is not found, it is created and added to the <xref:System.Web.HttpResponse> object.</span></span> <span data-ttu-id="fa424-109">Se establece la cookie expire en 10 minutos.</span><span class="sxs-lookup"><span data-stu-id="fa424-109">The cookie is set to expire in 10 minutes.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpCookie/cs/HttpCookie.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpCookie/vb/HttpCookie.vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.HttpResponse" />
    <altmember cref="T:System.Web.HttpRequest" />
    <altmember cref="T:System.Web.HttpCookieCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fa424-110">Inicializa una nueva instancia de la clase <see cref="T:System.Web.HttpCookie" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-110">Initializes a new instance of the <see cref="T:System.Web.HttpCookie" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fa424-111">Nombre de la nueva cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-111">The name of the new cookie.</span></span></param>
        <summary><span data-ttu-id="fa424-112">Crea una nueva cookie y le asigna un nombre.</span><span class="sxs-lookup"><span data-stu-id="fa424-112">Creates and names a new cookie.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa424-113">En el ejemplo de código siguiente se crea y los nombres de una nueva cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-113">The following code example creates and names a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpCookie (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpCookie(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpCookie : string * string -&gt; System.Web.HttpCookie" Usage="new System.Web.HttpCookie (name, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="fa424-114">Nombre de la nueva cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-114">The name of the new cookie.</span></span></param>
        <param name="value"><span data-ttu-id="fa424-115">Valor de la nueva cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-115">The value of the new cookie.</span></span></param>
        <summary><span data-ttu-id="fa424-116">Crea una nueva cookie y le asigna un nombre y un valor.</span><span class="sxs-lookup"><span data-stu-id="fa424-116">Creates, names, and assigns a value to a new cookie.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa424-117">En el ejemplo de código siguiente se crea, nombres y establece el valor de una nueva cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-117">The following code example creates, names, and sets the value of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HttpCookie1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HttpCookie1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Domain">
      <MemberSignature Language="C#" Value="public string Domain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Domain" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Domain" />
      <MemberSignature Language="VB.NET" Value="Public Property Domain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Domain { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Domain : string with get, set" Usage="System.Web.HttpCookie.Domain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-118">Obtiene o establece el dominio al que se asociará la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-118">Gets or sets the domain to associate the cookie with.</span></span></summary>
        <value><span data-ttu-id="fa424-119">Nombre del dominio al que se asociará la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-119">The name of the domain to associate the cookie with.</span></span> <span data-ttu-id="fa424-120">El valor predeterminado es el dominio actual.</span><span class="sxs-lookup"><span data-stu-id="fa424-120">The default value is the current domain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa424-121">Establecer el `Domain` atributo limita la transmisión de la cookie a los clientes que soliciten un recurso desde ese dominio.</span><span class="sxs-lookup"><span data-stu-id="fa424-121">Setting the `Domain` attribute limits transmission of the cookie to clients requesting a resource from that domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa424-122">El ejemplo de código siguiente establece el dominio de la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-122">The following code example sets the cookie's domain.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Domain Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Domain Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Domain Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expires">
      <MemberSignature Language="C#" Value="public DateTime Expires { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Expires" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Expires" />
      <MemberSignature Language="VB.NET" Value="Public Property Expires As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime Expires { DateTime get(); void set(DateTime value); };" />
      <MemberSignature Language="F#" Value="member this.Expires : DateTime with get, set" Usage="System.Web.HttpCookie.Expires" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-123">Obtiene o establece la fecha y la hora de expiración de la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-123">Gets or sets the expiration date and time for the cookie.</span></span></summary>
        <value><span data-ttu-id="fa424-124">Hora (del cliente) en la que expira la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-124">The time of day (on the client) at which the cookie expires.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa424-125">El ejemplo de código siguiente establece la hora de expiración de la cookie en 10 minutos a la hora actual.</span><span class="sxs-lookup"><span data-stu-id="fa424-125">The following code example sets the expiration time of the cookie to 10 minutes from the current time.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Expires Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/CS/default.aspx#2)]
 [!code-vb[Classic HttpCookie.Expires Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Expires Example/VB/default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasKeys">
      <MemberSignature Language="C#" Value="public bool HasKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HasKeys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasKeys As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasKeys { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasKeys : bool" Usage="System.Web.HttpCookie.HasKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-126">Obtiene un valor que indica si una cookie tiene subclaves.</span><span class="sxs-lookup"><span data-stu-id="fa424-126">Gets a value indicating whether a cookie has subkeys.</span></span></summary>
        <value><span data-ttu-id="fa424-127">Es <see langword="true" /> si las cookies tienen subclaves; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-127"><see langword="true" /> if the cookie has subkeys, otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fa424-128">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-128">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa424-129">En el ejemplo de código siguiente se examina a cada miembro de una colección de cookies para varios valores.</span><span class="sxs-lookup"><span data-stu-id="fa424-129">The following code example examines each member of a cookie collection for multiple values.</span></span> <span data-ttu-id="fa424-130">Si una cookie <xref:System.Web.HttpCookie.HasKeys%2A> propiedad es `true`, que indica que varios valores están presentes, en este ejemplo copia los nombres de valor en una matriz de cadenas y los valores correspondientes en otra matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="fa424-130">If a cookie's <xref:System.Web.HttpCookie.HasKeys%2A> property is `true`, indicating that multiple values are present, this example copies the value names into one string array and the corresponding values into another string array.</span></span> <span data-ttu-id="fa424-131">Para obtener un ejemplo de cómo crear varios valores para una cookie, consulte <xref:System.Web.HttpCookie.Values%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa424-131">For an example of how to create multiple values for a cookie, see <xref:System.Web.HttpCookie.Values%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.HasKeys Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.HasKeys Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.NameValueCollection" />
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="HttpOnly">
      <MemberSignature Language="C#" Value="public bool HttpOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.HttpOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpOnly : bool with get, set" Usage="System.Web.HttpCookie.HttpOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-132">Obtiene o establece un valor que especifica si se puede obtener acceso a una cookie mediante script de cliente.</span><span class="sxs-lookup"><span data-stu-id="fa424-132">Gets or sets a value that specifies whether a cookie is accessible by client-side script.</span></span></summary>
        <value><span data-ttu-id="fa424-133">Es <see langword="true" /> si la cookie tiene el atributo <see langword="HttpOnly" /> y no se puede obtener acceso a la misma a través de un script de cliente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-133"><see langword="true" /> if the cookie has the <see langword="HttpOnly" /> attribute and cannot be accessed through a client-side script; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fa424-134">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-134">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa424-135">Versión de Microsoft Internet Explorer 6 Service Pack 1 y versiones posteriores admite una propiedad de la cookie, <xref:System.Web.HttpCookie.HttpOnly%2A>, que puede ayudar a mitigar las amenazas de scripting entre sitios que producen las cookies robadas.</span><span class="sxs-lookup"><span data-stu-id="fa424-135">Microsoft Internet Explorer version 6 Service Pack 1 and later supports a cookie property, <xref:System.Web.HttpCookie.HttpOnly%2A>, that can help mitigate cross-site scripting threats that result in stolen cookies.</span></span> <span data-ttu-id="fa424-136">Sustracción de cookies puede contener información confidencial que identifica el usuario para el sitio, como el ASP.NET sesión formularios o Id. de vale de autenticación y se puede reproducir el atacante para hacerse pasar por el usuario u obtener información confidencial.</span><span class="sxs-lookup"><span data-stu-id="fa424-136">Stolen cookies can contain sensitive information identifying the user to the site, such as the ASP.NET session ID or forms authentication ticket, and can be replayed by the attacker in order to masquerade as the user or obtain sensitive information.</span></span> <span data-ttu-id="fa424-137">Cuando un `HttpOnly` cookie se recibe un explorador compatible, no es accesible en el script del lado cliente.</span><span class="sxs-lookup"><span data-stu-id="fa424-137">When an `HttpOnly` cookie is received by a compliant browser, it is inaccessible to client-side script.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fa424-138">Establecer el <xref:System.Web.HttpCookie.HttpOnly%2A> propiedad `true` no impide que un atacante con acceso al canal de red acceder directamente a la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-138">Setting the <xref:System.Web.HttpCookie.HttpOnly%2A> property to `true` does not prevent an attacker with access to the network channel from accessing the cookie directly.</span></span> <span data-ttu-id="fa424-139">Considere el uso de capa de Sockets seguros (SSL) para ayudar a protegerse contra esto.</span><span class="sxs-lookup"><span data-stu-id="fa424-139">Consider using Secure Sockets Layer (SSL) to help protect against this.</span></span> <span data-ttu-id="fa424-140">Seguridad de la estación de trabajo también es importante, como un usuario malintencionado podría utilizar una ventana del explorador abierta o en un equipo que contiene las cookies persistentes para obtener acceso a un sitio Web con la identidad de un usuario legítimo.</span><span class="sxs-lookup"><span data-stu-id="fa424-140">Workstation security is also important, as a malicious user could use an open browser window or a computer containing persistent cookies to obtain access to a Web site with a legitimate user's identity.</span></span>  
  
 <span data-ttu-id="fa424-141">Para obtener más información sobre los posibles ataques y cómo puede ayudar a mitigar esta propiedad, vea [Mitigating Cross-site Scripting con Cookies sólo HTTP](https://go.microsoft.com/fwlink/?LinkId=41580).</span><span class="sxs-lookup"><span data-stu-id="fa424-141">For more information on possible attacks and how this property can help mitigate them, see [Mitigating Cross-site Scripting With HTTP-only Cookies](https://go.microsoft.com/fwlink/?LinkId=41580).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa424-142">En el ejemplo de código siguiente se muestra cómo escribir un `HttpOnly` cookie y muestra por qué no es accesible por el cliente a través de ECMAScript.</span><span class="sxs-lookup"><span data-stu-id="fa424-142">The following code example demonstrates how to write an `HttpOnly` cookie and shows how it is not accessible by the client through ECMAScript.</span></span>  
  
 [!code-aspx-csharp[HttpOnlyCookie#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpOnlyCookie/CS/httponlycookiecs.aspx#1)]
 [!code-aspx-vb[HttpOnlyCookie#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpOnlyCookie/vb/httponlycookievb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); void set(System::String ^ key, System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string with get, set" Usage="System.Web.HttpCookie.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="fa424-143">Clave (índice) del valor de la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-143">The key (index) of the cookie value.</span></span></param>
        <summary><span data-ttu-id="fa424-144">Obtiene un acceso directo a la propiedad <see cref="P:System.Web.HttpCookie.Values" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-144">Gets a shortcut to the <see cref="P:System.Web.HttpCookie.Values" /> property.</span></span> <span data-ttu-id="fa424-145">Se proporciona esta propiedad para que exista compatibilidad con versiones anteriores de las páginas Active Server (ASP).</span><span class="sxs-lookup"><span data-stu-id="fa424-145">This property is provided for compatibility with previous versions of Active Server Pages (ASP).</span></span></summary>
        <value><span data-ttu-id="fa424-146">Valor de la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-146">The cookie value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.HttpCookie.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-147">Obtiene o establece el nombre de una cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-147">Gets or sets the name of a cookie.</span></span></summary>
        <value><span data-ttu-id="fa424-148">El valor predeterminado es una referencia Null (<see langword="Nothing" /> en Visual Basic) a menos que el constructor especifique lo contrario.</span><span class="sxs-lookup"><span data-stu-id="fa424-148">The default value is a null reference (<see langword="Nothing" /> in Visual Basic) unless the constructor specifies otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa424-149">El ejemplo de código siguiente recibe una colección de cookies del cliente en el `Cookie` encabezado y recorre en bucle la colección en busca de una cookie con el nombre específico.</span><span class="sxs-lookup"><span data-stu-id="fa424-149">The following code example receives a cookie collection from the client in the `Cookie` header and loops through the collection looking for a cookie with the specific name.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Name Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Name Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.HttpCookie.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-150">Obtiene o establece la ruta de acceso virtual que se transmitirá con la cookie actual.</span><span class="sxs-lookup"><span data-stu-id="fa424-150">Gets or sets the virtual path to transmit with the current cookie.</span></span></summary>
        <value><span data-ttu-id="fa424-151">Ruta de acceso virtual que se transmitirá con la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-151">The virtual path to transmit with the cookie.</span></span> <span data-ttu-id="fa424-152">El valor predeterminado es <see langword="/" />, que es la raíz del servidor.</span><span class="sxs-lookup"><span data-stu-id="fa424-152">The default is <see langword="/" />, which is the server root.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="fa424-153">El <xref:System.Web.HttpCookie.Path%2A> propiedad amplía la <xref:System.Web.HttpCookie.Domain%2A> propiedad para describir completamente la dirección URL específica a la que se aplica la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-153">The <xref:System.Web.HttpCookie.Path%2A> property extends the <xref:System.Web.HttpCookie.Domain%2A> property to completely describe the specific URL to which the cookie applies.</span></span> <span data-ttu-id="fa424-154">Por ejemplo, en la dirección URL `http:/www.microsoft.com/asp`, el dominio es `www.microsoft.com` y la ruta de acceso es/ASP.</span><span class="sxs-lookup"><span data-stu-id="fa424-154">For example, in the URL `http:/www.microsoft.com/asp`, the domain is `www.microsoft.com` and the path is /asp.</span></span>
  
## Examples  
 <span data-ttu-id="fa424-155">El siguiente ejemplo de código establece la <xref:System.Web.HttpCookie.Path%2A> propiedad de una nueva cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-155">The following code example sets the <xref:System.Web.HttpCookie.Path%2A> property of a new cookie.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Path Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Path Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Path Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Path Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Domain" />
      </Docs>
    </Member>
    <Member MemberName="SameSite">
      <MemberSignature Language="C#" Value="public System.Web.SameSiteMode SameSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.SameSiteMode SameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.SameSite" />
      <MemberSignature Language="VB.NET" Value="Public Property SameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::SameSiteMode SameSite { System::Web::SameSiteMode get(); void set(System::Web::SameSiteMode value); };" />
      <MemberSignature Language="F#" Value="member this.SameSite : System.Web.SameSiteMode with get, set" Usage="System.Web.HttpCookie.SameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-156">Obtiene o establece el valor del atributo SameSite de la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-156">Gets or sets the value for the SameSite attribute of the cookie.</span></span></summary>
        <value><span data-ttu-id="fa424-157">Uno de los valores de enumeración que representa el modo de cumplimiento de la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-157">One of the enumeration values that represents the enforcement mode of the cookie.</span></span> <span data-ttu-id="fa424-158">Si la aplicación tiene como destino .NET Framework 4.7.2 o versiones posteriores, el valor predeterminado es <see cref="F:System.Web.SameSiteMode.Lax" />; de lo contrario, es <see cref="F:System.Web.SameSiteMode.None" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-158">If the application targets the .NET Framework 4.7.2 or later versions, the default value is <see cref="F:System.Web.SameSiteMode.Lax" />; otherwise, the default value is <see cref="F:System.Web.SameSiteMode.None" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="public bool Secure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Secure" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Secure" />
      <MemberSignature Language="VB.NET" Value="Public Property Secure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Secure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Secure : bool with get, set" Usage="System.Web.HttpCookie.Secure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-159">Obtiene o establece un valor que indica si se va a transmitir la cookie a través de Secure Sockets Layer (SSL), es decir, sólo a través de HTTPS.</span><span class="sxs-lookup"><span data-stu-id="fa424-159">Gets or sets a value indicating whether to transmit the cookie using Secure Sockets Layer (SSL)--that is, over HTTPS only.</span></span></summary>
        <value><span data-ttu-id="fa424-160">Es <see langword="true" /> para transmitir la cookie a través de una conexión SSL (HTTPS); en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-160"><see langword="true" /> to transmit the cookie over an SSL connection (HTTPS); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fa424-161">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa424-162">Para establecer la transmisión de cookies utilizando SSL para una aplicación completa, debe habilitarla en el archivo de configuración de la aplicación, Web.config, que reside en el directorio raíz de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="fa424-162">To set the transmission of cookies using SSL for an entire application, enable it in the application's configuration file, Web.config, which resides in the root directory of the application.</span></span> <span data-ttu-id="fa424-163">Para obtener más información, consulte [httpCookies Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span><span class="sxs-lookup"><span data-stu-id="fa424-163">For more information, see [httpCookies Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/74790718-bfa3-4935-bc9a-59c88797e08f).</span></span> <span data-ttu-id="fa424-164">Los valores establecen mediante programación utilizando la <xref:System.Web.HttpCookie.Secure%2A> propiedad invalidan los valores establecidos en el archivo Web.config.</span><span class="sxs-lookup"><span data-stu-id="fa424-164">Values set programmatically using the <xref:System.Web.HttpCookie.Secure%2A> property override values set in the Web.config file.</span></span>  
  
 <span data-ttu-id="fa424-165">Cuando se trabaja con información confidencial, se recomienda encarecidamente que utilice el protocolo HTTPS con cifrado SSL.</span><span class="sxs-lookup"><span data-stu-id="fa424-165">When dealing with sensitive information, it is strongly recommended that you use HTTPS protocol with SSL encryption.</span></span> <span data-ttu-id="fa424-166">SSL protege contra la alteración de datos (integridad de datos), protege la identidad del usuario (confidencialidad) y garantiza que los datos se originan en el cliente esperado (autenticación).</span><span class="sxs-lookup"><span data-stu-id="fa424-166">SSL protects against data being altered (data integrity), protects a user's identity (confidentiality), and assures that data originates from the expected client (authentication).</span></span> <span data-ttu-id="fa424-167">Para obtener más información sobre las ventajas del cifrado, vea [servicios criptográficos](~/docs/standard/security/cryptographic-services.md).</span><span class="sxs-lookup"><span data-stu-id="fa424-167">For more information on the benefits of encryption, see [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="fa424-168">Para obtener más información acerca de cómo configurar SSL en un servidor Web de Internet Information Services (IIS), consulte [configurar SSL en un servidor Web o un sitio Web](https://go.microsoft.com/fwlink/?LinkId=38553).</span><span class="sxs-lookup"><span data-stu-id="fa424-168">For more information about configuring SSL on an Internet Information Services (IIS) Web server, see [Configuring SSL on a Web Server or a Web Site](https://go.microsoft.com/fwlink/?LinkId=38553).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fa424-169">En el ejemplo de código siguiente se toma la acción si se establece la cookie para transmitir mediante SSL.</span><span class="sxs-lookup"><span data-stu-id="fa424-169">The following code example takes action if the cookie is set to transmit using SSL.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Secure Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Secure Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Secure Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e4289e6-d1b7-4e82-ab0d-e83e3b6063ed"><span data-ttu-id="fa424-170">Usar la capa de sockets seguros</span><span class="sxs-lookup"><span data-stu-id="fa424-170">Using Secure Sockets Layer</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Shareable">
      <MemberSignature Language="C#" Value="public bool Shareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shareable" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Shareable" />
      <MemberSignature Language="VB.NET" Value="Public Property Shareable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Shareable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Shareable : bool with get, set" Usage="System.Web.HttpCookie.Shareable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-171">Determina si la cookie puede participar en el almacenamiento en caché de los resultados.</span><span class="sxs-lookup"><span data-stu-id="fa424-171">Determines whether the cookie is allowed to participate in output caching.</span></span></summary>
        <value><span data-ttu-id="fa424-172"><see langword="true" /> para especificar que el almacenamiento en caché de salida no se suprimirá para una <see cref="T:System.Web.HttpResponse" /> especificada que contiene una o más cookies de salida; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-172"><see langword="true" /> to specify that output caching will not be suppressed for a give <see cref="T:System.Web.HttpResponse" /> containing one or more outbound cookies; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa424-173">Si un determinado <xref:System.Web.HttpResponse> contiene uno o más cookies de salida con <xref:System.Web.HttpCookie.Shareable%2A> está establecido en `false` (valor predeterminado), se suprimirán el almacenamiento en caché para la respuesta de salida.</span><span class="sxs-lookup"><span data-stu-id="fa424-173">If a given <xref:System.Web.HttpResponse> contains one or more outbound cookies with <xref:System.Web.HttpCookie.Shareable%2A> is set to `false` (the default value), output caching will be suppressed for the response.</span></span> <span data-ttu-id="fa424-174">Esto evita que las cookies que contienen información posiblemente sensible que se almacena en caché en la respuesta y envía a varios clientes.</span><span class="sxs-lookup"><span data-stu-id="fa424-174">This prevents cookies that contain potentially sensitive information from being cached in the response and sent to multiple clients.</span></span>  <span data-ttu-id="fa424-175">Para permitir una respuesta que contiene las cookies para almacenarse en caché, configure el almacenamiento en caché normalmente para la respuesta, como el uso de la `OutputCache` directiva o MVC [OutputCache] atributo y establecer todas las cookies de salida que <xref:System.Web.HttpCookie.Shareable%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="fa424-175">To allow a response containing cookies to be cached, configure caching normally for the response, such as using the `OutputCache` directive or MVC's [OutputCache] attribute, and set all outbound cookies to have <xref:System.Web.HttpCookie.Shareable%2A> set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string input, out System.Web.HttpCookie result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string input, [out] class System.Web.HttpCookie&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpCookie.TryParse(System.String,System.Web.HttpCookie@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (input As String, ByRef result As HttpCookie) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ input, [Runtime::InteropServices::Out] System::Web::HttpCookie ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Web.HttpCookie.TryParse (input, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="result" Type="System.Web.HttpCookie" RefType="out" Index="1" FrameworkAlternate="netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="fa424-176">Representación de cadena de una cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-176">The string representation of a cookie.</span></span></param>
        <param name="result"><span data-ttu-id="fa424-177">Si la conversión se realizó correctamente, contiene el valor <see cref="T:System.Web.HttpCookie" /> equivalente a la cookie contenida en <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-177">If the conversion succeeded, contains the <see cref="T:System.Web.HttpCookie" /> value equivalent to the cookie contained in <paramref name="input" />.</span></span> <span data-ttu-id="fa424-178">Si la conversión no se realizó correctamente, <paramref name="result" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-178">If the conversion failed, <paramref name="result" /> is <see langword="null" />.</span></span> <span data-ttu-id="fa424-179">Se produce un error en la conversión si el parámetro <paramref name="input" /> es <see langword="null" /> o está vacío o si no se puede determinar el nombre de una cookie de <paramref name="input" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-179">The conversion fails if the <paramref name="input" /> parameter is <see langword="null" /> or empty or if a cookie name can't be determined from <paramref name="input" />.</span></span> <span data-ttu-id="fa424-180">El método sobrescribe el valor de este parámetro; el parámetro se pasa por referencia y se establece en null tan pronto como se especifica el método.</span><span class="sxs-lookup"><span data-stu-id="fa424-180">This parameter's value is overwritten by the method; the parameter is passed by reference and set to null as soon as the method is entered.</span></span></param>
        <summary><span data-ttu-id="fa424-181">Convierte la representación de cadena especificada de una cookie en el objeto <see cref="T:System.Web.HttpCookie" /> equivalente y devuelve un valor que indica si la conversión se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="fa424-181">Converts the specified string representation of a cookie into its <see cref="T:System.Web.HttpCookie" /> equivalent and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="fa424-182"><see langword="true" /> si <paramref name="input" /> se convirtió correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fa424-182"><see langword="true" /> if <paramref name="input" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.HttpCookie.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-183">Obtiene o establece un valor de cookie individual.</span><span class="sxs-lookup"><span data-stu-id="fa424-183">Gets or sets an individual cookie value.</span></span></summary>
        <value><span data-ttu-id="fa424-184">Valor de la cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-184">The value of the cookie.</span></span> <span data-ttu-id="fa424-185">El valor predeterminado es una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fa424-185">The default value is a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa424-186">El ejemplo de código siguiente establece el valor de una cookie existente en "abc123".</span><span class="sxs-lookup"><span data-stu-id="fa424-186">The following code example sets the value of an existing cookie to "abc123".</span></span>  
  
 [!code-csharp[Classic HttpCookie.Value Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Value Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Value Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Value Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpCookie.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Values { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpCookie.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fa424-187">Obtiene una colección de pares de clave/valor que se incluyen en un solo objeto cookie.</span><span class="sxs-lookup"><span data-stu-id="fa424-187">Gets a collection of key/value pairs that are contained within a single cookie object.</span></span></summary>
        <value><span data-ttu-id="fa424-188">Colección de valores de cookies.</span><span class="sxs-lookup"><span data-stu-id="fa424-188">A collection of cookie values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fa424-189">En el ejemplo de código siguiente se crea una nueva cookie y se agrega varios valores.</span><span class="sxs-lookup"><span data-stu-id="fa424-189">The following code example creates a new cookie and adds several values to it.</span></span> <span data-ttu-id="fa424-190">Para obtener un ejemplo de cómo extraer varios valores de una cookie, consulte <xref:System.Web.HttpCookie.HasKeys%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa424-190">For an example of how to extract multiple values from one cookie, see <xref:System.Web.HttpCookie.HasKeys%2A>.</span></span>  
  
 [!code-csharp[Classic HttpCookie.Values Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpCookie.Values Example/CS/source.cs#1)]
 [!code-vb[Classic HttpCookie.Values Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpCookie.Values Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpCookie.Value" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="HttpRequest" FullName="System.Web.HttpRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f5e927b6dd4443feead33b37497ab93ccb239d7a" /><Meta Name="ms.sourcegitcommit" Value="c5fd6b431a16f0412349201a0e93a9eacddf4b35" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53393737" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="95e48-101">Permite a ASP.NET leer los valores HTTP enviados por un cliente durante una solicitud web.</span><span class="sxs-lookup"><span data-stu-id="95e48-101">Enables ASP.NET to read the HTTP values sent by a client during a Web request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-102">Los métodos y propiedades de la <xref:System.Web.HttpRequest> clase se exponen a través de la `Request` propiedades de la <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, y <xref:System.Web.UI.UserControl> clases.</span><span class="sxs-lookup"><span data-stu-id="95e48-102">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` properties of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 <span data-ttu-id="95e48-103">Para acceder a ellos desde el <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, o <xref:System.Web.HttpRequest.ServerVariables%2A> colecciones, puede escribir `Request["key"]`, tal y como se muestra en el ejemplo de la <xref:System.Web.HttpRequest.QueryString%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="95e48-103">To access data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections, you can write `Request["key"]`, as shown in the example for the <xref:System.Web.HttpRequest.QueryString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95e48-104">Compatibilidad con Unicode <xref:System.Web.HttpRequest> los miembros de clase requiere IIS versión 6.0 o posterior.</span><span class="sxs-lookup"><span data-stu-id="95e48-104">Unicode support for <xref:System.Web.HttpRequest> class members requires IIS version 6.0 or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-105">Los siguientes ejemplos de acceso del <xref:System.Web.HttpRequest> instancia para la solicitud actual mediante el uso de la <xref:System.Web.UI.Page.Request%2A> propiedad de la <xref:System.Web.UI.Page> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-105">The following examples access the <xref:System.Web.HttpRequest> instance for the current request by using the <xref:System.Web.UI.Page.Request%2A> property of the <xref:System.Web.UI.Page> class.</span></span>  
  
 <span data-ttu-id="95e48-106">Puede usar una sintaxis simplificada para tener acceso a datos desde el <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, o <xref:System.Web.HttpRequest.ServerVariables%2A> colecciones.</span><span class="sxs-lookup"><span data-stu-id="95e48-106">You can use simplified syntax for accessing data from the <xref:System.Web.HttpRequest.QueryString%2A>, <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Cookies%2A>, or <xref:System.Web.HttpRequest.ServerVariables%2A> collections.</span></span> <span data-ttu-id="95e48-107">Puede escribir `Request["key"]`.</span><span class="sxs-lookup"><span data-stu-id="95e48-107">You can write `Request["key"]`.</span></span>  
  
 <span data-ttu-id="95e48-108">El primer ejemplo muestra cómo recuperar un valor de cadena de consulta cuando se carga una página.</span><span class="sxs-lookup"><span data-stu-id="95e48-108">The first example shows how to retrieve a query string value when loading a page.</span></span>  
  
```csharp  
public partial class AddToCart : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        string rawId = Request["ProductID"];  
        int productId;  
        if (!String.IsNullOrEmpty(rawId) && int.TryParse(rawId, out productId))  
        {  
            using (ShoppingCartActions usersShoppingCart = new ShoppingCartActions())  
            {  
                usersShoppingCart.AddToCart(productId);  
            }  
        }  
        else  
        {  
            throw new Exception("Tried to call AddToCart.aspx without setting a ProductId.");  
        }  
        Response.Redirect("ShoppingCart.aspx");  
    }  
}  
```  
  
```vb  
Public Class AddToCart  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        Dim rawId = Request("ProductID")  
        Dim productId As Integer  
        If Not String.IsNullOrEmpty(rawId) And Integer.TryParse(rawId, productId) Then  
            Using usersShoppingCart As New ShoppingCartActions()  
                usersShoppingCart.AddToCart(productId)  
            End Using  
  
        Else  
            Throw New Exception("Tried to call AddToCart.aspx without setting a ProductId.")  
        End If  
        Response.Redirect("ShoppingCart.aspx")  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="95e48-109">El ejemplo siguiente muestra cómo comprobar si la solicitud está autenticada y recuperar la dirección URL sin procesar.</span><span class="sxs-lookup"><span data-stu-id="95e48-109">The next example shows how to check if the request is authenticated and retrieve the raw URL.</span></span>  
  
```csharp  
public partial class RestrictedPage : Page  
{  
    protected void Page_Load(object sender, EventArgs e)  
    {  
        if (!Request.IsAuthenticated)  
        {  
            var rawUrl = Request.RawUrl;  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl));  
        }  
    }  
}  
```  
  
```vb  
Public Class RestrictedPage  
    Inherits Page  
  
    Protected Sub Page_Load(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Load  
        If Not Request.IsAuthenticated Then  
            Dim rawUrl = Request.RawUrl  
            Response.Redirect("/Account/Login?ru=" + Server.HtmlEncode(rawUrl))  
        End If  
    End Sub  
End Class  
```  
  
 <span data-ttu-id="95e48-110">Un proyecto de sitio Web de Visual Studio con código fuente está disponible para este tema: [Descargar](https://go.microsoft.com/fwlink/?LinkID=191455).</span><span class="sxs-lookup"><span data-stu-id="95e48-110">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkID=191455).</span></span>  
  
 <span data-ttu-id="95e48-111">Este ejemplo se usa el <xref:System.IO.StreamWriter> clase para escribir los valores de varias <xref:System.Web.HttpRequest> propiedades a un archivo de la clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-111">This example uses the <xref:System.IO.StreamWriter> class to write the values of several <xref:System.Web.HttpRequest> class properties to a file.</span></span> <span data-ttu-id="95e48-112">Para las propiedades que son de tipo cadena, los valores son HTML codificado como se escriben en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-112">For properties that are of type string, the values are HTML encoded as they are written to the file.</span></span> <span data-ttu-id="95e48-113">Las propiedades que representan una colección se recorren, y cada par clave-valor que contienen se escribe en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-113">Properties that represent a collection are looped through, and each key/value pair that they contain is written to the file.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95e48-114">Este ejemplo tiene un cuadro de texto que acepta datos proporcionados por el usuario, lo que puede suponer una amenaza para la seguridad.</span><span class="sxs-lookup"><span data-stu-id="95e48-114">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="95e48-115">De forma predeterminada, ASP.NET Web Pages valida que los datos proporcionados por el usuario no incluyen elementos HTML ni de script.</span><span class="sxs-lookup"><span data-stu-id="95e48-115">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="95e48-116">Para más información, consulte [Información general sobre los ataques mediante scripts](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="95e48-116">For more information, see [Script Exploits Overview](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Sample1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Sample1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpRequest (string filename, string url, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, string url, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, url As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpRequest(System::String ^ filename, System::String ^ url, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="new System.Web.HttpRequest : string * string * string -&gt; System.Web.HttpRequest" Usage="new System.Web.HttpRequest (filename, url, queryString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="95e48-117">Nombre del archivo asociado a la solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-117">The name of the file associated with the request.</span></span></param>
        <param name="url"><span data-ttu-id="95e48-118">Información acerca de la dirección URL de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-118">The information regarding the URL of the current request.</span></span></param>
        <param name="queryString"><span data-ttu-id="95e48-119">Cadena de consulta completa enviada con la solicitud (todo lo que va después de <c>'?'</c>).</span><span class="sxs-lookup"><span data-stu-id="95e48-119">The entire query string sent with the request (everything after the <c>'?'</c>).</span></span></param>
        <summary><span data-ttu-id="95e48-120">Inicializa un objeto <see cref="T:System.Web.HttpRequest" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-120">Initializes an <see cref="T:System.Web.HttpRequest" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-121">No es necesario crear su propia instancia de la <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-121">You do not need to create your own instance of the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="95e48-122">Los métodos y propiedades de la <xref:System.Web.HttpRequest> clase se exponen a través de la `Request` propiedad de la <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, y <xref:System.Web.UI.UserControl> clases.</span><span class="sxs-lookup"><span data-stu-id="95e48-122">The methods and properties of the <xref:System.Web.HttpRequest> class are exposed through the `Request` property of the <xref:System.Web.HttpApplication>, <xref:System.Web.HttpContext>, <xref:System.Web.UI.Page>, and <xref:System.Web.UI.UserControl> classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpRequest.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95e48-123">Termina de manera forzosa la conexión TCP subyacente, lo que provoca el error de cualquier E/S pendiente.</span><span class="sxs-lookup"><span data-stu-id="95e48-123">Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</span></span> <span data-ttu-id="95e48-124">Podría usar este método en respuesta a un ataque de un cliente HTTP malintencionado.</span><span class="sxs-lookup"><span data-stu-id="95e48-124">You might use this method in response to an attack by a malicious HTTP client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-125">Este método es seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="95e48-125">This method is thread-safe.</span></span> <span data-ttu-id="95e48-126">Cualquier subproceso puede llamar a él en cualquier momento.</span><span class="sxs-lookup"><span data-stu-id="95e48-126">Any thread may call it at any time.</span></span>  
  
 <span data-ttu-id="95e48-127">Este método solo puede usarse en el modo integrado.</span><span class="sxs-lookup"><span data-stu-id="95e48-127">This method can only be used in integrated mode.</span></span> <span data-ttu-id="95e48-128">Si se invoca en el modo clásico, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="95e48-128">If you invoke it in classic mode, an exception is thrown.</span></span> <span data-ttu-id="95e48-129">Para determinar el modo de canalización, utilice <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span><span class="sxs-lookup"><span data-stu-id="95e48-129">To determine the pipeline mode, use <xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Web.HttpRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-130">Obtiene una matriz de cadenas de tipos accept MIME admitidos por el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-130">Gets a string array of client-supported MIME accept types.</span></span></summary>
        <value><span data-ttu-id="95e48-131">Matriz de cadenas de tipos accept MIME admitidos por el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-131">A string array of client-supported MIME accept types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-132">En el ejemplo de código siguiente se captura los diversos valores devueltos por la <xref:System.Web.HttpRequest.AcceptTypes%2A> propiedad en una variable de objeto y escribe el número y el nombre de cada valor a una línea independiente de la salida HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-132">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.AcceptTypes%2A> property into an object variable and writes the number and name of each valueto a separate line of HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.AcceptTypes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.AcceptTypes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnonymousID">
      <MemberSignature Language="C#" Value="public string AnonymousID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AnonymousID" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AnonymousID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnonymousID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AnonymousID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AnonymousID : string" Usage="System.Web.HttpRequest.AnonymousID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-133">Obtiene el identificador anónimo del usuario, si lo hay.</span><span class="sxs-lookup"><span data-stu-id="95e48-133">Gets the anonymous identifier for the user, if present.</span></span></summary>
        <value><span data-ttu-id="95e48-134">Cadena que representa el identificador anónimo de usuario actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-134">A string representing the current anonymous user identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-135">El <xref:System.Web.HttpRequest.AnonymousID%2A> propiedad asigna un identificador único de larga duración a un usuario no autenticado, que puede usarse para realizar un seguimiento del usuario o asignar propiedades de perfil a ese usuario sin almacenar los datos en un `Session` objeto.</span><span class="sxs-lookup"><span data-stu-id="95e48-135">The <xref:System.Web.HttpRequest.AnonymousID%2A> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a `Session` object.</span></span> <span data-ttu-id="95e48-136">De forma predeterminada, el <xref:System.Web.HttpRequest.AnonymousID%2A> se realiza el seguimiento de propiedad mediante una cookie, pero se puede establecer para usar el identificador URI cuando el <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> atributo en la sección de configuración de la identificación anónima está establecido en el <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, o <xref:System.Web.HttpCookieMode.AutoDetect> valor.</span><span class="sxs-lookup"><span data-stu-id="95e48-136">By default, the <xref:System.Web.HttpRequest.AnonymousID%2A> property is tracked using a cookie, but it can be set to use the URI when the <xref:System.Web.Configuration.SessionStateSection.Cookieless%2A> attribute in the anonymous identification configuration section is set to either the <xref:System.Web.HttpCookieMode.UseUri>, <xref:System.Web.HttpCookieMode.UseDeviceProfile>, or <xref:System.Web.HttpCookieMode.AutoDetect> value.</span></span> <span data-ttu-id="95e48-137">Debe borrar la cookie explícitamente si ya no desea que esté disponible, por ejemplo, cuando se autentica un usuario anónimo.</span><span class="sxs-lookup"><span data-stu-id="95e48-137">You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</span></span>  
  
 <span data-ttu-id="95e48-138">Identificación anónima se utiliza cuando es necesario para identificar las entidades que no se autentican y cuando se necesita autorización.</span><span class="sxs-lookup"><span data-stu-id="95e48-138">Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</span></span> <span data-ttu-id="95e48-139">Para obtener más información, consulte [anonymousIdentification Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span><span class="sxs-lookup"><span data-stu-id="95e48-139">For more information, see [anonymousIdentification Element (ASP.NET Settings Schema)](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100))</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-140">El ejemplo siguiente muestra cómo usar el <xref:System.Web.HttpRequest.AnonymousID%2A> propiedad controlando el <xref:System.Web.Security.AnonymousIdentificationModule.Creating> eventos en el archivo Global.asax.</span><span class="sxs-lookup"><span data-stu-id="95e48-140">The following example shows how to use the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="95e48-141">En este ejemplo tiene dos partes:</span><span class="sxs-lookup"><span data-stu-id="95e48-141">This example has two parts:</span></span>  
  
-   <span data-ttu-id="95e48-142">Un método en el archivo Global.asax que controla el <xref:System.Web.Security.AnonymousIdentificationModule.Creating> eventos.</span><span class="sxs-lookup"><span data-stu-id="95e48-142">A method in the Global.asax file that handles the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event.</span></span>  
  
-   <span data-ttu-id="95e48-143">Una página de formularios Web Forms.</span><span class="sxs-lookup"><span data-stu-id="95e48-143">A Web Forms page.</span></span>  
  
 <span data-ttu-id="95e48-144">La primera parte del ejemplo de código muestra cómo establecer el <xref:System.Web.HttpRequest.AnonymousID%2A> propiedad controlando el <xref:System.Web.Security.AnonymousIdentificationModule.Creating> eventos en el archivo Global.asax.</span><span class="sxs-lookup"><span data-stu-id="95e48-144">The first part of the code example shows how to set the <xref:System.Web.HttpRequest.AnonymousID%2A> property by handling the <xref:System.Web.Security.AnonymousIdentificationModule.Creating> event in the Global.asax file.</span></span> <span data-ttu-id="95e48-145">El método que se denomina `AnonymousIdentification_Creating` establece el <xref:System.Web.HttpRequest.AnonymousID%2A> propiedad cuando se crea un identificador anónimo.</span><span class="sxs-lookup"><span data-stu-id="95e48-145">The method that is named `AnonymousIdentification_Creating` sets the <xref:System.Web.HttpRequest.AnonymousID%2A> property when an anonymous ID is created.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/global_asax.cs#2)]
 [!code-vb[System.Web.HttpRequest_AnonymousID#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/global_asax.vb#2)]  
  
 <span data-ttu-id="95e48-146">La segunda parte del ejemplo de código muestra cómo mostrar el nuevo <xref:System.Web.HttpRequest.AnonymousID%2A> creado por el `AnonymousIdentification_Creating` controlador de eventos en el ejemplo anterior.</span><span class="sxs-lookup"><span data-stu-id="95e48-146">The second part of the code example shows how to display the new <xref:System.Web.HttpRequest.AnonymousID%2A> that is created by the `AnonymousIdentification_Creating` event handler in the preceding example.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/CS/anonid_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_AnonymousID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_AnonymousID/vb/anonid_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.IsAuthenticated" />
        <altmember cref="E:System.Web.Security.AnonymousIdentificationModule.Creating" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v=vs.100)"><span data-ttu-id="95e48-147">Elemento anonymousIdentification (Esquema de configuración de ASP.NET)</span><span class="sxs-lookup"><span data-stu-id="95e48-147">anonymousIdentification Element (ASP.NET Settings Schema)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string" Usage="System.Web.HttpRequest.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-148">Obtiene la ruta de acceso a la raíz virtual de la aplicación ASP.NET en el servidor.</span><span class="sxs-lookup"><span data-stu-id="95e48-148">Gets the ASP.NET application's virtual application root path on the server.</span></span></summary>
        <value><span data-ttu-id="95e48-149">Ruta de acceso virtual de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-149">The virtual path of the current application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-150">Utilice esta propiedad para construir una dirección URL relativa a la raíz de la aplicación desde una página o control de usuario Web que no está en el directorio raíz.</span><span class="sxs-lookup"><span data-stu-id="95e48-150">Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</span></span> <span data-ttu-id="95e48-151">Esto permite que las páginas y controles compartidos que existen en diferentes niveles de una estructura de directorios para utilizar el mismo código para vincular a recursos desde una ubicación fija en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="95e48-151">This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-152">En el ejemplo siguiente se usa el <xref:System.IO.StreamWriter.Write%2A> método para codificar en HTML y, a continuación, escribir el valor de la <xref:System.Web.HttpRequest.ApplicationPath%2A> propiedad a un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="95e48-152">The following example uses the <xref:System.IO.StreamWriter.Write%2A> method to HTML-encode and then write the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to a text file.</span></span> <span data-ttu-id="95e48-153">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-153">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span> <span data-ttu-id="95e48-154">Presupone la existencia de un <xref:System.IO.StreamWriter> objeto denominado `sw`.</span><span class="sxs-lookup"><span data-stu-id="95e48-154">It assumes the existence of a <xref:System.IO.StreamWriter> object named `sw`.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 <span data-ttu-id="95e48-155">En el ejemplo siguiente se usa el <xref:System.Web.HttpRequest.ApplicationPath%2A> propiedad para construir mediante programación una ruta de acceso a un recurso que se encuentra en una ubicación fija en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="95e48-155">The following example uses the <xref:System.Web.HttpRequest.ApplicationPath%2A> property to programmatically construct a path to a resource that is in a fixed location in the application.</span></span> <span data-ttu-id="95e48-156">No tiene la página que hace referencia a los recursos se encuentren en el mismo directorio que el recurso.</span><span class="sxs-lookup"><span data-stu-id="95e48-156">The page that references the resource does not have to be located in the same directory as the resource.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/ApplicationPath.aspx#2)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/ApplicationPath.aspx#2)]  
  
 <span data-ttu-id="95e48-157">Si ejecuta este ejemplo en una aplicación Web que se denomina WebSite1, `/WebSite1` se mostrará como el valor de la <xref:System.Web.HttpRequest.ApplicationPath%2A> propiedad y `/WebSite1/images/Image1.gif` se mostrará como la ruta de acceso completa de la imagen.</span><span class="sxs-lookup"><span data-stu-id="95e48-157">If you run this example in a Web application that is named WebSite1,  `/WebSite1` will be displayed as the value of the <xref:System.Web.HttpRequest.ApplicationPath%2A> property and `/WebSite1/images/Image1.gif` will be displayed as the complete path of the image.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppRelativeCurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string AppRelativeCurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppRelativeCurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AppRelativeCurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AppRelativeCurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-158">Obtiene la ruta de acceso virtual de la raíz de la aplicación y la convierte en relativa mediante la tilde (\~) para la raíz de la aplicación (como en "\~/page.aspx").</span><span class="sxs-lookup"><span data-stu-id="95e48-158">Gets the virtual path of the application root and makes it relative by using the tilde (\~) notation for the application root (as in "\~/page.aspx").</span></span></summary>
        <value><span data-ttu-id="95e48-159">Ruta de acceso virtual de la raíz de la aplicación para la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-159">The virtual path of the application root for the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-160">Utilice esta propiedad para proporcionar información de dirección URL que seguirá siendo la misma incluso si la aplicación cambie de ubicación.</span><span class="sxs-lookup"><span data-stu-id="95e48-160">Use this property to provide URL information that will stay the same even if the application changes location.</span></span> <span data-ttu-id="95e48-161">Esto permite que el mismo código de asignación de dirección URL que se usará en un entorno de prueba y en el entorno de implementación final, o que va a usar copias de las aplicaciones Web en diferentes dominios.</span><span class="sxs-lookup"><span data-stu-id="95e48-161">This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-162">En el ejemplo siguiente se usa el <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> propiedad para establecer la dirección URL de un <xref:System.Web.UI.WebControls.Image> control a una imagen en el mismo directorio que la página.</span><span class="sxs-lookup"><span data-stu-id="95e48-162">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to set the URL of an <xref:System.Web.UI.WebControls.Image> control to an image in the same directory as the page.</span></span> <span data-ttu-id="95e48-163">Ejecute esta página en diferentes niveles de una estructura de directorios para ver el resultado <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> los valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="95e48-163">Run this page at different levels of a directory structure to see the resulting <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property values.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/CS/AppRelativeCurrentExecutionPathCS.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.AppRelativeCurrentExecutionPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.AppRelativeCurrentExecutionPath/VB/AppRelativeCurrentExecutionPathVB.aspx#1)]  
  
 <span data-ttu-id="95e48-164">En el ejemplo siguiente se usa el <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> propiedad para establecer la ruta de acceso mediante programación a un recurso, en función de la ruta de acceso actual de la página.</span><span class="sxs-lookup"><span data-stu-id="95e48-164">The following example uses the <xref:System.Web.HttpRequest.AppRelativeCurrentExecutionFilePath%2A> property to programmatically set the path to a resource, based on the current path of the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/CS/apprelativecurrentexecutionfilepath.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.ApplicationPath#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.ApplicationPath/VB/apprelativecurrentexecutionfilepath.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinaryRead">
      <MemberSignature Language="C#" Value="public byte[] BinaryRead (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] BinaryRead(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.BinaryRead(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function BinaryRead (count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ BinaryRead(int count);" />
      <MemberSignature Language="F#" Value="member this.BinaryRead : int -&gt; byte[]" Usage="httpRequest.BinaryRead count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="95e48-165">Número de bytes que se va a leer.</span><span class="sxs-lookup"><span data-stu-id="95e48-165">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="95e48-166">Realiza una lectura binaria de un número de bytes especificado en el flujo de entrada actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-166">Performs a binary read of a specified number of bytes from the current input stream.</span></span></summary>
        <returns><span data-ttu-id="95e48-167">Matriz de bytes.</span><span class="sxs-lookup"><span data-stu-id="95e48-167">A byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-168">El <xref:System.Web.HttpRequest.BinaryRead%2A> método se proporciona por compatibilidad con ASP.</span><span class="sxs-lookup"><span data-stu-id="95e48-168">The <xref:System.Web.HttpRequest.BinaryRead%2A> method is provided for compatibility with ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="95e48-169"><paramref name="count" /> es 0.</span><span class="sxs-lookup"><span data-stu-id="95e48-169"><paramref name="count" /> is 0.</span></span>  
  
<span data-ttu-id="95e48-170">O bien</span><span class="sxs-lookup"><span data-stu-id="95e48-170">-or-</span></span> 
 <span data-ttu-id="95e48-171"><paramref name="count" /> es mayor que el número de bytes disponible.</span><span class="sxs-lookup"><span data-stu-id="95e48-171"><paramref name="count" /> is greater than the number of bytes available.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Browser">
      <MemberSignature Language="C#" Value="public System.Web.HttpBrowserCapabilities Browser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpBrowserCapabilities Browser" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Browser" />
      <MemberSignature Language="VB.NET" Value="Public Property Browser As HttpBrowserCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpBrowserCapabilities ^ Browser { System::Web::HttpBrowserCapabilities ^ get(); void set(System::Web::HttpBrowserCapabilities ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Browser : System.Web.HttpBrowserCapabilities with get, set" Usage="System.Web.HttpRequest.Browser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpBrowserCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-172">Obtiene o establece información acerca de las capacidades del explorador del cliente que realiza la solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-172">Gets or sets information about the requesting client's browser capabilities.</span></span></summary>
        <value><span data-ttu-id="95e48-173">Objeto <see cref="T:System.Web.HttpBrowserCapabilities" /> que enumera en una lista las capacidades del explorador del cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-173">An <see cref="T:System.Web.HttpBrowserCapabilities" /> object listing the capabilities of the client's browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-174">El siguiente ejemplo de código envía una lista de las capacidades del explorador al cliente en una página HTML.</span><span class="sxs-lookup"><span data-stu-id="95e48-174">The following code example sends a list of the browser's capabilities back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Browser Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Browser Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Browser Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.UserAgent" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f"><span data-ttu-id="95e48-175">Controles de servidor ASP.NET y las capacidades del explorador</span><span class="sxs-lookup"><span data-stu-id="95e48-175">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificate">
      <MemberSignature Language="C#" Value="public System.Web.HttpClientCertificate ClientCertificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpClientCertificate ClientCertificate" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificate As HttpClientCertificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpClientCertificate ^ ClientCertificate { System::Web::HttpClientCertificate ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificate : System.Web.HttpClientCertificate" Usage="System.Web.HttpRequest.ClientCertificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpClientCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-176">Obtiene el certificado de seguridad del cliente para la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-176">Gets the current request's client security certificate.</span></span></summary>
        <value><span data-ttu-id="95e48-177">Objeto <see cref="T:System.Web.HttpClientCertificate" /> que contiene información sobre la configuración del certificado de seguridad del cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-177">An <see cref="T:System.Web.HttpClientCertificate" /> object containing information about the client's security certificate settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-178">El siguiente ejemplo de código envía la configuración del certificado del cliente al cliente en una página HTML.</span><span class="sxs-lookup"><span data-stu-id="95e48-178">The following code example sends the client's certificate settings back to the client in an HTML page.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ClientCertificate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ClientCertificate Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding with get, set" Usage="System.Web.HttpRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-179">Obtiene o establece el juego de caracteres del cuerpo de la entidad.</span><span class="sxs-lookup"><span data-stu-id="95e48-179">Gets or sets the character set of the entity-body.</span></span></summary>
        <value><span data-ttu-id="95e48-180">Objeto <see cref="T:System.Text.Encoding" /> que representa el juego de caracteres del cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-180">An <see cref="T:System.Text.Encoding" /> object representing the client's character set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-181">Codificación de contenido predeterminada puede especificarse en el [globalización Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) de un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="95e48-181">Default content encoding can be specified in the [globalization Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) of a configuration file.</span></span> <span data-ttu-id="95e48-182">Si también se especifica la codificación del contenido por el cliente, se reemplaza la configuración predeterminada.</span><span class="sxs-lookup"><span data-stu-id="95e48-182">If content encoding is also specified by the client, the default configuration settings are overridden.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-183">En el ejemplo de código siguiente se asigna un valor que representa la descripción de la codificación de HTTP actual a una variable de cadena.</span><span class="sxs-lookup"><span data-stu-id="95e48-183">The following code example assigns a value representing the description of the current HTTP encoding to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentEncoding Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentEncoding Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpRequest.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-184">Especifica la longitud del contenido enviado por el cliente, en bytes.</span><span class="sxs-lookup"><span data-stu-id="95e48-184">Specifies the length, in bytes, of content sent by the client.</span></span></summary>
        <value><span data-ttu-id="95e48-185">Longitud, en bytes, del contenido enviado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-185">The length, in bytes, of content sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-186">En el ejemplo de código siguiente se asigna el valor que representa la longitud del contenido de la solicitud entrante a una variable entera.</span><span class="sxs-lookup"><span data-stu-id="95e48-186">The following code example assigns the value representing the content length of the incoming request to an integer variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentLength Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentLength Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.HttpRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-187">Obtiene o establece el tipo de contenido MIME de la solicitud entrante.</span><span class="sxs-lookup"><span data-stu-id="95e48-187">Gets or sets the MIME content type of the incoming request.</span></span></summary>
        <value><span data-ttu-id="95e48-188">Una cadena que representa el tipo de contenido MIME de la solicitud entrante, por ejemplo "text/html".</span><span class="sxs-lookup"><span data-stu-id="95e48-188">A string representing the MIME content type of the incoming request, for example, "text/html".</span></span> <span data-ttu-id="95e48-189">Otros tipos MIME comunes son "audio.wav", "image/gif" y "application/pdf".</span><span class="sxs-lookup"><span data-stu-id="95e48-189">Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-190">En el ejemplo de código siguiente se asigna el valor que representa el tipo de contenido de la solicitud entrante a una variable de cadena.</span><span class="sxs-lookup"><span data-stu-id="95e48-190">The following code example assigns the value representing the content type of the incoming request to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ContentType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="95e48-191">El ejemplo siguiente muestra el resultado que se puede producir este código.</span><span class="sxs-lookup"><span data-stu-id="95e48-191">The following example shows output that might be produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Web.HttpCookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpCookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As HttpCookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpCookieCollection ^ Cookies { System::Web::HttpCookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Web.HttpCookieCollection" Usage="System.Web.HttpRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-192">Obtiene una colección de cookies enviada por el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-192">Gets a collection of cookies sent by the client.</span></span></summary>
        <value><span data-ttu-id="95e48-193">Objeto <see cref="T:System.Web.HttpCookieCollection" /> que representa las variables de cookies del cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-193">An <see cref="T:System.Web.HttpCookieCollection" /> object representing the client's cookie variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-194">ASP.NET incluye dos colecciones de cookies intrínseca.</span><span class="sxs-lookup"><span data-stu-id="95e48-194">ASP.NET includes two intrinsic cookie collections.</span></span> <span data-ttu-id="95e48-195">La colección que tiene acceso a través del <xref:System.Web.HttpRequest.Cookies%2A> colección de <xref:System.Web.HttpRequest> contiene cookies transmitidas por el cliente al servidor en el `Cookie` encabezado.</span><span class="sxs-lookup"><span data-stu-id="95e48-195">The collection accessed through the <xref:System.Web.HttpRequest.Cookies%2A> collection of <xref:System.Web.HttpRequest> contains cookies transmitted by the client to the server in the `Cookie` header.</span></span> <span data-ttu-id="95e48-196">La colección que tiene acceso a través del <xref:System.Web.HttpResponse.Cookies%2A> colección de <xref:System.Web.HttpResponse> contiene nuevas cookies creadas en el servidor y transmite al cliente en el `Set-Cookie` encabezado.</span><span class="sxs-lookup"><span data-stu-id="95e48-196">The collection accessed through the <xref:System.Web.HttpResponse.Cookies%2A> collection of <xref:System.Web.HttpResponse> contains new cookies created on the server and transmitted to the client in the `Set-Cookie` header.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95e48-197">Después de agregar una cookie utilizando la <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> colección, la cookie está inmediatamente disponible en el <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> colección, incluso si no se ha enviado la respuesta al cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-197">After you add a cookie by using the <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=nameWithType> collection, the cookie is immediately available in the <xref:System.Web.HttpRequest.Cookies%2A?displayProperty=nameWithType> collection, even if the response has not been sent to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-198">El ejemplo de código siguiente recorre en bucle todas las cookies enviadas por el cliente y envía el nombre, fecha de expiración, el parámetro de seguridad y los valores de cada cookie a la salida HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-198">The following code example loops through all cookies sent by the client and sends the name, expiration date, security parameter, and values of each cookie to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Cookies Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Cookies Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Cookies Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePath">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePath : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-199">Obtiene la ruta de acceso virtual de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-199">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="95e48-200">Ruta de acceso virtual de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-200">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> Devuelve la ruta de acceso al controlador de la página actualmente en ejecución.</span><span class="sxs-lookup"><span data-stu-id="95e48-201"><xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> returns the file path to the currently executing page handler.</span></span> <span data-ttu-id="95e48-202">Para escenarios de redirección con <xref:System.Web.HttpServerUtility.Execute%2A> y <xref:System.Web.HttpServerUtility.Transfer%2A> métodos Esto significa que el <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propiedad devuelve la ruta de acceso a la página redirigida (página secundaria).</span><span class="sxs-lookup"><span data-stu-id="95e48-202">For redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A> methods this means that the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property returns the path to the page redirected to (child page).</span></span> <span data-ttu-id="95e48-203">Sin embargo, cuando el cliente se redirige a otra página, el <xref:System.Web.HttpRequest.FilePath%2A> propiedad devuelve la ruta de acceso a la página original.</span><span class="sxs-lookup"><span data-stu-id="95e48-203">However, when the client is redirected to another page, the <xref:System.Web.HttpRequest.FilePath%2A> property returns the path to the original page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-204">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-204">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-205">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-205">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="M:System.Web.HttpServerUtility.Execute(System.String)" />
        <altmember cref="M:System.Web.HttpServerUtility.Transfer(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CurrentExecutionFilePathExtension">
      <MemberSignature Language="C#" Value="public string CurrentExecutionFilePathExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentExecutionFilePathExtension" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentExecutionFilePathExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentExecutionFilePathExtension { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentExecutionFilePathExtension : string" Usage="System.Web.HttpRequest.CurrentExecutionFilePathExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-206">Obtiene la extensión del nombre de archivo que se especifica en la propiedad <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-206">Gets the extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></summary>
        <value><span data-ttu-id="95e48-207">Extensión del nombre de archivo que se especifica en la propiedad <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-207">The extension of the file name that is specified in the <see cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" /> property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="System.Web.HttpRequest.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-208">Obtiene la ruta de acceso virtual de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-208">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="95e48-209">Ruta de acceso virtual de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-209">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-210">El <xref:System.Web.HttpRequest.FilePath%2A> propiedad no incluye el <xref:System.Web.HttpRequest.PathInfo%2A> finalizador.</span><span class="sxs-lookup"><span data-stu-id="95e48-210">The <xref:System.Web.HttpRequest.FilePath%2A> property does not include the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="95e48-211">Por ejemplo, para la dirección URL http://www.contoso.com/virdir/page.html/tail, el <xref:System.Web.HttpRequest.FilePath%2A> valor es/virdir/page.HTML.</span><span class="sxs-lookup"><span data-stu-id="95e48-211">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.FilePath%2A> value is /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-212">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.FilePath%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-212">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.FilePath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-213">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-213">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
        <altmember cref="P:System.Web.HttpRequest.Path" />
      </Docs>
    </Member>
    <Member MemberName="Files">
      <MemberSignature Language="C#" Value="public System.Web.HttpFileCollection Files { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpFileCollection Files" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Files" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Files As HttpFileCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpFileCollection ^ Files { System::Web::HttpFileCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Files : System.Web.HttpFileCollection" Usage="System.Web.HttpRequest.Files" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpFileCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-214">Obtiene la colección de archivos cargada por el cliente, en formato MIME de varias partes.</span><span class="sxs-lookup"><span data-stu-id="95e48-214">Gets the collection of files uploaded by the client, in multipart MIME format.</span></span></summary>
        <value><span data-ttu-id="95e48-215">Objeto <see cref="T:System.Web.HttpFileCollection" /> que representa una colección de archivos cargados por el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-215">An <see cref="T:System.Web.HttpFileCollection" /> object representing a collection of files uploaded by the client.</span></span> <span data-ttu-id="95e48-216">Los elementos del objeto <see cref="T:System.Web.HttpFileCollection" /> son del tipo <see cref="T:System.Web.HttpPostedFile" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-216">The items of the <see cref="T:System.Web.HttpFileCollection" /> object are of type <see cref="T:System.Web.HttpPostedFile" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-217">La colección de archivos se rellena únicamente cuando la solicitud HTTP `Content-Type` valor es "multipart/form-data".</span><span class="sxs-lookup"><span data-stu-id="95e48-217">The file collection is populated only when the HTTP request `Content-Type` value is "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-218">El ejemplo de código siguiente muestra los nombres de todos los archivos en el <xref:System.Web.HttpRequest.Files%2A> colección.</span><span class="sxs-lookup"><span data-stu-id="95e48-218">The following code example displays the names of all files in the <xref:System.Web.HttpRequest.Files%2A> collection.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Files Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Files Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Files Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Files Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public System.IO.Stream Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Filter" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Filter { System::IO::Stream ^ get(); void set(System::IO::Stream ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Filter : System.IO.Stream with get, set" Usage="System.Web.HttpRequest.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-219">Obtiene o establece el filtro que se utilizará al leer el flujo de entrada actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-219">Gets or sets the filter to use when reading the current input stream.</span></span></summary>
        <value><span data-ttu-id="95e48-220">Objeto <see cref="T:System.IO.Stream" /> que se va a usar como filtro.</span><span class="sxs-lookup"><span data-stu-id="95e48-220">A <see cref="T:System.IO.Stream" /> object to be used as the filter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-221">El ejemplo de código siguiente crea dos nuevas clases `QQQ1` y `QQQ2` ese filtro el <xref:System.Web.HttpRequest.InputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="95e48-221">The following code example creates two new classes, `QQQ1` and `QQQ2` that filter the <xref:System.Web.HttpRequest.InputStream%2A>.</span></span> <span data-ttu-id="95e48-222">Coloque las clases en el archivo Global.asax en el directorio de la aplicación de ASP.NET para que se van a filtrar todas las entradas de todas las páginas Web ASP.NET en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="95e48-222">Put the classes into the Global.asax file in an ASP.NET application's directory so that all input for all ASP.NET Web pages in the application will be filtered.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Filter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/CS/systemwebhttprequestfilter.cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Filter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Filter/VB/systemwebhttprequestfilter.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="95e48-223">El valor de <see cref="T:System.IO.Stream" /> especificado no es válido.</span><span class="sxs-lookup"><span data-stu-id="95e48-223">The specified <see cref="T:System.IO.Stream" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Form { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Form" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Form" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Form As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Form { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-224">Obtiene una colección de variables de formulario.</span><span class="sxs-lookup"><span data-stu-id="95e48-224">Gets a collection of form variables.</span></span></summary>
        <value><span data-ttu-id="95e48-225">Objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> que representa una colección de variables de formulario.</span><span class="sxs-lookup"><span data-stu-id="95e48-225">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> representing a collection of form variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-226">El <xref:System.Web.HttpRequest.Form%2A> propiedad se rellena cuando la solicitud HTTP `Content-Type` valor es "application/x--www-form-urlencoded" o "multipart/form-data".</span><span class="sxs-lookup"><span data-stu-id="95e48-226">The <xref:System.Web.HttpRequest.Form%2A> property is populated when the HTTP request `Content-Type` value is either "application/x-www-form-urlencoded" or "multipart/form-data".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-227">El ejemplo siguiente muestra cómo se leen los valores de la colección de formulario enviada desde un explorador.</span><span class="sxs-lookup"><span data-stu-id="95e48-227">The following example shows how to read the values in the form collection posted from a browser.</span></span> <span data-ttu-id="95e48-228">Cada par nombre/valor de la colección representa un control en el formulario y su valor.</span><span class="sxs-lookup"><span data-stu-id="95e48-228">Each name/value pair in the collection represents a control in the form and its value.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Form Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Form Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferedInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferedInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferedInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferedInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferedInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferedInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferedInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferedInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95e48-229">Obtiene un objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de entidad HTTP entrante.</span><span class="sxs-lookup"><span data-stu-id="95e48-229">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="95e48-230">Objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada.</span><span class="sxs-lookup"><span data-stu-id="95e48-230">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-231">Este método es idéntico a <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> salvo que también copia los bytes que se leen en el almacenamiento interno que ASP.NET utiliza para rellenar el <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, y <xref:System.Web.HttpRequest.InputStream%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="95e48-231">This method is identical to <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <xref:System.Web.HttpRequest.Form%2A>, <xref:System.Web.HttpRequest.Files%2A>, and <xref:System.Web.HttpRequest.InputStream%2A> properties.</span></span> <span data-ttu-id="95e48-232">Dado que esta información se conserva, el código de nivel inferior, como las páginas de formularios ASP.NET Web Forms (archivos .aspx), se ejecutará correctamente.</span><span class="sxs-lookup"><span data-stu-id="95e48-232">Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</span></span> <span data-ttu-id="95e48-233">Esto no sucede así con el método <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A>.</span><span class="sxs-lookup"><span data-stu-id="95e48-233">This is not the case with the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="95e48-234">El cuerpo de la entidad de la solicitud ya se ha cargado y ha analizado.</span><span class="sxs-lookup"><span data-stu-id="95e48-234">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="95e48-235">Entre los ejemplos de propiedades que producen la carga y el análisis del cuerpo de la entidad se incluyen los siguientes:</span><span class="sxs-lookup"><span data-stu-id="95e48-235">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
<span data-ttu-id="95e48-236">-   La propiedad <see cref="P:System.Web.HttpRequest.Form" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-236">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
<span data-ttu-id="95e48-237">-   La propiedad <see cref="P:System.Web.HttpRequest.Files" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-237">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
<span data-ttu-id="95e48-238">-   La propiedad <see cref="P:System.Web.HttpRequest.InputStream" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-238">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
<span data-ttu-id="95e48-239">-   El método <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-239">-   The <see cref="M:System.Web.HttpRequest.GetBufferlessInputStream" /> method.</span></span>  
  
<span data-ttu-id="95e48-240">Para evitar esta excepción, llame primero al método <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-240">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="95e48-241">Esta excepción también se produce si el cliente se desconecta mientras se está leyendo el cuerpo de la entidad.</span><span class="sxs-lookup"><span data-stu-id="95e48-241">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBufferlessInputStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95e48-242">Obtiene un objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de entidad HTTP entrante.</span><span class="sxs-lookup"><span data-stu-id="95e48-242">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream();" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : unit -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95e48-243">Obtiene un objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de entidad HTTP entrante.</span><span class="sxs-lookup"><span data-stu-id="95e48-243">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></summary>
        <returns><span data-ttu-id="95e48-244">Objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada.</span><span class="sxs-lookup"><span data-stu-id="95e48-244">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-245">Este método proporciona una alternativa al uso de la <xref:System.Web.HttpRequest.InputStream%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="95e48-245">This method provides an alternative to using the <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span> <span data-ttu-id="95e48-246">El <xref:System.Web.HttpRequest.InputStream%2A> propiedad espera hasta que se ha recibido la solicitud antes de devolver un <xref:System.IO.Stream> objeto.</span><span class="sxs-lookup"><span data-stu-id="95e48-246">The <xref:System.Web.HttpRequest.InputStream%2A> property waits until the whole request has been received before it returns a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="95e48-247">En cambio, el <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> método devuelve el <xref:System.IO.Stream> objeto inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="95e48-247">In contrast, the <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method returns the <xref:System.IO.Stream> object immediately.</span></span> <span data-ttu-id="95e48-248">Puede usar el método para comenzar a procesar el cuerpo de la entidad antes de que el contenido completo del organismo se recibieron.</span><span class="sxs-lookup"><span data-stu-id="95e48-248">You can use the method to begin processing the entity body before the complete contents of the body have been received.</span></span>  
  
 <span data-ttu-id="95e48-249">El cuerpo de entidad (o como parte del mismo que se solicite y se ha recibido) se devuelve solo cuando se usa el objeto devuelto por este método para leer la secuencia, mediante una llamada a métodos, como el <xref:System.IO.Stream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95e48-249">The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <xref:System.IO.Stream.Read%2A> method.</span></span> <span data-ttu-id="95e48-250">Usar parámetros de la <xref:System.IO.Stream.Read%2A> método para especificar cuánto para leer el cuerpo de entidad.</span><span class="sxs-lookup"><span data-stu-id="95e48-250">You use parameters of the <xref:System.IO.Stream.Read%2A> method to specify how much of the entity body to read.</span></span>  
  
 <span data-ttu-id="95e48-251">La <xref:System.IO.Stream> objeto devuelto por ASP.NET de este método es compatible con métodos de lectura sincrónicos y asincrónicos.</span><span class="sxs-lookup"><span data-stu-id="95e48-251">The <xref:System.IO.Stream> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</span></span> <span data-ttu-id="95e48-252">El <xref:System.IO.Stream> objeto implementa tanto la <xref:System.IO.Stream.BeginRead%2A> y <xref:System.IO.Stream.EndRead%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="95e48-252">The <xref:System.IO.Stream> object implements both the <xref:System.IO.Stream.BeginRead%2A> and <xref:System.IO.Stream.EndRead%2A> methods.</span></span> <span data-ttu-id="95e48-253">Los métodos asincrónicos le permiten leer de forma asincrónica la entidad de solicitud en fragmentos, mientras que ASP.NET libera el subproceso actual entre cada iteración de un bucle de lectura asincrónico.</span><span class="sxs-lookup"><span data-stu-id="95e48-253">The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</span></span>  
  
 <span data-ttu-id="95e48-254">Este método puede ser útil si la solicitud está cargando un archivo grande y desea comenzar a tener acceso al contenido de archivo antes de que finalice la carga.</span><span class="sxs-lookup"><span data-stu-id="95e48-254">This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</span></span> <span data-ttu-id="95e48-255">Sin embargo, solo debe usar este método para escenarios donde desea ocupe todo el procesamiento del cuerpo de entidad.</span><span class="sxs-lookup"><span data-stu-id="95e48-255">However, you should only use this method for scenarios where you want to take over all processing of the entity body.</span></span> <span data-ttu-id="95e48-256">Esto significa que no se puede usar este método desde una página .aspx, porque en el momento en que se ejecuta una página .aspx, ya se ha leído el cuerpo de entidad.</span><span class="sxs-lookup"><span data-stu-id="95e48-256">This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="95e48-257">El cuerpo de la entidad de la solicitud ya se ha cargado y ha analizado.</span><span class="sxs-lookup"><span data-stu-id="95e48-257">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="95e48-258">Entre los ejemplos de propiedades que producen la carga y el análisis del cuerpo de la entidad se incluyen los siguientes:</span><span class="sxs-lookup"><span data-stu-id="95e48-258">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
-   <see cref="P:System.Web.HttpRequest.Form" />  
  
-   <see cref="P:System.Web.HttpRequest.InputStream" />  
  
-   <see cref="P:System.Web.HttpRequest.Files" />  
  
-   <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />  
  
<span data-ttu-id="95e48-259">Para evitar esta excepción, llame primero al método <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-259">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="95e48-260">Esta excepción también se produce si el cliente se desconecta mientras se está leyendo el cuerpo de la entidad.</span><span class="sxs-lookup"><span data-stu-id="95e48-260">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="GetBufferlessInputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetBufferlessInputStream (bool disableMaxRequestLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetBufferlessInputStream(bool disableMaxRequestLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.GetBufferlessInputStream(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBufferlessInputStream (disableMaxRequestLength As Boolean) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetBufferlessInputStream(bool disableMaxRequestLength);" />
      <MemberSignature Language="F#" Value="member this.GetBufferlessInputStream : bool -&gt; System.IO.Stream" Usage="httpRequest.GetBufferlessInputStream disableMaxRequestLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disableMaxRequestLength" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disableMaxRequestLength"><span data-ttu-id="95e48-261"><see langword="true" /> para deshabilitar el límite de longitud de la solicitud; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-261"><see langword="true" /> to disable the request-length limit; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="95e48-262">Obtiene un objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP entrante y deshabilita opcionalmente el límite de longitud de la solicitud que se establece en la propiedad <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-262">Gets a <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <see cref="P:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength" /> property.</span></span></summary>
        <returns><span data-ttu-id="95e48-263">Objeto <see cref="T:System.IO.Stream" /> que se puede usar para leer el cuerpo de la entidad HTTP de entrada.</span><span class="sxs-lookup"><span data-stu-id="95e48-263">A <see cref="T:System.IO.Stream" /> object that can be used to read the incoming HTTP entity body.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-264">Para obtener más información acerca de este método, consulte el <xref:System.Web.HttpRequest.GetBufferlessInputStream> de sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="95e48-264">For more information about this method, see the <xref:System.Web.HttpRequest.GetBufferlessInputStream> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="95e48-265">El cuerpo de la entidad de la solicitud ya se ha cargado y ha analizado.</span><span class="sxs-lookup"><span data-stu-id="95e48-265">The request's entity body has already been loaded and parsed.</span></span> <span data-ttu-id="95e48-266">Entre los ejemplos de propiedades que producen la carga y el análisis del cuerpo de la entidad se incluyen los siguientes:</span><span class="sxs-lookup"><span data-stu-id="95e48-266">Examples of properties that cause the entity body to be loaded and parsed include the following:</span></span> 
<span data-ttu-id="95e48-267">-   La propiedad <see cref="P:System.Web.HttpRequest.Form" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-267">-   The <see cref="P:System.Web.HttpRequest.Form" /> property.</span></span>  
  
<span data-ttu-id="95e48-268">-   La propiedad <see cref="P:System.Web.HttpRequest.Files" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-268">-   The <see cref="P:System.Web.HttpRequest.Files" /> property.</span></span>  
  
<span data-ttu-id="95e48-269">-   La propiedad <see cref="P:System.Web.HttpRequest.InputStream" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-269">-   The <see cref="P:System.Web.HttpRequest.InputStream" /> property.</span></span>  
  
<span data-ttu-id="95e48-270">-   El método <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-270">-   The <see cref="M:System.Web.HttpRequest.GetBufferedInputStream" /> method.</span></span>  
  
<span data-ttu-id="95e48-271">Para evitar esta excepción, llame primero al método <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-271">To avoid this exception, call the <see cref="P:System.Web.HttpRequest.ReadEntityBodyMode" /> method first.</span></span> <span data-ttu-id="95e48-272">Esta excepción también se produce si el cliente se desconecta mientras se está leyendo el cuerpo de la entidad.</span><span class="sxs-lookup"><span data-stu-id="95e48-272">This exception is also thrown if the client disconnects while the entity body is being read.</span></span></exception>
        <altmember cref="M:System.Web.HttpRequest.GetBufferedInputStream" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-273">Obtiene una colección de encabezados HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-273">Gets a collection of HTTP headers.</span></span></summary>
        <value><span data-ttu-id="95e48-274"><see cref="T:System.Collections.Specialized.NameValueCollection" /> de encabezados.</span><span class="sxs-lookup"><span data-stu-id="95e48-274">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of headers.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-275">Para obtener una lista de todos los encabezados posibles, consulte [campos de encabezado de solicitud](https://go.microsoft.com/fwlink/?LinkId=73147) en el sitio Web de W3C.</span><span class="sxs-lookup"><span data-stu-id="95e48-275">For a listing of all possible headers, see [Request Header Fields](https://go.microsoft.com/fwlink/?LinkId=73147) on the W3C Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-276">El ejemplo de código siguiente muestra los nombres y valores de todos los encabezados en la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-276">The following code example displays the names and values of all headers in the HTTP request.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Headers Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Headers Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Headers Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpChannelBinding">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ChannelBinding HttpChannelBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpChannelBinding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpChannelBinding As ChannelBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ChannelBinding ^ HttpChannelBinding { System::Security::Authentication::ExtendedProtection::ChannelBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpChannelBinding : System.Security.Authentication.ExtendedProtection.ChannelBinding" Usage="System.Web.HttpRequest.HttpChannelBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ChannelBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-277">Obtiene el objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> de la instancia de <see cref="T:System.Web.HttpWorkerRequest" /> actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-277">Gets the <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></summary>
        <value><span data-ttu-id="95e48-278">Objeto <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> de la instancia de <see cref="T:System.Web.HttpWorkerRequest" /> actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-278">The <see cref="T:System.Security.Authentication.ExtendedProtection.ChannelBinding" /> object of the current <see cref="T:System.Web.HttpWorkerRequest" /> instance.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="95e48-279">El objeto <see cref="T:System.Web.HttpWorkerRequest" /> actual no es un objeto <see langword="System.Web.Hosting.IIS7WorkerRequest" /> ni <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-279">The current <see cref="T:System.Web.HttpWorkerRequest" /> object is not a <see langword="System.Web.Hosting.IIS7WorkerRequest" /> object or a <see langword="System.Web.Hosting.ISAPIWorkerRequestInProc" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Web.HttpRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-280">Obtiene el método de transferencia de datos HTTP (como <see langword="GET" />, <see langword="POST" /> o <see langword="HEAD" />) que usa el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-280">Gets the HTTP data transfer method (such as <see langword="GET" />, <see langword="POST" />, or <see langword="HEAD" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="95e48-281">Método de transferencia de datos HTTP usado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-281">The HTTP data transfer method used by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-282">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.HttpMethod%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-282">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.HttpMethod%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-283">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-283">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 <span data-ttu-id="95e48-284">El ejemplo siguiente muestra la salida generada por este código.</span><span class="sxs-lookup"><span data-stu-id="95e48-284">The following example shows output that is produced by this code.</span></span>  
  
 `GET`  
  
 `127.0.0.1`  
  
 `127.0.0.1`  
  
 `GET`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-285">Obtiene el contenido del cuerpo de la entidad HTTP entrante.</span><span class="sxs-lookup"><span data-stu-id="95e48-285">Gets the contents of the incoming HTTP entity body.</span></span></summary>
        <value><span data-ttu-id="95e48-286">Objeto <see cref="T:System.IO.Stream" /> que representa el contenido del cuerpo de contenido HTTP entrante.</span><span class="sxs-lookup"><span data-stu-id="95e48-286">A <see cref="T:System.IO.Stream" /> object representing the contents of the incoming HTTP content body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-287">En el ejemplo de código siguiente se copia el contenido de un <xref:System.Web.HttpRequest.InputStream%2A> en una cadena.</span><span class="sxs-lookup"><span data-stu-id="95e48-287">The following code example copies the contents of an <xref:System.Web.HttpRequest.InputStream%2A> into a string.</span></span>  
  
 [!code-csharp[Classic HttpRequest.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/cs/source.aspx#1)]
 [!code-vb[Classic HttpRequest.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertEntityBody">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95e48-288">Proporciona un contenedor administrado para el método de IIS que inserta el cuerpo de una entidad de solicitud HTTP en la memoria.</span><span class="sxs-lookup"><span data-stu-id="95e48-288">Provides a managed wrapper for the IIS method that inserts an HTTP request entity body into memory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-289">El <xref:System.Web.HttpRequest.InsertEntityBody%2A> sobrecargas del método proporcionan acceso administrado a las 7 de IIS `IHttpRequest::InsertEntityBody` método.</span><span class="sxs-lookup"><span data-stu-id="95e48-289">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads provide managed access to the IIS 7 `IHttpRequest::InsertEntityBody` method.</span></span> <span data-ttu-id="95e48-290">El método de IIS, inserta un cuerpo de entidad de solicitud HTTP (es decir, los datos que se registran un cliente) en la memoria.</span><span class="sxs-lookup"><span data-stu-id="95e48-290">The IIS method inserts an HTTP request entity body (the data that is posted by a client) into memory.</span></span> <span data-ttu-id="95e48-291">Esto es útil porque IIS no mantiene una copia de la entidad de solicitud después de que se ha leído.</span><span class="sxs-lookup"><span data-stu-id="95e48-291">This is useful because IIS does not maintain a copy of the request entity after it has been read.</span></span> <span data-ttu-id="95e48-292">El <xref:System.Web.HttpRequest.InsertEntityBody%2A> métodos crean una copia de los datos de entidad de solicitud HTTP y ponerlo a disposición de IIS para el control personalizado adicional.</span><span class="sxs-lookup"><span data-stu-id="95e48-292">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> methods create a copy of the HTTP request entity data and make it available to IIS for additional custom handling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="95e48-293">El <xref:System.Web.HttpRequest.InsertEntityBody%2A> sobrecargas del método funcionan únicamente en IIS 7.0 o posterior, porque el `IHttpRequest::InsertEntityBody` método se agregó en IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="95e48-293">The <xref:System.Web.HttpRequest.InsertEntityBody%2A> method overloads work only on IIS 7.0 or later, because the `IHttpRequest::InsertEntityBody` method was added in IIS 7.0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody();" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : unit -&gt; unit" Usage="httpRequest.InsertEntityBody " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95e48-294">Proporciona a IIS una copia del cuerpo de la entidad de solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-294">Provides IIS with a copy of the HTTP request entity body.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-295">IIS no mantiene una copia de la solicitud después de que se ha leído.</span><span class="sxs-lookup"><span data-stu-id="95e48-295">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="95e48-296">Por lo tanto, se recomienda que solo el controlador para una solicitud HTTP debe leer la entidad de solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-296">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="95e48-297">El <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> sobrecarga del método proporciona a IIS una copia de la entidad de solicitud si previamente se obtuvo por ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="95e48-297">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</span></span> <span data-ttu-id="95e48-298">Esta sobrecarga del método es útil para los casos donde ASP.NET ha leído la solicitud de la entidad y desea volver a usar los datos de solicitud existente.</span><span class="sxs-lookup"><span data-stu-id="95e48-298">This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="95e48-299">El método se invocó en una versión de IIS anterior a IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="95e48-299">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="95e48-300">para trabajar en un entorno hospedado.</span><span class="sxs-lookup"><span data-stu-id="95e48-300">For operating in a hosted environment.</span></span> <span data-ttu-id="95e48-301">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-301">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="95e48-302">Enumeración asociada: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="95e48-302">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="InsertEntityBody">
      <MemberSignature Language="C#" Value="public void InsertEntityBody (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertEntityBody(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.InsertEntityBody(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertEntityBody (buffer As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertEntityBody(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.InsertEntityBody : byte[] * int * int -&gt; unit" Usage="httpRequest.InsertEntityBody (buffer, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="95e48-303">Matriz que contiene los datos de la entidad de solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-303">An array that contains the request entity data.</span></span></param>
        <param name="offset"><span data-ttu-id="95e48-304">Posición de base cero en <paramref name="buffer" /> donde se comienzan a almacenar los datos de la entidad de solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-304">The zero-based position in <paramref name="buffer" /> at which to begin storing the request entity data.</span></span></param>
        <param name="count"><span data-ttu-id="95e48-305">Número de bytes que se van a leer en la matriz <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-305">The number of bytes to read into the <paramref name="buffer" /> array.</span></span></param>
        <summary><span data-ttu-id="95e48-306">Proporciona a IIS una copia del cuerpo de la entidad de solicitud HTTP e información sobre el objeto entidad de solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-306">Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-307">IIS no mantiene una copia de la solicitud después de que se ha leído.</span><span class="sxs-lookup"><span data-stu-id="95e48-307">IIS does not maintain a copy of the request after it has been read.</span></span> <span data-ttu-id="95e48-308">Por lo tanto, se recomienda que solo el controlador para una solicitud HTTP debe leer la entidad de solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-308">Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</span></span>  
  
 <span data-ttu-id="95e48-309">El <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> sobrecarga del método es útil cuando desea realizar el procesamiento personalizado, como la inserción de un cuerpo de entidad diferente en la memoria.</span><span class="sxs-lookup"><span data-stu-id="95e48-309">The <xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=nameWithType> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="95e48-310">El método se invocó en una versión de IIS anterior a IIS 7.0.</span><span class="sxs-lookup"><span data-stu-id="95e48-310">The method was invoked on a version of IIS earlier than IIS 7.0.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="95e48-311">El valor de <paramref name="buffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-311"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="95e48-312">El valor de <paramref name="offset" /> o <paramref name="count" /> es negativo.</span><span class="sxs-lookup"><span data-stu-id="95e48-312"><paramref name="offset" /> or <paramref name="count" /> is a negative value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="95e48-313">El número de elementos de <paramref name="count" /> es mayor que el espacio disponible en <paramref name="buffer" />, especificado el valor <paramref name="offset" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-313">The number of items in <paramref name="count" /> is larger than the available space in <paramref name="buffer" />, given the <paramref name="offset" /> value.</span></span></exception>
        <permission cref="T:System.Web.AspNetHostingPermission"><span data-ttu-id="95e48-314">para trabajar en un entorno hospedado.</span><span class="sxs-lookup"><span data-stu-id="95e48-314">for operating in a hosted environment.</span></span> <span data-ttu-id="95e48-315">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-315">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="95e48-316">Enumeración asociada: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span><span class="sxs-lookup"><span data-stu-id="95e48-316">Associated enumeration: <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.HttpRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-317">Obtiene un valor que indica si la solicitud se autenticó.</span><span class="sxs-lookup"><span data-stu-id="95e48-317">Gets a value indicating whether the request has been authenticated.</span></span></summary>
        <value><span data-ttu-id="95e48-318"><see langword="true" /> si se ha autenticado la solicitud; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-318"><see langword="true" /> if the request is authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-319">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpRequest.IsAuthenticated%2A> propiedad para determinar si se ha autenticado la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-319">The following code example uses the <xref:System.Web.HttpRequest.IsAuthenticated%2A> property to determine whether the current request has been authenticated.</span></span> <span data-ttu-id="95e48-320">Si no se ha autenticado, la solicitud se redirige a otra página donde los usuarios pueden escribir sus credenciales en la aplicación Web.</span><span class="sxs-lookup"><span data-stu-id="95e48-320">If it has not been authenticated, the request is redirected to another page where users can enter their credentials into the Web application.</span></span> <span data-ttu-id="95e48-321">Se trata de una técnica común que se utiliza en la página predeterminada para una aplicación.</span><span class="sxs-lookup"><span data-stu-id="95e48-321">This is a common technique used in the default page for an application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/CS/isauthenticatedcs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample3/VB/isauthenticatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Web.HttpRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-322">Obtiene un valor que indica si la solicitud es del equipo local.</span><span class="sxs-lookup"><span data-stu-id="95e48-322">Gets a value indicating whether the request is from the local computer.</span></span></summary>
        <value><span data-ttu-id="95e48-323">Es <see langword="true" /> si la solicitud procede del equipo local; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-323"><see langword="true" /> if the request is from the local computer; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-324">El <xref:System.Web.HttpRequest.IsLocal%2A> propiedad devuelve `true` si la dirección IP del autor de la solicitud es 127.0.0.1 o si la dirección IP de la solicitud es el mismo que la dirección IP del servidor.</span><span class="sxs-lookup"><span data-stu-id="95e48-324">The <xref:System.Web.HttpRequest.IsLocal%2A> property returns `true` if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Web.HttpRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-325">Obtiene un valor que indica si la conexión HTTP usa sockets seguros, es decir, HTTPS.</span><span class="sxs-lookup"><span data-stu-id="95e48-325">Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</span></span></summary>
        <value><span data-ttu-id="95e48-326"><see langword="true" /> si la conexión es una conexión SSL; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-326"><see langword="true" /> if the connection is an SSL connection; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-327">El ejemplo de código siguiente determina si el <xref:System.Web.HttpRequest.IsSecureConnection%2A> propiedad está establecida en false.</span><span class="sxs-lookup"><span data-stu-id="95e48-327">The following code example determines whether the <xref:System.Web.HttpRequest.IsSecureConnection%2A> property is set to false.</span></span> <span data-ttu-id="95e48-328">Si es así, el <xref:System.Web.HttpResponse.SuppressContent%2A> propiedad está establecida en true para detener el envío de la respuesta.</span><span class="sxs-lookup"><span data-stu-id="95e48-328">If it is, the <xref:System.Web.HttpResponse.SuppressContent%2A> property is set to true to stop the response from being sent.</span></span>  
  
 [!code-csharp[System.Web.HttpResponse_Sample5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/CS/httpresponsesuppresscontentcs.aspx#3)]
 [!code-vb[System.Web.HttpResponse_Sample5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpResponse_Sample5/VB/httpresponsesuppresscontentvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public string this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ default[System::String ^] { System::String ^ get(System::String ^ key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : string" Usage="System.Web.HttpRequest.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="95e48-329">Nombre del miembro de colección que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="95e48-329">The name of the collection member to get.</span></span></param>
        <summary><span data-ttu-id="95e48-330">Obtiene el objeto especificado de las colecciones <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> o <see cref="P:System.Web.HttpRequest.ServerVariables" /></span><span class="sxs-lookup"><span data-stu-id="95e48-330">Gets the specified object from the <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collections.</span></span></summary>
        <value><span data-ttu-id="95e48-331">Miembro de la colección <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> o <see cref="P:System.Web.HttpRequest.ServerVariables" /> especificado en el parámetro <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-331">The <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, or <see cref="P:System.Web.HttpRequest.ServerVariables" /> collection member specified in the <paramref name="key" /> parameter.</span></span> <span data-ttu-id="95e48-332">Si no se encuentra el objeto <paramref name="key" /> especificado, se devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-332">If the specified <paramref name="key" /> is not found, then <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogonUserIdentity">
      <MemberSignature Language="C#" Value="public System.Security.Principal.WindowsIdentity LogonUserIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.WindowsIdentity LogonUserIdentity" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.LogonUserIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogonUserIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::WindowsIdentity ^ LogonUserIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogonUserIdentity : System.Security.Principal.WindowsIdentity" Usage="System.Web.HttpRequest.LogonUserIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-333">Obtiene el tipo <see cref="T:System.Security.Principal.WindowsIdentity" /> del usuario actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-333">Gets the <see cref="T:System.Security.Principal.WindowsIdentity" /> type for the current user.</span></span></summary>
        <value><span data-ttu-id="95e48-334">Objeto <see cref="T:System.Security.Principal.WindowsIdentity" /> que corresponde a la configuración de autenticación actual de Microsoft Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="95e48-334">A <see cref="T:System.Security.Principal.WindowsIdentity" /> object for the current Microsoft Internet Information Services (IIS) authentication settings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-335">El <xref:System.Web.HttpRequest.LogonUserIdentity%2A> propiedad expone las propiedades y métodos de la <xref:System.Security.Principal.WindowsIdentity> objeto para el usuario actualmente conectado a Microsoft Internet Information Services (IIS).</span><span class="sxs-lookup"><span data-stu-id="95e48-335">The <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property exposes the properties and methods of the <xref:System.Security.Principal.WindowsIdentity> object for the currently connected user to Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="95e48-336">La instancia de la <xref:System.Security.Principal.WindowsIdentity> clase que se expone mediante <xref:System.Web.HttpRequest.LogonUserIdentity%2A> realiza un seguimiento el token de solicitud IIS y proporciona fácil acceso a este token para la solicitud HTTP actual está procesando dentro de ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="95e48-336">The instance of the <xref:System.Security.Principal.WindowsIdentity> class that is exposed by <xref:System.Web.HttpRequest.LogonUserIdentity%2A> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</span></span> <span data-ttu-id="95e48-337">Una instancia de la <xref:System.Security.Principal.WindowsIdentity> automáticamente se crea la clase por lo que no necesita crearse a con el fin de obtener acceso a sus métodos y propiedades.</span><span class="sxs-lookup"><span data-stu-id="95e48-337">An instance of the <xref:System.Security.Principal.WindowsIdentity> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-338">El ejemplo de código siguiente muestra cómo recuperar el <xref:System.Web.HttpRequest.LogonUserIdentity%2A> propiedad para el usuario actual y la escritura de los valores de cada elemento en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="95e48-338">The following code example shows how to retrieve the <xref:System.Web.HttpRequest.LogonUserIdentity%2A> property for the current user and write out the values of each item in a text file.</span></span> <span data-ttu-id="95e48-339">Coloque este código en la página ASP.NET al que hace referencia el formulario `ACTION` atributo.</span><span class="sxs-lookup"><span data-stu-id="95e48-339">Place this code on the ASP.NET page referenced by the form's `ACTION` attribute.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/CS/logonuseridentity_cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_LogonUserIdentity#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_LogonUserIdentity/VB/logonuseridentity_vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="95e48-340">La aplicación web se está ejecutando en modo integrado de IIS 7 y todavía no se ha provocado el evento <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-340">The Web application is running in IIS 7 integrated mode and the <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> event has not yet been raised.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapImageCoordinates">
      <MemberSignature Language="C#" Value="public int[] MapImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] MapImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapImageCoordinates (imageFieldName As String) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ MapImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapImageCoordinates : string -&gt; int[]" Usage="httpRequest.MapImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="95e48-341">Nombre de la asignación de imágenes del formulario.</span><span class="sxs-lookup"><span data-stu-id="95e48-341">The name of the form image map.</span></span></param>
        <summary><span data-ttu-id="95e48-342">Asigna un parámetro de formulario entrante de campo de imagen a los valores de coordenada X y coordenada Y adecuados.</span><span class="sxs-lookup"><span data-stu-id="95e48-342">Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</span></span></summary>
        <returns><span data-ttu-id="95e48-343">Matriz bidimensional de enteros.</span><span class="sxs-lookup"><span data-stu-id="95e48-343">A two-dimensional array of integers.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="95e48-344">Asigna la ruta de acceso virtual de la dirección URL solicitada a una ruta de acceso física del servidor, correspondiente a la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-344">Maps the virtual path in the requested URL to a physical path on the server for the current request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string -&gt; string" Usage="httpRequest.MapPath virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="95e48-345">Ruta de acceso virtual (absoluta o relativa) de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-345">The virtual path (absolute or relative) for the current request.</span></span></param>
        <summary><span data-ttu-id="95e48-346">Asigna la ruta de acceso virtual especificada a una ruta de acceso física.</span><span class="sxs-lookup"><span data-stu-id="95e48-346">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="95e48-347">Ruta de acceso física del servidor especificado por <paramref name="virtualPath" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-347">The physical path on the server specified by <paramref name="virtualPath" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="95e48-348">El <xref:System.Web.HttpRequest.MapPath%2A> propiedad puede contener información confidencial sobre el entorno de hospedaje.</span><span class="sxs-lookup"><span data-stu-id="95e48-348">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="95e48-349">El valor devuelto no debe mostrarse a los usuarios.</span><span class="sxs-lookup"><span data-stu-id="95e48-349">The return value should not be displayed to users.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-350">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpRequest.MapPath%2A> método para convertir una ruta de acceso virtual en una ruta de acceso física completa en el servidor.</span><span class="sxs-lookup"><span data-stu-id="95e48-350">The following code example uses the <xref:System.Web.HttpRequest.MapPath%2A> method to convert a virtual path to a fully qualified physical path on the server.</span></span> <span data-ttu-id="95e48-351">En este ejemplo tiene dos partes:</span><span class="sxs-lookup"><span data-stu-id="95e48-351">This example has two parts:</span></span>  
  
-   <span data-ttu-id="95e48-352">Una página .aspx asigna la ruta de acceso, lee el archivo y muestra los resultados de la operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="95e48-352">An .aspx page maps the path, reads the file, and displays results of the read operation.</span></span>  
  
-   <span data-ttu-id="95e48-353">Una clase, `UpperCaseFilterStream`, que cambia todos los caracteres que se pasa a mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="95e48-353">A class, `UpperCaseFilterStream`, that changes all characters passed through it to uppercase.</span></span>  
  
 <span data-ttu-id="95e48-354">La primera parte del ejemplo muestra cómo convertir una ruta de acceso virtual a una ruta de acceso física completa mediante el <xref:System.Web.HttpRequest.MapPath%2A> método.</span><span class="sxs-lookup"><span data-stu-id="95e48-354">The first part of the example shows how to convert a virtual path to a fully qualified physical path using the <xref:System.Web.HttpRequest.MapPath%2A> method.</span></span> <span data-ttu-id="95e48-355">Esta ruta de acceso física, a continuación, se pasa a un <xref:System.IO.StreamReader> objeto, que obtiene el contenido del archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-355">This physical path is then passed to a <xref:System.IO.StreamReader> object, which obtains the contents of the file.</span></span> <span data-ttu-id="95e48-356">El <xref:System.Web.HttpResponse.Write%2A> , a continuación, se llama el método para mostrar el contenido del archivo en la página.</span><span class="sxs-lookup"><span data-stu-id="95e48-356">The <xref:System.Web.HttpResponse.Write%2A> method is then called to display the content of the file on the page.</span></span> <span data-ttu-id="95e48-357">El <xref:System.Web.HttpResponse.Filter%2A> propiedad se utiliza para adjuntar un filtro a la secuencia de respuesta que hace que el texto que aparece a la página de todas las letras mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="95e48-357">The <xref:System.Web.HttpResponse.Filter%2A> property is used to attach a filter to the response stream that makes the text displayed to the page all uppercase.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest_Samples2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/requestsamples2cs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest_Samples2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/requestsamples2vb.aspx#1)]  
  
 <span data-ttu-id="95e48-358">La segunda parte del ejemplo muestra una clase que hereda de <xref:System.IO.Stream> y convierte todos los caracteres de una secuencia en mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="95e48-358">The second part of the example shows a class that inherits from <xref:System.IO.Stream> and converts all characters in a stream to uppercase.</span></span> <span data-ttu-id="95e48-359">Coloque este código en el `App_Code` carpeta para su aplicación.</span><span class="sxs-lookup"><span data-stu-id="95e48-359">Put this code in the `App_Code` folder for your application.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Samples2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/CS/responsefilter.cs#2)]
 [!code-vb[System.Web.HttpRequest_Samples2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Samples2/VB/responsefilter.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="95e48-360">No hay objetos <see cref="T:System.Web.HttpContext" /> definidos para la solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-360">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapPath">
      <MemberSignature Language="C#" Value="public string MapPath (string virtualPath, string baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string MapPath(string virtualPath, string baseVirtualDir, bool allowCrossAppMapping) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapPath(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPath (virtualPath As String, baseVirtualDir As String, allowCrossAppMapping As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ MapPath(System::String ^ virtualPath, System::String ^ baseVirtualDir, bool allowCrossAppMapping);" />
      <MemberSignature Language="F#" Value="member this.MapPath : string * string * bool -&gt; string" Usage="httpRequest.MapPath (virtualPath, baseVirtualDir, allowCrossAppMapping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="baseVirtualDir" Type="System.String" />
        <Parameter Name="allowCrossAppMapping" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="95e48-361">Ruta de acceso virtual (absoluta o relativa) de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-361">The virtual path (absolute or relative) for the current request.</span></span></param>
        <param name="baseVirtualDir"><span data-ttu-id="95e48-362">Ruta de acceso al directorio base virtual que se usa para una resolución relativa.</span><span class="sxs-lookup"><span data-stu-id="95e48-362">The virtual base directory path used for relative resolution.</span></span></param>
        <param name="allowCrossAppMapping"><span data-ttu-id="95e48-363"><see langword="true" /> para indicar que <paramref name="virtualPath" /> puede pertenecer a otra aplicación; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-363"><see langword="true" /> to indicate that <paramref name="virtualPath" /> may belong to another application; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="95e48-364">Asigna la ruta de acceso virtual especificada a una ruta de acceso física.</span><span class="sxs-lookup"><span data-stu-id="95e48-364">Maps the specified virtual path to a physical path.</span></span></summary>
        <returns><span data-ttu-id="95e48-365">Ruta de acceso física del servidor.</span><span class="sxs-lookup"><span data-stu-id="95e48-365">The physical path on the server.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  <span data-ttu-id="95e48-366">El <xref:System.Web.HttpRequest.MapPath%2A> propiedad puede contener información confidencial sobre el entorno de hospedaje.</span><span class="sxs-lookup"><span data-stu-id="95e48-366">The <xref:System.Web.HttpRequest.MapPath%2A> property potentially contains sensitive information about the hosting environment.</span></span> <span data-ttu-id="95e48-367">El valor devuelto no debe mostrarse a los usuarios.</span><span class="sxs-lookup"><span data-stu-id="95e48-367">The return value should not be displayed to users.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="95e48-368"><paramref name="allowCrossMapping" /> es <see langword="false" /> y <paramref name="virtualPath" /> pertenece a otra aplicación.</span><span class="sxs-lookup"><span data-stu-id="95e48-368"><paramref name="allowCrossMapping" /> is <see langword="false" /> and <paramref name="virtualPath" /> belongs to another application.</span></span>

<span data-ttu-id="95e48-369">O bien</span><span class="sxs-lookup"><span data-stu-id="95e48-369">-or-</span></span> 
<span data-ttu-id="95e48-370">No hay objetos <see cref="T:System.Web.HttpContext" /> definidos para la solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-370">No <see cref="T:System.Web.HttpContext" /> object is defined for the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MapRawImageCoordinates">
      <MemberSignature Language="C#" Value="public double[] MapRawImageCoordinates (string imageFieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64[] MapRawImageCoordinates(string imageFieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.MapRawImageCoordinates(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapRawImageCoordinates (imageFieldName As String) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ MapRawImageCoordinates(System::String ^ imageFieldName);" />
      <MemberSignature Language="F#" Value="member this.MapRawImageCoordinates : string -&gt; double[]" Usage="httpRequest.MapRawImageCoordinates imageFieldName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="imageFieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFieldName"><span data-ttu-id="95e48-371">Nombre del campo de imagen.</span><span class="sxs-lookup"><span data-stu-id="95e48-371">The name of the image field.</span></span></param>
        <summary><span data-ttu-id="95e48-372">Asigna un parámetro de formulario entrante de campo de imagen a los valores de coordenadas X e Y adecuados.</span><span class="sxs-lookup"><span data-stu-id="95e48-372">Maps an incoming image field form parameter into appropriate x and y coordinate values.</span></span></summary>
        <returns><span data-ttu-id="95e48-373">Valores de coordenadas X e Y.</span><span class="sxs-lookup"><span data-stu-id="95e48-373">The x and y coordinate values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Params">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Params { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Params" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Params" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Params As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Params { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Params : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.Params" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-374">Obtiene una colección combinada de elementos <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" /> y <see cref="P:System.Web.HttpRequest.ServerVariables" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-374">Gets a combined collection of <see cref="P:System.Web.HttpRequest.QueryString" />, <see cref="P:System.Web.HttpRequest.Form" />, <see cref="P:System.Web.HttpRequest.Cookies" />, and <see cref="P:System.Web.HttpRequest.ServerVariables" /> items.</span></span></summary>
        <value><span data-ttu-id="95e48-375">Un objeto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-375">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-376">Pares nombre-valor se agregan a la colección en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="95e48-376">Name-value pairs are added to the collection in the following order:</span></span>  
  
1.  <span data-ttu-id="95e48-377">Parámetros de cadena de consulta.</span><span class="sxs-lookup"><span data-stu-id="95e48-377">Query-string parameters.</span></span>  
  
2.  <span data-ttu-id="95e48-378">Campos de formulario.</span><span class="sxs-lookup"><span data-stu-id="95e48-378">Form fields.</span></span>  
  
3.  <span data-ttu-id="95e48-379">Cookies.</span><span class="sxs-lookup"><span data-stu-id="95e48-379">Cookies.</span></span>  
  
4.  <span data-ttu-id="95e48-380">Variables de servidor.</span><span class="sxs-lookup"><span data-stu-id="95e48-380">Server variables.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-381">El ejemplo de código siguiente muestra cómo recorrer el <xref:System.Web.HttpRequest.Params%2A> propiedad para una página y cómo se mostrará cada par clave/valor.</span><span class="sxs-lookup"><span data-stu-id="95e48-381">The following code example shows how to loop through the <xref:System.Web.HttpRequest.Params%2A> property for a page and how to display each key/value pair.</span></span>  
  
 [!code-aspx-csharp[System.Web.HttpRequest.Params#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest.Params/CS/requestparamscs.aspx#1)]
 [!code-aspx-vb[System.Web.HttpRequest.Params#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest.Params/VB/requestparamsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.HttpRequest.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-382">Obtiene la ruta de acceso virtual de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-382">Gets the virtual path of the current request.</span></span></summary>
        <value><span data-ttu-id="95e48-383">Ruta de acceso virtual de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-383">The virtual path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-384">El <xref:System.Web.HttpRequest.Path%2A> es la concatenación de la <xref:System.Web.HttpRequest.FilePath%2A> y <xref:System.Web.HttpRequest.PathInfo%2A> finalizador.</span><span class="sxs-lookup"><span data-stu-id="95e48-384">The <xref:System.Web.HttpRequest.Path%2A> is the concatenation of the <xref:System.Web.HttpRequest.FilePath%2A> and the <xref:System.Web.HttpRequest.PathInfo%2A> trailer.</span></span> <span data-ttu-id="95e48-385">Por ejemplo, para la dirección URL http://www.contoso.com/virdir/page.html/tail, el <xref:System.Web.HttpRequest.Path%2A> es /virdir/page.html/tail.</span><span class="sxs-lookup"><span data-stu-id="95e48-385">For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.Path%2A> is /virdir/page.html/tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-386">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.Path%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-386">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.Path%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-387">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-387">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#2)]
 [!code-vb[System.Web.HttpRequest_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
        <altmember cref="P:System.Web.HttpRequest.PathInfo" />
      </Docs>
    </Member>
    <Member MemberName="PathInfo">
      <MemberSignature Language="C#" Value="public string PathInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PathInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PathInfo { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathInfo : string" Usage="System.Web.HttpRequest.PathInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-388">Obtiene información adicional de la ruta de acceso de un recurso con extensión de dirección URL.</span><span class="sxs-lookup"><span data-stu-id="95e48-388">Gets the additional path information for a resource with a URL extension.</span></span></summary>
        <value><span data-ttu-id="95e48-389">Información adicional de la ruta de acceso de un recurso.</span><span class="sxs-lookup"><span data-stu-id="95e48-389">The additional path information for a resource.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-390">Para la dirección URL Http://www.contoso.com/virdir/page.html/tail, el <xref:System.Web.HttpRequest.PathInfo%2A> valor es/tail.</span><span class="sxs-lookup"><span data-stu-id="95e48-390">For the URL Http://www.contoso.com/virdir/page.html/tail, the <xref:System.Web.HttpRequest.PathInfo%2A> value is /tail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-391">El ejemplo de código siguiente determina si el <xref:System.Web.HttpRequest.PathInfo%2A> propiedad contiene una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="95e48-391">The following code example determines whether the <xref:System.Web.HttpRequest.PathInfo%2A> property contains an empty string.</span></span> <span data-ttu-id="95e48-392">Si es así, el <xref:System.IO.StreamWriter.Write%2A> método escribe una cadena que indica esto en un archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-392">If it does, the <xref:System.IO.StreamWriter.Write%2A> method writes a string indicating this to a file.</span></span> <span data-ttu-id="95e48-393">Si no, el <xref:System.Web.HttpUtility.HtmlEncode%2A> método codifica en HTML el valor de la <xref:System.Web.HttpRequest.PathInfo%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método escribe el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-393">If it does not, the <xref:System.Web.HttpUtility.HtmlEncode%2A> method HTML-encodes the value of the <xref:System.Web.HttpRequest.PathInfo%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method writes the encoded value to the file.</span></span> <span data-ttu-id="95e48-394">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-394">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#4)]
 [!code-vb[System.Web.HttpRequest_Sample1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpRequest.Path" />
        <altmember cref="P:System.Web.HttpRequest.FilePath" />
      </Docs>
    </Member>
    <Member MemberName="PhysicalApplicationPath">
      <MemberSignature Language="C#" Value="public string PhysicalApplicationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalApplicationPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalApplicationPath : string" Usage="System.Web.HttpRequest.PhysicalApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-395">Obtiene la ruta de acceso al sistema de archivos físico del directorio raíz de la aplicación de servidor que se está ejecutando.</span><span class="sxs-lookup"><span data-stu-id="95e48-395">Gets the physical file system path of the currently executing server application's root directory.</span></span></summary>
        <value><span data-ttu-id="95e48-396">Ruta de acceso al sistema de archivos del directorio raíz de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-396">The file system path of the current application's root directory.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-397">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-397">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-398">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-398">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PhysicalPath">
      <MemberSignature Language="C#" Value="public string PhysicalPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PhysicalPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.PhysicalPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PhysicalPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PhysicalPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PhysicalPath : string" Usage="System.Web.HttpRequest.PhysicalPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-399">Obtiene la ruta de acceso al sistema de archivos físico correspondiente a la dirección URL solicitada.</span><span class="sxs-lookup"><span data-stu-id="95e48-399">Gets the physical file system path corresponding to the requested URL.</span></span></summary>
        <value><span data-ttu-id="95e48-400">Ruta de acceso al sistema de archivos de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-400">The file system path of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-401">En escenarios de redirección con <xref:System.Web.HttpServerUtility.Execute%2A> y <xref:System.Web.HttpServerUtility.Transfer%2A>, el <xref:System.Web.HttpRequest.PhysicalPath%2A> propiedad devuelve la ruta de acceso a la página original.</span><span class="sxs-lookup"><span data-stu-id="95e48-401">In redirect scenarios using <xref:System.Web.HttpServerUtility.Execute%2A> and <xref:System.Web.HttpServerUtility.Transfer%2A>, the <xref:System.Web.HttpRequest.PhysicalPath%2A> property returns the path to the original page.</span></span> <span data-ttu-id="95e48-402">Para buscar la ruta de acceso física de la utilización de la página está ejecutando actualmente el <xref:System.Web.HttpRequest.MapPath%2A> método con el argumento de entrada se establece como el <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="95e48-402">To find the physical path of the currently executing page use the <xref:System.Web.HttpRequest.MapPath%2A> method with the input argument set as the <xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-403">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.PhysicalPath%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-403">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.PhysicalPath%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-404">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-404">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.MapPath(System.String)" />
        <altmember cref="P:System.Web.HttpRequest.CurrentExecutionFilePath" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-405">Obtiene la colección de variables de tipo cadena de consulta HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-405">Gets the collection of HTTP query string variables.</span></span></summary>
        <value><span data-ttu-id="95e48-406">Variables de cadena de consulta enviadas por el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-406">The query string variables sent by the client.</span></span> <span data-ttu-id="95e48-407">Las claves y los valores son de descodificación de URL.</span><span class="sxs-lookup"><span data-stu-id="95e48-407">Keys and values are URL-decoded.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-408">El ejemplo de código siguiente muestra dos maneras de obtener el valor de una variable de cadena de consulta denominada "fullname".</span><span class="sxs-lookup"><span data-stu-id="95e48-408">The following code example shows two ways to get the value of a query string variable named "fullname".</span></span> <span data-ttu-id="95e48-409">En cada caso, si la dirección URL es `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, a continuación, el valor devuelto es "Delia Fakhouri" porque el `%20` es la dirección URL descodificada en un carácter de espacio.</span><span class="sxs-lookup"><span data-stu-id="95e48-409">In each case, if the URL is `http://www.contoso.com/default.aspx?fullname=Fadi%20Fakhouri`, then the value returned is "Fadi Fakhouri" because the `%20` is URL-decoded into a space character.</span></span> <span data-ttu-id="95e48-410">Si la dirección URL no tiene un `fullname` Id. de cadena de consulta, el valor devuelto sería `null`.</span><span class="sxs-lookup"><span data-stu-id="95e48-410">If the URL doesn't have a `fullname` query string ID, the returned value would be `null`.</span></span>  
  
 <span data-ttu-id="95e48-411">La primera línea de código busca la clave "fullname" solo en la cadena de consulta; la segunda línea busca la clave "fullname" en todas las colecciones de la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-411">The first line of code looks for the key "fullname" only in the query string; the second line looks for the key "fullname" in all of the HTTP request collections.</span></span> <span data-ttu-id="95e48-412">Para obtener más información acerca de la segunda línea, consulte <xref:System.Web.HttpRequest.Item%2A>.</span><span class="sxs-lookup"><span data-stu-id="95e48-412">For more information about the second line, see <xref:System.Web.HttpRequest.Item%2A>.</span></span>  
  
```csharp  
string fullname1 = Request.QueryString["fullname"];  
string fullname2 = Request["fullname"];  
  
```  
  
```vb  
Dim fullname1 As String = Request.QueryString("fullname")  
Dim fullname2 As String = Request("fullname")  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpRequest.ValidateInput" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Web.HttpRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-413">Obtiene la dirección URL sin procesar de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-413">Gets the raw URL of the current request.</span></span></summary>
        <value><span data-ttu-id="95e48-414">Dirección URL sin procesar de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-414">The raw URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-415">La dirección URL sin procesar se define como parte de la dirección URL siguiendo la información de dominio.</span><span class="sxs-lookup"><span data-stu-id="95e48-415">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="95e48-416">En la cadena de dirección URL http://www.contoso.com/articles/recent.aspx, la dirección URL original es/articles/recent.aspx.</span><span class="sxs-lookup"><span data-stu-id="95e48-416">In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL is /articles/recent.aspx.</span></span> <span data-ttu-id="95e48-417">Dirección URL original incluye la cadena de consulta, si está presente.</span><span class="sxs-lookup"><span data-stu-id="95e48-417">The raw URL includes the query string, if present.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-418">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.RawUrl%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-418">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RawUrl%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-419">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-419">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#5)]
 [!code-vb[System.Web.HttpRequest_Sample1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityBodyMode">
      <MemberSignature Language="C#" Value="public System.Web.ReadEntityBodyMode ReadEntityBodyMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.ReadEntityBodyMode ReadEntityBodyMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReadEntityBodyMode As ReadEntityBodyMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ReadEntityBodyMode ReadEntityBodyMode { System::Web::ReadEntityBodyMode get(); };" />
      <MemberSignature Language="F#" Value="member this.ReadEntityBodyMode : System.Web.ReadEntityBodyMode" Usage="System.Web.HttpRequest.ReadEntityBodyMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ReadEntityBodyMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-420">Obtiene un valor que indica si se leyó el cuerpo de la entidad de la solicitud y, si es así, cómo se leyó.</span><span class="sxs-lookup"><span data-stu-id="95e48-420">Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</span></span></summary>
        <value><span data-ttu-id="95e48-421">Valor que indica cómo se leyó el cuerpo de la entidad de la solicitud o que no se leyó.</span><span class="sxs-lookup"><span data-stu-id="95e48-421">The value that indicates how the request entity body was read, or that it has not been read.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-422">Este método se utiliza para evitar la excepción que se produce si ya se ha leído el cuerpo de entidad y se realiza un intento para leerlo mediante un método compatible.</span><span class="sxs-lookup"><span data-stu-id="95e48-422">This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</span></span> <span data-ttu-id="95e48-423">Métodos y propiedades que leer el cuerpo de entidad incluyen lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="95e48-423">Methods and properties that read the entity body include the following:</span></span>  
  
-   <span data-ttu-id="95e48-424">Propiedad <xref:System.Web.HttpRequest.Form%2A></span><span class="sxs-lookup"><span data-stu-id="95e48-424">The <xref:System.Web.HttpRequest.Form%2A> property.</span></span>  
  
-   <span data-ttu-id="95e48-425">Propiedad <xref:System.Web.HttpRequest.Files%2A></span><span class="sxs-lookup"><span data-stu-id="95e48-425">The <xref:System.Web.HttpRequest.Files%2A> property.</span></span>  
  
-   <span data-ttu-id="95e48-426">Propiedad <xref:System.Web.HttpRequest.InputStream%2A></span><span class="sxs-lookup"><span data-stu-id="95e48-426">The <xref:System.Web.HttpRequest.InputStream%2A> property.</span></span>  
  
-   <span data-ttu-id="95e48-427">El método <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="95e48-427">The <xref:System.Web.HttpRequest.GetBufferedInputStream%2A> method.</span></span>  
  
-   <span data-ttu-id="95e48-428">El método <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> .</span><span class="sxs-lookup"><span data-stu-id="95e48-428">The <xref:System.Web.HttpRequest.GetBufferlessInputStream%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestContext">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RequestContext RequestContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RequestContext RequestContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestContext" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestContext As RequestContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RequestContext ^ RequestContext { System::Web::Routing::RequestContext ^ get(); void set(System::Web::Routing::RequestContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestContext : System.Web.Routing.RequestContext with get, set" Usage="System.Web.HttpRequest.RequestContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RequestContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-429">Obtiene la instancia de <see cref="T:System.Web.Routing.RequestContext" /> de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-429">Gets the <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span></summary>
        <value><span data-ttu-id="95e48-430">Instancia de <see cref="T:System.Web.Routing.RequestContext" /> de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-430">The <see cref="T:System.Web.Routing.RequestContext" /> instance of the current request.</span></span> <span data-ttu-id="95e48-431">En el caso de solicitudes no enrutadas, el objeto <see cref="T:System.Web.Routing.RequestContext" /> que se devuelve está vacío.</span><span class="sxs-lookup"><span data-stu-id="95e48-431">For non-routed requests, the <see cref="T:System.Web.Routing.RequestContext" /> object that is returned is empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-432">Esta propiedad proporciona acceso a la <xref:System.Web.Routing.RouteData> objeto de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-432">This property provides access to the <xref:System.Web.Routing.RouteData> object for the current request.</span></span> <span data-ttu-id="95e48-433">Para obtener más información sobre el enrutamiento de ASP.NET, vea. [Enrutamiento de ASP.NET](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span><span class="sxs-lookup"><span data-stu-id="95e48-433">For more information about ASP.NET routing, see.[ASP.NET Routing](https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="95e48-434">Tutorial: Uso de enrutamiento en una aplicación de Web Forms de ASP.NET</span><span class="sxs-lookup"><span data-stu-id="95e48-434">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/dc88e6ba-470c-4b20-b644-35874cfd781d"><span data-ttu-id="95e48-435">Procedimiento Parámetros de dirección URL de acceso en una página enrutada</span><span class="sxs-lookup"><span data-stu-id="95e48-435">How to: Access URL Parameters in a Routed Page</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RequestType">
      <MemberSignature Language="C#" Value="public string RequestType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.RequestType" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestType : string with get, set" Usage="System.Web.HttpRequest.RequestType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-436">Obtiene o establece el método de transferencia de datos HTTP (<see langword="GET" /> o <see langword="POST" />) que usa el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-436">Gets or sets the HTTP data transfer method (<see langword="GET" /> or <see langword="POST" />) used by the client.</span></span></summary>
        <value><span data-ttu-id="95e48-437">Cadena que representa el tipo de invocación HTTP enviado por el cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-437">A string representing the HTTP invocation type sent by the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-438">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.RequestType%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-438">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.RequestType%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-439">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-439">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename, bool includeHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename, bool includeHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.SaveAs(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String, includeHeaders As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename, bool includeHeaders);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string * bool -&gt; unit" Usage="httpRequest.SaveAs (filename, includeHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="includeHeaders" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="95e48-440">Ruta de acceso física a la unidad.</span><span class="sxs-lookup"><span data-stu-id="95e48-440">The physical drive path.</span></span></param>
        <param name="includeHeaders"><span data-ttu-id="95e48-441">Valor booleano que especifica si se debe guardar en el disco un encabezado HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-441">A Boolean value specifying whether an HTTP header should be saved to disk.</span></span></param>
        <summary><span data-ttu-id="95e48-442">Guarda una solicitud HTTP en el disco.</span><span class="sxs-lookup"><span data-stu-id="95e48-442">Saves an HTTP request to disk.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-443">Guardar el contexto de solicitud en el disco puede ser útil para depurar.</span><span class="sxs-lookup"><span data-stu-id="95e48-443">Saving the request context to disk can be useful in debugging.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-444">El siguiente ejemplo de código llama el <xref:System.Web.HttpRequest.SaveAs%2A> método cuando se carga una página.</span><span class="sxs-lookup"><span data-stu-id="95e48-444">The following code example calls the <xref:System.Web.HttpRequest.SaveAs%2A> method when a page is loaded.</span></span> <span data-ttu-id="95e48-445">La llamada especifica que la solicitud se guarda como un archivo de texto en un directorio donde la identidad del proceso ASP.NET tiene concedida permisos de escritura, y que cualquier información de encabezado incluido en la solicitud está incluida en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-445">The call specifies that the request be saved as a text file in a directory where the ASP.NET process identity has been granted write permissions, and that any header information included in the request is included in the file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/cs/requestsample6cs.aspx#1)]
 [!code-vb[System.Web.HttpRequest_Sample6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample6/vb/requestsample6vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="95e48-446">La propiedad <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> de <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> está establecida en <see langword="true" />, pero <paramref name="filename" /> no es una ruta de acceso absoluta.</span><span class="sxs-lookup"><span data-stu-id="95e48-446">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> is set to <see langword="true" /> but <paramref name="filename" /> is not an absolute path.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerVariables">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection ServerVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection ServerVariables" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.ServerVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServerVariables As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ ServerVariables { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServerVariables : System.Collections.Specialized.NameValueCollection" Usage="System.Web.HttpRequest.ServerVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-447">Obtiene una colección de variables de servidor web.</span><span class="sxs-lookup"><span data-stu-id="95e48-447">Gets a collection of Web server variables.</span></span></summary>
        <value><span data-ttu-id="95e48-448">Objeto <see cref="T:System.Collections.Specialized.NameValueCollection" /> de variables de servidor.</span><span class="sxs-lookup"><span data-stu-id="95e48-448">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> of server variables.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-449">Para obtener una lista de variables de servidor compatibles con IIS, consulte [Variables de servidor IIS](https://go.microsoft.com/fwlink/?LinkId=52471).</span><span class="sxs-lookup"><span data-stu-id="95e48-449">For a list of server variables supported by IIS, see [IIS Server Variables](https://go.microsoft.com/fwlink/?LinkId=52471).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95e48-450">El ejemplo de código siguiente muestra los nombres y valores de todas las variables de servidor con nombre.</span><span class="sxs-lookup"><span data-stu-id="95e48-450">The following code example displays the names and values of all named server variables.</span></span>  
  
 [!code-csharp[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.ServerVariables Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.ServerVariables Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedOutToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken TimedOutToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken TimedOutToken" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TimedOutToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimedOutToken As CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken TimedOutToken { System::Threading::CancellationToken get(); };" />
      <MemberSignature Language="F#" Value="member this.TimedOutToken : System.Threading.CancellationToken" Usage="System.Web.HttpRequest.TimedOutToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-451">Obtiene un objeto <see cref="T:System.Threading.CancellationToken" /> que se desencadena cuando una solicitud consume el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="95e48-451">Gets a <see cref="T:System.Threading.CancellationToken" /> object that is tripped when a request times out.</span></span></summary>
        <value><span data-ttu-id="95e48-452">Token de cancelación.</span><span class="sxs-lookup"><span data-stu-id="95e48-452">The cancellation token.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-453">El período de tiempo de espera puede especificarse en el archivo Web.config (consulte <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) o mediante programación (consulte <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="95e48-453">The timeout period can be specified in the Web.config file (see <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=nameWithType>) or programmatically (see <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="95e48-454">El período de tiempo de espera se mide desde el momento en que la solicitud entra en juego.</span><span class="sxs-lookup"><span data-stu-id="95e48-454">The timeout period is measured from the time the request comes in.</span></span> <span data-ttu-id="95e48-455">Si el tiempo de espera predeterminado de 110 segundos está en vigor, no sea anterior a 110 segundos después de que comience el procesamiento de la solicitud se se desencadena el token de cancelación.</span><span class="sxs-lookup"><span data-stu-id="95e48-455">If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</span></span> <span data-ttu-id="95e48-456">Puede cambiar el <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> valor de propiedad, y como long este token no se ha recorrido aún, se respetan el nuevo valor de tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="95e48-456">You can change the <xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=nameWithType> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</span></span>  
  
 <span data-ttu-id="95e48-457">Actualmente, el token solo proporciona 15 segundos, lo que significa que si el valor de tiempo de espera es de 110 segundos, el token se se desencadena cualquiera entre 125 y 110 segundos después de que comience el procesamiento de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="95e48-457">Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</span></span> <span data-ttu-id="95e48-458">La granularidad se puede cambiar en el futuro.</span><span class="sxs-lookup"><span data-stu-id="95e48-458">The granularity may change in the future.</span></span>  
  
 <span data-ttu-id="95e48-459">Aunque esta propiedad es segura para subprocesos, hay restricciones sobre su uso.</span><span class="sxs-lookup"><span data-stu-id="95e48-459">Even though this property is thread-safe, there are restrictions on its use.</span></span> <span data-ttu-id="95e48-460">Para obtener más información, vea <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="95e48-460">For more information, see <xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="95e48-461">Esta propiedad no tiene sentida si se ha iniciado el procesamiento de la solicitud de WebSockets.</span><span class="sxs-lookup"><span data-stu-id="95e48-461">This property is meaningless if WebSockets request processing has started.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TlsTokenBindingInfo">
      <MemberSignature Language="C#" Value="public System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.ITlsTokenBindingInfo TlsTokenBindingInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TlsTokenBindingInfo As ITlsTokenBindingInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::ITlsTokenBindingInfo ^ TlsTokenBindingInfo { System::Web::ITlsTokenBindingInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TlsTokenBindingInfo : System.Web.ITlsTokenBindingInfo" Usage="System.Web.HttpRequest.TlsTokenBindingInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ITlsTokenBindingInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-462">Obtiene información de enlace del token TLS.</span><span class="sxs-lookup"><span data-stu-id="95e48-462">Gets the TLS token binding information.</span></span> <span data-ttu-id="95e48-463">La propiedad permite que las aplicaciones recuperen información del token de las solicitudes HTTP entrantes para usar autenticación mejorada.</span><span class="sxs-lookup"><span data-stu-id="95e48-463">The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</span></span></summary>
        <value><span data-ttu-id="95e48-464">Token de enlace de la conexión actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-464">The binding token for the current connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-465">Esta propiedad devuelve `null` en plataformas que no sean windows10.</span><span class="sxs-lookup"><span data-stu-id="95e48-465">This property returns `null` on non-windows10 platforms.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalBytes">
      <MemberSignature Language="C#" Value="public int TotalBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.TotalBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalBytes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalBytes { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalBytes : int" Usage="System.Web.HttpRequest.TotalBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-466">Obtiene el número de bytes del flujo de entrada actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-466">Gets the number of bytes in the current input stream.</span></span></summary>
        <value><span data-ttu-id="95e48-467">Número de bytes del flujo de entrada.</span><span class="sxs-lookup"><span data-stu-id="95e48-467">The number of bytes in the input stream.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-468">El ejemplo de código siguiente determina si el <xref:System.Web.HttpRequest.TotalBytes%2A> valor de propiedad es mayor que 1000 bytes y escribe esa información en un archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-468">The following code example determines whether the <xref:System.Web.HttpRequest.TotalBytes%2A> property value is greater than 1000 bytes and writes that information to a file.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#6)]
 [!code-vb[System.Web.HttpRequest_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unvalidated">
      <MemberSignature Language="C#" Value="public System.Web.UnvalidatedRequestValues Unvalidated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UnvalidatedRequestValues Unvalidated" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Unvalidated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Unvalidated As UnvalidatedRequestValues" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UnvalidatedRequestValues ^ Unvalidated { System::Web::UnvalidatedRequestValues ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Unvalidated : System.Web.UnvalidatedRequestValues" Usage="System.Web.HttpRequest.Unvalidated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UnvalidatedRequestValues</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-469">Obtiene los valores de solicitud HTTP sin que se desencadene la validación de solicitudes.</span><span class="sxs-lookup"><span data-stu-id="95e48-469">Gets the HTTP request values without triggering request validation.</span></span></summary>
        <value><span data-ttu-id="95e48-470">Valores de solicitud HTTP que no se comprobaron con la validación de solicitudes.</span><span class="sxs-lookup"><span data-stu-id="95e48-470">The HTTP request values that have not been checked using request validation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-471">Solicitar comprobaciones de validación para marcado HTML y secuencias de comandos que podrían indicar un posible ataque de scripting entre sitios.</span><span class="sxs-lookup"><span data-stu-id="95e48-471">Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</span></span> <span data-ttu-id="95e48-472">De forma predeterminada, todos los valores se comprueban con la validación de solicitud y si los valores contienen marcado o el script, ASP.NET genera un <xref:System.Web.HttpRequestValidationException> excepción.</span><span class="sxs-lookup"><span data-stu-id="95e48-472">By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <xref:System.Web.HttpRequestValidationException> exception.</span></span> <span data-ttu-id="95e48-473">Utilice este método si prevé que la solicitud contendrá marcado (por ejemplo, permitiendo a los usuarios enviar contenido que contiene el marcado) y desea obtener el valor de una solicitud sin procesar.</span><span class="sxs-lookup"><span data-stu-id="95e48-473">Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="95e48-474">Si utiliza esta propiedad, debe comprobar manualmente los datos de posibles ataques de scripting entre sitios.</span><span class="sxs-lookup"><span data-stu-id="95e48-474">If you use this property, you must manually check the data for potential cross-site scripting attacks.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UnvalidatedRequestValues" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Web.HttpRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-475">Obtiene información sobre la dirección URL de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-475">Gets information about the URL of the current request.</span></span></summary>
        <value><span data-ttu-id="95e48-476">Objeto <see cref="T:System.Uri" /> que contiene la dirección URL de la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-476">A <see cref="T:System.Uri" /> object that contains the URL of the current request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-477">El siguiente código de ejemplo, se asigna el <xref:System.Uri> objeto de la solicitud actual a una variable de objeto y muestra el valor de dos propiedades de la dirección URL del objeto en la salida HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-477">The following code example assigns the <xref:System.Uri> object of the current request to an object variable and displays the value of two properties of the URL object to the HTTP output.</span></span>  
  
 [!code-csharp[Classic HttpRequest.Url Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.Url Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.Url Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.Url Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
        <altmember cref="P:System.Web.HttpRequest.RawUrl" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Web.HttpRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-478">Obtiene información sobre la dirección URL de la solicitud anterior del cliente que establecía un vínculo con la dirección URL actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-478">Gets information about the URL of the client's previous request that linked to the current URL.</span></span></summary>
        <value><span data-ttu-id="95e48-479">Un objeto <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-479">A <see cref="T:System.Uri" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-480">En el ejemplo de código siguiente se muestra el valor de dos propiedades de la dirección URL que remitió al cliente a la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="95e48-480">The following code example displays the value of two properties of the URL that referred the client to the current application.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UrlReferrer Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UrlReferrer Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UriFormatException"><span data-ttu-id="95e48-481">El encabezado de la solicitud HTTP <see langword="Referer" /> es incorrecto y no se puede convertir en un objeto <see cref="T:System.Uri" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-481">The HTTP <see langword="Referer" /> request header is malformed and cannot be converted to a <see cref="T:System.Uri" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.HttpRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-482">Obtiene la cadena de agente de usuario no procesada del explorador del cliente que se ha proporcionado.</span><span class="sxs-lookup"><span data-stu-id="95e48-482">Gets the raw user agent string of the client browser that has been provided.</span></span> <span data-ttu-id="95e48-483">Tenga en cuenta que su valor puede ser null.</span><span class="sxs-lookup"><span data-stu-id="95e48-483">Please note it may be null.</span></span></summary>
        <value><span data-ttu-id="95e48-484">Cadena de agente de usuario no procesada del explorador del cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-484">The raw user agent string of the client browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-485">En el ejemplo de código siguiente se asigna la identificación del tipo de explorador que realiza la solicitud a una variable de cadena.</span><span class="sxs-lookup"><span data-stu-id="95e48-485">The following code example assigns the type identification of the requesting browser to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserAgent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserAgent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.ClientTarget" />
        <altmember cref="T:System.Web.HttpBrowserCapabilities" />
        <altmember cref="P:System.Web.HttpRequest.Browser" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f"><span data-ttu-id="95e48-486">Controles de servidor ASP.NET y las capacidades del explorador</span><span class="sxs-lookup"><span data-stu-id="95e48-486">ASP.NET Server Controls and Browser Capabilities</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Web.HttpRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-487">Obtiene la dirección IP del host del cliente remoto.</span><span class="sxs-lookup"><span data-stu-id="95e48-487">Gets the IP host address of the remote client.</span></span></summary>
        <value><span data-ttu-id="95e48-488">Dirección IP del cliente remoto.</span><span class="sxs-lookup"><span data-stu-id="95e48-488">The IP address of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-489">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.UserHostAddress%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-489">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostAddress%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-490">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-490">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Web.HttpRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-491">Obtiene el nombre DNS del cliente remoto.</span><span class="sxs-lookup"><span data-stu-id="95e48-491">Gets the DNS name of the remote client.</span></span></summary>
        <value><span data-ttu-id="95e48-492">Nombre DNS del cliente remoto.</span><span class="sxs-lookup"><span data-stu-id="95e48-492">The DNS name of the remote client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-493">El siguiente ejemplo de código utiliza el <xref:System.Web.HttpUtility.HtmlEncode%2A> método para codificar en HTML el valor de la <xref:System.Web.HttpRequest.UserHostName%2A> propiedad y el <xref:System.IO.TextWriter.WriteLine%2A> método para escribir el valor codificado en el archivo.</span><span class="sxs-lookup"><span data-stu-id="95e48-493">The following code example uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to HTML-encode the value of the <xref:System.Web.HttpRequest.UserHostName%2A> property and the <xref:System.IO.TextWriter.WriteLine%2A> method to write the encoded value to the file.</span></span> <span data-ttu-id="95e48-494">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Web.HttpRequest> clase.</span><span class="sxs-lookup"><span data-stu-id="95e48-494">This code example is part of a larger example provided for the <xref:System.Web.HttpRequest> class.</span></span>  
  
 [!code-csharp[System.Web.HttpRequest_Sample1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/CS/requestdetailscs.aspx#7)]
 [!code-vb[System.Web.HttpRequest_Sample1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.HttpRequest_Sample1/VB/requestdetailsvb.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Web.HttpRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="95e48-495">Obtiene una matriz de cadenas ordenada con las preferencias de idioma del cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-495">Gets a sorted string array of client language preferences.</span></span></summary>
        <value><span data-ttu-id="95e48-496">Matriz de cadenas ordenada con las preferencias de idioma del cliente, o <see langword="null" /> si está vacía.</span><span class="sxs-lookup"><span data-stu-id="95e48-496">A sorted string array of client language preferences, or <see langword="null" /> if empty.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="95e48-497">En el ejemplo de código siguiente se captura los diversos valores devueltos por la <xref:System.Web.HttpRequest.UserLanguages%2A> propiedad en una matriz de cadenas y escribe el nombre de cada idioma en una línea distinta de la salida HTTP.</span><span class="sxs-lookup"><span data-stu-id="95e48-497">The following code example captures the multiple values returned by the <xref:System.Web.HttpRequest.UserLanguages%2A> property into a string array and writes each language name to a separate line of HTTP output.</span></span>  
  
 <span data-ttu-id="95e48-498">Los nombres de lenguaje son proporcionados por el explorador y no hay ninguna lista definitiva de todos los posibles códigos.</span><span class="sxs-lookup"><span data-stu-id="95e48-498">The language names are provided by the browser, and there is no definitive list of all possible codes.</span></span>  <span data-ttu-id="95e48-499">Normalmente, estos elementos consisten un códigos de dos caracteres para el lenguaje, un guión y un código de dos caracteres para la referencia cultural, como "en-us" para EE. UU. El inglés y "fr-ca" para francés canadiense.</span><span class="sxs-lookup"><span data-stu-id="95e48-499">Typically these consist of a two-character codes for the language, a hyphen, and a two-character code for the culture, such as "en-us" for U.S. English and "fr-ca" for Canadian French.</span></span>  
  
 [!code-csharp[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/CS/source.cs#1)]
 [!code-vb[Classic HttpRequest.UserLanguages Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpRequest.UserLanguages Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public void ValidateInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpRequest.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateInput();" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : unit -&gt; unit" Usage="httpRequest.ValidateInput " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="95e48-500">Hace que se produzca la validación en las colecciones a las que se obtuvo acceso a través de las propiedades <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" /> y <see cref="P:System.Web.HttpRequest.QueryString" />.</span><span class="sxs-lookup"><span data-stu-id="95e48-500">Causes validation to occur for the collections accessed through the <see cref="P:System.Web.HttpRequest.Cookies" />, <see cref="P:System.Web.HttpRequest.Form" />, and <see cref="P:System.Web.HttpRequest.QueryString" /> properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95e48-501">El <xref:System.Web.HttpRequest> clase utiliza marcas de validación de entrada para realizar un seguimiento de si se debe realizar la validación en las colecciones de solicitud tiene acceso a través del <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, y <xref:System.Web.HttpRequest.QueryString%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="95e48-501">The <xref:System.Web.HttpRequest> class uses input validation flags to track whether to perform validation on the request collections accessed through the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, and <xref:System.Web.HttpRequest.QueryString%2A> properties.</span></span> <span data-ttu-id="95e48-502">El <xref:System.Web.HttpRequest.ValidateInput%2A> método establece estos marcadores de modo que, cuando los descriptores de acceso get el <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, o <xref:System.Web.HttpRequest.QueryString%2A> se invoca la propiedad, se realiza la validación de entrada.</span><span class="sxs-lookup"><span data-stu-id="95e48-502">The <xref:System.Web.HttpRequest.ValidateInput%2A> method sets these flags so that when the get accessors for the <xref:System.Web.HttpRequest.Cookies%2A>, <xref:System.Web.HttpRequest.Form%2A>, or <xref:System.Web.HttpRequest.QueryString%2A> property are invoked, input validation is performed.</span></span> <span data-ttu-id="95e48-503">Validación funciona mediante la comprobación de todos los datos de entrada con una lista codificada de forma rígida de datos potencialmente peligrosos.</span><span class="sxs-lookup"><span data-stu-id="95e48-503">Validation works by checking all input data against a hard-coded list of potentially dangerous data.</span></span>  
  
 <span data-ttu-id="95e48-504">Si está habilitada la característica de validación mediante la directiva de página o la configuración, se llama a este método durante la página `ProcessRequest` fase del proceso.</span><span class="sxs-lookup"><span data-stu-id="95e48-504">If the validation feature is enabled by page directive or configuration, this method is called during the page's `ProcessRequest` processing phase.</span></span> <span data-ttu-id="95e48-505">El <xref:System.Web.HttpRequest.ValidateInput%2A> método puede llamarse mediante su código si no está habilitada la característica de validación.</span><span class="sxs-lookup"><span data-stu-id="95e48-505">The <xref:System.Web.HttpRequest.ValidateInput%2A> method can be called by your code if the validation feature is not enabled.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpRequestValidationException"><span data-ttu-id="95e48-506">Se recibieron datos potencialmente peligrosos del cliente.</span><span class="sxs-lookup"><span data-stu-id="95e48-506">Potentially dangerous data was received from the client.</span></span></exception>
        <altmember cref="P:System.Web.HttpRequest.Cookies" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="HttpContextBase" FullName="System.Web.HttpContextBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0368aacb61e9a25cd758ac8885634d4259b6e698" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53471491" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpContextBase : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContextBase extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpContextBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContextBase&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContextBase abstract : IServiceProvider" />
  <TypeSignature Language="F#" Value="type HttpContextBase = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Abstractions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="abc92-101">Actúa como clase base para las clases que contienen información específica de HTTP sobre una solicitud HTTP individual.</span><span class="sxs-lookup"><span data-stu-id="abc92-101">Serves as the base class for classes that contain HTTP-specific information about an individual HTTP request.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc92-102">El <xref:System.Web.HttpContextBase> clase es una clase abstracta que contiene los mismos miembros que el <xref:System.Web.HttpContext> clase.</span><span class="sxs-lookup"><span data-stu-id="abc92-102">The <xref:System.Web.HttpContextBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="abc92-103">El <xref:System.Web.HttpContextBase> clase le permite crear clases derivadas que son similares a los <xref:System.Web.HttpContext> clase, pero que se puede personalizar y que funcionan fuera de la canalización ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="abc92-103">The <xref:System.Web.HttpContextBase> class enables you to create derived classes that are like the <xref:System.Web.HttpContext> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="abc92-104">Al realizar las pruebas unitarias, suelen usar una clase derivada para implementar a los miembros con el comportamiento personalizado que cumple el escenario que se está probando.</span><span class="sxs-lookup"><span data-stu-id="abc92-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="abc92-105">La clase <xref:System.Web.HttpContextWrapper> se deriva de la clase <xref:System.Web.HttpContextBase> .</span><span class="sxs-lookup"><span data-stu-id="abc92-105">The <xref:System.Web.HttpContextWrapper> class derives from the <xref:System.Web.HttpContextBase> class.</span></span> <span data-ttu-id="abc92-106">El <xref:System.Web.HttpContextWrapper> clase que actúa como un contenedor para el <xref:System.Web.HttpContext> clase.</span><span class="sxs-lookup"><span data-stu-id="abc92-106">The <xref:System.Web.HttpContextWrapper> class serves as a wrapper for the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="abc92-107">En tiempo de ejecución, se utiliza normalmente una instancia de la <xref:System.Web.HttpContextWrapper> clase para llamar a los miembros en el <xref:System.Web.HttpContext> objeto.</span><span class="sxs-lookup"><span data-stu-id="abc92-107">At run time, you typically use an instance of the <xref:System.Web.HttpContextWrapper> class to call members on the <xref:System.Web.HttpContext> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContextBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContextBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abc92-108">Inicializa la clase para que la use una instancia de la clase heredada.</span><span class="sxs-lookup"><span data-stu-id="abc92-108">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="abc92-109">A este constructor solo lo puede llamar una clase heredada.</span><span class="sxs-lookup"><span data-stu-id="abc92-109">This constructor can only be called by an inherited class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptWebSocketRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abc92-110">Cuando se implementa en una clase derivada, acepta una solicitud de <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-110">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc);" />
      <MemberSignature Language="F#" Value="abstract member AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; -&gt; unit&#xA;override this.AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="httpContextBase.AcceptWebSocketRequest userFunc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="userFunc"><span data-ttu-id="abc92-111">Función de usuario.</span><span class="sxs-lookup"><span data-stu-id="abc92-111">The user function.</span></span></param>
        <summary><span data-ttu-id="abc92-112">Cuando se implementa en una clase derivada, acepta una solicitud <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> mediante la función especificada del usuario.</span><span class="sxs-lookup"><span data-stu-id="abc92-112">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc, class System.Web.WebSockets.AspNetWebSocketOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task), options As AspNetWebSocketOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc, System::Web::WebSockets::AspNetWebSocketOptions ^ options);" />
      <MemberSignature Language="F#" Value="abstract member AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; * System.Web.WebSockets.AspNetWebSocketOptions -&gt; unit&#xA;override this.AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; * System.Web.WebSockets.AspNetWebSocketOptions -&gt; unit" Usage="httpContextBase.AcceptWebSocketRequest (userFunc, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="options" Type="System.Web.WebSockets.AspNetWebSocketOptions" />
      </Parameters>
      <Docs>
        <param name="userFunc"><span data-ttu-id="abc92-113">Función de usuario.</span><span class="sxs-lookup"><span data-stu-id="abc92-113">The user function.</span></span></param>
        <param name="options"><span data-ttu-id="abc92-114">Objeto de opciones.</span><span class="sxs-lookup"><span data-stu-id="abc92-114">The options object.</span></span></param>
        <summary><span data-ttu-id="abc92-115">Cuando se implementa en una clase derivada, acepta una solicitud <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> mediante la función de usuario y el objeto de opciones especificados.</span><span class="sxs-lookup"><span data-stu-id="abc92-115">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function and options object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddError">
      <MemberSignature Language="C#" Value="public virtual void AddError (Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddError(class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddError (errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddError(Exception ^ errorInfo);" />
      <MemberSignature Language="F#" Value="abstract member AddError : Exception -&gt; unit&#xA;override this.AddError : Exception -&gt; unit" Usage="httpContextBase.AddError errorInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorInfo"><span data-ttu-id="abc92-116">Excepción que se va a agregar a la colección de excepciones.</span><span class="sxs-lookup"><span data-stu-id="abc92-116">The exception to add to the exception collection.</span></span></param>
        <summary><span data-ttu-id="abc92-117">Si se reemplaza en una clase derivada, agrega una excepción a la colección de excepciones de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-117">When overridden in a derived class, adds an exception to the exception collection for the current HTTP request.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-118">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-118">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddOnRequestCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken AddOnRequestCompleted (Action&lt;System.Web.HttpContextBase&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken AddOnRequestCompleted(class System.Action`1&lt;class System.Web.HttpContextBase&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddOnRequestCompleted(System.Action{System.Web.HttpContextBase})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOnRequestCompleted (callback As Action(Of HttpContextBase)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ AddOnRequestCompleted(Action&lt;System::Web::HttpContextBase ^&gt; ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member AddOnRequestCompleted : Action&lt;System.Web.HttpContextBase&gt; -&gt; System.Web.ISubscriptionToken&#xA;override this.AddOnRequestCompleted : Action&lt;System.Web.HttpContextBase&gt; -&gt; System.Web.ISubscriptionToken" Usage="httpContextBase.AddOnRequestCompleted callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase&gt;" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="abc92-119">Objeto de contexto HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-119">The HTTP context object.</span></span></param>
        <summary><span data-ttu-id="abc92-120">Cuando se implementa en una clase derivada, genera un evento virtual que se produce cuando está finalizando la parte HTTP de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-120">When implemented in a derived class, raises a virtual event that occurs when the HTTP part of the request is ending.</span></span></summary>
        <returns><span data-ttu-id="abc92-121">Token de suscripción.</span><span class="sxs-lookup"><span data-stu-id="abc92-121">The subscription token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc92-122">Este evento se produce antes de la <xref:System.Web.WebSockets.AspNetWebSocket> comienza la conexión.</span><span class="sxs-lookup"><span data-stu-id="abc92-122">This event occurs before the <xref:System.Web.WebSockets.AspNetWebSocket> connection begins.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllErrors">
      <MemberSignature Language="C#" Value="public virtual Exception[] AllErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception[] AllErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllErrors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllErrors As Exception()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Exception ^&gt; ^ AllErrors { cli::array &lt;Exception ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllErrors : Exception[]" Usage="System.Web.HttpContextBase.AllErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-123">Si se reemplaza en una clase derivada, obtiene una matriz de errores (si los hay) acumulados durante el procesamiento de una solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-123">When overridden in a derived class, gets an array of errors (if any) that accumulated when an HTTP request was being processed.</span></span></summary>
        <value><span data-ttu-id="abc92-124">Matriz de objetos <see cref="T:System.Exception" /> de la solicitud HTTP actual, o <see langword="null" /> si no se acumuló ningún error durante el procesamiento de la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-124">An array of <see cref="T:System.Exception" /> objects for the current HTTP request, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-125">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-125">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowAsyncDuringSyncStages">
      <MemberSignature Language="C#" Value="public virtual bool AllowAsyncDuringSyncStages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAsyncDuringSyncStages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllowAsyncDuringSyncStages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAsyncDuringSyncStages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAsyncDuringSyncStages { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAsyncDuringSyncStages : bool with get, set" Usage="System.Web.HttpContextBase.AllowAsyncDuringSyncStages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-126">Cuando se implementa en una clase derivada, obtiene o establece un valor que indica si las operaciones asincrónicas están permitidas durante partes del procesamiento de solicitudes ASP.NET cuando no se esperan.</span><span class="sxs-lookup"><span data-stu-id="abc92-126">When implemented in a derived class, gets or sets a value that indicates whether asynchronous operations are allowed during parts of ASP.NET request processing when they are not expected.</span></span></summary>
        <value><span data-ttu-id="abc92-127"><see langword="false" /> si ASP.NET producirá una excepción cuando se use la API asincrónica en un momento en que no se espera; en caso contrario, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-127"><see langword="false" /> if ASP.NET will throw an exception when the asynchronous API is used at a time when it is not expected; otherwise, <see langword="true" />.</span></span> <span data-ttu-id="abc92-128">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-128">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc92-129">Para obtener más información, vea <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="abc92-129">For more information, see <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Application" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Application As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Application { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationStateBase" Usage="System.Web.HttpContextBase.Application" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-130">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.HttpApplicationState" /> de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-130">When overridden in a derived class, gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-131">Objeto de estado de aplicación de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-131">The application state object for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-132">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-132">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstance">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplication ApplicationInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplication ApplicationInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ApplicationInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplicationInstance As HttpApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplication ^ ApplicationInstance { System::Web::HttpApplication ^ get(); void set(System::Web::HttpApplication ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationInstance : System.Web.HttpApplication with get, set" Usage="System.Web.HttpContextBase.ApplicationInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-133">Si se reemplaza en una clase derivada, obtiene o establece el objeto <see cref="T:System.Web.HttpApplication" /> de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-133">When overridden in a derived class, gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-134">Objeto de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-134">The object for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-135">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-135">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberSignature Language="F#" Value="member this.AsyncPreloadMode : System.Web.Configuration.AsyncPreloadModeFlags with get, set" Usage="System.Web.HttpContextBase.AsyncPreloadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-136">Cuando se implementa en una clase derivada, obtiene o establece un objeto que contiene marcas pertenecientes al modo asincrónico de precarga.</span><span class="sxs-lookup"><span data-stu-id="abc92-136">When implemented in a derived class, gets or sets an object that contains flags that pertain to asynchronous preload mode.</span></span></summary>
        <value><span data-ttu-id="abc92-137">Objeto que contiene marcas que pertenecen al modo de precarga asincrónico.</span><span class="sxs-lookup"><span data-stu-id="abc92-137">An object that contains flags that pertain to asynchronous preload mode.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.HttpContextBase.Cache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-138">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.Caching.Cache" /> del dominio de aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-138">When overridden in a derived class, gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</span></span></summary>
        <value><span data-ttu-id="abc92-139">Memoria caché para el dominio de aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-139">The cache for the current application domain.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-140">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-140">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" />
      <MemberSignature Language="F#" Value="abstract member ClearError : unit -&gt; unit&#xA;override this.ClearError : unit -&gt; unit" Usage="httpContextBase.ClearError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="abc92-141">Si se reemplaza en una clase derivada, borra todos los errores de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-141">When overridden in a derived class, clears all errors for the current HTTP request.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-142">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-142">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler CurrentHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler CurrentHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ CurrentHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentHandler : System.Web.IHttpHandler" Usage="System.Web.HttpContextBase.CurrentHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-143">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.IHttpHandler" /> que representa el controlador que se ejecuta actualmente.</span><span class="sxs-lookup"><span data-stu-id="abc92-143">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the handler that is currently executing.</span></span></summary>
        <value><span data-ttu-id="abc92-144">Objeto que representa el controlador que se ejecuta actualmente.</span><span class="sxs-lookup"><span data-stu-id="abc92-144">An object that represents the currently executing handler.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-145">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-145">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentNotification">
      <MemberSignature Language="C#" Value="public virtual System.Web.RequestNotification CurrentNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.RequestNotification CurrentNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentNotification As RequestNotification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::RequestNotification CurrentNotification { System::Web::RequestNotification get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentNotification : System.Web.RequestNotification" Usage="System.Web.HttpContextBase.CurrentNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.RequestNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-146">Si se reemplaza en una clase derivada, obtiene un valor <see cref="T:System.Web.RequestNotification" /> que indica el evento <see cref="T:System.Web.HttpApplication" /> que se procesa actualmente.</span><span class="sxs-lookup"><span data-stu-id="abc92-146">When overridden in a derived class, gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the <see cref="T:System.Web.HttpApplication" /> event that is currently processing.</span></span></summary>
        <value><span data-ttu-id="abc92-147">Uno de los valores de <see cref="T:System.Web.RequestNotification" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-147">One of the <see cref="T:System.Web.RequestNotification" /> values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-148">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-148">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DisposeOnPipelineCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken DisposeOnPipelineCompleted(class System.IDisposable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.DisposeOnPipelineCompleted(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeOnPipelineCompleted (target As IDisposable) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ DisposeOnPipelineCompleted(IDisposable ^ target);" />
      <MemberSignature Language="F#" Value="abstract member DisposeOnPipelineCompleted : IDisposable -&gt; System.Web.ISubscriptionToken&#xA;override this.DisposeOnPipelineCompleted : IDisposable -&gt; System.Web.ISubscriptionToken" Usage="httpContextBase.DisposeOnPipelineCompleted target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="abc92-149">El objeto a cuyo método <see cref="M:System.IDisposable.Dispose" /> debe llamarse cuando se complete la parte de conexión de <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-149">The object whose <see cref="M:System.IDisposable.Dispose" /> method must be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of the request is completed.</span></span></param>
        <summary><span data-ttu-id="abc92-150">Cuando se implementa en una clase derivada, permite llamar al método <see cref="M:System.IDisposable.Dispose" /> de un objeto cuando se complete la parte de conexión de <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> de esta solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-150">When implemented in a derived class, enables an object's <see cref="M:System.IDisposable.Dispose" /> method to be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of this request is completed.</span></span></summary>
        <returns><span data-ttu-id="abc92-151">Token de suscripción.</span><span class="sxs-lookup"><span data-stu-id="abc92-151">The subscription token.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Error" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Exception ^ Error { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : Exception" Usage="System.Web.HttpContextBase.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-152">Si se reemplaza en una clase derivada, obtiene el primer error (si existe) acumulado durante el procesamiento de una solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-152">When overridden in a derived class, gets the first error (if any) that accumulated when an HTTP request was being processed.</span></span></summary>
        <value><span data-ttu-id="abc92-153">Primera excepción del proceso de solicitud/respuesta HTTP actual, o bien <see langword="null" /> si no se acumuló ningún error durante el procesamiento de la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-153">The first exception for the current HTTP request/response process, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-154">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-154">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGlobalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abc92-155">Cuando se invalida en una clase derivada, obtiene un recurso de aplicación.</span><span class="sxs-lookup"><span data-stu-id="abc92-155">When overridden in a derived class, gets an application-level resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey);" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalResourceObject : string * string -&gt; obj&#xA;override this.GetGlobalResourceObject : string * string -&gt; obj" Usage="httpContextBase.GetGlobalResourceObject (classKey, resourceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey"><span data-ttu-id="abc92-156">Cadena que representa la propiedad <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> del objeto de recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="abc92-156">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="abc92-157">Cadena que representa la propiedad <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> del objeto de recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="abc92-157">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <summary><span data-ttu-id="abc92-158">Si se reemplaza en una clase derivada, obtiene un objeto de recurso de nivel de aplicación basado en las propiedades <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> y <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> especificadas.</span><span class="sxs-lookup"><span data-stu-id="abc92-158">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span></span></summary>
        <returns><span data-ttu-id="abc92-159">Objeto de recurso de nivel de aplicación solicitado, o <see langword="null" /> si no se encuentra un objeto de recurso correspondiente.</span><span class="sxs-lookup"><span data-stu-id="abc92-159">The requested application-level resource object, or <see langword="null" /> if no matching resource object is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-160">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-160">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetGlobalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj" Usage="httpContextBase.GetGlobalResourceObject (classKey, resourceKey, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="classKey"><span data-ttu-id="abc92-161">Cadena que representa la propiedad <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> del objeto de recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="abc92-161">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="abc92-162">Cadena que representa la propiedad <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> del objeto de recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="abc92-162">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <param name="culture"><span data-ttu-id="abc92-163">Cadena que representa el objeto <see cref="T:System.Globalization.CultureInfo" /> del recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="abc92-163">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</span></span></param>
        <summary><span data-ttu-id="abc92-164">Si se reemplaza en una clase derivada, obtiene un objeto de recurso de nivel de aplicación basado en las propiedades <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> y <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> especificadas, y en el objeto <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-164">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="abc92-165">Objeto de recurso de nivel de aplicación solicitado, localizado para la referencia cultural especificada, o <see langword="null" /> si no se encuentra un objeto de recurso correspondiente.</span><span class="sxs-lookup"><span data-stu-id="abc92-165">The requested application-level resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-166">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-166">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abc92-167">Cuando se invalida en una clase derivada, obtiene un recurso de página.</span><span class="sxs-lookup"><span data-stu-id="abc92-167">When overridden in a derived class, gets a page-level resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalResourceObject : string * string -&gt; obj&#xA;override this.GetLocalResourceObject : string * string -&gt; obj" Usage="httpContextBase.GetLocalResourceObject (virtualPath, resourceKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="abc92-168">Cadena que representa la propiedad <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> del objeto de recurso local.</span><span class="sxs-lookup"><span data-stu-id="abc92-168">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="abc92-169">Cadena que representa la propiedad <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> del objeto de recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="abc92-169">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <summary><span data-ttu-id="abc92-170">Si se reemplaza en una clase derivada, obtiene un objeto de recurso de nivel de página basado en las propiedades <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> y <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> especificadas.</span><span class="sxs-lookup"><span data-stu-id="abc92-170">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span></span></summary>
        <returns><span data-ttu-id="abc92-171">Objeto de recurso de nivel de página solicitado, o <see langword="null" /> si no se encuentra un objeto de recurso correspondiente.</span><span class="sxs-lookup"><span data-stu-id="abc92-171">The requested page-level resource object, or <see langword="null" /> if no matching resource object is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-172">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-172">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetLocalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetLocalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj" Usage="httpContextBase.GetLocalResourceObject (virtualPath, resourceKey, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="abc92-173">Cadena que representa la propiedad <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> del objeto de recurso local.</span><span class="sxs-lookup"><span data-stu-id="abc92-173">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span></span></param>
        <param name="resourceKey"><span data-ttu-id="abc92-174">Cadena que representa la propiedad <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> del objeto de recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="abc92-174">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span></span></param>
        <param name="culture"><span data-ttu-id="abc92-175">Cadena que representa el objeto <see cref="T:System.Globalization.CultureInfo" /> del objeto de recurso solicitado.</span><span class="sxs-lookup"><span data-stu-id="abc92-175">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</span></span></param>
        <summary><span data-ttu-id="abc92-176">Si se reemplaza en una clase derivada, obtiene un objeto de recurso de nivel de página basado en las propiedades <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> y <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> especificadas, y en el objeto <see cref="T:System.Globalization.CultureInfo" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-176">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span></span></summary>
        <returns><span data-ttu-id="abc92-177">Objeto de recurso local solicitado, localizado para la referencia cultural especificada; en caso contrario, o <see langword="null" /> si no se encuentra un objeto de recurso correspondiente.</span><span class="sxs-lookup"><span data-stu-id="abc92-177">The requested local resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-178">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-178">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public virtual object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberSignature Language="F#" Value="abstract member GetSection : string -&gt; obj&#xA;override this.GetSection : string -&gt; obj" Usage="httpContextBase.GetSection sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName"><span data-ttu-id="abc92-179">Ruta de acceso de la sección de configuración (en formato XPath) y nombre del elemento de configuración.</span><span class="sxs-lookup"><span data-stu-id="abc92-179">The configuration section path (in XPath format) and the configuration element name.</span></span></param>
        <summary><span data-ttu-id="abc92-180">Si se reemplaza en una clase derivada, obtiene la sección de configuración especificada de la configuración predeterminada de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-180">When overridden in a derived class, gets the specified configuration section of the current application's default configuration.</span></span></summary>
        <returns><span data-ttu-id="abc92-181">Sección especificada o <see langword="null" /> si la sección no existe.</span><span class="sxs-lookup"><span data-stu-id="abc92-181">The specified section, or <see langword="null" /> if the section does not exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-182">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-182">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="httpContextBase.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="abc92-183">Objeto del tipo de servicio que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="abc92-183">The type of service object to get.</span></span></param>
        <summary><span data-ttu-id="abc92-184">Si se reemplaza en una clase derivada, devuelve un objeto del tipo de servicio actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-184">When overridden in a derived class, returns an object for the current service type.</span></span></summary>
        <returns><span data-ttu-id="abc92-185">Tipo de servicio actual, o <see langword="null" /> si no se encuentra ningún servicio.</span><span class="sxs-lookup"><span data-stu-id="abc92-185">The current service type, or <see langword="null" /> if no service is found.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-186">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-186">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler Handler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ Handler { System::Web::IHttpHandler ^ get(); void set(System::Web::IHttpHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : System.Web.IHttpHandler with get, set" Usage="System.Web.HttpContextBase.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-187">Si se reemplaza en una clase derivada, obtiene o establece el objeto <see cref="T:System.Web.IHttpHandler" /> responsable del procesamiento de la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-187">When overridden in a derived class, gets or sets the <see cref="T:System.Web.IHttpHandler" /> object that is responsible for processing the HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-188">Objeto responsable del procesamiento de la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-188">The object that is responsible for processing the HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-189">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-189">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsCustomErrorEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsCustomErrorEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomErrorEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsCustomErrorEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCustomErrorEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCustomErrorEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomErrorEnabled : bool" Usage="System.Web.HttpContextBase.IsCustomErrorEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-190">Si se reemplaza en una clase derivada, obtiene un valor que indica si los errores personalizados están habilitados para la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-190">When overridden in a derived class, gets a value that indicates whether custom errors are enabled for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-191">Es <see langword="true" /> si se habilitaron errores personalizados; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-191"><see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-192">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-192">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDebuggingEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDebuggingEnabled : bool" Usage="System.Web.HttpContextBase.IsDebuggingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-193">Si se reemplaza en una clase derivada, obtiene un valor que indica si la solicitud HTTP actual está en modo de depuración.</span><span class="sxs-lookup"><span data-stu-id="abc92-193">When overridden in a derived class, gets a value that indicates whether the current HTTP request is in debug mode.</span></span></summary>
        <value><span data-ttu-id="abc92-194">Es <see langword="true" /> si la solicitud está en modo de depuración; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-194"><see langword="true" /> if the request is in debug mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-195">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-195">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsPostNotification">
      <MemberSignature Language="C#" Value="public virtual bool IsPostNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsPostNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPostNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPostNotification { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPostNotification : bool" Usage="System.Web.HttpContextBase.IsPostNotification" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-196">Si se reemplaza en una clase derivada, obtiene un valor que indica si un evento <see cref="T:System.Web.HttpApplication" /> ha terminado el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="abc92-196">When overridden in a derived class, gets a value that indicates whether an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</span></span></summary>
        <value><span data-ttu-id="abc92-197"><see langword="true" /> si el evento ha terminado el procesamiento; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-197"><see langword="true" /> if the event has finished processing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-198">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-198">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Web.HttpContextBase.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-199">Cuando se implementa en una clase derivada, obtiene un valor que indica si la solicitud es una solicitud de conexión <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-199">When implemented in a derived class, gets a value that indicates whether the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection request.</span></span></summary>
        <value><span data-ttu-id="abc92-200"><see langword="true" /> si la solicitud es una solicitud <see cref="T:System.Web.WebSockets.AspNetWebSocket" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-200"><see langword="true" /> if the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequestUpgrading">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequestUpgrading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequestUpgrading" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequestUpgrading" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequestUpgrading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequestUpgrading { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequestUpgrading : bool" Usage="System.Web.HttpContextBase.IsWebSocketRequestUpgrading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-201">Cuando se implementa en una clase derivada, obtiene un valor que indica si la conexión se está actualizando de una conexión HTTP a una conexión <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-201">When implemented in a derived class, gets a value that indicates whether the connection is upgrading from an HTTP connection to an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="abc92-202">Es <see langword="true" /> si la conexión se está actualizando; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-202"><see langword="true" /> if the connection is upgrading; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IDictionary" Usage="System.Web.HttpContextBase.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-203">Si se reemplaza en una clase derivada, obtiene una colección de claves/valores que se puede usar para organizar y compartir datos entre un módulo y un controlador durante una solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-203">When overridden in a derived class, gets a key/value collection that can be used to organize and share data between a module and a handler during an HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-204">Colección de claves/valores que proporciona acceso a un valor individual de la colección mediante una clave especificada.</span><span class="sxs-lookup"><span data-stu-id="abc92-204">A key/value collection that provides access to an individual value in the collection by using a specified key.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-205">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-205">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PageInstrumentation">
      <MemberSignature Language="C#" Value="public virtual System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Instrumentation.PageInstrumentationService PageInstrumentation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PageInstrumentation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageInstrumentation As PageInstrumentationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Instrumentation::PageInstrumentationService ^ PageInstrumentation { System::Web::Instrumentation::PageInstrumentationService ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PageInstrumentation : System.Web.Instrumentation.PageInstrumentationService" Usage="System.Web.HttpContextBase.PageInstrumentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Instrumentation.PageInstrumentationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-206">Cuando se implementa en una clase derivada, obtiene una referencia a la instancia del servicio de instrumentación de páginas para esta solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-206">When implemented in a derived class, gets a reference to the page-instrumentation service instance for this request.</span></span></summary>
        <value><span data-ttu-id="abc92-207">Instancia del servicio de instrumentación de página para esta solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-207">The page-instrumentation service instance for this request.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler PreviousHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler PreviousHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PreviousHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ PreviousHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousHandler : System.Web.IHttpHandler" Usage="System.Web.HttpContextBase.PreviousHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-208">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.IHttpHandler" /> para el controlador primario.</span><span class="sxs-lookup"><span data-stu-id="abc92-208">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</span></span></summary>
        <value><span data-ttu-id="abc92-209">Objeto <see cref="T:System.Web.IHttpHandler" /> que representa el controlador primario, o <see langword="null" /> si no se encuentra ningún controlador primario.</span><span class="sxs-lookup"><span data-stu-id="abc92-209">An <see cref="T:System.Web.IHttpHandler" /> object that represents the parent handler, or <see langword="null" /> if no parent handler was found.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-210">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-210">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Profile.ProfileBase Profile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Profile.ProfileBase Profile" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Profile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Profile As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Profile::ProfileBase ^ Profile { System::Web::Profile::ProfileBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Profile : System.Web.Profile.ProfileBase" Usage="System.Web.HttpContextBase.Profile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-211">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.Profile.ProfileBase" /> del perfil de usuario actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-211">When overridden in a derived class, gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</span></span></summary>
        <value><span data-ttu-id="abc92-212">Si se definen las propiedades de perfil en el archivo de configuración de la aplicación y los perfiles están habilitados para la aplicación, un objeto que representa el perfil de usuario actual; en caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-212">If the profile properties are defined in the application configuration file and profiles are enabled for the application, an object that represents the current user profile; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-213">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-213">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemapHandler">
      <MemberSignature Language="C#" Value="public virtual void RemapHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemapHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RemapHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemapHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemapHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemapHandler : System.Web.IHttpHandler -&gt; unit&#xA;override this.RemapHandler : System.Web.IHttpHandler -&gt; unit" Usage="httpContextBase.RemapHandler handler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="abc92-214">Objeto que debe procesar la solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-214">The object that should process the request.</span></span></param>
        <summary><span data-ttu-id="abc92-215">Cuando se reemplaza en una clase derivada, especifica un controlador para la solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-215">When overridden in a derived class, specifies a handler for the request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc92-216">Si establece `handler` a `null`, el controlador predeterminado se utiliza para procesar la solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-216">If you set `handler` to `null`, the default handler is used to process the request.</span></span> <span data-ttu-id="abc92-217">Puede establecer `handler` en un controlador asincrónico o un controlador sincrónico.</span><span class="sxs-lookup"><span data-stu-id="abc92-217">You can set `handler` to either an asynchronous handler or to an synchronous handler.</span></span> <span data-ttu-id="abc92-218">El controlador debe implementar la <xref:System.Web.IHttpHandler> interfaz.</span><span class="sxs-lookup"><span data-stu-id="abc92-218">The handler must implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-219">Un tipo derivado no puede implementar este método.</span><span class="sxs-lookup"><span data-stu-id="abc92-219">A derived type fails to implement this method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpRequestBase Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequestBase Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Request" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Request As HttpRequestBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpRequestBase ^ Request { System::Web::HttpRequestBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Request : System.Web.HttpRequestBase" Usage="System.Web.HttpContextBase.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequestBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-220">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.HttpRequest" /> de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-220">When overridden in a derived class, gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-221">Solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-221">The current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-222">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-222">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpResponseBase Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponseBase Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Response" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Response As HttpResponseBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpResponseBase ^ Response { System::Web::HttpResponseBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Response : System.Web.HttpResponseBase" Usage="System.Web.HttpContextBase.Response" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponseBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-223">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.HttpResponse" /> de la respuesta HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-223">When overridden in a derived class, gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="abc92-224">Respuesta HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-224">The current HTTP response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-225">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-225">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RewritePath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="abc92-226">Cuando se invalida en una clase derivada, asigna una ruta de acceso de reescritura interna, lo que permite que la dirección URL de la solicitud difiera de la ruta de acceso interna al recurso.</span><span class="sxs-lookup"><span data-stu-id="abc92-226">When overridden in a derived class, assigns an internal rewrite path, which lets the request URL differ from the internal path of the resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string -&gt; unit&#xA;override this.RewritePath : string -&gt; unit" Usage="httpContextBase.RewritePath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="abc92-227">Ruta de acceso de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="abc92-227">The replacement path.</span></span></param>
        <summary><span data-ttu-id="abc92-228">Si se reemplaza en una clase derivada, reescribe la dirección URL usando la ruta de acceso especificada.</span><span class="sxs-lookup"><span data-stu-id="abc92-228">When overridden in a derived class, rewrites the URL by using the specified path.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-229">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-229">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path, bool rebaseClientPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path, bool rebaseClientPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String, rebaseClientPath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path, bool rebaseClientPath);" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * bool -&gt; unit&#xA;override this.RewritePath : string * bool -&gt; unit" Usage="httpContextBase.RewritePath (path, rebaseClientPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rebaseClientPath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="abc92-230">Ruta de acceso de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="abc92-230">The replacement path.</span></span></param>
        <param name="rebaseClientPath"><span data-ttu-id="abc92-231">Es <see langword="true" /> para restablecer la ruta de acceso virtual; es <see langword="false" /> para mantener si cambios la ruta de acceso virtual.</span><span class="sxs-lookup"><span data-stu-id="abc92-231"><see langword="true" /> to reset the virtual path; <see langword="false" /> to keep the virtual path unchanged.</span></span></param>
        <summary><span data-ttu-id="abc92-232">Si se reemplaza en la clase derivada, reescribe la dirección URL usando la ruta de acceso especificada y un valor que especifica si se modifica la ruta de acceso virtual para los recursos del servidor.</span><span class="sxs-lookup"><span data-stu-id="abc92-232">When overridden in a derived class, rewrites the URL by using the specified path and a value that specifies whether the virtual path for server resources is modified.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-233">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-233">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString);" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * string * string -&gt; unit&#xA;override this.RewritePath : string * string * string -&gt; unit" Usage="httpContextBase.RewritePath (filePath, pathInfo, queryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="abc92-234">Ruta de acceso de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="abc92-234">The replacement path.</span></span></param>
        <param name="pathInfo"><span data-ttu-id="abc92-235">Información adicional de la ruta de acceso de un recurso.</span><span class="sxs-lookup"><span data-stu-id="abc92-235">Additional path information for a resource.</span></span></param>
        <param name="queryString"><span data-ttu-id="abc92-236">Cadena de consulta de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-236">The request query string.</span></span></param>
        <summary><span data-ttu-id="abc92-237">Si se reemplaza en una clase derivada, reescribe la dirección URL usando la ruta de acceso, la información de ruta de acceso y la información de la cadena de consulta especificadas.</span><span class="sxs-lookup"><span data-stu-id="abc92-237">When overridden in a derived class, rewrites the URL by using the specified path, path information, and query string information.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-238">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-238">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String, setClientFilePath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString, bool setClientFilePath);" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * string * string * bool -&gt; unit&#xA;override this.RewritePath : string * string * string * bool -&gt; unit" Usage="httpContextBase.RewritePath (filePath, pathInfo, queryString, setClientFilePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="setClientFilePath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filePath"><span data-ttu-id="abc92-239">Ruta de acceso de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="abc92-239">The replacement path.</span></span></param>
        <param name="pathInfo"><span data-ttu-id="abc92-240">Información adicional de la ruta de acceso de un recurso.</span><span class="sxs-lookup"><span data-stu-id="abc92-240">Additional path information for a resource.</span></span></param>
        <param name="queryString"><span data-ttu-id="abc92-241">Cadena de consulta de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-241">The request query string.</span></span></param>
        <param name="setClientFilePath"><span data-ttu-id="abc92-242"><see langword="true" /> para establecer la ruta de acceso que utilizan los recursos del cliente como el valor del parámetro <paramref name="filePath" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-242"><see langword="true" /> to set the file path used for client resources to the value of the <paramref name="filePath" /> parameter; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="abc92-243">Si se reemplaza en una clase derivada, reescribe la dirección URL con la ruta de acceso especificada, la información de la ruta de acceso, la información de la cadena de consulta y un valor que especifica si la ruta de acceso del archivo del cliente se establece como la ruta de acceso de reescritura.</span><span class="sxs-lookup"><span data-stu-id="abc92-243">When overridden in a derived class, rewrites the URL by using the specified path, path information, query string information, and a value that specifies whether the client file path is set to the rewrite path.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-244">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-244">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpServerUtilityBase Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtilityBase Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Server As HttpServerUtilityBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpServerUtilityBase ^ Server { System::Web::HttpServerUtilityBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtilityBase" Usage="System.Web.HttpContextBase.Server" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtilityBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-245">Si se reemplaza en la clase derivada, obtiene el objeto <see cref="T:System.Web.HttpServerUtility" /> que proporciona métodos que se usan cuando el procesamiento de solicitudes web está en curso.</span><span class="sxs-lookup"><span data-stu-id="abc92-245">When overridden in a derived class, gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods that are used when Web requests are being processed.</span></span></summary>
        <value><span data-ttu-id="abc92-246">Objeto de la utilidad de servidor para la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-246">The server utility object for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-247">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-247">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpSessionStateBase Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpSessionStateBase Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpSessionStateBase ^ Session { System::Web::HttpSessionStateBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.HttpSessionStateBase" Usage="System.Web.HttpContextBase.Session" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpSessionStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-248">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.SessionState.HttpSessionState" /> de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-248">When overridden in a derived class, gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-249">Objeto de estado de sesión de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-249">The session-state object for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-250">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-250">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateBehavior">
      <MemberSignature Language="C#" Value="public virtual void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionStateBehavior(valuetype System.Web.SessionState.SessionStateBehavior sessionStateBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSessionStateBehavior(System::Web::SessionState::SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="F#" Value="abstract member SetSessionStateBehavior : System.Web.SessionState.SessionStateBehavior -&gt; unit&#xA;override this.SetSessionStateBehavior : System.Web.SessionState.SessionStateBehavior -&gt; unit" Usage="httpContextBase.SetSessionStateBehavior sessionStateBehavior" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionStateBehavior" Type="System.Web.SessionState.SessionStateBehavior" />
      </Parameters>
      <Docs>
        <param name="sessionStateBehavior"><span data-ttu-id="abc92-251">Uno de los valores de enumeración que especifica el tipo de comportamiento de estado de sesión que se requiere.</span><span class="sxs-lookup"><span data-stu-id="abc92-251">One of the enumeration values that specifies what type of session state behavior is required.</span></span></param>
        <summary><span data-ttu-id="abc92-252">Cuando se invalida en una clase derivada, establece el tipo de comportamiento de estado de sesión necesario para admitir una solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="abc92-252">When overridden in a derived class, sets the type of session state behavior that is required to support an HTTP request.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc92-253">El <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> método proporciona un método base que debe ser implementado por clases que heredan de este tipo.</span><span class="sxs-lookup"><span data-stu-id="abc92-253">The <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> method provides a base method that must be implemented by classes that inherit from this type.</span></span> <span data-ttu-id="abc92-254">ASP.NET implementa este método en el <xref:System.Web.HttpContextWrapper> y <xref:System.Web.HttpContext> clases.</span><span class="sxs-lookup"><span data-stu-id="abc92-254">ASP.NET implements this method in the <xref:System.Web.HttpContextWrapper> and <xref:System.Web.HttpContext> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-255">Un tipo derivado no puede implementar este método.</span><span class="sxs-lookup"><span data-stu-id="abc92-255">A derived type fails to implement this method.</span></span></exception>
        <altmember cref="M:System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      </Docs>
    </Member>
    <Member MemberName="SkipAuthorization">
      <MemberSignature Language="C#" Value="public virtual bool SkipAuthorization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipAuthorization" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.SkipAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipAuthorization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SkipAuthorization { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipAuthorization : bool with get, set" Usage="System.Web.HttpContextBase.SkipAuthorization" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-256">Si se reemplaza en una clase derivada, obtiene o establece un valor que especifica si el objeto <see cref="T:System.Web.Security.UrlAuthorizationModule" /> debe omitir la comprobación de autorización para la solicitud actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-256">When overridden in a derived class, gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</span></span></summary>
        <value><span data-ttu-id="abc92-257">Es <see langword="true" /> si <see cref="T:System.Web.Security.UrlAuthorizationModule" /> debe omitir la comprobación de autorización; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-257"><see langword="true" /> if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-258">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-258">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadAbortOnTimeout">
      <MemberSignature Language="C#" Value="public virtual bool ThreadAbortOnTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreadAbortOnTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ThreadAbortOnTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ThreadAbortOnTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ThreadAbortOnTimeout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ThreadAbortOnTimeout : bool with get, set" Usage="System.Web.HttpContextBase.ThreadAbortOnTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-259">Cuando se implementa en una clase derivada, obtiene o establece un valor que especifica si el runtime de ASP.NET debe llamar a <see cref="M:System.Threading.Thread.Abort" /> en el subproceso que está atendiendo esta solicitud cuando se agota el tiempo de espera de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="abc92-259">When implemented in a derived class, gets or sets a value that specifies whether the ASP.NET runtime should call <see cref="M:System.Threading.Thread.Abort" /> on the thread that is servicing this request when the request times out.</span></span></summary>
        <value><span data-ttu-id="abc92-260">Es <see langword="true" /> si se llamará a <see cref="M:System.Threading.Thread.Abort" /> cuando se agote el tiempo de espera del subproceso; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-260"><see langword="true" /> if <see cref="M:System.Threading.Thread.Abort" /> will be called when the thread times out; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="abc92-261">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-261">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="abc92-262">Para obtener más información, vea <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="abc92-262">For more information, see <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public virtual DateTime Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Timestamp As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime Timestamp { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : DateTime" Usage="System.Web.HttpContextBase.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-263">Si se reemplaza en una clase derivada, obtiene la marca de tiempo inicial de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-263">When overridden in a derived class, gets the initial timestamp of the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-264">Marca de tiempo de la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-264">The timestamp of the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-265">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-265">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public virtual System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Trace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Trace : System.Web.TraceContext" Usage="System.Web.HttpContextBase.Trace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-266">Si se reemplaza en una clase derivada, obtiene el objeto <see cref="T:System.Web.TraceContext" /> de la respuesta HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-266">When overridden in a derived class, gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</span></span></summary>
        <value><span data-ttu-id="abc92-267">Objeto de seguimiento de la respuesta HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-267">The trace object for the current HTTP response.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-268">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-268">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IPrincipal User { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.User" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal with get, set" Usage="System.Web.HttpContextBase.User" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-269">Si se reemplaza en una clase derivada, obtiene o establece la información de seguridad para la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-269">When overridden in a derived class, gets or sets security information for the current HTTP request.</span></span></summary>
        <value><span data-ttu-id="abc92-270">Objeto que contiene información de seguridad para la solicitud HTTP actual.</span><span class="sxs-lookup"><span data-stu-id="abc92-270">An object that contains security information for the current HTTP request.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="abc92-271">Siempre.</span><span class="sxs-lookup"><span data-stu-id="abc92-271">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WebSocketNegotiatedProtocol">
      <MemberSignature Language="C#" Value="public virtual string WebSocketNegotiatedProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebSocketNegotiatedProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketNegotiatedProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketNegotiatedProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebSocketNegotiatedProtocol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebSocketNegotiatedProtocol : string" Usage="System.Web.HttpContextBase.WebSocketNegotiatedProtocol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-272">Cuando se implementa en una clase derivada, obtiene el protocolo negociado que se envió desde el servidor al cliente para una conexión <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span><span class="sxs-lookup"><span data-stu-id="abc92-272">When implemented in a derived class, gets the negotiated protocol that was sent from the server to the client for an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span></span></summary>
        <value><span data-ttu-id="abc92-273">Protocolo negociado.</span><span class="sxs-lookup"><span data-stu-id="abc92-273">The negotiated protocol.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketRequestedProtocols">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; WebSocketRequestedProtocols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WebSocketRequestedProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketRequestedProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketRequestedProtocols As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::String ^&gt; ^ WebSocketRequestedProtocols { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WebSocketRequestedProtocols : System.Collections.Generic.IList&lt;string&gt;" Usage="System.Web.HttpContextBase.WebSocketRequestedProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="abc92-274">Cuando se implementa en una clase derivada, obtiene la lista ordenada de protocolos que solicitó el cliente.</span><span class="sxs-lookup"><span data-stu-id="abc92-274">When implemented in a derived class, gets the ordered list of protocols that were requested by the client.</span></span></summary>
        <value><span data-ttu-id="abc92-275">Protocolos solicitados, o <see langword="null" /> si no es una solicitud <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> o si no hay ninguna lista.</span><span class="sxs-lookup"><span data-stu-id="abc92-275">The requested protocols, or <see langword="null" /> if this is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request or if no list is present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
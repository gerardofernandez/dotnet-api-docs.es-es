<Type Name="HttpPostedFile" FullName="System.Web.HttpPostedFile">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b5f62f8871ee32c9fc3a853b7ca969414a5987d" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51862326" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpPostedFile" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpPostedFile extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpPostedFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpPostedFile" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpPostedFile sealed" />
  <TypeSignature Language="F#" Value="type HttpPostedFile = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5218f-101">Proporciona acceso a archivos individuales cargados por un cliente.</span><span class="sxs-lookup"><span data-stu-id="5218f-101">Provides access to individual files that have been uploaded by a client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5218f-102">La <xref:System.Web.HttpFileCollection> clase proporciona acceso a todos los archivos que se cargan desde un cliente como una colección de archivos.</span><span class="sxs-lookup"><span data-stu-id="5218f-102">The <xref:System.Web.HttpFileCollection> class provides access to all the files that are uploaded from a client as a file collection.</span></span> <span data-ttu-id="5218f-103">La <xref:System.Web.HttpPostedFile> clase proporciona propiedades y métodos para obtener información sobre un archivo individual y para leer y guardar el archivo.</span><span class="sxs-lookup"><span data-stu-id="5218f-103">The <xref:System.Web.HttpPostedFile> class provides properties and methods to get information about an individual file and to read and save the file.</span></span>  
  
 <span data-ttu-id="5218f-104">El <xref:System.Web.UI.HtmlControls.HtmlInputFile> control puede usarse para seleccionar y cargar archivos desde un cliente.</span><span class="sxs-lookup"><span data-stu-id="5218f-104">The <xref:System.Web.UI.HtmlControls.HtmlInputFile> control can be used to select and upload files from a client.</span></span>  
  
 <span data-ttu-id="5218f-105">Los archivos se cargan en formato MIME de varias partes/datos de formulario.</span><span class="sxs-lookup"><span data-stu-id="5218f-105">Files are uploaded in MIME multipart/form-data format.</span></span> <span data-ttu-id="5218f-106">De forma predeterminada, todas las solicitudes, incluidos los campos de formulario y los archivos cargados, mayores que 256 KB son almacenados en búfer en el disco, en lugar de en memoria de servidor.</span><span class="sxs-lookup"><span data-stu-id="5218f-106">By default, all requests, including form fields and uploaded files, larger than 256 KB are buffered to disk, rather than held in server memory.</span></span>  
  
 <span data-ttu-id="5218f-107">Puede especificar el tamaño máximo permitido para la solicitud mediante el acceso a la <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> propiedad o estableciendo la `maxRequestLength` atributo de la [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento dentro del archivo Machine.config o Archivo Web.config.</span><span class="sxs-lookup"><span data-stu-id="5218f-107">You can specify the maximum allowable request size by accessing the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> property or by setting the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element within the Machine.config or Web.config file.</span></span> <span data-ttu-id="5218f-108">El valor predeterminado es 4 MB.</span><span class="sxs-lookup"><span data-stu-id="5218f-108">The default is 4 MB.</span></span>  
  
 <span data-ttu-id="5218f-109">La cantidad de datos que se almacena en búfer en memoria del servidor para una solicitud, que incluye cargas de archivos, se puede especificar mediante el acceso a la <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> propiedad o estableciendo la `requestLengthDiskThreshold` atributo de la [httpRuntime Element (ASP.NET Settings Esquema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento dentro del archivo Machine.config o Web.config.</span><span class="sxs-lookup"><span data-stu-id="5218f-109">The amount of data that is buffered in server memory for a request, which includes file uploads, can be specified by accessing the <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> property or by setting the `requestLengthDiskThreshold` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element within the Machine.config or Web.config file.</span></span>  
  
 <span data-ttu-id="5218f-110">Ajustando el <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> y <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> propiedades, puede ajustar el rendimiento del servidor.</span><span class="sxs-lookup"><span data-stu-id="5218f-110">By adjusting the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> and <xref:System.Web.Configuration.HttpRuntimeSection.RequestLengthDiskThreshold%2A> properties, you can fine tune the performance of your server.</span></span> <span data-ttu-id="5218f-111">Además, debería considerar la configuración del <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> para evitar la denegación de servicio causados por usuarios que publican en el servidor de archivos de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="5218f-111">Additionally, you should consider setting the <xref:System.Web.Configuration.HttpRuntimeSection.MaxRequestLength%2A> to prevent denial of service attacks caused by users posting large files to the server.</span></span>  
  
 <span data-ttu-id="5218f-112">Recursos del servidor que se asignan para almacenar en búfer el archivo cargado se destruirán cuando finalice la solicitud.</span><span class="sxs-lookup"><span data-stu-id="5218f-112">Server resources that are allocated to buffer the uploaded file will be destroyed when the request ends.</span></span> <span data-ttu-id="5218f-113">Para guardar una copia del archivo duradera, use el <xref:System.Web.HttpPostedFile.SaveAs%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5218f-113">To save a durable copy of the file, use the <xref:System.Web.HttpPostedFile.SaveAs%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputFile" />
    <altmember cref="T:System.Web.HttpFileCollection" />
  </Docs>
  <Members>
    <Member MemberName="ContentLength">
      <MemberSignature Language="C#" Value="public int ContentLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength : int" Usage="System.Web.HttpPostedFile.ContentLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5218f-114">Obtiene el tamaño de un archivo cargado, en bytes.</span><span class="sxs-lookup"><span data-stu-id="5218f-114">Gets the size of an uploaded file, in bytes.</span></span></summary>
        <value><span data-ttu-id="5218f-115">Longitud del archivo en bytes.</span><span class="sxs-lookup"><span data-stu-id="5218f-115">The file length, in bytes.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Web.HttpPostedFile.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5218f-116">Obtiene el tipo de contenido MIME de un archivo enviado por un cliente.</span><span class="sxs-lookup"><span data-stu-id="5218f-116">Gets the MIME content type of a file sent by a client.</span></span></summary>
        <value><span data-ttu-id="5218f-117">Tipo de contenido MIME del archivo cargado.</span><span class="sxs-lookup"><span data-stu-id="5218f-117">The MIME content type of the uploaded file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5218f-118">En el ejemplo de código siguiente se muestra cómo recorrer en iteración todos los archivos de la colección de archivos cargados y realizar una acción cuando el tipo MIME de un archivo es `US-ASCII`.</span><span class="sxs-lookup"><span data-stu-id="5218f-118">The following code example shows how to loop through all the files in the uploaded file collection and take action when the MIME type of a file is `US-ASCII`.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.ContentType Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.ContentType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.FileName" />
        <altmember cref="P:System.Web.HttpPostedFile.ContentLength" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.HttpPostedFile.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5218f-119">Obtiene el nombre completo del archivo en el cliente.</span><span class="sxs-lookup"><span data-stu-id="5218f-119">Gets the fully qualified name of the file on the client.</span></span></summary>
        <value><span data-ttu-id="5218f-120">El nombre del archivo del cliente, incluida la ruta de acceso del directorio.</span><span class="sxs-lookup"><span data-stu-id="5218f-120">The name of the client's file, including the directory path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5218f-121">El ejemplo de código siguiente muestra cómo asignar el nombre de un archivo cargado (el primer archivo en la colección de archivos) a una variable de cadena.</span><span class="sxs-lookup"><span data-stu-id="5218f-121">The following code example demonstrates how to assign the name of an uploaded file (the first file in the file collection) to a string variable.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.FileName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.FileName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.HttpPostedFile.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpPostedFile.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Web.HttpPostedFile.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5218f-122">Obtiene un objeto <see cref="T:System.IO.Stream" /> que apunta a un archivo cargado para preparar la lectura del contenido del archivo.</span><span class="sxs-lookup"><span data-stu-id="5218f-122">Gets a <see cref="T:System.IO.Stream" /> object that points to an uploaded file to prepare for reading the contents of the file.</span></span></summary>
        <value><span data-ttu-id="5218f-123"><see cref="T:System.IO.Stream" /> que apunta a un archivo.</span><span class="sxs-lookup"><span data-stu-id="5218f-123">A <see cref="T:System.IO.Stream" /> pointing to a file.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5218f-124">El ejemplo de código siguiente muestra cómo leer el contenido del primer archivo en la colección de archivos del cliente en una matriz de bytes y, a continuación, copie la matriz de bytes en una cadena.</span><span class="sxs-lookup"><span data-stu-id="5218f-124">The following code example shows how to read the contents of the first file in the client's file collection into a byte array, and then copy the byte array to a string.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.InputStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.InputStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpPostedFile.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="httpPostedFile.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="5218f-125">Nombre del archivo guardado.</span><span class="sxs-lookup"><span data-stu-id="5218f-125">The name of the saved file.</span></span></param>
        <summary><span data-ttu-id="5218f-126">Guarda el contenido de un archivo cargado.</span><span class="sxs-lookup"><span data-stu-id="5218f-126">Saves the contents of an uploaded file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5218f-127">El tamaño máximo permitido para una solicitud, que incluye los archivos cargados, es 4 MB, de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="5218f-127">The maximum size allowed for a request, which includes uploaded files, is 4 MB, by default.</span></span> <span data-ttu-id="5218f-128">Tamaño de solicitud máximo puede especificarse en el archivo Machine.config o Web.config en el `maxRequestLength` atributo de la [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) elemento.</span><span class="sxs-lookup"><span data-stu-id="5218f-128">Maximum request size can be specified in the Machine.config or Web.config file in the `maxRequestLength` attribute of the [httpRuntime Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369) element.</span></span> <span data-ttu-id="5218f-129">Se puede especificar el tamaño máximo de la solicitud para una página específica mediante la [ubicación Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) elemento en un archivo Web.config.</span><span class="sxs-lookup"><span data-stu-id="5218f-129">The maximum request size for a specific page can be specified using the [location Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5) element in a Web.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5218f-130">En el ejemplo de código siguiente se muestra cómo guardar todos los archivos cargados por el cliente en la carpeta C:\TempFiles en el disco local del servidor Web.</span><span class="sxs-lookup"><span data-stu-id="5218f-130">The following code example demonstrates how to save all the files that are uploaded by the client to the C:\TempFiles folder on the Web server's local disk.</span></span>  
  
 [!code-csharp[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/CS/source.cs#1)]
 [!code-vb[Classic HttpPostedFile.SaveAs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpPostedFile.SaveAs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="5218f-131">La propiedad <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> del objeto <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> está establecida en <see langword="true" />, pero <paramref name="filename" /> no es una ruta de acceso absoluta.</span><span class="sxs-lookup"><span data-stu-id="5218f-131">The <see cref="P:System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath" /> property of the <see cref="T:System.Web.Configuration.HttpRuntimeSection" /> object is set to <see langword="true" />, but <paramref name="filename" /> is not an absolute path.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
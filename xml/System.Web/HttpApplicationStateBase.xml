<Type Name="HttpApplicationStateBase" FullName="System.Web.HttpApplicationStateBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b6cc7825e25a290ed0c26cab851f5bf6ae942bb2" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53459258" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpApplicationStateBase : System.Collections.Specialized.NameObjectCollectionBase, System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpApplicationStateBase extends System.Collections.Specialized.NameObjectCollectionBase implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpApplicationStateBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpApplicationStateBase&#xA;Inherits NameObjectCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpApplicationStateBase abstract : System::Collections::Specialized::NameObjectCollectionBase, System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type HttpApplicationStateBase = class&#xA;    inherit NameObjectCollectionBase&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Abstractions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.Specialized.NameObjectCollectionBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4f65c-101">Actúa como la clase base para las clases que permiten que se comparta información entre varias sesiones y solicitudes de una aplicación ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="4f65c-101">Serves as the base class for classes that enable information to be shared across multiple sessions and requests within an ASP.NET application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f65c-102">El <xref:System.Web.HttpApplicationStateBase> clase es una clase abstracta que contiene los mismos miembros que el <xref:System.Web.HttpApplicationState> clase.</span><span class="sxs-lookup"><span data-stu-id="4f65c-102">The <xref:System.Web.HttpApplicationStateBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpApplicationState> class.</span></span> <span data-ttu-id="4f65c-103">El <xref:System.Web.HttpApplicationStateBase> clase le permite crear las clases derivadas que son similares a los <xref:System.Web.HttpApplicationState> clase, pero que se puede personalizar y que funcionan fuera de la canalización ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="4f65c-103">The <xref:System.Web.HttpApplicationStateBase> class lets you create derived classes that are like the <xref:System.Web.HttpApplicationState> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="4f65c-104">Al realizar las pruebas unitarias, suelen usar una clase derivada para implementar a los miembros con el comportamiento personalizado que cumple el escenario que se está probando.</span><span class="sxs-lookup"><span data-stu-id="4f65c-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="4f65c-105">La clase <xref:System.Web.HttpApplicationStateWrapper> se deriva de la clase <xref:System.Web.HttpApplicationStateBase> .</span><span class="sxs-lookup"><span data-stu-id="4f65c-105">The <xref:System.Web.HttpApplicationStateWrapper> class derives from the <xref:System.Web.HttpApplicationStateBase> class.</span></span> <span data-ttu-id="4f65c-106">El <xref:System.Web.HttpApplicationStateWrapper> clase que actúa como un contenedor para el <xref:System.Web.HttpApplicationState> clase.</span><span class="sxs-lookup"><span data-stu-id="4f65c-106">The <xref:System.Web.HttpApplicationStateWrapper> class serves as a wrapper for the <xref:System.Web.HttpApplicationState> class.</span></span> <span data-ttu-id="4f65c-107">En tiempo de ejecución, se utiliza normalmente una instancia de la <xref:System.Web.HttpApplicationStateWrapper> clase para llamar a los miembros de la <xref:System.Web.HttpApplicationState> objeto.</span><span class="sxs-lookup"><span data-stu-id="4f65c-107">At run time, you typically use an instance of the <xref:System.Web.HttpApplicationStateWrapper> class to call members of the <xref:System.Web.HttpApplicationState> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpApplicationStateBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpApplicationStateBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f65c-108">Inicializa la clase para que la use una instancia de la clase heredada.</span><span class="sxs-lookup"><span data-stu-id="4f65c-108">Initializes the class for use by an inherited class instance.</span></span> <span data-ttu-id="4f65c-109">A este constructor solo lo puede llamar una clase heredada.</span><span class="sxs-lookup"><span data-stu-id="4f65c-109">This constructor can only be called by an inherited class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj -&gt; unit&#xA;override this.Add : string * obj -&gt; unit" Usage="httpApplicationStateBase.Add (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4f65c-110">Nombre del objeto que se agregará a la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-110">The name of the object to add to the collection.</span></span></param>
        <param name="value"><span data-ttu-id="4f65c-111">Valor del objeto.</span><span class="sxs-lookup"><span data-stu-id="4f65c-111">The value of the object.</span></span></param>
        <summary><span data-ttu-id="4f65c-112">Si se reemplaza en una clase derivada, se agrega un nuevo objeto a la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-112">When overridden in a derived class, adds a new object to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-113">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-113">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllKeys">
      <MemberSignature Language="C#" Value="public virtual string[] AllKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AllKeys" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.AllKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllKeys As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ AllKeys { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllKeys : string[]" Usage="System.Web.HttpApplicationStateBase.AllKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f65c-114">Si se reemplaza en una clase derivada, obtiene las teclas de acceso de los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-114">When overridden in a derived class, gets the access keys for the objects in the collection.</span></span></summary>
        <value><span data-ttu-id="4f65c-115">Matriz de teclas de objeto de estados.</span><span class="sxs-lookup"><span data-stu-id="4f65c-115">An array of state object keys.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-116">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-116">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="httpApplicationStateBase.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f65c-117">Si se reemplaza en una clase derivada, quita todos los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-117">When overridden in a derived class, removes all objects from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-118">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-118">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Contents" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Contents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Contents As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Contents { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contents : System.Web.HttpApplicationStateBase" Usage="System.Web.HttpApplicationStateBase.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f65c-119">Si se reemplaza en una clase derivada, obtiene una referencia al objeto <see cref="T:System.Web.HttpApplicationStateBase" />.</span><span class="sxs-lookup"><span data-stu-id="4f65c-119">When overridden in a derived class, gets a reference to the <see cref="T:System.Web.HttpApplicationStateBase" /> object.</span></span></summary>
        <value><span data-ttu-id="4f65c-120">Una referencia al objeto <see cref="T:System.Web.HttpApplicationState" />.</span><span class="sxs-lookup"><span data-stu-id="4f65c-120">A reference to the <see cref="T:System.Web.HttpApplicationState" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f65c-121">Esta propiedad proporciona compatibilidad con versiones anteriores de ASP.</span><span class="sxs-lookup"><span data-stu-id="4f65c-121">This property provides compatibility with earlier versions of ASP.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-122">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-122">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="httpApplicationStateBase.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="4f65c-123">Matriz unidimensional que constituye el destino de los elementos copiados de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-123">The one-dimensional array that is the destination for the elements that are copied from the collection.</span></span> <span data-ttu-id="4f65c-124">La matriz debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="4f65c-124">The array must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="4f65c-125">Índice de base cero de <paramref name="array" /> donde debe iniciarse la copia.</span><span class="sxs-lookup"><span data-stu-id="4f65c-125">The zero-based index in <paramref name="array" /> at which to begin copying.</span></span></param>
        <summary><span data-ttu-id="4f65c-126">Si se reemplaza en una clase derivada, copia los elementos de la colección en una matriz, comenzando por el índice especificado en la matriz.</span><span class="sxs-lookup"><span data-stu-id="4f65c-126">When overridden in a derived class, copies the elements of the collection to an array, starting at the specified index in the array.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-127">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-127">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public override int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.HttpApplicationStateBase.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f65c-128">Si se reemplaza en una clase derivada, obtiene el número de objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-128">When overridden in a derived class, gets the number of objects in the collection.</span></span></summary>
        <value><span data-ttu-id="4f65c-129">Número de objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-129">The number of objects in the collection.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-130">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-130">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Get">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f65c-131">Cuando se invalida en una clase derivada, obtiene un objeto de estado por nombre o por índice.</span><span class="sxs-lookup"><span data-stu-id="4f65c-131">When overridden in a derived class, gets a state object by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual object Get (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Get(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Get(int index);" />
      <MemberSignature Language="F#" Value="abstract member Get : int -&gt; obj&#xA;override this.Get : int -&gt; obj" Usage="httpApplicationStateBase.Get index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4f65c-132">Índice del objeto de estados de la aplicación que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="4f65c-132">The index of the application state object to get.</span></span></param>
        <summary><span data-ttu-id="4f65c-133">Si se reemplaza en una clase derivada, obtiene un objeto de estado por índice.</span><span class="sxs-lookup"><span data-stu-id="4f65c-133">When overridden in a derived class, gets a state object by index.</span></span></summary>
        <returns><span data-ttu-id="4f65c-134">Objeto al que hace referencia <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="4f65c-134">The object referenced by <paramref name="index" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-135">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-135">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual object Get (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Get(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Get (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Get(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Get : string -&gt; obj&#xA;override this.Get : string -&gt; obj" Usage="httpApplicationStateBase.Get name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4f65c-136">El nombre del objeto que se debe obtener.</span><span class="sxs-lookup"><span data-stu-id="4f65c-136">The name of the object to get.</span></span></param>
        <summary><span data-ttu-id="4f65c-137">Si se reemplaza en una clase derivada, obtiene un objeto de estado por nombre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-137">When overridden in a derived class, gets a state object by name.</span></span></summary>
        <returns><span data-ttu-id="4f65c-138">Objeto al que hace referencia <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="4f65c-138">The object referenced by <paramref name="name" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-139">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-139">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="httpApplicationStateBase.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f65c-140">Si se reemplaza en una clase derivada, devuelve un enumerador que puede usarse para iterar en la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-140">When overridden in a derived class, returns an enumerator that can be used to iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="4f65c-141">Objeto que puede usarse para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-141">An object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-142">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-142">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetKey">
      <MemberSignature Language="C#" Value="public virtual string GetKey (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetKey(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.GetKey(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKey (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetKey(int index);" />
      <MemberSignature Language="F#" Value="abstract member GetKey : int -&gt; string&#xA;override this.GetKey : int -&gt; string" Usage="httpApplicationStateBase.GetKey index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4f65c-143">Índice del objeto de estados de la aplicación que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="4f65c-143">The index of the application state object to get.</span></span></param>
        <summary><span data-ttu-id="4f65c-144">Si se reemplaza en una clase derivada, obtiene el nombre de un objeto de estados por índice.</span><span class="sxs-lookup"><span data-stu-id="4f65c-144">When overridden in a derived class, gets the name of a state object by index.</span></span></summary>
        <returns><span data-ttu-id="4f65c-145">Nombre del objeto de estados de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="4f65c-145">The name of the application state object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-146">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-146">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.HttpApplicationStateBase.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f65c-147">Si se reemplaza en una clase derivada, obtiene un valor que indica si el acceso a la colección es seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="4f65c-147">When overridden in a derived class, gets a value that indicates whether access to the collection is thread-safe.</span></span></summary>
        <value><span data-ttu-id="4f65c-148">Es <see langword="true" /> si el acceso está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4f65c-148"><see langword="true" /> if access is synchronized (thread-safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-149">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-149">Always.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4f65c-150">Cuando se invalida en una clase derivada, obtiene un objeto de una colección <see cref="T:System.Web.HttpApplicationState" /> por nombre o por índice.</span><span class="sxs-lookup"><span data-stu-id="4f65c-150">When overridden in a derived class, gets an object in an <see cref="T:System.Web.HttpApplicationState" /> collection by name or index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Web.HttpApplicationStateBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4f65c-151">Índice del objeto de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-151">The index of the object in the collection.</span></span></param>
        <summary><span data-ttu-id="4f65c-152">Si se reemplaza en una clase derivada, obtiene un objeto de estado por índice.</span><span class="sxs-lookup"><span data-stu-id="4f65c-152">When overridden in a derived class, gets a state object by index.</span></span></summary>
        <value><span data-ttu-id="4f65c-153">Objeto al que hace referencia <paramref name="index" />.</span><span class="sxs-lookup"><span data-stu-id="4f65c-153">The object referenced by <paramref name="index" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-154">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-154">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[string name] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ name); void set(System::String ^ name, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.HttpApplicationStateBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4f65c-155">Nombre del objeto de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-155">The name of the object in the collection.</span></span></param>
        <summary><span data-ttu-id="4f65c-156">Si se reemplaza en una clase derivada, obtiene un objeto de estado por nombre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-156">When overridden in a derived class, gets a state object by name.</span></span></summary>
        <value><span data-ttu-id="4f65c-157">Objeto al que hace referencia <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="4f65c-157">The object referenced by <paramref name="name" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-158">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-158">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public virtual void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Lock();" />
      <MemberSignature Language="F#" Value="abstract member Lock : unit -&gt; unit&#xA;override this.Lock : unit -&gt; unit" Usage="httpApplicationStateBase.Lock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f65c-159">Cuando se reemplaza en una clase derivada, bloquea el acceso a objetos de la colección para habilitar el acceso sincronizado.</span><span class="sxs-lookup"><span data-stu-id="4f65c-159">When overridden in a derived class, locks access to objects in the collection in order to enable synchronized access.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-160">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-160">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit&#xA;override this.Remove : string -&gt; unit" Usage="httpApplicationStateBase.Remove name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4f65c-161">Nombre del objeto que se quitará de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-161">The name of the object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="4f65c-162">Si se reemplaza en una clase derivada, quita el objeto con nombre de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-162">When overridden in a derived class, removes the named object from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-163">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-163">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public virtual void RemoveAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.RemoveAll" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAll();" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : unit -&gt; unit&#xA;override this.RemoveAll : unit -&gt; unit" Usage="httpApplicationStateBase.RemoveAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f65c-164">Si se reemplaza en una clase derivada, quita todos los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-164">When overridden in a derived class, removes all objects from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-165">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-165">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="httpApplicationStateBase.RemoveAt index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="4f65c-166">Posición en la colección del elemento que va a quitarse.</span><span class="sxs-lookup"><span data-stu-id="4f65c-166">The position in the collection of the item to remove.</span></span></param>
        <summary><span data-ttu-id="4f65c-167">Si se reemplaza en una clase derivada, quita un objeto de estado especificado por el índice de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-167">When overridden in a derived class, removes a state object specified by index from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-168">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-168">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.Set(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Set (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Set(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj -&gt; unit&#xA;override this.Set : string * obj -&gt; unit" Usage="httpApplicationStateBase.Set (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="4f65c-169">Nombre del objeto que se va a actualizar.</span><span class="sxs-lookup"><span data-stu-id="4f65c-169">The name of the object to update.</span></span></param>
        <param name="value"><span data-ttu-id="4f65c-170">Valor actualizado del objeto.</span><span class="sxs-lookup"><span data-stu-id="4f65c-170">The updated value of the object.</span></span></param>
        <summary><span data-ttu-id="4f65c-171">Si se reemplaza en una clase derivada, actualiza el valor de un objeto de la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-171">When overridden in a derived class, updates the value of an object in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-172">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-172">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StaticObjects">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpStaticObjectsCollectionBase StaticObjects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpStaticObjectsCollectionBase StaticObjects" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.StaticObjects" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StaticObjects As HttpStaticObjectsCollectionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpStaticObjectsCollectionBase ^ StaticObjects { System::Web::HttpStaticObjectsCollectionBase ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StaticObjects : System.Web.HttpStaticObjectsCollectionBase" Usage="System.Web.HttpApplicationStateBase.StaticObjects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpStaticObjectsCollectionBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f65c-173">Si se reemplaza en una clase derivada, obtiene todos los objetos que declara un elemento <see langword="object" /> con el ámbito establecido en "Application" en la aplicación ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="4f65c-173">When overridden in a derived class, gets all objects that are declared by an <see langword="object" /> element where the scope is set to "Application" in the ASP.NET application.</span></span></summary>
        <value><span data-ttu-id="4f65c-174">Colección de objetos de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="4f65c-174">A collection of objects in the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4f65c-175">Objetos de la aplicación se definen en el archivo Global.asax dentro de un elemento con la siguiente sintaxis:</span><span class="sxs-lookup"><span data-stu-id="4f65c-175">Application objects are defined in the Global.asax file inside an element with syntax like the following:</span></span>  
  
 `<object runat="server" scope="Application">Object information</object>`  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-176">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-176">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpApplicationStateBase.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.HttpApplicationStateBase.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4f65c-177">Si se reemplaza en una clase derivada, obtiene un objeto que se puede usar para sincronizar el acceso a la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-177">When overridden in a derived class, gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="4f65c-178">Objeto que se puede utilizar para sincronizar el acceso a la colección.</span><span class="sxs-lookup"><span data-stu-id="4f65c-178">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-179">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-179">Always.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnLock">
      <MemberSignature Language="C#" Value="public virtual void UnLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpApplicationStateBase.UnLock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnLock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnLock();" />
      <MemberSignature Language="F#" Value="abstract member UnLock : unit -&gt; unit&#xA;override this.UnLock : unit -&gt; unit" Usage="httpApplicationStateBase.UnLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4f65c-180">Si se reemplaza en una clase derivada, desbloquea el acceso a objetos de la colección para habilitar el acceso sincronizado.</span><span class="sxs-lookup"><span data-stu-id="4f65c-180">When overridden in a derived class, unlocks access to objects in the collection to enable synchronized access.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="4f65c-181">Siempre.</span><span class="sxs-lookup"><span data-stu-id="4f65c-181">Always.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="MetadataWorkspace" FullName="System.Data.Metadata.Edm.MetadataWorkspace">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e990dc4714aee2538df95b3788d0c53bca01a55a" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51929572" /></Metadata><TypeSignature Language="C#" Value="public sealed class MetadataWorkspace" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MetadataWorkspace extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.MetadataWorkspace" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MetadataWorkspace" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataWorkspace sealed" />
  <TypeSignature Language="F#" Value="type MetadataWorkspace = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="24490-101">Representa el componente del servicio en tiempo de ejecución de metadatos de ADO.NET que proporciona compatibilidad para recuperar los metadatos de diversos orígenes.</span><span class="sxs-lookup"><span data-stu-id="24490-101">Represents the ADO.NET metadata runtime service component that provides support for retrieving metadata from various sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="24490-102">La <xref:System.Data.Metadata.Edm.MetadataWorkspace> clase proporciona un componente del servicio en tiempo de ejecución central que puede usar para interactuar con los metadatos del modelo conceptual en el contexto de una aplicación determinada.</span><span class="sxs-lookup"><span data-stu-id="24490-102">The <xref:System.Data.Metadata.Edm.MetadataWorkspace> class provides a central runtime service component that you can use to interact with conceptual model metadata in the context of a given application.</span></span> <span data-ttu-id="24490-103">Para obtener más información, consulte [área de trabajo de metadatos](https://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span><span class="sxs-lookup"><span data-stu-id="24490-103">For more information, see [Metadata Workspace](https://msdn.microsoft.com/library/601aee56-3eda-4caa-9082-a01df76c5e84).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-104">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="24490-104">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24490-105">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="24490-105">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetadataWorkspace (System.Collections.Generic.IEnumerable&lt;string&gt; paths, System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt; assembliesToConsider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; paths, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Assembly&gt; assembliesToConsider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paths As IEnumerable(Of String), assembliesToConsider As IEnumerable(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetadataWorkspace(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ paths, System::Collections::Generic::IEnumerable&lt;System::Reflection::Assembly ^&gt; ^ assembliesToConsider);" />
      <MemberSignature Language="F#" Value="new System.Data.Metadata.Edm.MetadataWorkspace : seq&lt;string&gt; * seq&lt;System.Reflection.Assembly&gt; -&gt; System.Data.Metadata.Edm.MetadataWorkspace" Usage="new System.Data.Metadata.Edm.MetadataWorkspace (paths, assembliesToConsider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paths" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="assembliesToConsider" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="paths"><span data-ttu-id="24490-106">Rutas de acceso a metadatos del área de trabajo.</span><span class="sxs-lookup"><span data-stu-id="24490-106">The paths to workspace metadata.</span></span></param>
        <param name="assembliesToConsider"><span data-ttu-id="24490-107">Nombres de los ensamblados usados para crear el área de trabajo.</span><span class="sxs-lookup"><span data-stu-id="24490-107">The names of assemblies used to construct workspace.</span></span></param>
        <summary><span data-ttu-id="24490-108">Inicializa una nueva instancia de la clase <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> con las rutas de acceso y ensamblados especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-108">Initializes a new instance of the <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> class using the specified paths and assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.ClearCache" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache();" />
      <MemberSignature Language="F#" Value="static member ClearCache : unit -&gt; unit" Usage="System.Data.Metadata.Edm.MetadataWorkspace.ClearCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24490-109">Borra todas las entradas de caché de metadatos.</span><span class="sxs-lookup"><span data-stu-id="24490-109">Clears all the metadata cache entries.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEntitySqlParser">
      <MemberSignature Language="C#" Value="public System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.EntitySql.EntitySqlParser CreateEntitySqlParser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateEntitySqlParser" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntitySqlParser () As EntitySqlParser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::EntitySql::EntitySqlParser ^ CreateEntitySqlParser();" />
      <MemberSignature Language="F#" Value="member this.CreateEntitySqlParser : unit -&gt; System.Data.Common.EntitySql.EntitySqlParser" Usage="metadataWorkspace.CreateEntitySqlParser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.EntitySql.EntitySqlParser</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="24490-110">Crea <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> que se configura para utilizar el espacio de datos <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> .</span><span class="sxs-lookup"><span data-stu-id="24490-110">Creates an <see cref="T:System.Data.Common.EntitySql.EntitySqlParser" /> configured to use the <see cref="F:System.Data.Metadata.Edm.DataSpace.CSpace" /> data space.</span></span></summary>
        <returns><span data-ttu-id="24490-111">Objeto analizador creado.</span><span class="sxs-lookup"><span data-stu-id="24490-111">The created parser object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryCommandTree">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree (System.Data.Common.CommandTrees.DbExpression query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Common.CommandTrees.DbQueryCommandTree CreateQueryCommandTree(class System.Data.Common.CommandTrees.DbExpression query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateQueryCommandTree(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateQueryCommandTree (query As DbExpression) As DbQueryCommandTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Common::CommandTrees::DbQueryCommandTree ^ CreateQueryCommandTree(System::Data::Common::CommandTrees::DbExpression ^ query);" />
      <MemberSignature Language="F#" Value="member this.CreateQueryCommandTree : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQueryCommandTree" Usage="metadataWorkspace.CreateQueryCommandTree query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQueryCommandTree</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="query"><span data-ttu-id="24490-112">Valor <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que define la consulta.</span><span class="sxs-lookup"><span data-stu-id="24490-112">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that defines the query.</span></span></param>
        <summary><span data-ttu-id="24490-113">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> que se enlaza a este área de trabajo de metadatos, basándose en la expresión de consulta especificada.</span><span class="sxs-lookup"><span data-stu-id="24490-113">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> bound to this metadata workspace based on the specified query expression.</span></span></summary>
        <returns><span data-ttu-id="24490-114">Nuevo <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> con la expresión especificada como su propiedad <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" />.</span><span class="sxs-lookup"><span data-stu-id="24490-114">A new <see cref="T:System.Data.Common.CommandTrees.DbQueryCommandTree" /> with the specified expression as it's <see cref="P:System.Data.Common.CommandTrees.DbQueryCommandTree.Query" /> property.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="query" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="query" /></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-115">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> que coincide con el tipo proporcionado por el parámetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-115">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetEdmSpaceType : System.Data.Metadata.Edm.EnumType -&gt; System.Data.Metadata.Edm.EnumType" Usage="metadataWorkspace.GetEdmSpaceType objectSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="24490-116"><see cref="T:System.Data.Metadata.Edm.EnumType" /> que proporciona el tipo del espacio de objeto.</span><span class="sxs-lookup"><span data-stu-id="24490-116">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="24490-117">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> que coincide con el tipo proporcionado por el parámetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-117">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="24490-118">Un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el control <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-118">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="24490-119">Si no hay un tipo que coincida, este método devuelve null.</span><span class="sxs-lookup"><span data-stu-id="24490-119">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEdmSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEdmSpaceType (objectSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetEdmSpaceType : System.Data.Metadata.Edm.StructuralType -&gt; System.Data.Metadata.Edm.StructuralType" Usage="metadataWorkspace.GetEdmSpaceType objectSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="24490-120"><see cref="T:System.Data.Metadata.Edm.StructuralType" /> que proporciona el tipo del espacio de objeto.</span><span class="sxs-lookup"><span data-stu-id="24490-120">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> that supplies the type in the object space.</span></span></param>
        <summary><span data-ttu-id="24490-121">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> que coincide con el tipo proporcionado por el parámetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-121">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="24490-122">Un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el control <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-122">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="24490-123">Si no hay un tipo que coincida, este método devuelve null.</span><span class="sxs-lookup"><span data-stu-id="24490-123">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-124">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> mediante el uso del nombre del contenedor de entidades y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-124">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="metadataWorkspace.GetEntityContainer (name, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-125">Nombre del contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-125">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-126">Modelo conceptual en el que se busca el contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-126">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="24490-127">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> mediante el uso del nombre del contenedor de entidades y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-127">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="24490-128">Si no hay contenedores de entidades, este método devuelve null; de lo contrario, devuelve el primer contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-128">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntityContainer">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EntityContainer GetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EntityContainer GetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EntityContainer ^ GetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetEntityContainer : string * bool * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EntityContainer" Usage="metadataWorkspace.GetEntityContainer (name, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntityContainer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-129">Nombre del contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-129">The name of the entity container.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="24490-130">Es <see langword="true" /> para que la búsqueda se realice sin distinción entre mayúsculas y minúsculas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-130"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-131">Modelo conceptual en el que se busca el contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-131">The conceptual model on which the entity container is searched.</span></span></param>
        <summary><span data-ttu-id="24490-132">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> mediante el uso del nombre del contenedor de entidades y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-132">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="24490-133">Si no hay contenedores de entidades, este método devuelve null; de lo contrario, devuelve el primer contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-133">If there is no entity container, this method returns null; otherwise, it returns the first entity container.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFunctions">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-134">Devuelve todas las sobrecargas de las funciones mediante el uso del nombre, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-134">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * string * System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="metadataWorkspace.GetFunctions (name, namespaceName, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-135">Nombre de la función.</span><span class="sxs-lookup"><span data-stu-id="24490-135">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="24490-136">Espacio de nombres de la función.</span><span class="sxs-lookup"><span data-stu-id="24490-136">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-137">Modelo conceptual en el que se buscan las funciones.</span><span class="sxs-lookup"><span data-stu-id="24490-137">The conceptual model in which the functions are searched.</span></span></param>
        <summary><span data-ttu-id="24490-138">Devuelve todas las sobrecargas de las funciones mediante el uso del nombre, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-138">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="24490-139">Una colección de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene todas las funciones que coinciden con el nombre especificado en un espacio de nombres y un modelo de datos determinados.</span><span class="sxs-lookup"><span data-stu-id="24490-139">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFunctions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmFunction&gt; GetFunctions(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmFunction ^&gt; ^ GetFunctions(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="member this.GetFunctions : string * string * System.Data.Metadata.Edm.DataSpace * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;" Usage="metadataWorkspace.GetFunctions (name, namespaceName, dataSpace, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmFunction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-140">Nombre de la función.</span><span class="sxs-lookup"><span data-stu-id="24490-140">The name of the function.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="24490-141">Espacio de nombres de la función.</span><span class="sxs-lookup"><span data-stu-id="24490-141">The namespace of the function.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-142">Modelo conceptual en el que se buscan las funciones.</span><span class="sxs-lookup"><span data-stu-id="24490-142">The conceptual model in which the functions are searched.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="24490-143">Es <see langword="true" /> para que la búsqueda se realice sin distinción entre mayúsculas y minúsculas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-143"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="24490-144">Devuelve todas las sobrecargas de las funciones mediante el uso del nombre, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-144">Returns all the overloads of the functions by using the specified name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="24490-145">Una colección de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene todas las funciones que coinciden con el nombre especificado en un espacio de nombres y un modelo de datos determinados.</span><span class="sxs-lookup"><span data-stu-id="24490-145">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the functions that match the specified name in a given namespace and a data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-146">Devuelve un elemento mediante el uso de la identidad y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-146">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * System.Data.Metadata.Edm.DataSpace -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItem (identity, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="24490-147">Tipo devuelto por el método.</span><span class="sxs-lookup"><span data-stu-id="24490-147">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="24490-148">Identidad del elemento.</span><span class="sxs-lookup"><span data-stu-id="24490-148">The identity of the item.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-149">Modelo conceptual en el que se busca el elemento.</span><span class="sxs-lookup"><span data-stu-id="24490-149">The conceptual model in which the item is searched.</span></span></param>
        <summary><span data-ttu-id="24490-150">Devuelve un elemento mediante el uso de la identidad y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-150">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="24490-151">El elemento que coincide con la identidad dada en el modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-151">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem T GetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItem : string * bool * System.Data.Metadata.Edm.DataSpace -&gt; 'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItem (identity, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="24490-152">Tipo devuelto por el método.</span><span class="sxs-lookup"><span data-stu-id="24490-152">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="24490-153">Identidad del elemento.</span><span class="sxs-lookup"><span data-stu-id="24490-153">The identity of the item.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="24490-154">Es <see langword="true" /> para que la búsqueda se realice sin distinción entre mayúsculas y minúsculas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-154"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-155">Modelo conceptual en el que se busca el elemento.</span><span class="sxs-lookup"><span data-stu-id="24490-155">The conceptual model on which the item is searched.</span></span></param>
        <summary><span data-ttu-id="24490-156">Devuelve un elemento mediante el uso de la identidad y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-156">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="24490-157">El elemento que coincide con la identidad dada en el modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-157">The item that matches the given identity in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemCollection">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ItemCollection GetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.ItemCollection GetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItemCollection(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ItemCollection ^ GetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItemCollection : System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.ItemCollection" Usage="metadataWorkspace.GetItemCollection dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ItemCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="24490-158"><see cref="T:System.Data.Metadata.Edm.DataSpace" /> de la que se recuperan los elementos.</span><span class="sxs-lookup"><span data-stu-id="24490-158">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to retrieve items.</span></span></param>
        <summary><span data-ttu-id="24490-159">Obtiene elementos de <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="24490-159">Gets <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></summary>
        <returns><span data-ttu-id="24490-160">Elementos <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="24490-160">The <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt; GetItems (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.GlobalItem&gt; GetItems(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::GlobalItem ^&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItems : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;" Usage="metadataWorkspace.GetItems dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.GlobalItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="24490-161">Modelo conceptual para el que se necesita la lista de elementos.</span><span class="sxs-lookup"><span data-stu-id="24490-161">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="24490-162">Obtiene todos los elementos del modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-162">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="24490-163">Una colección de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene todos los elementos del modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-163">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; GetItems&lt;T&gt; (System.Data.Metadata.Edm.DataSpace dataSpace) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; GetItems&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ GetItems(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetItems : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)&gt; (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.GetItems dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="24490-164">Tipo devuelto por el método.</span><span class="sxs-lookup"><span data-stu-id="24490-164">The type returned by the method.</span></span></typeparam>
        <param name="dataSpace"><span data-ttu-id="24490-165">Modelo conceptual para el que se necesita la lista de elementos.</span><span class="sxs-lookup"><span data-stu-id="24490-165">The conceptual model for which the list of items is needed.</span></span></param>
        <summary><span data-ttu-id="24490-166">Obtiene todos los elementos del modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-166">Gets all the items in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="24490-167">Una colección de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene todos los elementos del modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-167">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the items in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-168">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el tipo de espacio de objeto que coincide con el tipo proporcionado por el parámetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-168">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EnumType GetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EnumType GetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.EnumType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As EnumType) As EnumType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EnumType ^ GetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetObjectSpaceType : System.Data.Metadata.Edm.EnumType -&gt; System.Data.Metadata.Edm.EnumType" Usage="metadataWorkspace.GetObjectSpaceType edmSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EnumType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="24490-169">Un objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa el control <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-169">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="24490-170">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el tipo de espacio de objeto que coincide con el tipo proporcionado por el parámetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-170">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="24490-171">Un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el tipo del espacio de objeto.</span><span class="sxs-lookup"><span data-stu-id="24490-171">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="24490-172">Si no hay un tipo que coincida, este método devuelve null.</span><span class="sxs-lookup"><span data-stu-id="24490-172">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectSpaceType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.StructuralType GetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.StructuralType GetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectSpaceType (edmSpaceType As StructuralType) As StructuralType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::StructuralType ^ GetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.GetObjectSpaceType : System.Data.Metadata.Edm.StructuralType -&gt; System.Data.Metadata.Edm.StructuralType" Usage="metadataWorkspace.GetObjectSpaceType edmSpaceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.StructuralType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="24490-173">Un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el control <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-173">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <summary><span data-ttu-id="24490-174">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el tipo de espacio de objeto que coincide con el tipo proporcionado por el parámetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-174">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type that matches the type supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="24490-175">Un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el tipo del espacio de objeto.</span><span class="sxs-lookup"><span data-stu-id="24490-175">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="24490-176">Si no hay un tipo que coincida, este método devuelve null.</span><span class="sxs-lookup"><span data-stu-id="24490-176">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimitiveTypes">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes (System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.PrimitiveType&gt; GetPrimitiveTypes(valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::PrimitiveType ^&gt; ^ GetPrimitiveTypes(System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="member this.GetPrimitiveTypes : System.Data.Metadata.Edm.DataSpace -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;" Usage="metadataWorkspace.GetPrimitiveTypes dataSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.PrimitiveType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="24490-177">Modelo de datos para el que se necesita la lista de tipos primitivos.</span><span class="sxs-lookup"><span data-stu-id="24490-177">The data model for which you need the list of primitive types.</span></span></param>
        <summary><span data-ttu-id="24490-178">Devuelve la lista de tipos primitivos en el modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-178">Returns the list of primitive types in the specified data model.</span></span></summary>
        <returns><span data-ttu-id="24490-179">Una colección de tipo <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> que contiene todos los tipos primitivos en el modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-179">A collection of type <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains all the primitive types in the specified data model.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelevantMembersForUpdate">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRelevantMembersForUpdate(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType, bool partialUpdateSupported) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRelevantMembersForUpdate(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelevantMembersForUpdate (entitySet As EntitySetBase, entityType As EntityTypeBase, partialUpdateSupported As Boolean) As ReadOnlyCollection(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRelevantMembersForUpdate(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType, bool partialUpdateSupported);" />
      <MemberSignature Language="F#" Value="member this.GetRelevantMembersForUpdate : System.Data.Metadata.Edm.EntitySetBase * System.Data.Metadata.Edm.EntityTypeBase * bool -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;" Usage="metadataWorkspace.GetRelevantMembersForUpdate (entitySet, entityType, partialUpdateSupported)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
        <Parameter Name="partialUpdateSupported" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="24490-180"><see cref="T:System.Data.Metadata.Edm.EntitySet" /> que pertenece a C-Space.</span><span class="sxs-lookup"><span data-stu-id="24490-180">An <see cref="T:System.Data.Metadata.Edm.EntitySet" /> belonging to the C-Space.</span></span></param>
        <param name="entityType"><span data-ttu-id="24490-181"><see cref="T:System.Data.Metadata.Edm.EntityType" /> que participa en el <see cref="T:System.Data.Metadata.Edm.EntitySet" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-181">An <see cref="T:System.Data.Metadata.Edm.EntityType" /> that participates in the given <see cref="T:System.Data.Metadata.Edm.EntitySet" />.</span></span></param>
        <param name="partialUpdateSupported"><span data-ttu-id="24490-182">Es <see langword="true" /> si las entidades pueden actualizarse parcialmente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-182"><see langword="true" /> if entities may be updated partially; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="24490-183">Devuelve miembros de un elemento <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> determinado para el que se necesitan los valores originales al modificar una entidad.</span><span class="sxs-lookup"><span data-stu-id="24490-183">Returns members of a given <see cref="T:System.Data.Metadata.Edm.EntitySet" />/<see cref="T:System.Data.Metadata.Edm.EntityType" /> for which original values are needed when modifying an entity.</span></span></summary>
        <returns><span data-ttu-id="24490-184"><see cref="T:System.Data.Metadata.Edm.EdmMember" />s para los que se requiere el valor original</span><span class="sxs-lookup"><span data-stu-id="24490-184">The <see cref="T:System.Data.Metadata.Edm.EdmMember" />s for which original value is required.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredOriginalValueMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers (System.Data.Metadata.Edm.EntitySetBase entitySet, System.Data.Metadata.Edm.EntityTypeBase entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Metadata.Edm.EdmMember&gt; GetRequiredOriginalValueMembers(class System.Data.Metadata.Edm.EntitySetBase entitySet, class System.Data.Metadata.Edm.EntityTypeBase entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredOriginalValueMembers (entitySet As EntitySetBase, entityType As EntityTypeBase) As IEnumerable(Of EdmMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Metadata::Edm::EdmMember ^&gt; ^ GetRequiredOriginalValueMembers(System::Data::Metadata::Edm::EntitySetBase ^ entitySet, System::Data::Metadata::Edm::EntityTypeBase ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetRequiredOriginalValueMembers : System.Data.Metadata.Edm.EntitySetBase * System.Data.Metadata.Edm.EntityTypeBase -&gt; seq&lt;System.Data.Metadata.Edm.EdmMember&gt;" Usage="metadataWorkspace.GetRequiredOriginalValueMembers (entitySet, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use MetadataWorkspace.GetRelevantMembersForUpdate(EntitySetBase, EntityTypeBase, bool) instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Metadata.Edm.EdmMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityTypeBase" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="24490-185">Entidad de la que se recuperan valores originales.</span><span class="sxs-lookup"><span data-stu-id="24490-185">The entity set from which to retrieve original values.</span></span></param>
        <param name="entityType"><span data-ttu-id="24490-186">Tipo de entidad del que se recuperan valores originales.</span><span class="sxs-lookup"><span data-stu-id="24490-186">The entity type of which to retrieve original values.</span></span></param>
        <summary><span data-ttu-id="24490-187">Obtiene miembros de valores originales de un tipo de entidad y un conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-187">Gets original value members from an entity set and entity type.</span></span></summary>
        <returns><span data-ttu-id="24490-188">Miembros de valores originales de un tipo de entidad y un conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-188">The original value members from an entity set and entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-189">Devuelve los metadatos de tipo que se describen a través de un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> mediante el uso del nombre de tipo, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-189">Returns the type metadata that is described via an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, the namespace name, and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EdmType" Usage="metadataWorkspace.GetType (name, namespaceName, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-190">Nombre del tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-190">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="24490-191">Espacio de nombres del tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-191">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-192">Modelo conceptual en el que se busca el tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-192">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="24490-193">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> con el nombre de tipo, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-193">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="24490-194">Un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> que representa el tipo que coincide con el nombre de tipo dado y el nombre de espacio de nombres en el modelo de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="24490-194">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object that represents the type that matches the given type name and the namespace name in the specified data model.</span></span> <span data-ttu-id="24490-195">Si no hay un tipo que coincida, este método devuelve null.</span><span class="sxs-lookup"><span data-stu-id="24490-195">If there is no matched type, this method returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.EdmType GetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Metadata.Edm.EdmType GetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.GetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::EdmType ^ GetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * string * bool * System.Data.Metadata.Edm.DataSpace -&gt; System.Data.Metadata.Edm.EdmType" Usage="metadataWorkspace.GetType (name, namespaceName, ignoreCase, dataSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-196">Nombre del tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-196">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="24490-197">Espacio de nombres del tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-197">The namespace of the type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="24490-198">Es <see langword="true" /> para que la búsqueda se realice sin distinción entre mayúsculas y minúsculas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-198"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-199">Modelo conceptual en el que se busca el tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-199">The conceptual model on which the type is searched.</span></span></param>
        <summary><span data-ttu-id="24490-200">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> con el nombre de tipo, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-200">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="24490-201">Un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-201">An <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFromAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-202">Carga metadatos de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="24490-202">Loads metadata from an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssembly : System.Reflection.Assembly -&gt; unit" Usage="metadataWorkspace.LoadFromAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="24490-203">Ensamblado desde el que se cargarán los metadatos.</span><span class="sxs-lookup"><span data-stu-id="24490-203">The assembly from which the metadata will be loaded.</span></span></param>
        <summary><span data-ttu-id="24490-204">Carga los metadatos desde el ensamblado dado.</span><span class="sxs-lookup"><span data-stu-id="24490-204">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadFromAssembly">
      <MemberSignature Language="C#" Value="public void LoadFromAssembly (System.Reflection.Assembly assembly, Action&lt;string&gt; logLoadMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadFromAssembly(class System.Reflection.Assembly assembly, class System.Action`1&lt;string&gt; logLoadMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadFromAssembly(System::Reflection::Assembly ^ assembly, Action&lt;System::String ^&gt; ^ logLoadMessage);" />
      <MemberSignature Language="F#" Value="member this.LoadFromAssembly : System.Reflection.Assembly * Action&lt;string&gt; -&gt; unit" Usage="metadataWorkspace.LoadFromAssembly (assembly, logLoadMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        <Parameter Name="logLoadMessage" Type="System.Action&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="24490-205">Ensamblado desde el que se cargarán los metadatos.</span><span class="sxs-lookup"><span data-stu-id="24490-205">The assembly from which the metadata will be loaded.</span></span></param>
        <param name="logLoadMessage"><span data-ttu-id="24490-206">Delegado para registrar los mensajes de carga.</span><span class="sxs-lookup"><span data-stu-id="24490-206">The delegate for logging the load messages.</span></span></param>
        <summary><span data-ttu-id="24490-207">Carga los metadatos desde el ensamblado dado.</span><span class="sxs-lookup"><span data-stu-id="24490-207">Loads metadata from the given assembly.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumEdmVersionSupported">
      <MemberSignature Language="C#" Value="public static readonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly float64 MaximumEdmVersionSupported" />
      <MemberSignature Language="DocId" Value="F:System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaximumEdmVersionSupported As Double " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly double MaximumEdmVersionSupported;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaximumEdmVersionSupported : double" Usage="System.Data.Metadata.Edm.MetadataWorkspace.MaximumEdmVersionSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="24490-208">Representa la versión máxima del Entity Data Model (EDM) admitida por el motor en tiempo de ejecución de Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="24490-208">Represents the maximum Entity Data Model (EDM) version supported by the Entity Framework runtime.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterItemCollection">
      <MemberSignature Language="C#" Value="public void RegisterItemCollection (System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterItemCollection(class System.Data.Metadata.Edm.ItemCollection collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterItemCollection (collection As ItemCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterItemCollection(System::Data::Metadata::Edm::ItemCollection ^ collection);" />
      <MemberSignature Language="F#" Value="member this.RegisterItemCollection : System.Data.Metadata.Edm.ItemCollection -&gt; unit" Usage="metadataWorkspace.RegisterItemCollection collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="24490-209">Colección de parámetros de salida que hay que llenar.</span><span class="sxs-lookup"><span data-stu-id="24490-209">The output parameter collection that needs to be filled up.</span></span></param>
        <summary><span data-ttu-id="24490-210">Registra la colección de elementos con cada modelo de datos asociado.</span><span class="sxs-lookup"><span data-stu-id="24490-210">Registers the item collection with each associated data model.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEdmSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-211">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> u objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> a través del parámetro de salida <paramref name="edmSpaceType" /> que representa el <see cref="T:System.Data.Metadata.Edm.EdmType" /> que coincide con el tipo proporcionado por el parámetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-211">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.EnumType objectSpaceType, out System.Data.Metadata.Edm.EnumType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.EnumType objectSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As EnumType, ByRef edmSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::EnumType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetEdmSpaceType : System.Data.Metadata.Edm.EnumType *  -&gt; bool" Usage="metadataWorkspace.TryGetEdmSpaceType (objectSpaceType, edmSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="24490-212">Objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa el tipo del espacio de objeto.</span><span class="sxs-lookup"><span data-stu-id="24490-212">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="24490-213">Cuando este método finaliza, contiene un objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa el objeto <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-213">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="24490-214">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-214">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-215">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> mediante el parámetro <paramref name="edmSpaceType" /> out que representa el <see cref="T:System.Data.Metadata.Edm.EdmType" /> que coincide con el tipo proporcionado por el parámetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-215">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="24490-216">Es <see langword="true" /> si se realiza correctamente, es <see langword="false" /> si se produce un error.</span><span class="sxs-lookup"><span data-stu-id="24490-216"><see langword="true" /> on success, <see langword="false" /> on failure.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEdmSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetEdmSpaceType (System.Data.Metadata.Edm.StructuralType objectSpaceType, out System.Data.Metadata.Edm.StructuralType edmSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEdmSpaceType(class System.Data.Metadata.Edm.StructuralType objectSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; edmSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetEdmSpaceType (objectSpaceType As StructuralType, ByRef edmSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEdmSpaceType(System::Data::Metadata::Edm::StructuralType ^ objectSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % edmSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetEdmSpaceType : System.Data.Metadata.Edm.StructuralType *  -&gt; bool" Usage="metadataWorkspace.TryGetEdmSpaceType (objectSpaceType, edmSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="objectSpaceType"><span data-ttu-id="24490-217">Objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el tipo del espacio de objeto.</span><span class="sxs-lookup"><span data-stu-id="24490-217">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the object space type.</span></span></param>
        <param name="edmSpaceType"><span data-ttu-id="24490-218">Cuando este método finaliza, contiene un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el objeto <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-218">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span> <span data-ttu-id="24490-219">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-219">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-220">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> mediante el parámetro <paramref name="edmSpaceType" /> out que representa el <see cref="T:System.Data.Metadata.Edm.EdmType" /> que coincide con el tipo proporcionado por el parámetro <paramref name="objectSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-220">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="edmSpaceType" /> that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" /> that matches the type supplied by the parameter <paramref name="objectSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="24490-221">Es <see langword="true" /> si hay un tipo que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-221"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetEntityContainer">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-222">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> mediante el uso del nombre del contenedor de entidades y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-222">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetEntityContainer (name, dataSpace, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-223">Nombre del contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-223">The name of the entity container.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-224">Modelo conceptual en el que se busca el contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-224">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="24490-225">Cuando este método devuelve un resultado, contiene un objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="24490-225">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="24490-226">Si no hay contenedores de entidades, este parámetro de salida contiene null; de lo contrario, devuelve el primer contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-226">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="24490-227">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-227">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-228">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> mediante el uso del nombre del contenedor de entidades y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-228">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="24490-229">Es <see langword="true" /> si hay un contenedor de entidades que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-229"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetEntityContainer">
      <MemberSignature Language="C#" Value="public bool TryGetEntityContainer (string name, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EntityContainer entityContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetEntityContainer(string name, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EntityContainer&amp; entityContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EntityContainer@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetEntityContainer(System::String ^ name, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EntityContainer ^ % entityContainer);" />
      <MemberSignature Language="F#" Value="member this.TryGetEntityContainer : string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetEntityContainer (name, ignoreCase, dataSpace, entityContainer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="entityContainer" Type="System.Data.Metadata.Edm.EntityContainer" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-230">Nombre del contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-230">The name of the entity container.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="24490-231">Es <see langword="true" /> para que la búsqueda se realice sin distinción entre mayúsculas y minúsculas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-231"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-232">Modelo conceptual en el que se busca el contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-232">The conceptual model on which the entity container is searched.</span></span></param>
        <param name="entityContainer"><span data-ttu-id="24490-233">Cuando este método devuelve un resultado, contiene un objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" />.</span><span class="sxs-lookup"><span data-stu-id="24490-233">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object.</span></span> <span data-ttu-id="24490-234">Si no hay contenedores de entidades, este parámetro de salida contiene null; de lo contrario, devuelve el primer contenedor de entidades.</span><span class="sxs-lookup"><span data-stu-id="24490-234">If there is no entity container, this output parameter contains null; otherwise, it returns the first entity container.</span></span> <span data-ttu-id="24490-235">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-235">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-236">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> mediante el uso del nombre del contenedor de entidades y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-236">Returns an <see cref="T:System.Data.Metadata.Edm.EntityContainer" /> object by using the specified entity container name and the data model.</span></span></summary>
        <returns><span data-ttu-id="24490-237">Es <see langword="true" /> si hay un contenedor de entidades que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-237"><see langword="true" /> if there is an entity container that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetItem&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-238">Devuelve un elemento mediante el uso de la identidad y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-238">Returns an item by using the specified identity and the data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, System.Data.Metadata.Edm.DataSpace space, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, valuetype System.Data.Metadata.Edm.DataSpace space, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetItem(Of T As GlobalItem) (identity As String, space As DataSpace, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, System::Data::Metadata::Edm::DataSpace space, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.TryGetItem (identity, space, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="space" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="24490-239">Tipo devuelto por el método.</span><span class="sxs-lookup"><span data-stu-id="24490-239">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="24490-240">Modelo conceptual en el que se busca el elemento.</span><span class="sxs-lookup"><span data-stu-id="24490-240">The conceptual model on which the item is searched.</span></span></param>
        <param name="space"><span data-ttu-id="24490-241">Modelo conceptual en el que se busca el elemento.</span><span class="sxs-lookup"><span data-stu-id="24490-241">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="24490-242">Cuando este método devuelve un resultado, contiene un objeto <see cref="T:System.Data.Metadata.Edm.GlobalItem" />.</span><span class="sxs-lookup"><span data-stu-id="24490-242">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object.</span></span> <span data-ttu-id="24490-243">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-243">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-244">Devuelve un elemento mediante el uso de la identidad y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-244">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="24490-245">Es <see langword="true" /> si hay un elemento que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-245"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryGetItem&lt;T&gt; (string identity, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out T item) where T : System.Data.Metadata.Edm.GlobalItem;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItem&lt;(class System.Data.Metadata.Edm.GlobalItem) T&gt;(string identity, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] !!T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItem``1(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,``0@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::Metadata::Edm::GlobalItem bool TryGetItem(System::String ^ identity, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="member this.TryGetItem : string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool (requires 'T :&gt; System.Data.Metadata.Edm.GlobalItem)" Usage="metadataWorkspace.TryGetItem (identity, ignoreCase, dataSpace, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.Metadata.Edm.GlobalItem</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="24490-246">Tipo devuelto por el método.</span><span class="sxs-lookup"><span data-stu-id="24490-246">The type returned by the method.</span></span></typeparam>
        <param name="identity"><span data-ttu-id="24490-247">Modelo conceptual en el que se busca el elemento.</span><span class="sxs-lookup"><span data-stu-id="24490-247">The conceptual model on which the item is searched.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="24490-248">Es <see langword="true" /> para que la búsqueda se realice sin distinción entre mayúsculas y minúsculas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-248"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-249">Modelo conceptual en el que se busca el elemento.</span><span class="sxs-lookup"><span data-stu-id="24490-249">The conceptual model on which the item is searched.</span></span></param>
        <param name="item"><span data-ttu-id="24490-250">Cuando este método devuelve un resultado, contiene un objeto <see cref="T:System.Data.Metadata.Edm.GlobalItem" />.</span><span class="sxs-lookup"><span data-stu-id="24490-250">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.GlobalItem" /> object.</span></span> <span data-ttu-id="24490-251">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-251">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-252">Devuelve un elemento mediante el uso de la identidad y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-252">Returns an item by using the specified identity and the data model.</span></span></summary>
        <returns><span data-ttu-id="24490-253">Es <see langword="true" /> si hay un elemento que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-253"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetItemCollection">
      <MemberSignature Language="C#" Value="public bool TryGetItemCollection (System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.ItemCollection collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetItemCollection(valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.ItemCollection&amp; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetItemCollection(System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.ItemCollection@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetItemCollection(System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::ItemCollection ^ % collection);" />
      <MemberSignature Language="F#" Value="member this.TryGetItemCollection : System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetItemCollection (dataSpace, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="collection" Type="System.Data.Metadata.Edm.ItemCollection" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dataSpace"><span data-ttu-id="24490-254"><see cref="T:System.Data.Metadata.Edm.DataSpace" /> desde la que se intenta la recuperación de <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="24490-254">The <see cref="T:System.Data.Metadata.Edm.DataSpace" /> from which to attempt retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></param>
        <param name="collection"><span data-ttu-id="24490-255">El resultado que devuelve este método contiene la colección de elementos.</span><span class="sxs-lookup"><span data-stu-id="24490-255">When this method returns, contains the item collection.</span></span> <span data-ttu-id="24490-256">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-256">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-257">Prueba la recuperación de <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span><span class="sxs-lookup"><span data-stu-id="24490-257">Tests the retrieval of <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />.</span></span></summary>
        <returns><span data-ttu-id="24490-258">Es <see langword="true" /> si la recuperación se realizó correctamente, de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-258"><see langword="true" /> if the retrieval was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectSpaceType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-259">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> u objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> a través del parámetro salida <paramref name="objectSpaceType" /> que representa el tipo que coincide con <see cref="T:System.Data.Metadata.Edm.EdmType" /> proporcionado por el parámetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-259">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> or <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.EnumType edmSpaceType, out System.Data.Metadata.Edm.EnumType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.EnumType edmSpaceType, [out] class System.Data.Metadata.Edm.EnumType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.EnumType,System.Data.Metadata.Edm.EnumType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As EnumType, ByRef objectSpaceType As EnumType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::EnumType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EnumType ^ % objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectSpaceType : System.Data.Metadata.Edm.EnumType *  -&gt; bool" Usage="metadataWorkspace.TryGetObjectSpaceType (edmSpaceType, objectSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.EnumType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.EnumType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="24490-260">Un objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa el control <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-260">A <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="24490-261">Cuando este método vuelve, contiene un objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> que representa el tipo de espacio de objeto.</span><span class="sxs-lookup"><span data-stu-id="24490-261">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object that represents the Object space type.</span></span> <span data-ttu-id="24490-262">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-262">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-263">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EnumType" /> mediante el parámetro <paramref name="objectSpaceType" /> out que representa el tipo que coincide con el <see cref="T:System.Data.Metadata.Edm.EdmType" /> proporcionado por el parámetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-263">Returns a <see cref="T:System.Data.Metadata.Edm.EnumType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="24490-264">Es <see langword="true" /> si hay un tipo que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-264"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectSpaceType">
      <MemberSignature Language="C#" Value="public bool TryGetObjectSpaceType (System.Data.Metadata.Edm.StructuralType edmSpaceType, out System.Data.Metadata.Edm.StructuralType objectSpaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectSpaceType(class System.Data.Metadata.Edm.StructuralType edmSpaceType, [out] class System.Data.Metadata.Edm.StructuralType&amp; objectSpaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectSpaceType (edmSpaceType As StructuralType, ByRef objectSpaceType As StructuralType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectSpaceType(System::Data::Metadata::Edm::StructuralType ^ edmSpaceType, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::StructuralType ^ % objectSpaceType);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectSpaceType : System.Data.Metadata.Edm.StructuralType *  -&gt; bool" Usage="metadataWorkspace.TryGetObjectSpaceType (edmSpaceType, objectSpaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="edmSpaceType" Type="System.Data.Metadata.Edm.StructuralType" />
        <Parameter Name="objectSpaceType" Type="System.Data.Metadata.Edm.StructuralType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="edmSpaceType"><span data-ttu-id="24490-265">Un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el control <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-265">A <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span></span></param>
        <param name="objectSpaceType"><span data-ttu-id="24490-266">Cuando este método vuelve, contiene un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> que representa el tipo de espacio de objeto.</span><span class="sxs-lookup"><span data-stu-id="24490-266">When this method returns, contains a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object that represents the Object space type.</span></span> <span data-ttu-id="24490-267">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-267">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-268">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.StructuralType" /> mediante el parámetro <paramref name="objectSpaceType" /> out que representa el tipo que coincide con el <see cref="T:System.Data.Metadata.Edm.EdmType" /> proporcionado por el parámetro <paramref name="edmSpaceType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-268">Returns a <see cref="T:System.Data.Metadata.Edm.StructuralType" /> object via the out parameter <paramref name="objectSpaceType" /> that represents the type that matches the <see cref="T:System.Data.Metadata.Edm.EdmType" /> supplied by the parameter <paramref name="edmSpaceType" />.</span></span></summary>
        <returns><span data-ttu-id="24490-269">Es <see langword="true" /> si hay un tipo que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-269"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetType">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="24490-270">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> con el nombre de tipo, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-270">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetType (name, namespaceName, dataSpace, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-271">Nombre del tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-271">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="24490-272">Espacio de nombres del tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-272">The namespace of the type.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-273">Modelo conceptual en el que se busca el tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-273">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="24490-274">Cuando este método devuelve un resultado, contiene un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-274">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="24490-275">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-275">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-276">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> con el nombre de tipo, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-276">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="24490-277">Es <see langword="true" /> si hay un tipo que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-277"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetType">
      <MemberSignature Language="C#" Value="public bool TryGetType (string name, string namespaceName, bool ignoreCase, System.Data.Metadata.Edm.DataSpace dataSpace, out System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetType(string name, string namespaceName, bool ignoreCase, valuetype System.Data.Metadata.Edm.DataSpace dataSpace, [out] class System.Data.Metadata.Edm.EdmType&amp; type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetType(System.String,System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmType@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetType(System::String ^ name, System::String ^ namespaceName, bool ignoreCase, System::Data::Metadata::Edm::DataSpace dataSpace, [Runtime::InteropServices::Out] System::Data::Metadata::Edm::EdmType ^ % type);" />
      <MemberSignature Language="F#" Value="member this.TryGetType : string * string * bool * System.Data.Metadata.Edm.DataSpace *  -&gt; bool" Usage="metadataWorkspace.TryGetType (name, namespaceName, ignoreCase, dataSpace, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="namespaceName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="dataSpace" Type="System.Data.Metadata.Edm.DataSpace" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" RefType="out" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="24490-278">Nombre del tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-278">The name of the type.</span></span></param>
        <param name="namespaceName"><span data-ttu-id="24490-279">Espacio de nombres del tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-279">The namespace of the type.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="24490-280">Es <see langword="true" /> para que la búsqueda se realice sin distinción entre mayúsculas y minúsculas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-280"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="dataSpace"><span data-ttu-id="24490-281">Modelo conceptual en el que se busca el tipo.</span><span class="sxs-lookup"><span data-stu-id="24490-281">The conceptual model on which the type is searched.</span></span></param>
        <param name="type"><span data-ttu-id="24490-282">Cuando este método devuelve un resultado, contiene un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" />.</span><span class="sxs-lookup"><span data-stu-id="24490-282">When this method returns, contains an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object.</span></span> <span data-ttu-id="24490-283">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="24490-283">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="24490-284">Devuelve un objeto <see cref="T:System.Data.Metadata.Edm.EdmType" /> con el nombre de tipo, el nombre de espacio de nombres y el modelo de datos especificados.</span><span class="sxs-lookup"><span data-stu-id="24490-284">Returns an <see cref="T:System.Data.Metadata.Edm.EdmType" /> object by using the specified type name, namespace name, and data model.</span></span></summary>
        <returns><span data-ttu-id="24490-285">Es <see langword="true" /> si hay un tipo que coincide con los criterios de búsqueda; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="24490-285"><see langword="true" /> if there is a type that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
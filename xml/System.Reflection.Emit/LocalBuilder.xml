<Type Name="LocalBuilder" FullName="System.Reflection.Emit.LocalBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb67fabf54ff847f2cd8481ccd0e2148694c65dc" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48728843" /></Metadata><TypeSignature Language="C#" Value="public sealed class LocalBuilder : System.Reflection.LocalVariableInfo, System.Runtime.InteropServices._LocalBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalBuilder extends System.Reflection.LocalVariableInfo implements class System.Runtime.InteropServices._LocalBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.LocalBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LocalBuilder&#xA;Inherits LocalVariableInfo&#xA;Implements _LocalBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalBuilder sealed : System::Reflection::LocalVariableInfo, System::Runtime::InteropServices::_LocalBuilder" />
  <TypeSignature Language="F#" Value="type LocalBuilder = class&#xA;    inherit LocalVariableInfo&#xA;    interface _LocalBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.LocalVariableInfo</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._LocalBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._LocalBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="40462-101">Representa una variable local en un método o constructor.</span><span class="sxs-lookup"><span data-stu-id="40462-101">Represents a local variable within a method or constructor.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-102">Un `LocalBuilder` objeto puede definirse mediante el <xref:System.Reflection.Emit.ILGenerator.DeclareLocal%2A> método.</span><span class="sxs-lookup"><span data-stu-id="40462-102">A `LocalBuilder` object can be defined using the <xref:System.Reflection.Emit.ILGenerator.DeclareLocal%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40462-103">En el ejemplo siguiente se crea un `static` método (`Shared` en Visual Basic) denominada `Function1` que devuelve una cadena y tiene un parámetro de tipo <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="40462-103">The following example creates a `static` method (`Shared` in Visual Basic) named `Function1` that returns a string and has a parameter of type <xref:System.Int32>.</span></span> <span data-ttu-id="40462-104">En el cuerpo del método, el ejemplo de código crea <xref:System.Reflection.Emit.LocalBuilder> objetos que representan dos variables locales y los conjuntos de información para las variables locales de símbolos.</span><span class="sxs-lookup"><span data-stu-id="40462-104">In the body of the method, the code example creates <xref:System.Reflection.Emit.LocalBuilder> objects representing two local variables, and sets symbol information for the local variables.</span></span> <span data-ttu-id="40462-105">El método no hace nada significativo, pero el cuerpo del método muestra cómo almacenar un parámetro a una variable local, una cadena literal a una variable local y cargar una variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-105">The method does not do anything significant, but the method body demonstrates storing a parameter to a local variable, storing a literal string to a local variable, and loading a local variable.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#1)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#1)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsPinned">
      <MemberSignature Language="C#" Value="public override bool IsPinned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPinned" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.IsPinned" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsPinned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPinned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPinned : bool" Usage="System.Reflection.Emit.LocalBuilder.IsPinned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40462-106">Obtiene un valor que indica si el objeto al que hace referencia la variable local está anclado en memoria.</span><span class="sxs-lookup"><span data-stu-id="40462-106">Gets a value indicating whether the object referred to by the local variable is pinned in memory.</span></span></summary>
        <value><span data-ttu-id="40462-107"><see langword="true" /> si el objeto al que hace referencia la variable local está anclado en memoria; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="40462-107"><see langword="true" /> if the object referred to by the local variable is pinned in memory; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-108">En código no seguro, se debe anclar un objeto antes de que puede hacer referencia mediante un puntero no administrado.</span><span class="sxs-lookup"><span data-stu-id="40462-108">In unsafe code, an object must be pinned before it can be referred to by an unmanaged pointer.</span></span> <span data-ttu-id="40462-109">Mientras está anclado el objeto que se hace referencia, no puede mover recolección de elementos.</span><span class="sxs-lookup"><span data-stu-id="40462-109">While the referenced object is pinned, it cannot be moved by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalIndex">
      <MemberSignature Language="C#" Value="public override int LocalIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalIndex" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.LocalIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LocalIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalIndex : int" Usage="System.Reflection.Emit.LocalBuilder.LocalIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40462-110">Obtiene el índice de base cero de la variable local dentro del cuerpo del método.</span><span class="sxs-lookup"><span data-stu-id="40462-110">Gets the zero-based index of the local variable within the method body.</span></span></summary>
        <value><span data-ttu-id="40462-111">Valor entero que representa el orden de declaración de la variable local en el cuerpo del método.</span><span class="sxs-lookup"><span data-stu-id="40462-111">An integer value that represents the order of declaration of the local variable within the method body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-112">Números de índice se asignan a variables locales en el orden en que se declara o emite, empezando por cero.</span><span class="sxs-lookup"><span data-stu-id="40462-112">Index numbers are assigned to local variables in the order in which they are declared or emitted, beginning with zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalType">
      <MemberSignature Language="C#" Value="public override Type LocalType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LocalType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.LocalBuilder.LocalType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LocalType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ LocalType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalType : Type" Usage="System.Reflection.Emit.LocalBuilder.LocalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="40462-113">Obtiene el tipo de la variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-113">Gets the type of the local variable.</span></span></summary>
        <value><span data-ttu-id="40462-114"><see cref="T:System.Type" /> de la variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-114">The <see cref="T:System.Type" /> of the local variable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="40462-115">Ejemplo de código siguiente muestra el uso de `LocalType`.</span><span class="sxs-lookup"><span data-stu-id="40462-115">The following code sample illustrates the use of `LocalType`.</span></span> <span data-ttu-id="40462-116">Este código forma parte de un ejemplo más extenso de la <xref:System.Reflection.Emit.LocalBuilder> clase.</span><span class="sxs-lookup"><span data-stu-id="40462-116">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetLocalSymInfo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="40462-117">Establece la información simbólica de la variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-117">Sets the local variable's symbolic information.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetLocalSymInfo">
      <MemberSignature Language="C#" Value="public void SetLocalSymInfo (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSymInfo(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSymInfo (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSymInfo(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetLocalSymInfo : string -&gt; unit" Usage="localBuilder.SetLocalSymInfo name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="40462-118">Nombre de la variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-118">The name of the local variable.</span></span></param>
        <summary><span data-ttu-id="40462-119">Establece el nombre de esta variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-119">Sets the name of this local variable.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-120">El <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> método es compatible con los métodos definidos en tipos dinámicos.</span><span class="sxs-lookup"><span data-stu-id="40462-120">The <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method is supported for methods defined in dynamic types.</span></span> <span data-ttu-id="40462-121">No se admite para los métodos dinámicos que se definen mediante la <xref:System.Reflection.Emit.DynamicMethod> clase.</span><span class="sxs-lookup"><span data-stu-id="40462-121">It is not supported for dynamic methods defined using the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40462-122">Ejemplo de código siguiente muestra el uso de la <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="40462-122">The following code sample illustrates the use of the <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method.</span></span> <span data-ttu-id="40462-123">Este código forma parte de un ejemplo más extenso de la <xref:System.Reflection.Emit.LocalBuilder> clase.</span><span class="sxs-lookup"><span data-stu-id="40462-123">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40462-124">El tipo contenedor se ha creado mediante el método <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="40462-124">The containing type has been created with <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="40462-125">O bien</span><span class="sxs-lookup"><span data-stu-id="40462-125">-or-</span></span> 
<span data-ttu-id="40462-126">No hay ningún sistema de escritura de símbolos para el módulo contenedor.</span><span class="sxs-lookup"><span data-stu-id="40462-126">There is no symbolic writer defined for the containing module.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="40462-127">Este valor local está definido en un método dinámico, en lugar de en un método de un tipo dinámico.</span><span class="sxs-lookup"><span data-stu-id="40462-127">This local is defined in a dynamic method, rather than in a method of a dynamic type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetLocalSymInfo">
      <MemberSignature Language="C#" Value="public void SetLocalSymInfo (string name, int startOffset, int endOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLocalSymInfo(string name, int32 startOffset, int32 endOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLocalSymInfo (name As String, startOffset As Integer, endOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLocalSymInfo(System::String ^ name, int startOffset, int endOffset);" />
      <MemberSignature Language="F#" Value="member this.SetLocalSymInfo : string * int * int -&gt; unit" Usage="localBuilder.SetLocalSymInfo (name, startOffset, endOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="startOffset" Type="System.Int32" />
        <Parameter Name="endOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="40462-128">Nombre de la variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-128">The name of the local variable.</span></span></param>
        <param name="startOffset"><span data-ttu-id="40462-129">Desplazamiento inicial del ámbito léxico de la variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-129">The beginning offset of the lexical scope of the local variable.</span></span></param>
        <param name="endOffset"><span data-ttu-id="40462-130">Desplazamiento final del ámbito léxico de la variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-130">The ending offset of the lexical scope of the local variable.</span></span></param>
        <summary><span data-ttu-id="40462-131">Establece el nombre y el ámbito léxico de esta variable local.</span><span class="sxs-lookup"><span data-stu-id="40462-131">Sets the name and lexical scope of this local variable.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-132">El <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> método es compatible con los métodos definidos en tipos dinámicos.</span><span class="sxs-lookup"><span data-stu-id="40462-132">The <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method is supported for methods defined in dynamic types.</span></span> <span data-ttu-id="40462-133">No se admite para los métodos dinámicos que se definen mediante la <xref:System.Reflection.Emit.DynamicMethod> clase.</span><span class="sxs-lookup"><span data-stu-id="40462-133">It is not supported for dynamic methods defined using the <xref:System.Reflection.Emit.DynamicMethod> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40462-134">Ejemplo de código siguiente muestra el uso de la <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> método.</span><span class="sxs-lookup"><span data-stu-id="40462-134">The following code sample illustrates the use of the <xref:System.Reflection.Emit.LocalBuilder.SetLocalSymInfo%2A> method.</span></span> <span data-ttu-id="40462-135">Este código forma parte de un ejemplo más extenso de la <xref:System.Reflection.Emit.LocalBuilder> clase.</span><span class="sxs-lookup"><span data-stu-id="40462-135">This code is part of a larger example for the <xref:System.Reflection.Emit.LocalBuilder> class.</span></span>  
  
 [!code-cpp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/cpp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CPP/localbuilder_sample_4.cpp#2)]
 [!code-csharp[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/csharp/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/CS/localbuilder_sample_4.cs#2)]
 [!code-vb[LocalBuilder_Sample_SetLocalSymInfo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/LocalBuilder_Sample_SetLocalSymInfo/VB/localbuilder_sample_4.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="40462-136">El tipo contenedor se ha creado mediante el método <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="40462-136">The containing type has been created with <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
<span data-ttu-id="40462-137">O bien</span><span class="sxs-lookup"><span data-stu-id="40462-137">-or-</span></span> 
<span data-ttu-id="40462-138">No hay ningún sistema de escritura de símbolos para el módulo contenedor.</span><span class="sxs-lookup"><span data-stu-id="40462-138">There is no symbolic writer defined for the containing module.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="40462-139">Este valor local está definido en un método dinámico, en lugar de en un método de un tipo dinámico.</span><span class="sxs-lookup"><span data-stu-id="40462-139">This local is defined in a dynamic method, rather than in a method of a dynamic type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _LocalBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_LocalBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="40462-140">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="40462-140">Reserved for future use.</span></span> <span data-ttu-id="40462-141">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="40462-141">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="40462-142">Matriz que se pasa con los nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="40462-142">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="40462-143">Número de nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="40462-143">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="40462-144">Contexto de configuración regional en el que se van a interpretar los nombres.</span><span class="sxs-lookup"><span data-stu-id="40462-144">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="40462-145">Matriz asignada por el llamador que recibe los identificadores que corresponden a los nombres.</span><span class="sxs-lookup"><span data-stu-id="40462-145">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="40462-146">Asigna un conjunto de nombres a un conjunto correspondiente de identificadores de envío.</span><span class="sxs-lookup"><span data-stu-id="40462-146">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-147">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="40462-147">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="40462-148">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="40462-148">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="40462-149">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="40462-149">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _LocalBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_LocalBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="40462-150">Información de tipos que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="40462-150">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="40462-151">Identificador de la configuración regional de la información de tipo.</span><span class="sxs-lookup"><span data-stu-id="40462-151">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="40462-152">Recibe un puntero al objeto de información de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="40462-152">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="40462-153">Recupera la información de tipo de un objeto, que se puede usar después para obtener la información de tipo de una interfaz.</span><span class="sxs-lookup"><span data-stu-id="40462-153">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-154">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="40462-154">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="40462-155">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="40462-155">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="40462-156">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="40462-156">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _LocalBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _LocalBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_LocalBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="40462-157">Señala a una ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span><span class="sxs-lookup"><span data-stu-id="40462-157">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="40462-158">Recupera el número de interfaces de información de tipo que proporciona un objeto (0 ó 1).</span><span class="sxs-lookup"><span data-stu-id="40462-158">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-159">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="40462-159">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="40462-160">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="40462-160">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="40462-161">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="40462-161">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._LocalBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _LocalBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._LocalBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.LocalBuilder.System#Runtime#InteropServices#_LocalBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _LocalBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._LocalBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_LocalBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._LocalBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="40462-162">Identifica el miembro.</span><span class="sxs-lookup"><span data-stu-id="40462-162">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="40462-163">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="40462-163">Reserved for future use.</span></span> <span data-ttu-id="40462-164">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="40462-164">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="40462-165">Contexto de la configuración regional en que se interpretan los argumentos.</span><span class="sxs-lookup"><span data-stu-id="40462-165">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="40462-166">Marcas que describen el contexto de la llamada.</span><span class="sxs-lookup"><span data-stu-id="40462-166">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="40462-167">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DISPID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span><span class="sxs-lookup"><span data-stu-id="40462-167">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="40462-168">Puntero a la ubicación donde se va a almacenar el resultado.</span><span class="sxs-lookup"><span data-stu-id="40462-168">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="40462-169">Puntero a una estructura que contiene información de excepciones.</span><span class="sxs-lookup"><span data-stu-id="40462-169">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="40462-170">Índice del primer argumento que tiene un error.</span><span class="sxs-lookup"><span data-stu-id="40462-170">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="40462-171">Proporciona acceso a las propiedades y los métodos expuestos por un objeto.</span><span class="sxs-lookup"><span data-stu-id="40462-171">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40462-172">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="40462-172">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="40462-173">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="40462-173">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="40462-174">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="40462-174">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="SignatureHelper" FullName="System.Reflection.Emit.SignatureHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3deceb9b861b8fb53badecf66070a80228e50fc2" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51870279" /></Metadata><TypeSignature Language="C#" Value="public sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SignatureHelper extends System.Object implements class System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.SignatureHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignatureHelper&#xA;Implements _SignatureHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignatureHelper sealed : System::Runtime::InteropServices::_SignatureHelper" />
  <TypeSignature Language="F#" Value="type SignatureHelper = class&#xA;    interface _SignatureHelper" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._SignatureHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="84207-101">Proporciona métodos para compilar firmas.</span><span class="sxs-lookup"><span data-stu-id="84207-101">Provides methods for building signatures.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-102">Use la <xref:System.Reflection.Emit.SignatureHelper> clase para crear un objeto binario de firma que se puede pasar a la <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> método de la <xref:System.Reflection.Emit.DynamicILInfo> clase.</span><span class="sxs-lookup"><span data-stu-id="84207-102">Use the <xref:System.Reflection.Emit.SignatureHelper> class to create a signature blob that can be passed to the <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> method of the <xref:System.Reflection.Emit.DynamicILInfo> class.</span></span> <span data-ttu-id="84207-103">Un <xref:System.Reflection.Emit.SignatureHelper> objeto también se puede pasar a la <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> sobrecarga del método para insertar una instrucción y un token de firma en una secuencia del lenguaje intermedio (MSIL) de Microsoft.</span><span class="sxs-lookup"><span data-stu-id="84207-103">A <xref:System.Reflection.Emit.SignatureHelper> object can also be passed to the <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> method overload to insert an instruction and a signature token into a Microsoft intermediate language (MSIL) stream.</span></span> <span data-ttu-id="84207-104">Para obtener información sobre los blobs de firma y metadatos de firma, vea la documentación de ECMA Partition II metadatos.</span><span class="sxs-lookup"><span data-stu-id="84207-104">For information on signature blobs and signature metadata, see the ECMA Partition II Metadata documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84207-105">La documentación de ECMA Partition II está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de Ecma International.</span><span class="sxs-lookup"><span data-stu-id="84207-105">The ECMA Partition II documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddArgument">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84207-106">Agrega un argumento a la firma.</span><span class="sxs-lookup"><span data-stu-id="84207-106">Adds an argument to the signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type clsArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type clsArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (clsArgument As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ clsArgument);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type -&gt; unit" Usage="signatureHelper.AddArgument clsArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsArgument" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clsArgument"><span data-ttu-id="84207-107">Tipo del argumento.</span><span class="sxs-lookup"><span data-stu-id="84207-107">The type of the argument.</span></span></param>
        <summary><span data-ttu-id="84207-108">Agrega un argumento a la firma.</span><span class="sxs-lookup"><span data-stu-id="84207-108">Adds an argument to the signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-109">Para agregar un argumento con los modificadores personalizados obligatorios u opcionales, utilice el <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="84207-109">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-110">La firma ya ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-110">The signature has already been finished.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-111">El valor de <paramref name="clsArgument" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-111"><paramref name="clsArgument" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, bool pinned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, bool pinned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, pinned As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, bool pinned);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type * bool -&gt; unit" Usage="signatureHelper.AddArgument (argument, pinned)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="pinned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="84207-112">Tipo de argumento.</span><span class="sxs-lookup"><span data-stu-id="84207-112">The argument type.</span></span></param>
        <param name="pinned"><span data-ttu-id="84207-113">Es <see langword="true" /> si el argumento está anclado; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="84207-113"><see langword="true" /> if the argument is pinned; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="84207-114">Agrega un argumento del tipo especificado a la firma, indicando si el argumento está o no anclado.</span><span class="sxs-lookup"><span data-stu-id="84207-114">Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-115">Para agregar un argumento con los modificadores personalizados obligatorios u opcionales, utilice el <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="84207-115">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-116">El valor de <paramref name="argument" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-116"><paramref name="argument" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, class System.Type[] requiredCustomModifiers, class System.Type[] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, cli::array &lt;Type ^&gt; ^ requiredCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type * Type[] * Type[] -&gt; unit" Usage="signatureHelper.AddArgument (argument, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="84207-117">Tipo de argumento.</span><span class="sxs-lookup"><span data-stu-id="84207-117">The argument type.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="84207-118">Matriz de tipos que representa los modificadores personalizados obligatorios para el argumento, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="84207-118">An array of types representing the required custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="84207-119">Si el argumento no tiene modificadores personalizados obligatorios, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-119">If the argument has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="84207-120">Matriz de tipos que representa los modificadores personalizados opcionales para el argumento, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="84207-120">An array of types representing the optional custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="84207-121">Si el argumento no tiene modificadores personalizados opcionales, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-121">If the argument has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="84207-122">Agrega un argumento a la firma, con los modificadores personalizados especificados.</span><span class="sxs-lookup"><span data-stu-id="84207-122">Adds an argument to the signature, with the specified custom modifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-123">Consulte la <xref:System.Runtime.CompilerServices> espacio de nombres para las clases que representan los modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="84207-123">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-124">El valor de <paramref name="argument" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-124"><paramref name="argument" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="84207-125">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-125">-or-</span></span> 
<span data-ttu-id="84207-126">Un elemento de <paramref name="requiredCustomModifiers" /> u <paramref name="optionalCustomModifiers" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-126">An element of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-127">La firma ya ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-127">The signature has already been finished.</span></span>  
  
<span data-ttu-id="84207-128">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-128">-or-</span></span> 
<span data-ttu-id="84207-129">Uno de los modificadores personalizados especificados es un tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="84207-129">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="84207-130">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-130">-or-</span></span> 
<span data-ttu-id="84207-131">Uno de los modificadores personalizados especificados es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="84207-131">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="84207-132">Es decir, la propiedad <see cref="P:System.Type.ContainsGenericParameters" /> es <see langword="true" /> para el modificador personalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-132">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArguments">
      <MemberSignature Language="C#" Value="public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArguments(class System.Type[] arguments, class System.Type[][] requiredCustomModifiers, class System.Type[][] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArguments (arguments As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArguments(cli::array &lt;Type ^&gt; ^ arguments, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.AddArguments : Type[] * Type[][] * Type[][] -&gt; unit" Usage="signatureHelper.AddArguments (arguments, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Type[]" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="84207-133">Tipos de los argumentos que se van a agregar.</span><span class="sxs-lookup"><span data-stu-id="84207-133">The types of the arguments to be added.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="84207-134">Matriz de matrices de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-134">An array of arrays of types.</span></span> <span data-ttu-id="84207-135">Cada matriz de tipos representa los modificadores personalizados obligatorios para el argumento correspondiente, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="84207-135">Each array of types represents the required custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="84207-136">Si un argumento concreto no tiene modificadores personalizados obligatorios, especifique <see langword="null" /> en lugar de una matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-136">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="84207-137">Si ningún argumento tiene modificadores personalizados obligatorios, especifique <see langword="null" /> en lugar de una matriz de matrices.</span><span class="sxs-lookup"><span data-stu-id="84207-137">If none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="84207-138">Matriz de matrices de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-138">An array of arrays of types.</span></span> <span data-ttu-id="84207-139">Cada matriz de tipos representa los modificadores personalizados opcionales para el argumento correspondiente, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="84207-139">Each array of types represents the optional custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="84207-140">Si un argumento concreto no tiene modificadores personalizados opcionales, especifique <see langword="null" /> en lugar de una matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-140">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="84207-141">Si ningún argumento tiene modificadores personalizados opcionales, especifique <see langword="null" /> en lugar de una matriz de matrices.</span><span class="sxs-lookup"><span data-stu-id="84207-141">If none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="84207-142">Agrega un conjunto de argumentos a la firma, con los modificadores personalizados especificados.</span><span class="sxs-lookup"><span data-stu-id="84207-142">Adds a set of arguments to the signature, with the specified custom modifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-143">Los argumentos se agregan al final de la firma, en orden de los elementos de `arguments`.</span><span class="sxs-lookup"><span data-stu-id="84207-143">The arguments are added to the end of the signature, in order of the elements of `arguments`.</span></span>  
  
 <span data-ttu-id="84207-144">Consulte la <xref:System.Runtime.CompilerServices> espacio de nombres para las clases que representan los modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="84207-144">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-145">Un elemento de <paramref name="arguments" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-145">An element of <paramref name="arguments" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="84207-146">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-146">-or-</span></span> 
<span data-ttu-id="84207-147">Uno de los modificadores personalizados especificados es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-147">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="84207-148">(Sin embargo, se puede especificar <see langword="null" /> para la matriz de modificadores personalizados para cualquier argumento).</span><span class="sxs-lookup"><span data-stu-id="84207-148">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-149">La firma ya ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-149">The signature has already been finished.</span></span>  
  
<span data-ttu-id="84207-150">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-150">-or-</span></span> 
<span data-ttu-id="84207-151">Uno de los modificadores personalizados especificados es un tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="84207-151">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="84207-152">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-152">-or-</span></span> 
<span data-ttu-id="84207-153">Uno de los modificadores personalizados especificados es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="84207-153">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="84207-154">Es decir, la propiedad <see cref="P:System.Type.ContainsGenericParameters" /> es <see langword="true" /> para el modificador personalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-154">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="84207-155">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-155">-or-</span></span> 
<span data-ttu-id="84207-156">El tamaño de <paramref name="requiredCustomModifiers" /> o <paramref name="optionalCustomModifiers" /> no es igual al tamaño de <paramref name="arguments" />.</span><span class="sxs-lookup"><span data-stu-id="84207-156">The size of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> does not equal the size of <paramref name="arguments" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSentinel">
      <MemberSignature Language="C#" Value="public void AddSentinel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSentinel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddSentinel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSentinel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSentinel();" />
      <MemberSignature Language="F#" Value="member this.AddSentinel : unit -&gt; unit" Usage="signatureHelper.AddSentinel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84207-157">Marca el final de la parte corregida de un vararg.</span><span class="sxs-lookup"><span data-stu-id="84207-157">Marks the end of a vararg fixed part.</span></span> <span data-ttu-id="84207-158">Sólo se utiliza si el llamador crea un lugar de llamadas de firma vararg.</span><span class="sxs-lookup"><span data-stu-id="84207-158">This is only used if the caller is creating a vararg signature call site.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="signatureHelper.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="84207-159">Objeto con el que se debe comparar esta instancia.</span><span class="sxs-lookup"><span data-stu-id="84207-159">The object with which this instance should be compared.</span></span></param>
        <summary><span data-ttu-id="84207-160">Comprueba si esta instancia es igual al objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="84207-160">Checks if this instance is equal to the given object.</span></span></summary>
        <returns><span data-ttu-id="84207-161"><see langword="true" /> si el objeto especificado es un objeto <see langword="SignatureHelper" /> y representa la misma firma; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="84207-161"><see langword="true" /> if the given object is a <see langword="SignatureHelper" /> and represents the same signature; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetFieldSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetFieldSigHelper(System::Reflection::Module ^ mod);" />
      <MemberSignature Language="F#" Value="static member GetFieldSigHelper : System.Reflection.Module -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetFieldSigHelper mod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="84207-162">Módulo dinámico que contiene el campo para el que se solicita el objeto <see langword="SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="84207-162">The dynamic module that contains the field for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <summary><span data-ttu-id="84207-163">Devuelve ayuda para las firmas de un campo.</span><span class="sxs-lookup"><span data-stu-id="84207-163">Returns a signature helper for a field.</span></span></summary>
        <returns><span data-ttu-id="84207-164">Objeto <see langword="SignatureHelper" /> de un campo.</span><span class="sxs-lookup"><span data-stu-id="84207-164">The <see langword="SignatureHelper" /> object for a field.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="signatureHelper.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84207-165">Crea y devuelve un código hash para esta instancia.</span><span class="sxs-lookup"><span data-stu-id="84207-165">Creates and returns a hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="84207-166">Devuelve el código hash en función del nombre.</span><span class="sxs-lookup"><span data-stu-id="84207-166">Returns the hash code based on the name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-167">El código hash se crea a partir del nombre de esta instancia, por lo que el valor devuelto es el mismo que si el `GetHashCode` se llama al método en el valor de la `Name` propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-167">The hash code is created from the name of this instance, so the return value is the same as if the `GetHashCode` method were called on the value of the `Name` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalVarSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84207-168">Devuelve ayuda para las firmas de una variable local.</span><span class="sxs-lookup"><span data-stu-id="84207-168">Returns a signature helper for a local variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper () As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper();" />
      <MemberSignature Language="F#" Value="static member GetLocalVarSigHelper : unit -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84207-169">Devuelve ayuda para las firmas de una variable local.</span><span class="sxs-lookup"><span data-stu-id="84207-169">Returns a signature helper for a local variable.</span></span></summary>
        <returns><span data-ttu-id="84207-170"><see cref="T:System.Reflection.Emit.SignatureHelper" /> para una variable local.</span><span class="sxs-lookup"><span data-stu-id="84207-170">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> for a local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper(System::Reflection::Module ^ mod);" />
      <MemberSignature Language="F#" Value="static member GetLocalVarSigHelper : System.Reflection.Module -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper mod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="84207-171">Módulo dinámico que contiene la variable local para la que se solicita el objeto <see langword="SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="84207-171">The dynamic module that contains the local variable for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <summary><span data-ttu-id="84207-172">Devuelve ayuda para las firmas de una variable local.</span><span class="sxs-lookup"><span data-stu-id="84207-172">Returns a signature helper for a local variable.</span></span></summary>
        <returns><span data-ttu-id="84207-173">Objeto <see langword="SignatureHelper" /> de una variable local.</span><span class="sxs-lookup"><span data-stu-id="84207-173">The <see langword="SignatureHelper" /> object for a local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84207-174">Devuelve ayuda para las firmas de un método.</span><span class="sxs-lookup"><span data-stu-id="84207-174">Returns a signature helper for a method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.CallingConventions * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (callingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="callingConvention"><span data-ttu-id="84207-175">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="84207-175">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="84207-176">Tipo de valor devuelto del método, o <see langword="null" /> para un tipo de valor devuelto void (procedimiento <see langword="Sub" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="84207-176">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="84207-177">Devuelve ayuda para las firmas de un método a partir del módulo, la convención de llamada y el tipo de valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="84207-177">Returns a signature helper for a method given the method's calling convention and return type.</span></span></summary>
        <returns><span data-ttu-id="84207-178">El objeto <see langword="SignatureHelper" /> de un método.</span><span class="sxs-lookup"><span data-stu-id="84207-178">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (unmanagedCallingConvention As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Runtime::InteropServices::CallingConvention unmanagedCallingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Runtime.InteropServices.CallingConvention * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (unmanagedCallingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedCallingConvention" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="unmanagedCallingConvention"><span data-ttu-id="84207-179">Convención de llamada no administrada del método.</span><span class="sxs-lookup"><span data-stu-id="84207-179">The unmanaged calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="84207-180">Tipo de valor devuelto del método, o <see langword="null" /> para un tipo de valor devuelto void (procedimiento <see langword="Sub" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="84207-180">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="84207-181">Devuelve ayuda para las firmas de un método a partir del módulo, la convención de llamada no administrada y el tipo de valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="84207-181">Returns a signature helper for a method given the method's unmanaged calling convention and return type.</span></span></summary>
        <returns><span data-ttu-id="84207-182">El objeto <see langword="SignatureHelper" /> de un método.</span><span class="sxs-lookup"><span data-stu-id="84207-182">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-183"><paramref name="unmanagedCallConv" /> es una convención desconocida de llamada no administrada.</span><span class="sxs-lookup"><span data-stu-id="84207-183"><paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * System.Reflection.CallingConventions * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, callingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="84207-184"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contiene el método para el que se solicita el objeto <see langword="SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="84207-184">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="84207-185">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="84207-185">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="84207-186">Tipo de valor devuelto del método, o <see langword="null" /> para un tipo de valor devuelto void (procedimiento <see langword="Sub" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="84207-186">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="84207-187">Devuelve un asistente de firma para un método dado el módulo del método, la convención de llamada y tipo de valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="84207-187">Returns a signature helper for a method given the method's module, calling convention, and return type.</span></span></summary>
        <returns><span data-ttu-id="84207-188">El objeto <see langword="SignatureHelper" /> de un método.</span><span class="sxs-lookup"><span data-stu-id="84207-188">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-189">El valor de <paramref name="mod" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-189"><paramref name="mod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-190"><paramref name="mod" /> no es un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="84207-190"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallConv, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, unmanagedCallConv As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Runtime::InteropServices::CallingConvention unmanagedCallConv, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * System.Runtime.InteropServices.CallingConvention * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, unmanagedCallConv, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="unmanagedCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="84207-191"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contiene el método para el que se solicita el objeto <see langword="SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="84207-191">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="unmanagedCallConv"><span data-ttu-id="84207-192">Convención de llamada no administrada del método.</span><span class="sxs-lookup"><span data-stu-id="84207-192">The unmanaged calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="84207-193">Tipo de valor devuelto del método, o <see langword="null" /> para un tipo de valor devuelto void (procedimiento <see langword="Sub" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="84207-193">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="84207-194">Devuelve ayuda para las firmas de un método a partir del módulo, la convención de llamada no administrada y el tipo de valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="84207-194">Returns a signature helper for a method given the method's module, unmanaged calling convention, and return type.</span></span></summary>
        <returns><span data-ttu-id="84207-195">El objeto <see langword="SignatureHelper" /> de un método.</span><span class="sxs-lookup"><span data-stu-id="84207-195">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-196">El valor de <paramref name="mod" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-196"><paramref name="mod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-197"><paramref name="mod" /> no es un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="84207-197"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="84207-198">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-198">-or-</span></span> 
 <span data-ttu-id="84207-199"><paramref name="unmanagedCallConv" /> es una convención desconocida de llamada no administrada.</span><span class="sxs-lookup"><span data-stu-id="84207-199"><paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * Type * Type[] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="84207-200"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contiene el método para el que se solicita el objeto <see langword="SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="84207-200">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="84207-201">Tipo de valor devuelto del método, o <see langword="null" /> para un tipo de valor devuelto void (procedimiento <see langword="Sub" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="84207-201">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="84207-202">Los tipos de los argumentos del método, o <see langword="null" /> si el método no tiene ningún argumento.</span><span class="sxs-lookup"><span data-stu-id="84207-202">The types of the arguments of the method, or <see langword="null" /> if the method has no arguments.</span></span></param>
        <summary><span data-ttu-id="84207-203">Devuelve ayuda para las firmas de un método con una convención de llamada estándar, a partir del módulo, el tipo de valor devuelto y los tipos de argumento del método.</span><span class="sxs-lookup"><span data-stu-id="84207-203">Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.</span></span></summary>
        <returns><span data-ttu-id="84207-204">El objeto <see langword="SignatureHelper" /> de un método.</span><span class="sxs-lookup"><span data-stu-id="84207-204">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-205">Esta sobrecarga crea una firma con una convención de llamada estándar.</span><span class="sxs-lookup"><span data-stu-id="84207-205">This overload creates a signature with a standard calling convention.</span></span>  
  
 <span data-ttu-id="84207-206">Para crear una firma de método con los modificadores personalizados, use la <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> sobrecarga de método y, a continuación, utilice el <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> o <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> sobrecargas del método para agregar argumentos con los modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="84207-206">To create a method signature with custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> method overload and then use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> or <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overloads to add arguments with custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-207">El valor de <paramref name="mod" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-207"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="84207-208">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-208">-or-</span></span> 
<span data-ttu-id="84207-209">Un elemento de <paramref name="parameterTypes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-209">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-210"><paramref name="mod" /> no es un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="84207-210"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertySigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84207-211">Devuelve ayuda para las firmas de una propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-211">Returns a signature helper for a property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * Type * Type[] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="84207-212"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contiene la propiedad para la que se solicita el objeto <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="84207-212">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="84207-213">Tipo de propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-213">The property type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="84207-214">Tipos de argumento, o <see langword="null" /> si la propiedad no tiene ningún argumento.</span><span class="sxs-lookup"><span data-stu-id="84207-214">The argument types, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <summary><span data-ttu-id="84207-215">Devuelve ayuda para las firmas de una propiedad, a partir del módulo dinámico que contiene la propiedad, el tipo de propiedad y los argumentos de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-215">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</span></span></summary>
        <returns><span data-ttu-id="84207-216">Objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> de una propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-216">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-217">Para crear una aplicación auxiliar de firma para una propiedad con los modificadores personalizados obligatorios u opcionales, utilice el <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="84207-217">To create a signature helper for a property with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-218">El valor de <paramref name="mod" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-218"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="84207-219">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-219">-or-</span></span> 
<span data-ttu-id="84207-220">Un elemento de <paramref name="parameterTypes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-220">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-221"><paramref name="mod" /> no es un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="84207-221"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="84207-222"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contiene la propiedad para la que se solicita el objeto <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="84207-222">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="84207-223">Tipo de propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-223">The property type.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="84207-224">Matriz de tipos que representa los modificadores personalizados obligatorios para el tipo de valor devuelto, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="84207-224">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="84207-225">Si el tipo de valor devuelto no tiene ningún modificador personalizado requerido, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-225">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="84207-226">Matriz de tipos que representa los modificadores personalizados opcionales para el tipo de valor devuelto, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="84207-226">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="84207-227">Si el tipo de valor devuelto no tiene ningún modificador personalizados opcional, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-227">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="84207-228">Tipos de los argumentos de la propiedad o <see langword="null" /> si la propiedad no tiene ningún argumento.</span><span class="sxs-lookup"><span data-stu-id="84207-228">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="84207-229">Matriz de matrices de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-229">An array of arrays of types.</span></span> <span data-ttu-id="84207-230">Cada matriz de tipos representa los modificadores personalizados obligatorios para el argumento correspondiente de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-230">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="84207-231">Si un argumento concreto no tiene modificadores personalizados obligatorios, especifique <see langword="null" /> en lugar de una matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-231">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="84207-232">Si la propiedad no tiene ningún argumento o si ninguno de los argumentos tiene modificadores personalizados obligatorios, especifique <see langword="null" /> en lugar de una matriz de matrices.</span><span class="sxs-lookup"><span data-stu-id="84207-232">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="84207-233">Matriz de matrices de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-233">An array of arrays of types.</span></span> <span data-ttu-id="84207-234">Cada matriz de tipos representa los modificadores personalizados opcionales para el argumento correspondiente de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-234">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="84207-235">Si un argumento concreto no tiene modificadores personalizados opcionales, especifique <see langword="null" /> en lugar de una matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-235">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="84207-236">Si la propiedad no tiene ningún argumento o si ninguno de los argumentos tiene modificadores personalizados opcionales, especifique <see langword="null" /> en lugar de una matriz de matrices.</span><span class="sxs-lookup"><span data-stu-id="84207-236">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="84207-237">Devuelve ayuda para las firmas de una propiedad, a partir del módulo dinámico que contiene la propiedad, el tipo de propiedad, los argumentos de la propiedad, y los modificadores personalizados para los argumentos y el tipo de valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="84207-237">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</span></span></summary>
        <returns><span data-ttu-id="84207-238">Objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> de una propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-238">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-239">Consulte la <xref:System.Runtime.CompilerServices> espacio de nombres para las clases que representan los modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="84207-239">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="84207-240">Si una propiedad no tiene modificadores personalizados, use la <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="84207-240">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-241">El valor de <paramref name="mod" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-241"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="84207-242">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-242">-or-</span></span> 
<span data-ttu-id="84207-243">Un elemento de <paramref name="parameterTypes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-243">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="84207-244">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-244">-or-</span></span> 
<span data-ttu-id="84207-245">Uno de los modificadores personalizados especificados es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-245">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="84207-246">(Sin embargo, se puede especificar <see langword="null" /> para la matriz de modificadores personalizados para cualquier argumento).</span><span class="sxs-lookup"><span data-stu-id="84207-246">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-247">La firma ya ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-247">The signature has already been finished.</span></span>  
  
<span data-ttu-id="84207-248">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-248">-or-</span></span> 
 <span data-ttu-id="84207-249"><paramref name="mod" /> no es un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="84207-249"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="84207-250">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-250">-or-</span></span> 
<span data-ttu-id="84207-251">Uno de los modificadores personalizados especificados es un tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="84207-251">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="84207-252">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-252">-or-</span></span> 
<span data-ttu-id="84207-253">Uno de los modificadores personalizados especificados es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="84207-253">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="84207-254">Es decir, la propiedad <see cref="P:System.Type.ContainsGenericParameters" /> es <see langword="true" /> para el modificador personalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-254">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="84207-255">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-255">-or-</span></span> 
<span data-ttu-id="84207-256">El tamaño de <paramref name="requiredParameterTypeCustomModifiers" /> o <paramref name="optionalParameterTypeCustomModifiers" /> no es igual al tamaño de <paramref name="parameterTypes" />.</span><span class="sxs-lookup"><span data-stu-id="84207-256">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, callingConvention, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="84207-257"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> que contiene la propiedad para la que se solicita el objeto <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span><span class="sxs-lookup"><span data-stu-id="84207-257">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="84207-258">Convención de llamada de los descriptores de acceso de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-258">The calling convention of the property accessors.</span></span></param>
        <param name="returnType"><span data-ttu-id="84207-259">Tipo de propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-259">The property type.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="84207-260">Matriz de tipos que representa los modificadores personalizados obligatorios para el tipo de valor devuelto, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="84207-260">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="84207-261">Si el tipo de valor devuelto no tiene ningún modificador personalizado requerido, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-261">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="84207-262">Matriz de tipos que representa los modificadores personalizados opcionales para el tipo de valor devuelto, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="84207-262">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="84207-263">Si el tipo de valor devuelto no tiene ningún modificador personalizados opcional, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-263">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="84207-264">Tipos de los argumentos de la propiedad o <see langword="null" /> si la propiedad no tiene ningún argumento.</span><span class="sxs-lookup"><span data-stu-id="84207-264">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="84207-265">Matriz de matrices de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-265">An array of arrays of types.</span></span> <span data-ttu-id="84207-266">Cada matriz de tipos representa los modificadores personalizados obligatorios para el argumento correspondiente de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-266">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="84207-267">Si un argumento concreto no tiene modificadores personalizados obligatorios, especifique <see langword="null" /> en lugar de una matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-267">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="84207-268">Si la propiedad no tiene ningún argumento o si ninguno de los argumentos tiene modificadores personalizados obligatorios, especifique <see langword="null" /> en lugar de una matriz de matrices.</span><span class="sxs-lookup"><span data-stu-id="84207-268">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="84207-269">Matriz de matrices de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-269">An array of arrays of types.</span></span> <span data-ttu-id="84207-270">Cada matriz de tipos representa los modificadores personalizados opcionales para el argumento correspondiente de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-270">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="84207-271">Si un argumento concreto no tiene modificadores personalizados opcionales, especifique <see langword="null" /> en lugar de una matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="84207-271">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="84207-272">Si la propiedad no tiene ningún argumento o si ninguno de los argumentos tiene modificadores personalizados opcionales, especifique <see langword="null" /> en lugar de una matriz de matrices.</span><span class="sxs-lookup"><span data-stu-id="84207-272">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="84207-273">Devuelve ayuda para las firmas de una propiedad, a partir del módulo dinámico que contiene la propiedad, la convención de llamada, el tipo de propiedad, los argumentos de la propiedad y los modificadores personalizados para los argumentos y el tipo de valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="84207-273">Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</span></span></summary>
        <returns><span data-ttu-id="84207-274">Objeto <see cref="T:System.Reflection.Emit.SignatureHelper" /> de una propiedad.</span><span class="sxs-lookup"><span data-stu-id="84207-274">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-275">Consulte la <xref:System.Runtime.CompilerServices> espacio de nombres para las clases que representan los modificadores personalizados.</span><span class="sxs-lookup"><span data-stu-id="84207-275">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="84207-276">Si una propiedad no tiene modificadores personalizados, use la <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="84207-276">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="84207-277">Esta sobrecarga del método se introdujo en la [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o una versión posterior.</span><span class="sxs-lookup"><span data-stu-id="84207-277">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="84207-278">El valor de <paramref name="mod" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-278"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="84207-279">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-279">-or-</span></span> 
<span data-ttu-id="84207-280">Un elemento de <paramref name="parameterTypes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-280">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="84207-281">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-281">-or-</span></span> 
<span data-ttu-id="84207-282">Uno de los modificadores personalizados especificados es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="84207-282">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="84207-283">(Sin embargo, se puede especificar <see langword="null" /> para la matriz de modificadores personalizados para cualquier argumento).</span><span class="sxs-lookup"><span data-stu-id="84207-283">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="84207-284">La firma ya ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-284">The signature has already been finished.</span></span>  
  
<span data-ttu-id="84207-285">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-285">-or-</span></span> 
 <span data-ttu-id="84207-286"><paramref name="mod" /> no es un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="84207-286"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="84207-287">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-287">-or-</span></span> 
<span data-ttu-id="84207-288">Uno de los modificadores personalizados especificados es un tipo de matriz.</span><span class="sxs-lookup"><span data-stu-id="84207-288">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="84207-289">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-289">-or-</span></span> 
<span data-ttu-id="84207-290">Uno de los modificadores personalizados especificados es un tipo genérico abierto.</span><span class="sxs-lookup"><span data-stu-id="84207-290">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="84207-291">Es decir, la propiedad <see cref="P:System.Type.ContainsGenericParameters" /> es <see langword="true" /> para el modificador personalizado.</span><span class="sxs-lookup"><span data-stu-id="84207-291">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="84207-292">O bien</span><span class="sxs-lookup"><span data-stu-id="84207-292">-or-</span></span> 
<span data-ttu-id="84207-293">El tamaño de <paramref name="requiredParameterTypeCustomModifiers" /> o <paramref name="optionalParameterTypeCustomModifiers" /> no es igual al tamaño de <paramref name="parameterTypes" />.</span><span class="sxs-lookup"><span data-stu-id="84207-293">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public byte[] GetSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSignature();" />
      <MemberSignature Language="F#" Value="member this.GetSignature : unit -&gt; byte[]" Usage="signatureHelper.GetSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84207-294">Agrega el símbolo (token) de finalización a la firma y marca la firma como terminada para que no se puedan agregar más símbolos.</span><span class="sxs-lookup"><span data-stu-id="84207-294">Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</span></span></summary>
        <returns><span data-ttu-id="84207-295">Devuelve una matriz de bytes formada por la firma completa.</span><span class="sxs-lookup"><span data-stu-id="84207-295">Returns a byte array made up of the full signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _SignatureHelper.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_SignatureHelper::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="84207-296">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="84207-296">Reserved for future use.</span></span> <span data-ttu-id="84207-297">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="84207-297">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="84207-298">Matriz que se pasa con los nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="84207-298">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="84207-299">Número de nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="84207-299">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="84207-300">Contexto de configuración regional en el que se van a interpretar los nombres.</span><span class="sxs-lookup"><span data-stu-id="84207-300">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="84207-301">Matriz asignada por el llamador que recibe los identificadores que corresponden a los nombres.</span><span class="sxs-lookup"><span data-stu-id="84207-301">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="84207-302">Asigna un conjunto de nombres a un conjunto correspondiente de identificadores de envío.</span><span class="sxs-lookup"><span data-stu-id="84207-302">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-303">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="84207-303">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="84207-304">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="84207-304">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="84207-305">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="84207-305">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _SignatureHelper.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="84207-306">Información de tipos que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="84207-306">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="84207-307">Identificador de la configuración regional de la información de tipo.</span><span class="sxs-lookup"><span data-stu-id="84207-307">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="84207-308">Recibe un puntero al objeto de información de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="84207-308">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="84207-309">Recupera la información de tipo de un objeto, que se puede usar después para obtener la información de tipo de una interfaz.</span><span class="sxs-lookup"><span data-stu-id="84207-309">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-310">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="84207-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="84207-311">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="84207-311">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="84207-312">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="84207-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _SignatureHelper.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="84207-313">Señala a una ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span><span class="sxs-lookup"><span data-stu-id="84207-313">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="84207-314">Recupera el número de interfaces de información de tipo que proporciona un objeto (0 ó 1).</span><span class="sxs-lookup"><span data-stu-id="84207-314">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-315">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="84207-315">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="84207-316">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="84207-316">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="84207-317">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="84207-317">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.Invoke">
      <MemberSignature Language="C#" Value="void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _SignatureHelper.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_SignatureHelper::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="84207-318">Identifica el miembro.</span><span class="sxs-lookup"><span data-stu-id="84207-318">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="84207-319">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="84207-319">Reserved for future use.</span></span> <span data-ttu-id="84207-320">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="84207-320">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="84207-321">Contexto de la configuración regional en que se interpretan los argumentos.</span><span class="sxs-lookup"><span data-stu-id="84207-321">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="84207-322">Marcas que describen el contexto de la llamada.</span><span class="sxs-lookup"><span data-stu-id="84207-322">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="84207-323">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DISPID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span><span class="sxs-lookup"><span data-stu-id="84207-323">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="84207-324">Puntero a la ubicación donde se va a almacenar el resultado.</span><span class="sxs-lookup"><span data-stu-id="84207-324">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="84207-325">Puntero a una estructura que contiene información de excepciones.</span><span class="sxs-lookup"><span data-stu-id="84207-325">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="84207-326">Índice del primer argumento que tiene un error.</span><span class="sxs-lookup"><span data-stu-id="84207-326">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="84207-327">Proporciona acceso a las propiedades y los métodos expuestos por un objeto.</span><span class="sxs-lookup"><span data-stu-id="84207-327">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84207-328">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="84207-328">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="84207-329">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="84207-329">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="84207-330">No se admite el acceso enlazado en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="84207-330">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="signatureHelper.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84207-331">Devuelve una cadena que representa los argumentos de firma.</span><span class="sxs-lookup"><span data-stu-id="84207-331">Returns a string representing the signature arguments.</span></span></summary>
        <returns><span data-ttu-id="84207-332">Devuelve una cadena que representa los argumentos de esta firma.</span><span class="sxs-lookup"><span data-stu-id="84207-332">Returns a string representing the arguments of this signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
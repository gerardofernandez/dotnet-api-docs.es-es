<Type Name="ModuleBuilder" FullName="System.Reflection.Emit.ModuleBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ab2c1ac1867d289654d7a7cf690946d4d211ffc" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52599440" /></Metadata><TypeSignature Language="C#" Value="public class ModuleBuilder : System.Reflection.Module, System.Runtime.InteropServices._ModuleBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit ModuleBuilder extends System.Reflection.Module implements class System.Runtime.InteropServices._ModuleBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.ModuleBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class ModuleBuilder&#xA;Inherits Module&#xA;Implements _ModuleBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModuleBuilder : System::Reflection::Module, System::Runtime::InteropServices::_ModuleBuilder" />
  <TypeSignature Language="F#" Value="type ModuleBuilder = class&#xA;    inherit Module&#xA;    interface _ModuleBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Module</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ModuleBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ModuleBuilder))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c0a46-101">Define y representa un módulo en un ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-101">Defines and represents a module in a dynamic assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-102">Para obtener una instancia de <xref:System.Reflection.Emit.ModuleBuilder>, utilice el <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-102">To get an instance of <xref:System.Reflection.Emit.ModuleBuilder>, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-103">Ejemplo de código siguiente muestra el uso de `ModuleBuilder` para crear un módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-103">The following code sample demonstrates the use of `ModuleBuilder` to create a dynamic module.</span></span> <span data-ttu-id="c0a46-104">Tenga en cuenta que el ModuleBuilder se crea mediante una llamada a <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> en <xref:System.Reflection.Emit.AssemblyBuilder>, en lugar de mediante un constructor.</span><span class="sxs-lookup"><span data-stu-id="c0a46-104">Note that the ModuleBuilder is created by calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> in <xref:System.Reflection.Emit.AssemblyBuilder>, rather than through a constructor.</span></span>  
  
 [!code-cpp[ModuleBuilder_Class#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_Class/CPP/modulebuilder.cpp#1)]
 [!code-csharp[ModuleBuilder_Class#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_Class/CS/modulebuilder.cs#1)]
 [!code-vb[ModuleBuilder_Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_Class/VB/modulebuilder.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModuleBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModuleBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assembly : System.Reflection.Assembly" Usage="System.Reflection.Emit.ModuleBuilder.Assembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0a46-105">Obtiene el ensamblado dinámico que definió esta instancia de <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-105">Gets the dynamic assembly that defined this instance of <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
        <value><span data-ttu-id="c0a46-106">Ensamblado dinámico que definió el módulo dinámico actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-106">The dynamic assembly that defined the current dynamic module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-107">El <xref:System.Reflection.Assembly> es el objeto que se devuelve el <xref:System.Reflection.Emit.AssemblyBuilder> que definió esta instancia de <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-107">The <xref:System.Reflection.Assembly> object that is returned is the <xref:System.Reflection.Emit.AssemblyBuilder> that defined this instance of <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateGlobalFunctions">
      <MemberSignature Language="C#" Value="public void CreateGlobalFunctions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateGlobalFunctions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateGlobalFunctions ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateGlobalFunctions();" />
      <MemberSignature Language="F#" Value="member this.CreateGlobalFunctions : unit -&gt; unit" Usage="moduleBuilder.CreateGlobalFunctions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a46-108">Finaliza las definiciones de funciones globales y las definiciones de datos globales para este módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-108">Completes the global function definitions and global data definitions for this dynamic module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-109">Este método debe llamarse cuando el usuario se realiza con la definición de todas las funciones globales dentro de este módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-109">This method should be called when the user is done with defining all the global functions within this dynamic module.</span></span> <span data-ttu-id="c0a46-110">Después de llamar a esta función, no se permiten más nuevas funciones globales o los nuevos datos globales.</span><span class="sxs-lookup"><span data-stu-id="c0a46-110">After calling this function, no more new global functions or new global data are allowed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-111">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-111">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-112">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-112">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-113">El ejemplo siguiente muestra el uso de `CreateGlobalFunctions` para crear un método estático global desde un <xref:System.Reflection.Emit.MethodBuilder> implementado con <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-113">The following sample illustrates the use of `CreateGlobalFunctions` to create a static global method from a <xref:System.Reflection.Emit.MethodBuilder> implemented with <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A>.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#2)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#2)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-114">Se ha llamado anteriormente a este método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-114">This method was called previously.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineDocument">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocumentWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolDocumentWriter ^ DefineDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="member this.DefineDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocumentWriter" Usage="moduleBuilder.DefineDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocumentWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="c0a46-115">Dirección URL del documento.</span><span class="sxs-lookup"><span data-stu-id="c0a46-115">The URL for the document.</span></span></param>
        <param name="language"><span data-ttu-id="c0a46-116">GUID que identifica el lenguaje del documento. </span><span class="sxs-lookup"><span data-stu-id="c0a46-116">The GUID that identifies the document language.</span></span> <span data-ttu-id="c0a46-117">Puede ser <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-117">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="c0a46-118">GUID que identifica el proveedor del lenguaje del documento. </span><span class="sxs-lookup"><span data-stu-id="c0a46-118">The GUID that identifies the document language vendor.</span></span> <span data-ttu-id="c0a46-119">Puede ser <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-119">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <param name="documentType"><span data-ttu-id="c0a46-120">GUID que identifica el tipo de documento. </span><span class="sxs-lookup"><span data-stu-id="c0a46-120">The GUID that identifies the document type.</span></span> <span data-ttu-id="c0a46-121">Puede ser <see cref="F:System.Guid.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-121">This can be <see cref="F:System.Guid.Empty" />.</span></span></param>
        <summary><span data-ttu-id="c0a46-122">Define un documento para el código fuente.</span><span class="sxs-lookup"><span data-stu-id="c0a46-122">Defines a document for source.</span></span></summary>
        <returns><span data-ttu-id="c0a46-123">Documento que se ha definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-123">The defined document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0a46-124">Las versiones anteriores de .NET Framework throw <xref:System.ArgumentException> en lugar de <xref:System.ArgumentNullException> cuando `url` es `null`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-124">Earlier versions of the .NET Framework throw <xref:System.ArgumentException> instead of <xref:System.ArgumentNullException> when `url` is `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-125">Ejemplo de código siguiente muestra el uso de `DefineDocument` para adjuntar un documento de símbolo externo (en este caso, un archivo sin formato de IL) a un módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-125">The following code sample illustrates the use of `DefineDocument` to attach an external symbol document (in this case, a raw IL file) to a dynamic module.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineDocument#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CPP/modulebuilder_definedocument.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineDocument#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineDocument/CS/modulebuilder_definedocument.cs#1)]
 [!code-vb[ModuleBuilder_DefineDocument#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineDocument/VB/modulebuilder_definedocument.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-126">El valor de <paramref name="url" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-126"><paramref name="url" /> is <see langword="null" />.</span></span> <span data-ttu-id="c0a46-127">Se trata de un cambio de las versiones anteriores de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="c0a46-127">This is a change from earlier versions of the .NET Framework.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-128">Se llama a este método en un módulo dinámico que no es un módulo de depuración.</span><span class="sxs-lookup"><span data-stu-id="c0a46-128">This method is called on a dynamic module that is not a debug module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineEnum">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.EnumBuilder DefineEnum (string name, System.Reflection.TypeAttributes visibility, Type underlyingType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.EnumBuilder DefineEnum(string name, valuetype System.Reflection.TypeAttributes visibility, class System.Type underlyingType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineEnum(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineEnum (name As String, visibility As TypeAttributes, underlyingType As Type) As EnumBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::EnumBuilder ^ DefineEnum(System::String ^ name, System::Reflection::TypeAttributes visibility, Type ^ underlyingType);" />
      <MemberSignature Language="F#" Value="member this.DefineEnum : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.EnumBuilder" Usage="moduleBuilder.DefineEnum (name, visibility, underlyingType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.EnumBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="visibility" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="underlyingType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-129">Ruta de acceso completa del tipo de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c0a46-129">The full path of the enumeration type.</span></span> <span data-ttu-id="c0a46-130"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-130"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="visibility"><span data-ttu-id="c0a46-131">Atributos de tipo de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c0a46-131">The type attributes for the enumeration.</span></span> <span data-ttu-id="c0a46-132">Los atributos son los bits definidos por <see cref="F:System.Reflection.TypeAttributes.VisibilityMask" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-132">The attributes are any bits defined by <see cref="F:System.Reflection.TypeAttributes.VisibilityMask" />.</span></span></param>
        <param name="underlyingType"><span data-ttu-id="c0a46-133">Tipo subyacente de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c0a46-133">The underlying type for the enumeration.</span></span> <span data-ttu-id="c0a46-134">Debe ser un tipo entero integrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-134">This must be a built-in integer type.</span></span></param>
        <summary><span data-ttu-id="c0a46-135">Define un tipo de enumeración que consiste en un tipo de valor con un único campo no estático denominado <paramref name="value__" /> del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-135">Defines an enumeration type that is a value type with a single non-static field called <paramref name="value__" /> of the specified type.</span></span></summary>
        <returns><span data-ttu-id="c0a46-136">Enumeración que se ha definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-136">The defined enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-137">La enumeración definida es una clase derivada de <xref:System.Enum>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-137">The defined enum is a derived class of <xref:System.Enum>.</span></span> <span data-ttu-id="c0a46-138">El `value__` campo tiene <xref:System.Reflection.FieldAttributes.Private> y <xref:System.Reflection.FieldAttributes.SpecialName> conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-138">The `value__` field has <xref:System.Reflection.FieldAttributes.Private> and <xref:System.Reflection.FieldAttributes.SpecialName> attributes set.</span></span>  
  
 <span data-ttu-id="c0a46-139">Para obtener más información acerca de los tipos enteros integrados que se pueden especificar como tipos subyacentes de enumeraciones, consulte [Class Library Overview](~/docs/standard/class-library-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c0a46-139">For more information about the built-in integer types that can be specified as the underlying types of enumerations, see [Class Library Overview](~/docs/standard/class-library-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-140">En las versiones 1.0 y 1.1 de .NET Framework, es necesario definir las enumeraciones utilizando <xref:System.Reflection.Emit.TypeBuilder> porque <xref:System.Reflection.Emit.EnumBuilder> emite las enumeraciones cuyos elementos son de tipo <xref:System.Int32> en lugar del tipo de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c0a46-140">In the .NET Framework versions 1.0 and 1.1, it is necessary to define enumerations using <xref:System.Reflection.Emit.TypeBuilder> because <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements are of type <xref:System.Int32> instead of the enumeration type.</span></span> <span data-ttu-id="c0a46-141">En .NET Framework versión 2.0, <xref:System.Reflection.Emit.EnumBuilder> emite las enumeraciones cuyos elementos tienen el tipo correcto.</span><span class="sxs-lookup"><span data-stu-id="c0a46-141">In the .NET Framework version 2.0, <xref:System.Reflection.Emit.EnumBuilder> emits enumerations whose elements have the correct type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-142">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-142">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-143">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-143">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-144">El ejemplo siguiente muestra el uso de `DefineEnum` para implementar una clase de enumeración en un módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-144">The following example illustrates the use of `DefineEnum` to implement an enumeration class in a dynamic module.</span></span> <span data-ttu-id="c0a46-145">En el ejemplo se define una enumeración denominada `Elevation` que tiene un tipo subyacente de <xref:System.Int32>y crea dos elementos: `Low`, con un valor de 0, y `High`, con un valor de 1.</span><span class="sxs-lookup"><span data-stu-id="c0a46-145">The example defines an enumeration named `Elevation` that has an underlying type of <xref:System.Int32>, and creates two elements: `Low`, with a value of 0, and `High`, with a value of 1.</span></span> <span data-ttu-id="c0a46-146">Una vez creado el tipo, el ensamblado se guarda con el nombre `TempAssembly.dll`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-146">After the type has been created, the assembly is saved with the name `TempAssembly.dll`.</span></span> <span data-ttu-id="c0a46-147">Puede usar el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para examinar el contenido de este ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-147">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the contents of this assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-148">Antes de la versión 2.0 de .NET Framework, este ejemplo de código no genera una enumeración correcta.</span><span class="sxs-lookup"><span data-stu-id="c0a46-148">Prior to the .NET Framework version 2.0, this code example does not produce a correct enumeration.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineEnum#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CPP/modulebuilder_defineenum.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineEnum#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineEnum/CS/modulebuilder_defineenum.cs#1)]
 [!code-vb[ModuleBuilder_DefineEnum#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineEnum/VB/modulebuilder_defineenum.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-149">Se proporcionan atributos que no son de visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c0a46-149">Attributes other than visibility attributes are provided.</span></span>  
  
<span data-ttu-id="c0a46-150">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-150">-or-</span></span> 
<span data-ttu-id="c0a46-151">Ya existe una enumeración con el nombre especificado en el ensamblado principal de este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-151">An enumeration with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="c0a46-152">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-152">-or-</span></span> 
<span data-ttu-id="c0a46-153">Los atributos de visibilidad no coinciden con el ámbito de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c0a46-153">The visibility attributes do not match the scope of the enumeration.</span></span> <span data-ttu-id="c0a46-154">Por ejemplo, se especifica <see cref="F:System.Reflection.TypeAttributes.NestedPublic" /> para <paramref name="visibility" /> pero la enumeración no es un tipo anidado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-154">For example, <see cref="F:System.Reflection.TypeAttributes.NestedPublic" /> is specified for <paramref name="visibility" />, but the enumeration is not a nested type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-155">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-155"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineGlobalMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-156">Define un método global.</span><span class="sxs-lookup"><span data-stu-id="c0a46-156">Defines a global method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-157">Nombre del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-157">The name of the method.</span></span> <span data-ttu-id="c0a46-158"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-158"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="c0a46-159">Los atributos del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-159">The attributes of the method.</span></span> <span data-ttu-id="c0a46-160"><paramref name="attributes" /> debe incluir <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-160"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="returnType"><span data-ttu-id="c0a46-161">Tipo devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-161">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c0a46-162">Tipos de los parámetros del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-162">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="c0a46-163">Define un método global con el nombre, los atributos, el tipo de valor devuelto y los tipos de parámetro especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-163">Defines a global method with the specified name, attributes, return type, and parameter types.</span></span></summary>
        <returns><span data-ttu-id="c0a46-164">Método global que se ha definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-164">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-165">El método global que define este método no es utilizable hasta que llame a <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-165">The global method that this method defines is not usable until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-166">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-166">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-167">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-167">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-168">El ejemplo siguiente muestra el uso de `DefineGlobalMethod` para crear un método independiente del tipo asociado a la actual <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-168">The following example illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span> <span data-ttu-id="c0a46-169">Después de compilar el método global, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> debe llamarse para completarla.</span><span class="sxs-lookup"><span data-stu-id="c0a46-169">After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-170">El método no es estático.</span><span class="sxs-lookup"><span data-stu-id="c0a46-170">The method is not static.</span></span> <span data-ttu-id="c0a46-171">Es decir, <paramref name="attributes" /> no incluye <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-171">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="c0a46-172">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-172">-or-</span></span> 
<span data-ttu-id="c0a46-173">La longitud de <paramref name="name" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="c0a46-173">The length of <paramref name="name" /> is zero</span></span> 
<span data-ttu-id="c0a46-174">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-174">-or-</span></span> 
<span data-ttu-id="c0a46-175">Un elemento de la matriz <see cref="T:System.Type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-175">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-176">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-176"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-177">Se llamó anteriormente a <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-177"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-178">Nombre del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-178">The name of the method.</span></span> <span data-ttu-id="c0a46-179"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-179"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attributes"><span data-ttu-id="c0a46-180">Los atributos del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-180">The attributes of the method.</span></span> <span data-ttu-id="c0a46-181"><paramref name="attributes" /> debe incluir <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-181"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="c0a46-182">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-182">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="c0a46-183">Tipo devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-183">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c0a46-184">Tipos de los parámetros del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-184">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="c0a46-185">Define un método global con el nombre, los atributos, la convención de llamada, el tipo de valor devuelto y los tipos de parámetro especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-185">Defines a global method with the specified name, attributes, calling convention, return type, and parameter types.</span></span></summary>
        <returns><span data-ttu-id="c0a46-186">Método global que se ha definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-186">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-187">No se puede usar el método global que define este método hasta que se llame a <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-187">You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-188">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-188">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-189">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-189">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-190">Ejemplo de código siguiente muestra el uso de `DefineGlobalMethod` para crear un método independiente del tipo asociado a la actual <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-190">The following code sample illustrates the use of `DefineGlobalMethod` to create a type-independent method tied to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span> <span data-ttu-id="c0a46-191">Después de compilar el método global, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> debe llamarse para completarla.</span><span class="sxs-lookup"><span data-stu-id="c0a46-191">After building the global method, <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> must be called in order to complete it.</span></span>  
  
 [!code-cpp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CPP/modulebuilder_createglobalfunctions.cpp#1)]
 [!code-csharp[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/CS/modulebuilder_createglobalfunctions.cs#1)]
 [!code-vb[ModuleBuilder_CreateGlobalFunctions#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_CreateGlobalFunctions/VB/modulebuilder_createglobalfunctions.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-192">El método no es estático.</span><span class="sxs-lookup"><span data-stu-id="c0a46-192">The method is not static.</span></span> <span data-ttu-id="c0a46-193">Es decir, <paramref name="attributes" /> no incluye <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-193">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="c0a46-194">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-194">-or-</span></span> 
<span data-ttu-id="c0a46-195">Un elemento de la matriz <see cref="T:System.Type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-195">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-196">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-196"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-197">Se llamó anteriormente a <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-197"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineGlobalMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefineGlobalMethod (string name, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefineGlobalMethod(string name, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod(System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineGlobalMethod (name As String, attributes As MethodAttributes, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As MethodBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefineGlobalMethod(System::String ^ name, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.DefineGlobalMethod : string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefineGlobalMethod (name, attributes, callingConvention, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-198">Nombre del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-198">The name of the method.</span></span> <span data-ttu-id="c0a46-199"><paramref name="name" /> no puede contener caracteres null insertados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-199"><paramref name="name" /> cannot contain embedded null characters.</span></span></param>
        <param name="attributes"><span data-ttu-id="c0a46-200">Los atributos del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-200">The attributes of the method.</span></span> <span data-ttu-id="c0a46-201"><paramref name="attributes" /> debe incluir <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-201"><paramref name="attributes" /> must include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="c0a46-202">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-202">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="c0a46-203">Tipo devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-203">The return type of the method.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="c0a46-204">Matriz de tipos que representa los modificadores personalizados obligatorios para el tipo de valor devuelto, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-204">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c0a46-205">Si el tipo de valor devuelto no tiene ningún modificador personalizado requerido, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-205">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="c0a46-206">Matriz de tipos que representa los modificadores personalizados opcionales para el tipo de valor devuelto, como <see cref="T:System.Runtime.CompilerServices.IsConst" /> o <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-206">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="c0a46-207">Si el tipo de valor devuelto no tiene ningún modificador personalizados opcional, especifique <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-207">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c0a46-208">Tipos de los parámetros del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-208">The types of the method's parameters.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="c0a46-209">Matriz de matrices de tipos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-209">An array of arrays of types.</span></span> <span data-ttu-id="c0a46-210">Cada matriz de tipos representa los modificadores personalizados obligatorios para el parámetro correspondiente del método global.</span><span class="sxs-lookup"><span data-stu-id="c0a46-210">Each array of types represents the required custom modifiers for the corresponding parameter of the global method.</span></span> <span data-ttu-id="c0a46-211">Si un argumento concreto no tiene modificadores personalizados obligatorios, especifique <see langword="null" /> en lugar de una matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-211">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="c0a46-212">Si el método global no tiene ningún argumento, o si ninguno de los argumentos tiene modificadores personalizados obligatorios, especifique <see langword="null" /> en lugar de una matriz de matrices.</span><span class="sxs-lookup"><span data-stu-id="c0a46-212">If the global method has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="c0a46-213">Matriz de matrices de tipos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-213">An array of arrays of types.</span></span> <span data-ttu-id="c0a46-214">Cada matriz de tipos representa los modificadores personalizados opcionales para el parámetro correspondiente.</span><span class="sxs-lookup"><span data-stu-id="c0a46-214">Each array of types represents the optional custom modifiers for the corresponding parameter.</span></span> <span data-ttu-id="c0a46-215">Si un argumento concreto no tiene modificadores personalizados opcionales, especifique <see langword="null" /> en lugar de una matriz de tipos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-215">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="c0a46-216">Si el método global no tiene ningún argumento, o si ninguno de los argumentos tiene modificadores personalizados opcionales, especifique <see langword="null" /> en lugar de una matriz de matrices.</span><span class="sxs-lookup"><span data-stu-id="c0a46-216">If the global method has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="c0a46-217">Define un método global con el nombre, los atributos, la convención de llamada, el tipo de valor devuelto, los modificadores personalizados del tipo de valor devuelto, los tipos de parámetro y los modificadores personalizados de los tipos de parámetro que se hayan especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-217">Defines a global method with the specified name, attributes, calling convention, return type, custom modifiers for the return type, parameter types, and custom modifiers for the parameter types.</span></span></summary>
        <returns><span data-ttu-id="c0a46-218">Método global que se ha definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-218">The defined global method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-219">Esta sobrecarga se proporciona para los diseñadores de compiladores administrados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-219">This overload is provided for designers of managed compilers.</span></span>  
  
 <span data-ttu-id="c0a46-220">No se puede usar el método global que define este método hasta que se llame a <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-220">You cannot use the global method that this method defines until you call <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-221">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-221">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-222">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-222">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-223">El método no es estático.</span><span class="sxs-lookup"><span data-stu-id="c0a46-223">The method is not static.</span></span> <span data-ttu-id="c0a46-224">Es decir, <paramref name="attributes" /> no incluye <see cref="F:System.Reflection.MethodAttributes.Static" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-224">That is, <paramref name="attributes" /> does not include <see cref="F:System.Reflection.MethodAttributes.Static" />.</span></span>  
  
<span data-ttu-id="c0a46-225">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-225">-or-</span></span> 
<span data-ttu-id="c0a46-226">Un elemento de la matriz <see cref="T:System.Type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-226">An element in the <see cref="T:System.Type" /> array is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-227">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-227"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-228">Se ha llamado previamente al método <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-228">The <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> method has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineInitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineInitializedData (string name, byte[] data, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineInitializedData(string name, unsigned int8[] data, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineInitializedData(System.String,System.Byte[],System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineInitializedData (name As String, data As Byte(), attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineInitializedData(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineInitializedData : string * byte[] * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="moduleBuilder.DefineInitializedData (name, data, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-229">El nombre que se usa para hacer referencia a los datos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-229">The name used to refer to the data.</span></span> <span data-ttu-id="c0a46-230"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-230"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="data"><span data-ttu-id="c0a46-231">Objeto binario grande (BLOB) de datos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-231">The binary large object (BLOB) of data.</span></span></param>
        <param name="attributes"><span data-ttu-id="c0a46-232">Los atributos para este campo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-232">The attributes for the field.</span></span> <span data-ttu-id="c0a46-233">El valor predeterminado es <see langword="Static" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-233">The default is <see langword="Static" />.</span></span></param>
        <summary><span data-ttu-id="c0a46-234">Define un campo de datos inicializado en la sección .sdata del archivo portable ejecutable (PE).</span><span class="sxs-lookup"><span data-stu-id="c0a46-234">Defines an initialized data field in the .sdata section of the portable executable (PE) file.</span></span></summary>
        <returns><span data-ttu-id="c0a46-235">Campo para hacer referencia a los datos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-235">A field to reference the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-236"><xref:System.Reflection.FieldAttributes.Static> se incluye automáticamente en `attributes`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-236"><xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.</span></span>  
  
 <span data-ttu-id="c0a46-237">Los datos definidos por este método no se crean hasta que el <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-237">The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-238">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-238">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-239">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-239">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-240">En el ejemplo siguiente se usa el <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> método para definir un campo de datos inicializado en el `.sdata` sección del archivo ejecutable portable (PE).</span><span class="sxs-lookup"><span data-stu-id="c0a46-240">The following example uses the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> method to define an initialized data field in the `.sdata` section of the portable executable (PE) file.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CPP/modulebuilder_defineinitializeddata.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/CS/modulebuilder_defineinitializeddata.cs#1)]
 [!code-vb[ModuleBuilder_DefineInitializedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineInitializedData/VB/modulebuilder_defineinitializeddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-241">La longitud de <paramref name="name" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="c0a46-241">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="c0a46-242">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-242">-or-</span></span> 
<span data-ttu-id="c0a46-243">El tamaño de <paramref name="data" /> es menor o igual que cero o mayor o igual que 0x3f0000.</span><span class="sxs-lookup"><span data-stu-id="c0a46-243">The size of <paramref name="data" /> is less than or equal to zero or greater than or equal to 0x3f0000.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-244">El valor de <paramref name="name" /> o <paramref name="data" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-244"><paramref name="name" /> or <paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-245">Se llamó anteriormente a <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-245"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineManifestResource">
      <MemberSignature Language="C#" Value="public void DefineManifestResource (string name, System.IO.Stream stream, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineManifestResource(string name, class System.IO.Stream stream, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineManifestResource(System::String ^ name, System::IO::Stream ^ stream, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineManifestResource : string * System.IO.Stream * System.Reflection.ResourceAttributes -&gt; unit" Usage="moduleBuilder.DefineManifestResource (name, stream, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-246">Nombre, que distingue entre mayúsculas y minúsculas, del recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-246">The case-sensitive name for the resource.</span></span></param>
        <param name="stream"><span data-ttu-id="c0a46-247">Secuencia que contiene los bytes del recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-247">A stream that contains the bytes for the resource.</span></span></param>
        <param name="attribute"><span data-ttu-id="c0a46-248">Valor de enumeración que especifica si el recurso es público o privado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-248">An enumeration value that specifies whether the resource is public or private.</span></span></param>
        <summary><span data-ttu-id="c0a46-249">Define un objeto binario grande (BLOB) que representa un recurso de manifiesto que se va a incrustar en el ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-249">Defines a binary large object (BLOB) that represents a manifest resource to be embedded in the dynamic assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-250">Los recursos que se registran en el manifiesto del ensamblado pueden ser recursos administrados o BLOBs de recurso de manifiesto, y cada uno de ellos puede incluirse en el ensamblado mediante la vinculación o mediante la inserción.</span><span class="sxs-lookup"><span data-stu-id="c0a46-250">Resources that are recorded in the assembly manifest can be managed resources or manifest resource BLOBs, and each of these can be included in the assembly either by linking or by embedding.</span></span> <span data-ttu-id="c0a46-251">Los cuatro escenarios se admiten para los ensamblados dinámicos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-251">All four scenarios are supported for dynamic assemblies.</span></span>  
  
-   <span data-ttu-id="c0a46-252">Este método permite insertar un recurso de manifiesto BLOB en un ensamblado dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-252">This method allows you to embed a manifest resource BLOB into a dynamic assembly.</span></span>  
  
-   <span data-ttu-id="c0a46-253">Para incrustar un recurso administrado en el módulo del manifiesto de un ensamblado dinámico o en un módulo de satélite, utilice el <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=nameWithType> método para obtener un escritor de recursos y el <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> método para agregar el recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-253">To embed a managed resource into the manifest module of a dynamic assembly or into a satellite module, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineResource%2A?displayProperty=nameWithType> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> method to add the resource.</span></span>  
  
-   <span data-ttu-id="c0a46-254">Para vincular un recurso administrado en un ensamblado dinámico, utilice el <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=nameWithType> método para obtener un escritor de recursos y el <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> método para agregar el recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-254">To link a managed resource into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A?displayProperty=nameWithType> method to get a resource writer, and use the <xref:System.Resources.ResourceWriter.AddResource%2A?displayProperty=nameWithType> method to add the linked resource.</span></span>  
  
-   <span data-ttu-id="c0a46-255">Para vincular un recurso del manifiesto BLOB en un ensamblado dinámico, utilice el <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=nameWithType> método para agregar el recurso vinculado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-255">To link a manifest resource BLOB into a dynamic assembly, use the <xref:System.Reflection.Emit.AssemblyBuilder.AddResourceFile%2A?displayProperty=nameWithType> method to add the linked resource.</span></span>  
  
 <span data-ttu-id="c0a46-256">Además, un único recurso de Win32 se puede adjuntar a un ensamblado mediante el uso de la <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> método o la <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-256">In addition, a single Win32 resource can be attached to an assembly by using the <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> method or the <xref:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c0a46-257">Este recurso no aparece en el manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-257">This resource does not appear in the assembly manifest.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-258">El ejemplo siguiente se genera y guarda un ensamblado dinámico denominado `EmittedManifestResourceAssembly.exe`, que contiene un recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-258">The following example generates and saves a dynamic assembly named `EmittedManifestResourceAssembly.exe`, which contains an embedded unmanaged resource.</span></span> <span data-ttu-id="c0a46-259">El ejemplo crea el ensamblado, que consta de un módulo y se abre una secuencia de memoria para que contenga el recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-259">The example creates the assembly, which consists of one module, and opens a memory stream to contain the unmanaged resource.</span></span> <span data-ttu-id="c0a46-260">El código, a continuación, llama a la <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> método para definir el recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-260">The code then calls the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method to define the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-261">Puede usar cualquier tipo de secuencia para el recurso; Por ejemplo, puede leer los datos binarios no administrados desde un archivo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-261">You can use any kind of stream for your resource; for example, you can read the unmanaged binary data from a file.</span></span>  
  
 <span data-ttu-id="c0a46-262">El ejemplo define un tipo en el módulo dinámico con un `Main` método y genera el MSIL del cuerpo del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-262">The example defines a type in the dynamic module with a `Main` method, and generates MSIL for the method body.</span></span> <span data-ttu-id="c0a46-263">Después del cuerpo para el `Main` método se ha generado y el tipo se ha creado, el ejemplo de código escribe cinco bytes en la secuencia asociada con el recurso del manifiesto.</span><span class="sxs-lookup"><span data-stu-id="c0a46-263">After the body for the `Main` method has been generated and the type has been created, the code example writes five bytes to the stream associated with the manifest resource.</span></span> <span data-ttu-id="c0a46-264">Cuando se guarda el ensamblado, se le anexa el recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-264">When the assembly is saved, the resource is appended to it.</span></span>  
  
 <span data-ttu-id="c0a46-265">Después de ejecutar el ejemplo, puede ejecutar el ensamblado emitido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-265">After running the example, you can run the emitted assembly.</span></span> <span data-ttu-id="c0a46-266">El código en el ensamblado emitido `Main` método lee el recurso del manifiesto incrustado e imprime los valores de byte en la consola.</span><span class="sxs-lookup"><span data-stu-id="c0a46-266">The code in the emitted assembly's `Main` method reads the embedded manifest resource and prints the byte values to the console.</span></span> <span data-ttu-id="c0a46-267">Puede usar el [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) para ver la información en el manifiesto del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-267">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to view the information in the assembly manifest.</span></span>  
  
 [!code-csharp[DefineManifestResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/DefineManifestResource/cs/source.cs#1)]
 [!code-vb[DefineManifestResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/DefineManifestResource/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-268">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-268"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c0a46-269">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-269">-or-</span></span> 
 <span data-ttu-id="c0a46-270">El valor de <paramref name="stream" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-270"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-271"><paramref name="name" /> es cadena de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="c0a46-271"><paramref name="name" /> is a zero-length string.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-272">El ensamblado dinámico que contiene el módulo actual es transitorio; es decir, no se especificó ningún nombre de archivo cuando se llamó a <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-272">The dynamic assembly that contains the current module is transient; that is, no file name was specified when <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" /> was called.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
        <altmember cref="M:System.Resources.ResourceWriter.AddResource(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
        <altmember cref="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DefinePInvokeMethod">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-273">Define un método <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-273">Defines a <see langword="PInvoke" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefinePInvokeMethod (name, dllName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dllName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-274">Nombre del método <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-274">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="c0a46-275"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-275"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="c0a46-276">Nombre de la DLL en la que está definido el método <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-276">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="attributes"><span data-ttu-id="c0a46-277">Los atributos del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-277">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="c0a46-278">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-278">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="c0a46-279">Tipo de valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-279">The method's return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c0a46-280">Tipos de los parámetros del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-280">The types of the method's parameters.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="c0a46-281">Convención de llamada nativa.</span><span class="sxs-lookup"><span data-stu-id="c0a46-281">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="c0a46-282">Juego de caracteres nativo del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-282">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="c0a46-283">Define un método <see langword="PInvoke" /> con el nombre especificado, el nombre de la DLL en la que se define el método, los atributos del método, la convención de llamada del método, el tipo de valor devuelto del método, los tipos de los parámetros del método y las marcas de <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-283">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span></span></summary>
        <returns><span data-ttu-id="c0a46-284">Método <see langword="PInvoke" /> definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-284">The defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-285">Algunos atributos de importación DLL (vea la descripción de System.Runtime.InteropServices.DllImportAttribute) no se puede especificar como argumentos para este método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-285">Some DLL import attributes (see the description of System.Runtime.InteropServices.DllImportAttribute) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="c0a46-286">Estos atributos se deben establecer mediante la emisión de un atributo personalizado para el método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-286">Such attributes should be set by emitting a custom attribute for the method.</span></span> <span data-ttu-id="c0a46-287">Por ejemplo, el atributo de la importación de la DLL `PreserveSig` se establece mediante la emisión de un atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-287">For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-288">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-288">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-289">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-289">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-290">El ejemplo siguiente muestra el uso de la `DefinePInvokeMethod` método para crear un <xref:System.Reflection.Emit.MethodBuilder> para un método externo no administrado, `MessageBoxA`, en la API de Win32.</span><span class="sxs-lookup"><span data-stu-id="c0a46-290">The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Win32 API.</span></span> <span data-ttu-id="c0a46-291">En el ejemplo se muestra un cuadro de mensaje con **vuelva a intentar** y **cancelar** botones y muestra el valor devuelto desde el cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="c0a46-291">The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0a46-292">Para obtener un valor devuelto distinto de cero, debe agregar <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> a las marcas de implementación del método después de crear el <xref:System.Reflection.Emit.MethodBuilder>, mediante el uso de la <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> y <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-292">To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]
 [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-293">El método no es estático o si el tipo contenedor es una interfaz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-293">The method is not static or if the containing type is an interface.</span></span>  
  
<span data-ttu-id="c0a46-294">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-294">-or-</span></span> 
<span data-ttu-id="c0a46-295">Método abstracto.</span><span class="sxs-lookup"><span data-stu-id="c0a46-295">The method is abstract.</span></span>  
  
<span data-ttu-id="c0a46-296">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-296">-or-</span></span> 
<span data-ttu-id="c0a46-297">El método se definió anteriormente.</span><span class="sxs-lookup"><span data-stu-id="c0a46-297">The method was previously defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-298">El valor de <paramref name="name" /> o <paramref name="dllName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-298"><paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-299">El tipo contenedor se ha creado previamente con <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-299">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefinePInvokeMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodBuilder DefinePInvokeMethod (string name, string dllName, string entryName, System.Reflection.MethodAttributes attributes, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, System.Runtime.InteropServices.CallingConvention nativeCallConv, System.Runtime.InteropServices.CharSet nativeCharSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.MethodBuilder DefinePInvokeMethod(string name, string dllName, string entryName, valuetype System.Reflection.MethodAttributes attributes, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes, valuetype System.Runtime.InteropServices.CallingConvention nativeCallConv, valuetype System.Runtime.InteropServices.CharSet nativeCharSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod(System.String,System.String,System.String,System.Reflection.MethodAttributes,System.Reflection.CallingConventions,System.Type,System.Type[],System.Runtime.InteropServices.CallingConvention,System.Runtime.InteropServices.CharSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodBuilder ^ DefinePInvokeMethod(System::String ^ name, System::String ^ dllName, System::String ^ entryName, System::Reflection::MethodAttributes attributes, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes, System::Runtime::InteropServices::CallingConvention nativeCallConv, System::Runtime::InteropServices::CharSet nativeCharSet);" />
      <MemberSignature Language="F#" Value="member this.DefinePInvokeMethod : string * string * string * System.Reflection.MethodAttributes * System.Reflection.CallingConventions * Type * Type[] * System.Runtime.InteropServices.CallingConvention * System.Runtime.InteropServices.CharSet -&gt; System.Reflection.Emit.MethodBuilder" Usage="moduleBuilder.DefinePInvokeMethod (name, dllName, entryName, attributes, callingConvention, returnType, parameterTypes, nativeCallConv, nativeCharSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dllName" Type="System.String" />
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-300">Nombre del método <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-300">The name of the <see langword="PInvoke" /> method.</span></span> <span data-ttu-id="c0a46-301"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-301"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="dllName"><span data-ttu-id="c0a46-302">Nombre de la DLL en la que está definido el método <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-302">The name of the DLL in which the <see langword="PInvoke" /> method is defined.</span></span></param>
        <param name="entryName"><span data-ttu-id="c0a46-303">El nombre del punto de entrada del archivo DLL.</span><span class="sxs-lookup"><span data-stu-id="c0a46-303">The name of the entry point in the DLL.</span></span></param>
        <param name="attributes"><span data-ttu-id="c0a46-304">Los atributos del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-304">The attributes of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="c0a46-305">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-305">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="c0a46-306">Tipo de valor devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-306">The method's return type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c0a46-307">Tipos de los parámetros del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-307">The types of the method's parameters.</span></span></param>
        <param name="nativeCallConv"><span data-ttu-id="c0a46-308">Convención de llamada nativa.</span><span class="sxs-lookup"><span data-stu-id="c0a46-308">The native calling convention.</span></span></param>
        <param name="nativeCharSet"><span data-ttu-id="c0a46-309">Juego de caracteres nativo del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-309">The method's native character set.</span></span></param>
        <summary><span data-ttu-id="c0a46-310">Define un método <see langword="PInvoke" /> con el nombre especificado, el nombre de la DLL en la que se define el método, los atributos del método, la convención de llamada del método, el tipo de valor devuelto del método, los tipos de los parámetros del método y las marcas de <see langword="PInvoke" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-310">Defines a <see langword="PInvoke" /> method with the specified name, the name of the DLL in which the method is defined, the attributes of the method, the calling convention of the method, the return type of the method, the types of the parameters of the method, and the <see langword="PInvoke" /> flags.</span></span></summary>
        <returns><span data-ttu-id="c0a46-311">Método <see langword="PInvoke" /> definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-311">The defined <see langword="PInvoke" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-312">Atributos de importación de algunas DLL (vea la descripción de <xref:System.Runtime.InteropServices.DllImportAttribute>) no se puede especificar como argumentos para este método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-312">Some DLL import attributes (see the description of <xref:System.Runtime.InteropServices.DllImportAttribute>) cannot be specified as arguments to this method.</span></span> <span data-ttu-id="c0a46-313">Estos atributos se deben establecer mediante la emisión de un atributo personalizado para el método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-313">Such attributes should be set by emitting a custom attribute for the method.</span></span> <span data-ttu-id="c0a46-314">Por ejemplo, el atributo de la importación de la DLL `PreserveSig` se establece mediante la emisión de un atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-314">For example, the DLL import attribute `PreserveSig` is set by emitting a custom attribute.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-315">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-315">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-316">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-316">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-317">El ejemplo siguiente muestra el uso de la `DefinePInvokeMethod` método para crear un <xref:System.Reflection.Emit.MethodBuilder> para un método externo no administrado, `MessageBoxA`, en la API de Win32.</span><span class="sxs-lookup"><span data-stu-id="c0a46-317">The following example illustrates the use of the `DefinePInvokeMethod` method to create a <xref:System.Reflection.Emit.MethodBuilder> for an external unmanaged method, `MessageBoxA`, in the Win32 API.</span></span> <span data-ttu-id="c0a46-318">En el ejemplo se muestra un cuadro de mensaje con **vuelva a intentar** y **cancelar** botones y muestra el valor devuelto desde el cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="c0a46-318">The example displays a message box with **Retry** and **Cancel** buttons, and displays the return value from the message box.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0a46-319">Para obtener un valor devuelto distinto de cero, debe agregar <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> a las marcas de implementación del método después de crear el <xref:System.Reflection.Emit.MethodBuilder>, mediante el uso de la <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> y <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-319">To get a non-zero return value, you must add <xref:System.Reflection.MethodImplAttributes.PreserveSig?displayProperty=nameWithType> to the method implementation flags after you create the <xref:System.Reflection.Emit.MethodBuilder>, by using the <xref:System.Reflection.Emit.MethodBuilder.GetMethodImplementationFlags%2A?displayProperty=nameWithType> and <xref:System.Reflection.Emit.MethodBuilder.SetImplementationFlags%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="c0a46-320">Este ejemplo utiliza una sobrecarga diferente de la <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> es el mismo método, pero la técnica.</span><span class="sxs-lookup"><span data-stu-id="c0a46-320">This example uses a different overload of the <xref:System.Reflection.Emit.ModuleBuilder.DefinePInvokeMethod%2A> method, but the technique is the same.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CPP/modulebuilder_definepinvokemethod1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/CS/modulebuilder_definepinvokemethod1.cs#1)]
 [!code-vb[ModuleBuilder_DefinePInvokeMethod1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefinePInvokeMethod1/VB/modulebuilder_definepinvokemethod1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-321">El método no es estático o si el tipo contenedor es una interfaz o si el método es abstracto o si el método se ha definido previamente.</span><span class="sxs-lookup"><span data-stu-id="c0a46-321">The method is not static or if the containing type is an interface or if the method is abstract of if the method was previously defined.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-322">El valor de <paramref name="name" /> o <paramref name="dllName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-322"><paramref name="name" /> or <paramref name="dllName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-323">El tipo contenedor se ha creado previamente con <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-323">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /></span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-324">Define un recurso incrustado administrado que se va a almacenar en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-324">Defines a managed embedded resource to be stored in this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string -&gt; System.Resources.IResourceWriter" Usage="moduleBuilder.DefineResource (name, description)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-325">Nombre del recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-325">The name of the resource.</span></span> <span data-ttu-id="c0a46-326"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-326"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="description"><span data-ttu-id="c0a46-327">Descripción del recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-327">The description of the resource.</span></span></param>
        <summary><span data-ttu-id="c0a46-328">Define el recurso incrustado administrado con nombre que se va a almacenar en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-328">Defines the named managed embedded resource to be stored in this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-329">Sistema de escritura de recursos para el recurso definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-329">A resource writer for the defined resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-330">El llamador no debe llamar a la `ResourceWriter.Generate()` y `ResourceWriter.Close()` métodos, porque estos métodos son invocados por `ModuleBuilder.Save` cuando se escribe el ensamblado dinámico en el disco.</span><span class="sxs-lookup"><span data-stu-id="c0a46-330">The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.</span></span>  
  
 <span data-ttu-id="c0a46-331">Utilice este método para incrustar un recurso administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-331">Use this method to embed a managed resource.</span></span> <span data-ttu-id="c0a46-332">Para incrustar un blob del recurso del manifiesto, utilice el <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-332">To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span> <span data-ttu-id="c0a46-333">Para obtener un resumen de incrustar y vincular los recursos administrados y los blobs de recurso del manifiesto, vea el <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-333">For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-334">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-334">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-335">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-335">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-336">El ejemplo siguiente muestra el uso de `DefineResource` para agregar un recurso externo a la actual <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-336">The following example illustrates the use of `DefineResource` to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineResource1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CPP/modulebuilder_defineresource1.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineResource1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource1/CS/modulebuilder_defineresource1.cs#1)]
 [!code-vb[ModuleBuilder_DefineResource1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource1/VB/modulebuilder_defineresource1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-337">La longitud de <paramref name="name" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="c0a46-337">Length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-338"><paramref name="name" /> es null.</span><span class="sxs-lookup"><span data-stu-id="c0a46-338"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-339">Este módulo es transitorio.</span><span class="sxs-lookup"><span data-stu-id="c0a46-339">This module is transient.</span></span>  
  
<span data-ttu-id="c0a46-340">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-340">-or-</span></span> 
<span data-ttu-id="c0a46-341">El ensamblado contenedor no tiene persistencia.</span><span class="sxs-lookup"><span data-stu-id="c0a46-341">The containing assembly is not persistable.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineResource(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::Reflection::ResourceAttributes attribute);" />
      <MemberSignature Language="F#" Value="member this.DefineResource : string * string * System.Reflection.ResourceAttributes -&gt; System.Resources.IResourceWriter" Usage="moduleBuilder.DefineResource (name, description, attribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-342">Nombre del recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-342">The name of the resource.</span></span> <span data-ttu-id="c0a46-343"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-343"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="description"><span data-ttu-id="c0a46-344">Descripción del recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-344">The description of the resource.</span></span></param>
        <param name="attribute"><span data-ttu-id="c0a46-345">Atributos de recursos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-345">The resource attributes.</span></span></param>
        <summary><span data-ttu-id="c0a46-346">Define el recurso incrustado administrado con nombre y los atributos especificados, que se va a almacenar en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-346">Defines the named managed embedded resource with the given attributes that is to be stored in this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-347">Sistema de escritura de recursos para el recurso definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-347">A resource writer for the defined resource.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-348">El llamador no debe llamar a la `ResourceWriter.Generate()` y `ResourceWriter.Close()` métodos, porque estos métodos son invocados por `ModuleBuilder.Save` cuando se escribe el ensamblado dinámico en el disco.</span><span class="sxs-lookup"><span data-stu-id="c0a46-348">The caller must not call the `ResourceWriter.Generate()` and `ResourceWriter.Close()` methods, because these methods are called by `ModuleBuilder.Save` when the dynamic assembly is written to disk.</span></span>  
  
 <span data-ttu-id="c0a46-349">Utilice este método para incrustar un recurso administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-349">Use this method to embed a managed resource.</span></span> <span data-ttu-id="c0a46-350">Para incrustar un blob del recurso del manifiesto, utilice el <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-350">To embed a manifest resource blob, use the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span> <span data-ttu-id="c0a46-351">Para obtener un resumen de incrustar y vincular los recursos administrados y los blobs de recurso del manifiesto, vea el <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-351">For a summary of embedding and linking managed resources and manifest resource blobs, see the <xref:System.Reflection.Emit.ModuleBuilder.DefineManifestResource%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-352">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-352">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-353">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-353">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-354">El ejemplo siguiente muestra el uso de DefineResource para agregar un recurso externo a la actual <xref:System.Reflection.Emit.ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-354">The following example illustrates the use of DefineResource to add an external resource to the current <xref:System.Reflection.Emit.ModuleBuilder>.</span></span>  
  
 [!code-cpp[ModuleBuilder_DefineResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CPP/modulebuilder_defineresource2.cpp#1)]
 [!code-csharp[ModuleBuilder_DefineResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_DefineResource2/CS/modulebuilder_defineresource2.cs#1)]
 [!code-vb[ModuleBuilder_DefineResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_DefineResource2/VB/modulebuilder_defineresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-355">La longitud de <paramref name="name" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="c0a46-355">Length of <paramref name="name" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-356"><paramref name="name" /> es null.</span><span class="sxs-lookup"><span data-stu-id="c0a46-356"><paramref name="name" /> is null.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-357">Este módulo es transitorio.</span><span class="sxs-lookup"><span data-stu-id="c0a46-357">This module is transient.</span></span>  
  
<span data-ttu-id="c0a46-358">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-358">-or-</span></span> 
<span data-ttu-id="c0a46-359">El ensamblado contenedor no tiene persistencia.</span><span class="sxs-lookup"><span data-stu-id="c0a46-359">The containing assembly is not persistable.</span></span></exception>
        <altmember cref="M:System.Reflection.Emit.ModuleBuilder.DefineManifestResource(System.String,System.IO.Stream,System.Reflection.ResourceAttributes)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-360">Construye un objeto <see langword="TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-360">Constructs a <see langword="TypeBuilder" />.</span></span> <span data-ttu-id="c0a46-361">Para definir un tipo de valor, se ha de definir un tipo que se derive de <see cref="T:System.ValueType" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-361">To define a value type, define a type that derives from <see cref="T:System.ValueType" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-362">Ruta de acceso completa del tipo, incluido el espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="c0a46-362">The full path of the type, including the namespace.</span></span> <span data-ttu-id="c0a46-363"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-363"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <summary><span data-ttu-id="c0a46-364">Crea un <see langword="TypeBuilder" /> para un tipo privado con el nombre especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-364">Constructs a <see langword="TypeBuilder" /> for a private type with the specified name in this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-365">Tipo privado con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-365">A private type with the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-366">Los nombres de tipo deben ser únicos dentro de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-366">Type names must be unique within an assembly.</span></span> <span data-ttu-id="c0a46-367">No puede tener dos tipos con el mismo nombre en dos módulos diferentes de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-367">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-368">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-369">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-370">En el ejemplo siguiente se crea un <xref:System.Reflection.Emit.TypeBuilder> en el módulo dinámico actual mediante `CreateType`, compila y se completa el tipo y guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-370">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-371">Existe un tipo con el nombre especificado en el ensamblado principal de este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-371">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="c0a46-372">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-372">-or-</span></span> 
<span data-ttu-id="c0a46-373">Los atributos de tipo anidado se han establecido en un tipo que no está anidado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-373">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-374">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-374"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-375">Ruta de acceso completa del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-375">The full path of the type.</span></span> <span data-ttu-id="c0a46-376"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-376"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="c0a46-377">Atributos del tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-377">The attributes of the defined type.</span></span></param>
        <summary><span data-ttu-id="c0a46-378">Construye un <see langword="TypeBuilder" /> a partir del nombre de tipo y los atributos de tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-378">Constructs a <see langword="TypeBuilder" /> given the type name and the type attributes.</span></span></summary>
        <returns><span data-ttu-id="c0a46-379">Objeto <see langword="TypeBuilder" /> creado con todos los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-379">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-380">Los nombres de tipo deben ser únicos dentro de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-380">Type names must be unique within an assembly.</span></span> <span data-ttu-id="c0a46-381">No puede tener dos tipos con el mismo nombre en dos módulos diferentes de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-381">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-382">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-382">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-383">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-383">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-384">En el ejemplo siguiente se crea un <xref:System.Reflection.Emit.TypeBuilder> en el módulo dinámico actual mediante `CreateType`, compila y se completa el tipo y guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-384">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-385">Existe un tipo con el nombre especificado en el ensamblado principal de este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-385">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="c0a46-386">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-386">-or-</span></span> 
<span data-ttu-id="c0a46-387">Los atributos de tipo anidado se han establecido en un tipo que no está anidado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-387">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-388">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-388"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-389">Ruta de acceso completa del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-389">The full path of the type.</span></span> <span data-ttu-id="c0a46-390"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-390"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="c0a46-391">Atributo que se va a asociar al tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-391">The attribute to be associated with the type.</span></span></param>
        <param name="parent"><span data-ttu-id="c0a46-392">Tipo que extiende el tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-392">The type that the defined type extends.</span></span></param>
        <summary><span data-ttu-id="c0a46-393">Construye un <see langword="TypeBuilder" /> a partir del nombre de tipo, sus atributos y el tipo que extiende el tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-393">Constructs a <see langword="TypeBuilder" /> given type name, its attributes, and the type that the defined type extends.</span></span></summary>
        <returns><span data-ttu-id="c0a46-394">Objeto <see langword="TypeBuilder" /> creado con todos los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-394">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-395">Los nombres de tipo deben ser únicos dentro de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-395">Type names must be unique within an assembly.</span></span> <span data-ttu-id="c0a46-396">No puede tener dos tipos con el mismo nombre en dos módulos diferentes de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-396">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-397">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-397">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-398">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-398">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-399">En el ejemplo siguiente se crea un <xref:System.Reflection.Emit.TypeBuilder> en el módulo dinámico actual mediante `CreateType`, compila y se completa el tipo y guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-399">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-400">Existe un tipo con el nombre especificado en el ensamblado principal de este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-400">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="c0a46-401">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-401">-or-</span></span> 
<span data-ttu-id="c0a46-402">Los atributos de tipo anidado se han establecido en un tipo que no está anidado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-402">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-403">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-403"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, int typesize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, int32 typesize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, typesize As Integer) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, int typesize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, typesize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="typesize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-404">Ruta de acceso completa del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-404">The full path of the type.</span></span> <span data-ttu-id="c0a46-405"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-405"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="c0a46-406">Atributos del tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-406">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="c0a46-407">Tipo que extiende el tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-407">The type that the defined type extends.</span></span></param>
        <param name="typesize"><span data-ttu-id="c0a46-408">El tamaño total del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-408">The total size of the type.</span></span></param>
        <summary><span data-ttu-id="c0a46-409">Construye un <see langword="TypeBuilder" /> a partir del nombre de tipo, los atributos, el tipo que extiende el tipo definido y el tamaño total del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-409">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the total size of the type.</span></span></summary>
        <returns><span data-ttu-id="c0a46-410">Un objeto <see langword="TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-410">A <see langword="TypeBuilder" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-411">Los nombres de tipo deben ser únicos dentro de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-411">Type names must be unique within an assembly.</span></span> <span data-ttu-id="c0a46-412">Se prohíbe tener dos tipos con el mismo nombre en dos módulos diferentes de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-412">It is forbidden to have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-413">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-413">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-414">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-414">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-415">En el ejemplo siguiente se crea un <xref:System.Reflection.Emit.TypeBuilder> en el módulo dinámico actual mediante `CreateType`, compila y se completa el tipo y guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-415">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-416">Existe un tipo con el nombre especificado en el ensamblado principal de este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-416">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="c0a46-417">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-417">-or-</span></span> 
<span data-ttu-id="c0a46-418">Los atributos de tipo anidado se han establecido en un tipo que no está anidado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-418">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-419">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-419"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packsize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packsize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, packsize As PackingSize) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packsize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, packsize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packsize" Type="System.Reflection.Emit.PackingSize" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-420">Ruta de acceso completa del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-420">The full path of the type.</span></span> <span data-ttu-id="c0a46-421"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-421"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="c0a46-422">Atributos del tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-422">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="c0a46-423">Tipo que extiende el tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-423">The type that the defined type extends.</span></span></param>
        <param name="packsize"><span data-ttu-id="c0a46-424">Tamaño de empaquetado del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-424">The packing size of the type.</span></span></param>
        <summary><span data-ttu-id="c0a46-425">Construye un <see langword="TypeBuilder" /> a partir del nombre de tipo, los atributos, el tipo que extiende el tipo definido y el tamaño de empaquetado del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-425">Constructs a <see langword="TypeBuilder" /> given the type name, the attributes, the type that the defined type extends, and the packing size of the type.</span></span></summary>
        <returns><span data-ttu-id="c0a46-426">Un objeto <see langword="TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-426">A <see langword="TypeBuilder" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-427">Los nombres de tipo deben ser únicos dentro de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-427">Type names must be unique within an assembly.</span></span> <span data-ttu-id="c0a46-428">No puede tener dos tipos con el mismo nombre en dos módulos diferentes de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-428">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-429">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-429">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-430">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-430">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-431">En el ejemplo siguiente se crea un <xref:System.Reflection.Emit.TypeBuilder> en el módulo dinámico actual mediante `CreateType`, compila y se completa el tipo y guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-431">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-432">Existe un tipo con el nombre especificado en el ensamblado principal de este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-432">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="c0a46-433">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-433">-or-</span></span> 
<span data-ttu-id="c0a46-434">Los atributos de tipo anidado se han establecido en un tipo que no está anidado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-434">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-435">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-435"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, Type[] interfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, class System.Type[] interfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineType (name As String, attr As TypeAttributes, parent As Type, interfaces As Type()) As TypeBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, cli::array &lt;Type ^&gt; ^ interfaces);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * Type[] -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, interfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="interfaces" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-436">Ruta de acceso completa del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-436">The full path of the type.</span></span> <span data-ttu-id="c0a46-437"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-437"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="c0a46-438">Atributos que se van a asociar al tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-438">The attributes to be associated with the type.</span></span></param>
        <param name="parent"><span data-ttu-id="c0a46-439">Tipo que extiende el tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-439">The type that the defined type extends.</span></span></param>
        <param name="interfaces"><span data-ttu-id="c0a46-440">Lista de interfaces que implementa el tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-440">The list of interfaces that the type implements.</span></span></param>
        <summary><span data-ttu-id="c0a46-441">Construye un <see langword="TypeBuilder" /> a partir del nombre de tipo, los atributos, el tipo que extiende el tipo definido y las interfaces que implementa el tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-441">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, and the interfaces that the defined type implements.</span></span></summary>
        <returns><span data-ttu-id="c0a46-442">Objeto <see langword="TypeBuilder" /> creado con todos los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-442">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-443">Los nombres de tipo deben ser únicos dentro de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-443">Type names must be unique within an assembly.</span></span> <span data-ttu-id="c0a46-444">No puede tener dos tipos con el mismo nombre en dos módulos diferentes de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-444">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-445">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-445">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-446">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-446">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-447">En el ejemplo siguiente se crea un <xref:System.Reflection.Emit.TypeBuilder> en el módulo dinámico actual mediante `CreateType`, compila y se completa el tipo y guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-447">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-448">Existe un tipo con el nombre especificado en el ensamblado principal de este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-448">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="c0a46-449">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-449">-or-</span></span> 
<span data-ttu-id="c0a46-450">Los atributos de tipo anidado se han establecido en un tipo que no está anidado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-450">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-451">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-451"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineType">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeBuilder DefineType (string name, System.Reflection.TypeAttributes attr, Type parent, System.Reflection.Emit.PackingSize packingSize, int typesize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.TypeBuilder DefineType(string name, valuetype System.Reflection.TypeAttributes attr, class System.Type parent, valuetype System.Reflection.Emit.PackingSize packingSize, int32 typesize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineType(System.String,System.Reflection.TypeAttributes,System.Type,System.Reflection.Emit.PackingSize,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeBuilder ^ DefineType(System::String ^ name, System::Reflection::TypeAttributes attr, Type ^ parent, System::Reflection::Emit::PackingSize packingSize, int typesize);" />
      <MemberSignature Language="F#" Value="member this.DefineType : string * System.Reflection.TypeAttributes * Type * System.Reflection.Emit.PackingSize * int -&gt; System.Reflection.Emit.TypeBuilder" Usage="moduleBuilder.DefineType (name, attr, parent, packingSize, typesize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        <Parameter Name="parent" Type="System.Type" />
        <Parameter Name="packingSize" Type="System.Reflection.Emit.PackingSize" />
        <Parameter Name="typesize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-452">Ruta de acceso completa del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-452">The full path of the type.</span></span> <span data-ttu-id="c0a46-453"><paramref name="name" /> no puede contener valores null incrustados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-453"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="attr"><span data-ttu-id="c0a46-454">Atributos del tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-454">The attributes of the defined type.</span></span></param>
        <param name="parent"><span data-ttu-id="c0a46-455">Tipo que extiende el tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-455">The type that the defined type extends.</span></span></param>
        <param name="packingSize"><span data-ttu-id="c0a46-456">Tamaño de empaquetado del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-456">The packing size of the type.</span></span></param>
        <param name="typesize"><span data-ttu-id="c0a46-457">El tamaño total del tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-457">The total size of the type.</span></span></param>
        <summary><span data-ttu-id="c0a46-458">Construye un <see langword="TypeBuilder" /> a partir del nombre de tipo, los atributos, el tipo que extiende el tipo definido, el tamaño de empaquetado del tipo definido y el tamaño total del tipo definido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-458">Constructs a <see langword="TypeBuilder" /> given the type name, attributes, the type that the defined type extends, the packing size of the defined type, and the total size of the defined type.</span></span></summary>
        <returns><span data-ttu-id="c0a46-459">Objeto <see langword="TypeBuilder" /> creado con todos los atributos solicitados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-459">A <see langword="TypeBuilder" /> created with all of the requested attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-460">Los nombres de tipo deben ser únicos dentro de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-460">Type names must be unique within an assembly.</span></span> <span data-ttu-id="c0a46-461">No puede tener dos tipos con el mismo nombre en dos módulos diferentes de un ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-461">You cannot have two types with the same name in two different modules of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-462">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-462">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-463">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-463">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-464">En el ejemplo siguiente se crea un <xref:System.Reflection.Emit.TypeBuilder> en el módulo dinámico actual mediante `CreateType`, compila y se completa el tipo y guarda el ensamblado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-464">The following example creates a <xref:System.Reflection.Emit.TypeBuilder> in the current dynamic module using `CreateType`, builds and completes the type, and saves the assembly.</span></span>  
  
 [!code-cpp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/CS/source.cs#1)]
 [!code-vb[Classic ModuleBuilder.DefineType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ModuleBuilder.DefineType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-465">Existe un tipo con el nombre especificado en el ensamblado principal de este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-465">A type with the given name exists in the parent assembly of this module.</span></span>  
  
<span data-ttu-id="c0a46-466">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-466">-or-</span></span> 
<span data-ttu-id="c0a46-467">Los atributos de tipo anidado se han establecido en un tipo que no está anidado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-467">Nested type attributes are set on a type that is not nested.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-468">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-468"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUninitializedData">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldBuilder DefineUninitializedData (string name, int size, System.Reflection.FieldAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.FieldBuilder DefineUninitializedData(string name, int32 size, valuetype System.Reflection.FieldAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData(System.String,System.Int32,System.Reflection.FieldAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineUninitializedData (name As String, size As Integer, attributes As FieldAttributes) As FieldBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldBuilder ^ DefineUninitializedData(System::String ^ name, int size, System::Reflection::FieldAttributes attributes);" />
      <MemberSignature Language="F#" Value="member this.DefineUninitializedData : string * int * System.Reflection.FieldAttributes -&gt; System.Reflection.Emit.FieldBuilder" Usage="moduleBuilder.DefineUninitializedData (name, size, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-469">El nombre que se usa para hacer referencia a los datos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-469">The name used to refer to the data.</span></span> <span data-ttu-id="c0a46-470"><paramref name="name" /> no puede contener valores null insertados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-470"><paramref name="name" /> cannot contain embedded nulls.</span></span></param>
        <param name="size"><span data-ttu-id="c0a46-471">Tamaño del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-471">The size of the data field.</span></span></param>
        <param name="attributes"><span data-ttu-id="c0a46-472">Los atributos para este campo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-472">The attributes for the field.</span></span></param>
        <summary><span data-ttu-id="c0a46-473">Define un campo de datos sin inicializar en la sección .sdata del archivo portable ejecutable (PE).</span><span class="sxs-lookup"><span data-stu-id="c0a46-473">Defines an uninitialized data field in the .sdata section of the portable executable (PE) file.</span></span></summary>
        <returns><span data-ttu-id="c0a46-474">Campo para hacer referencia a los datos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-474">A field to reference the data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-475"><xref:System.Reflection.FieldAttributes.Static> se incluye automáticamente en `attributes`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-475"><xref:System.Reflection.FieldAttributes.Static> is automatically included in `attributes`.</span></span>  
  
 <span data-ttu-id="c0a46-476">Los datos definidos por este método no se crean hasta que el <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-476">The data defined by this method is not created until the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-477">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-477">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-478">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-478">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-479">La longitud de <paramref name="name" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="c0a46-479">The length of <paramref name="name" /> is zero.</span></span>  
  
<span data-ttu-id="c0a46-480">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-480">-or-</span></span> 
 <span data-ttu-id="c0a46-481"><paramref name="size" /> es menor o igual que cero, o mayor o igual que 0x003f0000.</span><span class="sxs-lookup"><span data-stu-id="c0a46-481"><paramref name="size" /> is less than or equal to zero, or greater than or equal to 0x003f0000.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-482">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-482"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-483">Se llamó anteriormente a <see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-483"><see cref="M:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions" /> has been previously called.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-484">Define un recurso no administrado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-484">Defines an unmanaged resource in this module.</span></span> <span data-ttu-id="c0a46-485">El objeto binario grande (BLOB) debe tener el formato adecuado para un recurso de Win32.</span><span class="sxs-lookup"><span data-stu-id="c0a46-485">The binary large object (BLOB) must have the right format for a Win32 resource.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : byte[] -&gt; unit" Usage="moduleBuilder.DefineUnmanagedResource resource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="c0a46-486">BLOB opaco que representa un recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-486">An opaque BLOB that represents an unmanaged resource</span></span></param>
        <summary><span data-ttu-id="c0a46-487">Define un recurso incrustado no administrado a partir de un BLOB (objeto binario grande) opaco de bytes.</span><span class="sxs-lookup"><span data-stu-id="c0a46-487">Defines an unmanaged embedded resource given an opaque binary large object (BLOB) of bytes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-488">Un ensamblado puede asociarse con un único recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-488">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="c0a46-489">Esto significa que la llamada a `DefineVersionInfoResource` o `DefineUnmanagedResource` después uno de los métodos se llamó anteriormente produce <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-489">This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>.</span></span> <span data-ttu-id="c0a46-490">Varios recursos no administrados deben combinarse con una herramienta como la utilidad ResMerge de Microsoft (no proporcionada con common language runtime).</span><span class="sxs-lookup"><span data-stu-id="c0a46-490">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-491">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-491">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-492">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-492">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-493">Ya se ha definido un recurso no administrado en el ensamblado del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-493">An unmanaged resource has already been defined in the module's assembly.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-494">El valor de <paramref name="resource" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-494"><paramref name="resource" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberSignature Language="F#" Value="member this.DefineUnmanagedResource : string -&gt; unit" Usage="moduleBuilder.DefineUnmanagedResource resourceFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceFileName"><span data-ttu-id="c0a46-495">Nombre del archivo de recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-495">The name of the unmanaged resource file.</span></span></param>
        <summary><span data-ttu-id="c0a46-496">Define un recurso no administrado a partir del nombre del archivo de recursos Win32.</span><span class="sxs-lookup"><span data-stu-id="c0a46-496">Defines an unmanaged resource given the name of Win32 resource file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-497">Un ensamblado puede asociarse con un único recurso no administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-497">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="c0a46-498">Esto significa que la llamada a `DefineVersionInfoResource` o `DefineUnmanagedResource` después uno de los métodos se llamó anteriormente produce <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-498">This means that calling `DefineVersionInfoResource` or `DefineUnmanagedResource` after either one of the methods was called previously throws <xref:System.ArgumentException>.</span></span> <span data-ttu-id="c0a46-499">Varios recursos no administrados deben combinarse con una herramienta como la utilidad ResMerge de Microsoft (no proporcionada con common language runtime).</span><span class="sxs-lookup"><span data-stu-id="c0a46-499">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-500">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-500">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-501">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-501">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-502">Ya se ha definido un recurso no administrado en el ensamblado del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-502">An unmanaged resource has already been defined in the module's assembly.</span></span>  
  
<span data-ttu-id="c0a46-503">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-503">-or-</span></span> 
 <span data-ttu-id="c0a46-504"><paramref name="resourceFileName" /> es la cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="c0a46-504"><paramref name="resourceFileName" /> is the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-505">El valor de <paramref name="resourceFileName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-505"><paramref name="resourceFileName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="c0a46-506">No se ha encontrado <paramref name="resourceFileName" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-506"><paramref name="resourceFileName" /> is not found.</span></span>  
  
<span data-ttu-id="c0a46-507">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-507">-or-</span></span> 
 <span data-ttu-id="c0a46-508"><paramref name="resourceFileName" /> es un directorio.</span><span class="sxs-lookup"><span data-stu-id="c0a46-508"><paramref name="resourceFileName" /> is a directory.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="moduleBuilder.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c0a46-509">Objeto que se va a comparar con esta instancia o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-509">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="c0a46-510">Devuelve un valor que indica si esta instancia es igual que el objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-510">Returns a value that indicates whether this instance is equal to the specified object.</span></span></summary>
        <returns><span data-ttu-id="c0a46-511">Es <see langword="true" /> si <paramref name="obj" /> es igual al tipo y valor de esta instancia; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-511"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullyQualifiedName">
      <MemberSignature Language="C#" Value="public override string FullyQualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullyQualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.FullyQualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullyQualifiedName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullyQualifiedName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullyQualifiedName : string" Usage="System.Reflection.Emit.ModuleBuilder.FullyQualifiedName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0a46-512">Obtiene un valor de tipo <see langword="String" /> que representa el nombre completo de este módulo y su ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-512">Gets a <see langword="String" /> representing the fully qualified name and path to this module.</span></span></summary>
        <value><span data-ttu-id="c0a46-513">Nombre completo del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-513">The fully qualified module name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-514">Para obtener el nombre sin la ruta de acceso, use `Name`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-514">To get the name without the path, use `Name`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-515">El caso de un nombre de módulo es depende de la plataforma.</span><span class="sxs-lookup"><span data-stu-id="c0a46-515">The case of a module name is platform dependent.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="c0a46-516">Accede a información en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-516">Accesses information in the path.</span></span> <span data-ttu-id="c0a46-517">Enumeración asociada: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-517">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetArrayMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetArrayMethod (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MethodInfo GetArrayMethod(class System.Type arrayClass, string methodName, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayMethod (arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetArrayMethod(Type ^ arrayClass, System::String ^ methodName, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetArrayMethod : Type * string * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.MethodInfo" Usage="moduleBuilder.GetArrayMethod (arrayClass, methodName, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="arrayClass"><span data-ttu-id="c0a46-518">Clase de matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-518">An array class.</span></span></param>
        <param name="methodName"><span data-ttu-id="c0a46-519">Nombre de un método en la clase de matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-519">The name of a method on the array class.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="c0a46-520">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-520">The method's calling convention.</span></span></param>
        <param name="returnType"><span data-ttu-id="c0a46-521">Tipo devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-521">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c0a46-522">Tipos de los parámetros del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-522">The types of the method's parameters.</span></span></param>
        <summary><span data-ttu-id="c0a46-523">Devuelve el método con nombre en una clase de matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-523">Returns the named method on an array class.</span></span></summary>
        <returns><span data-ttu-id="c0a46-524">Método con nombre en una clase de matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-524">The named method on an array class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-525">`GetArrayMethod` resulta útil cuando tiene una matriz de un tipo cuya definición no se completó y desea tener acceso a los métodos definidos en <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-525">`GetArrayMethod` is useful when you have an array of a type whose definition has not been completed and you want to access methods defined on <xref:System.Array>.</span></span> <span data-ttu-id="c0a46-526">Por ejemplo, podría definir un tipo y desea definir un método que toma una matriz del tipo como parámetro.</span><span class="sxs-lookup"><span data-stu-id="c0a46-526">For example, you might define a type and want to define a method that takes an array of the type as a parameter.</span></span> <span data-ttu-id="c0a46-527">Para obtener acceso a los elementos de la matriz, deberá llamar a métodos de la <xref:System.Array> clase.</span><span class="sxs-lookup"><span data-stu-id="c0a46-527">In order to access the elements of the array, you will need to call methods of the <xref:System.Array> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-528">En el ejemplo siguiente se muestra cómo usar <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> para obtener el <xref:System.Reflection.MethodInfo> correspondiente a un método que devuelve un valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-528">The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.MethodInfo> corresponding to a method that returns an array value.</span></span>  
  
 [!code-cpp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#1)]
 [!code-csharp[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#1)]
 [!code-vb[ModuleBuilder_GetArrayMethod#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-529"><paramref name="arrayClass" /> no es una matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-529"><paramref name="arrayClass" /> is not an array.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-530">El valor de <paramref name="arrayClass" /> o <paramref name="methodName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-530"><paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetArrayMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetArrayMethodToken (Type arrayClass, string methodName, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetArrayMethodToken(class System.Type arrayClass, string methodName, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArrayMethodToken (arrayClass As Type, methodName As String, callingConvention As CallingConventions, returnType As Type, parameterTypes As Type()) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetArrayMethodToken(Type ^ arrayClass, System::String ^ methodName, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetArrayMethodToken : Type * string * System.Reflection.CallingConventions * Type * Type[] -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetArrayMethodToken (arrayClass, methodName, callingConvention, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayClass" Type="System.Type" />
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="arrayClass"><span data-ttu-id="c0a46-531">Objeto de la matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-531">The object for the array.</span></span></param>
        <param name="methodName"><span data-ttu-id="c0a46-532">Cadena que contiene el nombre del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-532">A string that contains the name of the method.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="c0a46-533">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-533">The calling convention for the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="c0a46-534">Tipo devuelto del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-534">The return type of the method.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="c0a46-535">Tipos de los parámetros del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-535">The types of the parameters of the method.</span></span></param>
        <summary><span data-ttu-id="c0a46-536">Devuelve el símbolo (token) del método con nombre en una clase de matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-536">Returns the token for the named method on an array class.</span></span></summary>
        <returns><span data-ttu-id="c0a46-537">Símbolo (token) del método con nombre en una clase de matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-537">The token for the named method on an array class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-538">Este método es similar a <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, excepto en que devuelve el token del método de matriz en lugar del propio método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-538">This method is similar to <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A>, except that it returns the token of the array method instead of the method itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0a46-539">En el ejemplo siguiente se muestra cómo usar <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> para obtener el <xref:System.Reflection.Emit.MethodToken> correspondiente a un método que devuelve un valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-539">The following example demonstrates how to use <xref:System.Reflection.Emit.ModuleBuilder.GetArrayMethod%2A> to obtain the <xref:System.Reflection.Emit.MethodToken> corresponding to a method that returns an array value.</span></span>  
  
 [!code-cpp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/cpp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CPP/modulebuilder_getarraymethod.cpp#2)]
 [!code-csharp[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/csharp/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/CS/modulebuilder_getarraymethod.cs#2)]
 [!code-vb[ModuleBuilder_GetArrayMethod#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ModuleBuilder_GetArrayMethod/VB/modulebuilder_getarraymethod.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-540"><paramref name="arrayClass" /> no es una matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-540"><paramref name="arrayClass" /> is not an array.</span></span>  
  
<span data-ttu-id="c0a46-541">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-541">-or-</span></span> 
<span data-ttu-id="c0a46-542">La longitud de <paramref name="methodName" /> es cero.</span><span class="sxs-lookup"><span data-stu-id="c0a46-542">The length of <paramref name="methodName" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-543">El valor de <paramref name="arrayClass" /> o <paramref name="methodName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-543"><paramref name="arrayClass" /> or <paramref name="methodName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetConstructorToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-544">Devuelve el símbolo (token) utilizado para identificar el constructor especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-544">Returns the token used to identify the specified constructor within this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetConstructorToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo con);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetConstructorToken(class System.Reflection.ConstructorInfo con) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorToken (con As ConstructorInfo) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetConstructorToken(System::Reflection::ConstructorInfo ^ con);" />
      <MemberSignature Language="F#" Value="member this.GetConstructorToken : System.Reflection.ConstructorInfo -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetConstructorToken con" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="c0a46-545">Constructor cuyo token se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="c0a46-545">The constructor to get a token for.</span></span></param>
        <summary><span data-ttu-id="c0a46-546">Devuelve el símbolo (token) utilizado para identificar el constructor especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-546">Returns the token used to identify the specified constructor within this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-547">Token que se utiliza para identificar el constructor especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-547">The token used to identify the specified constructor within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-548">El valor de <paramref name="con" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-548"><paramref name="con" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetConstructorToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetConstructorToken (System.Reflection.ConstructorInfo constructor, System.Collections.Generic.IEnumerable&lt;Type&gt; optionalParameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetConstructorToken(class System.Reflection.ConstructorInfo constructor, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; optionalParameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetConstructorToken(System.Reflection.ConstructorInfo,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConstructorToken (constructor As ConstructorInfo, optionalParameterTypes As IEnumerable(Of Type)) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetConstructorToken(System::Reflection::ConstructorInfo ^ constructor, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ optionalParameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetConstructorToken : System.Reflection.ConstructorInfo * seq&lt;Type&gt; -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetConstructorToken (constructor, optionalParameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="constructor"><span data-ttu-id="c0a46-549">Constructor cuyo token se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="c0a46-549">The constructor to get a token for.</span></span></param>
        <param name="optionalParameterTypes"><span data-ttu-id="c0a46-550">Colección de los tipos de los parámetros opcionales para el constructor.</span><span class="sxs-lookup"><span data-stu-id="c0a46-550">A collection of the types of the optional parameters to the constructor.</span></span></param>
        <summary><span data-ttu-id="c0a46-551">Devuelve el token utilizado para identificar el constructor que tiene los atributos y los tipos de parámetros especificados dentro del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-551">Returns the token used to identify the constructor that has the specified attributes and parameter types within this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-552">Token que se utiliza para identificar el constructor especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-552">The token used to identify the specified constructor within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-553">El valor de <paramref name="constructor" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-553"><paramref name="constructor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-554">Devuelve los atributos personalizados que se aplican a la clase <see cref="T:System.Reflection.Emit.ModuleBuilder" />actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-554">Returns the custom attributes that are applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="moduleBuilder.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="c0a46-555">Este argumento se omite para objetos de este tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-555">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="c0a46-556">Devuelve todos los atributos personalizados que se aplicaron al <see cref="T:System.Reflection.Emit.ModuleBuilder" /> actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-556">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="c0a46-557">Matriz que contiene los atributos personalizados; la matriz está vacía si no hay ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-557">An array that contains the custom attributes; the array is empty if there are no attributes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="moduleBuilder.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="c0a46-558">Tipo base del que derivan los atributos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-558">The base type from which attributes derive.</span></span></param>
        <param name="inherit"><span data-ttu-id="c0a46-559">Este argumento se omite para objetos de este tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-559">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="c0a46-560">Devuelve todos los atributos personalizados que se aplicaron al <see cref="T:System.Reflection.Emit.ModuleBuilder" /> actual y que derivan de un tipo de atributo especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-560">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that derive from a specified attribute type.</span></span></summary>
        <returns><span data-ttu-id="c0a46-561">Matriz que contiene los atributos personalizados que se derivan, en cualquier nivel, de <paramref name="attributeType" />; la matriz está vacía si no hay ningún atributo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-561">An array that contains the custom attributes that are derived, at any level, from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-562">El valor de <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-562"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-563"><paramref name="attributeType" /> no es un objeto <see cref="T:System.Type" /> proporcionado por el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c0a46-563"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span></span> <span data-ttu-id="c0a46-564">Por ejemplo, <paramref name="attributeType" /> es un objeto <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-564">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="moduleBuilder.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a46-565">Devuelve información sobre los atributos que se aplicaron al <see cref="T:System.Reflection.Emit.ModuleBuilder" />, actual, expresados como objetos <see cref="T:System.Reflection.CustomAttributeData" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-565">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span></span></summary>
        <returns><span data-ttu-id="c0a46-566">Lista genérica de objetos <see cref="T:System.Reflection.CustomAttributeData" /> que representan datos sobre los atributos que se aplicaron al módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-566">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-567">Utilice este método para examinar los atributos personalizados del código en el contexto de solo reflexión, en casos donde se definen los atributos personalizados a sí mismos en el código que se carga en el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="c0a46-567">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="c0a46-568">Métodos como <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> y <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> no se puede usar en casos como éste, porque crean instancias de los atributos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-568">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="c0a46-569">No se puede ejecutar código en el contexto de solo reflexión.</span><span class="sxs-lookup"><span data-stu-id="c0a46-569">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="c0a46-570">Para obtener más información y como código, vea el <xref:System.Reflection.CustomAttributeData> clase.</span><span class="sxs-lookup"><span data-stu-id="c0a46-570">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo GetField(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetField(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetField (name As String, bindingAttr As BindingFlags) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ GetField(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo" Usage="moduleBuilder.GetField (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-571">Nombre de campo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-571">The field name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="c0a46-572">Combinación de las marcas de bits <see langword="BindingFlags" /> utilizadas para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="c0a46-572">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="c0a46-573">Devuelve un campo de nivel de módulo, definido en la región .sdata del archivo portable ejecutable (PE), que tiene el nombre y los atributos de enlace especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-573">Returns a module-level field, defined in the .sdata region of the portable executable (PE) file, that has the specified name and binding attributes.</span></span></summary>
        <returns><span data-ttu-id="c0a46-574">Campo que tiene el nombre y los atributos de enlace especificados, o <see langword="null" /> si el campo no existe.</span><span class="sxs-lookup"><span data-stu-id="c0a46-574">A field that has the specified name and binding attributes, or <see langword="null" /> if the field does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-575">Al emitir ensamblados dinámicos, se definen los campos en la región .sdata del archivo portable ejecutable (PE) mediante el <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> o <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-575">When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0a46-576">Campos de nivel de módulo no se puede recuperar hasta después de que el <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> se ha llamado al método del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-576">Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-577">El parámetro <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-577">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFields">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo[] GetFields(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetFields(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ GetFields(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="override this.GetFields : System.Reflection.BindingFlags -&gt; System.Reflection.FieldInfo[]" Usage="moduleBuilder.GetFields bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="c0a46-578">Combinación de las marcas de bits <see langword="BindingFlags" /> utilizadas para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="c0a46-578">A combination of the <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="c0a46-579">Devuelve todos los campos definidos en la región .sdata del archivo portable ejecutable (PE) que coinciden con las marcas de enlace especificadas.</span><span class="sxs-lookup"><span data-stu-id="c0a46-579">Returns all fields defined in the .sdata region of the portable executable (PE) file that match the specified binding flags.</span></span></summary>
        <returns><span data-ttu-id="c0a46-580">Matriz de campos que coinciden con las marcas especificadas; la matriz está vacía si no existe ninguno de esos campos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-580">An array of fields that match the specified flags; the array is empty if no such fields exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-581">Al emitir ensamblados dinámicos, se definen los campos en la región .sdata del archivo portable ejecutable (PE) mediante el <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> o <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-581">When you emit dynamic assemblies, fields in the .sdata region of the portable executable (PE) file are defined by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineInitializedData%2A> or <xref:System.Reflection.Emit.ModuleBuilder.DefineUninitializedData%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0a46-582">Campos de nivel de módulo no se puede recuperar hasta después de que el <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> se ha llamado al método del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-582">Module-level fields cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-583">El parámetro <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-583">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.FieldToken GetFieldToken (System.Reflection.FieldInfo field);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.FieldToken GetFieldToken(class System.Reflection.FieldInfo field) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetFieldToken(System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFieldToken (field As FieldInfo) As FieldToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::FieldToken GetFieldToken(System::Reflection::FieldInfo ^ field);" />
      <MemberSignature Language="F#" Value="member this.GetFieldToken : System.Reflection.FieldInfo -&gt; System.Reflection.Emit.FieldToken" Usage="moduleBuilder.GetFieldToken field" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.FieldToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="field" Type="System.Reflection.FieldInfo" />
      </Parameters>
      <Docs>
        <param name="field"><span data-ttu-id="c0a46-584">Campo cuyo token se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="c0a46-584">The field to get a token for.</span></span></param>
        <summary><span data-ttu-id="c0a46-585">Devuelve el símbolo (token) utilizado para identificar el campo especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-585">Returns the token used to identify the specified field within this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-586">Token que se utiliza para identificar el campo especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-586">The token used to identify the specified field within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-587">El valor de <paramref name="field" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-587"><paramref name="field" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="moduleBuilder.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a46-588">Devuelve el código hash de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="c0a46-588">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c0a46-589">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-589">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl(string name, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, valuetype System.Reflection.CallingConventions callConvention, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl(System::String ^ name, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, System::Reflection::CallingConventions callConvention, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="override this.GetMethodImpl : string * System.Reflection.BindingFlags * System.Reflection.Binder * System.Reflection.CallingConventions * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodInfo" Usage="moduleBuilder.GetMethodImpl (name, bindingAttr, binder, callConvention, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-590">El nombre del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-590">The method name.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="c0a46-591">Combinación de marcas de bits <see langword="BindingFlags" /> utilizadas para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="c0a46-591">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <param name="binder"><span data-ttu-id="c0a46-592">Un objeto que implementa <see langword="Binder" /> y que contiene propiedades relacionadas con este método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-592">An object that implements <see langword="Binder" />, containing properties related to this method.</span></span></param>
        <param name="callConvention"><span data-ttu-id="c0a46-593">Convención de llamada del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-593">The calling convention for the method.</span></span></param>
        <param name="types"><span data-ttu-id="c0a46-594">Tipos de parámetro del método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-594">The parameter types of the method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="c0a46-595">Matriz de modificadores de parámetro que se usa para que el enlace funcione con firmas de parámetro en las que se han modificado los tipos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-595">An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="c0a46-596">Devuelve el método de nivel de módulo que coincide con los criterios especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-596">Returns the module-level method that matches the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="c0a46-597">Método que se define en el nivel de módulo y coincide con los criterios especificados; o <see langword="null" /> si este tipo de método no existe.</span><span class="sxs-lookup"><span data-stu-id="c0a46-597">A method that is defined at the module level, and matches the specified criteria; or <see langword="null" /> if such a method does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-598">Este método proporciona la implementación de todas las sobrecargas de los heredados <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-598">This method provides the implementation for all overloads of the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="c0a46-599">Utilice el heredado <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> método para obtener los métodos que se han declarado en el nivel de módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-599">Use the inherited <xref:System.Reflection.Module.GetMethod%2A?displayProperty=nameWithType> method to get methods that have been declared at the module level.</span></span> <span data-ttu-id="c0a46-600">Métodos de nivel de módulo se definen en el código emitido mediante el <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-600">Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0a46-601">Métodos de nivel de módulo no se puede recuperar hasta después de que el <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> se ha llamado al método del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-601">Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-602">El valor de <paramref name="name" /> es <see langword="null" />, el valor de <paramref name="types" /> es <see langword="null" />, o bien, un elemento de <paramref name="types" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-602"><paramref name="name" /> is <see langword="null" />, <paramref name="types" /> is <see langword="null" />, or an element of <paramref name="types" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Reflection.CallingConventions" />
        <altmember cref="T:System.Reflection.ParameterModifier" />
      </Docs>
    </Member>
    <Member MemberName="GetMethods">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo[] GetMethods(valuetype System.Reflection.BindingFlags bindingFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethods(System.Reflection.BindingFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetMethods(System::Reflection::BindingFlags bindingFlags);" />
      <MemberSignature Language="F#" Value="override this.GetMethods : System.Reflection.BindingFlags -&gt; System.Reflection.MethodInfo[]" Usage="moduleBuilder.GetMethods bindingFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingFlags"><span data-ttu-id="c0a46-603">Combinación de marcas de bits <see langword="BindingFlags" /> utilizadas para controlar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="c0a46-603">A combination of <see langword="BindingFlags" /> bit flags used to control the search.</span></span></param>
        <summary><span data-ttu-id="c0a46-604">Devuelve todos los métodos definidos en el nivel de módulo para la clase <see cref="T:System.Reflection.Emit.ModuleBuilder" /> actual y que coinciden con las marcas de enlace especificadas.</span><span class="sxs-lookup"><span data-stu-id="c0a46-604">Returns all the methods that have been defined at the module level for the current <see cref="T:System.Reflection.Emit.ModuleBuilder" />, and that match the specified binding flags.</span></span></summary>
        <returns><span data-ttu-id="c0a46-605">Matriz que contiene todos los métodos de nivel de módulo que coinciden con <paramref name="bindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-605">An array that contains all the module-level methods that match <paramref name="bindingFlags" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-606">Métodos de nivel de módulo se definen en el código emitido mediante el <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-606">Module-level methods are defined in emitted code by using the <xref:System.Reflection.Emit.ModuleBuilder.DefineGlobalMethod%2A> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c0a46-607">Métodos de nivel de módulo no se puede recuperar hasta después de que el <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> se ha llamado al método del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-607">Module-level methods cannot be retrieved until after the <xref:System.Reflection.Emit.ModuleBuilder.CreateGlobalFunctions%2A> method has been called for the module.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-608">Devuelve el símbolo (token) utilizado para identificar el método especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-608">Returns the token used to identify the specified method within this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetMethodToken(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodToken (method As MethodInfo) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetMethodToken(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="member this.GetMethodToken : System.Reflection.MethodInfo -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetMethodToken method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c0a46-609">Método cuyo token se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="c0a46-609">The method to get a token for.</span></span></param>
        <summary><span data-ttu-id="c0a46-610">Devuelve el símbolo (token) utilizado para identificar el método especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-610">Returns the token used to identify the specified method within this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-611">Token que se utiliza para identificar el método especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-611">The token used to identify the specified method within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-612">El valor de <paramref name="method" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-612"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-613">El tipo declarativo correspondiente al método no está en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-613">The declaring type for the method is not in this module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetMethodToken (System.Reflection.MethodInfo method, System.Collections.Generic.IEnumerable&lt;Type&gt; optionalParameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetMethodToken(class System.Reflection.MethodInfo method, class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; optionalParameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo,System.Collections.Generic.IEnumerable{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMethodToken (method As MethodInfo, optionalParameterTypes As IEnumerable(Of Type)) As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetMethodToken(System::Reflection::MethodInfo ^ method, System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ optionalParameterTypes);" />
      <MemberSignature Language="F#" Value="member this.GetMethodToken : System.Reflection.MethodInfo * seq&lt;Type&gt; -&gt; System.Reflection.Emit.MethodToken" Usage="moduleBuilder.GetMethodToken (method, optionalParameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c0a46-614">Método cuyo token se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="c0a46-614">The method to get a token for.</span></span></param>
        <param name="optionalParameterTypes"><span data-ttu-id="c0a46-615">Colección de los tipos de los parámetros opcionales para el método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-615">A collection of the types of the optional parameters to the method.</span></span></param>
        <summary><span data-ttu-id="c0a46-616">Devuelve el token utilizado para identificar el método que tiene los atributos y los tipos de parámetros especificados dentro del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-616">Returns the token used to identify the method that has the specified attributes and parameter types within this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-617">Token que se utiliza para identificar el método especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-617">The token used to identify the specified method within this module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-618">El valor de <paramref name="method" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-618"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-619">El tipo declarativo correspondiente al método no está en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-619">The declaring type for the method is not in this module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPEKind">
      <MemberSignature Language="C#" Value="public override void GetPEKind (out System.Reflection.PortableExecutableKinds peKind, out System.Reflection.ImageFileMachine machine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetPEKind([out] valuetype System.Reflection.PortableExecutableKinds&amp; peKind, [out] valuetype System.Reflection.ImageFileMachine&amp; machine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetPEKind (ByRef peKind As PortableExecutableKinds, ByRef machine As ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetPEKind([Runtime::InteropServices::Out] System::Reflection::PortableExecutableKinds % peKind, [Runtime::InteropServices::Out] System::Reflection::ImageFileMachine % machine);" />
      <MemberSignature Language="F#" Value="override this.GetPEKind :  *  -&gt; unit" Usage="moduleBuilder.GetPEKind (peKind, machine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peKind" Type="System.Reflection.PortableExecutableKinds" RefType="out" />
        <Parameter Name="machine" Type="System.Reflection.ImageFileMachine" RefType="out" />
      </Parameters>
      <Docs>
        <param name="peKind"><span data-ttu-id="c0a46-620">El resultado de este método contiene una combinación de los valores <see cref="T:System.Reflection.PortableExecutableKinds" /> que indican la naturaleza del código en el módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-620">When this method returns, a combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values indicating the nature of the code in the module.</span></span></param>
        <param name="machine"><span data-ttu-id="c0a46-621">El resultado de este método contiene uno de los valores de <see cref="T:System.Reflection.ImageFileMachine" /> que indican la plataforma destino del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-621">When this method returns, one of the <see cref="T:System.Reflection.ImageFileMachine" /> values indicating the platform targeted by the module.</span></span></param>
        <summary><span data-ttu-id="c0a46-622">Obtiene un par de valores que indican la naturaleza del código en un módulo y la plataforma de destino del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-622">Gets a pair of values indicating the nature of the code in a module and the platform targeted by the module.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-623">Para los módulos dinámicos, `peKind` siempre <xref:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage?displayProperty=nameWithType> y `machine` siempre es 0 (cero).</span><span class="sxs-lookup"><span data-stu-id="c0a46-623">For dynamic modules, `peKind` is always <xref:System.Reflection.PortableExecutableKinds.NotAPortableExecutableImage?displayProperty=nameWithType> and `machine` is always 0 (zero).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSignatureToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-624">Define un símbolo (token) de signatura.</span><span class="sxs-lookup"><span data-stu-id="c0a46-624">Defines a signature token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSignatureToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.SignatureToken GetSignatureToken (System.Reflection.Emit.SignatureHelper sigHelper);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.SignatureToken GetSignatureToken(class System.Reflection.Emit.SignatureHelper sigHelper) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Reflection.Emit.SignatureHelper)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignatureToken (sigHelper As SignatureHelper) As SignatureToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::SignatureToken GetSignatureToken(System::Reflection::Emit::SignatureHelper ^ sigHelper);" />
      <MemberSignature Language="F#" Value="member this.GetSignatureToken : System.Reflection.Emit.SignatureHelper -&gt; System.Reflection.Emit.SignatureToken" Usage="moduleBuilder.GetSignatureToken sigHelper" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sigHelper" Type="System.Reflection.Emit.SignatureHelper" />
      </Parameters>
      <Docs>
        <param name="sigHelper"><span data-ttu-id="c0a46-625">Firma.</span><span class="sxs-lookup"><span data-stu-id="c0a46-625">The signature.</span></span></param>
        <summary><span data-ttu-id="c0a46-626">Define un token para la signatura definida por la clase <see cref="T:System.Reflection.Emit.SignatureHelper" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="c0a46-626">Defines a token for the signature that is defined by the specified <see cref="T:System.Reflection.Emit.SignatureHelper" />.</span></span></summary>
        <returns><span data-ttu-id="c0a46-627">Token de la signatura definida.</span><span class="sxs-lookup"><span data-stu-id="c0a46-627">A token for the defined signature.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-628">Este método define un token de metadatos para la firma descrita por `sigHelper`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-628">This method defines a metadata token for the signature described by `sigHelper`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-629">El valor de <paramref name="sigHelper" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-629"><paramref name="sigHelper" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignatureToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.SignatureToken GetSignatureToken (byte[] sigBytes, int sigLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.SignatureToken GetSignatureToken(unsigned int8[] sigBytes, int32 sigLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignatureToken(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignatureToken (sigBytes As Byte(), sigLength As Integer) As SignatureToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::SignatureToken GetSignatureToken(cli::array &lt;System::Byte&gt; ^ sigBytes, int sigLength);" />
      <MemberSignature Language="F#" Value="member this.GetSignatureToken : byte[] * int -&gt; System.Reflection.Emit.SignatureToken" Usage="moduleBuilder.GetSignatureToken (sigBytes, sigLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sigBytes" Type="System.Byte[]" />
        <Parameter Name="sigLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sigBytes"><span data-ttu-id="c0a46-630">BLOB (objeto binario grande) de la firma.</span><span class="sxs-lookup"><span data-stu-id="c0a46-630">The signature binary large object (BLOB).</span></span></param>
        <param name="sigLength"><span data-ttu-id="c0a46-631">Longitud del BLOB de la firma.</span><span class="sxs-lookup"><span data-stu-id="c0a46-631">The length of the signature BLOB.</span></span></param>
        <summary><span data-ttu-id="c0a46-632">Define un token para la signatura con la matriz de caracteres y la longitud especificadas.</span><span class="sxs-lookup"><span data-stu-id="c0a46-632">Defines a token for the signature that has the specified character array and signature length.</span></span></summary>
        <returns><span data-ttu-id="c0a46-633">Token de la signatura especificada.</span><span class="sxs-lookup"><span data-stu-id="c0a46-633">A token for the specified signature.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-634">El valor de <paramref name="sigBytes" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-634"><paramref name="sigBytes" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignerCertificate">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSignerCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSignerCertificate () As X509Certificate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::X509Certificates::X509Certificate ^ GetSignerCertificate();" />
      <MemberSignature Language="F#" Value="override this.GetSignerCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate" Usage="moduleBuilder.GetSignerCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a46-635">Devuelve un objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> que corresponde al certificado incluido en la firma Authenticode del ensamblado al que pertenece este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-635">Returns an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> object corresponding to the certificate included in the Authenticode signature of the assembly which this module belongs to.</span></span> <span data-ttu-id="c0a46-636">Si el ensamblado no se ha firmado mediante Authenticode, se devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-636">If the assembly has not been Authenticode signed, <see langword="null" /> is returned.</span></span></summary>
        <returns><span data-ttu-id="c0a46-637">Certificado, o <see langword="null" /> si el ensamblado al que este módulo pertenece no se ha firmado mediante Authenticode.</span><span class="sxs-lookup"><span data-stu-id="c0a46-637">A certificate, or <see langword="null" /> if the assembly to which this module belongs has not been Authenticode signed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringConstant">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.StringToken GetStringConstant (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.StringToken GetStringConstant(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetStringConstant(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStringConstant (str As String) As StringToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::StringToken GetStringConstant(System::String ^ str);" />
      <MemberSignature Language="F#" Value="member this.GetStringConstant : string -&gt; System.Reflection.Emit.StringToken" Usage="moduleBuilder.GetStringConstant str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.StringToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="c0a46-638">Cadena que se va a agregar al grupo de constantes del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-638">The string to add to the module's constant pool.</span></span></param>
        <summary><span data-ttu-id="c0a46-639">Devuelve el token de la cadena especificada en el grupo de constantes del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-639">Returns the token of the given string in the module's constant pool.</span></span></summary>
        <returns><span data-ttu-id="c0a46-640">Token de la cadena en el grupo de constantes.</span><span class="sxs-lookup"><span data-stu-id="c0a46-640">The token of the string in the constant pool.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-641">Si `str` ya está definido, se devolverá el token existente.</span><span class="sxs-lookup"><span data-stu-id="c0a46-641">If `str` has already been defined, the existing token will be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-642">El valor de <paramref name="str" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-642"><paramref name="str" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymWriter">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Diagnostics.SymbolStore.ISymbolWriter GetSymWriter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetSymWriter" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSymWriter () As ISymbolWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolWriter ^ GetSymWriter();" />
      <MemberSignature Language="F#" Value="member this.GetSymWriter : unit -&gt; System.Diagnostics.SymbolStore.ISymbolWriter" Usage="moduleBuilder.GetSymWriter " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a46-643">Devuelve el sistema de escritura de símbolos asociado a este módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-643">Returns the symbol writer associated with this dynamic module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-644">Sistema de escritura de símbolos asociado a este módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-644">The symbol writer associated with this dynamic module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-645">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-645">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-646">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-646">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-647">Obtiene el tipo con nombre definido en el módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-647">Gets the named type defined in the module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="moduleBuilder.GetType className" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c0a46-648">Nombre del objeto <see cref="T:System.Type" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="c0a46-648">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <summary><span data-ttu-id="c0a46-649">Obtiene el tipo con nombre definido en el módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-649">Gets the named type defined in the module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-650">Devuelve el tipo solicitado si está definido en este módulo; de lo contrario, devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-650">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-651">No utilice este método para generar tipos de matriz, tipos de puntero o tipos byref.</span><span class="sxs-lookup"><span data-stu-id="c0a46-651">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="c0a46-652">Use la <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, y <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="c0a46-652">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-653">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-653">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-654">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-654">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-655">La longitud de <paramref name="className" /> es cero o es mayor que 1023.</span><span class="sxs-lookup"><span data-stu-id="c0a46-655">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-656">El valor de <paramref name="className" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-656"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a46-657">El <see cref="T:System.Type" /> solicitado no es público y el llamador no tiene <see cref="T:System.Security.Permissions.ReflectionPermission" /> para reflejar objetos no públicos fuera del ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-657">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="c0a46-658">Se invoca un inicializador de clase y genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="c0a46-658">A class initializer is invoked and throws an exception.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="c0a46-659">Se ha producido un error al cargar <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-659">An error is encountered while loading the <see cref="T:System.Type" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool -&gt; Type" Usage="moduleBuilder.GetType (className, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c0a46-660">Nombre del objeto <see cref="T:System.Type" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="c0a46-660">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="c0a46-661">Si <see langword="true" />, la búsqueda no distingue entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="c0a46-661">If <see langword="true" />, the search is case-insensitive.</span></span> <span data-ttu-id="c0a46-662">Si <see langword="false" />, la búsqueda distingue entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="c0a46-662">If <see langword="false" />, the search is case-sensitive.</span></span></param>
        <summary><span data-ttu-id="c0a46-663">Obtiene el tipo con nombre definido en el módulo, con la opción de pasar por alto el uso de mayúsculas y minúsculas en el nombre de tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-663">Gets the named type defined in the module, optionally ignoring the case of the type name.</span></span></summary>
        <returns><span data-ttu-id="c0a46-664">Devuelve el tipo solicitado si está definido en este módulo; de lo contrario, devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-664">The requested type, if the type is defined in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-665">No utilice este método para generar tipos de matriz, tipos de puntero o tipos byref.</span><span class="sxs-lookup"><span data-stu-id="c0a46-665">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="c0a46-666">Use la <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, y <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="c0a46-666">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-667">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-667">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-668">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-668">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-669">La longitud de <paramref name="className" /> es cero o es mayor que 1023.</span><span class="sxs-lookup"><span data-stu-id="c0a46-669">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-670">El valor de <paramref name="className" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-670"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a46-671">El <see cref="T:System.Type" /> solicitado no es público y el llamador no tiene <see cref="T:System.Security.Permissions.ReflectionPermission" /> para reflejar objetos no públicos fuera del ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-671">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="c0a46-672">Se invoca un inicializador de clase y genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="c0a46-672">A class initializer is invoked and throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string className, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string className, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (className As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ className, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="override this.GetType : string * bool * bool -&gt; Type" Usage="moduleBuilder.GetType (className, throwOnError, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="className"><span data-ttu-id="c0a46-673">Nombre del objeto <see cref="T:System.Type" /> que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="c0a46-673">The name of the <see cref="T:System.Type" /> to get.</span></span></param>
        <param name="throwOnError"><span data-ttu-id="c0a46-674">Es <see langword="true" /> para producir una excepción si no se puede encontrar el tipo; es <see langword="false" /> para devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-674"><see langword="true" /> to throw an exception if the type cannot be found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="c0a46-675">Si <see langword="true" />, la búsqueda no distingue entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="c0a46-675">If <see langword="true" />, the search is case-insensitive.</span></span> <span data-ttu-id="c0a46-676">Si <see langword="false" />, la búsqueda distingue entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="c0a46-676">If <see langword="false" />, the search is case-sensitive.</span></span></param>
        <summary><span data-ttu-id="c0a46-677">Obtiene el tipo con nombre definido en el módulo, con la opción de pasar por alto el uso de mayúsculas y minúsculas en el nombre de tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-677">Gets the named type defined in the module, optionally ignoring the case of the type name.</span></span> <span data-ttu-id="c0a46-678">De manera opcional, se produce una excepción si no se encuentra el tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-678">Optionally throws an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="c0a46-679">Devuelve el tipo especificado si está declarado en este módulo; de lo contrario, devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-679">The specified type, if the type is declared in this module; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-680">El `throwOnError` parámetro sólo afecta a lo que sucede cuando no se encuentra el tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-680">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="c0a46-681">No afecta a las otras excepciones que puedan producirse.</span><span class="sxs-lookup"><span data-stu-id="c0a46-681">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="c0a46-682">En concreto, si se encuentra el tipo, pero no se puede cargar, <xref:System.TypeLoadException> se pueden producir incluso si `throwOnError` es `false`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-682">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 <span data-ttu-id="c0a46-683">No utilice este método para generar tipos de matriz, tipos de puntero o tipos byref.</span><span class="sxs-lookup"><span data-stu-id="c0a46-683">Do not use this method to generate array types, pointer types, or byref types.</span></span> <span data-ttu-id="c0a46-684">Use la <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, y <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="c0a46-684">Use the <xref:System.Reflection.Emit.TypeBuilder.MakeArrayType%2A?displayProperty=nameWithType>, <xref:System.Reflection.Emit.TypeBuilder.MakePointerType%2A?displayProperty=nameWithType>, and <xref:System.Reflection.Emit.TypeBuilder.MakeByRefType%2A?displayProperty=nameWithType> methods instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-685">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-685">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-686">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-686">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-687">La longitud de <paramref name="className" /> es cero o es mayor que 1023.</span><span class="sxs-lookup"><span data-stu-id="c0a46-687">Length of <paramref name="className" /> is zero or is greater than 1023.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-688">El valor de <paramref name="className" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-688"><paramref name="className" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a46-689">El <see cref="T:System.Type" /> solicitado no es público y el llamador no tiene <see cref="T:System.Security.Permissions.ReflectionPermission" /> para reflejar objetos no públicos fuera del ensamblado actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-689">The requested <see cref="T:System.Type" /> is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect non-public objects outside the current assembly.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="c0a46-690">Se invoca un inicializador de clase y genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="c0a46-690">A class initializer is invoked and throws an exception.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="c0a46-691">El valor de <paramref name="throwOnError" /> es <see langword="true" /> y no se encuentra el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-691"><paramref name="throwOnError" /> is <see langword="true" /> and the specified type is not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberSignature Language="F#" Value="override this.GetTypes : unit -&gt; Type[]" Usage="moduleBuilder.GetTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a46-692">Devuelve todas las clases definidas en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-692">Returns all the classes defined within this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-693">Matriz que contiene los tipos definidos en el módulo reflejado por esta instancia.</span><span class="sxs-lookup"><span data-stu-id="c0a46-693">An array that contains the types defined within the module that is reflected by this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-694">`ReflectionTypeLoadException` es una excepción de carga de clase especial.</span><span class="sxs-lookup"><span data-stu-id="c0a46-694">`ReflectionTypeLoadException` is a special class load exception.</span></span> <span data-ttu-id="c0a46-695">El `ReflectionTypeLoadException.Types` propiedad contiene la matriz de clases definidas en el módulo y cargadas.</span><span class="sxs-lookup"><span data-stu-id="c0a46-695">The `ReflectionTypeLoadException.Types` property contains the array of classes that were defined in the module and loaded.</span></span> <span data-ttu-id="c0a46-696">Esta matriz puede contener valores null.</span><span class="sxs-lookup"><span data-stu-id="c0a46-696">This array can contain some null values.</span></span> <span data-ttu-id="c0a46-697">El `ReflectionTypeLoadException.LoaderExceptions` propiedad es una matriz de excepciones que representan las excepciones producidas por el cargador de clases.</span><span class="sxs-lookup"><span data-stu-id="c0a46-697">The `ReflectionTypeLoadException.LoaderExceptions` property is an array of exceptions that represent the exceptions that were thrown by the class loader.</span></span> <span data-ttu-id="c0a46-698">Alinean los huecos en la matriz de clases con las excepciones.</span><span class="sxs-lookup"><span data-stu-id="c0a46-698">The holes in the class array line up with the exceptions.</span></span>  
  
 <span data-ttu-id="c0a46-699">Por ejemplo, si los inicializadores de clase de una de las clases produce una excepción mientras se está cargando, un `TargetInvocationException` se almacena en el elemento correspondiente de la `LoaderExceptions` matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-699">For example, if the class initializers of one of the classes throws an exception while it is being loaded, a `TargetInvocationException` is stored in the corresponding element of the `LoaderExceptions` array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-700">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-700">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-701">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-701">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="c0a46-702">No se pudieron cargar una o más clases en un módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-702">One or more classes in a module could not be loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="c0a46-703">El llamador no dispone del permiso requerido.</span><span class="sxs-lookup"><span data-stu-id="c0a46-703">The caller does not have the required permission.</span></span></exception>
        <altmember cref="T:System.Reflection.ReflectionTypeLoadException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeToken">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-704">Devuelve un símbolo (token) de tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-704">Returns a type token.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken GetTypeToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.TypeToken GetTypeToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeToken (name As String) As TypeToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeToken GetTypeToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetTypeToken : string -&gt; System.Reflection.Emit.TypeToken" Usage="moduleBuilder.GetTypeToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-705">Nombre de la clase, incluido el espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="c0a46-705">The name of the class, including the namespace.</span></span></param>
        <summary><span data-ttu-id="c0a46-706">Devuelve el token utilizado para identificar el tipo con el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-706">Returns the token used to identify the type with the specified name.</span></span></summary>
        <returns><span data-ttu-id="c0a46-707">Token que se utiliza para identificar el tipo con el nombre especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-707">The token used to identify the type with the specified name within this module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-708">Este método es útil para los clientes de la <xref:System.Reflection.Emit.MethodRental> clase que deseen modificar directamente el cuerpo de un método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-708">This method is useful for clients of the <xref:System.Reflection.Emit.MethodRental> class who want to directly modify the body of a method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-709"><paramref name="name" /> es la cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="c0a46-709"><paramref name="name" /> is the empty string ("").</span></span>  
  
<span data-ttu-id="c0a46-710">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-710">-or-</span></span> 
 <span data-ttu-id="c0a46-711"><paramref name="name" /> representa un tipo <see langword="ByRef" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-711"><paramref name="name" /> represents a <see langword="ByRef" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-712">El valor de <paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-712"><paramref name="name" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="c0a46-713">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-713">-or-</span></span> 
<span data-ttu-id="c0a46-714">No se puede encontrar el tipo especificado por <paramref name="name" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-714">The type specified by <paramref name="name" /> could not be found.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-715">Se trata de un módulo no transitorio que hace referencia a un módulo transitorio.</span><span class="sxs-lookup"><span data-stu-id="c0a46-715">This is a non-transient module that references a transient module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.TypeToken GetTypeToken (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.TypeToken GetTypeToken(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.GetTypeToken(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::TypeToken GetTypeToken(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetTypeToken : Type -&gt; System.Reflection.Emit.TypeToken" Usage="moduleBuilder.GetTypeToken type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.TypeToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c0a46-716">Objeto de tipo que representa el tipo de clase.</span><span class="sxs-lookup"><span data-stu-id="c0a46-716">The type object that represents the class type.</span></span></param>
        <summary><span data-ttu-id="c0a46-717">Devuelve el símbolo (token) utilizado para identificar el tipo especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-717">Returns the token used to identify the specified type within this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-718">Token que se utiliza para identificar el tipo especificado en este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-718">The token used to identify the given type within this module.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-719">Los tokens se usan en instrucciones de lenguaje intermedio (MSIL) de Microsoft para identificar los objetos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-719">Tokens are used in Microsoft intermediate language (MSIL) instructions to identify objects.</span></span> <span data-ttu-id="c0a46-720">Los tokens son relativos al módulo en el que se encuentran.</span><span class="sxs-lookup"><span data-stu-id="c0a46-720">Tokens are relative to the module in which they are contained.</span></span> <span data-ttu-id="c0a46-721">Por ejemplo, el valor del token para `String` es probable que sean diferentes de los módulos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-721">For example, the token value for `String` is likely to be different from module to module.</span></span> <span data-ttu-id="c0a46-722">Cuando `GetTypeToken` es invoca, se agrega una referencia al módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-722">When `GetTypeToken` is invoked, a reference is added to the module.</span></span> <span data-ttu-id="c0a46-723">La referencia se convierte en una parte permanente del módulo; varias llamadas con el mismo argumento tienen ningún efecto adicional.</span><span class="sxs-lookup"><span data-stu-id="c0a46-723">The reference becomes a permanent part of the module; multiple calls with the same argument have no additional effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-724"><paramref name="type" /> es un tipo <see langword="ByRef" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-724"><paramref name="type" /> is a <see langword="ByRef" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-725">El valor de <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-725"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-726">Se trata de un módulo no transitorio que hace referencia a un módulo transitorio.</span><span class="sxs-lookup"><span data-stu-id="c0a46-726">This is a non-transient module that references a transient module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="moduleBuilder.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="c0a46-727">Tipo de atributo personalizado que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="c0a46-727">The type of custom attribute to test for.</span></span></param>
        <param name="inherit"><span data-ttu-id="c0a46-728">Este argumento se omite para objetos de este tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-728">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="c0a46-729">Devuelve un valor que indica si el tipo de atributo especificado se ha aplicado a este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-729">Returns a value that indicates whether the specified attribute type has been applied to this module.</span></span></summary>
        <returns><span data-ttu-id="c0a46-730">Es <see langword="true" /> si se han aplicado una o varias instancias de <paramref name="attributeType" /> a este módulo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-730"><see langword="true" /> if one or more instances of <paramref name="attributeType" /> have been applied to this module; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-731">El valor de <paramref name="attributeType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-731"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-732"><paramref name="attributeType" /> no es un objeto <see cref="T:System.Type" /> proporcionado por el tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c0a46-732"><paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span></span> <span data-ttu-id="c0a46-733">Por ejemplo, <paramref name="attributeType" /> es un objeto <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-733">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsResource">
      <MemberSignature Language="C#" Value="public override bool IsResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsResource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsResource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsResource();" />
      <MemberSignature Language="F#" Value="override this.IsResource : unit -&gt; bool" Usage="moduleBuilder.IsResource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a46-734">Obtiene un valor que indica si el objeto es un recurso.</span><span class="sxs-lookup"><span data-stu-id="c0a46-734">Gets a value indicating whether the object is a resource.</span></span></summary>
        <returns><span data-ttu-id="c0a46-735">Es <see langword="true" /> si el objeto es un recurso; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-735"><see langword="true" /> if the object is a resource; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransient">
      <MemberSignature Language="C#" Value="public bool IsTransient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsTransient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.IsTransient" />
      <MemberSignature Language="VB.NET" Value="Public Function IsTransient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsTransient();" />
      <MemberSignature Language="F#" Value="member this.IsTransient : unit -&gt; bool" Usage="moduleBuilder.IsTransient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0a46-736">Devuelve un valor que indica si este módulo dinámico es transitorio.</span><span class="sxs-lookup"><span data-stu-id="c0a46-736">Returns a value that indicates whether this dynamic module is transient.</span></span></summary>
        <returns><span data-ttu-id="c0a46-737">Devuelve <see langword="true" /> si este módulo dinámico es transitorio; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-737"><see langword="true" /> if this dynamic module is transient; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MDStreamVersion">
      <MemberSignature Language="C#" Value="public override int MDStreamVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MDStreamVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.MDStreamVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MDStreamVersion As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MDStreamVersion { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MDStreamVersion : int" Usage="System.Reflection.Emit.ModuleBuilder.MDStreamVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0a46-738">Obtiene la versión del flujo de metadatos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-738">Gets the metadata stream version.</span></span></summary>
        <value><span data-ttu-id="c0a46-739">Entero de 32 bits que representa la versión del flujo de metadatos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-739">A 32-bit integer representing the metadata stream version.</span></span> <span data-ttu-id="c0a46-740">Los dos bytes de orden superior representan el número de versión principal, mientras que los dos bytes de orden inferior representan el número de versión secundaria.</span><span class="sxs-lookup"><span data-stu-id="c0a46-740">The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-741">Para obtener más información sobre el encabezado de metadatos, vea "Partition II: Metadata Definition and Semantics" en la documentación de Common Language Infrastructure (CLI).</span><span class="sxs-lookup"><span data-stu-id="c0a46-741">For more information on the metadata header, see "Partition II: Metadata Definition and Semantics" in the Common Language Infrastructure (CLI) documentation.</span></span> <span data-ttu-id="c0a46-742">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-742">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public override int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Reflection.Emit.ModuleBuilder.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0a46-743">Obtiene un token que identifica el módulo dinámico actual en los metadatos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-743">Gets a token that identifies the current dynamic module in metadata.</span></span></summary>
        <value><span data-ttu-id="c0a46-744">Token entero que identifica el módulo actual en los metadatos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-744">An integer token that identifies the current module in metadata.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-745">Los tokens obtenidos mediante esta propiedad se pueden pasar a la API de reflexión no administrada.</span><span class="sxs-lookup"><span data-stu-id="c0a46-745">The tokens obtained using this property can be passed to the unmanaged Reflection API.</span></span> <span data-ttu-id="c0a46-746">Para obtener más información, consulte [API de reflexión no administrada](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span><span class="sxs-lookup"><span data-stu-id="c0a46-746">For more information, see [Unmanaged Reflection API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-747">Información sobre los tokens de metadatos puede encontrarse en la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-747">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-748">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-748">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleVersionId">
      <MemberSignature Language="C#" Value="public override Guid ModuleVersionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ModuleVersionId" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.ModuleVersionId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ModuleVersionId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Guid ModuleVersionId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ModuleVersionId : Guid" Usage="System.Reflection.Emit.ModuleBuilder.ModuleVersionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0a46-749">Obtiene un identificador único universal (UUID) que puede utilizarse para distinguir entre dos versiones de un módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-749">Gets a universally unique identifier (UUID) that can be used to distinguish between two versions of a module.</span></span></summary>
        <value><span data-ttu-id="c0a46-750"><see cref="T:System.Guid" /> que se puede utilizar para distinguir entre dos versiones de un módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-750">A <see cref="T:System.Guid" /> that can be used to distinguish between two versions of a module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-751">En los metadatos no administrados, el GUID devuelto por la <xref:System.Reflection.Module.ModuleVersionId%2A> propiedad se conoce como el `mvid`y se almacena en el montón GUID.</span><span class="sxs-lookup"><span data-stu-id="c0a46-751">In unmanaged metadata, the GUID returned by the <xref:System.Reflection.Module.ModuleVersionId%2A> property is referred to as the `mvid`, and is stored in the GUID heap.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-752">Para obtener más información acerca de los metadatos puede encontrarse en la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-752">More information about metadata can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-753">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-753">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.Emit.ModuleBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0a46-754">Cadena que indica que se trata de un módulo en memoria.</span><span class="sxs-lookup"><span data-stu-id="c0a46-754">A string that indicates that this is an in-memory module.</span></span></summary>
        <value><span data-ttu-id="c0a46-755">Texto que indica que se trata de un módulo en memoria.</span><span class="sxs-lookup"><span data-stu-id="c0a46-755">Text that indicates that this is an in-memory module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-756">No se puede obtener el nombre de un módulo dinámico hasta que el módulo se ha guardado y volver a cargar desde el disco.</span><span class="sxs-lookup"><span data-stu-id="c0a46-756">The name of a dynamic module cannot be obtained until the module has been saved and reloaded from disk.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveField">
      <MemberSignature Language="C#" Value="public override System.Reflection.FieldInfo ResolveField (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.FieldInfo ResolveField(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveField(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveField (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::FieldInfo ^ ResolveField(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveField : int * Type[] * Type[] -&gt; System.Reflection.FieldInfo" Usage="moduleBuilder.ResolveField (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="c0a46-757">Token de metadatos que identifica un campo del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-757">A metadata token that identifies a field in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="c0a46-758">Matriz de objetos <see cref="T:System.Type" /> que representan los argumentos de tipo genérico del tipo en cuyo ámbito se encuentra el token; o es <see langword="null" /> si dicho tipo no es genérico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-758">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="c0a46-759">Matriz de objetos <see cref="T:System.Type" /> que representan los argumentos de tipo genérico del método en cuyo ámbito se encuentra el token; o es <see langword="null" /> si dicho método no es genérico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-759">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="c0a46-760">Devuelve el campo identificado por el token de metadatos especificado, en el contexto definido por los parámetros de tipo genérico especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-760">Returns the field identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="c0a46-761">Objeto <see cref="T:System.Reflection.FieldInfo" /> que representa el campo identificado por el token de metadatos especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-761">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-762">Use la <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método en el tipo donde `metadataToken` está en el ámbito para obtener una matriz de argumentos de tipo genérico para `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-762">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="c0a46-763">Use la <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> método en el método donde `metadataToken` está en el ámbito para obtener una matriz de argumentos de tipo genérico para `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-763">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="c0a46-764">Siempre es seguro proporcionar estos argumentos, incluso cuando no se necesitan.</span><span class="sxs-lookup"><span data-stu-id="c0a46-764">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-765">Información sobre los tokens de metadatos puede encontrarse en la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-765">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-766">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-766">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="c0a46-767">Para el código que muestra cómo resolver tokens mediante el contexto genérico (es decir, los parámetros de tipo genérico de tipo genérico o el método genérico en el que el token se inserta) vea el <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-767">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-768"><paramref name="metadataToken" /> no es un token válido para un campo en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-768"><paramref name="metadataToken" /> is not a token for a field in the scope of the current module.</span></span>  
  
<span data-ttu-id="c0a46-769">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-769">-or-</span></span> 
 <span data-ttu-id="c0a46-770"><paramref name="metadataToken" /> identifica un campo cuyo <see langword="TypeSpec" /> primario tiene una firma que contiene el tipo de elemento <see langword="var" /> (un parámetro de tipo de un tipo genérico) o <see langword="mvar" /> (un parámetro de tipo de un método genérico) y no se proporcionaron los argumentos de tipo genérico necesarios para uno o ambos parámetros <paramref name="genericTypeArguments" /> y <paramref name="genericMethodArguments" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-770"><paramref name="metadataToken" /> identifies a field whose parent <see langword="TypeSpec" /> has a signature containing element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a46-771"><paramref name="metadataToken" /> no es un token válido en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-771"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo ResolveMember (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo ResolveMember(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveMember(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMember (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MemberInfo ^ ResolveMember(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveMember : int * Type[] * Type[] -&gt; System.Reflection.MemberInfo" Usage="moduleBuilder.ResolveMember (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="c0a46-772">Token de metadatos que identifica un tipo o integrante del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-772">A metadata token that identifies a type or member in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="c0a46-773">Matriz de objetos <see cref="T:System.Type" /> que representan los argumentos de tipo genérico del tipo en cuyo ámbito se encuentra el token; o es <see langword="null" /> si dicho tipo no es genérico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-773">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="c0a46-774">Matriz de objetos <see cref="T:System.Type" /> que representan los argumentos de tipo genérico del método en cuyo ámbito se encuentra el token; o es <see langword="null" /> si dicho método no es genérico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-774">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="c0a46-775">Devuelve el tipo o miembro identificado por el token de metadatos especificado, en el contexto definido por los parámetros de tipo genérico especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-775">Returns the type or member identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="c0a46-776">Objeto <see cref="T:System.Reflection.MemberInfo" /> que representa el tipo o integrante identificado por el token de metadatos especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-776">A <see cref="T:System.Reflection.MemberInfo" /> object representing the type or member that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-777">Use la <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método en el tipo donde `metadataToken` está en el ámbito para obtener una matriz de argumentos de tipo genérico para `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-777">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="c0a46-778">Use la <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> método en el método donde `metadataToken` está en el ámbito para obtener una matriz de argumentos de tipo genérico para `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-778">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="c0a46-779">Siempre es seguro proporcionar estos argumentos, incluso cuando no se necesitan.</span><span class="sxs-lookup"><span data-stu-id="c0a46-779">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-780">Información sobre los tokens de metadatos puede encontrarse en la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-780">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-781">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-781">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="c0a46-782">Para el código que muestra cómo resolver tokens mediante el contexto genérico (es decir, los parámetros de tipo genérico de tipo genérico o el método genérico en el que el token se inserta) vea el <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-782">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-783"><paramref name="metadataToken" /> no es un token para un tipo o integrante en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-783"><paramref name="metadataToken" /> is not a token for a type or member in the scope of the current module.</span></span>  
  
<span data-ttu-id="c0a46-784">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-784">-or-</span></span> 
 <span data-ttu-id="c0a46-785"><paramref name="metadataToken" /> es un <see langword="MethodSpec" /> o <see langword="TypeSpec" /> cuya firma contiene el tipo de elemento <see langword="var" /> (un parámetro de tipo de un tipo genérico) o <see langword="mvar" /> (un parámetro de tipo de un método genérico) y no se proporcionaron los argumentos de tipo genérico necesarios para uno o ambos parámetros <paramref name="genericTypeArguments" /> y <paramref name="genericMethodArguments" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-785"><paramref name="metadataToken" /> is a <see langword="MethodSpec" /> or <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span>  
  
<span data-ttu-id="c0a46-786">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-786">-or-</span></span> 
 <span data-ttu-id="c0a46-787"><paramref name="metadataToken" /> identifica una propiedad o evento.</span><span class="sxs-lookup"><span data-stu-id="c0a46-787"><paramref name="metadataToken" /> identifies a property or event.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a46-788"><paramref name="metadataToken" /> no es un token válido en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-788"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodBase ResolveMethod (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodBase ResolveMethod(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveMethod(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveMethod (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodBase ^ ResolveMethod(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveMethod : int * Type[] * Type[] -&gt; System.Reflection.MethodBase" Usage="moduleBuilder.ResolveMethod (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="c0a46-789">Token de metadatos que identifica un método o constructor en el módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-789">A metadata token that identifies a method or constructor in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="c0a46-790">Matriz de objetos <see cref="T:System.Type" /> que representan los argumentos de tipo genérico del tipo en cuyo ámbito se encuentra el token; o es <see langword="null" /> si dicho tipo no es genérico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-790">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="c0a46-791">Matriz de objetos <see cref="T:System.Type" /> que representan los argumentos de tipo genérico del método en cuyo ámbito se encuentra el token; o es <see langword="null" /> si dicho método no es genérico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-791">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="c0a46-792">Devuelve el método o constructor identificado por el token de metadatos especificado, en el contexto definido por los parámetros de tipo genérico especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-792">Returns the method or constructor identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="c0a46-793">Objeto <see cref="T:System.Reflection.MethodBase" /> que representa el método identificado por el token de metadatos especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-793">A <see cref="T:System.Reflection.MethodBase" /> object representing the method that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-794">Use la <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método en el tipo donde `metadataToken` está en el ámbito para obtener una matriz de argumentos de tipo genérico para `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-794">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="c0a46-795">Use la <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> método en el método donde `metadataToken` está en el ámbito para obtener una matriz de argumentos de tipo genérico para `genericMethodArguments`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-795">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericMethodArguments`.</span></span> <span data-ttu-id="c0a46-796">Siempre es seguro proporcionar estos argumentos, incluso cuando no se necesitan.</span><span class="sxs-lookup"><span data-stu-id="c0a46-796">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-797">Información sobre los tokens de metadatos puede encontrarse en la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-797">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-798">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-798">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="c0a46-799">Para el código que muestra cómo resolver tokens mediante el contexto genérico (es decir, los parámetros de tipo genérico de tipo genérico o el método genérico en el que el token se inserta) vea el <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-799">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-800"><paramref name="metadataToken" /> no es un token para un método o constructor en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-800"><paramref name="metadataToken" /> is not a token for a method or constructor in the scope of the current module.</span></span>  
  
<span data-ttu-id="c0a46-801">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-801">-or-</span></span> 
 <span data-ttu-id="c0a46-802"><paramref name="metadataToken" /> es un <see langword="MethodSpec" /> cuya firma contiene el tipo de elemento <see langword="var" /> (un parámetro de tipo de un tipo genérico) o <see langword="mvar" /> (un parámetro de tipo de un método genérico) y no se proporcionaron los argumentos de tipo genérico necesarios para uno o ambos parámetros <paramref name="genericTypeArguments" /> y <paramref name="genericMethodArguments" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-802"><paramref name="metadataToken" /> is a <see langword="MethodSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a46-803"><paramref name="metadataToken" /> no es un token válido en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-803"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveSignature">
      <MemberSignature Language="C#" Value="public override byte[] ResolveSignature (int metadataToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] ResolveSignature(int32 metadataToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveSignature (metadataToken As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ ResolveSignature(int metadataToken);" />
      <MemberSignature Language="F#" Value="override this.ResolveSignature : int -&gt; byte[]" Usage="moduleBuilder.ResolveSignature metadataToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="c0a46-804">Token de metadatos que identifica una firma en el módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-804">A metadata token that identifies a signature in the module.</span></span></param>
        <summary><span data-ttu-id="c0a46-805">Devuelve el objeto binario de firma identificado por un token de metadatos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-805">Returns the signature blob identified by a metadata token.</span></span></summary>
        <returns><span data-ttu-id="c0a46-806">Una matriz de bytes que representan el objeto binario de firma.</span><span class="sxs-lookup"><span data-stu-id="c0a46-806">An array of bytes representing the signature blob.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-807">Encontrará información sobre los tokens de metadatos y firmas en la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-807">Information about metadata tokens and signatures can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-808">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-808">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-809"><paramref name="metadataToken" /> no es un token <see langword="MemberRef" />, <see langword="MethodDef" />, <see langword="TypeSpec" />, de firma o <see langword="FieldDef" /> válido en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-809"><paramref name="metadataToken" /> is not a valid <see langword="MemberRef" />, <see langword="MethodDef" />, <see langword="TypeSpec" />, signature, or <see langword="FieldDef" /> token in the scope of the current module.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a46-810"><paramref name="metadataToken" /> no es un token válido en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-810"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveString">
      <MemberSignature Language="C#" Value="public override string ResolveString (int metadataToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResolveString(int32 metadataToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveString (metadataToken As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResolveString(int metadataToken);" />
      <MemberSignature Language="F#" Value="override this.ResolveString : int -&gt; string" Usage="moduleBuilder.ResolveString metadataToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="c0a46-811">Token de metadatos que identifica una cadena en el montón de cadena del módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-811">A metadata token that identifies a string in the string heap of the module.</span></span></param>
        <summary><span data-ttu-id="c0a46-812">Devuelve la cadena identificada por el token de metadatos especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-812">Returns the string identified by the specified metadata token.</span></span></summary>
        <returns><span data-ttu-id="c0a46-813"><see cref="T:System.String" /> que contiene un valor de cadena del montón de cadena de metadatos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-813">A <see cref="T:System.String" /> containing a string value from the metadata string heap.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-814">Información sobre los tokens de metadatos puede encontrarse en la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-814">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-815">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-815">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-816"><paramref name="metadataToken" /> no es un token de una cadena en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-816"><paramref name="metadataToken" /> is not a token for a string in the scope of the current module.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a46-817"><paramref name="metadataToken" /> no es un token válido en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-817"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public override Type ResolveType (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type ResolveType(int32 metadataToken, class System.Type[] genericTypeArguments, class System.Type[] genericMethodArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.ResolveType(System.Int32,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveType (metadataToken As Integer, genericTypeArguments As Type(), genericMethodArguments As Type()) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ ResolveType(int metadataToken, cli::array &lt;Type ^&gt; ^ genericTypeArguments, cli::array &lt;Type ^&gt; ^ genericMethodArguments);" />
      <MemberSignature Language="F#" Value="override this.ResolveType : int * Type[] * Type[] -&gt; Type" Usage="moduleBuilder.ResolveType (metadataToken, genericTypeArguments, genericMethodArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataToken" Type="System.Int32" />
        <Parameter Name="genericTypeArguments" Type="System.Type[]" />
        <Parameter Name="genericMethodArguments" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="metadataToken"><span data-ttu-id="c0a46-818">Token de metadatos que identifica un tipo en el módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-818">A metadata token that identifies a type in the module.</span></span></param>
        <param name="genericTypeArguments"><span data-ttu-id="c0a46-819">Matriz de objetos <see cref="T:System.Type" /> que representan los argumentos de tipo genérico del tipo en cuyo ámbito se encuentra el token; o es <see langword="null" /> si dicho tipo no es genérico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-819">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the type where the token is in scope, or <see langword="null" /> if that type is not generic.</span></span></param>
        <param name="genericMethodArguments"><span data-ttu-id="c0a46-820">Matriz de objetos <see cref="T:System.Type" /> que representan los argumentos de tipo genérico del método en cuyo ámbito se encuentra el token; o es <see langword="null" /> si dicho método no es genérico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-820">An array of <see cref="T:System.Type" /> objects representing the generic type arguments of the method where the token is in scope, or <see langword="null" /> if that method is not generic.</span></span></param>
        <summary><span data-ttu-id="c0a46-821">Devuelve el campo identificado por el token de metadatos especificado, en el contexto definido por los parámetros de tipo genérico especificados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-821">Returns the type identified by the specified metadata token, in the context defined by the specified generic type parameters.</span></span></summary>
        <returns><span data-ttu-id="c0a46-822">Objeto <see cref="T:System.Type" /> que representa el tipo identificado por el token de metadatos especificado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-822">A <see cref="T:System.Type" /> object representing the type that is identified by the specified metadata token.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-823">Use la <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> método en el tipo donde `metadataToken` está en el ámbito para obtener una matriz de argumentos de tipo genérico para `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-823">Use the <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method on the type where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="c0a46-824">Use la <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> método en el método donde `metadataToken` está en el ámbito para obtener una matriz de argumentos de tipo genérico para `genericTypeArguments`.</span><span class="sxs-lookup"><span data-stu-id="c0a46-824">Use the <xref:System.Reflection.MethodInfo.GetGenericArguments%2A?displayProperty=nameWithType> method on the method where `metadataToken` is in scope to obtain an array of generic type arguments for `genericTypeArguments`.</span></span> <span data-ttu-id="c0a46-825">Siempre es seguro proporcionar estos argumentos, incluso cuando no se necesitan.</span><span class="sxs-lookup"><span data-stu-id="c0a46-825">It is always safe to provide these arguments, even when they are not needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-826">Información sobre los tokens de metadatos puede encontrarse en la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-826">Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-827">La documentación está disponible en línea; consulte [ECMA C# y Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) en MSDN y [estándar ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) en el sitio Web de ECMA.</span><span class="sxs-lookup"><span data-stu-id="c0a46-827">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the ECMA Web site.</span></span>  
  
 <span data-ttu-id="c0a46-828">Para el código que muestra cómo resolver tokens mediante el contexto genérico (es decir, los parámetros de tipo genérico de tipo genérico o el método genérico en el que el token se inserta) vea el <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c0a46-828">For code that demonstrates token resolution using the generic context (that is, the generic type parameters of the generic type and/or the generic method in which the token is embedded) see the <xref:System.Reflection.Module.ResolveMethod%28System.Int32%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c0a46-829"><paramref name="metadataToken" /> no es un token válido para un tipo en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-829"><paramref name="metadataToken" /> is not a token for a type in the scope of the current module.</span></span>  
  
<span data-ttu-id="c0a46-830">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-830">-or-</span></span> 
 <span data-ttu-id="c0a46-831"><paramref name="metadataToken" /> es un <see langword="TypeSpec" /> cuya firma contiene el tipo de elemento <see langword="var" /> (un parámetro de tipo de un tipo genérico) o <see langword="mvar" /> (un parámetro de tipo de un método genérico) y no se proporcionaron los argumentos de tipo genérico necesarios para uno o ambos parámetros <paramref name="genericTypeArguments" /> y <paramref name="genericMethodArguments" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-831"><paramref name="metadataToken" /> is a <see langword="TypeSpec" /> whose signature contains element type <see langword="var" /> (a type parameter of a generic type) or <see langword="mvar" /> (a type parameter of a generic method), and the necessary generic type arguments were not supplied for either or both of <paramref name="genericTypeArguments" /> and <paramref name="genericMethodArguments" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c0a46-832"><paramref name="metadataToken" /> no es un token válido en el ámbito del módulo actual.</span><span class="sxs-lookup"><span data-stu-id="c0a46-832"><paramref name="metadataToken" /> is not a valid token in the scope of the current module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public override string ScopeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ModuleBuilder.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ScopeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string" Usage="System.Reflection.Emit.ModuleBuilder.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0a46-833">Obtiene una cadena que representa el nombre del módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-833">Gets a string that represents the name of the dynamic module.</span></span></summary>
        <value><span data-ttu-id="c0a46-834">Nombre del módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-834">The name of the dynamic module.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c0a46-835">Aplica un atributo personalizado a este módulo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-835">Applies a custom attribute to this module.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.Emit.CustomAttributeBuilder -&gt; unit" Usage="moduleBuilder.SetCustomAttribute customBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="c0a46-836">Instancia de una clase del asistente que especifica el atributo personalizado que se va a aplicar.</span><span class="sxs-lookup"><span data-stu-id="c0a46-836">An instance of a helper class that specifies the custom attribute to apply.</span></span></param>
        <summary><span data-ttu-id="c0a46-837">Aplica un atributo personalizado a este módulo utilizando un generador de atributos personalizados.</span><span class="sxs-lookup"><span data-stu-id="c0a46-837">Applies a custom attribute to this module by using a custom attribute builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-838">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-838">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-839">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-839">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-840">El valor de <paramref name="customBuilder" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-840"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberSignature Language="F#" Value="member this.SetCustomAttribute : System.Reflection.ConstructorInfo * byte[] -&gt; unit" Usage="moduleBuilder.SetCustomAttribute (con, binaryAttribute)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="c0a46-841">Constructor para el atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-841">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="c0a46-842">BLOB de bytes que representa el atributo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-842">A byte BLOB representing the attribute.</span></span></param>
        <summary><span data-ttu-id="c0a46-843">Aplica un atributo personalizado a este módulo utilizando el objeto binario grande (BLOB) especificado que representa el atributo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-843">Applies a custom attribute to this module by using a specified binary large object (BLOB) that represents the attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-844">Para obtener más información acerca de cómo dar formato a `binaryAttribute`, consulte la documentación de Common Language Infrastructure (CLI), especialmente en "Partition II: Metadata Definition and Semantics".</span><span class="sxs-lookup"><span data-stu-id="c0a46-844">For more information about how to format `binaryAttribute`, see the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</span></span> <span data-ttu-id="c0a46-845">La documentación está disponible en línea; vea [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) (Estándares de ECMA C# y Common Language Infrastructure) en MSDN y [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) (Estándar ECMA-335: Common Language Infrastructure [CLI]) en el sitio web de Ecma International.</span><span class="sxs-lookup"><span data-stu-id="c0a46-845">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-846">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-846">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-847">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-847">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-848">El valor de <paramref name="con" /> o <paramref name="binaryAttribute" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-848"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSymCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetSymCustomAttribute (string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSymCustomAttribute(string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetSymCustomAttribute(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSymCustomAttribute (name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSymCustomAttribute(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.SetSymCustomAttribute : string * byte[] -&gt; unit" Usage="moduleBuilder.SetSymCustomAttribute (name, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="c0a46-849">Nombre del atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-849">The name of the custom attribute</span></span></param>
        <param name="data"><span data-ttu-id="c0a46-850">Objeto binario grande (BLOB) opaco de bytes que representa el valor del atributo personalizado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-850">An opaque binary large object (BLOB) of bytes that represents the value of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="c0a46-851">Este método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="c0a46-851">This method does nothing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-852">Este método no hace nada.</span><span class="sxs-lookup"><span data-stu-id="c0a46-852">This method does nothing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-853">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-853">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-854">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-854">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-855">El valor de <paramref name="url" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-855"><paramref name="url" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetUserEntryPoint">
      <MemberSignature Language="C#" Value="public void SetUserEntryPoint (System.Reflection.MethodInfo entryPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetUserEntryPoint(class System.Reflection.MethodInfo entryPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.SetUserEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetUserEntryPoint (entryPoint As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetUserEntryPoint(System::Reflection::MethodInfo ^ entryPoint);" />
      <MemberSignature Language="F#" Value="member this.SetUserEntryPoint : System.Reflection.MethodInfo -&gt; unit" Usage="moduleBuilder.SetUserEntryPoint entryPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryPoint" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="entryPoint"><span data-ttu-id="c0a46-856">Punto de entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="c0a46-856">The user entry point.</span></span></param>
        <summary><span data-ttu-id="c0a46-857">Establece el punto de entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="c0a46-857">Sets the user entry point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-858">El compilador puede generar un código auxiliar de inicio antes de llamar al usuario principal.</span><span class="sxs-lookup"><span data-stu-id="c0a46-858">The compiler might generate a startup stub before calling user main.</span></span> <span data-ttu-id="c0a46-859">El código auxiliar de inicio será el punto de entrada.</span><span class="sxs-lookup"><span data-stu-id="c0a46-859">The startup stub will be the entry point.</span></span> <span data-ttu-id="c0a46-860">Mientras el usuario principal será el punto de entrada de usuario para que el depurador no entrará en el punto de entrada del compilador.</span><span class="sxs-lookup"><span data-stu-id="c0a46-860">While the user main will be the user entry point so that debugger will not step into the compiler entry point.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0a46-861">A partir de la [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ya no requiere este miembro <xref:System.Security.Permissions.ReflectionPermission> con el <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="c0a46-861">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="c0a46-862">(Consulte [problemas de seguridad en Reflection emiten](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Para utilizar esta funcionalidad, la aplicación debe utilizar [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] o posterior como destino.</span><span class="sxs-lookup"><span data-stu-id="c0a46-862">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c0a46-863">El valor de <paramref name="entryPoint" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-863"><paramref name="entryPoint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c0a46-864">Se llama a este método en un módulo dinámico que no es un módulo de depuración.</span><span class="sxs-lookup"><span data-stu-id="c0a46-864">This method is called on a dynamic module that is not a debug module.</span></span>  
  
<span data-ttu-id="c0a46-865">O bien</span><span class="sxs-lookup"><span data-stu-id="c0a46-865">-or-</span></span> 
 <span data-ttu-id="c0a46-866"><paramref name="entryPoint" /> no está incluido en este módulo dinámico.</span><span class="sxs-lookup"><span data-stu-id="c0a46-866"><paramref name="entryPoint" /> is not contained in this dynamic module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ModuleBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ModuleBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="c0a46-867">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="c0a46-867">Reserved for future use.</span></span> <span data-ttu-id="c0a46-868">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="c0a46-868">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="c0a46-869">Matriz que se pasa con los nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="c0a46-869">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="c0a46-870">Número de nombres que se van a asignar.</span><span class="sxs-lookup"><span data-stu-id="c0a46-870">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="c0a46-871">Contexto de configuración regional en el que se van a interpretar los nombres.</span><span class="sxs-lookup"><span data-stu-id="c0a46-871">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="c0a46-872">Matriz asignada por el llamador que recibe los identificadores que corresponden a los nombres.</span><span class="sxs-lookup"><span data-stu-id="c0a46-872">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="c0a46-873">Para una descripción de este miembro, vea <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-873">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-874">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-874">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c0a46-875">Para obtener más información sobre `IDispatch::GetIDsOfNames`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="c0a46-875">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="c0a46-876">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-876">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c0a46-877">Solo se puede utilizar cuando la instancia de <xref:System.Reflection.Emit.ModuleBuilder> se convierte en una interfaz <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-877">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c0a46-878">Al método se le llama de manera enlazada en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="c0a46-878">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ModuleBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ModuleBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="c0a46-879">Información de tipos que se va a devolver.</span><span class="sxs-lookup"><span data-stu-id="c0a46-879">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="c0a46-880">Identificador de la configuración regional de la información de tipo.</span><span class="sxs-lookup"><span data-stu-id="c0a46-880">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="c0a46-881">Puntero al objeto de información de tipo solicitado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-881">A pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="c0a46-882">Para una descripción de este miembro, vea <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-882">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-883">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-883">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c0a46-884">Para obtener más información sobre `IDispatch::GetTypeInfo`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="c0a46-884">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="c0a46-885">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-885">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c0a46-886">Solo se puede utilizar cuando la instancia de <xref:System.Reflection.Emit.ModuleBuilder> se convierte en una interfaz <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-886">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c0a46-887">Al método se le llama de manera enlazada en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="c0a46-887">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ModuleBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ModuleBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="c0a46-888">Ubicación que recibe el número de interfaces de información de tipo proporcionado por el objeto.</span><span class="sxs-lookup"><span data-stu-id="c0a46-888">The location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="c0a46-889">Para una descripción de este miembro, vea <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-889">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.GetTypeInfoCount(System.UInt32@)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-890">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-890">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c0a46-891">Para obtener más información sobre `IDispatch::GetTypeInfoCount`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="c0a46-891">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="c0a46-892">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-892">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c0a46-893">Solo se puede utilizar cuando la instancia de <xref:System.Reflection.Emit.ModuleBuilder> se convierte en una interfaz <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-893">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c0a46-894">Al método se le llama de manera enlazada en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="c0a46-894">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ModuleBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _ModuleBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ModuleBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ModuleBuilder.System#Runtime#InteropServices#_ModuleBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ModuleBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ModuleBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ModuleBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="c0a46-895">Id. de miembro.</span><span class="sxs-lookup"><span data-stu-id="c0a46-895">The member ID.</span></span></param>
        <param name="riid"><span data-ttu-id="c0a46-896">Reservado para un uso futuro.</span><span class="sxs-lookup"><span data-stu-id="c0a46-896">Reserved for future use.</span></span> <span data-ttu-id="c0a46-897">Debe ser IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="c0a46-897">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="c0a46-898">Contexto de la configuración regional en que se interpretan los argumentos.</span><span class="sxs-lookup"><span data-stu-id="c0a46-898">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="c0a46-899">Marcas que describen el contexto de la llamada.</span><span class="sxs-lookup"><span data-stu-id="c0a46-899">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="c0a46-900">Puntero a una estructura que contiene una matriz de argumentos, una matriz de valores DISPID de argumento para argumentos con nombre y recuentos del número de elementos de cada matriz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-900">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="c0a46-901">Puntero a la ubicación donde se va a almacenar el resultado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-901">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="c0a46-902">Puntero a una estructura que contiene información de excepciones.</span><span class="sxs-lookup"><span data-stu-id="c0a46-902">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="c0a46-903">Índice del primer argumento que tiene un error.</span><span class="sxs-lookup"><span data-stu-id="c0a46-903">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="c0a46-904">Para una descripción de este miembro, vea <see cref="M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />.</span><span class="sxs-lookup"><span data-stu-id="c0a46-904">For a description of this member, see <see cref="M:System.Runtime.InteropServices._ModuleBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0a46-905">Este método es para el acceso a las clases administradas desde código no administrado y no debe llamarse desde código administrado.</span><span class="sxs-lookup"><span data-stu-id="c0a46-905">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="c0a46-906">Para obtener más información sobre `IDispatch::Invoke`, vea MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="c0a46-906">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 <span data-ttu-id="c0a46-907">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="c0a46-907">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="c0a46-908">Solo se puede utilizar cuando la instancia de <xref:System.Reflection.Emit.ModuleBuilder> se convierte en una interfaz <xref:System.Runtime.InteropServices._ModuleBuilder>.</span><span class="sxs-lookup"><span data-stu-id="c0a46-908">It can be used only when the <xref:System.Reflection.Emit.ModuleBuilder> instance is cast to an <xref:System.Runtime.InteropServices._ModuleBuilder> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="c0a46-909">Al método se le llama de manera enlazada en tiempo de ejecución mediante la interfaz <c>IDispatch</c> de COM.</span><span class="sxs-lookup"><span data-stu-id="c0a46-909">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
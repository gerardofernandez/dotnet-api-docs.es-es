<Type Name="ErrObject" FullName="Microsoft.VisualBasic.ErrObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="99efa4f2fa97adfbbe2e2ba0ece6a60e4e9943ba" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52221923" /></Metadata><TypeSignature Language="C#" Value="public sealed class ErrObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ErrObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.ErrObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ErrObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ErrObject sealed" />
  <TypeSignature Language="F#" Value="type ErrObject = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="74fa6-101">El módulo <see langword="ErrObject" /> contiene las propiedades y los procedimientos que se utilizan para identificar y controlar los errores en tiempo de ejecución mediante el objeto <see langword="Err" />.</span><span class="sxs-lookup"><span data-stu-id="74fa6-101">The <see langword="ErrObject" /> module contains properties and procedures used to identify and handle run-time errors using the <see langword="Err" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-102">El `ErrObject` módulo admite la `Err` objeto.</span><span class="sxs-lookup"><span data-stu-id="74fa6-102">The `ErrObject` module supports the `Err` object.</span></span> <span data-ttu-id="74fa6-103">Para obtener más información, vea <xref:Microsoft.VisualBasic.Information.Err%2A>.</span><span class="sxs-lookup"><span data-stu-id="74fa6-103">For more information, see <xref:Microsoft.VisualBasic.Information.Err%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-104">En este ejemplo utiliza las propiedades de la `Err` objeto en la construcción de un cuadro de diálogo de mensaje de error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-104">This example uses the properties of the `Err` object in constructing an error-message dialog box.</span></span> <span data-ttu-id="74fa6-105">Tenga en cuenta lo que sucede cuando se usa el `Clear` método primer: al generar un error de Visual Basic con, a continuación, el `Raise` método, los valores predeterminados de Visual Basic se convierten en las propiedades de la `Err` objeto.</span><span class="sxs-lookup"><span data-stu-id="74fa6-105">Notice what happens when you use the `Clear` method first: When you then generate a Visual Basic error with the `Raise` method, Visual Basic's default values become the properties of the `Err` object.</span></span>  
  
```vb  
Dim Msg As String  
' If an error occurs, construct an error message.  
On Error Resume Next   ' Defer error handling.  
Err.Clear  
Err.Raise(6)   ' Generate an "Overflow" error.  
' Check for error, then show message.  
If Err.Number <> 0 Then  
    Msg = "Error # " & Str(Err.Number) & " was generated by " _  
        & Err.Source & ControlChars.CrLf & Err.Description  
    MsgBox(Msg, MsgBoxStyle.Information, "Error")  
End If  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="74fa6-106">Instrucción On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="74fa6-106">On Error Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/statements/try-catch-finally-statement.md"><span data-ttu-id="74fa6-107">Instrucción Try...Catch...Finally (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="74fa6-107">Try...Catch...Finally Statement (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/keywords/index.md"><span data-ttu-id="74fa6-108">Palabras clave de Visual Basic</span><span class="sxs-lookup"><span data-stu-id="74fa6-108">Keywords (Visual Basic)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/language-reference/runtime-library-members.md"><span data-ttu-id="74fa6-109">Miembros de la biblioteca de tiempo de ejecución de Visual Basic</span><span class="sxs-lookup"><span data-stu-id="74fa6-109">Visual Basic Run-Time Library Members</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="errObject.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74fa6-110">Borra todos los valores de propiedad del objeto <see langword="Err" />.</span><span class="sxs-lookup"><span data-stu-id="74fa6-110">Clears all property settings of the <see langword="Err" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-111">Usar `Clear` borrar explícitamente la `Err` objeto después de que se ha controlado un error, como cuando se utiliza aplazado control de errores con `On Error Resume Next`.</span><span class="sxs-lookup"><span data-stu-id="74fa6-111">Use `Clear` to explicitly clear the `Err` object after an error has been handled, such as when you use deferred error handling with `On Error Resume Next`.</span></span> <span data-ttu-id="74fa6-112">El `Clear` se llama al método automáticamente cada vez que se ejecuta alguna de las siguientes instrucciones:</span><span class="sxs-lookup"><span data-stu-id="74fa6-112">The `Clear` method is called automatically whenever any of the following statements executes:</span></span>  
  
-   <span data-ttu-id="74fa6-113">Cualquier tipo de `Resume` instrucción</span><span class="sxs-lookup"><span data-stu-id="74fa6-113">Any type of `Resume` statement</span></span>  
  
-   <span data-ttu-id="74fa6-114">`Exit Sub`, `Exit Function`o `Exit Property`</span><span class="sxs-lookup"><span data-stu-id="74fa6-114">`Exit Sub`, `Exit Function`, or `Exit Property`</span></span>  
  
-   <span data-ttu-id="74fa6-115">Cualquier `On Error` instrucción</span><span class="sxs-lookup"><span data-stu-id="74fa6-115">Any `On Error` statement</span></span>  
  
-   <span data-ttu-id="74fa6-116">Cualquier `Try...Catch...Finally` instrucción</span><span class="sxs-lookup"><span data-stu-id="74fa6-116">Any `Try...Catch...Finally` statement</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="74fa6-117">El `On Error Resume Next` construcción puede ser preferible `On Error GoTo` al controlar errores generados durante el acceso a otros objetos.</span><span class="sxs-lookup"><span data-stu-id="74fa6-117">The `On Error Resume Next` construct may be preferable to `On Error GoTo` when handling errors generated during access to other objects.</span></span> <span data-ttu-id="74fa6-118">Comprobando `Err` después de cada interacción con un objeto elimina la ambigüedad sobre qué objeto se obtuvo acceso por el código: puede estar seguro de qué objeto coloca el código de error `Err.Number`, así como el objeto que generó originalmente el error (el objeto se especifica en `Err.Source`).</span><span class="sxs-lookup"><span data-stu-id="74fa6-118">Checking `Err` after each interaction with an object removes ambiguity about which object was accessed by the code: You can be sure which object placed the error code in `Err.Number`, as well as which object originally generated the error (the object specified in `Err.Source`).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-119">Este ejemplo se usa el `Err` del objeto `Clear` método para restablecer las propiedades numéricas de la `Err` objeto a cero y sus propiedades de cadena a cadenas de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="74fa6-119">This example uses the `Err` object's `Clear` method to reset the numeric properties of the `Err` object to zero and its string properties to zero-length strings.</span></span> <span data-ttu-id="74fa6-120">Sin la llamada a `Clear`, la segunda llamada a `MsgBox` mostraría el mismo mensaje de error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-120">Without the call to `Clear`, the second call to `MsgBox` would display the same error message.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="74fa6-121">Instrucción On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="74fa6-121">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74fa6-122">Devuelve o establece una expresión de tipo <see langword="String" /> que contiene una cadena descriptiva asociada a un error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-122">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="74fa6-123">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-123">Read/write.</span></span></summary>
        <value><span data-ttu-id="74fa6-124">Devuelve o establece una expresión de tipo <see langword="String" /> que contiene una cadena descriptiva asociada a un error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-124">Returns or sets a <see langword="String" /> expression containing a descriptive string associated with an error.</span></span> <span data-ttu-id="74fa6-125">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-125">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-126">El `Description` configuración de la propiedad consta de una breve descripción del error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-126">The `Description` property setting consists of a short description of the error.</span></span> <span data-ttu-id="74fa6-127">Utilice esta propiedad para avisar al usuario a un error que no puede o no desea controlar.</span><span class="sxs-lookup"><span data-stu-id="74fa6-127">Use this property to alert the user to an error that you cannot or do not want to handle.</span></span> <span data-ttu-id="74fa6-128">Cuando se genera un error definido por el usuario, asigne una breve descripción de su error a la `Description` propiedad.</span><span class="sxs-lookup"><span data-stu-id="74fa6-128">When generating a user-defined error, assign a short description of your error to the `Description` property.</span></span> <span data-ttu-id="74fa6-129">Si el `Description` propiedad no se ha rellenado y el valor de la <xref:Microsoft.VisualBasic.ErrObject.Number%2A> propiedad se corresponde con un error de tiempo de ejecución de Visual Basic y, después, la cadena devuelta por la <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> función está establecida el `Description` propiedad cuando se genera el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-129">If the `Description` property is not filled in, and the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property corresponds to a Visual Basic run-time error, then the string returned by the <xref:Microsoft.VisualBasic.Conversion.ErrorToString%2A> function is set in the `Description` property when the error is generated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-130">Este ejemplo asigna un mensaje definido por el usuario para el `Description` propiedad de la `Err` objeto.</span><span class="sxs-lookup"><span data-stu-id="74fa6-130">This example assigns a user-defined message to the `Description` property of the `Err` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Erl">
      <MemberSignature Language="C#" Value="public int Erl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Erl" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Erl As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Erl { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Erl : int" Usage="Microsoft.VisualBasic.ErrObject.Erl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74fa6-131">Devuelve un entero que indica el número de línea de la última instrucción ejecutada</span><span class="sxs-lookup"><span data-stu-id="74fa6-131">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="74fa6-132">Sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-132">Read-only.</span></span></summary>
        <value><span data-ttu-id="74fa6-133">Devuelve un entero que indica el número de línea de la última instrucción ejecutada</span><span class="sxs-lookup"><span data-stu-id="74fa6-133">Returns an integer indicating the line number of the last executed statement.</span></span> <span data-ttu-id="74fa6-134">Sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-134">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-135">Visual Basic encuentra sin números de línea, devuelve 0.</span><span class="sxs-lookup"><span data-stu-id="74fa6-135">If Visual Basic encounters no line numbers, it returns 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-136">Este ejemplo se usa el `Erl` propiedad para indicar el número de línea.</span><span class="sxs-lookup"><span data-stu-id="74fa6-136">This example uses the `Erl` property to indicate the line number.</span></span>  
  
```  
10:     On Error Resume Next  
20:     Err.Raise(60000)  
' Returns 20.  
30:     MsgBox(Erl())  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="GetException">
      <MemberSignature Language="C#" Value="public Exception GetException ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Exception GetException() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.GetException" />
      <MemberSignature Language="VB.NET" Value="Public Function GetException () As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Exception ^ GetException();" />
      <MemberSignature Language="F#" Value="member this.GetException : unit -&gt; Exception" Usage="errObject.GetException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="74fa6-137">Devuelve la excepción que representa el error que se ha producido.</span><span class="sxs-lookup"><span data-stu-id="74fa6-137">Returns the exception representing the error that occurred.</span></span></summary>
        <returns><span data-ttu-id="74fa6-138">Devuelve la excepción que representa el error que se ha producido.</span><span class="sxs-lookup"><span data-stu-id="74fa6-138">Returns the exception representing the error that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-139">El `GetException` función sólo está disponible desde el `Err` clase de objeto.</span><span class="sxs-lookup"><span data-stu-id="74fa6-139">The `GetException` function is available only from the `Err` object class.</span></span> <span data-ttu-id="74fa6-140">Funciona con el `Exception` propiedad de la `Err` objeto para mostrar el error que se ha producido.</span><span class="sxs-lookup"><span data-stu-id="74fa6-140">It works with the `Exception` property of the `Err` object to display the error that has occurred.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-141">El código siguiente muestra el mensaje asignado a la excepción en el `Err` objeto:</span><span class="sxs-lookup"><span data-stu-id="74fa6-141">The following code displays the message assigned to the exception in the `Err` object:</span></span>  
  
 [!code-vb[VbVbalrCatRef#66](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCatRef/VB/Class1.vb#66)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpContext">
      <MemberSignature Language="C#" Value="public int HelpContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HelpContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpContext As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HelpContext { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.HelpContext : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74fa6-142">Devuelve o establece un valor <see langword="Integer" /> que contiene el identificador de contexto de un tema en un archivo de Ayuda.</span><span class="sxs-lookup"><span data-stu-id="74fa6-142">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="74fa6-143">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-143">Read/write.</span></span></summary>
        <value><span data-ttu-id="74fa6-144">Devuelve o establece un valor <see langword="Integer" /> que contiene el identificador de contexto de un tema en un archivo de Ayuda.</span><span class="sxs-lookup"><span data-stu-id="74fa6-144">Returns or sets an <see langword="Integer" /> containing the context ID for a topic in a Help file.</span></span> <span data-ttu-id="74fa6-145">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-145">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-146">El `HelpContext` propiedad se utiliza para mostrar Ayuda contextual para una aplicación.</span><span class="sxs-lookup"><span data-stu-id="74fa6-146">The `HelpContext` property is used to display context-sensitive Help for an application.</span></span> <span data-ttu-id="74fa6-147">Si se especifica un archivo de ayuda en `HelpFile`, el `HelpContext` propiedad se utiliza para mostrar automáticamente el archivo de Ayuda identificado.</span><span class="sxs-lookup"><span data-stu-id="74fa6-147">If a Help file is specified in `HelpFile`, the `HelpContext` property is used to automatically display the Help file identified.</span></span> <span data-ttu-id="74fa6-148">Si tanto el `HelpFile` y `HelpContext` propiedades están vacías, el valor de la <xref:Microsoft.VisualBasic.ErrObject.Number%2A> se comprueba la propiedad.</span><span class="sxs-lookup"><span data-stu-id="74fa6-148">If both the `HelpFile` and `HelpContext` properties are empty, the value of the <xref:Microsoft.VisualBasic.ErrObject.Number%2A> property  is checked.</span></span> <span data-ttu-id="74fa6-149">Si el valor de la `Number` propiedad se corresponde con un valor de error de tiempo de ejecución de Visual Basic, a continuación, se usa el identificador de contexto de Ayuda de Visual Basic para el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-149">If the value of the `Number` property corresponds to a Visual Basic run-time error value, then the Visual Basic Help context ID for the error is used.</span></span> <span data-ttu-id="74fa6-150">Si el valor de la `Number` propiedad no corresponde a un error de Visual Basic, se muestra la pantalla de contenido para el archivo de Ayuda de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="74fa6-150">If the value of the `Number` property does not correspond to a Visual Basic error, the contents screen for the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74fa6-151">Debe escribir rutinas en la aplicación para controlar los errores típicos.</span><span class="sxs-lookup"><span data-stu-id="74fa6-151">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="74fa6-152">Al programar con un objeto, puede usar el archivo de Ayuda del objeto para mejorar la calidad de sus errores, o para mostrar un mensaje descriptivo al usuario si el error no es recuperable.</span><span class="sxs-lookup"><span data-stu-id="74fa6-152">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-153">Este ejemplo se usa el `HelpContext` propiedad de la `Err` objeto para mostrar el tema de Ayuda de Visual Basic para el `Overflow` error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-153">This example uses the `HelpContext` property of the `Err` object to show the Visual Basic Help topic for the `Overflow` error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="HelpFile">
      <MemberSignature Language="C#" Value="public string HelpFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpFile : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.HelpFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74fa6-154">Devuelve o establece una expresión de tipo <see langword="String" /> que contiene la ruta de acceso completa a un archivo de Ayuda.</span><span class="sxs-lookup"><span data-stu-id="74fa6-154">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="74fa6-155">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-155">Read/write.</span></span></summary>
        <value><span data-ttu-id="74fa6-156">Devuelve o establece una expresión de tipo <see langword="String" /> que contiene la ruta de acceso completa a un archivo de Ayuda.</span><span class="sxs-lookup"><span data-stu-id="74fa6-156">Returns or sets a <see langword="String" /> expression containing the fully qualified path to a Help file.</span></span> <span data-ttu-id="74fa6-157">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-157">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-158">Si se especifica un archivo de ayuda mediante el `HelpFile` propiedad, se llama automáticamente cuando el usuario presiona la tecla de ayuda (o la tecla F1) en el cuadro de diálogo de mensaje de error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-158">If a Help file is specified by the `HelpFile` property, it is automatically called when the user presses the Help key (or the F1 key) in the error message dialog box.</span></span> <span data-ttu-id="74fa6-159">Si el `HelpContext` propiedad contiene un contexto válido de identificador para el archivo especificado, ese tema se muestra automáticamente.</span><span class="sxs-lookup"><span data-stu-id="74fa6-159">If the `HelpContext` property contains a valid context ID for the specified file, that topic is automatically displayed.</span></span> <span data-ttu-id="74fa6-160">Si no hay ningún `HelpFile` se especifica, se muestra el archivo de Ayuda de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="74fa6-160">If no `HelpFile` is specified, the Visual Basic Help file is displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74fa6-161">Debe escribir rutinas en la aplicación para controlar los errores típicos.</span><span class="sxs-lookup"><span data-stu-id="74fa6-161">You should write routines in your application to handle typical errors.</span></span> <span data-ttu-id="74fa6-162">Al programar con un objeto, puede usar el archivo de Ayuda del objeto para mejorar la calidad de sus errores, o para mostrar un mensaje descriptivo al usuario si el error no es recuperable.</span><span class="sxs-lookup"><span data-stu-id="74fa6-162">When programming with an object, you can use the object's Help file to improve the quality of your error handling, or to display a meaningful message to your user if the error is not recoverable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-163">Este ejemplo se usa el `HelpFile` propiedad de la `Err` objeto para iniciar el sistema de ayuda.</span><span class="sxs-lookup"><span data-stu-id="74fa6-163">This example uses the `HelpFile` property of the `Err` object to start the Help system.</span></span> <span data-ttu-id="74fa6-164">De forma predeterminada, el `HelpFile` propiedad contiene el nombre del archivo de Ayuda de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="74fa6-164">By default, the `HelpFile` property contains the name of the Visual Basic Help file.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="LastDllError">
      <MemberSignature Language="C#" Value="public int LastDllError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LastDllError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastDllError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LastDllError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LastDllError : int" Usage="Microsoft.VisualBasic.ErrObject.LastDllError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74fa6-165">Devuelve un código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (archivo DLL).</span><span class="sxs-lookup"><span data-stu-id="74fa6-165">Returns a system error code produced by a call to a dynamic-link library (DLL).</span></span> <span data-ttu-id="74fa6-166">Sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-166">Read-only.</span></span></summary>
        <value><span data-ttu-id="74fa6-167">Devuelve un código de error del sistema generado por una llamada a una biblioteca de vínculos dinámicos (archivo DLL).</span><span class="sxs-lookup"><span data-stu-id="74fa6-167">Returns a system error code produced by a call to a dynamic-link library (DLL).</span></span> <span data-ttu-id="74fa6-168">Sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-168">Read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-169">El <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propiedad solo se aplica a las llamadas DLL realizadas desde código de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="74fa6-169">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property applies only to DLL calls made from Visual Basic code.</span></span> <span data-ttu-id="74fa6-170">Cuando se realiza una de estas llamadas, la función llamada normalmente devolverá un código que indica éxito o error y el <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> se rellena la propiedad.</span><span class="sxs-lookup"><span data-stu-id="74fa6-170">When such a call is made, the called function usually returns a code indicating success or failure, and the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is filled.</span></span> <span data-ttu-id="74fa6-171">Consulte la documentación de las funciones de DLL determinar los valores devueltos que indican el éxito o error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-171">Check the documentation for the DLL's functions to determine the return values that indicate success or failure.</span></span> <span data-ttu-id="74fa6-172">Cada vez que se devuelve el código de error, la aplicación de Visual Basic debe comprobar inmediatamente el <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="74fa6-172">Whenever the failure code is returned, the Visual Basic application should immediately check the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property.</span></span> <span data-ttu-id="74fa6-173">Se genera ninguna excepción cuando la <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="74fa6-173">No exception is raised when the <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="74fa6-174">El <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> propiedad está protegida por <xref:System.Security.Permissions.SecurityAction.LinkDemand>, lo que ayuda a evita que se tiene acceso desde código no seguro.</span><span class="sxs-lookup"><span data-stu-id="74fa6-174">The <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> property is protected by <xref:System.Security.Permissions.SecurityAction.LinkDemand>, which helps prevent it from being accessed from untrusted code.</span></span> <span data-ttu-id="74fa6-175">Sin embargo, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requiere solo el llamador inmediato tiene <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permiso.</span><span class="sxs-lookup"><span data-stu-id="74fa6-175">However, <xref:System.Security.Permissions.SecurityAction.LinkDemand> requires only the immediate caller to have <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A> permission.</span></span> <span data-ttu-id="74fa6-176">Si el código se puede llamar desde código de confianza parcial, exponiendo el valor de <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> sin validación es un riesgo de seguridad.</span><span class="sxs-lookup"><span data-stu-id="74fa6-176">If your code can be called from partially trusted code, exposing the value of <xref:Microsoft.VisualBasic.ErrObject.LastDllError%2A> without validation is a security risk.</span></span>  
>   
>  <span data-ttu-id="74fa6-177">Para conocer las limitaciones importantes acerca de cómo usar el <xref:System.Security.Permissions.SecurityAction.LinkDemand> miembro, vea [frente a la demanda. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span><span class="sxs-lookup"><span data-stu-id="74fa6-177">For important limitations about how to use the <xref:System.Security.Permissions.SecurityAction.LinkDemand> member, see [Demand vs. LinkDemand](https://msdn.microsoft.com/library/1ab877f2-70f4-4e0d-8116-943999dfe8f5).</span></span> <span data-ttu-id="74fa6-178">Para obtener más información acerca de los permisos, consulte <xref:System.Security.Permissions.SecurityPermission> y [permisos de acceso del código](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span><span class="sxs-lookup"><span data-stu-id="74fa6-178">For more information about permissions, see <xref:System.Security.Permissions.SecurityPermission> and [Code Access Permissions](https://msdn.microsoft.com/library/e5ae402f-6dda-4732-bbe8-77296630f675).</span></span>  
  
 <span data-ttu-id="74fa6-179">Tenga en cuenta para dispositivos inteligentes que esta propiedad devuelve siempre cero.</span><span class="sxs-lookup"><span data-stu-id="74fa6-179">Note   For smart devices this property always returns zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-180">El ejemplo siguiente muestra cómo puede usar el `LastDllError` propiedad después de llamar a una función de la API de Windows.</span><span class="sxs-lookup"><span data-stu-id="74fa6-180">The following example shows how you can use the `LastDllError` property after calling a function in the Windows API.</span></span> <span data-ttu-id="74fa6-181">El `PrintWindowCoordinates` procedimiento toma un identificador a una ventana y llama a la `GetWindowRect` función.</span><span class="sxs-lookup"><span data-stu-id="74fa6-181">The `PrintWindowCoordinates` procedure takes a handle to a window and calls the `GetWindowRect` function.</span></span> <span data-ttu-id="74fa6-182">`GetWindowRect` rellena la estructura de datos RECT con las longitudes de los lados del rectángulo que componen la ventana.</span><span class="sxs-lookup"><span data-stu-id="74fa6-182">`GetWindowRect` fills the RECT data structure with the lengths of the sides of the rectangle that make up the window.</span></span> <span data-ttu-id="74fa6-183">Si se pasa un identificador no válido, se produce un error y el número de error está disponible a través de la `LastDllError` propiedad.</span><span class="sxs-lookup"><span data-stu-id="74fa6-183">If you pass an invalid handle, an error occurs, and the error number is available through the `LastDllError` property.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#8)]  
[!code-vb[VbVbalrErrorHandling#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#9)]  
[!code-vb[VbVbalrErrorHandling#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#10)]  
  
 [!code-vb[VbVbalrErrorHandling#11](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public int Number { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Number" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Number" />
      <MemberSignature Language="VB.NET" Value="Public Property Number As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Number { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Number : int with get, set" Usage="Microsoft.VisualBasic.ErrObject.Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74fa6-184">Devuelve o establece un valor numérico que especifica un error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-184">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="74fa6-185">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-185">Read/write.</span></span></summary>
        <value><span data-ttu-id="74fa6-186">Devuelve o establece un valor numérico que especifica un error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-186">Returns or sets a numeric value specifying an error.</span></span> <span data-ttu-id="74fa6-187">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-187">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-188">Todos los `Raise` argumentos, excepto `Number` son opcionales.</span><span class="sxs-lookup"><span data-stu-id="74fa6-188">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="74fa6-189">Si omite los argumentos opcionales y los valores de propiedad de la `Err` objeto contienen valores que no se han borrado, dichos valores actúan como valores para el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-189">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="74fa6-190">Dado que el `Err` object proporciona información más completa que cuando se generan errores con el `Error` instrucción, `Raise` es útil para generar errores al escribir módulos de clase.</span><span class="sxs-lookup"><span data-stu-id="74fa6-190">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="74fa6-191">Por ejemplo, con el `Raise` método, se puede especificar el origen que generó el error en la `Source` propiedad, puede hacer referencia a la Ayuda en línea del error y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="74fa6-191">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
 <span data-ttu-id="74fa6-192">Cuando se devuelva un error definido por el usuario desde un objeto, establecer `Err.Number` agregando el número seleccionado como código de error a la `VbObjectError` constante.</span><span class="sxs-lookup"><span data-stu-id="74fa6-192">When returning a user-defined error from an object, set `Err.Number` by adding the number you selected as an error code to the `VbObjectError` constant.</span></span> <span data-ttu-id="74fa6-193">Por ejemplo, usa el siguiente código para devolver el número 1051 como código de error:</span><span class="sxs-lookup"><span data-stu-id="74fa6-193">For example, you use the following code to return the number 1051 as an error code:</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#13](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-194">En este ejemplo se muestra un uso típico de la `Number` propiedad en una rutina de control de errores.</span><span class="sxs-lookup"><span data-stu-id="74fa6-194">This example illustrates a typical use of the `Number` property in an error-handling routine.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#12)]  
  
 <span data-ttu-id="74fa6-195">Este ejemplo se usa el `Err` del objeto `Raise` método para generar un error original en una función escrita en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="74fa6-195">This example uses the `Err` object's `Raise` method to generate an original error within a function written in Visual Basic.</span></span> <span data-ttu-id="74fa6-196">La función de llamada puede detectar el error y notificarlo al usuario.</span><span class="sxs-lookup"><span data-stu-id="74fa6-196">The calling function can catch the error and report it to the user.</span></span> <span data-ttu-id="74fa6-197">Observe que el procedimiento `CallingProcedure` contrasta el tipo de información que se puede derivar de un `Err` objeto con la información que se puede derivar de un `Exception` objeto.</span><span class="sxs-lookup"><span data-stu-id="74fa6-197">Notice that procedure `CallingProcedure` contrasts the type of information that you can derive from an `Err` object with the information that you can derive from an `Exception` object.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="74fa6-198"><paramref name="Number" /> es mayor que 65535.</span><span class="sxs-lookup"><span data-stu-id="74fa6-198"><paramref name="Number" /> is greater than 65535.</span></span></exception>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
      </Docs>
    </Member>
    <Member MemberName="Raise">
      <MemberSignature Language="C#" Value="public void Raise (int Number, object Source = null, object Description = null, object HelpFile = null, object HelpContext = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Raise(int32 Number, object Source, object Description, object HelpFile, object HelpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.ErrObject.Raise(System.Int32,System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Raise (Number As Integer, Optional Source As Object = null, Optional Description As Object = null, Optional HelpFile As Object = null, Optional HelpContext As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Raise : int * obj * obj * obj * obj -&gt; unit" Usage="errObject.Raise (Number, Source, Description, HelpFile, HelpContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Number" Type="System.Int32" />
        <Parameter Name="Source" Type="System.Object" />
        <Parameter Name="Description" Type="System.Object" />
        <Parameter Name="HelpFile" Type="System.Object" />
        <Parameter Name="HelpContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Number"><span data-ttu-id="74fa6-199">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="74fa6-199">Required.</span></span> <span data-ttu-id="74fa6-200">Entero de tipo <see langword="Long" /> que identifica la naturaleza del error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-200"><see langword="Long" /> integer that identifies the nature of the error.</span></span> <span data-ttu-id="74fa6-201">Los errores de Visual Basic vienen indicados por el intervalo 0-65535, el intervalo 0-512 queda reservado para los errores del sistema y el intervalo 513-65535 es para los errores definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="74fa6-201">Visual Basic errors are in the range 0–65535; the range 0–512 is reserved for system errors; the range 513–65535 is available for user-defined errors.</span></span> <span data-ttu-id="74fa6-202">Cuando se establece el valor de la propiedad <see langword="Number" /> en un código de error propio en un módulo de clase, se suma el número del código de error a la constante <see langword="vbObjectError" />.</span><span class="sxs-lookup"><span data-stu-id="74fa6-202">When setting the <see langword="Number" /> property to your own error code in a class module, you add your error code number to the <see langword="vbObjectError" /> constant.</span></span> <span data-ttu-id="74fa6-203">Por ejemplo, para generar el número de error 513, asigne <c>vbObjectError + 513</c> a la propiedad <see langword="Number" />.</span><span class="sxs-lookup"><span data-stu-id="74fa6-203">For example, to generate the error number 513, assign <c>vbObjectError + 513</c> to the <see langword="Number" /> property.</span></span></param>
        <param name="Source"><span data-ttu-id="74fa6-204">Opcional.</span><span class="sxs-lookup"><span data-stu-id="74fa6-204">Optional.</span></span> <span data-ttu-id="74fa6-205">Expresión de tipo <see langword="String" /> que denomina el objeto o la aplicación que generó el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-205"><see langword="String" /> expression naming the object or application that generated the error.</span></span> <span data-ttu-id="74fa6-206">Al establecer esta propiedad para un objeto, use el formato <c>project</c>.<c>class</c>.</span><span class="sxs-lookup"><span data-stu-id="74fa6-206">When setting this property for an object, use the form <c>project</c>.<c>class</c>.</span></span> <span data-ttu-id="74fa6-207">Si no se especifica <paramref name="Source" />, se utiliza el identificador de proceso del actual proyecto de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="74fa6-207">If <paramref name="Source" /> is not specified, the process ID of the current Visual Basic project is used.</span></span></param>
        <param name="Description"><span data-ttu-id="74fa6-208">Opcional.</span><span class="sxs-lookup"><span data-stu-id="74fa6-208">Optional.</span></span> <span data-ttu-id="74fa6-209">Expresión de tipo <see langword="String" /> que describe el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-209"><see langword="String" /> expression describing the error.</span></span> <span data-ttu-id="74fa6-210">Si no se especifica, se examina el valor de la propiedad <see langword="Number" />.</span><span class="sxs-lookup"><span data-stu-id="74fa6-210">If unspecified, the value in the <see langword="Number" /> property is examined.</span></span> <span data-ttu-id="74fa6-211">Si se puede asignar a un código de error en tiempo de ejecución de Visual Basic, la cadena que devuelva la función <see langword="Error" /> se utilizará como la propiedad <see langword="Description" />.</span><span class="sxs-lookup"><span data-stu-id="74fa6-211">If it can be mapped to a Visual Basic run-time error code, the string that would be returned by the <see langword="Error" /> function is used as the <see langword="Description" /> property.</span></span> <span data-ttu-id="74fa6-212">Si hay ningún error de Visual Basic que corresponda a la propiedad <see langword="Number" />, se utiliza el mensaje "Error definido por la aplicación o por el objeto".</span><span class="sxs-lookup"><span data-stu-id="74fa6-212">If there is no Visual Basic error corresponding to the <see langword="Number" /> property, the "Application-defined or object-defined error" message is used.</span></span></param>
        <param name="HelpFile"><span data-ttu-id="74fa6-213">Opcional.</span><span class="sxs-lookup"><span data-stu-id="74fa6-213">Optional.</span></span> <span data-ttu-id="74fa6-214">Ruta de acceso completa al archivo de Ayuda referente a este error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-214">The fully qualified path to the Help file in which help on this error can be found.</span></span> <span data-ttu-id="74fa6-215">Si no se especifica, Visual Basic utiliza la unidad, la ruta de acceso y el nombre completos del archivo de Ayuda de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="74fa6-215">If unspecified, Visual Basic uses the fully qualified drive, path, and file name of the Visual Basic Help file.</span></span></param>
        <param name="HelpContext"><span data-ttu-id="74fa6-216">Opcional.</span><span class="sxs-lookup"><span data-stu-id="74fa6-216">Optional.</span></span> <span data-ttu-id="74fa6-217">Identificador de contexto que identifica un tema dentro del <paramref name="HelpFile" /> que proporciona ayuda para el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-217">The context ID identifying a topic within <paramref name="HelpFile" /> that provides help for the error.</span></span> <span data-ttu-id="74fa6-218">Si no se especifica, se utiliza el identificador de contexto del archivo de Ayuda de Visual Basic correspondiente a la propiedad <see langword="Number" /> si existe.</span><span class="sxs-lookup"><span data-stu-id="74fa6-218">If omitted, the Visual Basic Help-file context ID for the error corresponding to the <see langword="Number" /> property is used, if it exists.</span></span></param>
        <summary><span data-ttu-id="74fa6-219">Genera un error en tiempo de ejecución; se puede utilizar en lugar de la instrucción <see langword="Error" />.</span><span class="sxs-lookup"><span data-stu-id="74fa6-219">Generates a run-time error; can be used instead of the <see langword="Error" /> statement.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-220">Todos los `Raise` argumentos, excepto `Number` son opcionales.</span><span class="sxs-lookup"><span data-stu-id="74fa6-220">All of the `Raise` arguments except `Number` are optional.</span></span> <span data-ttu-id="74fa6-221">Si omite los argumentos opcionales y los valores de propiedad de la `Err` objeto contienen valores que no se han borrado, dichos valores actúan como valores para el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-221">If you omit optional arguments, and the property settings of the `Err` object contain values that have not been cleared, those values serve as the values for your error.</span></span>  
  
 <span data-ttu-id="74fa6-222">Dado que el `Err` object proporciona información más completa que cuando se generan errores con el `Error` instrucción, `Raise` es útil para generar errores al escribir módulos de clase.</span><span class="sxs-lookup"><span data-stu-id="74fa6-222">Because the `Err` object gives richer information than when you generate errors with the `Error` statement, `Raise` is useful for generating errors when writing class modules.</span></span> <span data-ttu-id="74fa6-223">Por ejemplo, con el `Raise` método, se puede especificar el origen que generó el error en la `Source` propiedad, puede hacer referencia a la Ayuda en línea del error y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="74fa6-223">For example, with the `Raise` method, the source that generated the error can be specified in the `Source` property, online Help for the error can be referenced, and so on.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-224">Este ejemplo se usa el `Err` del objeto `Raise` método para generar un error en una función escrita en Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="74fa6-224">This example uses the `Err` object's `Raise` method to generate an error within a function written in Visual Basic.</span></span> <span data-ttu-id="74fa6-225">La función de llamada puede detectar el error y notificarlo al usuario con un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="74fa6-225">The calling function can catch the error and report it to the user with a message box.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#14](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <altmember cref="T:System.ArgumentException" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/error-statement.md"><span data-ttu-id="74fa6-226">Error (Instrucción)</span><span class="sxs-lookup"><span data-stu-id="74fa6-226">Error Statement</span></span></related>
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="74fa6-227">Instrucción On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="74fa6-227">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public string Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Source" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.ErrObject.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Source { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : string with get, set" Usage="Microsoft.VisualBasic.ErrObject.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74fa6-228">Devuelve o establece una expresión de tipo <see langword="String" /> que especifica el nombre del objeto o de la aplicación que generó originalmente el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-228">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="74fa6-229">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-229">Read/write.</span></span></summary>
        <value><span data-ttu-id="74fa6-230">Devuelve o establece una expresión de tipo <see langword="String" /> que especifica el nombre del objeto o de la aplicación que generó originalmente el error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-230">Returns or sets a <see langword="String" /> expression specifying the name of the object or application that originally generated the error.</span></span> <span data-ttu-id="74fa6-231">Lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="74fa6-231">Read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74fa6-232">El `Source` propiedad especifica un `String` expresión que representa el objeto que generó el error; la expresión normalmente es nombre de clase del objeto o identificador de proceso.</span><span class="sxs-lookup"><span data-stu-id="74fa6-232">The `Source` property specifies a `String` expression representing the object that generated the error; the expression is usually the object's class name or process ID.</span></span> <span data-ttu-id="74fa6-233">Use el `Source` propiedad para proporcionar información cuando el código no se puede controlar un error generado en un objeto que se tiene acceso.</span><span class="sxs-lookup"><span data-stu-id="74fa6-233">Use the `Source` property to provide information when your code is unable to handle an error generated in an accessed object.</span></span> <span data-ttu-id="74fa6-234">Por ejemplo, si tiene acceso a Microsoft Excel y se genera un `Division by zero` error, Microsoft Excel establece `Err.Number` a su código de error para ese error y los conjuntos `Source` en "Excel.Application".</span><span class="sxs-lookup"><span data-stu-id="74fa6-234">For example, if you access Microsoft Excel and it generates a `Division by zero` error, Microsoft Excel sets `Err.Number` to its error code for that error and sets `Source` to "Excel.Application".</span></span>  
  
 <span data-ttu-id="74fa6-235">Cuando la aplicación genera un error desde el código, `Source` es el identificador de programación de. la aplicación</span><span class="sxs-lookup"><span data-stu-id="74fa6-235">When the application is generating an error from code, `Source` is your application's programmatic ID.</span></span> <span data-ttu-id="74fa6-236">Dentro de una clase, `Source` debería contener un nombre que tiene el formato *proyecto*. *clase*.</span><span class="sxs-lookup"><span data-stu-id="74fa6-236">Within a class, `Source` should contain a name having the form *project*.*class*.</span></span> <span data-ttu-id="74fa6-237">Cuando se produce un error inesperado en el código, el `Source` propiedad se rellena automáticamente.</span><span class="sxs-lookup"><span data-stu-id="74fa6-237">When an unexpected error occurs in your code, the `Source` property is automatically filled in.</span></span> <span data-ttu-id="74fa6-238">Si hay errores en un módulo, `Source` contiene el nombre del proyecto.</span><span class="sxs-lookup"><span data-stu-id="74fa6-238">For errors in a module, `Source` contains the project name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74fa6-239">En este ejemplo se muestra el uso de la `Source` propiedad en una rutina de control de errores habitual.</span><span class="sxs-lookup"><span data-stu-id="74fa6-239">This example demonstrates the use of the `Source` property in a typical error-handling routine.</span></span> <span data-ttu-id="74fa6-240">Cuando se produce un error de `Class1`, la cadena `"Class1"` se asigna a la `Source` propiedad de la `Err` objeto.</span><span class="sxs-lookup"><span data-stu-id="74fa6-240">When an error is raised from `Class1`, the string `"Class1"` is assigned to the `Source` property of the `Err` object.</span></span> <span data-ttu-id="74fa6-241">Esta cadena se muestra a continuación, en un mensaje informativo que indica el origen y el número de error.</span><span class="sxs-lookup"><span data-stu-id="74fa6-241">This string is then displayed in an informative message indicating the source and number of the error.</span></span>  
  
 [!code-vb[VbVbalrErrorHandling#15](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrErrorHandling/VB/Class1.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Information.Err" />
        <altmember cref="M:Microsoft.VisualBasic.Conversion.ErrorToString" />
        <related type="Article" href="~/docs/visual-basic/language-reference/statements/on-error-statement.md"><span data-ttu-id="74fa6-242">Instrucción On Error (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="74fa6-242">On Error Statement (Visual Basic)</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
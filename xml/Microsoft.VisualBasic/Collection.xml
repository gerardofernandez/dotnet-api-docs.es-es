<Type Name="Collection" FullName="Microsoft.VisualBasic.Collection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5347d5c8039df45d4a22ad4c9c33925b67ae00a2" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57941079" /></Metadata><TypeSignature Language="C#" Value="public sealed class Collection : System.Collections.IList, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Collection extends System.Object implements class System.Collections.ICollection, class System.Collections.IList, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Collection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Collection&#xA;Implements IDeserializationCallback, IList, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Collection sealed : System::Collections::IList, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Collection = class&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Collection/CollectionDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c9af6-101">Una <see langword="Collection" /> de Visual Basic es un conjunto ordenado de elementos a los que se puede hacer referencia como una unidad.</span><span class="sxs-lookup"><span data-stu-id="c9af6-101">A Visual Basic <see langword="Collection" /> is an ordered set of items that can be referred to as a unit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c9af6-102">Siempre que sea posible, debe usar las colecciones genéricas en el <xref:System.Collections.Generic?displayProperty=nameWithType> espacio de nombres o el <xref:System.Collections.Concurrent> espacio de nombres en lugar de Visual Basic `Collection`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-102">Whenever possible, you should use the generic collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace or the <xref:System.Collections.Concurrent> namespace instead of a Visual Basic `Collection`.</span></span> <span data-ttu-id="c9af6-103">Para obtener más información, consulte [colecciones](https://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span><span class="sxs-lookup"><span data-stu-id="c9af6-103">For more information, see [Collections](https://msdn.microsoft.com/library/e76533a9-5033-4a0b-b003-9c2be60d185b).</span></span>  
  
 <span data-ttu-id="c9af6-104">Visual Basic `Collection` objeto proporciona una manera cómoda para hacer referencia a un grupo de elementos relacionado como un único objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-104">The Visual Basic `Collection` object provides a convenient way to refer to a related group of items as a single object.</span></span> <span data-ttu-id="c9af6-105">Los elementos, o *elementos*, en una colección sólo necesita estar relacionada por el hecho de que se encuentran en la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-105">The items, or *elements*, in a collection need only be related by the fact that they exist in the collection.</span></span> <span data-ttu-id="c9af6-106">Elementos de una colección no es necesario que compartir el mismo tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="c9af6-106">Elements of a collection do not have to share the same data type.</span></span>  
  
 <span data-ttu-id="c9af6-107">Puede crear una colección del mismo modo, crear otros objetos, como se muestra en el ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="c9af6-107">You can create a collection the same way you create other objects, as the following example illustrates.</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="c9af6-108">Una vez haya creado una colección, puede realizar cualquiera de las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c9af6-108">Once you have created a collection, you can do any of the following:</span></span>  
  
-   <span data-ttu-id="c9af6-109">Agregar un elemento con el <xref:Microsoft.VisualBasic.Collection.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c9af6-109">Add an element with the <xref:Microsoft.VisualBasic.Collection.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="c9af6-110">Quitar un elemento con el <xref:Microsoft.VisualBasic.Collection.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c9af6-110">Remove an element with the <xref:Microsoft.VisualBasic.Collection.Remove%2A> method.</span></span>  
  
-   <span data-ttu-id="c9af6-111">Quitar todos los elementos con el <xref:Microsoft.VisualBasic.Collection.Clear%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c9af6-111">Remove all elements with the <xref:Microsoft.VisualBasic.Collection.Clear%2A> method.</span></span>  
  
-   <span data-ttu-id="c9af6-112">Averigüe cuántos elementos contiene la colección con el <xref:Microsoft.VisualBasic.Collection.Count%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c9af6-112">Find out how many elements the collection contains with the <xref:Microsoft.VisualBasic.Collection.Count%2A> property.</span></span>  
  
-   <span data-ttu-id="c9af6-113">Compruebe si se encuentra con un elemento específico del <xref:Microsoft.VisualBasic.Collection.Contains%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c9af6-113">Check whether a specific element is present with the <xref:Microsoft.VisualBasic.Collection.Contains%2A> method.</span></span>  
  
-   <span data-ttu-id="c9af6-114">Devolver un elemento específico de la colección con el <xref:Microsoft.VisualBasic.Collection.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c9af6-114">Return a specific element from the collection with the <xref:Microsoft.VisualBasic.Collection.Item%2A> property.</span></span>  
  
-   <span data-ttu-id="c9af6-115">Recorrer en iteración la colección completa con el [For Each... Instrucción Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c9af6-115">Iterate through the entire collection with the [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c9af6-116">Aunque Visual Basic `Collection` objeto tiene una funcionalidad idéntica a la `Collection` objeto en Visual Basic 6.0, los dos no pueden interoperar en un entorno COM.</span><span class="sxs-lookup"><span data-stu-id="c9af6-116">Although the Visual Basic `Collection` object has functionality identical to the `Collection` object in Visual Basic 6.0, the two cannot interoperate in a COM environment.</span></span>  
  
    > [!CAUTION]
    >  <span data-ttu-id="c9af6-117">Recorrer en iteración un Visual Basic `Collection` no es un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c9af6-117">Iterating through a Visual Basic `Collection` is not a thread-safe procedure.</span></span> <span data-ttu-id="c9af6-118">Incluso si la colección está sincronizada, otros subprocesos todavía pueden modificar la colección y hacer que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="c9af6-118">Even if the collection is synchronized, other threads can still modify the collection, causing the enumerator to throw an exception.</span></span> <span data-ttu-id="c9af6-119">Para garantizar la seguridad para subprocesos durante la enumeración, bloquear la colección o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c9af6-119">To guarantee thread safety during enumeration, either lock the collection or catch the exceptions resulting from changes made by other threads.</span></span> <span data-ttu-id="c9af6-120">Para obtener más información sobre el bloqueo de un elemento de programación, vea [instrucción SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c9af6-120">For more information on locking a programming element, see [SyncLock Statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-121">En el ejemplo siguiente se crea el `Collection` objeto `names` y un cuadro de diálogo con el que un usuario puede agregar objetos (nombres) a la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-121">The following example creates the `Collection` object `names` and a dialog box with which a user can add objects (names) to the collection.</span></span> <span data-ttu-id="c9af6-122">Se muestra a continuación, los nombres de la colección y, por último, se vacía la colección sin desechar el `Collection` propio objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-122">It then displays the names in the collection, and finally empties the collection without disposing of the `Collection` object itself.</span></span>  
  
 <span data-ttu-id="c9af6-123">Para ver cómo funciona esto, elija el **Agregar clase** comando desde el **proyecto** menú y declare una variable pública denominada `instanceName` en el nivel de módulo de `nameClass` (tipo `Public instanceName`) para almacenar los nombres de cada instancia.</span><span class="sxs-lookup"><span data-stu-id="c9af6-123">To see how this works, choose the **Add Class** command from the **Project** menu and declare a public variable called `instanceName` at the module level of `nameClass` (type `Public instanceName`) to hold the names of each instance.</span></span> <span data-ttu-id="c9af6-124">Deje el nombre predeterminado como `nameClass`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-124">Leave the default name as `nameClass`.</span></span> <span data-ttu-id="c9af6-125">Copie y pegue el código siguiente en el **General** sección de otro módulo y, a continuación, iniciarlo con la instrucción `classNamer` en otro procedimiento.</span><span class="sxs-lookup"><span data-stu-id="c9af6-125">Copy and paste the following code into the **General** section of another module, and then start it with the statement `classNamer` in another procedure.</span></span> <span data-ttu-id="c9af6-126">(Este ejemplo funciona solo con las aplicaciones host que admitan clases).</span><span class="sxs-lookup"><span data-stu-id="c9af6-126">(This example works only with host applications that support classes.)</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Collection ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Collection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9af6-127">Crea y devuelve un nuevo objeto <see cref="T:Microsoft.VisualBasic.Collection" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="c9af6-127">Creates and returns a new Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-128">La colección de Visual Basic devuelta por este constructor está vacía y no tiene la capacidad inicial asignada.</span><span class="sxs-lookup"><span data-stu-id="c9af6-128">The Visual Basic collection returned by this constructor is empty and does not have any initial capacity allocated.</span></span>  
  
 <span data-ttu-id="c9af6-129">Colecciones de Visual Basic no son compatibles con el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] colecciones disponibles en el <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, y <xref:System.Collections.Specialized?displayProperty=nameWithType> espacios de nombres.</span><span class="sxs-lookup"><span data-stu-id="c9af6-129">Visual Basic collections are not compatible with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] collections available in the <xref:System.Collections?displayProperty=nameWithType>, <xref:System.Collections.Generic?displayProperty=nameWithType>, and <xref:System.Collections.Specialized?displayProperty=nameWithType> namespaces.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-130">El ejemplo siguiente se crea una nueva colección de Visual Basic y lo asigna a la variable `coll`:</span><span class="sxs-lookup"><span data-stu-id="c9af6-130">The following example creates a new Visual Basic collection and assigns it to the variable `coll`:</span></span>  
  
```vb  
Dim coll As New Microsoft.VisualBasic.Collection()  
```  
  
 <span data-ttu-id="c9af6-131">Esto `Collection` objeto es basado en uno, lo que significa que los valores de índice de los elementos están comprendidos entre 1 y el valor de la `Count` propiedad.</span><span class="sxs-lookup"><span data-stu-id="c9af6-131">This `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span> <span data-ttu-id="c9af6-132">Las colecciones de Visual Basic contienen elementos de tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="c9af6-132">Visual Basic collections hold elements of type <xref:System.Object>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object Item, string Key = null, object Before = null, object After = null);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Add(object Item, string Key, object Before, object After) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (Item As Object, Optional Key As String = null, Optional Before As Object = null, Optional After As Object = null)" />
      <MemberSignature Language="F#" Value="member this.Add : obj * string * obj * obj -&gt; unit" Usage="collection.Add (Item, Key, Before, After)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Item" Type="System.Object" />
        <Parameter Name="Key" Type="System.String" />
        <Parameter Name="Before" Type="System.Object" />
        <Parameter Name="After" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Item"><span data-ttu-id="c9af6-133">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="c9af6-133">Required.</span></span> <span data-ttu-id="c9af6-134">Objeto de cualquier tipo que especifica el elemento que se va a agregar a la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-134">An object of any type that specifies the element to add to the collection.</span></span></param>
        <param name="Key"><span data-ttu-id="c9af6-135">Opcional.</span><span class="sxs-lookup"><span data-stu-id="c9af6-135">Optional.</span></span> <span data-ttu-id="c9af6-136">Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar en lugar de un índice de posición para obtener acceso a este nuevo elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-136">A unique <see langword="String" /> expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</span></span></param>
        <param name="Before"><span data-ttu-id="c9af6-137">Opcional.</span><span class="sxs-lookup"><span data-stu-id="c9af6-137">Optional.</span></span> <span data-ttu-id="c9af6-138">Expresión que especifica una posición relativa en la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-138">An expression that specifies a relative position in the collection.</span></span> <span data-ttu-id="c9af6-139">El elemento que se va a agregar se coloca en la colección delante del elemento identificado por el argumento <paramref name="Before" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-139">The element to be added is placed in the collection before the element identified by the <paramref name="Before" /> argument.</span></span> <span data-ttu-id="c9af6-140">Si <paramref name="Before" /> es una expresión numérica, debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-140">If <paramref name="Before" /> is a numeric expression, it must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span></span> <span data-ttu-id="c9af6-141">Si <paramref name="Before" /> es una expresión de tipo <see langword="String" />, debe corresponder a la cadena de clave especificada cuando se agregó a la colección el elemento al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="c9af6-141">If <paramref name="Before" /> is a <see langword="String" /> expression, it must correspond to the key string specified when the element being referred to was added to the collection.</span></span> <span data-ttu-id="c9af6-142">No se pueden especificar los dos parámetros <paramref name="Before" /> y <paramref name="After" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-142">You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</span></span></param>
        <param name="After"><span data-ttu-id="c9af6-143">Opcional.</span><span class="sxs-lookup"><span data-stu-id="c9af6-143">Optional.</span></span> <span data-ttu-id="c9af6-144">Expresión que especifica una posición relativa en la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-144">An expression that specifies a relative position in the collection.</span></span> <span data-ttu-id="c9af6-145">El elemento que se va a agregar se coloca en la colección detrás del elemento identificado por el argumento <paramref name="After" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-145">The element to be added is placed in the collection after the element identified by the <paramref name="After" /> argument.</span></span> <span data-ttu-id="c9af6-146">Si <paramref name="After" /> es una expresión numérica, debe ser un número comprendido entre 1 y el valor de la propiedad <see langword="Count" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-146">If <paramref name="After" /> is a numeric expression, it must be a number from 1 through the value of the collection's <see langword="Count" /> property.</span></span> <span data-ttu-id="c9af6-147">Si <paramref name="After" /> es una expresión de tipo <see langword="String" />, debe corresponder a la cadena de clave especificada cuando se agregó a la colección el elemento al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="c9af6-147">If <paramref name="After" /> is a <see langword="String" /> expression, it must correspond to the key string specified when the element referred to was added to the collection.</span></span> <span data-ttu-id="c9af6-148">No se pueden especificar los dos parámetros <paramref name="Before" /> y <paramref name="After" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-148">You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</span></span></param>
        <summary><span data-ttu-id="c9af6-149">Agrega un elemento a un objeto <see langword="Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-149">Adds an element to a <see langword="Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-150">El `Before` o `After` argumento debe hacer referencia a un elemento existente de la colección; en caso contrario, se produce un error.</span><span class="sxs-lookup"><span data-stu-id="c9af6-150">The `Before` or `After` argument must refer to an existing element of the collection; otherwise, an error occurs.</span></span>  
  
 <span data-ttu-id="c9af6-151">Si tanto el `Before` y `After` se omiten los argumentos, el nuevo objeto se agrega al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-151">If both the `Before` and `After` arguments are omitted, the new object is added to the end of the collection.</span></span>  
  
 <span data-ttu-id="c9af6-152">También se produce un error si un determinado `Key` valor coincide con la clave para un elemento existente de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-152">An error also occurs if a specified `Key` value matches the key for an existing element of the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-153">En el ejemplo siguiente se usa el `Add` método para agregar `child` objetos - instancias de una clase denominada `child` que contiene un `Public` propiedad `name` : para una colección denominada `family`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-153">The following example uses the `Add` method to add `child` objects - instances of a class called `child` containing a `Public` property `name` - to a collection called `family`.</span></span> <span data-ttu-id="c9af6-154">Para ver cómo funciona esto, cree un <xref:System.Windows.Forms.Form> con dos <xref:System.Windows.Forms.Button> controles y establezca sus <xref:System.Windows.Forms.Control.Text%2A> propiedades a `Add` y `List`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-154">To see how this works, create a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.Button> controls and set their <xref:System.Windows.Forms.Control.Text%2A> properties to `Add` and `List`.</span></span> <span data-ttu-id="c9af6-155">Agregar el `child` definición de clase y el `family` declaración en el código del formulario.</span><span class="sxs-lookup"><span data-stu-id="c9af6-155">Add the `child` class definition and the `family` declaration to the form code.</span></span> <span data-ttu-id="c9af6-156">Modificar el `_Click` controladores de eventos para el **agregar** y **lista** botones tal como se muestra.</span><span class="sxs-lookup"><span data-stu-id="c9af6-156">Modify the `_Click` event handlers for the **Add** and **List** buttons as shown.</span></span> <span data-ttu-id="c9af6-157">El **agregar** botón le permite agregar elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="c9af6-157">The **Add** button allows you to add children.</span></span> <span data-ttu-id="c9af6-158">El **lista** botón muestra los nombres de todos los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="c9af6-158">The **List** button displays the names of all the children.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="collection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9af6-159">Elimina todos los elementos de un objeto <see langword="Collection" /> de Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="c9af6-159">Deletes all elements of a Visual Basic <see langword="Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-160">El `Clear` método vacía la colección y restablece su <xref:Microsoft.VisualBasic.Collection.Count%2A> propiedad en 0.</span><span class="sxs-lookup"><span data-stu-id="c9af6-160">The `Clear` method empties the collection and resets its <xref:Microsoft.VisualBasic.Collection.Count%2A> property to 0.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public instance bool Contains(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (Key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="collection.Contains Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="c9af6-161">Obligatorio.</span><span class="sxs-lookup"><span data-stu-id="c9af6-161">Required.</span></span> <span data-ttu-id="c9af6-162">Expresión de tipo <see langword="String" /> que especifica la clave que se va a buscar en los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-162">A <see langword="String" /> expression that specifies the key for which to search the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="c9af6-163">Devuelve un valor que indica si un objeto <see langword="Collection" /> de Visual Basic contiene un elemento con una clave concreta.</span><span class="sxs-lookup"><span data-stu-id="c9af6-163">Returns a value that indicates whether a Visual Basic <see langword="Collection" /> object contains an element with a specific key.</span></span></summary>
        <returns><span data-ttu-id="c9af6-164"><see langword="true" /> si un objeto <see langword="Collection" /> de Visual Basic contiene un elemento con una clave concreta; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-164"><see langword="true" /> if Visual Basic <see langword="Collection" /> object contains an element with a specific key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-165">`Contains` Devuelve `True` si la colección contiene un elemento con una clave que coincidan exactamente con `Key`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-165">`Contains` returns `True` if the collection contains an element with a key exactly matching `Key`.</span></span> <span data-ttu-id="c9af6-166">De lo contrario, `Contains` devuelve `False`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-166">Otherwise, `Contains` returns `False`.</span></span> <span data-ttu-id="c9af6-167">Mayúsculas y minúsculas se ignoran al comparar los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="c9af6-167">Case is ignored when matching key values.</span></span>  
  
 <span data-ttu-id="c9af6-168">Visual Basic `Collection` puede contener algunos elementos que tienen claves y otros elementos sin claves.</span><span class="sxs-lookup"><span data-stu-id="c9af6-168">A Visual Basic `Collection` can hold some elements that have keys and other elements without keys.</span></span> <span data-ttu-id="c9af6-169">Esto depende de si la llamada a la <xref:Microsoft.VisualBasic.Collection.Add%2A> método proporciona un argumento opcional `Key` parámetro.</span><span class="sxs-lookup"><span data-stu-id="c9af6-169">This depends on whether the call to the <xref:Microsoft.VisualBasic.Collection.Add%2A> method supplies an argument to the optional `Key` parameter.</span></span>  
  
   
  
## Examples  
 [!code-vb[VbVbalrCollectionObject#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#4)]  
  
 <span data-ttu-id="c9af6-170">Si desea buscar en la colección de elementos con sus claves, recuerde que debe proporcionar el `Key` argumento cada vez que llama el `Add` método.</span><span class="sxs-lookup"><span data-stu-id="c9af6-170">If you intend to search the collection for elements using their keys, remember to supply the `Key` argument every time you call the `Add` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="Microsoft.VisualBasic.Collection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9af6-171">Obtiene el número de elementos de una colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-171">Gets the number of elements in a collection.</span></span></summary>
        <value><span data-ttu-id="c9af6-172">El número de elementos de una colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-172">The number of elements in a collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-173">Use la `Count` propiedad para determinar el número de elementos de un `Collection` objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-173">Use the `Count` property to determine the number of elements in a `Collection` object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-174">En este ejemplo se muestra el uso de la `Count` propiedad para mostrar el número de elementos de un <xref:Microsoft.VisualBasic.Collection> objeto en la variable `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-174">This example illustrates the use of the `Count` property to display the number of elements in a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#6](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#6)]  
  
 <span data-ttu-id="c9af6-175">El `Collection` objeto es basado en uno, lo que significa que los valores de índice de los elementos están comprendidos entre 1 y el valor de la `Count` propiedad.</span><span class="sxs-lookup"><span data-stu-id="c9af6-175">The `Collection` object is one-based, which means that the index values of the elements range from 1 through the value of the `Count` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="collection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9af6-176">Devuelve un enumerador que procesa una iteración en la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-176">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="c9af6-177">Enumerador que se puede utilizar para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-177">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-178">El [para cada... Instrucción Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) llamadas `GetEnumerator` para obtener un objeto enumerador para admitir la iteración a través de elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-178">The [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) calls `GetEnumerator` to obtain an enumerator object to support iteration over a collection's elements.</span></span> <span data-ttu-id="c9af6-179">Normalmente, se utiliza un `For Each`... `Next` bucle para recorrer una colección o matriz, y no es necesario llamar a `GetEnumerator` explícitamente.</span><span class="sxs-lookup"><span data-stu-id="c9af6-179">Normally, you use a `For Each`...`Next` loop to traverse a collection or array, and you do not need to call `GetEnumerator` explicitly.</span></span>  
  
 <span data-ttu-id="c9af6-180">Si necesita mayor control sobre la iteración que la `For Each`... `Next` proporcionar instrucciones, puede usar el `GetEnumerator` método para realizar un recorrido personalizado.</span><span class="sxs-lookup"><span data-stu-id="c9af6-180">If you need closer control over the iteration than the `For Each`...`Next` statements provide, you can use the `GetEnumerator` method to perform a customized traversal.</span></span> <span data-ttu-id="c9af6-181">Estos son algunos casos en los que es posible que deba hacer esto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-181">The following are some cases in which you might need to do this.</span></span>  
  
-   <span data-ttu-id="c9af6-182">Es posible que desee volver al principio de la colección e iniciar la iteración de nuevo antes de que finalice.</span><span class="sxs-lookup"><span data-stu-id="c9af6-182">You might want to return to the beginning of the collection and start the iteration again before it is finished.</span></span>  
  
-   <span data-ttu-id="c9af6-183">Es posible que desee omitir uno o varios elementos por diversos motivos.</span><span class="sxs-lookup"><span data-stu-id="c9af6-183">You might want to skip over one or more elements for a variety of reasons.</span></span>  
  
-   <span data-ttu-id="c9af6-184">Es posible que deba cambiar los elementos de la colección en el medio de un recorrido.</span><span class="sxs-lookup"><span data-stu-id="c9af6-184">You might need to change the elements of the collection in the middle of a traversal.</span></span> <span data-ttu-id="c9af6-185">En este caso debe obtener un nuevo objeto de enumerador porque se invalida el anterior.</span><span class="sxs-lookup"><span data-stu-id="c9af6-185">In this case you must obtain a new enumerator object because the previous one is invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-186">El ejemplo siguiente muestra cómo usar `GetEnumerator` para recuperar todos los elementos de un `Collection` objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-186">The following example shows how to use `GetEnumerator` to retrieve all the elements of a `Collection` object.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#7)]  
  
 <span data-ttu-id="c9af6-187">`GetEnumerator` Construye y devuelve un objeto de enumerador que implementa el <xref:System.Collections.IEnumerator> interfaz de la <xref:System.Collections> espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="c9af6-187">`GetEnumerator` constructs and returns an enumerator object, which implements the <xref:System.Collections.IEnumerator> interface of the <xref:System.Collections> namespace.</span></span> <span data-ttu-id="c9af6-188">El objeto de enumerador expone el <xref:System.Collections.IEnumerator.Current%2A> propiedad y el <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Reset%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c9af6-188">The enumerator object exposes the <xref:System.Collections.IEnumerator.Current%2A> property and the <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Reset%2A> methods.</span></span> <span data-ttu-id="c9af6-189">Para obtener más información, consulte [For Each... Instrucción Next](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span><span class="sxs-lookup"><span data-stu-id="c9af6-189">For more information, see [For Each...Next Statement](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9af6-190">Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</span><span class="sxs-lookup"><span data-stu-id="c9af6-190">Gets a specific element of a <see langword="Collection" /> object either by position or by key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="c9af6-191">Expresión numérica que especifica la posición de un elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-191">A numeric expression that specifies the position of an element of the collection.</span></span> <span data-ttu-id="c9af6-192"><paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-192"><paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span></span> <span data-ttu-id="c9af6-193">O bien, (B) Expresión de <see langword="Object" /> que especifica la cadena de posición o de clave de un elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-193">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span></span></param>
        <summary><span data-ttu-id="c9af6-194">Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</span><span class="sxs-lookup"><span data-stu-id="c9af6-194">Gets a specific element of a <see langword="Collection" /> object either by position or by key.</span></span></summary>
        <value><span data-ttu-id="c9af6-195">Un elemento concreto de un <see langword="Collection" /> objeto por posición o por clave.</span><span class="sxs-lookup"><span data-stu-id="c9af6-195">A specific element of a <see langword="Collection" /> object either by position or by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-196">Si `Index` es de tipo `Object`, `Item` propiedad intenta tratarlo como un `String`, `Char`, `Char` matriz o valor entero.</span><span class="sxs-lookup"><span data-stu-id="c9af6-196">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="c9af6-197">Si `Item` no se puede convertir `Index` a `String` o `Integer`, produce un <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c9af6-197">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="c9af6-198">El `Item` es la propiedad predeterminada para una colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-198">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="c9af6-199">Por lo tanto, las líneas de código siguientes son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="c9af6-199">Therefore, the following lines of code are equivalent.</span></span>  
  
```vb
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-200">En el ejemplo siguiente se usa el `Item` propiedad para recuperar una referencia a un objeto en una colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-200">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="c9af6-201">Crea `birthdays` como un `Collection` objeto y, a continuación, recupera el objeto que representa el cumpleaños de Bill, utilizando la clave `"Bill"` como el `Index` argumento.</span><span class="sxs-lookup"><span data-stu-id="c9af6-201">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="c9af6-202">Tenga en cuenta que la primera llamada especifica explícitamente el `Item` propiedad, pero la segunda no.</span><span class="sxs-lookup"><span data-stu-id="c9af6-202">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="c9af6-203">Ambas llamadas funcionan porque el `Item` es la propiedad predeterminada para un `Collection` objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-203">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object Index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Index As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ Index); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="c9af6-204">Expresión numérica que especifica la posición de un elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-204">A numeric expression that specifies the position of an element of the collection.</span></span> <span data-ttu-id="c9af6-205"><paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-205"><paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span></span> <span data-ttu-id="c9af6-206">O bien, (B) Expresión de <see langword="Object" /> que especifica la cadena de posición o de clave de un elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-206">Or (B) An <see langword="Object" /> expression that specifies the position or key string of an element of the collection.</span></span></param>
        <summary><span data-ttu-id="c9af6-207">Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</span><span class="sxs-lookup"><span data-stu-id="c9af6-207">Gets a specific element of a <see langword="Collection" /> object either by position or by key.</span></span></summary>
        <value><span data-ttu-id="c9af6-208">Un elemento concreto de un <see langword="Collection" /> objeto por posición o por clave.</span><span class="sxs-lookup"><span data-stu-id="c9af6-208">A specific element of a <see langword="Collection" /> object either by position or by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-209">Si `Index` es de tipo `Object`, `Item` propiedad intenta tratarlo como un `String`, `Char`, `Char` matriz o valor entero.</span><span class="sxs-lookup"><span data-stu-id="c9af6-209">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="c9af6-210">Si `Item` no se puede convertir `Index` a `String` o `Integer`, produce un <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c9af6-210">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="c9af6-211">El `Item` es la propiedad predeterminada para una colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-211">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="c9af6-212">Por lo tanto, las líneas de código siguientes son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="c9af6-212">Therefore, the following lines of code are equivalent.</span></span>  
  
```vb
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-213">En el ejemplo siguiente se usa el `Item` propiedad para recuperar una referencia a un objeto en una colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-213">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="c9af6-214">Crea `birthdays` como un `Collection` objeto y, a continuación, recupera el objeto que representa el cumpleaños de Bill, utilizando la clave `"Bill"` como el `Index` argumento.</span><span class="sxs-lookup"><span data-stu-id="c9af6-214">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="c9af6-215">Tenga en cuenta que la primera llamada especifica explícitamente el `Item` propiedad, pero la segunda no.</span><span class="sxs-lookup"><span data-stu-id="c9af6-215">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="c9af6-216">Ambas llamadas funcionan porque el `Item` es la propiedad predeterminada para un `Collection` objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-216">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string Key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(Key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ Key); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="Microsoft.VisualBasic.Collection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="c9af6-217">Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar, en lugar de un índice de posición, para obtener acceso a un elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-217">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span></span> <span data-ttu-id="c9af6-218"><paramref name="Key" /> tiene que corresponder al argumento de <paramref name="Key" /> especificado cuando se agregó el elemento a la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-218"><paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</span></span></param>
        <summary><span data-ttu-id="c9af6-219">Obtiene un elemento concreto de un objeto <see langword="Collection" /> por posición o por clave.</span><span class="sxs-lookup"><span data-stu-id="c9af6-219">Gets a specific element of a <see langword="Collection" /> object either by position or by key.</span></span></summary>
        <value><span data-ttu-id="c9af6-220">Un elemento concreto de un <see langword="Collection" /> objeto por posición o por clave.</span><span class="sxs-lookup"><span data-stu-id="c9af6-220">A specific element of a <see langword="Collection" /> object either by position or by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-221">Si `Index` es de tipo `Object`, `Item` propiedad intenta tratarlo como un `String`, `Char`, `Char` matriz o valor entero.</span><span class="sxs-lookup"><span data-stu-id="c9af6-221">If `Index` is of type `Object`, the `Item` property attempts to treat it as a `String`, `Char`, `Char` array, or integer value.</span></span> <span data-ttu-id="c9af6-222">Si `Item` no se puede convertir `Index` a `String` o `Integer`, produce un <xref:System.ArgumentException> excepción.</span><span class="sxs-lookup"><span data-stu-id="c9af6-222">If `Item` cannot convert `Index` to `String` or `Integer`, it throws an <xref:System.ArgumentException> exception.</span></span>  
  
 <span data-ttu-id="c9af6-223">El `Item` es la propiedad predeterminada para una colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-223">The `Item` property is the default property for a collection.</span></span> <span data-ttu-id="c9af6-224">Por lo tanto, las líneas de código siguientes son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="c9af6-224">Therefore, the following lines of code are equivalent.</span></span>  
  
```vb
MsgBox(CStr(customers.Item(1)))  
MsgBox(CStr(customers(1)))  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-225">En el ejemplo siguiente se usa el `Item` propiedad para recuperar una referencia a un objeto en una colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-225">The following example uses the `Item` property to retrieve a reference to an object in a collection.</span></span> <span data-ttu-id="c9af6-226">Crea `birthdays` como un `Collection` objeto y, a continuación, recupera el objeto que representa el cumpleaños de Bill, utilizando la clave `"Bill"` como el `Index` argumento.</span><span class="sxs-lookup"><span data-stu-id="c9af6-226">It creates `birthdays` as a `Collection` object and then retrieves the object representing Bill's birthday, using the key `"Bill"` as the `Index` argument.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#8)]  
  
 <span data-ttu-id="c9af6-227">Tenga en cuenta que la primera llamada especifica explícitamente el `Item` propiedad, pero la segunda no.</span><span class="sxs-lookup"><span data-stu-id="c9af6-227">Note that the first call explicitly specifies the `Item` property, but the second does not.</span></span> <span data-ttu-id="c9af6-228">Ambas llamadas funcionan porque el `Item` es la propiedad predeterminada para un `Collection` objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-228">Both calls work because the `Item` property is the default property for a `Collection` object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c9af6-229">Quita un elemento de un objeto <see langword="Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-229">Removes an element from a <see langword="Collection" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int Index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 Index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(int Index);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; unit" Usage="collection.Remove Index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="c9af6-230">Expresión numérica que especifica la posición de un elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-230">A numeric expression that specifies the position of an element of the collection.</span></span> <span data-ttu-id="c9af6-231"><paramref name="Index" /> debe ser un número comprendido entre 1 y el valor de la propiedad <see cref="P:Microsoft.VisualBasic.Collection.Count" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-231"><paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</span></span></param>
        <summary><span data-ttu-id="c9af6-232">Quita un elemento de un objeto <see langword="Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-232">Removes an element from a <see langword="Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-233">Cuando `Remove` elimina un elemento de una colección, se reduce la colección <xref:Microsoft.VisualBasic.Collection.Count%2A> propiedad en uno.</span><span class="sxs-lookup"><span data-stu-id="c9af6-233">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="c9af6-234">Se reduce también la `Index` valor de todos los elementos que anteriormente seguido del elemento eliminado de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-234">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="c9af6-235">Si un elemento se agregó a la colección sin un `Key`, debe usar su `Index` para quitarlo.</span><span class="sxs-lookup"><span data-stu-id="c9af6-235">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-236">En este ejemplo se muestra el uso de la `Remove` método para quitar objetos de un <xref:Microsoft.VisualBasic.Collection> objeto en la variable `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-236">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="c9af6-237">Después de las cuatro llamadas a la `Add` método, el `Count` propiedad contiene 4, elemento `"Bill"` tiene el valor de índice 1 y el elemento `"Pete"` tiene el valor de índice 4.</span><span class="sxs-lookup"><span data-stu-id="c9af6-237">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="c9af6-238">Después de la primera llamada a `Remove`, `Count` es 3, elemento `"Bill"` se elimina y el elemento `"Pete"` tiene el valor de índice 3.</span><span class="sxs-lookup"><span data-stu-id="c9af6-238">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="c9af6-239">Después de la segunda llamada a `Remove`, `Count` es 2, elemento `"Mike"` se elimina y el elemento `"Pete"` tiene el valor de índice 2.</span><span class="sxs-lookup"><span data-stu-id="c9af6-239">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string Key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string Key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (Key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ Key);" />
      <MemberSignature Language="F#" Value="member this.Remove : string -&gt; unit" Usage="collection.Remove Key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="Key"><span data-ttu-id="c9af6-240">Expresión única de tipo <see langword="String" /> que especifica una cadena de clave que se puede utilizar, en lugar de un índice de posición, para obtener acceso a un elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-240">A unique <see langword="String" /> expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection.</span></span> <span data-ttu-id="c9af6-241"><paramref name="Key" /> tiene que corresponder al argumento de <paramref name="Key" /> especificado cuando se agregó el elemento a la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-241"><paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</span></span></param>
        <summary><span data-ttu-id="c9af6-242">Quita un elemento de un objeto <see langword="Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-242">Removes an element from a <see langword="Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-243">Cuando `Remove` elimina un elemento de una colección, se reduce la colección <xref:Microsoft.VisualBasic.Collection.Count%2A> propiedad en uno.</span><span class="sxs-lookup"><span data-stu-id="c9af6-243">When `Remove` deletes an element from a collection, it decrements the collection's <xref:Microsoft.VisualBasic.Collection.Count%2A> property by one.</span></span> <span data-ttu-id="c9af6-244">Se reduce también la `Index` valor de todos los elementos que anteriormente seguido del elemento eliminado de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-244">It also decrements the `Index` value of every element that formerly followed the deleted element in the collection.</span></span>  
  
 <span data-ttu-id="c9af6-245">Si un elemento se agregó a la colección sin un `Key`, debe usar su `Index` para quitarlo.</span><span class="sxs-lookup"><span data-stu-id="c9af6-245">If an element was added to the collection without a `Key`, you must use its `Index` to remove it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9af6-246">En este ejemplo se muestra el uso de la `Remove` método para quitar objetos de un <xref:Microsoft.VisualBasic.Collection> objeto en la variable `birthdays`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-246">This example illustrates the use of the `Remove` method to remove objects from a <xref:Microsoft.VisualBasic.Collection> object in the variable `birthdays`.</span></span>  
  
 [!code-vb[VbVbalrCollectionObject#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#5)]  
[!code-vb[VbVbalrCollectionObject#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrCollectionObject/VB/Class1.vb#9)]  
  
 <span data-ttu-id="c9af6-247">Después de las cuatro llamadas a la `Add` método, el `Count` propiedad contiene 4, elemento `"Bill"` tiene el valor de índice 1 y el elemento `"Pete"` tiene el valor de índice 4.</span><span class="sxs-lookup"><span data-stu-id="c9af6-247">Following the four calls to the `Add` method, the `Count` property contains 4, element `"Bill"` has index value 1, and element `"Pete"` has index value 4.</span></span>  
  
 <span data-ttu-id="c9af6-248">Después de la primera llamada a `Remove`, `Count` es 3, elemento `"Bill"` se elimina y el elemento `"Pete"` tiene el valor de índice 3.</span><span class="sxs-lookup"><span data-stu-id="c9af6-248">Following the first call to `Remove`, `Count` is 3, element `"Bill"` is deleted, and element `"Pete"` has index value 3.</span></span>  
  
 <span data-ttu-id="c9af6-249">Después de la segunda llamada a `Remove`, `Count` es 2, elemento `"Mike"` se elimina y el elemento `"Pete"` tiene el valor de índice 2.</span><span class="sxs-lookup"><span data-stu-id="c9af6-249">Following the second call to `Remove`, `Count` is 2, element `"Mike"` is deleted, and element `"Pete"` has index value 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo" ExplicitInterfaceMemberName="ICollectionCopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void ICollectionCopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionCopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void ICollectionCopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="c9af6-250"><see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados desde el objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-250">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span> <span data-ttu-id="c9af6-251"><see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="c9af6-251">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="c9af6-252">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="c9af6-252">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="c9af6-253">Copia los elementos de <see cref="T:Microsoft.VisualBasic.Collection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-253">Copies the elements of the <see cref="T:Microsoft.VisualBasic.Collection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-254">Los elementos se copian en el <xref:System.Array> en el mismo orden en que el enumerador recorre el <xref:Microsoft.VisualBasic.Collection> objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-254">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 <span data-ttu-id="c9af6-255">Este método es O (`n`) operación, donde `n` obtenida la <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span><span class="sxs-lookup"><span data-stu-id="c9af6-255">This method is an O(`n`) operation, where `n` is obtained from the <xref:Microsoft.VisualBasic.Collection.System%23Collections%23ICollection%23Count>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c9af6-256"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-256"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9af6-257"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="c9af6-257"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c9af6-258"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="c9af6-258"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="c9af6-259">O bien</span><span class="sxs-lookup"><span data-stu-id="c9af6-259">-or-</span></span> 
<span data-ttu-id="c9af6-260">El número de elementos del objeto <see cref="T:Microsoft.VisualBasic.Collection" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final del parámetro <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="c9af6-260">The number of elements in the source <see cref="T:Microsoft.VisualBasic.Collection" /> object is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="c9af6-261">El tipo del objeto <see cref="T:Microsoft.VisualBasic.Collection" /> de origen no puede convertirse automáticamente en el tipo de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="c9af6-261">The type of the source <see cref="T:Microsoft.VisualBasic.Collection" /> object cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count" ExplicitInterfaceMemberName="ICollectionCount">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ICollectionCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionCount As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9af6-262">Obtiene el número de elementos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-262">Gets the number of items in this collection.</span></span></summary>
        <value><span data-ttu-id="c9af6-263">Número de elementos de esta colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-263">The number of items in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized" ExplicitInterfaceMemberName="ICollectionIsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ICollectionIsSynchronized" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionIsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionIsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9af6-264">Obtiene un valor que indica si el acceso al objeto <see cref="T:Microsoft.VisualBasic.Collection" /> está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="c9af6-264">Gets a value that indicates whether access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="c9af6-265"><see langword="true" /> Si el acceso a la <see cref="T:Microsoft.VisualBasic.Collection" /> objeto está sincronizado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-265"><see langword="true" /> if access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object is synchronized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot" ExplicitInterfaceMemberName="ICollectionSyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ICollectionSyncRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.ICollectionSyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ICollectionSyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9af6-266">Obtiene un objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-266">Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <value><span data-ttu-id="c9af6-267">Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-267">An object that can be used to synchronize access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator" ExplicitInterfaceMemberName="ICollectionGetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance class System.Collections.IEnumerator ICollectionGetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.ICollectionGetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function ICollectionGetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ ICollectionGetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9af6-268">Obtiene un enumerador que recorre en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-268">Gets an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="c9af6-269">Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-269">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-270">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="c9af6-270">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="c9af6-271">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="c9af6-271">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="c9af6-272">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="c9af6-272">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="c9af6-273">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="c9af6-273">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="c9af6-274">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="c9af6-274">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="c9af6-275">El <xref:System.Collections.IEnumerator.Reset%2A> método también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="c9af6-275">The <xref:System.Collections.IEnumerator.Reset%2A> method also brings the enumerator back to this position.</span></span> <span data-ttu-id="c9af6-276">En esta posición, el <xref:System.Collections.IEnumerator.Current%2A> propiedad no está definida.</span><span class="sxs-lookup"><span data-stu-id="c9af6-276">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="c9af6-277">Por lo tanto, debe llamar a la <xref:System.Collections.IEnumerator.MoveNext%2A> método para hacer avanzar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9af6-277">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="c9af6-278"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9af6-278"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="c9af6-279"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="c9af6-279"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="c9af6-280">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-280">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="c9af6-281">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="c9af6-281">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="c9af6-282">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="c9af6-282">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="c9af6-283">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9af6-283">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="c9af6-284">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="c9af6-284">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="c9af6-285">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="c9af6-285">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="c9af6-286">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c9af6-286">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="c9af6-287">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="c9af6-287">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span> <span data-ttu-id="c9af6-288">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="c9af6-288">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add" ExplicitInterfaceMemberName="IListAdd">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListAdd(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListAdd(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListAdd (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListAdd(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear" ExplicitInterfaceMemberName="IListClear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListClear" />
      <MemberSignature Language="VB.NET" Value="Sub IListClear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListClear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c9af6-289">Quita todos los elementos del objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-289">Removes all items from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-290">Este método quita todos los elementos de la <xref:Microsoft.VisualBasic.Collection> objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-290">This method removes all items from the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c9af6-291"><see cref="T:System.Collections.IList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9af6-291">The <see cref="T:System.Collections.IList" /> is read-only.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.Hashtable.Clear" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains" ExplicitInterfaceMemberName="IListContains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance bool IListContains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListContains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListContains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool IListContains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c9af6-292">Objeto <see cref="T:System.Object" /> que se va a buscar en <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-292">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="c9af6-293">Determina si el objeto <see cref="T:Microsoft.VisualBasic.Collection" /> contiene un valor específico.</span><span class="sxs-lookup"><span data-stu-id="c9af6-293">Determines whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="c9af6-294">Devuelve <see langword="True" /> si se encuentra <see cref="T:System.Object" /> en el objeto <see cref="T:Microsoft.VisualBasic.Collection" />; de lo contrario, devuelve <see langword="False" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-294">Returns <see langword="True" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:Microsoft.VisualBasic.Collection" /> object; otherwise, <see langword="False" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-295">Este método determina si el <xref:Microsoft.VisualBasic.Collection> objeto contiene un valor específico.</span><span class="sxs-lookup"><span data-stu-id="c9af6-295">This method determines whether the <xref:Microsoft.VisualBasic.Collection> object contains a specific value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf" ExplicitInterfaceMemberName="IListIndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance int32 IListIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IListIndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int IListIndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c9af6-296">Objeto <see cref="T:System.Object" /> que se va a buscar en <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-296">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="c9af6-297">Determina el índice de un elemento específico del objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-297">Determines the index of a specific item in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <returns><span data-ttu-id="c9af6-298">Índice de <paramref name="value" /> si se encuentra en la colección; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="c9af6-298">The index of <paramref name="value" /> if found in the collection; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-299">Este método determina el índice de un elemento específico de la <xref:Microsoft.VisualBasic.Collection> objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-299">This method determines the index of a specific item in the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert" ExplicitInterfaceMemberName="IListInsert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListInsert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListInsert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c9af6-300">Índice basado en cero en el que debe insertarse <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-300">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="c9af6-301">Objeto <see cref="T:System.Object" /> que va a insertarse en el objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-301">The <see cref="T:System.Object" /> to insert into the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="c9af6-302">Inserta un elemento en el índice especificado del objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-302">Inserts an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-303">Si `index` es igual al número de elementos de la <xref:Microsoft.VisualBasic.Collection> objeto, a continuación, `value` se anexa al final.</span><span class="sxs-lookup"><span data-stu-id="c9af6-303">If `index` equals the number of items in the <xref:Microsoft.VisualBasic.Collection> object, then `value` is appended to the end.</span></span>  
  
 <span data-ttu-id="c9af6-304">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del punto de inserción se desplazan hacia abajo para alojar el elemento nuevo.</span><span class="sxs-lookup"><span data-stu-id="c9af6-304">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="c9af6-305">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="c9af6-305">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c9af6-306">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="c9af6-306">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9af6-307"><paramref name="index" /> no es un índice válido para el objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-307"><paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c9af6-308">El objeto <see cref="T:Microsoft.VisualBasic.Collection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9af6-308">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span></span>  
  
<span data-ttu-id="c9af6-309">O bien</span><span class="sxs-lookup"><span data-stu-id="c9af6-309">-or-</span></span> 
<span data-ttu-id="c9af6-310">El objeto <see cref="T:Microsoft.VisualBasic.Collection" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="c9af6-310">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="c9af6-311"><paramref name="value" /> es una referencia nula del objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-311"><paramref name="value" /> is null reference in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize" ExplicitInterfaceMemberName="IListIsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsFixedSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9af6-312">Obtiene un valor que indica si el objeto <see cref="T:Microsoft.VisualBasic.Collection" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="c9af6-312">Gets a value that indicates whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="c9af6-313">Es <see langword="true" /> si el objeto <see cref="T:Microsoft.VisualBasic.Collection" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-313"><see langword="true" /> if the <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly" ExplicitInterfaceMemberName="IListIsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IListIsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListIsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IListIsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c9af6-314">Obtiene un valor que indica si el objeto <see cref="T:Microsoft.VisualBasic.Collection" /> es</span><span class="sxs-lookup"><span data-stu-id="c9af6-314">Gets a value that indicates whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object is.</span></span></summary>
        <value><span data-ttu-id="c9af6-315"><see langword="true" /> si el objeto <see cref="T:Microsoft.VisualBasic.Collection" /> es de solo lectura; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-315"><see langword="true" /> if the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item" ExplicitInterfaceMemberName="IListItem">
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int Index] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.System#Collections#IList#Item(System.Int32)" FrameworkAlternate="netcore-3.0" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(Index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int Index); void set(int Index, System::Object ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C#" Value="object System.Collections.IList.IListItem[int index] { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(index As Integer) As Object Implements IList.IListItem" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.IListItem[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="F#" Usage="Microsoft.VisualBasic.Collection.IListItem" FrameworkAlternate="netframework-2.0" />
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int Index] { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance object IListItem(int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Collection.IListItem(System.Int32)" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value=" Property IListItem(Index As Integer) As Object Implements IList.Item" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int Index); void set(int Index, System::Object ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="Index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="Index"><span data-ttu-id="c9af6-316">Índice de base cero del elemento que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="c9af6-316">The zero-based index of the element to get or set.</span></span></param>
        <param name="index">To be added.</param>
        <summary><span data-ttu-id="c9af6-317">Obtiene o establece el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="c9af6-317">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="c9af6-318">Elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="c9af6-318">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9af6-319"><paramref name="index" /> no es un índice válido para el objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-319"><paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c9af6-320">La propiedad está establecida y el objeto <see cref="T:Microsoft.VisualBasic.Collection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9af6-320">The property is set and the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove" ExplicitInterfaceMemberName="IListRemove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c9af6-321">Objeto <see cref="T:System.Object" /> que va a quitarse de <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-321">The <see cref="T:System.Object" /> to remove from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="c9af6-322">Quita del objeto <see cref="T:Microsoft.VisualBasic.Collection" /> la primera aparición de un objeto específico.</span><span class="sxs-lookup"><span data-stu-id="c9af6-322">Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-323">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="c9af6-323">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c9af6-324">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="c9af6-324">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c9af6-325">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="c9af6-325">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span> <span data-ttu-id="c9af6-326">Si `value` no se encuentra en la <xref:Microsoft.VisualBasic.Collection> objeto, el <xref:Microsoft.VisualBasic.Collection> objeto permanece inalterado y se produce ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="c9af6-326">If `value` is not found in the <xref:Microsoft.VisualBasic.Collection> object, the <xref:Microsoft.VisualBasic.Collection> object remains unchanged and no exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c9af6-327">El objeto <see cref="T:Microsoft.VisualBasic.Collection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9af6-327">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span></span>  
  
<span data-ttu-id="c9af6-328">O bien</span><span class="sxs-lookup"><span data-stu-id="c9af6-328">-or-</span></span> 
<span data-ttu-id="c9af6-329">El objeto <see cref="T:Microsoft.VisualBasic.Collection" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="c9af6-329">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt" ExplicitInterfaceMemberName="IListRemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void IListRemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.IListRemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub IListRemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void IListRemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
        <AssemblyVersion>10.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="c9af6-330">Índice de base cero del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="c9af6-330">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="c9af6-331">Quita el elemento de objeto <see cref="T:Microsoft.VisualBasic.Collection" /> del índice especificado.</span><span class="sxs-lookup"><span data-stu-id="c9af6-331">Removes the <see cref="T:Microsoft.VisualBasic.Collection" /> object item at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-332">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="c9af6-332">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="c9af6-333">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="c9af6-333">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="c9af6-334">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="c9af6-334">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="c9af6-335"><paramref name="index" /> no es un índice válido para el objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-335"><paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c9af6-336">El objeto <see cref="T:Microsoft.VisualBasic.Collection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c9af6-336">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.</span></span>  
  
<span data-ttu-id="c9af6-337">O bien</span><span class="sxs-lookup"><span data-stu-id="c9af6-337">-or-</span></span> 
<span data-ttu-id="c9af6-338">El objeto <see cref="T:Microsoft.VisualBasic.Collection" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="c9af6-338">The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size.</span></span></exception>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.IList.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization" ExplicitInterfaceMemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="c9af6-339">Objeto que inició la devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="c9af6-339">The object that initiated the callback.</span></span></param>
        <summary><span data-ttu-id="c9af6-340">Se ejecuta después de que se deserialice el gráfico del objeto <see cref="T:Microsoft.VisualBasic.Collection" /> completo.</span><span class="sxs-lookup"><span data-stu-id="c9af6-340">Runs after the entire <see cref="T:Microsoft.VisualBasic.Collection" /> object graph has been deserialized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-341">Este método se llama después de todo el <xref:Microsoft.VisualBasic.Collection> se ha deserializado el gráfico de objetos.</span><span class="sxs-lookup"><span data-stu-id="c9af6-341">This method is called after the entire <xref:Microsoft.VisualBasic.Collection> object graph has been deserialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.IDeserializationCallback" />
        <altmember cref="M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData" ExplicitInterfaceMemberName="GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Collection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="c9af6-342">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información que se requiere para serializar el objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-342">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="c9af6-343">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada al objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-343">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></param>
        <summary><span data-ttu-id="c9af6-344">Devuelve los datos necesarios para serializar el objeto <see cref="T:Microsoft.VisualBasic.Collection" />.</span><span class="sxs-lookup"><span data-stu-id="c9af6-344">Returns the data needed to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9af6-345">Este método devuelve los datos necesarios para serializar el <xref:Microsoft.VisualBasic.Collection> objeto.</span><span class="sxs-lookup"><span data-stu-id="c9af6-345">This method returns the data needed to serialize the <xref:Microsoft.VisualBasic.Collection> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Collection" />
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>
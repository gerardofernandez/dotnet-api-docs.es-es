<Type Name="DrawingCollection" FullName="System.Windows.Media.DrawingCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="371b645993099790aad64dc8f4df3adb0cc9fc06" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53466098" /></Metadata><TypeSignature Language="C#" Value="public sealed class DrawingCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;System.Windows.Media.Drawing&gt;, System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Drawing&gt;, System.Collections.Generic.IList&lt;System.Windows.Media.Drawing&gt;, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DrawingCollection extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;class System.Windows.Media.Drawing&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.Drawing&gt;, class System.Collections.Generic.IList`1&lt;class System.Windows.Media.Drawing&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.DrawingCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DrawingCollection&#xA;Inherits Animatable&#xA;Implements ICollection(Of Drawing), IEnumerable(Of Drawing), IList, IList(Of Drawing)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DrawingCollection sealed : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;System::Windows::Media::Drawing ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Windows::Media::Drawing ^&gt;, System::Collections::Generic::IList&lt;System::Windows::Media::Drawing ^&gt;, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type DrawingCollection = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;Drawing&gt;&#xA;    interface ICollection&lt;Drawing&gt;&#xA;    interface seq&lt;Drawing&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Windows.Media.Drawing&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Drawing&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;System.Windows.Media.Drawing&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="01215-101">Representa una colección ordenada de objetos <see cref="T:System.Windows.Media.Drawing" />.</span><span class="sxs-lookup"><span data-stu-id="01215-101">Represents an ordered collection of <see cref="T:System.Windows.Media.Drawing" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-102">Excepto como se indicó, los miembros de esta clase se comportan exactamente como se describe en el <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.ICollection%601>, y <xref:System.Collections.Generic.IEnumerable%601> documentación.</span><span class="sxs-lookup"><span data-stu-id="01215-102">Except as noted, members of this class behave exactly as described by the <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.ICollection%601>, and <xref:System.Collections.Generic.IEnumerable%601> documentation.</span></span>  
  
 <span data-ttu-id="01215-103">**Freezable características:** Porque se hereda de la <xref:System.Windows.Freezable> (clase), el <xref:System.Windows.Media.DrawingCollection> clase proporciona varias características especiales: <xref:System.Windows.Media.DrawingCollection> objetos se pueden declarar como compartirse entre varios objetos, de sólo lectura para mejorar el rendimiento, clonar y hacerse seguros para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="01215-103">**Freezable Features:** Because it inherits from the <xref:System.Windows.Freezable> class, the <xref:System.Windows.Media.DrawingCollection> class provides several special features: <xref:System.Windows.Media.DrawingCollection> objects can be declared as , shared among multiple objects, made read-only to improve performance, cloned, and made thread-safe.</span></span> <span data-ttu-id="01215-104">Para obtener más información sobre las diferentes características proporcionadas por <xref:System.Windows.Freezable> objetos, vea el [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="01215-104">For more information about the different features provided by <xref:System.Windows.Freezable> objects, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
<a name="xamlImplicitCollectionUsage_DrawingCollection"></a>   
## <a name="xaml-implicit-collection-usage"></a><span data-ttu-id="01215-105">Uso de colecciones implícitas XAML</span><span class="sxs-lookup"><span data-stu-id="01215-105">XAML Implicit Collection Usage</span></span>  
  
```  
<object>  
  <object.property>  
    oneOrMoreDrawingObjectElements  
  </object.property>  
</object>  
```  
  
<a name="xamlValues_DrawingCollection"></a>   
## <a name="xaml-values"></a><span data-ttu-id="01215-106">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="01215-106">XAML Values</span></span>  
 <span data-ttu-id="01215-107">*oneOrMoreDrawingObjectElements*</span><span class="sxs-lookup"><span data-stu-id="01215-107">*oneOrMoreDrawingObjectElements*</span></span>  
 <span data-ttu-id="01215-108">Uno o más <xref:System.Windows.Media.Drawing> objetos declarados mediante la sintaxis de elemento de objeto.</span><span class="sxs-lookup"><span data-stu-id="01215-108">One or more <xref:System.Windows.Media.Drawing> objects, declared using object element syntax.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Drawing" />
    <altmember cref="T:System.Collections.Generic.IList`1" />
    <altmember cref="T:System.Collections.Generic.ICollection`1" />
    <altmember cref="T:System.Collections.Generic.IEnumerable`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="01215-109">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-109">Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingCollection" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01215-110">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-110">Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Drawing&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Media.Drawing&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Drawing})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of Drawing))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::Media::Drawing ^&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.DrawingCollection : seq&lt;System.Windows.Media.Drawing&gt; -&gt; System.Windows.Media.DrawingCollection" Usage="new System.Windows.Media.DrawingCollection collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Drawing&gt;" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="01215-111">Colección de objetos <see cref="T:System.Windows.Media.Drawing" /> que forman el objeto <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-111">The collection of <see cref="T:System.Windows.Media.Drawing" /> objects that make up the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></param>
        <summary><span data-ttu-id="01215-112">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.DrawingCollection" /> con la colección de objetos <see cref="T:System.Windows.Media.Drawing" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="01215-112">Initializes a new instance of the <see cref="T:System.Windows.Media.DrawingCollection" /> class with the specified collection of <see cref="T:System.Windows.Media.Drawing" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="01215-113">El valor de <paramref name="collection" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01215-113"><paramref name="collection" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DrawingCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DrawingCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.DrawingCollection : int -&gt; System.Windows.Media.DrawingCollection" Usage="new System.Windows.Media.DrawingCollection capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="01215-114">Capacidad total de la colección.</span><span class="sxs-lookup"><span data-stu-id="01215-114">The total capacity of the collection.</span></span></param>
        <summary><span data-ttu-id="01215-115">Inicializa una nueva instancia de <see cref="T:System.Windows.Media.DrawingCollection" /> con la capacidad especificada.</span><span class="sxs-lookup"><span data-stu-id="01215-115">Initializes a new instance of <see cref="T:System.Windows.Media.DrawingCollection" /> with the specified capacity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Media.Drawing value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Windows.Media.Drawing value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.Add(System.Windows.Media.Drawing)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As Drawing)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Windows::Media::Drawing ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Windows.Media.Drawing -&gt; unit&#xA;override this.Add : System.Windows.Media.Drawing -&gt; unit" Usage="drawingCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Drawing" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01215-116">Elemento que se va a agregar al final de esta colección.</span><span class="sxs-lookup"><span data-stu-id="01215-116">The item to add to the end of this collection.</span></span></param>
        <summary><span data-ttu-id="01215-117">Agrega un objeto <see cref="T:System.Windows.Media.Drawing" /> al final de <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-117">Adds a <see cref="T:System.Windows.Media.Drawing" /> to the end of the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-118">A diferencia de las implementaciones típicas de <xref:System.Collections.Generic.ICollection%601.Add%2A?displayProperty=nameWithType>, esta implementación produce un <xref:System.ArgumentException> si intenta agregar un **null** (**nada**) referencia.</span><span class="sxs-lookup"><span data-stu-id="01215-118">Unlike typical implementations of <xref:System.Collections.Generic.ICollection%601.Add%2A?displayProperty=nameWithType>, this implementation throws an <xref:System.ArgumentException> if you attempt to add a **null** (**Nothing**) reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01215-119">El valor de <paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01215-119"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="01215-120"><see cref="T:System.Windows.Media.DrawingCollection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="01215-120">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="01215-121">O bien</span><span class="sxs-lookup"><span data-stu-id="01215-121">-or-</span></span> 
<span data-ttu-id="01215-122"><see cref="T:System.Windows.Media.DrawingCollection" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="01215-122">The <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Add(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="drawingCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01215-123">Quita todos los elementos de esta colección <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-123">Removes all the items from this <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-124">Este método no cambia la capacidad de la <xref:System.Windows.Media.DrawingCollection>.</span><span class="sxs-lookup"><span data-stu-id="01215-124">This method does not change the capacity of the <xref:System.Windows.Media.DrawingCollection>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="01215-125"><see cref="T:System.Windows.Media.DrawingCollection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="01215-125">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DrawingCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DrawingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DrawingCollection ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.DrawingCollection" Usage="drawingCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01215-126">Crea un clon modificable de este <see cref="T:System.Windows.Media.DrawingCollection" /> y hace copias en profundidad de los valores de este objeto.</span><span class="sxs-lookup"><span data-stu-id="01215-126">Creates a modifiable clone of this <see cref="T:System.Windows.Media.DrawingCollection" />, making deep copies of this object's values.</span></span> <span data-ttu-id="01215-127">Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="01215-127">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="01215-128">Clon modificable del objeto actual.</span><span class="sxs-lookup"><span data-stu-id="01215-128">A modifiable clone of the current object.</span></span> <span data-ttu-id="01215-129">La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="01215-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-130">Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto).</span><span class="sxs-lookup"><span data-stu-id="01215-130">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="01215-131">Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.</span><span class="sxs-lookup"><span data-stu-id="01215-131">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="01215-132">Para obtener más información, vea <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="01215-132">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="drawingCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingCollection CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.DrawingCollection CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As DrawingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DrawingCollection ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.DrawingCollection" Usage="drawingCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01215-133">Crea un clon modificable de este objeto <see cref="T:System.Windows.Media.DrawingCollection" /> y hace copias en profundidad de sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="01215-133">Creates a modifiable clone of this <see cref="T:System.Windows.Media.DrawingCollection" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="01215-134">Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="01215-134">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <returns><span data-ttu-id="01215-135">Clon modificable del objeto actual.</span><span class="sxs-lookup"><span data-stu-id="01215-135">A modifiable clone of the current object.</span></span> <span data-ttu-id="01215-136">La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="01215-136">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-137">Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto).</span><span class="sxs-lookup"><span data-stu-id="01215-137">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="01215-138">Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.</span><span class="sxs-lookup"><span data-stu-id="01215-138">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="01215-139">Para obtener más información, vea <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="01215-139">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="drawingCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Drawing value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class System.Windows.Media.Drawing value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.Contains(System.Windows.Media.Drawing)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Drawing) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Windows::Media::Drawing ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Windows.Media.Drawing -&gt; bool&#xA;override this.Contains : System.Windows.Media.Drawing -&gt; bool" Usage="drawingCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Drawing" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01215-140">Elemento que se va a buscar en esta colección.</span><span class="sxs-lookup"><span data-stu-id="01215-140">The item to locate in this collection.</span></span></param>
        <summary><span data-ttu-id="01215-141">Determina si el objeto <see cref="T:System.Windows.Media.Drawing" /> especificado está en esta colección <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-141">Determines whether a given <see cref="T:System.Windows.Media.Drawing" /> is in this <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></summary>
        <returns><span data-ttu-id="01215-142">Es <see langword="true" /> si <paramref name="value" />, el objeto <see cref="T:System.Windows.Media.Drawing" /> especificado, está en <see cref="T:System.Windows.Media.DrawingCollection" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01215-142"><see langword="true" /> if <paramref name="value" />, the specified <see cref="T:System.Windows.Media.Drawing" />, is in this <see cref="T:System.Windows.Media.DrawingCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Drawing[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Windows.Media.Drawing[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.CopyTo(System.Windows.Media.Drawing[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Drawing(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Windows::Media::Drawing ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Windows.Media.Drawing[] * int -&gt; unit&#xA;override this.CopyTo : System.Windows.Media.Drawing[] * int -&gt; unit" Usage="drawingCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Drawing[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="01215-143">Matriz que es el destino de los elementos copiados desde <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-143">The array that is the destination of the items copied from this <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="01215-144">Índice en el que se inicia el proceso de copia.</span><span class="sxs-lookup"><span data-stu-id="01215-144">The index at which copying begins.</span></span></param>
        <summary><span data-ttu-id="01215-145">Copia los elementos de <see cref="T:System.Windows.Media.DrawingCollection" />, que empiezan por el valor del índice especificado, en una matriz de objetos <see cref="T:System.Windows.Media.Drawing" />.</span><span class="sxs-lookup"><span data-stu-id="01215-145">Copies the items of this <see cref="T:System.Windows.Media.DrawingCollection" />, starting with the specified index value, into an array of <see cref="T:System.Windows.Media.Drawing" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="01215-146">El valor de <paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01215-146"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01215-147"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="01215-147"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01215-148"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="01215-148"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="01215-149">O bien</span><span class="sxs-lookup"><span data-stu-id="01215-149">-or-</span></span> 
<span data-ttu-id="01215-150">El número de elementos en la colección <see cref="T:System.Windows.Media.DrawingCollection" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la matriz <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="01215-150">The number of items in the source <see cref="T:System.Windows.Media.DrawingCollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.DrawingCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01215-151">Obtiene el número de objetos <see cref="T:System.Windows.Media.Drawing" /> que contiene la colección <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-151">Gets the number of <see cref="T:System.Windows.Media.Drawing" /> objects contained in the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></summary>
        <value><span data-ttu-id="01215-152">Número de objetos <see cref="T:System.Windows.Media.Drawing" /> que contiene la colección <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-152">The number of <see cref="T:System.Windows.Media.Drawing" /> objects contained in the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="drawingCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="drawingCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="drawingCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="drawingCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.Media.DrawingCollection.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.DrawingCollection/Enumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As DrawingCollection.Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::DrawingCollection::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.Media.DrawingCollection.Enumerator" Usage="drawingCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.DrawingCollection+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01215-153">Devuelve un enumerador que puede recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="01215-153">Returns an enumerator that can iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="01215-154">Enumerador que puede recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="01215-154">An enumerator that can iterate the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-155">Los enumeradores sólo permiten la lectura de los datos de la colección.</span><span class="sxs-lookup"><span data-stu-id="01215-155">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="01215-156">No se puede usar enumeradores para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="01215-156">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="01215-157">Inicialmente, el enumerador se coloca delante del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="01215-157">Initially, the enumerator is positioned before the first item in the collection.</span></span> <span data-ttu-id="01215-158">En esta posición, una llamada a <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="01215-158">At this position, calling <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="01215-159">Por lo tanto, debe llamar a <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> para avanzar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="01215-159">Therefore, you must call <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> to advance the enumerator to the first item of the collection before reading the value of <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="01215-160"><xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> o a <xref:System.Windows.Media.DrawingCollection.Enumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="01215-160"><xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> returns the same object until either <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> or <xref:System.Windows.Media.DrawingCollection.Enumerator.Reset%2A> is called.</span></span> <span data-ttu-id="01215-161"><xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> establece <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> al elemento siguiente.</span><span class="sxs-lookup"><span data-stu-id="01215-161"><xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> sets <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> to the next item.</span></span>  
  
 <span data-ttu-id="01215-162">Cuando se pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y que realiza la llamada <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="01215-162">After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="01215-163">Si la última llamada a <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> devuelve `false`, al llamar a <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="01215-163">If the last call to <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> returned `false`, calling <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="01215-164">Para establecer <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> como el primer elemento de la colección de nuevo, se puede llamar a <xref:System.Windows.Media.DrawingCollection.Enumerator.Reset%2A> seguido <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="01215-164">To set <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> to the first item of the collection again, you can call <xref:System.Windows.Media.DrawingCollection.Enumerator.Reset%2A> followed by <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="01215-165">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="01215-165">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="01215-166">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el enumerador queda invalidado y la siguiente llamada a <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> o <xref:System.Windows.Media.DrawingCollection.Enumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="01215-166">If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> or <xref:System.Windows.Media.DrawingCollection.Enumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="01215-167">Si la colección se modifica entre <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> y <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A>, <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> devolverá el elemento que está establecido, incluso si el enumerador ya se ha invalidado.</span><span class="sxs-lookup"><span data-stu-id="01215-167">If the collection is modified between <xref:System.Windows.Media.DrawingCollection.Enumerator.MoveNext%2A> and <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A>, <xref:System.Windows.Media.DrawingCollection.Enumerator.Current%2A> will return the item that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="01215-168">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="01215-168">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="01215-169">Incluso cuando una colección está sincronizada, otros subprocesos podrían modificar la colección, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="01215-169">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="01215-170">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="01215-170">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Drawing value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(class System.Windows.Media.Drawing value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.IndexOf(System.Windows.Media.Drawing)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Drawing) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Windows::Media::Drawing ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : System.Windows.Media.Drawing -&gt; int&#xA;override this.IndexOf : System.Windows.Media.Drawing -&gt; int" Usage="drawingCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Drawing" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01215-171">Elemento que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="01215-171">The item to search for.</span></span></param>
        <summary><span data-ttu-id="01215-172">Obtiene la posición del índice de la primera aparición del objeto <see cref="T:System.Windows.Media.Drawing" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="01215-172">Gets the index position of the first occurrence of the specified <see cref="T:System.Windows.Media.Drawing" />.</span></span></summary>
        <returns><span data-ttu-id="01215-173">Posición de índice del objeto <see cref="T:System.Windows.Media.Drawing" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="01215-173">The index position of the specified <see cref="T:System.Windows.Media.Drawing" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.IList`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Drawing value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Media.Drawing value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.Insert(System.Int32,System.Windows.Media.Drawing)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As Drawing)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Media::Drawing ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * System.Windows.Media.Drawing -&gt; unit&#xA;override this.Insert : int * System.Windows.Media.Drawing -&gt; unit" Usage="drawingCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Media.Drawing" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01215-174">Posición de índice en la que se inserta <paramref name="value" />, el objeto <see cref="T:System.Windows.Media.Drawing" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="01215-174">The index position at which to insert <paramref name="value" />, the specified <see cref="T:System.Windows.Media.Drawing" />.</span></span></param>
        <param name="value"><span data-ttu-id="01215-175">Elemento que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="01215-175">The item to insert.</span></span></param>
        <summary><span data-ttu-id="01215-176">Inserta un objeto <see cref="T:System.Windows.Media.Drawing" /> en esta colección <see cref="T:System.Windows.Media.DrawingCollection" />, en la posición de índice especificada.</span><span class="sxs-lookup"><span data-stu-id="01215-176">Inserts a <see cref="T:System.Windows.Media.Drawing" /> into this <see cref="T:System.Windows.Media.DrawingCollection" /> at the specified index position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-177">A diferencia de las implementaciones típicas de <xref:System.Collections.Generic.IList%601.Insert%2A?displayProperty=nameWithType>, esta implementación produce un <xref:System.ArgumentException> si se intenta insertar un **null** (**nada**) referencia.</span><span class="sxs-lookup"><span data-stu-id="01215-177">Unlike typical implementations of <xref:System.Collections.Generic.IList%601.Insert%2A?displayProperty=nameWithType>, this implementation throws an <xref:System.ArgumentException> if you attempt to insert a **null** (**Nothing**) reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01215-178">El valor de <paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01215-178"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01215-179"><paramref name="index" /> no es un índice válido para <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-179"><paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="01215-180"><see cref="T:System.Windows.Media.DrawingCollection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="01215-180">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="01215-181">O bien</span><span class="sxs-lookup"><span data-stu-id="01215-181">-or-</span></span> 
<span data-ttu-id="01215-182"><see cref="T:System.Windows.Media.DrawingCollection" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="01215-182">The <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Drawing this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Drawing Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As Drawing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Drawing ^ default[int] { System::Windows::Media::Drawing ^ get(int index); void set(int index, System::Windows::Media::Drawing ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.Drawing with get, set" Usage="System.Windows.Media.DrawingCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Drawing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01215-183">Índice de base cero del objeto <see cref="T:System.Windows.Media.Drawing" /> que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="01215-183">The zero-based index of the <see cref="T:System.Windows.Media.Drawing" /> object to get or set</span></span></param>
        <summary><span data-ttu-id="01215-184">Obtiene o establece el <see cref="T:System.Windows.Media.Drawing" /> que se encuentra en el índice de base cero especificado.</span><span class="sxs-lookup"><span data-stu-id="01215-184">Gets or sets the <see cref="T:System.Windows.Media.Drawing" /> at the specified zero-based index.</span></span></summary>
        <value><span data-ttu-id="01215-185"><see cref="T:System.Windows.Media.Drawing" /> en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="01215-185">The <see cref="T:System.Windows.Media.Drawing" /> at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-186">A diferencia de las implementaciones típicas de <xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType>, esta implementación produce un <xref:System.ArgumentException> si se intenta insertar un **null** (**nada**) referencia.</span><span class="sxs-lookup"><span data-stu-id="01215-186">Unlike typical implementations of <xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=nameWithType>, this implementation throws an <xref:System.ArgumentException> if you attempt to insert a **null** (**Nothing**) reference.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="01215-187">El valor de <paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="01215-187"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="01215-188"><paramref name="index" /> no es un índice válido para <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-188"><paramref name="index" /> is not a valid index in the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="01215-189"><see cref="T:System.Windows.Media.DrawingCollection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="01215-189">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="01215-190">O bien</span><span class="sxs-lookup"><span data-stu-id="01215-190">-or-</span></span> 
<span data-ttu-id="01215-191"><see cref="T:System.Windows.Media.DrawingCollection" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="01215-191">The <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="P:System.Collections.Generic.IList`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Windows.Media.Drawing value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Windows.Media.Drawing value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.Remove(System.Windows.Media.Drawing)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As Drawing) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Windows::Media::Drawing ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Windows.Media.Drawing -&gt; bool&#xA;override this.Remove : System.Windows.Media.Drawing -&gt; bool" Usage="drawingCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.Drawing" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01215-192">Elemento que se va a quitar de la colección.</span><span class="sxs-lookup"><span data-stu-id="01215-192">The item to remove from this collection.</span></span></param>
        <summary><span data-ttu-id="01215-193">Quita la primera aparición del objeto <see cref="T:System.Windows.Media.Drawing" /> especificado de <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-193">Removes the first occurrence of the specified <see cref="T:System.Windows.Media.Drawing" /> from the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></summary>
        <returns><span data-ttu-id="01215-194">Es <see langword="true" /> si el resultado de la operación fue correcto; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01215-194"><see langword="true" /> if the operation was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="01215-195"><see cref="T:System.Windows.Media.DrawingCollection" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="01215-195">The <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only.</span></span>  
  
<span data-ttu-id="01215-196">O bien</span><span class="sxs-lookup"><span data-stu-id="01215-196">-or-</span></span> 
<span data-ttu-id="01215-197"><see cref="T:System.Windows.Media.DrawingCollection" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="01215-197">The <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="drawingCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01215-198">Posición de índice del elemento que se va quitar.</span><span class="sxs-lookup"><span data-stu-id="01215-198">The index position of the item to remove.</span></span></param>
        <summary><span data-ttu-id="01215-199">Quita de la colección <see cref="T:System.Windows.Media.Drawing" /> el objeto <see cref="T:System.Windows.Media.DrawingCollection" /> ubicado en la posición de índice especificada.</span><span class="sxs-lookup"><span data-stu-id="01215-199">Removes the <see cref="T:System.Windows.Media.Drawing" /> at the specified index position from the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Windows.Media.Drawing&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;System.Windows.Media.Drawing&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;System.Windows.Media.Drawing&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingCollection.System#Collections#Generic#ICollection&lt;System#Windows#Media#Drawing&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of Drawing).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::Generic::ICollection&lt;System::Windows::Media::Drawing&gt;::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.ICollection&lt;System.Windows.Media.Drawing&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01215-200">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="01215-200">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span></span></summary>
        <value><span data-ttu-id="01215-201">Es <see langword="true" /> si la interfaz <see cref="T:System.Windows.Media.DrawingCollection" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01215-201"><see langword="true" /> if the <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-202">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-202">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-203">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.Generic.ICollection%601>.</span><span class="sxs-lookup"><span data-stu-id="01215-203">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Drawing&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Media.Drawing&gt; IEnumerable&lt;Drawing&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Media.Drawing&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Drawing&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.System#Collections#Generic#IEnumerable&lt;System#Windows#Media#Drawing&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Drawing) Implements IEnumerable(Of Drawing).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Media::Drawing ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Media.Drawing&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Media::Drawing ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Media.Drawing&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01215-204">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="01215-204">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="01215-205">Objeto <see cref="T:System.Collections.Generic.IEnumerator`1" /> que puede usarse para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="01215-205">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-206">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-207">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.Generic.IEnumerable%601>.</span><span class="sxs-lookup"><span data-stu-id="01215-207">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="01215-208"><see cref="T:System.Array" /> de base cero que recibe los elementos copiados de <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-208">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></param>
        <param name="index"><span data-ttu-id="01215-209">Posición inicial del objeto <see cref="T:System.Array" /> especificado que recibe el contenido copiado.</span><span class="sxs-lookup"><span data-stu-id="01215-209">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span></span></param>
        <summary><span data-ttu-id="01215-210">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="01215-210">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-211">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-212">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="01215-212">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.DrawingCollection.CopyTo(System.Windows.Media.Drawing[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01215-213">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span><span class="sxs-lookup"><span data-stu-id="01215-213">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span></span></summary>
        <value><span data-ttu-id="01215-214">Es <see langword="true" /> si el acceso a <see cref="T:System.Windows.Media.DrawingCollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01215-214"><see langword="true" /> if access to the <see cref="T:System.Windows.Media.DrawingCollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-215">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-216">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="01215-216">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01215-217">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.ICollection.SyncRoot" />.</span><span class="sxs-lookup"><span data-stu-id="01215-217">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span></span></summary>
        <value><span data-ttu-id="01215-218">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-218">An object that can be used to synchronize access to the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-219">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-219">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-220">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="01215-220">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01215-221">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span><span class="sxs-lookup"><span data-stu-id="01215-221">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="01215-222">Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="01215-222">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-223">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-223">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-224">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IEnumerable>.</span><span class="sxs-lookup"><span data-stu-id="01215-224">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.DrawingCollection.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01215-225"><see cref="T:System.Object" /> que se va a agregar a <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-225">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></param>
        <summary><span data-ttu-id="01215-226">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Add(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="01215-226">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="01215-227">Posición en la que se insertó el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="01215-227">The position into which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-228">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-228">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-229">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="01215-229">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.DrawingCollection.Add(System.Windows.Media.Drawing)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01215-230">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-230">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></param>
        <summary><span data-ttu-id="01215-231">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="01215-231">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="01215-232">Es <see langword="true" /> si <see cref="T:System.Object" /> se encuentra en <see cref="T:System.Windows.Media.DrawingCollection" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01215-232"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.Media.DrawingCollection" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-233">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-233">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-234">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="01215-234">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.DrawingCollection.Contains(System.Windows.Media.Drawing)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01215-235">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-235">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></param>
        <summary><span data-ttu-id="01215-236">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="01215-236">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span></span></summary>
        <returns><span data-ttu-id="01215-237">Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="01215-237">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-238">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-238">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-239">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="01215-239">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.DrawingCollection.IndexOf(System.Windows.Media.Drawing)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01215-240">Índice de base cero donde se va a insertar el objeto <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="01215-240">The zero-based index at which to insert the <see cref="T:System.Object" />.</span></span></param>
        <param name="value"><span data-ttu-id="01215-241">Objeto <see cref="T:System.Object" /> que se va a insertar en <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-241">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></param>
        <summary><span data-ttu-id="01215-242">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="01215-242">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-243">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-243">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-244">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="01215-244">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.DrawingCollection.Insert(System.Int32,System.Windows.Media.Drawing)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01215-245">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsFixedSize" />.</span><span class="sxs-lookup"><span data-stu-id="01215-245">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span></span></summary>
        <value><span data-ttu-id="01215-246">Es <see langword="true" /> si la interfaz <see cref="T:System.Windows.Media.DrawingCollection" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01215-246"><see langword="true" /> if the <see cref="T:System.Windows.Media.DrawingCollection" /> has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-247">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-247">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-248">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="01215-248">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01215-249">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="01215-249">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span></span></summary>
        <value><span data-ttu-id="01215-250">Es <see langword="true" /> si la interfaz <see cref="T:System.Windows.Media.DrawingCollection" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="01215-250"><see langword="true" /> if the <see cref="T:System.Windows.Media.DrawingCollection" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-251">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-251">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-252">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="01215-252">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.DrawingCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="01215-253">Índice de base cero del elemento que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="01215-253">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="01215-254">Para obtener una descripción de este miembro, vea <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="01215-254">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span></span></summary>
        <value><span data-ttu-id="01215-255">Elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="01215-255">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-256">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-256">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-257">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="01215-257">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.DrawingCollection.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="01215-258"><see cref="T:System.Object" /> que se va a quitar de <see cref="T:System.Windows.Media.DrawingCollection" />.</span><span class="sxs-lookup"><span data-stu-id="01215-258">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.Media.DrawingCollection" />.</span></span></param>
        <summary><span data-ttu-id="01215-259">Para obtener una descripción de este miembro, vea <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="01215-259">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01215-260">Este miembro es una implementación explícita de un miembro de interfaz.</span><span class="sxs-lookup"><span data-stu-id="01215-260">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="01215-261">Solo se puede utilizar cuando la instancia de <xref:System.Windows.Media.DrawingCollection> se convierte en una interfaz <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="01215-261">It can be used only when the <xref:System.Windows.Media.DrawingCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.DrawingCollection.Remove(System.Windows.Media.Drawing)" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="BezierSegment" FullName="System.Windows.Media.BezierSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd1c2278fb923ccd3454b9a967327d000d37a50e" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53466215" /></Metadata><TypeSignature Language="C#" Value="public sealed class BezierSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed BezierSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.BezierSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BezierSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class BezierSegment sealed : System::Windows::Media::PathSegment" />
  <TypeSignature Language="F#" Value="type BezierSegment = class&#xA;    inherit PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a2bab-101">Representa una curva Bézier cúbica dibujada entre dos puntos.</span><span class="sxs-lookup"><span data-stu-id="a2bab-101">Represents a cubic Bezier curve drawn between two points.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2bab-102">Use un <xref:System.Windows.Media.PathFigure> objeto para almacenar <xref:System.Windows.Media.BezierSegment> objetos y otros segmentos.</span><span class="sxs-lookup"><span data-stu-id="a2bab-102">Use a <xref:System.Windows.Media.PathFigure> object to store <xref:System.Windows.Media.BezierSegment> objects and other segments.</span></span>  
  
 <span data-ttu-id="a2bab-103">Una curva Bézier cúbica se define por cuatro puntos: un punto inicial, un punto de conexión (<xref:System.Windows.Media.BezierSegment.Point3%2A>), y dos puntos de control (<xref:System.Windows.Media.BezierSegment.Point1%2A> y <xref:System.Windows.Media.BezierSegment.Point2%2A>). La <xref:System.Windows.Media.BezierSegment> clase no tiene una propiedad para el punto inicial de la curva; únicamente define el punto final.</span><span class="sxs-lookup"><span data-stu-id="a2bab-103">A cubic Bezier curve is defined by four points: a start point, an end point (<xref:System.Windows.Media.BezierSegment.Point3%2A>), and two control points (<xref:System.Windows.Media.BezierSegment.Point1%2A> and <xref:System.Windows.Media.BezierSegment.Point2%2A>).The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="a2bab-104">Punto inicial de la curva es el punto actual de la <xref:System.Windows.Media.PathFigure> a la que el <xref:System.Windows.Media.BezierSegment> se agrega.</span><span class="sxs-lookup"><span data-stu-id="a2bab-104">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="a2bab-105">Los dos puntos de control de una curva Bézier cúbica se comportan como imanes, atraen de lo contrario, lo que sería una línea recta y generan una curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-105">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="a2bab-106">El primer punto de control, <xref:System.Windows.Media.BezierSegment.Point1%2A>, afecta al principio de la curva; el segundo punto de control, <xref:System.Windows.Media.BezierSegment.Point2%2A>, afecta a la parte final de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-106">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="a2bab-107">Tenga en cuenta que la curva necesariamente no pasa a través de cualquiera de los puntos de control; cada punto de control mueve su parte de la línea hacia sí mismo, pero no a través.</span><span class="sxs-lookup"><span data-stu-id="a2bab-107">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
## <a name="freezable-features"></a><span data-ttu-id="a2bab-108">Características de los objetos Freezable</span><span class="sxs-lookup"><span data-stu-id="a2bab-108">Freezable Features</span></span>  
 <span data-ttu-id="a2bab-109">Un <xref:System.Windows.Media.BezierSegment> es un tipo de <xref:System.Windows.Freezable> objeto.</span><span class="sxs-lookup"><span data-stu-id="a2bab-109">A <xref:System.Windows.Media.BezierSegment> is a type of <xref:System.Windows.Freezable> object.</span></span> <span data-ttu-id="a2bab-110">Para obtener información acerca de <xref:System.Windows.Freezable> características, como la inmovilización y la clonación, consulte el [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a2bab-110">For information about <xref:System.Windows.Freezable> features, such as freezing and cloning, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159989"><span data-ttu-id="a2bab-111">Ejemplo de geometrías</span><span class="sxs-lookup"><span data-stu-id="a2bab-111">Geometries Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2bab-112">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.BezierSegment" />.</span><span class="sxs-lookup"><span data-stu-id="a2bab-112">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2bab-113">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.BezierSegment" />.</span><span class="sxs-lookup"><span data-stu-id="a2bab-113">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2bab-114">Una curva Bézier cúbica se define por cuatro puntos: un punto inicial, un punto de conexión (`point3`), y dos puntos de control (`point1` y `point2`).</span><span class="sxs-lookup"><span data-stu-id="a2bab-114">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="a2bab-115">Este método no permite especificar el punto inicial de la curva; la curva comienza en el punto actual de la <xref:System.Windows.Media.PathFigure> objeto al que el <xref:System.Windows.Media.BezierSegment> se agrega.</span><span class="sxs-lookup"><span data-stu-id="a2bab-115">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="a2bab-116">Los dos puntos de control de una curva Bézier cúbica se comportan como imanes, atraen de lo contrario, lo que sería una línea recta y generan una curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-116">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="a2bab-117">El primer punto de control, `point1`, afecta al principio de la curva; el segundo punto de control, `point2`, afecta a la parte final de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-117">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="a2bab-118">Tenga en cuenta que la curva necesariamente no pasa a través de cualquiera de los puntos de control; cada punto de control mueve su parte de la línea hacia sí mismo, pero no a través.</span><span class="sxs-lookup"><span data-stu-id="a2bab-118">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BezierSegment (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BezierSegment(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.BezierSegment : System.Windows.Point * System.Windows.Point * System.Windows.Point * bool -&gt; System.Windows.Media.BezierSegment" Usage="new System.Windows.Media.BezierSegment (point1, point2, point3, isStroked)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="a2bab-119">Primer punto de control, que determina la parte inicial de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-119">The first control point, which determines the beginning portion of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="a2bab-120">Segundo punto de control, que determina la parte final de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-120">The second control point, which determines the ending portion of the curve.</span></span></param>
        <param name="point3"><span data-ttu-id="a2bab-121">Punto en el que se dibuja la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-121">The point to which the curve is drawn.</span></span></param>
        <param name="isStroked"><span data-ttu-id="a2bab-122"><see langword="true" /> para trazar la curva si se utiliza un elemento <see cref="T:System.Windows.Media.Pen" /> para representar el segmento; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2bab-122"><see langword="true" /> to stroke the curve when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="a2bab-123">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.BezierSegment" /> con los puntos de control, el extremo y la opción de trazo especificados.</span><span class="sxs-lookup"><span data-stu-id="a2bab-123">Initializes a new instance of the <see cref="T:System.Windows.Media.BezierSegment" /> class with the specified control points, end point, and stroke option.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2bab-124">Una curva Bézier cúbica se define por cuatro puntos: un punto inicial, un punto de conexión (`point3`), y dos puntos de control (`point1` y `point2`).</span><span class="sxs-lookup"><span data-stu-id="a2bab-124">A cubic Bezier curve is defined by four points: a start point, an end point (`point3`), and two control points (`point1` and `point2`).</span></span> <span data-ttu-id="a2bab-125">Este método no permite especificar el punto inicial de la curva; la curva comienza en el punto actual de la <xref:System.Windows.Media.PathFigure> objeto al que el <xref:System.Windows.Media.BezierSegment> se agrega.</span><span class="sxs-lookup"><span data-stu-id="a2bab-125">This method does not enable you to specify the beginning point of the curve; the curve begins at the current point of the <xref:System.Windows.Media.PathFigure> object to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
 <span data-ttu-id="a2bab-126">Los dos puntos de control de una curva Bézier cúbica se comportan como imanes, atraen de lo contrario, lo que sería una línea recta y generan una curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-126">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="a2bab-127">El primer punto de control, `point1`, afecta al principio de la curva; el segundo punto de control, `point2`, afecta a la parte final de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-127">The first control point, `point1`, affects the beginning portion of the curve; the second control point, `point2`, affects the ending portion of the curve.</span></span> <span data-ttu-id="a2bab-128">Tenga en cuenta que la curva necesariamente no pasa a través de cualquiera de los puntos de control; cada punto de control mueve su parte de la línea hacia sí mismo, pero no a través.</span><span class="sxs-lookup"><span data-stu-id="a2bab-128">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.BezierSegment" Usage="bezierSegment.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2bab-129">Crea un clon modificable de este <see cref="T:System.Windows.Media.BezierSegment" /> y hace copias en profundidad de los valores de este objeto.</span><span class="sxs-lookup"><span data-stu-id="a2bab-129">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" />, making deep copies of this object's values.</span></span> <span data-ttu-id="a2bab-130">Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="a2bab-130">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="a2bab-131">Clon modificable del objeto actual.</span><span class="sxs-lookup"><span data-stu-id="a2bab-131">A modifiable clone of the current object.</span></span> <span data-ttu-id="a2bab-132">La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true." />.</span><span class="sxs-lookup"><span data-stu-id="a2bab-132">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2bab-133">Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto).</span><span class="sxs-lookup"><span data-stu-id="a2bab-133">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="a2bab-134">Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.</span><span class="sxs-lookup"><span data-stu-id="a2bab-134">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="a2bab-135">Para obtener más información, vea <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2bab-135">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.BezierSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.BezierSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As BezierSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::BezierSegment ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.BezierSegment" Usage="bezierSegment.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.BezierSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2bab-136">Crea un clon modificable de este objeto <see cref="T:System.Windows.Media.BezierSegment" /> y hace copias en profundidad de sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="a2bab-136">Creates a modifiable clone of this <see cref="T:System.Windows.Media.BezierSegment" /> object, making deep copies of this object's current values.</span></span> <span data-ttu-id="a2bab-137">Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="a2bab-137">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <returns><span data-ttu-id="a2bab-138">Clon modificable del objeto actual.</span><span class="sxs-lookup"><span data-stu-id="a2bab-138">A modifiable clone of the current object.</span></span> <span data-ttu-id="a2bab-139">La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="a2bab-139">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2bab-140">Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto).</span><span class="sxs-lookup"><span data-stu-id="a2bab-140">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="a2bab-141">Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.</span><span class="sxs-lookup"><span data-stu-id="a2bab-141">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="a2bab-142">Para obtener más información, vea <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2bab-142">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.BezierSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="bezierSegment.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point1 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point1" />
      <MemberSignature Language="VB.NET" Value="Public Property Point1 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point1 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point1 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2bab-143">Obtiene o establece el primer punto de control de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-143">Gets or sets the first control point of the curve.</span></span></summary>
        <value><span data-ttu-id="a2bab-144">Primer punto de control de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-144">The first control point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2bab-145">Los dos puntos de control de una curva Bézier cúbica se comportan como imanes, atraen de lo contrario, lo que sería una línea recta y generan una curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-145">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="a2bab-146">El primer punto de control, <xref:System.Windows.Media.BezierSegment.Point1%2A>, afecta al principio de la curva; el segundo punto de control, <xref:System.Windows.Media.BezierSegment.Point2%2A>, afecta a la parte final de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-146">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="a2bab-147">Tenga en cuenta que la curva necesariamente no pasa a través de cualquiera de los puntos de control; cada punto de control mueve su parte de la línea hacia sí mismo, pero no a través.</span><span class="sxs-lookup"><span data-stu-id="a2bab-147">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point1"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a2bab-148">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="a2bab-148">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a2bab-149">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a2bab-149">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point1Property>|  
|<span data-ttu-id="a2bab-150">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="a2bab-150">Metadata properties set to `true`</span></span>|<span data-ttu-id="a2bab-151">None</span><span class="sxs-lookup"><span data-stu-id="a2bab-151">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point1Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point1Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point1Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point1Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point1Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point1Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point1Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point1Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2bab-152">Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.BezierSegment.Point1" />.</span><span class="sxs-lookup"><span data-stu-id="a2bab-152">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point1" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point2" />
      <MemberSignature Language="VB.NET" Value="Public Property Point2 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point2 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point2 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2bab-153">Obtiene o establece el segundo punto de control de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-153">Gets or sets the second control point of the curve.</span></span></summary>
        <value><span data-ttu-id="a2bab-154">Segundo punto de control de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-154">The second control point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2bab-155">Los dos puntos de control de una curva Bézier cúbica se comportan como imanes, atraen de lo contrario, lo que sería una línea recta y generan una curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-155">The two control points of a cubic Bezier curve behave like magnets, attracting portions of what would otherwise be a straight line toward themselves and producing a curve.</span></span> <span data-ttu-id="a2bab-156">El primer punto de control, <xref:System.Windows.Media.BezierSegment.Point1%2A>, afecta al principio de la curva; el segundo punto de control, <xref:System.Windows.Media.BezierSegment.Point2%2A>, afecta a la parte final de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-156">The first control point, <xref:System.Windows.Media.BezierSegment.Point1%2A>, affects the beginning portion of the curve; the second control point, <xref:System.Windows.Media.BezierSegment.Point2%2A>, affects the ending portion of the curve.</span></span> <span data-ttu-id="a2bab-157">Tenga en cuenta que la curva necesariamente no pasa a través de cualquiera de los puntos de control; cada punto de control mueve su parte de la línea hacia sí mismo, pero no a través.</span><span class="sxs-lookup"><span data-stu-id="a2bab-157">Note that the curve doesn't necessarily pass through either of the control points; each control point moves its portion of the line toward itself, but not through itself.</span></span>  
  
<a name="dependencyPropertyInfo_Point2"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a2bab-158">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="a2bab-158">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a2bab-159">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a2bab-159">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point2Property>|  
|<span data-ttu-id="a2bab-160">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="a2bab-160">Metadata properties set to `true`</span></span>|<span data-ttu-id="a2bab-161">None</span><span class="sxs-lookup"><span data-stu-id="a2bab-161">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point2Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point2Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point2Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point2Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point2Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point2Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point2Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point2Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2bab-162">Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.BezierSegment.Point2" />.</span><span class="sxs-lookup"><span data-stu-id="a2bab-162">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point2" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point3 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point3" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.BezierSegment.Point3" />
      <MemberSignature Language="VB.NET" Value="Public Property Point3 As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point3 { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point3 : System.Windows.Point with get, set" Usage="System.Windows.Media.BezierSegment.Point3" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2bab-163">Obtiene o establece el punto final de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-163">Gets or sets the end point of the curve.</span></span></summary>
        <value><span data-ttu-id="a2bab-164">Punto final de la curva.</span><span class="sxs-lookup"><span data-stu-id="a2bab-164">The end point of the curve.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2bab-165">La <xref:System.Windows.Media.BezierSegment> clase no tiene una propiedad para el punto inicial de la curva; únicamente define el punto final.</span><span class="sxs-lookup"><span data-stu-id="a2bab-165">The <xref:System.Windows.Media.BezierSegment> class does not contain a property for the starting point of the curve; it only defines the end point.</span></span> <span data-ttu-id="a2bab-166">Punto inicial de la curva es el punto actual de la <xref:System.Windows.Media.PathFigure> a la que el <xref:System.Windows.Media.BezierSegment> se agrega.</span><span class="sxs-lookup"><span data-stu-id="a2bab-166">The beginning point of the curve is the current point of the <xref:System.Windows.Media.PathFigure> to which the <xref:System.Windows.Media.BezierSegment> is added.</span></span>  
  
<a name="dependencyPropertyInfo_Point3"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="a2bab-167">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="a2bab-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="a2bab-168">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="a2bab-168">Identifier field</span></span>|<xref:System.Windows.Media.BezierSegment.Point3Property>|  
|<span data-ttu-id="a2bab-169">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="a2bab-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="a2bab-170">None</span><span class="sxs-lookup"><span data-stu-id="a2bab-170">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Point3Property">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty Point3Property;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty Point3Property" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.BezierSegment.Point3Property" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Point3Property As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ Point3Property;" />
      <MemberSignature Language="F#" Value=" staticval mutable Point3Property : System.Windows.DependencyProperty" Usage="System.Windows.Media.BezierSegment.Point3Property" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2bab-171">Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.BezierSegment.Point3" />.</span><span class="sxs-lookup"><span data-stu-id="a2bab-171">Identifies the <see cref="P:System.Windows.Media.BezierSegment.Point3" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
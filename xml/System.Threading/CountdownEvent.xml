<Type Name="CountdownEvent" FullName="System.Threading.CountdownEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5be4955118b82fb55928fb7bbfeffd7b4860e6ae" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53290761" /></Metadata><TypeSignature Language="C#" Value="public class CountdownEvent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CountdownEvent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.CountdownEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class CountdownEvent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CountdownEvent : IDisposable" />
  <TypeSignature Language="F#" Value="type CountdownEvent = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Initial Count={InitialCount}, Current Count={CurrentCount}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b6fe5-101">Representa una primitiva de sincronización que está señalada cuando su recuento alcanza el valor cero.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-101">Represents a synchronization primitive that is signaled when its count reaches zero.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  

## Examples  
  
 <span data-ttu-id="b6fe5-102">El ejemplo siguiente muestra cómo usar un `CountdownEvent`:</span><span class="sxs-lookup"><span data-stu-id="b6fe5-102">The following example shows how to use a `CountdownEvent`:</span></span>  
  
 [!code-csharp[System.Threading.CountdownEvent#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.countdownevent/cs/countdownevent.cs#01)]
 [!code-vb[System.Threading.CountdownEvent#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.countdownevent/vb/countdownevent.vb#01)]  
  
          ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b6fe5-103">Todos los miembros públicos y protegidos de <see cref="T:System.Threading.CountdownEvent" /> son seguros para subprocesos y se pueden usar simultáneamente desde varios subprocesos, con la excepción de <see cref="M:System.Threading.CountdownEvent.Dispose" />, que debe usarse solo cuando todas las operaciones en el <see cref="T:System.Threading.CountdownEvent" /> haya completado y <see cref="M:System.Threading.CountdownEvent.Reset" />, que solo debe usarse cuando otros subprocesos no tienen acceso a los eventos.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-103">All public and protected members of <see cref="T:System.Threading.CountdownEvent" /> are thread-safe and may be used concurrently from multiple threads, with the exception of <see cref="M:System.Threading.CountdownEvent.Dispose" />, which must only be used when all other operations on the <see cref="T:System.Threading.CountdownEvent" /> have completed, and <see cref="M:System.Threading.CountdownEvent.Reset" />, which should only be used when no other threads are accessing the event.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/countdownevent.md"><span data-ttu-id="b6fe5-104">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-104">CountdownEvent</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CountdownEvent (int initialCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CountdownEvent(int initialCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.CountdownEvent : int -&gt; System.Threading.CountdownEvent" Usage="new System.Threading.CountdownEvent initialCount" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="b6fe5-105">Número de señales necesarias inicialmente para establecer <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-105">The number of signals initially required to set the <see cref="T:System.Threading.CountdownEvent" />.</span></span></param>
        <summary><span data-ttu-id="b6fe5-106">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.CountdownEvent" /> con el recuento especificado.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-106">Initializes a new instance of <see cref="T:System.Threading.CountdownEvent" /> class with the specified count.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-107">iI `initialCount` es 0, se crea el evento en un estado señalado.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-107">iI `initialCount` is 0, the event is created in a signaled state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-108"><paramref name="initialCount" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-108"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-109">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-109">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCount">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6fe5-110">Incrementa el recuento actual de <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-110">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-111">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-111">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCount">
      <MemberSignature Language="C#" Value="public void AddCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.AddCount" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCount ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCount();" />
      <MemberSignature Language="F#" Value="member this.AddCount : unit -&gt; unit" Usage="countdownEvent.AddCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6fe5-112">Incrementa en uno el recuento actual de <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-112">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count by one.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-113">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-113">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b6fe5-114">La instancia actual ya está establecida.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-114">The current instance is already set.</span></span>  
  
<span data-ttu-id="b6fe5-115">O bien</span><span class="sxs-lookup"><span data-stu-id="b6fe5-115">-or-</span></span> 
 <span data-ttu-id="b6fe5-116"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> es igual o mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-116"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-117">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-117">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="AddCount">
      <MemberSignature Language="C#" Value="public void AddCount (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCount(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.AddCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCount (signalCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCount(int signalCount);" />
      <MemberSignature Language="F#" Value="member this.AddCount : int -&gt; unit" Usage="countdownEvent.AddCount signalCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="b6fe5-118">Valor en que se va a aumentar <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-118">The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></param>
        <summary><span data-ttu-id="b6fe5-119">Incrementa en un valor especificado el recuento actual de <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-119">Increments the <see cref="T:System.Threading.CountdownEvent" />'s current count by a specified value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-120">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-120">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-121"><paramref name="signalCount" /> es menor o igual que 0.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-121"><paramref name="signalCount" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b6fe5-122">La instancia actual ya está establecida.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-122">The current instance is already set.</span></span>  
  
<span data-ttu-id="b6fe5-123">O bien</span><span class="sxs-lookup"><span data-stu-id="b6fe5-123">-or-</span></span> 
 <span data-ttu-id="b6fe5-124"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> es igual o mayor que <see cref="F:System.Int32.MaxValue" /> después de incrementar la cuenta en <paramref name="signalCount." /></span><span class="sxs-lookup"><span data-stu-id="b6fe5-124"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" /> after count is incremented by <paramref name="signalCount." /></span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-125">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-125">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CurrentCount">
      <MemberSignature Language="C#" Value="public int CurrentCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.CurrentCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrentCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentCount : int" Usage="System.Threading.CountdownEvent.CurrentCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6fe5-126">Obtiene el número de señales restantes necesario para establecer el evento.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-126">Gets the number of remaining signals required to set the event.</span></span></summary>
        <value><span data-ttu-id="b6fe5-127">El número de señales restantes necesario para establecer el evento.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-127">The number of remaining signals required to set the event.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6fe5-128">Libera los recursos que usa la instancia actual de la clase <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-128">Releases resources used by the current instance of the <see cref="T:System.Threading.CountdownEvent" /> class.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-129">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-129">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="countdownEvent.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6fe5-130">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-130">Releases all resources used by the current instance of the <see cref="T:System.Threading.CountdownEvent" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-131">Llame a `Dispose` cuando haya terminado de usar <xref:System.Threading.CountdownEvent>.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-131">Call `Dispose` when you are finished using the <xref:System.Threading.CountdownEvent>.</span></span> <span data-ttu-id="b6fe5-132">El método `Dispose` deja el <xref:System.Threading.CountdownEvent> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-132">The `Dispose` method leaves the <xref:System.Threading.CountdownEvent> in an unusable state.</span></span> <span data-ttu-id="b6fe5-133">Después de llamar a `Dispose`, debe liberar todas las referencias a la <xref:System.Threading.CountdownEvent> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Threading.CountdownEvent> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-133">After calling `Dispose`, you must release all references to the <xref:System.Threading.CountdownEvent> so the garbage collector can reclaim the memory that the <xref:System.Threading.CountdownEvent> was occupying.</span></span>  
  
 <span data-ttu-id="b6fe5-134">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="b6fe5-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b6fe5-135">Realice siempre una llamada a `Dispose` antes de liberar la última referencia al objeto <xref:System.Threading.CountdownEvent>.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-135">Always call `Dispose` before you release your last reference to the <xref:System.Threading.CountdownEvent>.</span></span> <span data-ttu-id="b6fe5-136">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Threading.CountdownEvent> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-136">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.CountdownEvent> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-137">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-137">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="countdownEvent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="b6fe5-138">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-138">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="b6fe5-139">Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Threading.CountdownEvent" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-139">Releases the unmanaged resources used by the <see cref="T:System.Threading.CountdownEvent" />, and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-140">A diferencia de la mayoría de los miembros de <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> no es segura para subprocesos y no puede usarse simultáneamente con otros miembros de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-140">Unlike most of the members of <xref:System.Threading.CountdownEvent>, <xref:System.Threading.CountdownEvent.Dispose%2A> is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialCount">
      <MemberSignature Language="C#" Value="public int InitialCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InitialCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.InitialCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InitialCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InitialCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InitialCount : int" Usage="System.Threading.CountdownEvent.InitialCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6fe5-141">Obtiene los números de señales que se necesitan inicialmente para establecer el evento.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-141">Gets the numbers of signals initially required to set the event.</span></span></summary>
        <value><span data-ttu-id="b6fe5-142">El número de señales que se necesitan inicialmente para establecer el evento.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-142">The number of signals initially required to set the event.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-143">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-143">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsSet">
      <MemberSignature Language="C#" Value="public bool IsSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSet" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.IsSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSet { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSet : bool" Usage="System.Threading.CountdownEvent.IsSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6fe5-144">Indica si el recuento actual del objeto <see cref="T:System.Threading.CountdownEvent" /> ha llegado a cero.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-144">Indicates whether the <see cref="T:System.Threading.CountdownEvent" /> object's current count has reached zero.</span></span></summary>
        <value><span data-ttu-id="b6fe5-145"><see langword="true" /> si el recuento actual es cero; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-145"><see langword="true" /> if the current count is zero; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-146">El <xref:System.Threading.CountdownEvent> no genera un evento cuando la cuenta atrás llegue a cero.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-146">The <xref:System.Threading.CountdownEvent> does not raise an event when the countdown has reached zero.</span></span> <span data-ttu-id="b6fe5-147">En su lugar, el <xref:System.Threading.CountdownEvent.CurrentCount%2A> propiedad es igual a cero y el <xref:System.Threading.CountdownEvent.IsSet%2A> igual a la propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-147">Instead, the <xref:System.Threading.CountdownEvent.CurrentCount%2A> property equals zero, and the <xref:System.Threading.CountdownEvent.IsSet%2A> property equals `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reset">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6fe5-148">Restablece el valor <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-148">Resets the <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> value.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-149">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-149">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="countdownEvent.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6fe5-150">Restablece <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> en el valor de <see cref="P:System.Threading.CountdownEvent.InitialCount" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-150">Resets the <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> to the value of <see cref="P:System.Threading.CountdownEvent.InitialCount" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-151">A diferencia de la mayoría de los miembros de <xref:System.Threading.CountdownEvent>, restablecimiento no es segura para subprocesos y no puede usarse simultáneamente con otros miembros de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-151">Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-152">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-152">The current instance has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Reset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(int count);" />
      <MemberSignature Language="F#" Value="member this.Reset : int -&gt; unit" Usage="countdownEvent.Reset count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="b6fe5-153">Número de señales necesario para establecer <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-153">The number of signals required to set the <see cref="T:System.Threading.CountdownEvent" />.</span></span></param>
        <summary><span data-ttu-id="b6fe5-154">Restablece la propiedad <see cref="P:System.Threading.CountdownEvent.InitialCount" /> según un valor especificado.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-154">Resets the <see cref="P:System.Threading.CountdownEvent.InitialCount" /> property to a specified value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-155">Este método restablece <xref:System.Threading.CountdownEvent.InitialCount%2A> para todos los accesos posteriores de la propiedad en la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-155">This method resets <xref:System.Threading.CountdownEvent.InitialCount%2A> for all subsequent accesses of the property on the current instance.</span></span> <span data-ttu-id="b6fe5-156">A diferencia de la mayoría de los miembros de <xref:System.Threading.CountdownEvent>, restablecimiento no es segura para subprocesos y no puede usarse simultáneamente con otros miembros de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-156">Unlike most of the members of <xref:System.Threading.CountdownEvent>, Reset is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-157">La instancia actual ya se ha eliminado.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-157">The current instance has alread been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-158"><paramref name="count" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-158"><paramref name="count" /> is less than 0.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-159">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-159">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Signal">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6fe5-160">Registra una señal con <see cref="T:System.Threading.CountdownEvent" /> y disminuye el valor de <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-160">Registers a signal with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Signal">
      <MemberSignature Language="C#" Value="public bool Signal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Signal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Signal" />
      <MemberSignature Language="VB.NET" Value="Public Function Signal () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Signal();" />
      <MemberSignature Language="F#" Value="member this.Signal : unit -&gt; bool" Usage="countdownEvent.Signal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6fe5-161">Registra una señal con <see cref="T:System.Threading.CountdownEvent" /> y disminuye el valor de <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-161">Registers a signal with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
        <returns><span data-ttu-id="b6fe5-162">Es true si la señal hizo que el recuento alcanzara el valor cero y se estableció el evento; de lo contrario, falso.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-162">true if the signal caused the count to reach zero and the event was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-163">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-163">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b6fe5-164">La instancia actual ya está establecida.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-164">The current instance is already set.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-165">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-165">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Signal">
      <MemberSignature Language="C#" Value="public bool Signal (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Signal(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Signal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Signal (signalCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Signal(int signalCount);" />
      <MemberSignature Language="F#" Value="member this.Signal : int -&gt; bool" Usage="countdownEvent.Signal signalCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="b6fe5-166">Número de señales que se va a registrar.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-166">The number of signals to register.</span></span></param>
        <summary><span data-ttu-id="b6fe5-167">Registra varias señales con <see cref="T:System.Threading.CountdownEvent" /> reduciendo el valor de <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> según la cantidad especificada.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-167">Registers multiple signals with the <see cref="T:System.Threading.CountdownEvent" />, decrementing the value of <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by the specified amount.</span></span></summary>
        <returns><span data-ttu-id="b6fe5-168">Es true si las señales hicieron que el recuento alcanzara el valor cero y se estableció el evento; de lo contrario, falso.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-168">true if the signals caused the count to reach zero and the event was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-169">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-169">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-170"><paramref name="signalCount" /> es menor que 1.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-170"><paramref name="signalCount" /> is less than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b6fe5-171">La instancia actual ya está establecida.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-171">The current instance is already set.</span></span> <span data-ttu-id="b6fe5-172">-o bien- <paramref name="signalCount" /> es mayor que <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-172">-or- Or <paramref name="signalCount" /> is greater than <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-173">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-173">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryAddCount">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6fe5-174">Intenta incrementar <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-174">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-175">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-175">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryAddCount">
      <MemberSignature Language="C#" Value="public bool TryAddCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAddCount() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.TryAddCount" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddCount () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAddCount();" />
      <MemberSignature Language="F#" Value="member this.TryAddCount : unit -&gt; bool" Usage="countdownEvent.TryAddCount " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6fe5-176">Intenta incrementar <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> en uno.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-176">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by one.</span></span></summary>
        <returns><span data-ttu-id="b6fe5-177">Es true si el incremento se realizó correctamente; en caso contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-177">true if the increment succeeded; otherwise, false.</span></span> <span data-ttu-id="b6fe5-178">Si <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> ya está en el valor cero, este método devolverá false.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-178">If <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is already at zero, this method will return false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-179">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-179">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b6fe5-180"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> es igual a <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-180"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is equal to <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-181">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-181">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryAddCount">
      <MemberSignature Language="C#" Value="public bool TryAddCount (int signalCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryAddCount(int32 signalCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.TryAddCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddCount (signalCount As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryAddCount(int signalCount);" />
      <MemberSignature Language="F#" Value="member this.TryAddCount : int -&gt; bool" Usage="countdownEvent.TryAddCount signalCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signalCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="signalCount"><span data-ttu-id="b6fe5-182">Valor en que se va a aumentar <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-182">The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.</span></span></param>
        <summary><span data-ttu-id="b6fe5-183">Intenta incrementar <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> en un valor especificado.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-183">Attempts to increment <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> by a specified value.</span></span></summary>
        <returns><span data-ttu-id="b6fe5-184">Es true si el incremento se realizó correctamente; en caso contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-184">true if the increment succeeded; otherwise, false.</span></span> <span data-ttu-id="b6fe5-185">Si <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> ya está en el valor cero, se devolverá false.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-185">If <see cref="P:System.Threading.CountdownEvent.CurrentCount" /> is already at zero this will return false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-186">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-186">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-187"><paramref name="signalCount" /> es menor o igual que 0.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-187"><paramref name="signalCount" /> is less than or equal to 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b6fe5-188"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> + <paramref name="signalCount" /> es igual o mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-188"><see cref="P:System.Threading.CountdownEvent.CurrentCount" /> + <paramref name="signalCount" /> is equal to or greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Wait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b6fe5-189">Bloquea el subproceso actual hasta que se establezca el objeto <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-189">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set.</span></span></summary>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-190">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-190">CountdownEvent</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait" />
      <MemberSignature Language="VB.NET" Value="Public Sub Wait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait();" />
      <MemberSignature Language="F#" Value="member this.Wait : unit -&gt; unit" Usage="countdownEvent.Wait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b6fe5-191">Bloquea el subproceso actual hasta que se establezca el objeto <see cref="T:System.Threading.CountdownEvent" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-191">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-192">El llamador de este método se bloquea indefinidamente hasta que se establece la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-192">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="b6fe5-193">El llamador se devolverá inmediatamente si el evento está actualmente en un estado establecido.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-193">The caller will return immediately if the event is currently in a set state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-194">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-194">The current instance has already been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-195">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-195">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : int -&gt; bool" Usage="countdownEvent.Wait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="b6fe5-196">Número de milisegundos de espera o <see cref="F:System.Threading.Timeout.Infinite" /> (-1) para esperar indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-196">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="b6fe5-197">Bloquea el subproceso actual hasta que se establezca el objeto <see cref="T:System.Threading.CountdownEvent" />, usando un entero de 32 bits con signo para medir el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-197">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a 32-bit signed integer to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="b6fe5-198">Es true si se estableció el objeto <see cref="T:System.Threading.CountdownEvent" />; de lo contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-198">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-199">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-199">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-200"><paramref name="millisecondsTimeout" /> es un número negativo distinto de-1, que representa un tiempo de espera infinito.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-200"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-201">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-201">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public void Wait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Wait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Wait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : System.Threading.CancellationToken -&gt; unit" Usage="countdownEvent.Wait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"><span data-ttu-id="b6fe5-202"><see cref="T:System.Threading.CancellationToken" /> que se va a observar.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-202">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="b6fe5-203">Bloquea el subproceso actual hasta que se establezca el objeto <see cref="T:System.Threading.CountdownEvent" />, mientras se observa un token <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-203">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-204">El llamador de este método se bloquea indefinidamente hasta que se establece la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-204">The caller of this method blocks indefinitely until the current instance is set.</span></span> <span data-ttu-id="b6fe5-205">El llamador se devolverá inmediatamente si el evento está actualmente en un estado establecido.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-205">The caller will return immediately if the event is currently in a set state.</span></span> <span data-ttu-id="b6fe5-206">Si el <xref:System.Threading.CancellationToken> que se observa se canceló durante la operación de espera, una <xref:System.OperationCanceledException> se iniciará.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-206">If the <xref:System.Threading.CancellationToken> being observed is canceled during the wait operation, an <xref:System.OperationCanceledException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="b6fe5-207">Se ha cancelado <paramref name="cancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-207"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-208">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-208">The current instance has already been disposed.</span></span> <span data-ttu-id="b6fe5-209">o bien, <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> sido eliminado.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-209">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-210">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-210">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Wait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan -&gt; bool" Usage="countdownEvent.Wait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b6fe5-211">Estructura <see cref="T:System.TimeSpan" /> que representa el número de milisegundos de espera o estructura <see cref="T:System.TimeSpan" /> que representa -1 milisegundos para esperar indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-211">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <summary><span data-ttu-id="b6fe5-212">Bloquea el subproceso actual hasta que se establezca el objeto <see cref="T:System.Threading.CountdownEvent" />, usando un objeto <see cref="T:System.TimeSpan" /> para medir el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-212">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the timeout.</span></span></summary>
        <returns><span data-ttu-id="b6fe5-213">Es true si se estableció el objeto <see cref="T:System.Threading.CountdownEvent" />; de lo contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-213">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-214">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-214">The current instance has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-215"><paramref name="timeout" /> es un número negativo distinto de -1 milisegundo, que representa un tiempo de espera infinito, o el tiempo de espera es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-215"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-216">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-216">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : int * System.Threading.CancellationToken -&gt; bool" Usage="countdownEvent.Wait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout"><span data-ttu-id="b6fe5-217">Número de milisegundos de espera o <see cref="F:System.Threading.Timeout.Infinite" /> (-1) para esperar indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-217">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b6fe5-218"><see cref="T:System.Threading.CancellationToken" /> que se va a observar.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-218">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="b6fe5-219">Bloquea el subproceso actual hasta que se establezca el objeto <see cref="T:System.Threading.CountdownEvent" />, usando un entero de 32 bits con signo para medir el tiempo de espera, mientras se observa un token <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-219">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a 32-bit signed integer to measure the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="b6fe5-220">Es true si se estableció el objeto <see cref="T:System.Threading.CountdownEvent" />; de lo contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-220">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="b6fe5-221">Se ha cancelado <paramref name="cancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-221"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-222">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-222">The current instance has already been disposed.</span></span> <span data-ttu-id="b6fe5-223">o bien, <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> sido eliminado.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-223">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-224"><paramref name="millisecondsTimeout" /> es un número negativo distinto de-1, que representa un tiempo de espera infinito.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-224"><paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-225">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-225">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Wait">
      <MemberSignature Language="C#" Value="public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Wait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Wait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.Wait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="countdownEvent.Wait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="b6fe5-226">Estructura <see cref="T:System.TimeSpan" /> que representa el número de milisegundos de espera o estructura <see cref="T:System.TimeSpan" /> que representa -1 milisegundos para esperar indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-226">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="b6fe5-227"><see cref="T:System.Threading.CancellationToken" /> que se va a observar.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-227">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span></span></param>
        <summary><span data-ttu-id="b6fe5-228">Bloquea el subproceso actual hasta que se establezca el objeto <see cref="T:System.Threading.CountdownEvent" />, usando un objeto <see cref="T:System.TimeSpan" /> para medir el tiempo de espera, mientras se observa un token <see cref="T:System.Threading.CancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-228">Blocks the current thread until the <see cref="T:System.Threading.CountdownEvent" /> is set, using a <see cref="T:System.TimeSpan" /> to measure the timeout, while observing a <see cref="T:System.Threading.CancellationToken" />.</span></span></summary>
        <returns><span data-ttu-id="b6fe5-229">Es true si se estableció el objeto <see cref="T:System.Threading.CountdownEvent" />; de lo contrario, es false.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-229">true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException"><span data-ttu-id="b6fe5-230">Se ha cancelado <paramref name="cancellationToken" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-230"><paramref name="cancellationToken" /> has been canceled.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-231">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-231">The current instance has already been disposed.</span></span> <span data-ttu-id="b6fe5-232">o bien, <see cref="T:System.Threading.CancellationTokenSource" /> que creó <paramref name="cancellationToken" /> sido eliminado.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-232">-or- The <see cref="T:System.Threading.CancellationTokenSource" /> that created <paramref name="cancellationToken" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b6fe5-233"><paramref name="timeout" /> es un número negativo distinto de -1 milisegundo, que representa un tiempo de espera infinito, o el tiempo de espera es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-233"><paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-234">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-234">CountdownEvent</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="WaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle WaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle WaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Threading.CountdownEvent.WaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ WaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WaitHandle : System.Threading.WaitHandle" Usage="System.Threading.CountdownEvent.WaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b6fe5-235">Obtiene un objeto <see cref="T:System.Threading.WaitHandle" /> que se usa para esperar a que se establezca el evento.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-235">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for the event to be set.</span></span></summary>
        <value><span data-ttu-id="b6fe5-236">Objeto <see cref="T:System.Threading.WaitHandle" /> que se usa para esperar a que se establezca el evento.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-236">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for the event to be set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b6fe5-237"><xref:System.Threading.CountdownEvent.WaitHandle%2A> solo debe usarse si es necesario para la integración con las bases de código que se basan en un WaitHandle.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-237"><xref:System.Threading.CountdownEvent.WaitHandle%2A> should only be used if it's needed for integration with code bases that rely on having a WaitHandle.</span></span> <span data-ttu-id="b6fe5-238">Si todo lo necesario es esperar a que el <xref:System.Threading.CountdownEvent> debe establecerse, el <xref:System.Threading.CountdownEvent.Wait%2A> debe ser el método preferido.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-238">If all that's needed is to wait for the <xref:System.Threading.CountdownEvent> to be set, the <xref:System.Threading.CountdownEvent.Wait%2A> method should be preferred.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b6fe5-239">Ya se ha eliminado la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="b6fe5-239">The current instance has already been disposed.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/eec3812a-e20f-4ecd-bfef-6921d508b708"><span data-ttu-id="b6fe5-240">CountdownEvent</span><span class="sxs-lookup"><span data-stu-id="b6fe5-240">CountdownEvent</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
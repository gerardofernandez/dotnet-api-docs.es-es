<Type Name="Barrier" FullName="System.Threading.Barrier">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9dbef80bd1bbb1539595feabdad6501eea913b6e" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52596242" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Barrier : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Barrier extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Barrier" />
  <TypeSignature Language="VB.NET" Value="Public Class Barrier&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Barrier : IDisposable" />
  <TypeSignature Language="F#" Value="type Barrier = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Participant Count={ParticipantCount},Participants Remaining={ParticipantsRemaining}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1a603-101">Habilita varias tareas para que colaboren en un algoritmo en paralelo en varias fases.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a603-101">Enables multiple tasks to cooperatively work on an algorithm in parallel through multiple phases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-102">Un grupo de tareas cooperan moviendo a través de una serie de fases, donde cada uno en el grupo señala ha llegado a la <xref:System.Threading.Barrier> en una fase determinada e implícita espera a que todos los demás a que llegue.</span><span class="sxs-lookup"><span data-stu-id="1a603-102">A group of tasks cooperate by moving through a series of phases, where each in the group signals it has arrived at the <xref:System.Threading.Barrier> in a given phase and implicitly waits for all others to arrive.</span></span> <span data-ttu-id="1a603-103">El mismo <xref:System.Threading.Barrier> puede usarse para varias fases.</span><span class="sxs-lookup"><span data-stu-id="1a603-103">The same <xref:System.Threading.Barrier> can be used for multiple phases.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1a603-104">En el ejemplo siguiente se muestra cómo usar una barrera:</span><span class="sxs-lookup"><span data-stu-id="1a603-104">The following example shows how to use a barrier:</span></span>  
  
 [!code-csharp[System.Threading.Barrier#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.barrier/cs/barrier.cs#01)]
 [!code-vb[System.Threading.Barrier#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.barrier/vb/barrier.vb#01)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="1a603-105">Todos los miembros públicos y protegidos de <see cref="T:System.Threading.Barrier" /> son seguros para subprocesos y puede usarse simultáneamente desde varios subprocesos, con la excepción de Dispose, que debe ser de solo se usa cuando todas las operaciones en el <see cref="T:System.Threading.Barrier" /> ha completado.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a603-105">All public and protected members of <see cref="T:System.Threading.Barrier" /> are thread-safe and may be used concurrently from multiple threads, with the exception of Dispose, which must only be used when all other operations on the <see cref="T:System.Threading.Barrier" /> have completed.</span>
      </span>
    </threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
      <span data-ttu-id="1a603-106">Barrier (.NET Framework)</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a603-106">Barrier (.NET Framework)</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
      <span data-ttu-id="1a603-107">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
      <span class="sxs-lookup">
        <span data-stu-id="1a603-107">How to: Synchronize Concurrent Operations with a Barrier</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1a603-108">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-108">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-109">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-109">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-110">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-110">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier participantCount" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="1a603-111">Número de subprocesos que participan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-111">The number of participating threads.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-112">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-112">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1a603-113">
            <paramref name="participantCount" /> es menor que 0 o mayor que 32 767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-113">
              <paramref name="participantCount" /> is less than 0 or greater than 32,767.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-114">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-114">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-115">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-115">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Barrier (int participantCount, Action&lt;System.Threading.Barrier&gt; postPhaseAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 participantCount, class System.Action`1&lt;class System.Threading.Barrier&gt; postPhaseAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.#ctor(System.Int32,System.Action{System.Threading.Barrier})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (participantCount As Integer, postPhaseAction As Action(Of Barrier))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Barrier(int participantCount, Action&lt;System::Threading::Barrier ^&gt; ^ postPhaseAction);" />
      <MemberSignature Language="F#" Value="new System.Threading.Barrier : int * Action&lt;System.Threading.Barrier&gt; -&gt; System.Threading.Barrier" Usage="new System.Threading.Barrier (participantCount, postPhaseAction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
        <Parameter Name="postPhaseAction" Type="System.Action&lt;System.Threading.Barrier&gt;" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="1a603-116">Número de subprocesos que participan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-116">The number of participating threads.</span>
          </span>
        </param>
        <param name="postPhaseAction">
          <span data-ttu-id="1a603-117">Objeto <see cref="T:System.Action`1" /> que se va a ejecutar después de cada fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-117">The <see cref="T:System.Action`1" /> to be executed after each phase.</span>
          </span>
          <span data-ttu-id="1a603-118">Se puede pasar null (Nothing en Visual Basic) para indicar que no se realiza ninguna acción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-118">null (Nothing in Visual Basic) may be passed to indicate no action is taken.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-119">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-119">Initializes a new instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-120">El `postPhaseAction` delegado se ejecutará después de que todos los participantes han llegado a la barrera en una fase.</span><span class="sxs-lookup"><span data-stu-id="1a603-120">The `postPhaseAction` delegate will be executed after all participants have arrived at the barrier in one phase.</span></span> <span data-ttu-id="1a603-121">No se liberarán los participantes en la fase siguiente hasta que el delegado de postPhaseAction ha completado su ejecución.</span><span class="sxs-lookup"><span data-stu-id="1a603-121">The participants will not be released to the next phase until the postPhaseAction delegate has completed execution.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1a603-122">
            <paramref name="participantCount" /> es menor que 0 o mayor que 32 767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-122">
              <paramref name="participantCount" /> is less than 0 or greater than 32,767.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-123">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-123">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-124">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-124">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddParticipant">
      <MemberSignature Language="C#" Value="public long AddParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipant () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipant();" />
      <MemberSignature Language="F#" Value="member this.AddParticipant : unit -&gt; int64" Usage="barrier.AddParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a603-125">Notifica a <see cref="T:System.Threading.Barrier" /> que va a haber un participante adicional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-125">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be an additional participant.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a603-126">Número de fase de la barrera en la que primero participarán los nuevos participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-126">The phase number of the barrier in which the new participants will first participate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-127">Si se está ejecutando actualmente una acción posterior a la fase la barrera, esta llamada se bloquea hasta que finalice la acción posterior a la fase y la barrera haya pasado a la siguiente fase.</span><span class="sxs-lookup"><span data-stu-id="1a603-127">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-128">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-128">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-129">Agregar un participante haría que el recuento de participantes de la barrera superase los 32.767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-129">Adding a participant would cause the barrier's participant count to exceed 32,767.</span>
          </span>
          <span data-ttu-id="1a603-130">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-130">-or-</span>
          </span>
          <span data-ttu-id="1a603-131">El método se invocó desde dentro de una acción posterior a la fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-131">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-132">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-132">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-133">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-133">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="AddParticipants">
      <MemberSignature Language="C#" Value="public long AddParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AddParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.AddParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParticipants (participantCount As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long AddParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.AddParticipants : int -&gt; int64" Usage="barrier.AddParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="1a603-134">Número de participantes adicionales que se van a agregar a la barrera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-134">The number of additional participants to add to the barrier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-135">Notifica a <see cref="T:System.Threading.Barrier" /> que va a haber participantes adicionales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-135">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be additional participants.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a603-136">Número de fase de la barrera en la que primero participarán los nuevos participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-136">The phase number of the barrier in which the new participants will first participate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-137">Si se está ejecutando actualmente una acción posterior a la fase la barrera, esta llamada se bloquea hasta que finalice la acción posterior a la fase y la barrera haya pasado a la siguiente fase.</span><span class="sxs-lookup"><span data-stu-id="1a603-137">If the barrier is currently executing a post phase action, this call is blocked until the post phase action completes and the barrier has moved on to the next phase.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-138">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-138">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1a603-139">
            <paramref name="participantCount" /> es menor que 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-139">
              <paramref name="participantCount" /> is less than 0.</span>
          </span>
          <span data-ttu-id="1a603-140">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-140">-or-</span>
          </span>
          <span data-ttu-id="1a603-141">Agregar <paramref name="participantCount" /> haría que el recuento de participantes de la barrera superase los 32.767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-141">Adding <paramref name="participantCount" /> participants would cause the barrier's participant count to exceed 32,767.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-142">El método se invocó desde dentro de una acción posterior a la fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-142">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-143">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-143">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-144">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-144">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CurrentPhaseNumber">
      <MemberSignature Language="C#" Value="public long CurrentPhaseNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CurrentPhaseNumber" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentPhaseNumber As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CurrentPhaseNumber { long get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentPhaseNumber : int64" Usage="System.Threading.Barrier.CurrentPhaseNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a603-145">Obtiene el número de la fase actual de la barrera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-145">Gets the number of the barrier's current phase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a603-146">Devuelve el número de la fase actual de la barrera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-146">Returns the number of the barrier's current phase.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-147">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-147">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-148">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-148">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1a603-149">Libera los recursos que usa la instancia actual de la clase <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-149">Releases resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-150">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-150">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-151">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-151">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="barrier.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a603-152">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Threading.Barrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-152">Releases all resources used by the current instance of the <see cref="T:System.Threading.Barrier" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-153">Llame a `Dispose` cuando haya terminado de usar <xref:System.Threading.Barrier>.</span><span class="sxs-lookup"><span data-stu-id="1a603-153">Call `Dispose` when you are finished using the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="1a603-154">El método `Dispose` deja el <xref:System.Threading.Barrier> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="1a603-154">The `Dispose` method leaves the <xref:System.Threading.Barrier> in an unusable state.</span></span> <span data-ttu-id="1a603-155">Después de llamar a `Dispose`, debe liberar todas las referencias a la <xref:System.Threading.Barrier> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Threading.Barrier> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="1a603-155">After calling `Dispose`, you must release all references to the <xref:System.Threading.Barrier> so the garbage collector can reclaim the memory that the <xref:System.Threading.Barrier> was occupying.</span></span>  
  
 <span data-ttu-id="1a603-156">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="1a603-156">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1a603-157">Realice siempre una llamada a `Dispose` antes de liberar la última referencia al objeto <xref:System.Threading.Barrier>.</span><span class="sxs-lookup"><span data-stu-id="1a603-157">Always call `Dispose` before you release your last reference to the <xref:System.Threading.Barrier>.</span></span> <span data-ttu-id="1a603-158">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Threading.Barrier> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="1a603-158">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Threading.Barrier> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-159">El método se invocó desde dentro de una acción posterior a la fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-159">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-160">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-160">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-161">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-161">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="barrier.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1a603-162">true para liberar tanto los recursos administrados como los no administrados; false para liberar únicamente los recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-162">true to release both managed and unmanaged resources; false to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-163">Libera los recursos no administrados utilizados por el objeto <see cref="T:System.Threading.Barrier" /> y, de forma opcional, libera los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-163">Releases the unmanaged resources used by the <see cref="T:System.Threading.Barrier" />, and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-164">A diferencia de la mayoría de los miembros de <xref:System.Threading.Barrier>, Dispose no es seguro para subprocesos y no puede usarse simultáneamente con otros miembros de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="1a603-164">Unlike most of the members of <xref:System.Threading.Barrier>, Dispose is not thread-safe and may not be used concurrently with other members of this instance.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-165">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-165">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-166">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-166">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ParticipantCount">
      <MemberSignature Language="C#" Value="public int ParticipantCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantCount : int" Usage="System.Threading.Barrier.ParticipantCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a603-167">Obtiene el número total de participantes de la barrera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-167">Gets the total number of participants in the barrier.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a603-168">Devuelve el número total de participantes de la barrera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-168">Returns the total number of participants in the barrier.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-169">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-169">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-170">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-170">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ParticipantsRemaining">
      <MemberSignature Language="C#" Value="public int ParticipantsRemaining { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ParticipantsRemaining" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Barrier.ParticipantsRemaining" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParticipantsRemaining As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ParticipantsRemaining { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ParticipantsRemaining : int" Usage="System.Threading.Barrier.ParticipantsRemaining" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1a603-171">Obtiene el número de participantes en la barrera que aún no se han señalado en la fase actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-171">Gets the number of participants in the barrier that haven't yet signaled in the current phase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1a603-172">Devuelve el número de participantes de la barrera que aún no ha señalado en la fase actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-172">Returns the number of participants in the barrier that haven't yet signaled in the current phase.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-173">Esto podría ser 0 durante la ejecución de un delegado de acción posterior a la fase o si ParticipantCount es 0.</span><span class="sxs-lookup"><span data-stu-id="1a603-173">This could be 0 during a post-phase action delegate execution or if the ParticipantCount is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-174">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-174">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-175">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-175">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipant">
      <MemberSignature Language="C#" Value="public void RemoveParticipant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipant" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipant ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipant();" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipant : unit -&gt; unit" Usage="barrier.RemoveParticipant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a603-176">Notifica a <see cref="T:System.Threading.Barrier" /> que va a haber un participante menos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-176">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be one less participant.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-177">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-177">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-178">La barrera ya tiene 0 participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-178">The barrier already has 0 participants.</span>
          </span>
          <span data-ttu-id="1a603-179">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-179">-or-</span>
          </span>
          <span data-ttu-id="1a603-180">El método se invocó desde dentro de una acción posterior a la fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-180">The method was invoked from within a post-phase action.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-181">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-181">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-182">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-182">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="RemoveParticipants">
      <MemberSignature Language="C#" Value="public void RemoveParticipants (int participantCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveParticipants(int32 participantCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.RemoveParticipants(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveParticipants (participantCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveParticipants(int participantCount);" />
      <MemberSignature Language="F#" Value="member this.RemoveParticipants : int -&gt; unit" Usage="barrier.RemoveParticipants participantCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="participantCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="participantCount">
          <span data-ttu-id="1a603-183">Número de participantes adicionales que se van a quitar de la barrera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-183">The number of additional participants to remove from the barrier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-184">Notifica a <see cref="T:System.Threading.Barrier" /> que va a haber menos participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-184">Notifies the <see cref="T:System.Threading.Barrier" /> that there will be fewer participants.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-185">Si `participantCount` participantes ya estén esperando en la barrera, esta eliminación cumple la barrera, se ejecuta la acción posterior a la fase y todos los participantes se hayan activado como si este participante se quita correctamente había alcanzado la barrera.</span><span class="sxs-lookup"><span data-stu-id="1a603-185">If `participantCount` participants are already waiting on the barrier, this removal fulfills the barrier, the post phase action is executed and all of the participants are woken as if this participant being removed had successfully reached the barrier.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-186">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-186">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1a603-187">El total de participantes es menor que el <paramref name="participantCount" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-187">The total participant count is less than the specified <paramref name="participantCount" /></span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-188">La barrera ya tiene 0 participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-188">The barrier already has 0 participants.</span>
          </span>
          <span data-ttu-id="1a603-189">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-189">-or-</span>
          </span>
          <span data-ttu-id="1a603-190">El método se invocó desde dentro de una acción posterior a la fase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-190">The method was invoked from within a post-phase action.</span>
          </span>
          <span data-ttu-id="1a603-191">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-191">-or-</span>
          </span>
          <span data-ttu-id="1a603-192">el recuento del participante actual es menor que el participantCount especificado</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-192">current participant count is less than the specified participantCount</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-193">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-193">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-194">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-194">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignalAndWait">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1a603-195">Señala que un participante ha alcanzado la barrera y espera a que todos los demás participantes alcancen también la barrera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-195">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span>
          </span>
        </summary>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-196">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-196">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-197">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-197">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait" />
      <MemberSignature Language="VB.NET" Value="Public Sub SignalAndWait ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait();" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : unit -&gt; unit" Usage="barrier.SignalAndWait " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1a603-198">Señala que un participante ha alcanzado la barrera y espera a que todos los demás participantes alcancen también la barrera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-198">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-199">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-199">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-200">El método se invocó desde dentro de una acción posterior a la fase, la barrera tiene actualmente 0 participantes, o la barrera la señalan más subprocesos de los que están registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-200">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException">
          <span data-ttu-id="1a603-201">Si una excepción se produce de la acción de fase de envío de una barrera después de todos los subprocesos hayan llamado a SignalAndWait, la excepción se ajustará en una BarrierPostPhaseException y se producirá en todos los subprocesos que participan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-201">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-202">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-202">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-203">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-203">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (millisecondsTimeout As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int -&gt; bool" Usage="barrier.SignalAndWait millisecondsTimeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="1a603-204">Número de milisegundos de espera o <see cref="F:System.Threading.Timeout.Infinite" /> (-1) para esperar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-204">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-205">Señala que un participante ha alcanzado la barrera y espera a que todos los demás participantes alcancen también la barrera usando un entero de 32 bits con signo para medir el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-205">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a603-206">si todos los participantes alcanzaron la barrera dentro del tiempo especificado; de lo contrario, es false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-206">if all participants reached the barrier within the specified time; otherwise false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-207">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-207">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1a603-208">
            <paramref name="millisecondsTimeout" /> es un número negativo distinto de-1, que representa un tiempo de espera infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-208">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-209">El método se invocó desde dentro de una acción posterior a la fase, la barrera tiene actualmente 0 participantes, o la barrera la señalan más subprocesos de los que están registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-209">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <exception cref="T:System.Threading.BarrierPostPhaseException">
          <span data-ttu-id="1a603-210">Si una excepción se produce de la acción de fase de envío de una barrera después de todos los subprocesos hayan llamado a SignalAndWait, la excepción se ajustará en una BarrierPostPhaseException y se producirá en todos los subprocesos que participan.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-210">If an exception is thrown from the post phase action of a Barrier after all participating threads have called SignalAndWait, the exception will be wrapped in a BarrierPostPhaseException and be thrown on all participating threads.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-211">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-211">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-212">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-212">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public void SignalAndWait (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalAndWait(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SignalAndWait(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : System.Threading.CancellationToken -&gt; unit" Usage="barrier.SignalAndWait cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
          <span data-ttu-id="1a603-213">
            <see cref="T:System.Threading.CancellationToken" /> que se va a observar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-213">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-214">Señala que un participante ha alcanzado la barrera y espera a que todos los demás participantes alcancen la barrera mientras se observa un token de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-214">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier, while observing a cancellation token.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="1a603-215">Se ha cancelado <paramref name="cancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-215">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-216">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-216">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-217">El método se invocó desde dentro de una acción posterior a la fase, la barrera tiene actualmente 0 participantes, o la barrera la señalan más subprocesos de los que están registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-217">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-218">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-218">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-219">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-219">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignalAndWait (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan -&gt; bool" Usage="barrier.SignalAndWait timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1a603-220">Estructura <see cref="T:System.TimeSpan" /> que representa el número de milisegundos de espera o estructura <see cref="T:System.TimeSpan" /> que representa -1 milisegundos para esperar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-220">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-221">Señala que un participante ha alcanzado la barrera y espera a que todos los demás participantes alcancen también la barrera usando un objeto <see cref="T:System.TimeSpan" /> para medir el intervalo de tiempo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-221">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a603-222">Es true si todos los demás participantes alcanzaron la barrera; de lo contrario, es false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-222">true if all other participants reached the barrier; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-223">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-223">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1a603-224">
            <paramref name="timeout" /> es un número negativo distinto de -1 milisegundo, que representa un tiempo de espera infinito, o es mayor de 32 767.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-224">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out, or it is greater than 32,767.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-225">El método se invocó desde dentro de una acción posterior a la fase, la barrera tiene actualmente 0 participantes, o la barrera la señalan más subprocesos de los que están registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-225">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-226">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-226">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-227">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-227">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(int32 millisecondsTimeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.Int32,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(int millisecondsTimeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : int * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (millisecondsTimeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="millisecondsTimeout">
          <span data-ttu-id="1a603-228">Número de milisegundos de espera o <see cref="F:System.Threading.Timeout.Infinite" /> (-1) para esperar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-228">The number of milliseconds to wait, or <see cref="F:System.Threading.Timeout.Infinite" />(-1) to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="1a603-229">
            <see cref="T:System.Threading.CancellationToken" /> que se va a observar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-229">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-230">Señala que un participante ha alcanzado la barrera y espera a que todos los demás participantes la alcancen también usando un entero de 32 bits con signo para medir el tiempo de espera mientras se observa un token de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-230">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a 32-bit signed integer to measure the timeout, while observing a cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a603-231">si todos los participantes alcanzaron la barrera dentro del tiempo especificado; de lo contrario, es false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-231">if all participants reached the barrier within the specified time; otherwise false</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1a603-232">Si el `cancellationToken` se canceló antes de las señales surta efecto, una <xref:System.OperationCanceledException> se produce y la <xref:System.Threading.Barrier.ParticipantsRemaining%2A> no disminuye el valor.</span><span class="sxs-lookup"><span data-stu-id="1a603-232">If the `cancellationToken` was canceled before the signal took effect, then an <xref:System.OperationCanceledException> is thrown and the <xref:System.Threading.Barrier.ParticipantsRemaining%2A> value is not decreased.</span></span> <span data-ttu-id="1a603-233">Si el `cancellationToken` no se ha cancelado o se cancela después de la señal surte efecto, a continuación, <xref:System.Threading.Barrier.ParticipantsRemaining%2A> se reduce y no <xref:System.OperationCanceledException> se produce.</span><span class="sxs-lookup"><span data-stu-id="1a603-233">If the `cancellationToken` is not canceled or is canceled after the signal takes effect then <xref:System.Threading.Barrier.ParticipantsRemaining%2A> is decreased and no <xref:System.OperationCanceledException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="1a603-234">Se ha cancelado <paramref name="cancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-234">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-235">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-235">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1a603-236">
            <paramref name="millisecondsTimeout" /> es un número negativo distinto de-1, que representa un tiempo de espera infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-236">
              <paramref name="millisecondsTimeout" /> is a negative number other than -1, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-237">El método se invocó desde dentro de una acción posterior a la fase, la barrera tiene actualmente 0 participantes, o la barrera la señalan más subprocesos de los que están registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-237">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-238">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-238">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-239">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-239">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SignalAndWait">
      <MemberSignature Language="C#" Value="public bool SignalAndWait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SignalAndWait(valuetype System.TimeSpan timeout, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Barrier.SignalAndWait(System.TimeSpan,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SignalAndWait(TimeSpan timeout, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.SignalAndWait : TimeSpan * System.Threading.CancellationToken -&gt; bool" Usage="barrier.SignalAndWait (timeout, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="1a603-240">Estructura <see cref="T:System.TimeSpan" /> que representa el número de milisegundos de espera o estructura <see cref="T:System.TimeSpan" /> que representa -1 milisegundos para esperar indefinidamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-240">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="1a603-241">
            <see cref="T:System.Threading.CancellationToken" /> que se va a observar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-241">The <see cref="T:System.Threading.CancellationToken" /> to observe.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1a603-242">Señala que un participante ha alcanzado la barrera y espera a que todos los demás participantes la alcancen también usando un objeto <see cref="T:System.TimeSpan" /> para medir el intervalo de tiempo, mientras se observa un token de cancelación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-242">Signals that a participant has reached the barrier and waits for all other participants to reach the barrier as well, using a <see cref="T:System.TimeSpan" /> object to measure the time interval, while observing a cancellation token.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1a603-243">Es true si todos los demás participantes alcanzaron la barrera; de lo contrario, es false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-243">true if all other participants reached the barrier; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OperationCanceledException">
          <span data-ttu-id="1a603-244">Se ha cancelado <paramref name="cancellationToken" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-244">
              <paramref name="cancellationToken" /> has been canceled.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="1a603-245">Ya se ha eliminado la instancia actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-245">The current instance has already been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1a603-246">
            <paramref name="timeout" /> es un número negativo distinto de -1 milisegundos, que representa un tiempo de espera infinito.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-246">
              <paramref name="timeout" /> is a negative number other than -1 milliseconds, which represents an infinite time-out.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1a603-247">El método se invocó desde dentro de una acción posterior a la fase, la barrera tiene actualmente 0 participantes, o la barrera la señalan más subprocesos de los que están registrados como participantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-247">The method was invoked from within a post-phase action, the barrier currently has 0 participants, or the barrier is signaled by more threads than are registered as participants.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/613a8bc7-6a28-4795-bd6c-1abd9050478f">
          <span data-ttu-id="1a603-248">Barrier (.NET Framework)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-248">Barrier (.NET Framework)</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/e1a253ff-e0fb-4df8-95ff-d01a90d4cb19">
          <span data-ttu-id="1a603-249">Cómo: Sincronizar operaciones simultáneas con una clase Barrier</span>
          <span class="sxs-lookup">
            <span data-stu-id="1a603-249">How to: Synchronize Concurrent Operations with a Barrier</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>
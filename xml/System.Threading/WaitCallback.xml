<Type Name="WaitCallback" FullName="System.Threading.WaitCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cd9d59dde3ea8aee0f059097610ab577f8a16e56" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58728306" /></Metadata><TypeSignature Language="C#" Value="public delegate void WaitCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitCallback(state As Object)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitCallback(System::Object ^ state);" />
  <TypeSignature Language="F#" Value="type WaitCallback = delegate of obj -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="b7518-101">Objeto que contiene la información que va a utilizar el método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="b7518-101">An object containing information to be used by the callback method.</span></span></param>
    <summary><span data-ttu-id="b7518-102">Representa un método de devolución de llamada que debe ejecutar un subproceso del grupo de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b7518-102">Represents a callback method to be executed by a thread pool thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7518-103"><xref:System.Threading.WaitCallback> Representa un método de devolución de llamada que se desea ejecutar en un <xref:System.Threading.ThreadPool> subproceso.</span><span class="sxs-lookup"><span data-stu-id="b7518-103"><xref:System.Threading.WaitCallback> represents a callback method that you want to execute on a <xref:System.Threading.ThreadPool> thread.</span></span> <span data-ttu-id="b7518-104">Crear el delegado pasando el método de devolución de llamada para el <xref:System.Threading.WaitCallback> constructor.</span><span class="sxs-lookup"><span data-stu-id="b7518-104">Create the delegate by passing your callback method to the <xref:System.Threading.WaitCallback> constructor.</span></span> <span data-ttu-id="b7518-105">El método debe tener la firma que se muestra aquí.</span><span class="sxs-lookup"><span data-stu-id="b7518-105">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="b7518-106">El método para la ejecución de la cola, pasando el <xref:System.Threading.WaitCallback> delegar a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="b7518-106">Queue the method for execution by passing the <xref:System.Threading.WaitCallback> delegate to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="b7518-107">El método de devolución de llamada se ejecuta cuando hay disponible un subproceso del grupo de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b7518-107">The callback method executes when a thread pool thread becomes available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b7518-108">Los usuarios de Visual Basic pueden omitir el <xref:System.Threading.WaitCallback> constructor y basta con usar el `AddressOf` operador al pasar el método de devolución de llamada a <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span><span class="sxs-lookup"><span data-stu-id="b7518-108">Visual Basic users can omit the <xref:System.Threading.WaitCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A>.</span></span> <span data-ttu-id="b7518-109">Visual Basic llama automáticamente al constructor de delegado correcto.</span><span class="sxs-lookup"><span data-stu-id="b7518-109">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="b7518-110">Si desea pasar información al método de devolución de llamada, cree un objeto que contiene la información necesaria y páselo a la <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> método como el segundo argumento.</span><span class="sxs-lookup"><span data-stu-id="b7518-110">If you want to pass information to the callback method, create an object that contains the necessary information and pass it to the <xref:System.Threading.ThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)> method as the second argument.</span></span> <span data-ttu-id="b7518-111">Cada vez que se ejecuta el método de devolución de llamada, el `state` parámetro contiene este objeto.</span><span class="sxs-lookup"><span data-stu-id="b7518-111">Each time the callback method executes, the `state` parameter contains this object.</span></span>  

 <span data-ttu-id="b7518-112">Para obtener ejemplos que utilizan el `WaitCallback` delegado, vea la <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b7518-112">For examples that use the `WaitCallback` delegate, see the <xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=nameWithType> method.</span></span>
  
 <span data-ttu-id="b7518-113">Para obtener más información sobre el grupo de subprocesos, vea [el grupo de subprocesos administrados](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="b7518-113">For more information about the thread pool, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Threading.ThreadPool" />
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="b7518-114">Subprocesos y subprocesamiento</span><span class="sxs-lookup"><span data-stu-id="b7518-114">Threads and Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md"><span data-ttu-id="b7518-115">Grupo de subprocesos administrado</span><span class="sxs-lookup"><span data-stu-id="b7518-115">The managed thread pool</span></span></related>
  </Docs>
</Type>
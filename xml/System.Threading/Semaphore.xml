<Type Name="Semaphore" FullName="System.Threading.Semaphore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d638e7414db4766474b41ea6758371ad781b249c" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57934163" /></Metadata><TypeSignature Language="C#" Value="public sealed class Semaphore : System.Threading.WaitHandle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Semaphore extends System.Threading.WaitHandle" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Semaphore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Semaphore&#xA;Inherits WaitHandle" />
  <TypeSignature Language="C++ CLI" Value="public ref class Semaphore sealed : System::Threading::WaitHandle" />
  <TypeSignature Language="F#" Value="type Semaphore = class&#xA;    inherit WaitHandle" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Threading.WaitHandle</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="daa4a-101">Limita el número de subprocesos que pueden tener acceso a un recurso o grupo de recursos simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-101">Limits the number of threads that can access a resource or pool of resources concurrently.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-102">Use la <xref:System.Threading.Semaphore> clase para controlar el acceso a un grupo de recursos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-102">Use the <xref:System.Threading.Semaphore> class to control access to a pool of resources.</span></span> <span data-ttu-id="daa4a-103">Subprocesos entran el semáforo mediante una llamada a la <xref:System.Threading.WaitHandle.WaitOne%2A> método, que se hereda de la <xref:System.Threading.WaitHandle> clase y liberar el semáforo mediante una llamada a la <xref:System.Threading.Semaphore.Release%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-103">Threads enter the semaphore by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method, which is inherited from the <xref:System.Threading.WaitHandle> class, and release the semaphore by calling the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="daa4a-104">El recuento de un semáforo es disminuye cada vez que un subproceso entra en el semáforo y se incrementa cuando un subproceso libera el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-104">The count on a semaphore is decremented each time a thread enters the semaphore, and incremented when a thread releases the semaphore.</span></span> <span data-ttu-id="daa4a-105">Cuando el recuento es cero, las solicitudes posteriores se bloquean hasta que otros subprocesos liberan el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-105">When the count is zero, subsequent requests block until other threads release the semaphore.</span></span> <span data-ttu-id="daa4a-106">Cuando todos los subprocesos han liberado el semáforo, el recuento es el valor máximo especificado cuando se creó el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-106">When all threads have released the semaphore, the count is at the maximum value specified when the semaphore was created.</span></span>  
  
 <span data-ttu-id="daa4a-107">No hay ningún orden garantizado, como FIFO, LIFO, en el que los subprocesos bloqueados entren en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-107">There is no guaranteed order, such as FIFO or LIFO, in which blocked threads enter the semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-108">Un subproceso puede entrar varias veces, en el semáforo mediante una llamada a la <xref:System.Threading.WaitHandle.WaitOne%2A> método varias veces.</span><span class="sxs-lookup"><span data-stu-id="daa4a-108">A thread can enter the semaphore multiple times, by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method repeatedly.</span></span> <span data-ttu-id="daa4a-109">Para liberar algunas o todas estas entradas, el subproceso puede llamar a sin parámetros <xref:System.Threading.Semaphore.Release> sobrecarga del método puede llamar varias veces, o bien el <xref:System.Threading.Semaphore.Release%28System.Int32%29> sobrecarga del método que especifica el número de entradas que se liberan.</span><span class="sxs-lookup"><span data-stu-id="daa4a-109">To release some or all of these entries, the thread can call the parameterless <xref:System.Threading.Semaphore.Release> method overload multiple times, or it can call the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload that specifies the number of entries to be released.</span></span>  
  
 <span data-ttu-id="daa4a-110">El <xref:System.Threading.Semaphore> clase no exige la identidad del subproceso en las llamadas a <xref:System.Threading.WaitHandle.WaitOne%2A> o <xref:System.Threading.Semaphore.Release%2A>.</span><span class="sxs-lookup"><span data-stu-id="daa4a-110">The <xref:System.Threading.Semaphore> class does not enforce thread identity on calls to <xref:System.Threading.WaitHandle.WaitOne%2A> or <xref:System.Threading.Semaphore.Release%2A>.</span></span> <span data-ttu-id="daa4a-111">Es responsabilidad del programador asegurarse de que los subprocesos no liberan el semáforo demasiadas veces.</span><span class="sxs-lookup"><span data-stu-id="daa4a-111">It is the programmer's responsibility to ensure that threads do not release the semaphore too many times.</span></span> <span data-ttu-id="daa4a-112">Por ejemplo, supongamos que un semáforo tiene un recuento máximo de dos y que los subprocesos A y B entran el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-112">For example, suppose a semaphore has a maximum count of two, and that thread A and thread B both enter the semaphore.</span></span> <span data-ttu-id="daa4a-113">Si un error de programación en el subproceso B hace que llame a <xref:System.Threading.Semaphore.Release%2A> dos veces, ambas llamadas tendrán éxito.</span><span class="sxs-lookup"><span data-stu-id="daa4a-113">If a programming error in thread B causes it to call <xref:System.Threading.Semaphore.Release%2A> twice, both calls succeed.</span></span> <span data-ttu-id="daa4a-114">El recuento del semáforo está lleno y cuando el subproceso A finalmente llama a <xref:System.Threading.Semaphore.Release%2A>, se genera <xref:System.Threading.SemaphoreFullException>.</span><span class="sxs-lookup"><span data-stu-id="daa4a-114">The count on the semaphore is full, and when thread A eventually calls <xref:System.Threading.Semaphore.Release%2A>, a <xref:System.Threading.SemaphoreFullException> is thrown.</span></span>  
  
 <span data-ttu-id="daa4a-115">Son semáforos de dos tipos: semáforos locales y semáforos de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-115">Semaphores are of two types: local semaphores and named system semaphores.</span></span> <span data-ttu-id="daa4a-116">Si creas un <xref:System.Threading.Semaphore> objeto utilizando un constructor que acepta un nombre, está asociado con un semáforo de sistema operativo de ese nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-116">If you create a <xref:System.Threading.Semaphore> object using a constructor that accepts a name, it is associated with an operating-system semaphore of that name.</span></span> <span data-ttu-id="daa4a-117">Los semáforos son visibles en todo el sistema operativo y pueden utilizarse para sincronizar las actividades de procesos de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-117">Named system semaphores are visible throughout the operating system, and can be used to synchronize the activities of processes.</span></span> <span data-ttu-id="daa4a-118">Puede crear varios <xref:System.Threading.Semaphore> objetos que representan el mismo nombre semáforo del sistema, y puede usar el <xref:System.Threading.Semaphore.OpenExisting%2A> método para abrir una existente denominado semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-118">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore, and you can use the <xref:System.Threading.Semaphore.OpenExisting%2A> method to open an existing named system semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-119">Existe un semáforo local solo dentro del proceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-119">A local semaphore exists only within your process.</span></span> <span data-ttu-id="daa4a-120">La puede usar cualquier subproceso del proceso que tenga una referencia al objeto <xref:System.Threading.Semaphore> local.</span><span class="sxs-lookup"><span data-stu-id="daa4a-120">It can be used by any thread in your process that has a reference to the local <xref:System.Threading.Semaphore> object.</span></span> <span data-ttu-id="daa4a-121">Cada <xref:System.Threading.Semaphore> objeto es un semáforo local independiente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-121">Each <xref:System.Threading.Semaphore> object is a separate local semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-122">En el ejemplo de código siguiente se crea un semáforo con un número máximo de tres y un recuento inicial de cero.</span><span class="sxs-lookup"><span data-stu-id="daa4a-122">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="daa4a-123">En el ejemplo se inicia cinco subprocesos, que bloquear la espera para el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-123">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="daa4a-124">El subproceso principal utiliza el <xref:System.Threading.Semaphore.Release%28System.Int32%29> sobrecarga del método para aumentar el recuento del semáforo a su máximo, lo que permite tres subprocesos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-124">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="daa4a-125">Cada subproceso utiliza el <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> método para esperar un segundo, para simular el trabajo y, a continuación, las llamadas a la <xref:System.Threading.Semaphore.Release> sobrecarga del método para liberar el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-125">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="daa4a-126">Cada vez que se libere el semáforo, se muestra el recuento del semáforo anterior.</span><span class="sxs-lookup"><span data-stu-id="daa4a-126">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="daa4a-127">Uso de semáforo pista de la consola mensajes.</span><span class="sxs-lookup"><span data-stu-id="daa4a-127">Console messages track semaphore use.</span></span> <span data-ttu-id="daa4a-128">El intervalo de trabajo simulado aumenta ligeramente para que cada subproceso, para facilitar la lectura de la salida.</span><span class="sxs-lookup"><span data-stu-id="daa4a-128">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="daa4a-129">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-129">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-130">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-130">Managed Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-131">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-131">Semaphore</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="daa4a-132">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Semaphore" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-132">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="daa4a-133">El número inicial de solicitudes del semáforo que se pueden conceder simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-133">The initial number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <param name="maximumCount"><span data-ttu-id="daa4a-134">El número máximo de solicitudes del semáforo que se pueden conceder simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-134">The maximum number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <summary><span data-ttu-id="daa4a-135">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Semaphore" />, que especifica el número inicial de entradas y el número máximo de entradas simultáneas.</span><span class="sxs-lookup"><span data-stu-id="daa4a-135">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-136">Este constructor inicializa un semáforo sin nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-136">This constructor initializes an unnamed semaphore.</span></span> <span data-ttu-id="daa4a-137">Todos los subprocesos que usan una instancia de este tipo de semáforo deben tener referencias a la instancia.</span><span class="sxs-lookup"><span data-stu-id="daa4a-137">All threads that use an instance of such a semaphore must have references to the instance.</span></span>  
  
 <span data-ttu-id="daa4a-138">Si `initialCount` es menor que `maximumCount`, el efecto es el mismo que si hubiera llamado el subproceso actual <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` menos `initialCount`) veces.</span><span class="sxs-lookup"><span data-stu-id="daa4a-138">If `initialCount` is less than `maximumCount`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="daa4a-139">Si no desea reservar entradas para el subproceso que crea el semáforo, use el mismo número de `maximumCount` y `initialCount`.</span><span class="sxs-lookup"><span data-stu-id="daa4a-139">If you do not want to reserve any entries for the thread that creates the semaphore, use the same number for `maximumCount` and `initialCount`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-140">El ejemplo siguiente crea un semáforo con un número máximo de tres y un recuento inicial de cero.</span><span class="sxs-lookup"><span data-stu-id="daa4a-140">The following example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="daa4a-141">En el ejemplo se inicia cinco subprocesos, que bloquear la espera para el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-141">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="daa4a-142">El subproceso principal utiliza el <xref:System.Threading.Semaphore.Release%28System.Int32%29> sobrecarga del método para aumentar el recuento del semáforo a su máximo, lo que permite tres subprocesos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-142">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="daa4a-143">Cada subproceso utiliza el <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> método para esperar un segundo, para simular el trabajo y, a continuación, las llamadas a la <xref:System.Threading.Semaphore.Release> sobrecarga del método para liberar el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-143">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span> <span data-ttu-id="daa4a-144">Cada vez que se libere el semáforo, se muestra el recuento del semáforo anterior.</span><span class="sxs-lookup"><span data-stu-id="daa4a-144">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="daa4a-145">Uso de semáforo pista de la consola mensajes.</span><span class="sxs-lookup"><span data-stu-id="daa4a-145">Console messages track semaphore use.</span></span> <span data-ttu-id="daa4a-146">El intervalo de trabajo simulado aumenta ligeramente para que cada subproceso, para facilitar la lectura de la salida.</span><span class="sxs-lookup"><span data-stu-id="daa4a-146">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="daa4a-147"><paramref name="initialCount" /> es mayor que <paramref name="maximumCount" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-147"><paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="daa4a-148"><paramref name="maximumCount" /> es menor que 1.</span><span class="sxs-lookup"><span data-stu-id="daa4a-148"><paramref name="maximumCount" /> is less than 1.</span></span>  
  
<span data-ttu-id="daa4a-149">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-149">-or-</span></span> 
 <span data-ttu-id="daa4a-150"><paramref name="initialCount" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="daa4a-150"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-151">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-151">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-152">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-152">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="daa4a-153">El número inicial de solicitudes del semáforo que se pueden conceder simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-153">The initial number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <param name="maximumCount"><span data-ttu-id="daa4a-154">El número máximo de solicitudes del semáforo que se pueden conceder simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-154">The maximum number of requests for the semaphore that can be granted concurrently.</span></span></param>
        <param name="name"><span data-ttu-id="daa4a-155">Nombre de un objeto de semáforo del sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-155">The name of a named system semaphore object.</span></span></param>
        <summary><span data-ttu-id="daa4a-156">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Semaphore" />, que especifica el número inicial de entradas y el número máximo de entradas simultáneas y, de forma opcional, especifica el nombre de un objeto semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-156">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, and optionally specifying the name of a system semaphore object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-157">Este constructor inicializa un <xref:System.Threading.Semaphore> objeto que representa un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-157">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="daa4a-158">Puede crear varias <xref:System.Threading.Semaphore> objetos que representan el mismo nombre semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-158">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-159">Si el semáforo del sistema con nombre no existe, se crea con el recuento inicial y el número máximo especificado por `initialCount` y `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="daa4a-159">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="daa4a-160">Si el semáforo del sistema con nombre ya existe, `initialCount` y `maximumCount` no se usan, aunque los valores no válidos también generar excepciones.</span><span class="sxs-lookup"><span data-stu-id="daa4a-160">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="daa4a-161">Si necesita determinar si se creó un semáforo del sistema con nombre, use la <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> sobrecarga de constructor en su lugar.</span><span class="sxs-lookup"><span data-stu-id="daa4a-161">If you need to determine whether or not a named system semaphore was created, use the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.String%2CSystem.Boolean%40%29> constructor overload instead.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="daa4a-162">Cuando utilice esta sobrecarga del constructor, el método recomendado es especificar el mismo número de `initialCount` y `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="daa4a-162">When you use this constructor overload, the recommended practice is to specify the same number for `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="daa4a-163">Si `initialCount` es menor que `maximumCount`y se crea un semáforo de sistema con nombre, el efecto es el mismo que si hubiera llamado el subproceso actual <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` menos `initialCount`) veces.</span><span class="sxs-lookup"><span data-stu-id="daa4a-163">If `initialCount` is less than `maximumCount`, and a named system semaphore is created, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span> <span data-ttu-id="daa4a-164">Sin embargo, con esta sobrecarga del constructor no hay ninguna manera de determinar si se creó un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-164">However, with this constructor overload there is no way to determine whether a named system semaphore was created.</span></span>  
  
 <span data-ttu-id="daa4a-165">Si especifica `null` o una cadena vacía para `name`, se crea un semáforo local, como si hubiera llamado a la <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> sobrecarga del constructor.</span><span class="sxs-lookup"><span data-stu-id="daa4a-165">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span>  
  
 <span data-ttu-id="daa4a-166">Dado que los semáforos con nombre son visibles en todo el sistema operativo, se puede usar para coordinar el uso de recursos a través de los límites del proceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-166">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
 <span data-ttu-id="daa4a-167">Si desea averiguar si existe un semáforo de sistema con nombre, use la <xref:System.Threading.Semaphore.OpenExisting%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-167">If you want to find out whether a named system semaphore exists, use the <xref:System.Threading.Semaphore.OpenExisting%2A> method.</span></span> <span data-ttu-id="daa4a-168">El <xref:System.Threading.Semaphore.OpenExisting%2A> método intenta abrir un semáforo con nombre existente y produce una excepción si el semáforo de sistema no existe.</span><span class="sxs-lookup"><span data-stu-id="daa4a-168">The <xref:System.Threading.Semaphore.OpenExisting%2A> method attempts to open an existing named semaphore, and throws an exception if the system semaphore does not exist.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-169">El ejemplo de código siguiente muestra el comportamiento entre procesos de un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-169">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="daa4a-170">En el ejemplo se crea un semáforo con nombre con un número máximo de cinco y un recuento inicial de cinco.</span><span class="sxs-lookup"><span data-stu-id="daa4a-170">The example creates a named semaphore with a maximum count of five and an initial count of five.</span></span> <span data-ttu-id="daa4a-171">El programa realiza tres llamadas a la <xref:System.Threading.WaitHandle.WaitOne%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-171">The program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="daa4a-172">Por lo tanto, si ejecuta el ejemplo compilado desde dos ventanas de comandos, la segunda copia se bloqueará en la tercera llamada a <xref:System.Threading.WaitHandle.WaitOne%2A>.</span><span class="sxs-lookup"><span data-stu-id="daa4a-172">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="daa4a-173">Liberar una o más entradas en la primera copia del programa para desbloquear a la segunda.</span><span class="sxs-lookup"><span data-stu-id="daa4a-173">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 3/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="daa4a-174"><paramref name="initialCount" /> es mayor que <paramref name="maximumCount" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-174"><paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span></span>  
  
<span data-ttu-id="daa4a-175">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-175">-or-</span></span> 
 <span data-ttu-id="daa4a-176"><paramref name="name" /> tiene más de 260 caracteres.</span><span class="sxs-lookup"><span data-stu-id="daa4a-176"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="daa4a-177"><paramref name="maximumCount" /> es menor que 1.</span><span class="sxs-lookup"><span data-stu-id="daa4a-177"><paramref name="maximumCount" /> is less than 1.</span></span>  
  
<span data-ttu-id="daa4a-178">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-178">-or-</span></span> 
 <span data-ttu-id="daa4a-179"><paramref name="initialCount" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="daa4a-179"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-180">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="daa4a-180">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-181">El semáforo con nombre existe y tiene seguridad de control de acceso, y el usuario no tiene <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-181">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="daa4a-182">No se puede crear el semáforo con nombre, porque puede que un identificador de espera de un tipo diferente tenga el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-182">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="daa4a-183">para llamar a código no administrado para crear un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-183">for calling unmanaged code to create a named system semaphore.</span></span> <span data-ttu-id="daa4a-184">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-184">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span>  
  
<span data-ttu-id="daa4a-185">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-185">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-186">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-186">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-187">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-187">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCount As Integer, maximumCount As Integer, name As String, ByRef createdNew As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" />
        <Parameter Name="maximumCount" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="daa4a-188">Número inicial de solicitudes para el semáforo que se puede satisfacer simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-188">The initial number of requests for the semaphore that can be satisfied concurrently.</span></span></param>
        <param name="maximumCount"><span data-ttu-id="daa4a-189">Número máximo de solicitudes para el semáforo que se puede satisfacer simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-189">The maximum number of requests for the semaphore that can be satisfied concurrently.</span></span></param>
        <param name="name"><span data-ttu-id="daa4a-190">Nombre de un objeto de semáforo del sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-190">The name of a named system semaphore object.</span></span></param>
        <param name="createdNew"><span data-ttu-id="daa4a-191">Cuando este método devuelve un resultado, contiene <see langword="true" /> si se creó un semáforo local (es decir, si <paramref name="name" /> es <see langword="null" /> o una cadena vacía) o si se creó el semáforo del sistema con nombre especificado; es <see langword="false" /> si el semáforo del sistema con nombre especificado ya existía.</span><span class="sxs-lookup"><span data-stu-id="daa4a-191">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <paramref name="name" /> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span></span> <span data-ttu-id="daa4a-192">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="daa4a-192">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="daa4a-193">Inicializa una instancia nueva de la clase <see cref="T:System.Threading.Semaphore" />, especificando el número inicial de entradas y el número máximo de entradas simultáneas, especificando de forma opcional el nombre de un objeto semáforo de sistema y especificando una variable que recibe un valor que indica si se creó un semáforo del sistema nuevo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-193">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, and specifying a variable that receives a value indicating whether a new system semaphore was created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-194">Este constructor inicializa un <xref:System.Threading.Semaphore> objeto que representa un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-194">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="daa4a-195">Puede crear varias <xref:System.Threading.Semaphore> objetos que representan el mismo nombre semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-195">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-196">Si el semáforo del sistema con nombre no existe, se crea con el recuento inicial y el número máximo especificado por `initialCount` y `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="daa4a-196">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="daa4a-197">Si el semáforo del sistema con nombre ya existe, `initialCount` y `maximumCount` no se usan, aunque los valores no válidos también generar excepciones.</span><span class="sxs-lookup"><span data-stu-id="daa4a-197">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="daa4a-198">Use `createdNew` para determinar si se creó el semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-198">Use `createdNew` to determine whether the system semaphore was created.</span></span>  
  
 <span data-ttu-id="daa4a-199">Si `initialCount` es menor que `maximumCount`, y `createdNew` es `true`, el efecto es el mismo que si hubiera llamado el subproceso actual <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` menos `initialCount`) veces.</span><span class="sxs-lookup"><span data-stu-id="daa4a-199">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="daa4a-200">Si especifica `null` o una cadena vacía para `name`, se crea un semáforo local, como si hubiera llamado a la <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> sobrecarga del constructor.</span><span class="sxs-lookup"><span data-stu-id="daa4a-200">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="daa4a-201">En este caso, `createdNew` siempre `true`.</span><span class="sxs-lookup"><span data-stu-id="daa4a-201">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="daa4a-202">Dado que los semáforos con nombre son visibles en todo el sistema operativo, se puede usar para coordinar el uso de recursos a través de los límites del proceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-202">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-203">El ejemplo de código siguiente muestra el comportamiento entre procesos de un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-203">The following code example demonstrates the cross-process behavior of a named semaphore.</span></span> <span data-ttu-id="daa4a-204">En el ejemplo se crea un semáforo con nombre con un número máximo de cinco y un recuento inicial de dos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-204">The example creates a named semaphore with a maximum count of five and an initial count of two.</span></span> <span data-ttu-id="daa4a-205">Es decir, reserva tres entradas para el subproceso que llama al constructor.</span><span class="sxs-lookup"><span data-stu-id="daa4a-205">That is, it reserves three entries for the thread that calls the constructor.</span></span> <span data-ttu-id="daa4a-206">Si `createNew` es `false`, el programa realiza tres llamadas a la <xref:System.Threading.WaitHandle.WaitOne%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-206">If `createNew` is `false`, the program makes three calls to the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span> <span data-ttu-id="daa4a-207">Por lo tanto, si ejecuta el ejemplo compilado desde dos ventanas de comandos, la segunda copia se bloqueará en la tercera llamada a <xref:System.Threading.WaitHandle.WaitOne%2A>.</span><span class="sxs-lookup"><span data-stu-id="daa4a-207">Thus, if you run the compiled example from two command windows, the second copy will block on the third call to <xref:System.Threading.WaitHandle.WaitOne%2A>.</span></span> <span data-ttu-id="daa4a-208">Liberar una o más entradas en la primera copia del programa para desbloquear a la segunda.</span><span class="sxs-lookup"><span data-stu-id="daa4a-208">Release one or more entries in the first copy of the program to unblock the second.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 4/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="daa4a-209"><paramref name="initialCount" /> es mayor que <paramref name="maximumCount" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-209"><paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span></span>  
  
<span data-ttu-id="daa4a-210">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-210">-or-</span></span> 
 <span data-ttu-id="daa4a-211"><paramref name="name" /> tiene más de 260 caracteres.</span><span class="sxs-lookup"><span data-stu-id="daa4a-211"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="daa4a-212"><paramref name="maximumCount" /> es menor que 1.</span><span class="sxs-lookup"><span data-stu-id="daa4a-212"><paramref name="maximumCount" /> is less than 1.</span></span>  
  
<span data-ttu-id="daa4a-213">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-213">-or-</span></span> 
 <span data-ttu-id="daa4a-214"><paramref name="initialCount" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="daa4a-214"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-215">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="daa4a-215">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-216">El semáforo con nombre existe y tiene seguridad de control de acceso, y el usuario no tiene <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-216">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="daa4a-217">No se puede crear el semáforo con nombre, porque puede que un identificador de espera de un tipo diferente tenga el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-217">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="daa4a-218">para llamar a código no administrado para crear un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-218">for calling unmanaged code to create a named system semaphore.</span></span> <span data-ttu-id="daa4a-219">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-219">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span>  
  
<span data-ttu-id="daa4a-220">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-220">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-221">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-221">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-222">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-222">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Semaphore (int initialCount, int maximumCount, string name, out bool createdNew, System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCount, int32 maximumCount, string name, [out] bool&amp; createdNew, class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.#ctor(System.Int32,System.Int32,System.String,System.Boolean@,System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Semaphore(int initialCount, int maximumCount, System::String ^ name, [Runtime::InteropServices::Out] bool % createdNew, System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="new System.Threading.Semaphore : int * int * string *  * System.Security.AccessControl.SemaphoreSecurity -&gt; System.Threading.Semaphore" Usage="new System.Threading.Semaphore (initialCount, maximumCount, name, createdNew, semaphoreSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCount" Type="System.Int32" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="maximumCount" Type="System.Int32" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="name" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="createdNew" Type="System.Boolean" RefType="out" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="initialCount"><span data-ttu-id="daa4a-223">Número inicial de solicitudes para el semáforo que se puede satisfacer simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-223">The initial number of requests for the semaphore that can be satisfied concurrently.</span></span></param>
        <param name="maximumCount"><span data-ttu-id="daa4a-224">Número máximo de solicitudes para el semáforo que se puede satisfacer simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-224">The maximum number of requests for the semaphore that can be satisfied concurrently.</span></span></param>
        <param name="name"><span data-ttu-id="daa4a-225">Nombre de un objeto de semáforo del sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-225">The name of a named system semaphore object.</span></span></param>
        <param name="createdNew"><span data-ttu-id="daa4a-226">Cuando este método devuelve un resultado, contiene <see langword="true" /> si se creó un semáforo local (es decir, si <paramref name="name" /> es <see langword="null" /> o una cadena vacía) o si se creó el semáforo del sistema con nombre especificado; es <see langword="false" /> si el semáforo del sistema con nombre especificado ya existía.</span><span class="sxs-lookup"><span data-stu-id="daa4a-226">When this method returns, contains <see langword="true" /> if a local semaphore was created (that is, if <paramref name="name" /> is <see langword="null" /> or an empty string) or if the specified named system semaphore was created; <see langword="false" /> if the specified named system semaphore already existed.</span></span> <span data-ttu-id="daa4a-227">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="daa4a-227">This parameter is passed uninitialized.</span></span></param>
        <param name="semaphoreSecurity"><span data-ttu-id="daa4a-228">Objeto <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> que representa la seguridad de control de acceso que se aplicará al semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-228">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span></span></param>
        <summary><span data-ttu-id="daa4a-229">Inicializa una instancia nueva de la clase <see cref="T:System.Threading.Semaphore" />, especificando el número inicial de entradas y el número máximo de entradas simultáneas, especificando de forma opcional el nombre de un objeto semáforo de sistema, especificando una variable que recibe un valor que indica si se creó un semáforo del sistema y especificando la seguridad de control de acceso para el semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-229">Initializes a new instance of the <see cref="T:System.Threading.Semaphore" /> class, specifying the initial number of entries and the maximum number of concurrent entries, optionally specifying the name of a system semaphore object, specifying a variable that receives a value indicating whether a new system semaphore was created, and specifying security access control for the system semaphore.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-230">Utilice este constructor para aplicar la seguridad de control de acceso a un semáforo del sistema con nombre cuando se crea, impide que otro código tome el control del semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-230">Use this constructor to apply access control security to a named system semaphore when it is created, preventing other code from taking control of the semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-231">Este constructor inicializa un <xref:System.Threading.Semaphore> objeto que representa un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-231">This constructor initializes a <xref:System.Threading.Semaphore> object that represents a named system semaphore.</span></span> <span data-ttu-id="daa4a-232">Puede crear varias <xref:System.Threading.Semaphore> objetos que representan el mismo nombre semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-232">You can create multiple <xref:System.Threading.Semaphore> objects that represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-233">Si el semáforo del sistema con nombre no existe, se crea con la seguridad de control de acceso especificada.</span><span class="sxs-lookup"><span data-stu-id="daa4a-233">If the named system semaphore does not exist, it is created with the specified access control security.</span></span> <span data-ttu-id="daa4a-234">Si el semáforo con nombre existe, se omite la seguridad de control de acceso especificada.</span><span class="sxs-lookup"><span data-stu-id="daa4a-234">If the named semaphore exists, the specified access control security is ignored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="daa4a-235">El llamador tiene control total sobre el recién creado <xref:System.Threading.Semaphore> objeto incluso si `semaphoreSecurity` deniega o se produce un error al otorgar algunos derechos de acceso al usuario actual.</span><span class="sxs-lookup"><span data-stu-id="daa4a-235">The caller has full control over the newly created <xref:System.Threading.Semaphore> object even if `semaphoreSecurity` denies or fails to grant some access rights to the current user.</span></span> <span data-ttu-id="daa4a-236">Sin embargo, si el usuario actual intenta obtener otro <xref:System.Threading.Semaphore> representar el mismo semáforo con nombre, ya sea mediante un constructor de objeto o el <xref:System.Threading.Semaphore.OpenExisting%2A> método, se aplica la seguridad de control de acceso de Windows.</span><span class="sxs-lookup"><span data-stu-id="daa4a-236">However, if the current user attempts to get another <xref:System.Threading.Semaphore> object to represent the same named semaphore, using either a constructor or the <xref:System.Threading.Semaphore.OpenExisting%2A> method, Windows access control security is applied.</span></span>  
  
 <span data-ttu-id="daa4a-237">Si el semáforo del sistema con nombre no existe, se crea con el recuento inicial y el número máximo especificado por `initialCount` y `maximumCount`.</span><span class="sxs-lookup"><span data-stu-id="daa4a-237">If the named system semaphore does not exist, it is created with the initial count and maximum count specified by `initialCount` and `maximumCount`.</span></span> <span data-ttu-id="daa4a-238">Si el semáforo del sistema con nombre ya existe, `initialCount` y `maximumCount` no se usan, aunque los valores no válidos también generar excepciones.</span><span class="sxs-lookup"><span data-stu-id="daa4a-238">If the named system semaphore already exists, `initialCount` and `maximumCount` are not used, although invalid values still cause exceptions.</span></span> <span data-ttu-id="daa4a-239">Use el `createdNew` parámetro para determinar si este constructor creó el semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-239">Use the `createdNew` parameter to determine whether the system semaphore was created by this constructor.</span></span>  
  
 <span data-ttu-id="daa4a-240">Si `initialCount` es menor que `maximumCount`, y `createdNew` es `true`, el efecto es el mismo que si hubiera llamado el subproceso actual <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` menos `initialCount`) veces.</span><span class="sxs-lookup"><span data-stu-id="daa4a-240">If `initialCount` is less than `maximumCount`, and `createdNew` is `true`, the effect is the same as if the current thread had called <xref:System.Threading.WaitHandle.WaitOne%2A> (`maximumCount` minus `initialCount`) times.</span></span>  
  
 <span data-ttu-id="daa4a-241">Si especifica `null` o una cadena vacía para `name`, se crea un semáforo local, como si hubiera llamado a la <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> sobrecarga del constructor.</span><span class="sxs-lookup"><span data-stu-id="daa4a-241">If you specify `null` or an empty string for `name`, a local semaphore is created, as if you had called the <xref:System.Threading.Semaphore.%23ctor%28System.Int32%2CSystem.Int32%29> constructor overload.</span></span> <span data-ttu-id="daa4a-242">En este caso, `createdNew` siempre `true`.</span><span class="sxs-lookup"><span data-stu-id="daa4a-242">In this case, `createdNew` is always `true`.</span></span>  
  
 <span data-ttu-id="daa4a-243">Dado que los semáforos con nombre son visibles en todo el sistema operativo, se puede usar para coordinar el uso de recursos a través de los límites del proceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-243">Because named semaphores are visible throughout the operating system, they can be used to coordinate resource use across process boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-244">En el ejemplo de código siguiente se muestra el comportamiento entre procesos de un semáforo con nombre con seguridad de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-244">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="daa4a-245">El ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> sobrecarga del método para probar la existencia de un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-245">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span> <span data-ttu-id="daa4a-246">Si el semáforo no existe, se crea con un recuento máximo de dos y con seguridad de control de acceso que impide que el usuario actual el derecho a usar el semáforo pero concede el derecho para leer y cambiar permisos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-246">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span> <span data-ttu-id="daa4a-247">Si ejecuta el ejemplo compilado desde dos ventanas de comandos, la segunda copia producirá una excepción de infracción de acceso en la llamada a la <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-247">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="daa4a-248">Se detectó la excepción y el ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> sobrecarga del método para abrir el semáforo con los derechos necesarios para leer y cambiar los permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-248">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="daa4a-249">Después de cambian los permisos, se abre el semáforo con los derechos necesarios para escribir y versión.</span><span class="sxs-lookup"><span data-stu-id="daa4a-249">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="daa4a-250">Si ejecuta el ejemplo compilado desde una tercera ventana de comandos, se ejecuta con los nuevos permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-250">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="daa4a-251"><paramref name="initialCount" /> es mayor que <paramref name="maximumCount" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-251"><paramref name="initialCount" /> is greater than <paramref name="maximumCount" />.</span></span>  
  
<span data-ttu-id="daa4a-252">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-252">-or-</span></span> 
 <span data-ttu-id="daa4a-253"><paramref name="name" /> tiene más de 260 caracteres.</span><span class="sxs-lookup"><span data-stu-id="daa4a-253"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="daa4a-254"><paramref name="maximumCount" /> es menor que 1.</span><span class="sxs-lookup"><span data-stu-id="daa4a-254"><paramref name="maximumCount" /> is less than 1.</span></span>  
  
<span data-ttu-id="daa4a-255">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-255">-or-</span></span> 
 <span data-ttu-id="daa4a-256"><paramref name="initialCount" /> es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="daa4a-256"><paramref name="initialCount" /> is less than 0.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-257">El semáforo con nombre existe y tiene seguridad de control de acceso, y el usuario no tiene <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-257">The named semaphore exists and has access control security, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.FullControl" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-258">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="daa4a-258">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="daa4a-259">No se puede crear el semáforo con nombre, porque puede que un identificador de espera de un tipo diferente tenga el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-259">The named semaphore cannot be created, perhaps because a wait handle of a different type has the same name.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="daa4a-260">para llamar a código no administrado para crear un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-260">for calling unmanaged code to create a named system semaphore.</span></span> <span data-ttu-id="daa4a-261">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-261">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span> <span data-ttu-id="daa4a-262">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-262">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-263">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-263">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-264">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-264">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetAccessControl">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreSecurity GetAccessControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.AccessControl.SemaphoreSecurity GetAccessControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.GetAccessControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessControl () As SemaphoreSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::AccessControl::SemaphoreSecurity ^ GetAccessControl();" />
      <MemberSignature Language="F#" Value="member this.GetAccessControl : unit -&gt; System.Security.AccessControl.SemaphoreSecurity" Usage="semaphore.GetAccessControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreSecurity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="daa4a-265">Obtiene la seguridad de control de acceso para un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-265">Gets the access control security for a named system semaphore.</span></span></summary>
        <returns><span data-ttu-id="daa4a-266">Objeto <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> que representa la seguridad de control de acceso para el semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-266">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security for the named system semaphore.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-267">El <xref:System.Threading.Semaphore.GetAccessControl%2A> método utiliza la siguiente combinación de indicadores (combinados con la operación OR bit a bit) para buscar los permisos: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, y <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="daa4a-267">The <xref:System.Threading.Semaphore.GetAccessControl%2A> method uses the following combination of flags (combined using the bitwise OR operation) to search for permissions: <xref:System.Security.AccessControl.AccessControlSections.Access?displayProperty=nameWithType>, <xref:System.Security.AccessControl.AccessControlSections.Owner?displayProperty=nameWithType>, and <xref:System.Security.AccessControl.AccessControlSections.Group?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="daa4a-268">El usuario debe tener <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> derechos para llamar a este método y el semáforo deben haberse abiertos con <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> derechos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-268">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ReadPermissions?displayProperty=nameWithType> rights.</span></span>  
  
 <span data-ttu-id="daa4a-269">En un semáforo local, la seguridad de control de acceso es irrelevante.</span><span class="sxs-lookup"><span data-stu-id="daa4a-269">On a local semaphore, access control security is irrelevant.</span></span> <span data-ttu-id="daa4a-270">Si el <xref:System.Threading.Semaphore> objeto no representa un semáforo de sistema con nombre, este método devuelve un <xref:System.Security.AccessControl.SemaphoreSecurity> objeto que concede todos los derechos a cualquier usuario.</span><span class="sxs-lookup"><span data-stu-id="daa4a-270">If the <xref:System.Threading.Semaphore> object does not represent a named system semaphore, this method returns a <xref:System.Security.AccessControl.SemaphoreSecurity> object that grants all rights to any user.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-271">En el ejemplo de código siguiente se muestra el comportamiento entre procesos de un semáforo con nombre con seguridad de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-271">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="daa4a-272">El ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> sobrecarga del método para probar la existencia de un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-272">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-273">Si el semáforo no existe, se crea con un recuento máximo de dos y con seguridad de control de acceso que impide que el usuario actual el derecho a usar el semáforo, pero se concede el derecho para leer y cambiar permisos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-273">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-274">Si ejecuta el ejemplo compilado desde dos ventanas de comandos, la segunda copia producirá una excepción de infracción de acceso en la llamada a la <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-274">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="daa4a-275">Se detectó la excepción y el ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> sobrecarga del método para abrir el semáforo con los derechos necesarios para leer y cambiar los permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-275">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span> <span data-ttu-id="daa4a-276">La seguridad de control de acceso para el semáforo del sistema se obtiene mediante la <xref:System.Threading.Semaphore.GetAccessControl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-276">The access control security for the system semaphore is obtained using the <xref:System.Threading.Semaphore.GetAccessControl%2A> method.</span></span>  
  
 <span data-ttu-id="daa4a-277">Después de cambian los permisos, se abre el semáforo con los derechos necesarios para escribir y versión.</span><span class="sxs-lookup"><span data-stu-id="daa4a-277">After the permissions are changed, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="daa4a-278">Si ejecuta el ejemplo compilado desde una tercera ventana de comandos, se ejecuta con los nuevos permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-278">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-279">El objeto <see cref="T:System.Threading.Semaphore" /> actual representa un semáforo del sistema con nombre y el usuario no tiene derechos de <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-279">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore, and the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span></span>  
  
<span data-ttu-id="daa4a-280">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-280">-or-</span></span> 
<span data-ttu-id="daa4a-281">El objeto <see cref="T:System.Threading.Semaphore" /> actual representa un semáforo del sistema con nombre y no se abrió con <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-281">The current <see cref="T:System.Threading.Semaphore" /> object represents a named system semaphore and was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ReadPermissions" /> rights.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="daa4a-282">No se admite para Windows 98 o Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="daa4a-282">Not supported for Windows 98 or Windows Millennium Edition.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-283">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-283">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-284">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-284">Semaphore</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="daa4a-285">Abre un semáforo con nombre especificado, si ya existe.</span><span class="sxs-lookup"><span data-stu-id="daa4a-285">Opens a specified named semaphore, if it already exists.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="daa4a-286">Nombre del semáforo del sistema que se va a abrir.</span><span class="sxs-lookup"><span data-stu-id="daa4a-286">The name of the system semaphore to open.</span></span></param>
        <summary><span data-ttu-id="daa4a-287">Abre el semáforo con nombre especificado, si ya existe.</span><span class="sxs-lookup"><span data-stu-id="daa4a-287">Opens the specified named semaphore, if it already exists.</span></span></summary>
        <returns><span data-ttu-id="daa4a-288">Objeto que representa el semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-288">An object that represents the named system semaphore.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-289">El <xref:System.Threading.Semaphore.OpenExisting%2A> método intenta abrir el semáforo con nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="daa4a-289">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open the specified named semaphore.</span></span> <span data-ttu-id="daa4a-290">Si el semáforo de sistema no existe, este método produce una excepción en lugar de crear el semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-290">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="daa4a-291">Para crear el semáforo del sistema cuando no existe, use uno de los <xref:System.Threading.Semaphore.%23ctor%2A> constructores que tiene un `name` parámetro.</span><span class="sxs-lookup"><span data-stu-id="daa4a-291">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="daa4a-292">Varias llamadas a este método que usan el mismo valor para `name` necesariamente no devolver el mismo <xref:System.Threading.Semaphore> objeto, aunque los objetos que se devuelven representan el mismo semáforo con nombre del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-292">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-293">Esta sobrecarga del método es equivalente a llamar a la <xref:System.Threading.Semaphore.OpenExisting%2A> sobrecarga del método y especificando <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> y <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> derechos, que se combinan mediante la operación OR bit a bit.</span><span class="sxs-lookup"><span data-stu-id="daa4a-293">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.OpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span>  
  
 <span data-ttu-id="daa4a-294">Especificar el <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> marca permite que un subproceso en el semáforo y especificando el <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> marca permite que un subproceso llamar a la <xref:System.Threading.Semaphore.Release%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-294">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-295">En el ejemplo de código siguiente se muestra el comportamiento entre procesos de un semáforo con nombre con seguridad de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-295">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="daa4a-296">El ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> sobrecarga del método para probar la existencia de un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-296">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-297">Si el semáforo no existe, se crea con un recuento máximo de dos y con seguridad de control de acceso que impide que el usuario actual el derecho a usar el semáforo, pero que concede el derecho para leer y cambiar permisos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-297">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but which grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-298">Si ejecuta el ejemplo compilado desde dos ventanas de comandos, la segunda copia producirá una excepción de infracción de acceso en la llamada a la <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> sobrecarga del método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-298">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload.</span></span> <span data-ttu-id="daa4a-299">Se detectó la excepción y el ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> sobrecarga del método para abrir el semáforo con los derechos necesarios para leer y cambiar los permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-299">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="daa4a-300">Después de cambian los permisos, se abre el semáforo con los derechos necesarios para escribir y liberarlo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-300">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="daa4a-301">Si ejecuta el ejemplo compilado desde una tercera ventana de comandos, se ejecuta con los nuevos permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-301">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="daa4a-302"><paramref name="name" /> es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="daa4a-302"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="daa4a-303">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-303">-or-</span></span> 
 <span data-ttu-id="daa4a-304"><paramref name="name" /> tiene más de 260 caracteres.</span><span class="sxs-lookup"><span data-stu-id="daa4a-304"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="daa4a-305"><paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-305"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="daa4a-306">El semáforo con nombre no existe.</span><span class="sxs-lookup"><span data-stu-id="daa4a-306">The named semaphore does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-307">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="daa4a-307">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-308">El semáforo con nombre existe, pero el usuario no tiene el acceso de seguridad necesario para usarlo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-308">The named semaphore exists, but the user does not have the security access required to use it.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="daa4a-309">para llamar a código no administrado para abrir un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-309">for calling unmanaged code to open a named system semaphore.</span></span> <span data-ttu-id="daa4a-310">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-310">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span>  
  
<span data-ttu-id="daa4a-311">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-311">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-312">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-312">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-313">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-313">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OpenExisting">
      <MemberSignature Language="C#" Value="public static System.Threading.Semaphore OpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Semaphore OpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.OpenExisting(System.String,System.Security.AccessControl.SemaphoreRights)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function OpenExisting (name As String, rights As SemaphoreRights) As Semaphore" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Semaphore ^ OpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights);" />
      <MemberSignature Language="F#" Value="static member OpenExisting : string * System.Security.AccessControl.SemaphoreRights -&gt; System.Threading.Semaphore" Usage="System.Threading.Semaphore.OpenExisting (name, rights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Semaphore</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="daa4a-314">Nombre del semáforo del sistema que se va a abrir.</span><span class="sxs-lookup"><span data-stu-id="daa4a-314">The name of the system semaphore to open.</span></span></param>
        <param name="rights"><span data-ttu-id="daa4a-315">Combinación bit a bit de los valores de la enumeración que representan el acceso de seguridad deseado.</span><span class="sxs-lookup"><span data-stu-id="daa4a-315">A bitwise combination of the enumeration values that represent the desired security access.</span></span></param>
        <summary><span data-ttu-id="daa4a-316">Abre el semáforo con nombre especificado, si ya existe, con el acceso de seguridad deseado.</span><span class="sxs-lookup"><span data-stu-id="daa4a-316">Opens the specified named semaphore, if it already exists, with the desired security access.</span></span></summary>
        <returns><span data-ttu-id="daa4a-317">Objeto que representa el semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-317">An object that represents the named system semaphore.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-318">El `rights` debe incluir el parámetro el <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> marca para permitir que los subprocesos en el semáforo y el <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> marca para permitir que los subprocesos llamar a la <xref:System.Threading.Semaphore.Release%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-318">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="daa4a-319">El <xref:System.Threading.Semaphore.OpenExisting%2A> método intenta abrir un semáforo con nombre existente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-319">The <xref:System.Threading.Semaphore.OpenExisting%2A> method tries to open an existing named semaphore.</span></span> <span data-ttu-id="daa4a-320">Si el semáforo de sistema no existe, este método produce una excepción en lugar de crear el semáforo del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-320">If the system semaphore does not exist, this method throws an exception instead of creating the system semaphore.</span></span> <span data-ttu-id="daa4a-321">Para crear el semáforo del sistema cuando no existe, use uno de los <xref:System.Threading.Semaphore.%23ctor%2A> constructores que tiene un `name` parámetro.</span><span class="sxs-lookup"><span data-stu-id="daa4a-321">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="daa4a-322">Varias llamadas a este método que usan el mismo valor para `name` necesariamente no devolver el mismo <xref:System.Threading.Semaphore> objeto, aunque los objetos que se devuelven representan el mismo semáforo con nombre del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-322">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-323">En el ejemplo de código siguiente se muestra el comportamiento entre procesos de un semáforo con nombre con seguridad de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-323">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="daa4a-324">El ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> sobrecarga del método para probar la existencia de un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-324">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-325">Si el semáforo no existe, se crea con un recuento máximo de dos y con seguridad de control de acceso que impide que el usuario actual el derecho a usar el semáforo, pero se concede el derecho para leer y cambiar permisos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-325">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore, but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-326">Si ejecuta el ejemplo compilado desde dos ventanas de comandos, la segunda copia producirá una excepción de infracción de acceso en la llamada a la <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-326">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="daa4a-327">Se detectó la excepción y el ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> sobrecarga del método para abrir el semáforo con los derechos necesarios para leer y cambiar los permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-327">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="daa4a-328">Después de cambian los permisos, se abre el semáforo con los derechos necesarios para escribir y liberarlo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-328">After the permissions are changed, the semaphore is opened with the rights required to enter and release it.</span></span> <span data-ttu-id="daa4a-329">Si ejecuta el ejemplo compilado desde una tercera ventana de comandos, se ejecuta con los nuevos permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-329">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="daa4a-330"><paramref name="name" /> es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="daa4a-330"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="daa4a-331">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-331">-or-</span></span> 
 <span data-ttu-id="daa4a-332"><paramref name="name" /> tiene más de 260 caracteres.</span><span class="sxs-lookup"><span data-stu-id="daa4a-332"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="daa4a-333"><paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-333"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Threading.WaitHandleCannotBeOpenedException"><span data-ttu-id="daa4a-334">El semáforo con nombre no existe.</span><span class="sxs-lookup"><span data-stu-id="daa4a-334">The named semaphore does not exist.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-335">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="daa4a-335">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-336">El semáforo con nombre existe, pero el usuario no tiene los derechos de acceso de seguridad deseados.</span><span class="sxs-lookup"><span data-stu-id="daa4a-336">The named semaphore exists, but the user does not have the desired security access rights.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="daa4a-337">para llamar a código no administrado para crear un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-337">for calling unmanaged code to create a named system semaphore.</span></span> <span data-ttu-id="daa4a-338">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-338">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span>  
  
<span data-ttu-id="daa4a-339">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-339">Security action: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span></permission>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-340">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-340">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-341">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-341">Semaphore</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Release">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="daa4a-342">Sale del semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-342">Exits the semaphore.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release" />
      <MemberSignature Language="VB.NET" Value="Public Function Release () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release();" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; int" Usage="semaphore.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.PrePrepareMethod</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="daa4a-343">Sale del semáforo y devuelve el recuento anterior.</span><span class="sxs-lookup"><span data-stu-id="daa4a-343">Exits the semaphore and returns the previous count.</span></span></summary>
        <returns><span data-ttu-id="daa4a-344">El recuento en el semáforo antes de la llamada al método <see cref="Overload:System.Threading.Semaphore.Release" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-344">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-345">Los subprocesos normalmente utilizan el <xref:System.Threading.WaitHandle.WaitOne%2A> método para introducir el semáforo y se suele utilizar esta sobrecarga del método para salir.</span><span class="sxs-lookup"><span data-stu-id="daa4a-345">Threads typically use the <xref:System.Threading.WaitHandle.WaitOne%2A> method to enter the semaphore, and they typically use this method overload to exit.</span></span>  
  
 <span data-ttu-id="daa4a-346">Si un <xref:System.Threading.SemaphoreFullException> produce el <xref:System.Threading.Semaphore.Release%2A> método, no indica necesariamente un problema con el subproceso de llamada.</span><span class="sxs-lookup"><span data-stu-id="daa4a-346">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="daa4a-347">Ese subproceso salga del semáforo más veces que se escribió haya provocado un error de programación en otro subproceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-347">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="daa4a-348">Si el actual <xref:System.Threading.Semaphore> objeto representa un semáforo de sistema con nombre, el usuario debe tener <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> derechos y el semáforo deben haberse abiertos con <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> derechos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-348">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-349">En el ejemplo de código siguiente se crea un semáforo con un número máximo de tres y un recuento inicial de cero.</span><span class="sxs-lookup"><span data-stu-id="daa4a-349">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="daa4a-350">En el ejemplo se inicia cinco subprocesos, que bloquear la espera para el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-350">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="daa4a-351">El subproceso principal utiliza el <xref:System.Threading.Semaphore.Release%28System.Int32%29> sobrecarga del método para aumentar el recuento del semáforo a su máximo, lo que permite tres subprocesos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-351">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="daa4a-352">Cada subproceso utiliza el <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> método para esperar un segundo, para simular el trabajo y, a continuación, las llamadas a la <xref:System.Threading.Semaphore.Release> sobrecarga del método para liberar el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-352">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-353">Cada vez que se libere el semáforo, se muestra el recuento del semáforo anterior.</span><span class="sxs-lookup"><span data-stu-id="daa4a-353">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="daa4a-354">Uso de semáforo pista de la consola mensajes.</span><span class="sxs-lookup"><span data-stu-id="daa4a-354">Console messages track semaphore use.</span></span> <span data-ttu-id="daa4a-355">El intervalo de trabajo simulado aumenta ligeramente para que cada subproceso, para facilitar la lectura de la salida.</span><span class="sxs-lookup"><span data-stu-id="daa4a-355">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Threading.SemaphoreFullException"><span data-ttu-id="daa4a-356">El recuento del semáforo ya está en el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-356">The semaphore count is already at the maximum value.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-357">Error de Win32 con un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-357">A Win32 error occurred with a named semaphore.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-358">El semáforo actual representa un semáforo de sistema con nombre, pero el usuario no tiene <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-358">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span></span>  
  
<span data-ttu-id="daa4a-359">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-359">-or-</span></span> 
<span data-ttu-id="daa4a-360">El semáforo actual representa un semáforo de sistema con nombre, pero no se abrió con <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-360">The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-361">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-361">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-362">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-362">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public int Release (int releaseCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Release(int32 releaseCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.Release(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Release (releaseCount As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Release(int releaseCount);" />
      <MemberSignature Language="F#" Value="member this.Release : int -&gt; int" Usage="semaphore.Release releaseCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="releaseCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="releaseCount"><span data-ttu-id="daa4a-363">El número de veces que sale del semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-363">The number of times to exit the semaphore.</span></span></param>
        <summary><span data-ttu-id="daa4a-364">Sale del semáforo un número especificado de veces y devuelve el recuento anterior.</span><span class="sxs-lookup"><span data-stu-id="daa4a-364">Exits the semaphore a specified number of times and returns the previous count.</span></span></summary>
        <returns><span data-ttu-id="daa4a-365">El recuento en el semáforo antes de la llamada al método <see cref="Overload:System.Threading.Semaphore.Release" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-365">The count on the semaphore before the <see cref="Overload:System.Threading.Semaphore.Release" /> method was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-366">Si un subproceso ha entrado en el semáforo varias veces, esta sobrecarga del método permite el recuento del semáforo todo restaurarse con una llamada.</span><span class="sxs-lookup"><span data-stu-id="daa4a-366">If a thread has entered the semaphore multiple times, this method overload allows the entire semaphore count to be restored with one call.</span></span>  
  
 <span data-ttu-id="daa4a-367">Si un <xref:System.Threading.SemaphoreFullException> produce el <xref:System.Threading.Semaphore.Release%2A> método, no indica necesariamente un problema con el subproceso de llamada.</span><span class="sxs-lookup"><span data-stu-id="daa4a-367">If a <xref:System.Threading.SemaphoreFullException> is thrown by the <xref:System.Threading.Semaphore.Release%2A> method, it does not necessarily indicate a problem with the calling thread.</span></span> <span data-ttu-id="daa4a-368">Ese subproceso salga del semáforo más veces que se escribió haya provocado un error de programación en otro subproceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-368">A programming error in another thread might have caused that thread to exit the semaphore more times than it entered.</span></span>  
  
 <span data-ttu-id="daa4a-369">Si el actual <xref:System.Threading.Semaphore> objeto representa un semáforo de sistema con nombre, el usuario debe tener <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> derechos y el semáforo deben haberse abiertos con <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> derechos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-369">If the current <xref:System.Threading.Semaphore> object represents a named system semaphore, the user must have <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-370">En el ejemplo de código siguiente se crea un semáforo con un número máximo de tres y un recuento inicial de cero.</span><span class="sxs-lookup"><span data-stu-id="daa4a-370">The following code example creates a semaphore with a maximum count of three and an initial count of zero.</span></span> <span data-ttu-id="daa4a-371">En el ejemplo se inicia cinco subprocesos, que bloquear la espera para el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-371">The example starts five threads, which block waiting for the semaphore.</span></span> <span data-ttu-id="daa4a-372">El subproceso principal utiliza el <xref:System.Threading.Semaphore.Release%28System.Int32%29> sobrecarga del método para aumentar el recuento del semáforo a su máximo, lo que permite tres subprocesos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-372">The main thread uses the <xref:System.Threading.Semaphore.Release%28System.Int32%29> method overload to increase the semaphore count to its maximum, allowing three threads to enter the semaphore.</span></span> <span data-ttu-id="daa4a-373">Cada subproceso utiliza el <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> método para esperar un segundo, para simular el trabajo y, a continuación, las llamadas a la <xref:System.Threading.Semaphore.Release> sobrecarga del método para liberar el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-373">Each thread uses the <xref:System.Threading.Thread.Sleep%2A?displayProperty=nameWithType> method to wait for one second, to simulate work, and then calls the <xref:System.Threading.Semaphore.Release> method overload to release the semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-374">Cada vez que se libere el semáforo, se muestra el recuento del semáforo anterior.</span><span class="sxs-lookup"><span data-stu-id="daa4a-374">Each time the semaphore is released, the previous semaphore count is displayed.</span></span> <span data-ttu-id="daa4a-375">Uso de semáforo pista de la consola mensajes.</span><span class="sxs-lookup"><span data-stu-id="daa4a-375">Console messages track semaphore use.</span></span> <span data-ttu-id="daa4a-376">El intervalo de trabajo simulado aumenta ligeramente para que cada subproceso, para facilitar la lectura de la salida.</span><span class="sxs-lookup"><span data-stu-id="daa4a-376">The simulated work interval is increased slightly for each thread, to make the output easier to read.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore2/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="daa4a-377"><paramref name="releaseCount" /> es menor que 1.</span><span class="sxs-lookup"><span data-stu-id="daa4a-377"><paramref name="releaseCount" /> is less than 1.</span></span></exception>
        <exception cref="T:System.Threading.SemaphoreFullException"><span data-ttu-id="daa4a-378">El recuento del semáforo ya está en el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-378">The semaphore count is already at the maximum value.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-379">Error de Win32 con un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-379">A Win32 error occurred with a named semaphore.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-380">El semáforo actual representa un semáforo de sistema con nombre, pero el usuario no tiene derechos <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-380">The current semaphore represents a named system semaphore, but the user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span></span>  
  
<span data-ttu-id="daa4a-381">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-381">-or-</span></span> 
<span data-ttu-id="daa4a-382">El semáforo actual representa un semáforo de sistema con nombre, pero no se abrió con derechos <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-382">The current semaphore represents a named system semaphore, but it was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.Modify" /> rights.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-383">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-383">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-384">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-384">Semaphore</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SetAccessControl">
      <MemberSignature Language="C#" Value="public void SetAccessControl (System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAccessControl(class System.Security.AccessControl.SemaphoreSecurity semaphoreSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.SetAccessControl(System.Security.AccessControl.SemaphoreSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAccessControl(System::Security::AccessControl::SemaphoreSecurity ^ semaphoreSecurity);" />
      <MemberSignature Language="F#" Value="member this.SetAccessControl : System.Security.AccessControl.SemaphoreSecurity -&gt; unit" Usage="semaphore.SetAccessControl semaphoreSecurity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semaphoreSecurity" Type="System.Security.AccessControl.SemaphoreSecurity" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="semaphoreSecurity"><span data-ttu-id="daa4a-385">Objeto <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> que representa la seguridad de control de acceso que se aplicará al semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-385">A <see cref="T:System.Security.AccessControl.SemaphoreSecurity" /> object that represents the access control security to be applied to the named system semaphore.</span></span></param>
        <summary><span data-ttu-id="daa4a-386">Establece la seguridad de control de acceso para un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-386">Sets the access control security for a named system semaphore.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-387">Sólo puede establecer la seguridad de control de acceso en <xref:System.Threading.Semaphore> objetos que representan los semáforos con nombre del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-387">You can set access control security only on <xref:System.Threading.Semaphore> objects that represent named system semaphores.</span></span>  
  
 <span data-ttu-id="daa4a-388">El usuario debe tener <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> derechos para llamar a este método y el semáforo deben haberse abiertos con <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> derechos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-388">The user must have <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights to call this method, and the semaphore must have been opened with <xref:System.Security.AccessControl.SemaphoreRights.ChangePermissions?displayProperty=nameWithType> rights.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="daa4a-389">En el ejemplo de código siguiente se muestra el comportamiento entre procesos de un semáforo con nombre con seguridad de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="daa4a-389">The following code example demonstrates the cross-process behavior of a named semaphore with access control security.</span></span> <span data-ttu-id="daa4a-390">El ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> sobrecarga del método para probar la existencia de un semáforo con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-390">The example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload to test for the existence of a named semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-391">Si el semáforo no existe, se crea con un recuento máximo de dos y con seguridad de control de acceso que impide que el usuario actual el derecho a usar el semáforo pero concede el derecho para leer y cambiar permisos en el semáforo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-391">If the semaphore does not exist, it is created with a maximum count of two and with access control security that denies the current user the right to use the semaphore but grants the right to read and change permissions on the semaphore.</span></span>  
  
 <span data-ttu-id="daa4a-392">Si ejecuta el ejemplo compilado desde dos ventanas de comandos, la segunda copia producirá una excepción de infracción de acceso en la llamada a la <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-392">If you run the compiled example from two command windows, the second copy will throw an access violation exception on the call to the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method.</span></span> <span data-ttu-id="daa4a-393">Se detectó la excepción y el ejemplo se usa el <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> sobrecarga del método para abrir el semáforo con los derechos necesarios para leer y cambiar los permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-393">The exception is caught, and the example uses the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload to open the semaphore with the rights needed to read and change the permissions.</span></span>  
  
 <span data-ttu-id="daa4a-394">Después de cambian los permisos, mediante el <xref:System.Threading.Semaphore.SetAccessControl%2A> método, el semáforo se abre con los derechos necesarios para escribir y versión.</span><span class="sxs-lookup"><span data-stu-id="daa4a-394">After the permissions are changed, using the <xref:System.Threading.Semaphore.SetAccessControl%2A> method, the semaphore is opened with the rights required to enter and release.</span></span> <span data-ttu-id="daa4a-395">Si ejecuta el ejemplo compilado desde una tercera ventana de comandos, se ejecuta con los nuevos permisos.</span><span class="sxs-lookup"><span data-stu-id="daa4a-395">If you run the compiled example from a third command window, it runs using the new permissions.</span></span>  
  
 [!code-cpp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/CS/source.cs#1)]
 [!code-vb[System.Threading.Semaphore.ctor named 5a#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Semaphore.ctor named 5a/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="daa4a-396"><paramref name="semaphoreSecurity" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-396"><paramref name="semaphoreSecurity" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-397">El usuario no tiene los derechos <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-397">The user does not have <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span></span>  
  
<span data-ttu-id="daa4a-398">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-398">-or-</span></span> 
<span data-ttu-id="daa4a-399">El semáforo no se abrió con derechos <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-399">The semaphore was not opened with <see cref="F:System.Security.AccessControl.SemaphoreRights.ChangePermissions" /> rights.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="daa4a-400">El objeto <see cref="T:System.Threading.Semaphore" /> actual no representa un semáforo de sistema con nombre.</span><span class="sxs-lookup"><span data-stu-id="daa4a-400">The current <see cref="T:System.Threading.Semaphore" /> object does not represent a named system semaphore.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/index.md"><span data-ttu-id="daa4a-401">Subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="daa4a-401">Managed Threading</span></span></related>
        <related type="Article" href="~/docs/standard/threading/semaphore-and-semaphoreslim.md"><span data-ttu-id="daa4a-402">Semaphore</span><span class="sxs-lookup"><span data-stu-id="daa4a-402">Semaphore</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryOpenExisting">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="daa4a-403">Abre un semáforo con nombre especificado, si ya existe, y devuelve un valor que indica si la operación se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-403">Opens a specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Threading.Semaphore" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="daa4a-404">Nombre del semáforo del sistema que se va a abrir.</span><span class="sxs-lookup"><span data-stu-id="daa4a-404">The name of the system semaphore to open.</span></span></param>
        <param name="result"><span data-ttu-id="daa4a-405">Cuando este método vuelve, contiene un objeto <see cref="T:System.Threading.Semaphore" /> que representa el semáforo con nombre si la llamada se realizó correctamente o <see langword="null" /> si se produjo un error en la misma.</span><span class="sxs-lookup"><span data-stu-id="daa4a-405">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span></span> <span data-ttu-id="daa4a-406">Este parámetro se trata como sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="daa4a-406">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="daa4a-407">Abre el semáforo con nombre especificado, si ya existe, y devuelve un valor que indica si la operación se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-407">Opens the specified named semaphore, if it already exists, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="daa4a-408"><see langword="true" /> si el semáforo con nombre se abrió correctamente; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-408"><see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-409">Si el semáforo con nombre no existe, este método no la crea.</span><span class="sxs-lookup"><span data-stu-id="daa4a-409">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="daa4a-410">Para crear el semáforo del sistema cuando no existe, use uno de los <xref:System.Threading.Semaphore.%23ctor%2A> constructores que tiene un `name` parámetro.</span><span class="sxs-lookup"><span data-stu-id="daa4a-410">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="daa4a-411">Si no está seguro de si existe un semáforo con nombre, utilice esta sobrecarga del método en lugar de la <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> sobrecarga del método que produce una excepción si el semáforo no existe.</span><span class="sxs-lookup"><span data-stu-id="daa4a-411">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="daa4a-412">Esta sobrecarga del método es equivalente a llamar a la <xref:System.Threading.Semaphore.TryOpenExisting%2A> sobrecarga del método y especificando <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> y <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> derechos, que se combinan mediante la operación OR bit a bit.</span><span class="sxs-lookup"><span data-stu-id="daa4a-412">This method overload is equivalent to calling the <xref:System.Threading.Semaphore.TryOpenExisting%2A> method overload and specifying <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> and <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> rights, combined by using the bitwise OR operation.</span></span> <span data-ttu-id="daa4a-413">Especificar el <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> marca permite que un subproceso en el semáforo y especificando el <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> marca permite que un subproceso llamar a la <xref:System.Threading.Semaphore.Release%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-413">Specifying the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag allows a thread to enter the semaphore, and specifying the   <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag allows a thread to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="daa4a-414"><paramref name="name" /> es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="daa4a-414"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="daa4a-415">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-415">-or-</span></span> 
 <span data-ttu-id="daa4a-416"><paramref name="name" /> tiene más de 260 caracteres.</span><span class="sxs-lookup"><span data-stu-id="daa4a-416"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="daa4a-417"><paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-417"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-418">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="daa4a-418">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-419">El semáforo con nombre existe, pero el usuario no tiene el acceso de seguridad necesario para usarlo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-419">The named semaphore exists, but the user does not have the security access required to use it.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryOpenExisting">
      <MemberSignature Language="C#" Value="public static bool TryOpenExisting (string name, System.Security.AccessControl.SemaphoreRights rights, out System.Threading.Semaphore result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryOpenExisting(string name, valuetype System.Security.AccessControl.SemaphoreRights rights, [out] class System.Threading.Semaphore&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Semaphore.TryOpenExisting(System.String,System.Security.AccessControl.SemaphoreRights,System.Threading.Semaphore@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryOpenExisting (name As String, rights As SemaphoreRights, ByRef result As Semaphore) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryOpenExisting(System::String ^ name, System::Security::AccessControl::SemaphoreRights rights, [Runtime::InteropServices::Out] System::Threading::Semaphore ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryOpenExisting : string * System.Security.AccessControl.SemaphoreRights *  -&gt; bool" Usage="System.Threading.Semaphore.TryOpenExisting (name, rights, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rights" Type="System.Security.AccessControl.SemaphoreRights" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Threading.Semaphore" RefType="out" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="daa4a-420">Nombre del semáforo del sistema que se va a abrir.</span><span class="sxs-lookup"><span data-stu-id="daa4a-420">The name of the system semaphore to open.</span></span></param>
        <param name="rights"><span data-ttu-id="daa4a-421">Combinación bit a bit de los valores de la enumeración que representan el acceso de seguridad deseado.</span><span class="sxs-lookup"><span data-stu-id="daa4a-421">A bitwise combination of the enumeration values that represent the desired security access.</span></span></param>
        <param name="result"><span data-ttu-id="daa4a-422">Cuando este método vuelve, contiene un objeto <see cref="T:System.Threading.Semaphore" /> que representa el semáforo con nombre si la llamada se realizó correctamente o <see langword="null" /> si se produjo un error en la misma.</span><span class="sxs-lookup"><span data-stu-id="daa4a-422">When this method returns, contains a <see cref="T:System.Threading.Semaphore" /> object that represents the named semaphore if the call succeeded, or <see langword="null" /> if the call failed.</span></span> <span data-ttu-id="daa4a-423">Este parámetro se trata como sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="daa4a-423">This parameter is treated as uninitialized.</span></span></param>
        <summary><span data-ttu-id="daa4a-424">Abre el semáforo con nombre especificado, si ya existe, con el acceso de seguridad deseado, y devuelve un valor que indica si la operación se realizó correctamente.</span><span class="sxs-lookup"><span data-stu-id="daa4a-424">Opens the specified named semaphore, if it already exists, with the desired security access, and returns a value that indicates whether the operation succeeded.</span></span></summary>
        <returns><span data-ttu-id="daa4a-425"><see langword="true" /> si el semáforo con nombre se abrió correctamente; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-425"><see langword="true" /> if the named semaphore was opened successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="daa4a-426">Si el semáforo con nombre no existe, este método no la crea.</span><span class="sxs-lookup"><span data-stu-id="daa4a-426">If the named semaphore does not exist, this method does not create it.</span></span> <span data-ttu-id="daa4a-427">Para crear el semáforo del sistema cuando no existe, use uno de los <xref:System.Threading.Semaphore.%23ctor%2A> constructores que tiene un `name` parámetro.</span><span class="sxs-lookup"><span data-stu-id="daa4a-427">To create the system semaphore when it does not already exist, use one of the <xref:System.Threading.Semaphore.%23ctor%2A> constructors that has a `name` parameter.</span></span>  
  
 <span data-ttu-id="daa4a-428">Si no está seguro de si existe un semáforo con nombre, utilice esta sobrecarga del método en lugar de la <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> sobrecarga del método que produce una excepción si el semáforo no existe.</span><span class="sxs-lookup"><span data-stu-id="daa4a-428">If you are uncertain whether a named semaphore exists, use this method overload instead of the <xref:System.Threading.Semaphore.OpenExisting%28System.String%2CSystem.Security.AccessControl.SemaphoreRights%29> method overload, which throws an exception if the semaphore does not exist.</span></span>  
  
 <span data-ttu-id="daa4a-429">El `rights` debe incluir el parámetro el <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> marca para permitir que los subprocesos en el semáforo y el <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> marca para permitir que los subprocesos llamar a la <xref:System.Threading.Semaphore.Release%2A> método.</span><span class="sxs-lookup"><span data-stu-id="daa4a-429">The `rights` parameter must include the <xref:System.Security.AccessControl.SemaphoreRights.Synchronize?displayProperty=nameWithType> flag to allow threads to enter the semaphore, and the <xref:System.Security.AccessControl.SemaphoreRights.Modify?displayProperty=nameWithType> flag to allow threads to call the <xref:System.Threading.Semaphore.Release%2A> method.</span></span>  
  
 <span data-ttu-id="daa4a-430">Varias llamadas a este método que usan el mismo valor para `name` necesariamente no devolver el mismo <xref:System.Threading.Semaphore> objeto, aunque los objetos que se devuelven representan el mismo semáforo con nombre del sistema.</span><span class="sxs-lookup"><span data-stu-id="daa4a-430">Multiple calls to this method that use the same value for `name` do not necessarily return the same <xref:System.Threading.Semaphore> object, even though the objects that are returned represent the same named system semaphore.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="daa4a-431"><paramref name="name" /> es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="daa4a-431"><paramref name="name" /> is an empty string.</span></span>  
  
<span data-ttu-id="daa4a-432">O bien</span><span class="sxs-lookup"><span data-stu-id="daa4a-432">-or-</span></span> 
 <span data-ttu-id="daa4a-433"><paramref name="name" /> tiene más de 260 caracteres.</span><span class="sxs-lookup"><span data-stu-id="daa4a-433"><paramref name="name" /> is longer than 260 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="daa4a-434"><paramref name="name" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="daa4a-434"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="daa4a-435">Error de Win32.</span><span class="sxs-lookup"><span data-stu-id="daa4a-435">A Win32 error occurred.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="daa4a-436">El semáforo con nombre existe, pero el usuario no tiene el acceso de seguridad necesario para usarlo.</span><span class="sxs-lookup"><span data-stu-id="daa4a-436">The named semaphore exists, but the user does not have the security access required to use it.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
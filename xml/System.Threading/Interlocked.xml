<Type Name="Interlocked" FullName="System.Threading.Interlocked">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="38e43e4414c980905a1eb748e3e096a6c3144761" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52251810" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Interlocked" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Interlocked extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Interlocked" />
  <TypeSignature Language="VB.NET" Value="Public Class Interlocked" />
  <TypeSignature Language="C++ CLI" Value="public ref class Interlocked abstract sealed" />
  <TypeSignature Language="F#" Value="type Interlocked = class" />
  <AssemblyInfo>
    <AssemblyName>System.Threading</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0">
      <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ceb4e-101">Proporciona operaciones atómicas para las variables compartidas por varios subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ceb4e-101">Provides atomic operations for variables that are shared by multiple threads.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-102">Los métodos de esta clase ayudan a protegerse frente a errores que pueden producirse cuando el programador cambia de contexto mientras un subproceso está actualizando una variable que se puede acceder por otros subprocesos, o cuando dos subprocesos se ejecutan simultáneamente en procesadores separados.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-102">The methods of this class help protect against errors that can occur when the scheduler switches contexts while a thread is updating a variable that can be accessed by other threads, or when two threads are executing concurrently on separate processors.</span></span> <span data-ttu-id="ceb4e-103">Los miembros de esta clase no producen excepciones.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-103">The members of this class do not throw exceptions.</span></span>  
  
 <span data-ttu-id="ceb4e-104">El <xref:System.Threading.Interlocked.Increment%2A> y <xref:System.Threading.Interlocked.Decrement%2A> métodos aumentar o reducir una variable y almacenar el valor resultante en una sola operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-104">The <xref:System.Threading.Interlocked.Increment%2A> and <xref:System.Threading.Interlocked.Decrement%2A> methods increment or decrement a variable and store the resulting value in a single operation.</span></span> <span data-ttu-id="ceb4e-105">En la mayoría de los equipos, el incremento de una variable no es una operación atómica, que requieren los pasos siguientes:</span><span class="sxs-lookup"><span data-stu-id="ceb4e-105">On most computers, incrementing a variable is not an atomic operation, requiring the following steps:</span></span>  
  
1.  <span data-ttu-id="ceb4e-106">Cargar un valor de una variable de instancia en un registro.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-106">Load a value from an instance variable into a register.</span></span>  
  
2.  <span data-ttu-id="ceb4e-107">Incrementar o disminuir el valor.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-107">Increment or decrement the value.</span></span>  
  
3.  <span data-ttu-id="ceb4e-108">Store el valor en la variable de instancia.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-108">Store the value in the instance variable.</span></span>  
  
 <span data-ttu-id="ceb4e-109">Si no usas <xref:System.Threading.Interlocked.Increment%2A> y <xref:System.Threading.Interlocked.Decrement%2A>, un subproceso puede ser adelantado después de ejecutar los dos primeros pasos.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-109">If you do not use <xref:System.Threading.Interlocked.Increment%2A> and <xref:System.Threading.Interlocked.Decrement%2A>, a thread can be preempted after executing the first two steps.</span></span> <span data-ttu-id="ceb4e-110">Otro subproceso, a continuación, puede ejecutar estos tres pasos.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-110">Another thread can then execute all three steps.</span></span> <span data-ttu-id="ceb4e-111">Cuando el primer subproceso reanuda la ejecución, sobrescribe el valor de la variable de instancia y se pierde el efecto del incremento o decremento realizadas por el segundo subproceso.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-111">When the first thread resumes execution, it overwrites the value in the instance variable, and the effect of the increment or decrement performed by the second thread is lost.</span></span>  

 <span data-ttu-id="ceb4e-112">El <xref:System.Threading.Interlocked.Add%2A> atómicamente, el método agrega un valor entero a una variable de entero y devuelve el nuevo valor de la variable.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-112">The <xref:System.Threading.Interlocked.Add%2A> method atomically adds an integer value to an integer variable and returns the new value of the variable.</span></span>  
  
 <span data-ttu-id="ceb4e-113">El <xref:System.Threading.Interlocked.Exchange%2A> método intercambia los valores de las variables especificadas atómicamente.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-113">The <xref:System.Threading.Interlocked.Exchange%2A> method atomically exchanges the values of the specified variables.</span></span> <span data-ttu-id="ceb4e-114">El <xref:System.Threading.Interlocked.CompareExchange%2A> método combina dos operaciones: compara dos valores y almacena un tercer valor en una de las variables, en función del resultado de la comparación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-114">The <xref:System.Threading.Interlocked.CompareExchange%2A> method combines two operations: comparing two values and storing a third value in one of the variables, based on the outcome of the comparison.</span></span> <span data-ttu-id="ceb4e-115">Las operaciones de comparación e intercambio se realizan como una operación atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-115">The compare and exchange operations are performed as an atomic operation.</span></span>  

 <span data-ttu-id="ceb4e-116">Asegúrese de que cualquier escritura o acceso de lectura a una variable compartida es atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-116">Ensure that any write or read access to a shared variable is atomic.</span></span> <span data-ttu-id="ceb4e-117">En caso contrario, los datos podrían estar dañados o valor cargado podría ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-117">Otherwise, the data might be corrupted or the loaded value might be incorrect.</span></span>    
   
  
## Examples  
 <span data-ttu-id="ceb4e-118">El ejemplo de código siguiente muestra un mecanismo de bloqueo de recursos seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-118">The following code example shows a thread-safe resource locking mechanism.</span></span>  
  
 [!code-cpp[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/CS/class1.cs#1)]
 [!code-vb[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ceb4e-119">Este tipo es seguro para la ejecución de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ceb4e-119">This type is thread safe.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/standard/threading/index.md">
      <span data-ttu-id="ceb4e-120">Subprocesamiento administrado</span>
      <span class="sxs-lookup">
        <span data-stu-id="ceb4e-120">Managed Threading</span>
      </span>
    </related>
    <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
      <span data-ttu-id="ceb4e-121">Información general sobre las primitivas de sincronización</span>
      <span class="sxs-lookup">
        <span data-stu-id="ceb4e-121">Overview of synchronization primitives</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ceb4e-122">Agrega dos enteros y reemplaza el primer entero por la suma, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-122">Adds two integers and replaces the first integer with the sum, as an atomic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static int Add (ref int location1, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Add(int32&amp; location1, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Add(System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (ByRef location1 As Integer, value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Add(int % location1, int value);" />
      <MemberSignature Language="F#" Value="static member Add :  * int -&gt; int" Usage="System.Threading.Interlocked.Add (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int32" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-123">Variable que contiene el primer valor que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-123">A variable containing the first value to be added.</span>
          </span>
          <span data-ttu-id="ceb4e-124">La suma de los dos valores se almacena en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-124">The sum of the two values is stored in <paramref name="location1" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-125">Valor que se va a agregar al entero en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-125">The value to be added to the integer at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-126">Agrega dos enteros de 32 bits y reemplaza el primer entero por la suma, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-126">Adds two 32-bit integers and replaces the first integer with the sum, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-127">Nuevo valor almacenado en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-127">The new value stored at <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-128">Este método controla una condición de desbordamiento mediante un ajuste: si el valor en `location1` es <xref:System.Int32.MaxValue?displayProperty=nameWithType> y `value` es 1, el resultado es <xref:System.Int32.MinValue?displayProperty=nameWithType>; si `value` es 2, el resultado es (<xref:System.Int32.MinValue?displayProperty=nameWithType> + 1); y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-128">This method handles an overflow condition by wrapping: if the value at `location1` is <xref:System.Int32.MaxValue?displayProperty=nameWithType> and `value` is 1, the result is <xref:System.Int32.MinValue?displayProperty=nameWithType>; if `value` is 2, the result is (<xref:System.Int32.MinValue?displayProperty=nameWithType> + 1); and so on.</span></span> <span data-ttu-id="ceb4e-129">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-129">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-130">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-130">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-131">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-131">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-132">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-132">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static long Add (ref long location1, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Add(int64&amp; location1, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Add(System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (ByRef location1 As Long, value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Add(long % location1, long value);" />
      <MemberSignature Language="F#" Value="static member Add :  * int64 -&gt; int64" Usage="System.Threading.Interlocked.Add (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int64" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-133">Variable que contiene el primer valor que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-133">A variable containing the first value to be added.</span>
          </span>
          <span data-ttu-id="ceb4e-134">La suma de los dos valores se almacena en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-134">The sum of the two values is stored in <paramref name="location1" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-135">Valor que se va a agregar al entero en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-135">The value to be added to the integer at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-136">Agrega dos enteros de 64 bits y reemplaza el primer entero por la suma, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-136">Adds two 64-bit integers and replaces the first integer with the sum, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-137">Nuevo valor almacenado en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-137">The new value stored at <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-138">Este método controla una condición de desbordamiento mediante un ajuste: si el valor en `location1` es <xref:System.Int64.MaxValue?displayProperty=nameWithType> y `value` es 1, el resultado es <xref:System.Int64.MinValue?displayProperty=nameWithType>; si `value` es 2, el resultado es (<xref:System.Int64.MinValue?displayProperty=nameWithType> + 1); y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-138">This method handles an overflow condition by wrapping: if the value at `location1` is <xref:System.Int64.MaxValue?displayProperty=nameWithType> and `value` is 1, the result is <xref:System.Int64.MinValue?displayProperty=nameWithType>; if `value` is 2, the result is (<xref:System.Int64.MinValue?displayProperty=nameWithType> + 1); and so on.</span></span> <span data-ttu-id="ceb4e-139">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-139">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-140">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-140">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Threading.Interlocked.Increment" />
        <altmember cref="Overload:System.Threading.Interlocked.Decrement" />
        <altmember cref="M:System.Threading.Interlocked.Read(System.Int64@)" />
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-141">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-141">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-142">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-142">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareExchange">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ceb4e-143">Compara dos valores para comprobar si son iguales y, si lo son, reemplaza el primer valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-143">Compares two values for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static double CompareExchange (ref double location1, double value, double comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 CompareExchange(float64&amp; location1, float64 value, float64 comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Double@,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Double, value As Double, comparand As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double CompareExchange(double % location1, double value, double comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * double * double -&gt; double" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Double" RefType="ref" />
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="comparand" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-144">Destino, cuyo valor se compara con <paramref name="comparand" /> y que posiblemente se reemplace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-144">The destination, whose value is compared with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-145">Valor que reemplaza el valor de destino si la comparación da como resultado una igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-145">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="ceb4e-146">Valor que se compara con el valor que hay en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-146">The value that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-147">Compara dos números de punto flotante de precisión doble para comprobar si son iguales y, si lo son, reemplaza el primero de los valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-147">Compares two double-precision floating point numbers for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-148">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-148">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-149">Si `comparand` y el valor de `location1` son iguales, a continuación, `value` se almacena en `location1`.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-149">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="ceb4e-150">De lo contrario, no se realiza ninguna operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-150">Otherwise, no operation is performed.</span></span> <span data-ttu-id="ceb4e-151">Las operaciones de comparación e intercambio se realizan como una operación atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-151">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="ceb4e-152">El valor devuelto de <xref:System.Threading.Interlocked.CompareExchange%2A> es el valor original en `location1`, o no tenga lugar el intercambio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-152">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb4e-153">El código siguiente muestra un método seguro para subprocesos que se acumula un total de <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-153">The following code example demonstrates a thread-safe method that accumulates a running total of <xref:System.Double> values.</span></span> <span data-ttu-id="ceb4e-154">Dos subprocesos agregan una serie de <xref:System.Double> valores mediante el método de subprocesos y la suma ordinaria, y cuando los subprocesos se completan los totales se comparan.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-154">Two threads add a series of <xref:System.Double> values using the thread-safe method and ordinary addition, and when the threads complete the totals are compared.</span></span> <span data-ttu-id="ceb4e-155">En un equipo con procesador dual, hay una diferencia significativa en los totales.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-155">On a dual-processor computer, there is a significant difference in the totals.</span></span>  
  
 <span data-ttu-id="ceb4e-156">En el método seguro para subprocesos, se guarda el valor inicial del total acumulado y, a continuación, el <xref:System.Threading.Interlocked.CompareExchange%2A> método se utiliza para intercambiar el total calculado recientemente con el total anterior.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-156">In the thread-safe method, the initial value of the running total is saved, and then the <xref:System.Threading.Interlocked.CompareExchange%2A> method is used to exchange the newly computed total with the old total.</span></span> <span data-ttu-id="ceb4e-157">Si el valor devuelto no es igual que el valor guardado del total de ejecución, a continuación, otro subproceso ha actualizado el total durante el proceso.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-157">If the return value is not equal to the saved value of the running total, then another thread has updated the total in the meantime.</span></span> <span data-ttu-id="ceb4e-158">En ese caso, se debe repetir el intento de actualizar el total acumulado.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-158">In that case, the attempt to update the running total must be repeated.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked CompareExchange Double#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange Double/cs/source.cs#1)]
 [!code-vb[System.Threading.Interlocked CompareExchange Double#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange Double/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-159">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-159">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-160">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-160">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-161">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-161">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static int CompareExchange (ref int location1, int value, int comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareExchange(int32&amp; location1, int32 value, int32 comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Int32@,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Integer, value As Integer, comparand As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareExchange(int % location1, int value, int comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * int * int -&gt; int" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int32" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
        <Parameter Name="comparand" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-162">Destino, cuyo valor se compara con <paramref name="comparand" /> y que posiblemente se reemplace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-162">The destination, whose value is compared with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-163">Valor que reemplaza el valor de destino si la comparación da como resultado una igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-163">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="ceb4e-164">Valor que se compara con el valor que hay en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-164">The value that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-165">Compara dos enteros de 32 bits con signo para comprobar si son iguales y, si lo son, reemplaza el primer valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-165">Compares two 32-bit signed integers for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-166">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-166">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-167">Si `comparand` y el valor de `location1` son iguales, a continuación, `value` se almacena en `location1`.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-167">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="ceb4e-168">De lo contrario, no se realiza ninguna operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-168">Otherwise, no operation is performed.</span></span> <span data-ttu-id="ceb4e-169">Las operaciones de comparación e intercambio se realizan como una operación atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-169">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="ceb4e-170">El valor devuelto de <xref:System.Threading.Interlocked.CompareExchange%2A> es el valor original en `location1`, o no tenga lugar el intercambio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-170">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb4e-171">El ejemplo de código siguiente muestra un método seguro para subprocesos que se acumula un total acumulado.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-171">The following code example demonstrates a thread-safe method that accumulates a running total.</span></span> <span data-ttu-id="ceb4e-172">Se guarda el valor inicial del total acumulado y, a continuación, el <xref:System.Threading.Interlocked.CompareExchange%2A> método se utiliza para intercambiar el total calculado recientemente con el total anterior.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-172">The initial value of the running total is saved, and then the <xref:System.Threading.Interlocked.CompareExchange%2A> method is used to exchange the newly computed total with the old total.</span></span> <span data-ttu-id="ceb4e-173">Si el valor devuelto no es igual que el valor guardado del total de ejecución, a continuación, otro subproceso ha actualizado el total durante el proceso.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-173">If the return value is not equal to the saved value of the running total, then another thread has updated the total in the meantime.</span></span> <span data-ttu-id="ceb4e-174">En ese caso, se debe repetir el intento de actualizar el total acumulado.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-174">In that case, the attempt to update the running total must be repeated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb4e-175">El <xref:System.Threading.Interlocked.Add%2A> método, introducida en la versión 2.0 de .NET Framework, proporciona una manera más cómoda para acumular los totales acumulados de subprocesos para números enteros.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-175">The <xref:System.Threading.Interlocked.Add%2A> method, introduced in version 2.0 of the .NET Framework, provides a more convenient way to accumulate thread-safe running totals for integers.</span></span>  
  
 [!code-cpp[System.Threading.Interlocked CompareExchange0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Interlocked CompareExchange0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange0/CS/source.cs#1)]
 [!code-vb[System.Threading.Interlocked CompareExchange0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange0/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-176">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-176">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-177">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-177">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-178">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-178">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static long CompareExchange (ref long location1, long value, long comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 CompareExchange(int64&amp; location1, int64 value, int64 comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Int64@,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Long, value As Long, comparand As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long CompareExchange(long % location1, long value, long comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * int64 * int64 -&gt; int64" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int64" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
        <Parameter Name="comparand" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-179">Destino, cuyo valor se compara con <paramref name="comparand" /> y que posiblemente se reemplace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-179">The destination, whose value is compared with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-180">Valor que reemplaza el valor de destino si la comparación da como resultado una igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-180">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="ceb4e-181">Valor que se compara con el valor que hay en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-181">The value that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-182">Compara dos enteros de 64 bits con signo para comprobar si son iguales y, si lo son, reemplaza el primer valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-182">Compares two 64-bit signed integers for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-183">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-183">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-184">Si `comparand` y el valor de `location1` son iguales, a continuación, `value` se almacena en `location1`.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-184">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="ceb4e-185">De lo contrario, no se realiza ninguna operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-185">Otherwise, no operation is performed.</span></span> <span data-ttu-id="ceb4e-186">Las operaciones de comparación e intercambio se realizan como una operación atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-186">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="ceb4e-187">El valor devuelto de <xref:System.Threading.Interlocked.CompareExchange%2A> es el valor original en `location1`, o no tenga lugar el intercambio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-187">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-188">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-188">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-189">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-189">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-190">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-190">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static IntPtr CompareExchange (ref IntPtr location1, IntPtr value, IntPtr comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int CompareExchange(native int&amp; location1, native int value, native int comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.IntPtr@,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As IntPtr, value As IntPtr, comparand As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr CompareExchange(IntPtr % location1, IntPtr value, IntPtr comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * nativeint * nativeint -&gt; nativeint" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.IntPtr" RefType="ref" />
        <Parameter Name="value" Type="System.IntPtr" />
        <Parameter Name="comparand" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-191">Estructura <see cref="T:System.IntPtr" /> de destino, cuyo valor se compara con el valor de <paramref name="comparand" /> y que posiblemente se reemplace por <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-191">The destination <see cref="T:System.IntPtr" />, whose value is compared with the value of <paramref name="comparand" /> and possibly replaced by <paramref name="value" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-192">Estructura <see cref="T:System.IntPtr" /> que reemplaza el valor de destino si la comparación da como resultado una igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-192">The <see cref="T:System.IntPtr" /> that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="ceb4e-193">Estructura <see cref="T:System.IntPtr" /> que se compara con el valor que hay en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-193">The <see cref="T:System.IntPtr" /> that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-194">Compara dos identificadores o punteros específicos de plataforma para comprobar si son iguales y, si lo son, reemplaza el primero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-194">Compares two platform-specific handles or pointers for equality and, if they are equal, replaces the first one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-195">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-195">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-196">Si `comparand` y el valor de `location1` son iguales, a continuación, `value` se almacena en `location1`.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-196">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="ceb4e-197">De lo contrario, no se realiza ninguna operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-197">Otherwise, no operation is performed.</span></span> <span data-ttu-id="ceb4e-198">Las operaciones de comparación e intercambio se realizan como una operación atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-198">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="ceb4e-199">El valor devuelto de este método es el valor original en `location1`, o no tenga lugar el intercambio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-199">The return value of this method is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb4e-200"><xref:System.IntPtr> es un tipo específico de la plataforma.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-200"><xref:System.IntPtr> is a platform-specific type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-201">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-201">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-202">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-202">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-203">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-203">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static object CompareExchange (ref object location1, object value, object comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object CompareExchange(object&amp; location1, object value, object comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Object@,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Object, value As Object, comparand As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ CompareExchange(System::Object ^ % location1, System::Object ^ value, System::Object ^ comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * obj * obj -&gt; obj" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Object" RefType="ref" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparand" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-204">Objeto de destino que se compara por referencia con <paramref name="comparand" /> y que posiblemente se reemplace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-204">The destination object that is compared by reference with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-205">Objeto que reemplaza el objeto de destino si la comparación de referencia da como resultado la igualdad de ambos parámetros.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-205">The object that replaces the destination object if the reference comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="ceb4e-206">Objeto que se compara por referencia con el objeto que hay en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-206">The object that is compared by reference to the object at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-207">Compara dos objetos para comprobar si sus referencias son iguales y, si lo son, reemplaza el primero de los objetos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-207">Compares two objects for reference equality and, if they are equal, replaces the first object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-208">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-208">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
> <span data-ttu-id="ceb4e-209">A partir de .NET Framework 2.0, el <xref:System.Threading.Interlocked.CompareExchange%60%601%28%60%600%40%2C%60%600%2C%60%600%29> sobrecarga del método proporciona una alternativa de seguridad de tipos para tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-209">Beginning with .NET Framework 2.0, the <xref:System.Threading.Interlocked.CompareExchange%60%601%28%60%600%40%2C%60%600%2C%60%600%29> method overload provides a type-safe alternative for reference types.</span></span> <span data-ttu-id="ceb4e-210">Se recomienda llamarlo en lugar de esta sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-210">We recommend that you call it instead of this overload.</span></span>

<span data-ttu-id="ceb4e-211">Si `comparand` y el objeto en `location1` son iguales por referencia y, a continuación, `value` se almacena en `location1`.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-211">If `comparand` and the object in `location1` are equal by reference, then `value` is stored in `location1`.</span></span> <span data-ttu-id="ceb4e-212">De lo contrario, no se realiza ninguna operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-212">Otherwise, no operation is performed.</span></span> <span data-ttu-id="ceb4e-213">Las operaciones de comparación e intercambio se realizan como una operación atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-213">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="ceb4e-214">El valor devuelto de <xref:System.Threading.Interlocked.CompareExchange%2A> es el valor original en `location1`, o no tenga lugar el intercambio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-214">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  

> [!NOTE]
>  <span data-ttu-id="ceb4e-215">Los objetos se comparan la igualdad de referencia en lugar de la igualdad de valores.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-215">The objects are compared for reference equality rather than value equality.</span></span> <span data-ttu-id="ceb4e-216">Como resultado, dos instancias de conversión boxing del mismo tipo de valor (por ejemplo, el valor entero 3) siempre parecen ser iguales y se realiza ninguna operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-216">As a result, two boxed instances of the same value type (for example, the integer 3) always appear to be unequal and no operation is performed.</span></span> <span data-ttu-id="ceb4e-217">No utilice esta sobrecarga con tipos de valor.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-217">Do not use this overload with value types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceb4e-218">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-218">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-219">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-219">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-220">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-220">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange">
      <MemberSignature Language="C#" Value="public static float CompareExchange (ref float location1, float value, float comparand);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 CompareExchange(float32&amp; location1, float32 value, float32 comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange(System.Single@,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange (ByRef location1 As Single, value As Single, comparand As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float CompareExchange(float % location1, float value, float comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * single * single -&gt; single" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Single" RefType="ref" />
        <Parameter Name="value" Type="System.Single" />
        <Parameter Name="comparand" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-221">Destino, cuyo valor se compara con <paramref name="comparand" /> y que posiblemente se reemplace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-221">The destination, whose value is compared with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-222">Valor que reemplaza el valor de destino si la comparación da como resultado una igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-222">The value that replaces the destination value if the comparison results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="ceb4e-223">Valor que se compara con el valor que hay en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-223">The value that is compared to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-224">Compara dos números de punto flotante de precisión sencilla para comprobar si son iguales y, si lo son, reemplaza el primero de los valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-224">Compares two single-precision floating point numbers for equality and, if they are equal, replaces the first value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-225">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-225">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-226">Si `comparand` y el valor de `location1` son iguales, a continuación, `value` se almacena en `location1`.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-226">If `comparand` and the value in `location1` are equal, then `value` is stored in `location1`.</span></span> <span data-ttu-id="ceb4e-227">De lo contrario, no se realiza ninguna operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-227">Otherwise, no operation is performed.</span></span> <span data-ttu-id="ceb4e-228">Las operaciones de comparación e intercambio se realizan como una operación atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-228">The compare and exchange operations are performed as an atomic operation.</span></span> <span data-ttu-id="ceb4e-229">El valor devuelto de <xref:System.Threading.Interlocked.CompareExchange%2A> es el valor original en `location1`, o no tenga lugar el intercambio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-229">The return value of <xref:System.Threading.Interlocked.CompareExchange%2A> is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb4e-230">El código siguiente muestra un método seguro para subprocesos que se acumula un total de <xref:System.Single> valores.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-230">The following code example demonstrates a thread-safe method that accumulates a running total of <xref:System.Single> values.</span></span> <span data-ttu-id="ceb4e-231">Dos subprocesos agregan una serie de <xref:System.Single> valores mediante el método de subprocesos y la suma ordinaria, y cuando los subprocesos se completan los totales se comparan.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-231">Two threads add a series of <xref:System.Single> values using the thread-safe method and ordinary addition, and when the threads complete the totals are compared.</span></span> <span data-ttu-id="ceb4e-232">En un equipo con procesador dual, hay una diferencia significativa en los totales.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-232">On a dual-processor computer, there is a significant difference in the totals.</span></span>  
  
 <span data-ttu-id="ceb4e-233">En el método seguro para subprocesos, se guarda el valor inicial del total acumulado y, a continuación, el <xref:System.Threading.Interlocked.CompareExchange%2A> método se utiliza para intercambiar el total calculado recientemente con el total anterior.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-233">In the thread-safe method, the initial value of the running total is saved, and then the <xref:System.Threading.Interlocked.CompareExchange%2A> method is used to exchange the newly computed total with the old total.</span></span> <span data-ttu-id="ceb4e-234">Si el valor devuelto no es igual que el valor guardado del total de ejecución, a continuación, otro subproceso ha actualizado el total durante el proceso.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-234">If the return value is not equal to the saved value of the running total, then another thread has updated the total in the meantime.</span></span> <span data-ttu-id="ceb4e-235">En ese caso, se debe repetir el intento de actualizar el total acumulado.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-235">In that case, the attempt to update the running total must be repeated.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked CompareExchange Single#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange Single/cs/source.cs#1)]
 [!code-vb[System.Threading.Interlocked CompareExchange Single#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked CompareExchange Single/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-236">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-236">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-237">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-237">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-238">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-238">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CompareExchange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T CompareExchange&lt;T&gt; (ref T location1, T value, T comparand) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T CompareExchange&lt;class T&gt;(!!T&amp; location1, !!T value, !!T comparand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.CompareExchange``1(``0@,``0,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareExchange(Of T As Class) (ByRef location1 As T, value As T, comparand As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T CompareExchange(T % location1, T value, T comparand);" />
      <MemberSignature Language="F#" Value="static member CompareExchange :  * 'T * 'T -&gt; 'T (requires 'T : null)" Usage="System.Threading.Interlocked.CompareExchange (location1, value, comparand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location1" Type="T" RefType="ref" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparand" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ceb4e-239">Tipo que se va a utilizar para <paramref name="location1" />, <paramref name="value" /> y <paramref name="comparand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-239">The type to be used for <paramref name="location1" />, <paramref name="value" />, and <paramref name="comparand" />.</span>
          </span>
          <span data-ttu-id="ceb4e-240">Este tipo debe ser un tipo de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-240">This type must be a reference type.</span>
          </span>
        </typeparam>
        <param name="location1">
          <span data-ttu-id="ceb4e-241">Destino cuyo valor se compara por referencia con <paramref name="comparand" /> y que posiblemente se reemplace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-241">The destination, whose value is compared by reference with <paramref name="comparand" /> and possibly replaced.</span>
          </span>
          <span data-ttu-id="ceb4e-242">Este es un parámetro de referencia (<see langword="ref" /> en C#, <see langword="ByRef" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-242">This is a reference parameter (<see langword="ref" /> in C#, <see langword="ByRef" /> in Visual Basic).</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-243">Valor que reemplaza el valor de destino si la comparación por referencia da como resultado una igualdad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-243">The value that replaces the destination value if the comparison by reference results in equality.</span>
          </span>
        </param>
        <param name="comparand">
          <span data-ttu-id="ceb4e-244">Valor que se compara por referencia con el que hay en <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-244">The value that is compared by reference to the value at <paramref name="location1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-245">Compara dos instancias del tipo de referencia especificado <paramref name="T" /> para comprobar si las referencias son iguales y, si lo son, reemplaza la primera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-245">Compares two instances of the specified reference type <paramref name="T" /> for reference equality and, if they are equal, replaces the first one.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-246">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-246">The original value in <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-247">Si `comparand` y el valor de `location1` son iguales por referencia y, a continuación, `value` se almacena en `location1`.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-247">If `comparand` and the value in `location1` are equal by reference, then `value` is stored in `location1`.</span></span> <span data-ttu-id="ceb4e-248">De lo contrario, no se realiza ninguna operación.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-248">Otherwise, no operation is performed.</span></span> <span data-ttu-id="ceb4e-249">La comparación y el intercambio se realizan como una operación atómica.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-249">The comparison and the exchange are performed as an atomic operation.</span></span> <span data-ttu-id="ceb4e-250">El valor devuelto de este método es el valor original en `location1`, o no tenga lugar el intercambio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-250">The return value of this method is the original value in `location1`, whether or not the exchange takes place.</span></span>  
  
 <span data-ttu-id="ceb4e-251">Este método solo admite tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-251">This method only supports reference types.</span></span> <span data-ttu-id="ceb4e-252">Hay sobrecargas de los <xref:System.Threading.Interlocked.CompareExchange%2A> método para los tipos de valor <xref:System.Int32>, <xref:System.Int64>, <xref:System.IntPtr>, <xref:System.Single>, y <xref:System.Double>, pero no hay ninguna compatibilidad con otros tipos de valor.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-252">There are overloads of the <xref:System.Threading.Interlocked.CompareExchange%2A> method for the value types <xref:System.Int32>, <xref:System.Int64>, <xref:System.IntPtr>, <xref:System.Single>, and <xref:System.Double>, but there is no support for other value types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb4e-253">Esta sobrecarga del método es preferible el <xref:System.Threading.Interlocked.CompareExchange%28System.Object%40%2CSystem.Object%2CSystem.Object%29> sobrecarga del método, porque el último requiere el objeto de destino para tener acceso en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-253">This method overload is preferable to the <xref:System.Threading.Interlocked.CompareExchange%28System.Object%40%2CSystem.Object%2CSystem.Object%29> method overload, because the latter requires the destination object to be accessed late-bound.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-254">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-254">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Decrement">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ceb4e-255">Disminuye el valor de una variable especificada y almacena el resultado, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-255">Decrements a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static int Decrement (ref int location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Decrement(int32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Decrement(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrement (ByRef location As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Decrement(int % location);" />
      <MemberSignature Language="F#" Value="static member Decrement :  -&gt; int" Usage="System.Threading.Interlocked.Decrement location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="ceb4e-256">Variable cuyo valor se va a reducir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-256">The variable whose value is to be decremented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-257">Disminuye el valor de una variable especificada y almacena el resultado, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-257">Decrements a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-258">Valor reducido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-258">The decremented value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-259">Este método controla una condición de desbordamiento mediante un ajuste: si `location`  =  <xref:System.Int32.MinValue?displayProperty=nameWithType>, `location` - 1 = <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-259">This method handles an overflow condition by wrapping: If `location` = <xref:System.Int32.MinValue?displayProperty=nameWithType>, `location` - 1 = <xref:System.Int32.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ceb4e-260">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-260">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb4e-261">El ejemplo siguiente determina cuántos números aleatorios comprendidos entre 0 y 1000 son necesarias para generar números aleatorios 1.000 con un valor de punto medio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-261">The following example determines how many random numbers that range from 0 to 1,000 are required to generate 1,000 random numbers with a midpoint value.</span></span> <span data-ttu-id="ceb4e-262">Para mantener el seguimiento del número de valores de punto medio, una variable, `midpointCount`, es establecer iguales a 1.000 y disminuye cada vez que el generador de números aleatorios devuelve un valor de punto medio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-262">To keep track of the number of midpoint values, a variable, `midpointCount`, is set equal to 1,000 and decremented each time the random number generator returns a midpoint value.</span></span> <span data-ttu-id="ceb4e-263">Dado que tres subprocesos generan los números aleatorios, la <xref:System.Threading.Interlocked.Decrement%28System.Int32%40%29> método se llama para garantizar que varios subprocesos no se actualicen `midpointCount` simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-263">Because three threads generate the random numbers, the <xref:System.Threading.Interlocked.Decrement%28System.Int32%40%29> method is called to ensure that multiple threads don't update `midpointCount` concurrently.</span></span> <span data-ttu-id="ceb4e-264">Tenga en cuenta que un bloqueo también se usa para proteger el generador de números aleatorios y que un <xref:System.Threading.CountdownEvent> objeto sirve para asegurarse de que el `Main` método no finaliza la ejecución antes de los tres subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-264">Note that a lock is also used to protect the random number generator, and that a <xref:System.Threading.CountdownEvent> object is used to ensure that the `Main` method doesn't finish execution before the three threads.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked.Decrement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.interlocked.decrement/cs/decrement1.cs#1)]
 [!code-vb[System.Threading.Interlocked.Decrement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.interlocked.decrement/vb/decrement1.vb#1)]  
  
 <span data-ttu-id="ceb4e-265">El ejemplo siguiente es similar al anterior, salvo que usa el <xref:System.Threading.Tasks.Task> clase en lugar de un procedimiento de subproceso para generar 50 000 enteros aleatorios de punto medio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-265">The following example is similar to the previous one, except that it uses the <xref:System.Threading.Tasks.Task> class instead of a thread procedure to generate 50,000 random midpoint integers.</span></span> <span data-ttu-id="ceb4e-266">En este ejemplo, una expresión lambda reemplaza el `GenerateNumbers` procedimiento de subproceso y la llamada a la <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> método elimina la necesidad de la <xref:System.Threading.CountdownEvent> objeto.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-266">In this example, a lambda expression replaces the `GenerateNumbers` thread procedure, and the call to the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method eliminates the need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked.Decrement#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.interlocked.decrement/cs/decrement2.cs#2)]
 [!code-vb[System.Threading.Interlocked.Decrement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.interlocked.decrement/vb/decrement2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceb4e-267">La dirección de <paramref name="location" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-267">The address of <paramref name="location" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-268">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-268">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-269">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-269">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Decrement">
      <MemberSignature Language="C#" Value="public static long Decrement (ref long location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Decrement(int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Decrement(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrement (ByRef location As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Decrement(long % location);" />
      <MemberSignature Language="F#" Value="static member Decrement :  -&gt; int64" Usage="System.Threading.Interlocked.Decrement location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="ceb4e-270">Variable cuyo valor se va a reducir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-270">The variable whose value is to be decremented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-271">Disminuye el valor de la variable especificada y almacena el resultado, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-271">Decrements the specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-272">Valor reducido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-272">The decremented value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-273">Este método controla una condición de desbordamiento mediante un ajuste: si `location`  =  <xref:System.Int64.MinValue?displayProperty=nameWithType>, `location` - 1 = <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-273">This method handles an overflow condition by wrapping: if `location` = <xref:System.Int64.MinValue?displayProperty=nameWithType>, `location` - 1 = <xref:System.Int64.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ceb4e-274">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-274">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceb4e-275">La dirección de <paramref name="location" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-275">The address of <paramref name="location" /> is a null pointer.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Threading.Interlocked.Increment" />
        <altmember cref="Overload:System.Threading.Interlocked.Add" />
        <altmember cref="M:System.Threading.Interlocked.Read(System.Int64@)" />
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-276">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-276">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-277">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-277">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exchange">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ceb4e-278">Establece una variable en un valor especificado como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-278">Sets a variable to a specified value as an atomic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static double Exchange (ref double location1, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Exchange(float64&amp; location1, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Double@,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Double, value As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Exchange(double % location1, double value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * double -&gt; double" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Double" RefType="ref" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-279">Variable que se va a establecer en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-279">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-280">Valor en el que está establecido el parámetro <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-280">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-281">Establece un número de punto flotante de precisión doble en un valor especificado y devuelve el valor original, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-281">Sets a double-precision floating point number to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-282">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-282">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-283">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-283">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-284">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-284">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-285">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-285">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static int Exchange (ref int location1, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Exchange(int32&amp; location1, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Int32@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Integer, value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Exchange(int % location1, int value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * int -&gt; int" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int32" RefType="ref" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-286">Variable que se va a establecer en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-286">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-287">Valor en el que está establecido el parámetro <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-287">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-288">Establece un entero de 32 bits con signo en un valor especificado y devuelve el valor original, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-288">Sets a 32-bit signed integer to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-289">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-289">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ceb4e-290">El ejemplo de código siguiente muestra un mecanismo de bloqueo de recursos seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-290">The following code example shows a thread-safe resource locking mechanism.</span></span>  
  
 [!code-cpp[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/CPP/class1.cpp#1)]
 [!code-csharp[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/CS/class1.cs#1)]
 [!code-vb[System.Threading.Interlocked.Exchange Int32 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Interlocked.Exchange Int32 Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceb4e-291">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-291">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-292">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-292">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-293">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-293">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static long Exchange (ref long location1, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Exchange(int64&amp; location1, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Int64@,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Long, value As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Exchange(long % location1, long value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * int64 -&gt; int64" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Int64" RefType="ref" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-294">Variable que se va a establecer en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-294">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-295">Valor en el que está establecido el parámetro <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-295">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-296">Establece un entero de 64 bits con signo en un valor especificado y devuelve el valor original, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-296">Sets a 64-bit signed integer to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-297">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-297">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-298">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-298">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-299">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-299">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-300">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-300">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static IntPtr Exchange (ref IntPtr location1, IntPtr value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int Exchange(native int&amp; location1, native int value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.IntPtr@,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As IntPtr, value As IntPtr) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr Exchange(IntPtr % location1, IntPtr value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * nativeint -&gt; nativeint" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.IntPtr" RefType="ref" />
        <Parameter Name="value" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-301">Variable que se va a establecer en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-301">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-302">Valor en el que está establecido el parámetro <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-302">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-303">Establece un puntero o identificador específico de plataforma en un valor especificado y devuelve el valor original, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-303">Sets a platform-specific handle or pointer to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-304">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-304">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-305">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-305">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-306">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-306">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-307">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-307">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static object Exchange (ref object location1, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Exchange(object&amp; location1, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Object@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Object, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Exchange(System::Object ^ % location1, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * obj -&gt; obj" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Object" RefType="ref" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-308">Variable que se va a establecer en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-308">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-309">Valor en el que está establecido el parámetro <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-309">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-310">Establece un objeto en un valor especificado y devuelve una referencia al objeto original, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-310">Sets an object to a specified value and returns a reference to the original object, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-311">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-311">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

> [!IMPORTANT]
> <span data-ttu-id="ceb4e-312">A partir de .NET Framework 2.0, el <xref:System.Threading.Interlocked.Exchange%60%601%28%60%600%40%2C%60%600%29> sobrecarga del método proporciona una alternativa de seguridad de tipos para tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-312">Beginning with .NET Framework 2.0, the <xref:System.Threading.Interlocked.Exchange%60%601%28%60%600%40%2C%60%600%29> method overload provides a type-safe alternative for reference types.</span></span> <span data-ttu-id="ceb4e-313">Se recomienda llamarlo en lugar de esta sobrecarga.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-313">We recommend that you call it instead of this overload.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ceb4e-314">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-314">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-315">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-315">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-316">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-316">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange">
      <MemberSignature Language="C#" Value="public static float Exchange (ref float location1, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 Exchange(float32&amp; location1, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange(System.Single@,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange (ByRef location1 As Single, value As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float Exchange(float % location1, float value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * single -&gt; single" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location1" Type="System.Single" RefType="ref" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="location1">
          <span data-ttu-id="ceb4e-317">Variable que se va a establecer en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-317">The variable to set to the specified value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-318">Valor en el que está establecido el parámetro <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-318">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-319">Establece un número de punto flotante de precisión sencilla en un valor especificado y devuelve el valor original, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-319">Sets a single-precision floating point number to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-320">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-320">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-321">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-321">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-322">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-322">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-323">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-323">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Exchange&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Exchange&lt;T&gt; (ref T location1, T value) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Exchange&lt;class T&gt;(!!T&amp; location1, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Exchange``1(``0@,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exchange(Of T As Class) (ByRef location1 As T, value As T) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class static T Exchange(T % location1, T value);" />
      <MemberSignature Language="F#" Value="static member Exchange :  * 'T -&gt; 'T (requires 'T : null)" Usage="System.Threading.Interlocked.Exchange (location1, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="location1" Type="T" RefType="ref" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="ceb4e-324">Tipo que se va a usar para <paramref name="location1" /> y <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-324">The type to be used for <paramref name="location1" /> and <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="ceb4e-325">Este tipo debe ser un tipo de referencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-325">This type must be a reference type.</span>
          </span>
        </typeparam>
        <param name="location1">
          <span data-ttu-id="ceb4e-326">Variable que se va a establecer en el valor especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-326">The variable to set to the specified value.</span>
          </span>
          <span data-ttu-id="ceb4e-327">Este es un parámetro de referencia (<see langword="ref" /> en C#, <see langword="ByRef" /> en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-327">This is a reference parameter (<see langword="ref" /> in C#, <see langword="ByRef" /> in Visual Basic).</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ceb4e-328">Valor en el que está establecido el parámetro <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-328">The value to which the <paramref name="location1" /> parameter is set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-329">Establece una variable del tipo <paramref name="T" /> especificado en un valor determinado y devuelve el valor original, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-329">Sets a variable of the specified type <paramref name="T" /> to a specified value and returns the original value, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-330">Valor original de <paramref name="location1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-330">The original value of <paramref name="location1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-331">Este método solo admite tipos de referencia.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-331">This method only supports reference types.</span></span> <span data-ttu-id="ceb4e-332">Hay sobrecargas de los <xref:System.Threading.Interlocked.Exchange%2A> método para el <xref:System.Int32>, <xref:System.Int64>, <xref:System.IntPtr>, <xref:System.Single>, y <xref:System.Double> los tipos de valor, pero no hay ninguna compatibilidad con otros tipos de valor.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-332">There are overloads of the <xref:System.Threading.Interlocked.Exchange%2A> method for the <xref:System.Int32>, <xref:System.Int64>, <xref:System.IntPtr>, <xref:System.Single>, and <xref:System.Double> value types, but there is no support for other value types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ceb4e-333">Esta sobrecarga del método es preferible el <xref:System.Threading.Interlocked.Exchange%28System.Object%40%2CSystem.Object%29> sobrecarga del método, porque el último requiere acceso enlazado en tiempo de ejecución para el objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-333">This method overload is preferable to the <xref:System.Threading.Interlocked.Exchange%28System.Object%40%2CSystem.Object%29> method overload, because the latter requires late-bound access to the destination object .</span></span>  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-334">La dirección de <paramref name="location1" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-334">The address of <paramref name="location1" /> is a null pointer.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Increment">
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ceb4e-335">Aumenta el valor de una variable especificada y almacena el resultado, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-335">Increments a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static int Increment (ref int location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Increment(int32&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Increment(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Increment (ByRef location As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Increment(int % location);" />
      <MemberSignature Language="F#" Value="static member Increment :  -&gt; int" Usage="System.Threading.Interlocked.Increment location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="ceb4e-336">Variable cuyo valor se va a incrementar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-336">The variable whose value is to be incremented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-337">Aumenta el valor de una variable especificada y almacena el resultado, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-337">Increments a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-338">Valor incrementado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-338">The incremented value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-339">Este método controla una condición de desbordamiento mediante un ajuste: si `location`  =  <xref:System.Int32.MaxValue?displayProperty=nameWithType>, `location` + 1 = <xref:System.Int32.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-339">This method handles an overflow condition by wrapping: if `location` = <xref:System.Int32.MaxValue?displayProperty=nameWithType>, `location` + 1 = <xref:System.Int32.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ceb4e-340">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-340">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ceb4e-341">El ejemplo siguiente determina cuántos números aleatorios comprendidos entre 0 y 1000 son necesarias para generar números aleatorios 1.000 con un valor de punto medio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-341">The following example determines how many random numbers that range from 0 to 1,000 are required to generate 1,000 random numbers with a midpoint value.</span></span> <span data-ttu-id="ceb4e-342">Para mantener el seguimiento del número de valores de punto medio, una variable, `midpointCount`, es igual a 0 y se incrementa cada vez que el generador de números aleatorios devuelve un valor de punto medio hasta que llega a 10.000.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-342">To keep track of the number of midpoint values, a variable, `midpointCount`, is set equal to 0 and incremented each time the random number generator returns a midpoint value until it reaches 10,000.</span></span> <span data-ttu-id="ceb4e-343">Dado que tres subprocesos generan los números aleatorios, la <xref:System.Threading.Interlocked.Increment%28System.Int32%40%29> método se llama para garantizar que varios subprocesos no se actualicen `midpointCount` simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-343">Because three threads generate the random numbers, the <xref:System.Threading.Interlocked.Increment%28System.Int32%40%29> method is called to ensure that multiple threads don't update `midpointCount` concurrently.</span></span> <span data-ttu-id="ceb4e-344">Tenga en cuenta que un bloqueo también se usa para proteger el generador de números aleatorios y que un <xref:System.Threading.CountdownEvent> objeto sirve para asegurarse de que el `Main` método no finaliza la ejecución antes de los tres subprocesos.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-344">Note that a lock is also used to protect the random number generator, and that a <xref:System.Threading.CountdownEvent> object is used to ensure that the `Main` method doesn't finish execution before the three threads.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked.Increment2#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.interlocked.increment2/cs/increment3.cs#3)]
 [!code-vb[System.Threading.Interlocked.Increment2#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.interlocked.increment2/vb/Increment3.vb#3)]  
  
 <span data-ttu-id="ceb4e-345">El ejemplo siguiente es similar al anterior, salvo que usa el <xref:System.Threading.Tasks.Task> clase en lugar de un procedimiento de subproceso para generar 50 000 enteros aleatorios de punto medio.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-345">The following example is similar to the previous one, except that it uses the <xref:System.Threading.Tasks.Task> class instead of a thread procedure to generate 50,000 random midpoint integers.</span></span> <span data-ttu-id="ceb4e-346">En este ejemplo, una expresión lambda reemplaza el `GenerateNumbers` procedimiento de subproceso y la llamada a la <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> método elimina la necesidad de la <xref:System.Threading.CountdownEvent> objeto.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-346">In this example, a lambda expression replaces the `GenerateNumbers` thread procedure, and the call to the <xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=nameWithType> method eliminates the need for the <xref:System.Threading.CountdownEvent> object.</span></span>  
  
 [!code-csharp[System.Threading.Interlocked.Increment2#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.threading.interlocked.increment2/cs/increment4.cs#4)]
 [!code-vb[System.Threading.Interlocked.Increment2#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.threading.interlocked.increment2/vb/Increment4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-347">La dirección de <paramref name="location" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-347">The address of <paramref name="location" /> is a null pointer.</span>
          </span>
        </exception>
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-348">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-348">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-349">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-349">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Increment">
      <MemberSignature Language="C#" Value="public static long Increment (ref long location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Increment(int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Increment(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Increment (ByRef location As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Increment(long % location);" />
      <MemberSignature Language="F#" Value="static member Increment :  -&gt; int64" Usage="System.Threading.Interlocked.Increment location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="ceb4e-350">Variable cuyo valor se va a incrementar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-350">The variable whose value is to be incremented.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-351">Aumenta el valor de una variable especificada y almacena el resultado, como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-351">Increments a specified variable and stores the result, as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-352">Valor incrementado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-352">The incremented value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-353">Este método controla una condición de desbordamiento mediante un ajuste: si `location`  =  <xref:System.Int64.MaxValue?displayProperty=nameWithType>, `location` + 1 = <xref:System.Int64.MinValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-353">This method handles an overflow condition by wrapping: if `location` = <xref:System.Int64.MaxValue?displayProperty=nameWithType>, `location` + 1 = <xref:System.Int64.MinValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ceb4e-354">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-354">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="ceb4e-355">La dirección de <paramref name="location" /> es un puntero nulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-355">The address of <paramref name="location" /> is a null pointer.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Threading.Interlocked.Decrement" />
        <altmember cref="Overload:System.Threading.Interlocked.Add" />
        <altmember cref="M:System.Threading.Interlocked.Read(System.Int64@)" />
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-356">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-356">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-357">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-357">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="MemoryBarrier">
      <MemberSignature Language="C#" Value="public static void MemoryBarrier ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryBarrier() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.MemoryBarrier" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MemoryBarrier ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryBarrier();" />
      <MemberSignature Language="F#" Value="static member MemoryBarrier : unit -&gt; unit" Usage="System.Threading.Interlocked.MemoryBarrier " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ceb4e-358">Sincroniza el acceso a la memoria de la siguiente forma: el procesador que ejecuta el subproceso actual no puede reordenar instrucciones de forma que los accesos a la memoria anteriores a la llamada a <see cref="M:System.Threading.Interlocked.MemoryBarrier" /> se ejecuten después de los accesos a memoria que siguen a la llamada a <see cref="M:System.Threading.Interlocked.MemoryBarrier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-358">Synchronizes memory access as follows: The processor that executes the current thread cannot reorder instructions in such a way that memory accesses before the call to <see cref="M:System.Threading.Interlocked.MemoryBarrier" /> execute after memory accesses that follow the call to <see cref="M:System.Threading.Interlocked.MemoryBarrier" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-359">Este método se agregó a la <xref:System.Threading.Interlocked> clase en el [!INCLUDE[net_v45](~/includes/net-v45-md.md)] como una comodidad; es un contenedor para el <xref:System.Threading.Thread.MemoryBarrier%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-359">This method was added to the <xref:System.Threading.Interlocked> class in the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] as a convenience; it's a wrapper for the <xref:System.Threading.Thread.MemoryBarrier%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ceb4e-360"><xref:System.Threading.Interlocked.MemoryBarrier%2A> solo es necesario en sistemas con varios procesadores que tienen una ordenación de memoria débil (por ejemplo, un sistema que emplea varios procesadores Intel Itanium).</span><span class="sxs-lookup"><span data-stu-id="ceb4e-360"><xref:System.Threading.Interlocked.MemoryBarrier%2A> is required only on multiprocessor systems that have weak memory ordering (for example, a system that employs multiple Intel Itanium processors).</span></span>  
  
 <span data-ttu-id="ceb4e-361">Para la mayoría de los casos, C# `lock` instrucción, Visual Basic `SyncLock` instrucción, o la <xref:System.Threading.Monitor> clase proporcionan formas sencillas para sincronizar los datos.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-361">For most purposes, the C# `lock` statement, the Visual Basic `SyncLock` statement, or the <xref:System.Threading.Monitor> class provide easier ways to synchronize data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryBarrierProcessWide">
      <MemberSignature Language="C#" Value="public static void MemoryBarrierProcessWide ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MemoryBarrierProcessWide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.MemoryBarrierProcessWide" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub MemoryBarrierProcessWide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MemoryBarrierProcessWide();" />
      <MemberSignature Language="F#" Value="static member MemoryBarrierProcessWide : unit -&gt; unit" Usage="System.Threading.Interlocked.MemoryBarrierProcessWide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public static long Read (ref long location);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Read(int64&amp; location) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Interlocked.Read(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Read (ByRef location As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Read(long % location);" />
      <MemberSignature Language="F#" Value="static member Read :  -&gt; int64" Usage="System.Threading.Interlocked.Read location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int64" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="ceb4e-362">Valor de 64 bits que se va a cargar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-362">The 64-bit value to be loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ceb4e-363">Devuelve un valor de 64 bits, cargado como una operación atómica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-363">Returns a 64-bit value, loaded as an atomic operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ceb4e-364">Valor cargado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-364">The loaded value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ceb4e-365">El <xref:System.Threading.Interlocked.Read%2A> método no es necesario en sistemas de 64 bits, ya que las operaciones de lectura de 64 bits ya son atómicas.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-365">The <xref:System.Threading.Interlocked.Read%2A> method is unnecessary on 64-bit systems, because 64-bit read operations are already atomic.</span></span> <span data-ttu-id="ceb4e-366">En los sistemas de 32 bits, 64 bits, las operaciones de lectura no son atómicas a menos que se realiza mediante <xref:System.Threading.Interlocked.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="ceb4e-366">On 32-bit systems, 64-bit read operations are not atomic unless performed using <xref:System.Threading.Interlocked.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Threading.Interlocked.Increment" />
        <altmember cref="Overload:System.Threading.Interlocked.Decrement" />
        <altmember cref="Overload:System.Threading.Interlocked.Add" />
        <related type="Article" href="~/docs/standard/threading/index.md">
          <span data-ttu-id="ceb4e-367">Subprocesamiento administrado</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-367">Managed Threading</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/threading/overview-of-synchronization-primitives.md">
          <span data-ttu-id="ceb4e-368">Información general sobre las primitivas de sincronización</span>
          <span class="sxs-lookup">
            <span data-stu-id="ceb4e-368">Overview of synchronization primitives</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>
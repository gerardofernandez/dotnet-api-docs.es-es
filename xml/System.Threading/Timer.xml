<Type Name="Timer" FullName="System.Threading.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="49a9b90c29fb506f13fbc9ad9b14c101b5c74ccf" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014211" /></Metadata><TypeSignature Language="C#" Value="public sealed class Timer : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Timer extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Timer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Timer&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Timer</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-uwp-10.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b1ec7-101">Proporciona un mecanismo para ejecutar un método en un subproceso del grupo de subprocesos en intervalos especificados.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-101">Provides a mechanism for executing a method on a thread pool thread at specified intervals.</span></span> <span data-ttu-id="b1ec7-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-103">Use un <xref:System.Threading.TimerCallback> delegado para especificar el método que desee el <xref:System.Threading.Timer> para ejecutar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-103">Use a <xref:System.Threading.TimerCallback> delegate to specify the method you want the <xref:System.Threading.Timer> to execute.</span></span> <span data-ttu-id="b1ec7-104">La firma de la <xref:System.Threading.TimerCallback> delegado es:</span><span class="sxs-lookup"><span data-stu-id="b1ec7-104">The signature of the <xref:System.Threading.TimerCallback> delegate is:</span></span>  
  
```csharp  
void TimerCallback(Object state)  
```  
  
```cpp  
void TimerCallback(Object state)  
```  
  
```vb  
Sub TimerCallback(state As Object)  
```  
  
 <span data-ttu-id="b1ec7-105">El delegado de temporizador se especifica cuando se construye el temporizador y no se puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-105">The timer delegate is specified when the timer is constructed, and cannot be changed.</span></span> <span data-ttu-id="b1ec7-106">El método no se ejecuta en el subproceso que creó el temporizador; ejecuta en un <xref:System.Threading.ThreadPool> subproceso proporcionado por el sistema.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-106">The method does not execute on the thread that created the timer; it executes on a <xref:System.Threading.ThreadPool> thread supplied by the system.</span></span>  
  
> [!TIP]
> <span data-ttu-id="b1ec7-107">.NET incluye cuatro clases denominadas `Timer`, cada uno de los que ofrece una funcionalidad diferente:</span><span class="sxs-lookup"><span data-stu-id="b1ec7-107">.NET includes four classes named `Timer`, each of which offers different functionality:</span></span>  
>
> - <span data-ttu-id="b1ec7-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, que activa un evento y el código ejecuta en uno o más eventos receptores a intervalos regulares.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-108"><xref:System.Timers.Timer?displayProperty=nameWithType>, which fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="b1ec7-109">La clase está diseñada para usarla como basada en un servidor o componente del servicio en un entorno multiproceso; no tiene ninguna interfaz de usuario y no está visible en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-109">The class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="b1ec7-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, que ejecuta un método de devolución de llamada única en un subproceso de grupo a intervalos regulares.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-110"><xref:System.Threading.Timer?displayProperty=nameWithType>, which executes a single callback method on a thread pool thread at regular intervals.</span></span> <span data-ttu-id="b1ec7-111">Se define el método de devolución de llamada cuando el temporizador se crea una instancia y no se puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-111">The callback method is defined when the timer is instantiated and cannot be changed.</span></span> <span data-ttu-id="b1ec7-112">Al igual que el <xref:System.Timers.Timer?displayProperty=nameWithType> (clase), esta clase está pensada para su uso como un componente basado en servidor o servicio en un entorno multiproceso; no tiene ninguna interfaz de usuario y no está visible en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-112">Like the <xref:System.Timers.Timer?displayProperty=nameWithType> class, this class is intended for use as a server-based or service component in a multithreaded environment; it has no user interface and is not visible at runtime.</span></span>
> - <span data-ttu-id="b1ec7-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (Solo en .NET framework,) un componente de Windows Forms que se activa un evento y el código se ejecuta en uno o varios receptores de eventos a intervalos regulares.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-113"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> (.NET Framework only), a Windows Forms component that fires an event and executes the code in one or more event sinks at regular intervals.</span></span> <span data-ttu-id="b1ec7-114">El componente no tiene ninguna interfaz de usuario y está diseñado para su uso en un entorno de un solo subproceso; ejecuta en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-114">The component has no user interface and is designed for use in a single-threaded environment; it executes on the UI thread.</span></span>
> - <span data-ttu-id="b1ec7-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (Solo en .NET framework,) un componente de ASP.NET que realiza el postback de página web asincrónicas o sincrónicas a intervalos regulares.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-115"><xref:System.Web.UI.Timer?displayProperty=nameWithType> (.NET Framework only), an ASP.NET component that performs asynchronous or synchronous web page postbacks at a regular interval.</span></span>
  
 <span data-ttu-id="b1ec7-116">Cuando se crea un temporizador, puede especificar una cantidad de tiempo de espera antes de la primera ejecución del método (tiempo de expiración) y una cantidad de tiempo de espera entre las ejecuciones posteriores (período).</span><span class="sxs-lookup"><span data-stu-id="b1ec7-116">When you create a timer, you can specify an amount of time to wait before the first execution of the method (due time), and an amount of time to wait between subsequent executions (period).</span></span> <span data-ttu-id="b1ec7-117">La <xref:System.Threading.Timer> clase tiene la misma resolución que el reloj del sistema.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-117">The <xref:System.Threading.Timer> class has the same resolution as the system clock.</span></span> <span data-ttu-id="b1ec7-118">Esto significa que si el período es menor que la resolución del reloj del sistema, el <xref:System.Threading.TimerCallback> delegado se ejecutará a intervalos definidos por la resolución del reloj del sistema, que es aproximadamente de 15 milisegundos en los sistemas Windows 7 y Windows 8.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-118">This means that if the period is less than the resolution of the system clock, the <xref:System.Threading.TimerCallback> delegate will execute at intervals defined by the resolution of the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems.</span></span> <span data-ttu-id="b1ec7-119">Puede cambiar el debido tiempo y período o deshabilitar el temporizador, utilizando el <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-119">You can change the due time and period, or disable the timer, by using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1ec7-120">Siempre y cuando usas una <xref:System.Threading.Timer>, debe mantener una referencia a él.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-120">As long as you are using a <xref:System.Threading.Timer>, you must keep a reference to it.</span></span> <span data-ttu-id="b1ec7-121">Al igual que con cualquier objeto administrado, un <xref:System.Threading.Timer> está sujeta a la colección de elementos no utilizados cuando no hay ninguna referencia a ella.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-121">As with any managed object, a <xref:System.Threading.Timer> is subject to garbage collection when there are no references to it.</span></span> <span data-ttu-id="b1ec7-122">El hecho de que un <xref:System.Threading.Timer> está aún activo no impide que se están recopilando.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-122">The fact that a <xref:System.Threading.Timer> is still active does not prevent it from being collected.</span></span>  
  
 <span data-ttu-id="b1ec7-123">Cuando ya no se necesita un temporizador, utilice el <xref:System.Threading.Timer.Dispose%2A> método para liberar los recursos mantenidos por el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-123">When a timer is no longer needed, use the <xref:System.Threading.Timer.Dispose%2A> method to free the resources held by the timer.</span></span> <span data-ttu-id="b1ec7-124">Tenga en cuenta que las devoluciones de llamada pueden producir tras el <xref:System.Threading.Timer.Dispose> sobrecarga del método se ha llamado, dado que el temporizador pone en cola devoluciones de llamada para su ejecución por subprocesos de grupo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-124">Note that callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="b1ec7-125">Puede usar el <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> sobrecarga del método para esperar hasta que se completen todas las devoluciones de llamada.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-125">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
 <span data-ttu-id="b1ec7-126">El método de devolución de llamada ejecutado por el temporizador debe ser reentrante, porque se llama en <xref:System.Threading.ThreadPool> subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-126">The callback method executed by the timer should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="b1ec7-127">La devolución de llamada se puede ejecutar simultáneamente en dos subprocesos del grupo de subprocesos si el intervalo del temporizador es menor que el tiempo necesario para ejecutar la devolución de llamada, o si todos los subprocesos del grupo de subprocesos están en uso y la devolución de llamada se pone en cola varias veces.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-127">The callback can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the callback, or if all thread pool threads are in use and the callback is queued multiple times.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1ec7-128"><xref:System.Threading.Timer?displayProperty=nameWithType> es un temporizador sencillo y ligero que utiliza métodos de devolución de llamada y se proporciona mediante subprocesos de grupo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-128"><xref:System.Threading.Timer?displayProperty=nameWithType> is a simple, lightweight timer that uses callback methods and is served by thread pool threads.</span></span> <span data-ttu-id="b1ec7-129">No se recomienda para su uso con Windows Forms, ya que las devoluciones de llamada no se producen en el subproceso de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-129">It is not recommended for use with Windows Forms, because its callbacks do not occur on the user interface thread.</span></span> <span data-ttu-id="b1ec7-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> es una opción mejor para su uso con Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-130"><xref:System.Windows.Forms.Timer?displayProperty=nameWithType> is a better choice for use with Windows Forms.</span></span> <span data-ttu-id="b1ec7-131">Para la funcionalidad del temporizador basado en servidor, podría usar <xref:System.Timers.Timer?displayProperty=nameWithType>, que genera eventos y tiene características adicionales.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-131">For server-based timer functionality, you might consider using <xref:System.Timers.Timer?displayProperty=nameWithType>, which raises events and has additional features.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ec7-132">En el ejemplo siguiente se define un `StatusChecker` clase que incluya un `CheckStatus` método cuya firma es el mismo como el <xref:System.Threading.TimerCallback> delegar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-132">The following example defines a `StatusChecker` class  that includes a `CheckStatus` method whose signature is the same as the <xref:System.Threading.TimerCallback> delegate.</span></span> <span data-ttu-id="b1ec7-133">El `state` argumento de la `CheckStatus` método es un <xref:System.Threading.AutoResetEvent> objeto que se utiliza para sincronizar el subproceso de la aplicación y el subproceso del grupo que se ejecuta el delegado de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-133">The  `state` argument of the `CheckStatus` method is an <xref:System.Threading.AutoResetEvent> object that is used to synchronize the application thread and the thread pool thread that executes the callback delegate.</span></span> <span data-ttu-id="b1ec7-134">La `StatusChecker` clase también incluye dos variables de estado:</span><span class="sxs-lookup"><span data-stu-id="b1ec7-134">The `StatusChecker` class also includes two state variables:</span></span>  
  
 `invokeCount`  
 <span data-ttu-id="b1ec7-135">Indica el número de veces que se ha invocado el método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-135">Indicates the number of times the callback method has been invoked.</span></span>  
  
 `maxCount`  
 <span data-ttu-id="b1ec7-136">Determina el número máximo de veces que se debe invocar el método de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-136">Determines the maximum number of times the callback method should be invoked.</span></span>  
  
 <span data-ttu-id="b1ec7-137">El subproceso de la aplicación crea el temporizador, que espera un segundo y, a continuación, ejecuta el `CheckStatus` el método de devolución de llamada cada 250 milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-137">The application thread creates the timer, which waits one second and then executes  the `CheckStatus` callback method every 250 milliseconds.</span></span> <span data-ttu-id="b1ec7-138">El subproceso de la aplicación, a continuación, se bloquea hasta que el <xref:System.Threading.AutoResetEvent> se señaliza el objeto.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-138">The application thread then blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="b1ec7-139">Cuando el `CheckStatus` ejecuta el método de devolución de llamada `maxCount` veces, llama a la `AutoResetEvent.Set` método para establecer el estado de la <xref:System.Threading.AutoResetEvent> objeto marcado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-139">When the `CheckStatus` callback method executes `maxCount` times, it calls the `AutoResetEvent.Set` method to set the state of the <xref:System.Threading.AutoResetEvent> object to signaled.</span></span> <span data-ttu-id="b1ec7-140">La primera vez que esto sucede, el subproceso de la aplicación llama a la <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> método para que el método de devolución de llamada ejecuta ahora cada medio segundo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-140">The first time this happens, the application thread calls the <xref:System.Threading.Timer.Change%28System.Int32%2CSystem.Int32%29> method so that the callback method now executes every half second.</span></span> <span data-ttu-id="b1ec7-141">Una vez más se bloquea hasta que el <xref:System.Threading.AutoResetEvent> se señaliza el objeto.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-141">It once again blocks until the <xref:System.Threading.AutoResetEvent> object is signaled.</span></span> <span data-ttu-id="b1ec7-142">Cuando esto sucede, se destruye el temporizador mediante una llamada a su <xref:System.Threading.Timer.Dispose%2A> método y la aplicación finaliza.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-142">When this happens, the timer is destroyed by calling its <xref:System.Threading.Timer.Dispose%2A> method, and the application terminates.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="b1ec7-143">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-143">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Threading.TimerCallback" />
    <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-144">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-144">Timers</span></span></related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md"><span data-ttu-id="b1ec7-145">Grupo de subprocesos administrados</span><span class="sxs-lookup"><span data-stu-id="b1ec7-145">The Managed Thread Pool</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1ec7-146">Inicializa una nueva instancia de la clase <see langword="Timer" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-146">Initializes a new instance of the <see langword="Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback -&gt; System.Threading.Timer" Usage="new System.Threading.Timer callback" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b1ec7-147">Un <see cref="T:System.Threading.TimerCallback" /> delegado que representa un método que se ejecutará.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-147">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <summary><span data-ttu-id="b1ec7-148">Inicializa una nueva instancia de la <see cref="T:System.Threading.Timer" /> clase con un período y un límite infinitos tiempo, usar recién creado <see cref="T:System.Threading.Timer" /> objeto como objeto de estado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-148">Initializes a new instance of the <see cref="T:System.Threading.Timer" /> class with an infinite period and an infinite due time, using the newly created <see cref="T:System.Threading.Timer" /> object as the state object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-149">Llamar a este constructor cuando desee utilizar el <xref:System.Threading.Timer> propio objeto como objeto de estado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-149">Call this constructor when you want to use the <xref:System.Threading.Timer> object itself as the state object.</span></span> <span data-ttu-id="b1ec7-150">Después de crear el temporizador, utilice el <xref:System.Threading.Timer.Change%2A> método para establecer el intervalo y tiempo de expiración.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-150">After creating the timer, use the <xref:System.Threading.Timer.Change%2A> method to set the interval and due time.</span></span>  
  
 <span data-ttu-id="b1ec7-151">Este constructor especifica un límite infinitos tiempo antes de la primera devolución de llamada y un intervalo infinito entre devoluciones de llamada, con el fin de evitar que la primera devolución de llamada que se producen antes de la <xref:System.Threading.Timer> objeto se asigna al objeto de estado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-151">This constructor specifies an infinite due time before the first callback and an infinite interval between callbacks, in order to prevent the first callback from occurring before the <xref:System.Threading.Timer> object is assigned to the state object.</span></span>  
  
 <span data-ttu-id="b1ec7-152">El método especificado para `callback` debe ser reentrante, porque se llama en <xref:System.Threading.ThreadPool> subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-152">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="b1ec7-153">El método se puede ejecutar simultáneamente en dos subprocesos del grupo de subprocesos si el intervalo del temporizador es menor que el tiempo necesario para ejecutar el método, o si todos los subprocesos del grupo de subprocesos están en uso y el método se pone en cola varias veces.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-153">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ec7-154">En el ejemplo de código siguiente se crea un nuevo temporizador, utilizando el propio temporizador como objeto de estado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-154">The following code example creates a new timer, using the timer itself as the state object.</span></span> <span data-ttu-id="b1ec7-155">El <xref:System.Threading.Timer.Change%2A> método se utiliza para iniciar el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-155">The <xref:System.Threading.Timer.Change%2A> method is used to start the timer.</span></span> <span data-ttu-id="b1ec7-156">Cuando se produzca la devolución de llamada del temporizador, se usa el objeto de estado para desactivar el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-156">When the timer callback occurs, the state object is used to turn the timer off.</span></span>  
  
 [!code-csharp[TimerSelfCtor#1](~/samples/snippets/csharp/VS_Snippets_Misc/timerSelfCtor/CS/source.cs#1)]
 [!code-vb[TimerSelfCtor#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/timerSelfCtor/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Integer, period As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, int dueTime, int period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * int * int -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b1ec7-157">Un <see cref="T:System.Threading.TimerCallback" /> delegado que representa un método que se ejecutará.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-157">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="b1ec7-158">Un objeto que contiene información que se utilizará el método de devolución de llamada, o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-158">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="b1ec7-159">La cantidad de tiempo de retraso antes de <paramref name="callback" /> se invoca, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-159">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="b1ec7-160">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que se inicie el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-160">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="b1ec7-161">Especifique cero (0) para iniciar inmediatamente el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-161">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="b1ec7-162">El intervalo de tiempo entre invocaciones de <paramref name="callback" />, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-162">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="b1ec7-163">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para deshabilitar la señalización periódica.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-163">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="b1ec7-164">Inicializa una nueva instancia de la <see langword="Timer" /> clase, utilizando un entero de 32 bits con signo para especificar el intervalo de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-164">Initializes a new instance of the <see langword="Timer" /> class, using a 32-bit signed integer to specify the time interval.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-165">El delegado especificado por el `callback` parámetro se invoca una vez después de `dueTime` transcurre y, a partir de entonces cada vez el `period` intervalo finaliza el tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-165">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="b1ec7-166">Si `dueTime` es cero (0), `callback` se invoca de inmediato.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-166">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="b1ec7-167">Si `dueTime` es <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` no se invoca; el temporizador está deshabilitado, pero se puede volver a habilitar mediante una llamada a la <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-167">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="b1ec7-168">Dado que el <xref:System.Threading.Timer> clase tiene la misma resolución que el reloj del sistema, que es aproximadamente de 15 milisegundos en los sistemas Windows 7 y Windows 8, el `callback` delegado se ejecuta a intervalos definidos por la resolución del reloj del sistema si `period`es menor que la resolución del reloj del sistema.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-168">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="b1ec7-169">Si `period` es cero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> y `dueTime` no <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` se invoca una vez; el comportamiento del temporizador periódico está deshabilitado, pero se puede volver a habilitar mediante el <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-169">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="b1ec7-170">El método especificado para `callback` debe ser reentrante, porque se llama en <xref:System.Threading.ThreadPool> subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-170">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="b1ec7-171">El método se puede ejecutar simultáneamente en dos subprocesos del grupo de subprocesos si el intervalo del temporizador es menor que el tiempo necesario para ejecutar el método, o si todos los subprocesos del grupo de subprocesos están en uso y el método se pone en cola varias veces.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-171">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ec7-172">En el ejemplo de código siguiente se muestra cómo crear un `TimerCallback` delegado e inicializar una nueva instancia de la `Timer` clase.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-172">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1ec7-173">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-173">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ec7-174">El parámetro <paramref name="callback" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-174">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-175">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-175">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As Long, period As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, long dueTime, long period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * int64 * int64 -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dueTime" Type="System.Int64" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.Int64" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b1ec7-176">Un <see cref="T:System.Threading.TimerCallback" /> delegado que representa un método que se ejecutará.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-176">A <see cref="T:System.Threading.TimerCallback" /> delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="b1ec7-177">Un objeto que contiene información que se utilizará el método de devolución de llamada, o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-177">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="b1ec7-178">La cantidad de tiempo de retraso antes de <paramref name="callback" /> se invoca, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-178">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="b1ec7-179">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que se inicie el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-179">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="b1ec7-180">Especifique cero (0) para iniciar inmediatamente el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-180">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="b1ec7-181">El intervalo de tiempo entre invocaciones de <paramref name="callback" />, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-181">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="b1ec7-182">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para deshabilitar la señalización periódica.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-182">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="b1ec7-183">Inicializa una nueva instancia de la <see langword="Timer" /> clase, utilizando enteros de 64 bits con signo para medir los intervalos de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-183">Initializes a new instance of the <see langword="Timer" /> class, using 64-bit signed integers to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-184">El delegado especificado por el `callback` parámetro se invoca una vez después de `dueTime` transcurre y, a partir de entonces cada vez el `period` intervalo finaliza el tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-184">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="b1ec7-185">Si `dueTime` es cero (0), `callback` se invoca de inmediato.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-185">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="b1ec7-186">Si `dueTime` es <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` no se invoca; el temporizador está deshabilitado, pero se puede volver a habilitar mediante una llamada a la <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-186">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="b1ec7-187">Dado que el <xref:System.Threading.Timer> clase tiene la misma resolución que el reloj del sistema, que es aproximadamente de 15 milisegundos en los sistemas Windows 7 y Windows 8, el `callback` delegado se ejecuta a intervalos definidos por la resolución del reloj del sistema si `period`es menor que la resolución del reloj del sistema.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-187">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="b1ec7-188">Si `period` es cero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> y `dueTime` no <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` se invoca una vez; el comportamiento del temporizador periódico está deshabilitado, pero se puede volver a habilitar mediante el <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-188">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="b1ec7-189">El método especificado para `callback` debe ser reentrante, porque se llama en <xref:System.Threading.ThreadPool> subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-189">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="b1ec7-190">El método se puede ejecutar simultáneamente en dos subprocesos del grupo de subprocesos si el intervalo del temporizador es menor que el tiempo necesario para ejecutar el método, o si todos los subprocesos del grupo de subprocesos están en uso y el método se pone en cola varias veces.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-190">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1ec7-191">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-191">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1ec7-192">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro es mayor que 4294967294.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-192">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-193">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-193">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As TimeSpan, period As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * TimeSpan * TimeSpan -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b1ec7-194">Delegado que representa un método que se va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-194">A delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="b1ec7-195">Un objeto que contiene información que se utilizará el método de devolución de llamada, o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-195">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="b1ec7-196">Cantidad de tiempo de espera antes de que el parámetro <paramref name="callback" /> invoque a sus métodos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-196">The amount of time to delay before the <paramref name="callback" /> parameter invokes its methods.</span></span> <span data-ttu-id="b1ec7-197">Especifique menos un (-1) milisegundo para evitar que se inicie el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-197">Specify negative one (-1) milliseconds to prevent the timer from starting.</span></span> <span data-ttu-id="b1ec7-198">Especifique cero (0) para iniciar inmediatamente el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-198">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="b1ec7-199">El intervalo de tiempo entre invocaciones de los métodos que se hace referencia a <paramref name="callback" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-199">The time interval between invocations of the methods referenced by <paramref name="callback" />.</span></span> <span data-ttu-id="b1ec7-200">Especifique menos un (-1) milisegundo para deshabilitar la señalización periódica.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-200">Specify negative one (-1) milliseconds to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="b1ec7-201">Inicializa una nueva instancia de la <see langword="Timer" /> clase, utilizando <see cref="T:System.TimeSpan" /> valores para medir los intervalos de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-201">Initializes a new instance of the <see langword="Timer" /> class, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-202">El delegado especificado por el `callback` parámetro se invoca una vez después de `dueTime` transcurre y, a partir de entonces cada vez el `period` intervalo finaliza el tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-202">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="b1ec7-203">Si `dueTime` es cero (0), `callback` se invoca de inmediato.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-203">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="b1ec7-204">Si `dueTime` es menos uno (-1) milisegundo, `callback` no se invoca; el temporizador está deshabilitado, pero se puede volver a habilitar mediante una llamada a la <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-204">If `dueTime` is negative one (-1) milliseconds, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="b1ec7-205">Dado que el <xref:System.Threading.Timer> clase tiene la misma resolución que el reloj del sistema, que es aproximadamente de 15 milisegundos en los sistemas Windows 7 y Windows 8, el `callback` delegado se ejecuta a intervalos definidos por la resolución del reloj del sistema si `period`es menor que la resolución del reloj del sistema.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-205">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="b1ec7-206">Si `period` es cero (0) o menos (-1) milisegundo y `dueTime` es positivo, `callback` se invoca una vez; el comportamiento del temporizador periódico está deshabilitado, pero se puede volver a habilitar mediante el <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-206">If `period` is zero (0) or negative one (-1) milliseconds and `dueTime` is positive, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="b1ec7-207">El método especificado para `callback` debe ser reentrante, porque se llama en <xref:System.Threading.ThreadPool> subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-207">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="b1ec7-208">El método se puede ejecutar simultáneamente en dos subprocesos del grupo de subprocesos si el intervalo del temporizador es menor que el tiempo necesario para ejecutar el método, o si todos los subprocesos del grupo de subprocesos están en uso y el método se pone en cola varias veces.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-208">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ec7-209">En el ejemplo de código siguiente se muestra cómo crear un `TimerCallback` delegado e inicializar una nueva instancia de la `Timer` clase.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-209">The following code example shows how to create a `TimerCallback` delegate and initialize a new instance of the `Timer` class.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1ec7-210">El número de milisegundos en el valor de <paramref name="dueTime" /> o <paramref name="period" /> es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" />, o es mayor que <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-210">The number of milliseconds in the value of <paramref name="dueTime" /> or <paramref name="period" /> is negative and not equal to <see cref="F:System.Threading.Timeout.Infinite" />, or is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ec7-211">El parámetro <paramref name="callback" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-211">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-212">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-212">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.Threading.TimerCallback callback, object state, uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.TimerCallback callback, object state, unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.#ctor(System.Threading.TimerCallback,System.Object,System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callback As TimerCallback, state As Object, dueTime As UInteger, period As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::Threading::TimerCallback ^ callback, System::Object ^ state, System::UInt32 dueTime, System::UInt32 period);" />
      <MemberSignature Language="F#" Value="new System.Threading.Timer : System.Threading.TimerCallback * obj * uint32 * uint32 -&gt; System.Threading.Timer" Usage="new System.Threading.Timer (callback, state, dueTime, period)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callback" Type="System.Threading.TimerCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="dueTime" Type="System.UInt32" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.UInt32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="b1ec7-213">Delegado que representa un método que se va a ejecutar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-213">A delegate representing a method to be executed.</span></span></param>
        <param name="state"><span data-ttu-id="b1ec7-214">Un objeto que contiene información que se utilizará el método de devolución de llamada, o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-214">An object containing information to be used by the callback method, or <see langword="null" />.</span></span></param>
        <param name="dueTime"><span data-ttu-id="b1ec7-215">La cantidad de tiempo de retraso antes de <paramref name="callback" /> se invoca, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-215">The amount of time to delay before <paramref name="callback" /> is invoked, in milliseconds.</span></span> <span data-ttu-id="b1ec7-216">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para impedir que se inicie el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-216">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from starting.</span></span> <span data-ttu-id="b1ec7-217">Especifique cero (0) para iniciar inmediatamente el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-217">Specify zero (0) to start the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="b1ec7-218">El intervalo de tiempo entre invocaciones de <paramref name="callback" />, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-218">The time interval between invocations of <paramref name="callback" />, in milliseconds.</span></span> <span data-ttu-id="b1ec7-219">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para deshabilitar la señalización periódica.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-219">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="b1ec7-220">Inicializa una nueva instancia de la <see langword="Timer" /> clase, utilizando enteros de 32 bits sin signo para medir los intervalos de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-220">Initializes a new instance of the <see langword="Timer" /> class, using 32-bit unsigned integers to measure time intervals.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-221">El delegado especificado por el `callback` parámetro se invoca una vez después de `dueTime` transcurre y, a partir de entonces cada vez el `period` intervalo finaliza el tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-221">The delegate specified by the `callback` parameter is invoked once after `dueTime` elapses, and thereafter each time the `period` time interval elapses.</span></span>  
  
 <span data-ttu-id="b1ec7-222">Si `dueTime` es cero (0), `callback` se invoca de inmediato.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-222">If `dueTime` is zero (0), `callback` is invoked immediately.</span></span> <span data-ttu-id="b1ec7-223">Si `dueTime` es <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` no se invoca; el temporizador está deshabilitado, pero se puede volver a habilitar mediante una llamada a la <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-223">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is not invoked; the timer is disabled, but can be re-enabled by calling the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="b1ec7-224">Dado que el <xref:System.Threading.Timer> clase tiene la misma resolución que el reloj del sistema, que es aproximadamente de 15 milisegundos en los sistemas Windows 7 y Windows 8, el `callback` delegado se ejecuta a intervalos definidos por la resolución del reloj del sistema si `period`es menor que la resolución del reloj del sistema.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-224">Because the <xref:System.Threading.Timer> class has the same resolution as the system clock, which is approximately 15 milliseconds on Windows 7 and Windows 8 systems, the `callback` delegate executes at intervals defined by the resolution of the system clock if `period` is less than the resolution of the system clock.</span></span> <span data-ttu-id="b1ec7-225">Si `period` es cero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> y `dueTime` no <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` se invoca una vez; el comportamiento del temporizador periódico está deshabilitado, pero se puede volver a habilitar mediante el <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-225">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType> and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, `callback` is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled using the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 <span data-ttu-id="b1ec7-226">El método especificado para `callback` debe ser reentrante, porque se llama en <xref:System.Threading.ThreadPool> subprocesos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-226">The method specified for `callback` should be reentrant, because it is called on <xref:System.Threading.ThreadPool> threads.</span></span> <span data-ttu-id="b1ec7-227">El método se puede ejecutar simultáneamente en dos subprocesos del grupo de subprocesos si el intervalo del temporizador es menor que el tiempo necesario para ejecutar el método, o si todos los subprocesos del grupo de subprocesos están en uso y el método se pone en cola varias veces.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-227">The method can be executed simultaneously on two thread pool threads if the timer interval is less than the time required to execute the method, or if all thread pool threads are in use and the method is queued multiple times.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1ec7-228">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-228">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ec7-229">El parámetro <paramref name="callback" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-229">The <paramref name="callback" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-230">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-230">Timers</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Change">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1ec7-231">Cambia el tiempo de inicio y el intervalo entre las distintas invocaciones de método para un temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-231">Changes the start time and the interval between method invocations for a timer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (int dueTime, int period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int32 dueTime, int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Integer, period As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(int dueTime, int period);" />
      <MemberSignature Language="F#" Value="member this.Change : int * int -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int32" />
        <Parameter Name="period" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="b1ec7-232">La cantidad de tiempo de retraso antes de la invocación del método de devolución de llamada especificada cuando el <see cref="T:System.Threading.Timer" /> construyó, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-232">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="b1ec7-233">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para evitar que el temporizador se reinicie.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-233">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="b1ec7-234">Especifique cero (0) para reiniciar inmediatamente el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-234">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="b1ec7-235">El intervalo de tiempo entre invocaciones del método de devolución de llamada especificada cuando el <see cref="T:System.Threading.Timer" /> construyó, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-235">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="b1ec7-236">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para deshabilitar la señalización periódica.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-236">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="b1ec7-237">Cambia el tiempo de inicio y el intervalo entre las distintas invocaciones de método para un temporizador, utilizando enteros de 32 bits con signo para medir los intervalos de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-237">Changes the start time and the interval between method invocations for a timer, using 32-bit signed integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="b1ec7-238"><see langword="true" /> Si el temporizador se actualizó correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-238"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-239">Se invoca el método de devolución de llamada una vez después de `dueTime` transcurre y, a partir de entonces cada vez el intervalo de tiempo especificado por `period` transcurre.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-239">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="b1ec7-240">Si `dueTime` es cero (0), el método de devolución de llamada se invoca inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-240">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="b1ec7-241">Si `dueTime` es <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, nunca se invoca el método de devolución de llamada; el temporizador está desactivado, pero puede volver a habilitarse mediante una llamada a <xref:System.Threading.Timer.Change%2A> y especificando un valor positivo para `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-241">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="b1ec7-242">Si `period` es cero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, y `dueTime` no <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, el método de devolución de llamada se invoca una vez; se deshabilita el comportamiento del temporizador periódico, pero puede volver a habilitarse mediante una llamada a <xref:System.Threading.Timer.Change%2A> y especificando un valor positivo para `period`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-242">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="b1ec7-243">El <xref:System.Threading.Timer.Change%2A> método puede llamarse desde el <xref:System.Threading.TimerCallback> delegar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-243">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ec7-244">En el ejemplo de código siguiente se muestra cómo iniciar un `Timer` y, después de un número establecido de llamadas, cambiar su período.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-244">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b1ec7-245">El <see cref="T:System.Threading.Timer" /> ya se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-245">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1ec7-246">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro es negativo y no es igual a <see cref="F:System.Threading.Timeout.Infinite" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-246">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is negative and is not equal to <see cref="F:System.Threading.Timeout.Infinite" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-247">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-247">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (long dueTime, long period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(int64 dueTime, int64 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As Long, period As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(long dueTime, long period);" />
      <MemberSignature Language="F#" Value="member this.Change : int64 * int64 -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.Int64" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="b1ec7-248">La cantidad de tiempo de retraso antes de la invocación del método de devolución de llamada especificada cuando el <see cref="T:System.Threading.Timer" /> construyó, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-248">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="b1ec7-249">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para evitar que el temporizador se reinicie.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-249">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="b1ec7-250">Especifique cero (0) para reiniciar inmediatamente el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-250">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="b1ec7-251">El intervalo de tiempo entre invocaciones del método de devolución de llamada especificada cuando el <see cref="T:System.Threading.Timer" /> construyó, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-251">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="b1ec7-252">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para deshabilitar la señalización periódica.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-252">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="b1ec7-253">Cambia el tiempo de inicio y el intervalo entre las distintas invocaciones de método para un temporizador, utilizando enteros de 64 bits con signo para medir los intervalos de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-253">Changes the start time and the interval between method invocations for a timer, using 64-bit signed integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="b1ec7-254"><see langword="true" /> Si el temporizador se actualizó correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-254"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-255">Se invoca el método de devolución de llamada una vez después de `dueTime` transcurre y, a partir de entonces cada vez el intervalo de tiempo especificado por `period` transcurre.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-255">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="b1ec7-256">Si `dueTime` es cero (0), el método de devolución de llamada se invoca inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-256">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="b1ec7-257">Si `dueTime` es <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, nunca se invoca el método de devolución de llamada; el temporizador está desactivado, pero puede volver a habilitarse mediante una llamada a <xref:System.Threading.Timer.Change%2A> y especificando un valor positivo para `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-257">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="b1ec7-258">Si `period` es cero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, y `dueTime` no <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, el método de devolución de llamada se invoca una vez; se deshabilita el comportamiento del temporizador periódico, pero puede volver a habilitarse mediante una llamada a <xref:System.Threading.Timer.Change%2A> y especificando un valor positivo para `period`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-258">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="b1ec7-259">El <xref:System.Threading.Timer.Change%2A> método puede llamarse desde el <xref:System.Threading.TimerCallback> delegar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-259">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b1ec7-260">El <see cref="T:System.Threading.Timer" /> ya se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-260">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1ec7-261">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro es menor que -1.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-261">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is less than -1.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1ec7-262">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro es mayor que 4294967294.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-262">The <paramref name="dueTime" /> or <paramref name="period" /> parameter is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-263">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-263">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(valuetype System.TimeSpan dueTime, valuetype System.TimeSpan period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As TimeSpan, period As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(TimeSpan dueTime, TimeSpan period);" />
      <MemberSignature Language="F#" Value="member this.Change : TimeSpan * TimeSpan -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.TimeSpan" />
        <Parameter Name="period" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="b1ec7-264">Un <see cref="T:System.TimeSpan" /> que representa la cantidad de tiempo de retraso antes de invocar el método de devolución de llamada especificada cuando el <see cref="T:System.Threading.Timer" /> se construyó.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-264">A <see cref="T:System.TimeSpan" /> representing the amount of time to delay before invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span></span> <span data-ttu-id="b1ec7-265">Especifique menos un (-1) milisegundo para evitar que se reinicie el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-265">Specify negative one (-1) milliseconds to prevent the timer from restarting.</span></span> <span data-ttu-id="b1ec7-266">Especifique cero (0) para reiniciar inmediatamente el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-266">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="b1ec7-267">El intervalo de tiempo entre invocaciones del método de devolución de llamada especificada cuando el <see cref="T:System.Threading.Timer" /> se construyó.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-267">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed.</span></span> <span data-ttu-id="b1ec7-268">Especifique menos un (-1) milisegundo para deshabilitar la señalización periódica.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-268">Specify negative one (-1) milliseconds to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="b1ec7-269">Cambia la hora de inicio y el intervalo entre las distintas invocaciones de método para un temporizador, utilizando <see cref="T:System.TimeSpan" /> valores para medir los intervalos de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-269">Changes the start time and the interval between method invocations for a timer, using <see cref="T:System.TimeSpan" /> values to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="b1ec7-270"><see langword="true" /> Si el temporizador se actualizó correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-270"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-271">Se invoca el método de devolución de llamada una vez después de `dueTime` transcurre y, a partir de entonces cada vez el intervalo de tiempo especificado por `period` transcurre.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-271">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="b1ec7-272">Si `dueTime` es cero (0), el método de devolución de llamada se invoca inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-272">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="b1ec7-273">Si `dueTime` es menos uno (-1) milisegundo, nunca se invoca el método de devolución de llamada; el temporizador está desactivado, pero puede volver a habilitarse mediante una llamada a <xref:System.Threading.Timer.Change%2A> y especificando un valor positivo para `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-273">If `dueTime` is negative one (-1) milliseconds, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="b1ec7-274">Si `period` es cero (0) o negativo (-1) milisegundo, y `dueTime` es positivo, se invoca el método de devolución de llamada una vez; el comportamiento del temporizador periódico está deshabilitado, pero se puede volver a habilitar mediante una llamada a <xref:System.Threading.Timer.Change%2A> y especificando un valor mayor que cero para `period`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-274">If `period` is zero (0) or negative one (-1) milliseconds, and `dueTime` is positive, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a value greater than zero for `period`.</span></span>  
  
 <span data-ttu-id="b1ec7-275">El <xref:System.Threading.Timer.Change%2A> método puede llamarse desde el <xref:System.Threading.TimerCallback> delegar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-275">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ec7-276">En el ejemplo de código siguiente se muestra cómo iniciar un `Timer` y, después de un número establecido de llamadas, cambiar su período.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-276">The following code example demonstrates how to start a `Timer` and, after a set number of invocations, change its period.</span></span>  
  
 [!code-cpp[System.Threading.Timer2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer2/CPP/source2.cpp#1)]
 [!code-csharp[System.Threading.Timer2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer2/CS/source2.cs#1)]
 [!code-vb[System.Threading.Timer2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer2/VB/source2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b1ec7-277">El <see cref="T:System.Threading.Timer" /> ya se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-277">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b1ec7-278">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro, en milisegundos, es menor que -1.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-278">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is less than -1.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b1ec7-279">El <paramref name="dueTime" /> o <paramref name="period" /> parámetro, en milisegundos, que es mayor que 4294967294.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-279">The <paramref name="dueTime" /> or <paramref name="period" /> parameter, in milliseconds, is greater than 4294967294.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-280">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-280">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Change">
      <MemberSignature Language="C#" Value="public bool Change (uint dueTime, uint period);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Change(unsigned int32 dueTime, unsigned int32 period) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Change(System.UInt32,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Change (dueTime As UInteger, period As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Change(System::UInt32 dueTime, System::UInt32 period);" />
      <MemberSignature Language="F#" Value="member this.Change : uint32 * uint32 -&gt; bool" Usage="timer.Change (dueTime, period)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dueTime" Type="System.UInt32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="period" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dueTime"><span data-ttu-id="b1ec7-281">La cantidad de tiempo de retraso antes de la invocación del método de devolución de llamada especificada cuando el <see cref="T:System.Threading.Timer" /> construyó, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-281">The amount of time to delay before the invoking the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="b1ec7-282">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para evitar que el temporizador se reinicie.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-282">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to prevent the timer from restarting.</span></span> <span data-ttu-id="b1ec7-283">Especifique cero (0) para reiniciar inmediatamente el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-283">Specify zero (0) to restart the timer immediately.</span></span></param>
        <param name="period"><span data-ttu-id="b1ec7-284">El intervalo de tiempo entre invocaciones del método de devolución de llamada especificada cuando el <see cref="T:System.Threading.Timer" /> construyó, en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-284">The time interval between invocations of the callback method specified when the <see cref="T:System.Threading.Timer" /> was constructed, in milliseconds.</span></span> <span data-ttu-id="b1ec7-285">Especificar <see cref="F:System.Threading.Timeout.Infinite" /> para deshabilitar la señalización periódica.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-285">Specify <see cref="F:System.Threading.Timeout.Infinite" /> to disable periodic signaling.</span></span></param>
        <summary><span data-ttu-id="b1ec7-286">Cambia el tiempo de inicio y el intervalo entre las distintas invocaciones de método para un temporizador, utilizando enteros de 32 bits sin signo para medir los intervalos de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-286">Changes the start time and the interval between method invocations for a timer, using 32-bit unsigned integers to measure time intervals.</span></span></summary>
        <returns><span data-ttu-id="b1ec7-287"><see langword="true" /> Si el temporizador se actualizó correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-287"><see langword="true" /> if the timer was successfully updated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-288">Se invoca el método de devolución de llamada una vez después de `dueTime` transcurre y, a partir de entonces cada vez el intervalo de tiempo especificado por `period` transcurre.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-288">The callback method is invoked once after `dueTime` elapses, and thereafter each time the time interval specified by `period` elapses.</span></span>  
  
 <span data-ttu-id="b1ec7-289">Si `dueTime` es cero (0), el método de devolución de llamada se invoca inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-289">If `dueTime` is zero (0), the callback method is invoked immediately.</span></span> <span data-ttu-id="b1ec7-290">Si `dueTime` es <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, nunca se invoca el método de devolución de llamada; el temporizador está desactivado, pero puede volver a habilitarse mediante una llamada a <xref:System.Threading.Timer.Change%2A> y especificando un valor positivo para `dueTime`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-290">If `dueTime` is <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is never invoked; the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `dueTime`.</span></span>  
  
 <span data-ttu-id="b1ec7-291">Si `period` es cero (0) o <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, y `dueTime` no <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, el método de devolución de llamada se invoca una vez; se deshabilita el comportamiento del temporizador periódico, pero puede volver a habilitarse mediante una llamada a <xref:System.Threading.Timer.Change%2A> y especificando un valor positivo para `period`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-291">If `period` is zero (0) or <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, and `dueTime` is not <xref:System.Threading.Timeout.Infinite?displayProperty=nameWithType>, the callback method is invoked once; the periodic behavior of the timer is disabled, but can be re-enabled by calling <xref:System.Threading.Timer.Change%2A> and specifying a positive value for `period`.</span></span>  
  
 <span data-ttu-id="b1ec7-292">El <xref:System.Threading.Timer.Change%2A> método puede llamarse desde el <xref:System.Threading.TimerCallback> delegar.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-292">The <xref:System.Threading.Timer.Change%2A> method can be called from the <xref:System.Threading.TimerCallback> delegate.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b1ec7-293">El <see cref="T:System.Threading.Timer" /> ya se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-293">The <see cref="T:System.Threading.Timer" /> has already been disposed.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-294">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-294">Timers</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b1ec7-295">Libera todos los recursos utilizados por la instancia actual de <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-295">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="timer.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ec7-296">Libera todos los recursos utilizados por la instancia actual de <see cref="T:System.Threading.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-296">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-297">Una llamada a `Dispose` permite a los recursos utilizados por el <xref:System.Threading.Timer> que reasignarse para otros fines.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-297">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="b1ec7-298">Para obtener más información acerca de `Dispose`, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="b1ec7-298">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1ec7-299">Las devoluciones de llamada se pueden producir tras el <xref:System.Threading.Timer.Dispose> sobrecarga del método se ha llamado, dado que el temporizador pone en cola devoluciones de llamada para su ejecución por subprocesos de grupo.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-299">Callbacks can occur after the <xref:System.Threading.Timer.Dispose> method overload has been called, because the timer queues callbacks for execution by thread pool threads.</span></span> <span data-ttu-id="b1ec7-300">Puede usar el <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> sobrecarga del método para esperar hasta que se completen todas las devoluciones de llamada.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-300">You can use the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload to wait until all callbacks have completed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b1ec7-301">El ejemplo de código siguiente muestra cómo liberar los recursos mantenidos por un `Timer`.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-301">The following code example shows how to free the resources held by a `Timer`.</span></span>  
  
 [!code-cpp[System.Threading.Timer#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.Timer/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.Timer#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.Timer/CS/source.cs#1)]
 [!code-vb[System.Threading.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.Timer/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-302">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-302">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public bool Dispose (System.Threading.WaitHandle notifyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Dispose(class System.Threading.WaitHandle notifyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Dispose (notifyObject As WaitHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Dispose(System::Threading::WaitHandle ^ notifyObject);" />
      <MemberSignature Language="F#" Value="member this.Dispose : System.Threading.WaitHandle -&gt; bool" Usage="timer.Dispose notifyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notifyObject" Type="System.Threading.WaitHandle" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="notifyObject"><span data-ttu-id="b1ec7-303">El <see cref="T:System.Threading.WaitHandle" /> a que se señalice cuando la <see langword="Timer" /> se ha eliminado.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-303">The <see cref="T:System.Threading.WaitHandle" /> to be signaled when the <see langword="Timer" /> has been disposed of.</span></span></param>
        <summary><span data-ttu-id="b1ec7-304">Libera todos los recursos utilizados por la instancia actual de <see cref="T:System.Threading.Timer" /> e indica el momento se ha eliminado el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-304">Releases all resources used by the current instance of <see cref="T:System.Threading.Timer" /> and signals when the timer has been disposed of.</span></span></summary>
        <returns><span data-ttu-id="b1ec7-305"><see langword="true" /> Si la función se realiza correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-305"><see langword="true" /> if the function succeeds; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b1ec7-306">Una llamada a `Dispose` permite a los recursos utilizados por el <xref:System.Threading.Timer> que reasignarse para otros fines.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-306">Calling `Dispose` allows the resources used by the <xref:System.Threading.Timer> to be reallocated for other purposes.</span></span> <span data-ttu-id="b1ec7-307">Para obtener más información acerca de `Dispose`, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="b1ec7-307">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
 <span data-ttu-id="b1ec7-308">Cuando este método finaliza, indica el <xref:System.Threading.WaitHandle> especificado por el `notifyObject` parámetro. Utilice esta sobrecarga de la <xref:System.Threading.Timer.Dispose%2A> método si desea poder bloquear hasta que esté seguro de que se ha eliminado el temporizador.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-308">When this method completes, it signals the <xref:System.Threading.WaitHandle> specified by the `notifyObject` parameter.Use this overload of the <xref:System.Threading.Timer.Dispose%2A> method if you want to be able to block until you are certain that the timer has been disposed.</span></span> <span data-ttu-id="b1ec7-309">El temporizador no se elimina hasta que se completen todas las devoluciones de llamada actualmente en cola.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-309">The timer is not disposed until all currently queued callbacks have completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b1ec7-310">Si la devolución de llamada usa el <xref:System.Threading.Timer.Change%2A> método para establecer el `dueTime` en cero el parámetro, puede producirse una condición de carrera cuando la <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> se llama a la sobrecarga del método: Si el temporizador pone en cola una devolución de llamada nuevo antes de la <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> sobrecarga del método detecta que hay en cola ninguna devolución de llamada, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> seguirá bloqueando; en caso contrario, el temporizador se elimina mientras se está poniendo en cola la devolución de llamada nuevo y un <xref:System.ObjectDisposedException> se produce cuando las nuevas llamadas de devolución de llamada la <xref:System.Threading.Timer.Change%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-310">If the callback uses the <xref:System.Threading.Timer.Change%2A> method to set the `dueTime` parameter to zero, a race condition can occur when the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload is called: If the timer queues a new callback before the <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> method overload detects that there are no callbacks queued, <xref:System.Threading.Timer.Dispose%28System.Threading.WaitHandle%29> continues to block; otherwise, the timer is disposed while the new callback is being queued, and an <xref:System.ObjectDisposedException> is thrown when the new callback calls the <xref:System.Threading.Timer.Change%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b1ec7-311">El parámetro <paramref name="notifyObject" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-311">The <paramref name="notifyObject" /> parameter is <see langword="null" />.</span></span></exception>
        <related type="Article" href="~/docs/standard/threading/timers.md"><span data-ttu-id="b1ec7-312">Temporizadores</span><span class="sxs-lookup"><span data-stu-id="b1ec7-312">Timers</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DisposeAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.ValueTask DisposeAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask DisposeAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.DisposeAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function DisposeAsync () As ValueTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::ValueTask DisposeAsync();" />
      <MemberSignature Language="F#" Value="abstract member DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask&#xA;override this.DisposeAsync : unit -&gt; System.Threading.Tasks.ValueTask" Usage="timer.DisposeAsync " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IAsyncDisposable.DisposeAsync</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Timer.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Timer ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="timer.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Timer</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b1ec7-313">Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="b1ec7-313">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
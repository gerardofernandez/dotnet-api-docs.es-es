<Type Name="WaitOrTimerCallback" FullName="System.Threading.WaitOrTimerCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="289e1b5b821956cddb25a0678cc80180a46e2875" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48724839" /></Metadata><TypeSignature Language="C#" Value="public delegate void WaitOrTimerCallback(object state, bool timedOut);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WaitOrTimerCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Threading.WaitOrTimerCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub WaitOrTimerCallback(state As Object, timedOut As Boolean)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void WaitOrTimerCallback(System::Object ^ state, bool timedOut);" />
  <TypeSignature Language="F#" Value="type WaitOrTimerCallback = delegate of obj * bool -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.ThreadPool</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
    <Parameter Name="timedOut" Type="System.Boolean" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state"><span data-ttu-id="370c5-101">Objeto que contiene la información que va a utilizar el método de devolución de llamadas cada vez que se ejecute.</span><span class="sxs-lookup"><span data-stu-id="370c5-101">An object containing information to be used by the callback method each time it executes.</span></span></param>
    <param name="timedOut"><span data-ttu-id="370c5-102"><see langword="true" /> si <see cref="T:System.Threading.WaitHandle" /> ha agotado el tiempo de espera; <see langword="false" /> si estaba señalado.</span><span class="sxs-lookup"><span data-stu-id="370c5-102"><see langword="true" /> if the <see cref="T:System.Threading.WaitHandle" /> timed out; <see langword="false" /> if it was signaled.</span></span></param>
    <summary><span data-ttu-id="370c5-103">Representa un método al que se debe llamar cuando un <see cref="T:System.Threading.WaitHandle" /> está señalado o se agota su tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="370c5-103">Represents a method to be called when a <see cref="T:System.Threading.WaitHandle" /> is signaled or times out.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="370c5-104"><xref:System.Threading.WaitOrTimerCallback> Representa un método de devolución de llamada que se desea ejecutar cuando se agota el tiempo de un identificador de espera registrada o se señala.</span><span class="sxs-lookup"><span data-stu-id="370c5-104"><xref:System.Threading.WaitOrTimerCallback> represents a callback method that you want to execute when a registered wait handle times out or is signaled.</span></span> <span data-ttu-id="370c5-105">Crear el delegado pasando el método de devolución de llamada para el <xref:System.Threading.WaitOrTimerCallback> constructor.</span><span class="sxs-lookup"><span data-stu-id="370c5-105">Create the delegate by passing your callback method to the <xref:System.Threading.WaitOrTimerCallback> constructor.</span></span> <span data-ttu-id="370c5-106">El método debe tener la firma que se muestra aquí.</span><span class="sxs-lookup"><span data-stu-id="370c5-106">Your method must have the signature shown here.</span></span>  
  
 <span data-ttu-id="370c5-107">Crear el identificador de espera registrada pasando el <xref:System.Threading.WaitOrTimerCallback> delegado y un <xref:System.Threading.WaitHandle> a <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="370c5-107">Create the registered wait handle by passing the <xref:System.Threading.WaitOrTimerCallback> delegate and a <xref:System.Threading.WaitHandle> to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="370c5-108">El método de devolución de llamada ejecuta cada vez que el <xref:System.Threading.WaitHandle> el tiempo de espera o se señala.</span><span class="sxs-lookup"><span data-stu-id="370c5-108">Your callback method executes each time the <xref:System.Threading.WaitHandle> times out or is signaled.</span></span>  
  
  
> [!NOTE]
>  <span data-ttu-id="370c5-109">Los usuarios de Visual Basic pueden omitir el <xref:System.Threading.WaitOrTimerCallback> constructor y basta con usar el `AddressOf` operador al pasar el método de devolución de llamada a <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="370c5-109">Visual Basic users can omit the <xref:System.Threading.WaitOrTimerCallback> constructor, and simply use the `AddressOf` operator when passing the callback method to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A>.</span></span> <span data-ttu-id="370c5-110">Visual Basic llama automáticamente al constructor de delegado correcto.</span><span class="sxs-lookup"><span data-stu-id="370c5-110">Visual Basic automatically calls the correct delegate constructor.</span></span>  
  
 <span data-ttu-id="370c5-111">Si desea pasar información a su método de devolución de llamada, cree un objeto que contiene la información necesaria y páselo a <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> cuando se crea el identificador de espera registrada.</span><span class="sxs-lookup"><span data-stu-id="370c5-111">If you want to pass information to your callback method, create an object that contains the necessary information and pass it to <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> when you create the registered wait handle.</span></span> <span data-ttu-id="370c5-112">Cada vez que se ejecuta el método de devolución de llamada, el `state` parámetro contiene este objeto.</span><span class="sxs-lookup"><span data-stu-id="370c5-112">Each time your callback method executes, the `state` parameter contains this object.</span></span>  
  
 <span data-ttu-id="370c5-113">Para obtener más información sobre el uso de métodos de devolución de llamada para sincronizar subprocesos de grupo, consulte [el grupo de subprocesos administrados](~/docs/standard/threading/the-managed-thread-pool.md).</span><span class="sxs-lookup"><span data-stu-id="370c5-113">For more information about using callback methods to synchronize thread pool threads, see [The managed thread pool](~/docs/standard/threading/the-managed-thread-pool.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="370c5-114">El ejemplo siguiente muestra cómo usar el <xref:System.Threading.WaitOrTimerCallback> delegado para representar un método de devolución de llamada que se ejecuta cuando se señala un identificador de espera.</span><span class="sxs-lookup"><span data-stu-id="370c5-114">The following example shows how to use the <xref:System.Threading.WaitOrTimerCallback> delegate to represent a callback method that is executed when a wait handle is signaled.</span></span>  
  
 <span data-ttu-id="370c5-115">El ejemplo también muestra cómo usar el <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> método para ejecutar un método de devolución de llamada especificada cuando se señala un identificador de espera especificado.</span><span class="sxs-lookup"><span data-stu-id="370c5-115">The example also shows how to use the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method to execute a specified callback method when a specified wait handle is signaled.</span></span> <span data-ttu-id="370c5-116">En este ejemplo, el método de devolución de llamada es `WaitProc` y el identificador de espera es un <xref:System.Threading.AutoResetEvent>.</span><span class="sxs-lookup"><span data-stu-id="370c5-116">In this example, the callback method is `WaitProc` and the wait handle is an <xref:System.Threading.AutoResetEvent>.</span></span>  
  
 <span data-ttu-id="370c5-117">El ejemplo define un `TaskInfo` clase para contener la información que se pasa a la devolución de llamada cuando se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="370c5-117">The example defines a `TaskInfo` class to hold the information that is passed to the callback when it executes.</span></span> <span data-ttu-id="370c5-118">El ejemplo se crea un `TaskInfo` de objeto y lo asigna algunos datos de cadena.</span><span class="sxs-lookup"><span data-stu-id="370c5-118">The example creates a `TaskInfo` object and assigns it some string data.</span></span> <span data-ttu-id="370c5-119">El <xref:System.Threading.RegisteredWaitHandle> devuelta por la <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> método se asigna a la `Handle` campo de la `TaskInfo` objeto, para que el método de devolución de llamada tiene acceso a la <xref:System.Threading.RegisteredWaitHandle>.</span><span class="sxs-lookup"><span data-stu-id="370c5-119">The <xref:System.Threading.RegisteredWaitHandle> that is returned by the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method is assigned to the `Handle` field of the `TaskInfo` object, so that the callback method has access to the <xref:System.Threading.RegisteredWaitHandle>.</span></span>  
  
 <span data-ttu-id="370c5-120">Además el `TaskInfo` (objeto), la llamada a la <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> método especifica el <xref:System.Threading.AutoResetEvent> espera a que la tarea, un <xref:System.Threading.WaitOrTimerCallback> delegado que representa el `WaitProc` varias devoluciones de llamada, un intervalo de tiempo de espera de un segundo y el método de devolución de llamada .</span><span class="sxs-lookup"><span data-stu-id="370c5-120">In addition to the `TaskInfo` object, the call to the <xref:System.Threading.ThreadPool.RegisterWaitForSingleObject%2A> method specifies the <xref:System.Threading.AutoResetEvent> the task waits on, a <xref:System.Threading.WaitOrTimerCallback> delegate that represents the `WaitProc` callback method, a one-second timeout interval, and multiple callbacks.</span></span>  
  
 <span data-ttu-id="370c5-121">Cuando el subproceso principal señala el <xref:System.Threading.AutoResetEvent> mediante una llamada a su <xref:System.Threading.EventWaitHandle.Set%2A> método, el <xref:System.Threading.WaitOrTimerCallback> se invoca el delegado.</span><span class="sxs-lookup"><span data-stu-id="370c5-121">When the main thread signals the <xref:System.Threading.AutoResetEvent> by calling its <xref:System.Threading.EventWaitHandle.Set%2A> method, the <xref:System.Threading.WaitOrTimerCallback> delegate is invoked.</span></span> <span data-ttu-id="370c5-122">El `WaitProc` método pruebas <xref:System.Threading.RegisteredWaitHandle> para determinar si se ha producido un tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="370c5-122">The `WaitProc` method tests <xref:System.Threading.RegisteredWaitHandle> to determine whether a timeout occurred.</span></span> <span data-ttu-id="370c5-123">Si la devolución de llamada se invocó porque se señaló el identificador de espera, el `WaitProc` anula el registro de método la <xref:System.Threading.RegisteredWaitHandle>, deteniendo aún más las devoluciones de llamada.</span><span class="sxs-lookup"><span data-stu-id="370c5-123">If the callback was invoked because the wait handle was signaled, the `WaitProc` method unregisters the <xref:System.Threading.RegisteredWaitHandle>, stopping further callbacks.</span></span> <span data-ttu-id="370c5-124">En el caso de un tiempo de espera, la tarea sigue esperando.</span><span class="sxs-lookup"><span data-stu-id="370c5-124">In the case of a timeout, the task continues waiting.</span></span> <span data-ttu-id="370c5-125">El `WaitProc` método termina con la impresión de un mensaje en la consola.</span><span class="sxs-lookup"><span data-stu-id="370c5-125">The `WaitProc` method ends by printing a message to the console.</span></span>  
  
 [!code-cpp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CPP/source.cpp#1)]
 [!code-csharp[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/CS/source.cs#1)]
 [!code-vb[System.Threading.ThreadPool RegisterWaitForSingleObject0#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Threading.ThreadPool RegisterWaitForSingleObject0/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/threading/threads-and-threading.md"><span data-ttu-id="370c5-126">Subprocesos y subprocesamiento</span><span class="sxs-lookup"><span data-stu-id="370c5-126">Threads and Threading</span></span></related>
    <related type="Article" href="~/docs/standard/threading/the-managed-thread-pool.md"><span data-ttu-id="370c5-127">Grupo de subprocesos administrado</span><span class="sxs-lookup"><span data-stu-id="370c5-127">The managed thread pool</span></span></related>
  </Docs>
</Type>
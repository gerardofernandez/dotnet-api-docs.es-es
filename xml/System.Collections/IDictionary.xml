<Type Name="IDictionary" FullName="System.Collections.IDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02a6ca46bce48fbdc7b1800f28efc534929e28df" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52600792" /></Metadata><TypeSignature Language="C#" Value="public interface IDictionary : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDictionary implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IDictionary" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDictionary&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDictionary : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type IDictionary = interface&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4caa5-101">Representa una colección no genérica de pares clave-valor.</span><span class="sxs-lookup"><span data-stu-id="4caa5-101">Represents a nongeneric collection of key/value pairs.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-102">El <xref:System.Collections.IDictionary> es la interfaz base para las colecciones no genéricas de pares clave/valor.</span><span class="sxs-lookup"><span data-stu-id="4caa5-102">The <xref:System.Collections.IDictionary> interface is the base interface for nongeneric collections of key/value pairs.</span></span> <span data-ttu-id="4caa5-103">Para obtener la versión genérica de esta interfaz, vea <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="4caa5-103">For the generic version of this interface, see <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4caa5-104">Cada elemento es un par clave/valor almacenado en un <xref:System.Collections.DictionaryEntry> objeto.</span><span class="sxs-lookup"><span data-stu-id="4caa5-104">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span>  
  
 <span data-ttu-id="4caa5-105">Cada par debe tener una clave única.</span><span class="sxs-lookup"><span data-stu-id="4caa5-105">Each pair must have a unique key.</span></span> <span data-ttu-id="4caa5-106">Las implementaciones pueden variar en si permiten que la clave sea nulo.</span><span class="sxs-lookup"><span data-stu-id="4caa5-106">Implementations can vary in whether they allow the key to be null.</span></span>  <span data-ttu-id="4caa5-107">El valor puede ser null y no tiene que ser único.</span><span class="sxs-lookup"><span data-stu-id="4caa5-107">The value can be null and does not have to be unique.</span></span> <span data-ttu-id="4caa5-108">El <xref:System.Collections.IDictionary> interfaz permite que los valores que hay que enumerar y claves contenidas, pero no implica ningún orden determinado.</span><span class="sxs-lookup"><span data-stu-id="4caa5-108">The <xref:System.Collections.IDictionary> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</span></span>  
  
 <span data-ttu-id="4caa5-109"><xref:System.Collections.IDictionary> las implementaciones se dividen en tres categorías: de solo lectura, tamaño fijo, de tamaño variable.</span><span class="sxs-lookup"><span data-stu-id="4caa5-109"><xref:System.Collections.IDictionary> implementations fall into three categories: read-only, fixed-size, variable-size.</span></span> <span data-ttu-id="4caa5-110">Solo lectura <xref:System.Collections.IDictionary> objeto no puede modificarse.</span><span class="sxs-lookup"><span data-stu-id="4caa5-110">A read-only <xref:System.Collections.IDictionary> object cannot be modified.</span></span> <span data-ttu-id="4caa5-111">Un tamaño fijo <xref:System.Collections.IDictionary> objeto no admite la adición o eliminación de elementos, pero permitir la modificación de los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="4caa5-111">A fixed-size <xref:System.Collections.IDictionary> object does not allow the addition or removal of elements, but does allow the modification of existing elements.</span></span> <span data-ttu-id="4caa5-112">Un tamaño variable <xref:System.Collections.IDictionary> objeto permite la adición, eliminación y modificación de elementos.</span><span class="sxs-lookup"><span data-stu-id="4caa5-112">A variable-size <xref:System.Collections.IDictionary> object allows the addition, removal, and modification of elements.</span></span>  
  
 <span data-ttu-id="4caa5-113">El `foreach` instrucción del lenguaje C# (`For Each` en Visual Basic) devuelve un objeto del tipo de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4caa5-113">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="4caa5-114">Puesto que cada elemento de la <xref:System.Collections.IDictionary> objeto es un par clave/valor, el tipo de elemento no es el tipo de la clave o el tipo del valor.</span><span class="sxs-lookup"><span data-stu-id="4caa5-114">Since each element of the <xref:System.Collections.IDictionary> object is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="4caa5-115">En su lugar, el tipo de elemento es <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="4caa5-115">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="4caa5-116">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="4caa5-116">For example:</span></span>  
  
 [!code-cpp[Dictionary#14](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/remarks.cpp#14)]
 [!code-csharp[Dictionary#14](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/remarks.cs#14)]
 [!code-vb[Dictionary#14](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/remarks.vb#14)]  
  
 <span data-ttu-id="4caa5-117">El `foreach` instrucción es un contenedor del enumerador, que permite solo lectura, pero no escribir en la colección.</span><span class="sxs-lookup"><span data-stu-id="4caa5-117">The `foreach` statement is a wrapper around the enumerator, which allows only reading from but not writing to the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-118">En el ejemplo de código siguiente se muestra cómo definir una clase de diccionario simple que implementa el <xref:System.Collections.IDictionary> interfaz.</span><span class="sxs-lookup"><span data-stu-id="4caa5-118">The following code example demonstrates how to define a simple dictionary class that implements the <xref:System.Collections.IDictionary> interface.</span></span>  
  
 [!code-cpp[Dictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#1)]
 [!code-csharp[Dictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#1)]
 [!code-vb[Dictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="4caa5-119">La clase de implementación debe tener un medio para comparar claves.</span><span class="sxs-lookup"><span data-stu-id="4caa5-119">The implementing class must have a means to compare keys.</span></span></para></block>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.ICollection" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit" Usage="iDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4caa5-120"><see cref="T:System.Object" /> que se va a utilizar como clave del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="4caa5-120">The <see cref="T:System.Object" /> to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="4caa5-121"><see cref="T:System.Object" /> que se va a utilizar como valor del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="4caa5-121">The <see cref="T:System.Object" /> to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="4caa5-122">Agrega un elemento con la clave y el valor proporcionados al objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-122">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-123">También puede usar el <xref:System.Collections.IDictionary.Item%2A> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el diccionario (por ejemplo, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="4caa5-123">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="4caa5-124">Sin embargo, si la clave especificada ya existe en el diccionario, al establecer el <xref:System.Collections.IDictionary.Item%2A> propiedad sobrescribe el valor anterior.</span><span class="sxs-lookup"><span data-stu-id="4caa5-124">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="4caa5-125">En cambio, el <xref:System.Collections.IDictionary.Add%2A> método no modifica los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="4caa5-125">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="4caa5-126">Las implementaciones pueden variar en si permiten que la clave se `null`.</span><span class="sxs-lookup"><span data-stu-id="4caa5-126">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-127">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.Add%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4caa5-127">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Add%2A> method.</span></span> <span data-ttu-id="4caa5-128">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-128">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#9](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#9)]
 [!code-csharp[Dictionary#9](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#9)]
 [!code-vb[Dictionary#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4caa5-129">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-129"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4caa5-130">Ya existe un elemento con la misma clave en el objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-130">An element with the same key already exists in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4caa5-131"><see cref="T:System.Collections.IDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4caa5-131">The <see cref="T:System.Collections.IDictionary" /> is read-only.</span></span>  
  
<span data-ttu-id="4caa5-132">O bien</span><span class="sxs-lookup"><span data-stu-id="4caa5-132">-or-</span></span> 
<span data-ttu-id="4caa5-133"><see cref="T:System.Collections.IDictionary" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="4caa5-133">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></exception>
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iDictionary.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4caa5-134">Quita todos los elementos del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-134">Removes all elements from the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4caa5-135">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.Clear%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4caa5-135">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Clear%2A> method.</span></span> <span data-ttu-id="4caa5-136">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-136">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#8](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#8)]
 [!code-csharp[Dictionary#8](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#8)]
 [!code-vb[Dictionary#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4caa5-137">El objeto <see cref="T:System.Collections.IDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4caa5-137">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool" Usage="iDictionary.Contains key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4caa5-138">Clave que se buscará en el objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-138">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></param>
        <summary><span data-ttu-id="4caa5-139">Determina si el objeto <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="4caa5-139">Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="4caa5-140">Es <see langword="true" /> si <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la clave; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-140"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-141">Las implementaciones pueden variar en si permiten que la clave se `null`.</span><span class="sxs-lookup"><span data-stu-id="4caa5-141">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
 <span data-ttu-id="4caa5-142">A partir de .NET Framework 2.0, este método utiliza los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si `item` existe.</span><span class="sxs-lookup"><span data-stu-id="4caa5-142">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether `item` exists.</span></span> <span data-ttu-id="4caa5-143">En las versiones anteriores de .NET Framework, esta determinación se realiza mediante el uso de la <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="4caa5-143">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-144">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.Contains%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4caa5-144">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Contains%2A> method.</span></span> <span data-ttu-id="4caa5-145">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-145">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#5](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#5)]
 [!code-csharp[Dictionary#5](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#5)]
 [!code-vb[Dictionary#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4caa5-146">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-146"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="iDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4caa5-147">Devuelve un objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-147">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <returns><span data-ttu-id="4caa5-148">Objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-148">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-149">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="4caa5-149">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="4caa5-150">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="4caa5-150">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="4caa5-151">Por lo tanto, uso `foreach` se recomienda en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="4caa5-151">Therefore, using `foreach` is recommended instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="4caa5-152">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="4caa5-152">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="4caa5-153">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="4caa5-153">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="4caa5-154"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="4caa5-154"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="4caa5-155">En esta posición, el <xref:System.Collections.IEnumerator.Current%2A> propiedad no está definida.</span><span class="sxs-lookup"><span data-stu-id="4caa5-155">At this position, the <xref:System.Collections.IEnumerator.Current%2A> property is undefined.</span></span> <span data-ttu-id="4caa5-156">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="4caa5-156">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="4caa5-157"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="4caa5-157"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="4caa5-158"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="4caa5-158"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="4caa5-159">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="4caa5-159">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="4caa5-160">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="4caa5-160">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="4caa5-161">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="4caa5-161">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="4caa5-162">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="4caa5-162">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="4caa5-163">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="4caa5-163">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="4caa5-164">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="4caa5-164">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="4caa5-165">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="4caa5-165">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="4caa5-166">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="4caa5-166">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="4caa5-167">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="4caa5-167">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4caa5-168">Obtiene un valor que indica si el objeto <see cref="T:System.Collections.IDictionary" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="4caa5-168">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="4caa5-169">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.IDictionary" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-169"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-170">Una colección con un tamaño fijo no permite la adición o eliminación de elementos después de crea la colección, pero permitir la modificación de los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="4caa5-170">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="4caa5-171">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja los cambios.</span><span class="sxs-lookup"><span data-stu-id="4caa5-171">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-172">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.IsFixedSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4caa5-172">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.IsFixedSize%2A> property.</span></span> <span data-ttu-id="4caa5-173">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-173">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#6](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#6)]
 [!code-csharp[Dictionary#6](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#6)]
 [!code-vb[Dictionary#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4caa5-174">Obtiene un valor que indica si el objeto <see cref="T:System.Collections.IDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4caa5-174">Gets a value indicating whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="4caa5-175">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.IDictionary" /> es de solo lectura; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-175"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-176">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="4caa5-176">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-177">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.IsReadOnly%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4caa5-177">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.IsReadOnly%2A> property.</span></span> <span data-ttu-id="4caa5-178">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-178">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#4](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#4)]
 [!code-csharp[Dictionary#4](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#4)]
 [!code-vb[Dictionary#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4caa5-179">La clave del elemento que se obtiene o establece.</span><span class="sxs-lookup"><span data-stu-id="4caa5-179">The key of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="4caa5-180">Obtiene o establece el elemento con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="4caa5-180">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="4caa5-181">Elemento con la clave especificada o <see langword="null" /> si la clave no existe.</span><span class="sxs-lookup"><span data-stu-id="4caa5-181">The element with the specified key, or <see langword="null" /> if the key does not exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-182">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="4caa5-182">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="4caa5-183">También puede usar el <xref:System.Collections.IDictionary.Item%2A> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el diccionario (por ejemplo, `myCollection["myNonexistentKey"] = myValue`).</span><span class="sxs-lookup"><span data-stu-id="4caa5-183">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the dictionary (for example, `myCollection["myNonexistentKey"] = myValue`).</span></span> <span data-ttu-id="4caa5-184">Sin embargo, si la clave especificada ya existe en el diccionario, al establecer el <xref:System.Collections.IDictionary.Item%2A> propiedad sobrescribe el valor anterior.</span><span class="sxs-lookup"><span data-stu-id="4caa5-184">However, if the specified key already exists in the dictionary, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="4caa5-185">En cambio, el <xref:System.Collections.IDictionary.Add%2A> método no modifica los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="4caa5-185">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="4caa5-186">Las implementaciones pueden variar en si permiten que la clave se `null`.</span><span class="sxs-lookup"><span data-stu-id="4caa5-186">Implementations can vary in whether they allow the key to be `null`.</span></span>  
  
 <span data-ttu-id="4caa5-187">El lenguaje C# utiliza la `this` [esto](~/docs/csharp/language-reference/keywords/this.md) palabra clave para definir los indizadores en lugar de implementar el <xref:System.Collections.IDictionary.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4caa5-187">The C# language uses the `this`[this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.IDictionary.Item%2A> property.</span></span> <span data-ttu-id="4caa5-188">Visual Basic implementa <xref:System.Collections.IDictionary.Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="4caa5-188">Visual Basic implements <xref:System.Collections.IDictionary.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-189">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4caa5-189">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Item%2A> property.</span></span> <span data-ttu-id="4caa5-190">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-190">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#13](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#13)]
 [!code-csharp[Dictionary#13](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#13)]
 [!code-vb[Dictionary#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4caa5-191">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-191"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4caa5-192">La propiedad está establecida y el objeto <see cref="T:System.Collections.IDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4caa5-192">The property is set and the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span>  
  
<span data-ttu-id="4caa5-193">O bien</span><span class="sxs-lookup"><span data-stu-id="4caa5-193">-or-</span></span> 
<span data-ttu-id="4caa5-194">La propiedad está establecida, <paramref name="key" /> no existe en la colección y <see cref="T:System.Collections.IDictionary" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="4caa5-194">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4caa5-195">Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-195">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <value><span data-ttu-id="4caa5-196">Objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-196">An <see cref="T:System.Collections.ICollection" /> object containing the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-197">El orden de las claves en el valor devuelto <xref:System.Collections.ICollection> objeto no está especificado, pero se garantiza que será el mismo orden que los valores correspondientes en el <xref:System.Collections.ICollection> devuelto por la <xref:System.Collections.IDictionary.Values%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4caa5-197">The order of the keys in the returned <xref:System.Collections.ICollection> object is unspecified, but is guaranteed to be the same order as the corresponding values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-198">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.Keys%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4caa5-198">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span> <span data-ttu-id="4caa5-199">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-199">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#10](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#10)]
 [!code-csharp[Dictionary#10](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#10)]
 [!code-vb[Dictionary#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IDictionary.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit" Usage="iDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="4caa5-200">Clave del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="4caa5-200">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="4caa5-201">Quita el elemento con la clave especificada del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-201">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-202">Si el objeto <xref:System.Collections.IDictionary> no contiene ningún elemento con la clave especificada, la interfaz <xref:System.Collections.IDictionary> no sufre ningún cambio.</span><span class="sxs-lookup"><span data-stu-id="4caa5-202">If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged.</span></span> <span data-ttu-id="4caa5-203">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="4caa5-203">No exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-204">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.Remove%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4caa5-204">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Remove%2A> method.</span></span> <span data-ttu-id="4caa5-205">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-205">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#7](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#7)]
 [!code-csharp[Dictionary#7](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#7)]
 [!code-vb[Dictionary#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4caa5-206">El valor de <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-206"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="4caa5-207">El objeto <see cref="T:System.Collections.IDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="4caa5-207">The <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span>  
  
<span data-ttu-id="4caa5-208">O bien</span><span class="sxs-lookup"><span data-stu-id="4caa5-208">-or-</span></span> 
<span data-ttu-id="4caa5-209"><see cref="T:System.Collections.IDictionary" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="4caa5-209">The <see cref="T:System.Collections.IDictionary" /> has a fixed size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.IDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4caa5-210">Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-210">Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <value><span data-ttu-id="4caa5-211">Objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="4caa5-211">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4caa5-212">El orden de los valores en el valor devuelto <xref:System.Collections.ICollection> objeto no está especificado, pero se garantiza que será el mismo orden que las claves correspondientes en el <xref:System.Collections.ICollection> devuelto por la <xref:System.Collections.IDictionary.Keys%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4caa5-212">The order of the values in the returned <xref:System.Collections.ICollection> object is unspecified, but is guaranteed to be the same order as the corresponding keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4caa5-213">En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Collections.IDictionary.Values%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="4caa5-213">The following code example demonstrates how to implement the <xref:System.Collections.IDictionary.Values%2A> property.</span></span> <span data-ttu-id="4caa5-214">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Collections.IDictionary> clase.</span><span class="sxs-lookup"><span data-stu-id="4caa5-214">This code example is part of a larger example provided for the <xref:System.Collections.IDictionary> class.</span></span>  
  
 [!code-cpp[Dictionary#11](~/samples/snippets/cpp/VS_Snippets_CLR/Dictionary/cpp/Dictionary.cpp#11)]
 [!code-csharp[Dictionary#11](~/samples/snippets/csharp/VS_Snippets_CLR/Dictionary/CS/Dictionary.cs#11)]
 [!code-vb[Dictionary#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/Dictionary/VB/Dictionary.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
  </Members>
</Type>
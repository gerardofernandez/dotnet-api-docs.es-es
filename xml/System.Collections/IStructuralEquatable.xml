<Type Name="IStructuralEquatable" FullName="System.Collections.IStructuralEquatable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="48c20add28584c8e5d37f867a88a02cba28814ce" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717186" /></Metadata><TypeSignature Language="C#" Value="public interface IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralEquatable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralEquatable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type IStructuralEquatable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="cfb0e-101">Define métodos para admitir la comparación de objetos y comprobar su igualdad estructural.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-101">Defines methods to support the comparison of objects for structural equality.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfb0e-102">Igualdad estructural significa que dos objetos son iguales porque tienen los mismos valores.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-102">Structural equality means that two objects are equal because they have equal values.</span></span> <span data-ttu-id="cfb0e-103">Difiere de la igualdad de referencia, que indica que dos referencias de objeto son iguales porque hacen referencia al mismo objeto físico.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-103">It differs from reference equality, which indicates that two object references are equal because they reference the same physical object.</span></span> <span data-ttu-id="cfb0e-104">El <xref:System.Collections.IStructuralEquatable> interfaz le permite implementar comparaciones personalizadas para comprobar la igualdad estructural de objetos de colección.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-104">The <xref:System.Collections.IStructuralEquatable> interface enables you to implement customized comparisons to check for the structural equality of collection objects.</span></span> <span data-ttu-id="cfb0e-105">Es decir, puede crear su propia definición de igualdad estructural y especificar que esta definición se usa con un tipo de colección que acepta el <xref:System.Collections.IStructuralEquatable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-105">That is, you can create your own definition of structural equality and specify that this definition be used with a collection type that accepts the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="cfb0e-106">La interfaz tiene dos miembros: <xref:System.Collections.IStructuralEquatable.Equals%2A>, que comprueba la igualdad mediante el uso de un determinado <xref:System.Collections.IEqualityComparer> implementación, y <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, que devuelve los códigos hash idénticos para los objetos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-106">The interface has two members: <xref:System.Collections.IStructuralEquatable.Equals%2A>, which tests for equality by using a specified <xref:System.Collections.IEqualityComparer> implementation, and <xref:System.Collections.IStructuralEquatable.GetHashCode%2A>, which returns identical hash codes for objects that are equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cfb0e-107">El <xref:System.Collections.IStructuralEquatable> interfaz admite solo las comparaciones personalizadas para comprobar su igualdad estructural.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-107">The <xref:System.Collections.IStructuralEquatable> interface supports only custom comparisons for structural equality.</span></span> <span data-ttu-id="cfb0e-108">El <xref:System.Collections.IStructuralComparable> interfaz admite comparaciones estructurales personalizadas para ordenar y clasificar.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-108">The <xref:System.Collections.IStructuralComparable> interface supports custom structural comparisons for sorting and ordering.</span></span>  
  
 <span data-ttu-id="cfb0e-109">.NET Framework también proporciona predeterminada comparadores de igualdad, que son devueltos por la <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> y <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propiedades.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-109">The .NET Framework also provides default equality comparers, which are returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> and <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="cfb0e-110">Para obtener más información, vea el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-110">For more information, see the example.</span></span>  
  
 <span data-ttu-id="cfb0e-111">Las clases de tupla genéricas (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, etc.) y la <xref:System.Array> clase proporcione implementaciones explícitas de la <xref:System.Collections.IStructuralEquatable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-111">The generic tuple classes (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, and so on) and the <xref:System.Array> class provide explicit implementations of the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="cfb0e-112">Conversión (en C#) o convirtiendo (en Visual Basic) de la instancia actual de una matriz o una tupla a un <xref:System.Collections.IStructuralEquatable> valor de la interfaz y proporcionar su <xref:System.Collections.IEqualityComparer> implementación como argumento a la <xref:System.Collections.IStructuralEquatable.Equals%2A> método, puede definir una igualdad personalizada comparación de la matriz o colección.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-112">By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <xref:System.Collections.IStructuralEquatable> interface value and providing your <xref:System.Collections.IEqualityComparer> implementation as an argument to the <xref:System.Collections.IStructuralEquatable.Equals%2A> method, you can define a custom equality comparison for the array or collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cfb0e-113">El comparador de igualdad predeterminado `EqualityComparer<Object>.Default.Equals`, considera que dos `NaN` valores son iguales.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-113">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="cfb0e-114">Sin embargo, en algunos casos, es posible que desee que la comparación de `NaN` los valores de igualdad devolviera el valor `false`, lo que indica que no se pueden comparar los valores.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-114">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="cfb0e-115">En el ejemplo siguiente se define una clase `NanComparer` que implementa la interfaz <xref:System.Collections.IStructuralEquatable> .</span><span class="sxs-lookup"><span data-stu-id="cfb0e-115">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="cfb0e-116">Compara dos objetos <xref:System.Double> o dos <xref:System.Single> valores mediante el operador de igualdad.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-116">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="cfb0e-117">Pasa los valores de cualquier otro tipo al comparador de igualdad predeterminado.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-117">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="cfb0e-118">El ejemplo siguiente crea dos objetos de tupla de 3 idénticos que se componen de tres <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-118">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="cfb0e-119">El valor del segundo componente es <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-119">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cfb0e-120">El ejemplo llama a la <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> llama al método y el <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> método tres veces.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-120">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="cfb0e-121">La primera vez, pasa el comparador de igualdad predeterminado devuelto por la <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-121">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cfb0e-122">La segunda vez, pasa el comparador de igualdad predeterminado devuelto por la <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-122">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cfb0e-123">La tercera vez, pasa personalizado `NanComparer` objeto.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-123">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="cfb0e-124">Como se muestra el resultado del ejemplo, el método tres primeros llama devuelto `true`, mientras que devuelve la llamada cuarta `false`.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-124">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Collections.IEqualityComparer" />
    <altmember cref="T:System.Collections.IStructuralComparable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Object, comparer As IEqualityComparer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj * System.Collections.IEqualityComparer -&gt; bool" Usage="iStructuralEquatable.Equals (other, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="cfb0e-125">Objeto que se va a comparar con la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-125">The object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="cfb0e-126">Un objeto que determina si la instancia actual y <paramref name="other" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-126">An object that determines whether the current instance and <paramref name="other" /> are equal.</span></span></param>
        <summary><span data-ttu-id="cfb0e-127">Determina si un objeto es estructuralmente igual que la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-127">Determines whether an object is structurally equal to the current instance.</span></span></summary>
        <returns><span data-ttu-id="cfb0e-128">Es <see langword="true" /> si los dos objetos son iguales; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-128"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfb0e-129">El <xref:System.Collections.IStructuralEquatable.Equals%2A> método admite la comparación estructural personalizada de matriz y objetos de tupla.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-129">The <xref:System.Collections.IStructuralEquatable.Equals%2A> method supports custom structural comparison of array and tuple objects.</span></span> <span data-ttu-id="cfb0e-130">Este método llama a su vez la `comparer` del objeto <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> método para comparar elementos de matriz individuales o componentes de tupla, empezando por el primer elemento o componente.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-130">This method in turn calls the `comparer` object's <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> method to compare individual array elements or tuple components, starting with the first element or component.</span></span> <span data-ttu-id="cfb0e-131">Las llamadas individuales a <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> final y el <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> método devuelve un valor o una llamada al método que devuelve `false` o después de todos los elementos de la matriz o se han comparado los componentes de la tupla.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-131">The individual calls to <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> end and the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method returns a value either when a method call returns `false` or after all array elements or tuple components have been compared.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cfb0e-132">El comparador de igualdad predeterminado `EqualityComparer<Object>.Default.Equals`, considera que dos `NaN` valores son iguales.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-132">The default equality comparer, `EqualityComparer<Object>.Default.Equals`, considers two `NaN` values to be equal.</span></span> <span data-ttu-id="cfb0e-133">Sin embargo, en algunos casos, es posible que desee que la comparación de `NaN` los valores de igualdad devolviera el valor `false`, lo que indica que no se pueden comparar los valores.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-133">However, in some cases, you may want the comparison of `NaN` values for equality to return `false`, which indicates that the values cannot be compared.</span></span> <span data-ttu-id="cfb0e-134">En el ejemplo siguiente se define una clase `NanComparer` que implementa la interfaz <xref:System.Collections.IStructuralEquatable> .</span><span class="sxs-lookup"><span data-stu-id="cfb0e-134">The following example defines a `NanComparer` class that implements the <xref:System.Collections.IStructuralEquatable> interface.</span></span> <span data-ttu-id="cfb0e-135">Compara dos objetos <xref:System.Double> o dos <xref:System.Single> valores mediante el operador de igualdad.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-135">It compares two <xref:System.Double> or two <xref:System.Single> values by using the equality operator.</span></span> <span data-ttu-id="cfb0e-136">Pasa los valores de cualquier otro tipo al comparador de igualdad predeterminado.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-136">It passes values of any other type to the default equality comparer.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#1)]
 [!code-vb[System.Collections.IStructuralEquatable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#1)]  
  
 <span data-ttu-id="cfb0e-137">El ejemplo siguiente crea dos objetos de tupla de 3 idénticos que se componen de tres <xref:System.Double> valores.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-137">The following example creates two identical 3-tuple objects whose components consist of three <xref:System.Double> values.</span></span> <span data-ttu-id="cfb0e-138">El valor del segundo componente es <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-138">The value of the second component is <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cfb0e-139">El ejemplo llama a la <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> llama al método y el <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> método tres veces.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-139">The example then calls the <xref:System.Tuple%603.Equals%2A?displayProperty=nameWithType> method, and it calls the <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> method three times.</span></span> <span data-ttu-id="cfb0e-140">La primera vez, pasa el comparador de igualdad predeterminado devuelto por la <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-140">The first time, it passes the default equality comparer that is returned by the <xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cfb0e-141">La segunda vez, pasa el comparador de igualdad predeterminado devuelto por la <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-141">The second time, it passes the default equality comparer that is returned by the <xref:System.Collections.StructuralComparisons.StructuralEqualityComparer%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="cfb0e-142">La tercera vez, pasa personalizado `NanComparer` objeto.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-142">The third time, it passes the custom `NanComparer` object.</span></span> <span data-ttu-id="cfb0e-143">Como se muestra el resultado del ejemplo, el método tres primeros llama devuelto `true`, mientras que devuelve la llamada cuarta `false`.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-143">As the output from the example shows, the first three method calls return `true`, whereas the fourth call returns `false`.</span></span>  
  
 [!code-csharp[System.Collections.IStructuralEquatable#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.istructuralequatable/cs/nanexample1.cs#2)]
 [!code-vb[System.Collections.IStructuralEquatable#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.istructuralequatable/vb/nanexample1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparer As IEqualityComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(System::Collections::IEqualityComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : System.Collections.IEqualityComparer -&gt; int" Usage="iStructuralEquatable.GetHashCode comparer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="cfb0e-144">Objeto que calcula el código hash del objeto actual.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-144">An object that computes the hash code of the current object.</span></span></param>
        <summary><span data-ttu-id="cfb0e-145">Devuelve un código hash de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-145">Returns a hash code for the current instance.</span></span></summary>
        <returns><span data-ttu-id="cfb0e-146">Código hash de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-146">The hash code for the current instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cfb0e-147">Implemente este método para devolver los códigos hash personalizado para objetos de colección que corresponden a la comparación personalizada de igualdad estructural proporcionado por el <xref:System.Collections.IStructuralEquatable.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-147">Implement this method to return customized hash codes for collection objects that correspond to the customized comparison for structural equality provided by the <xref:System.Collections.IStructuralEquatable.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="cfb0e-148">Si el <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> devuelve del método <see langword="true" /> para dos objetos, los valores devueltos por la <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> método para los dos objetos también debe ser igual.</span><span class="sxs-lookup"><span data-stu-id="cfb0e-148">If the <see cref="M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)" /> method returns <see langword="true" /> for two objects, the values returned by the <see cref="M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)" /> method for the two objects must also be equal.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="Hashtable" FullName="System.Collections.Hashtable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1d017df520d24fc88f4ec3e923b82b87f684b89e" /><Meta Name="ms.sourcegitcommit" Value="954560a1b131dce1872e29ce5c01cd9f2c927f11" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/11/2019" /><Meta Name="ms.locfileid" Value="54235078" /></Metadata><TypeSignature Language="C#" Value="public class Hashtable : ICloneable, System.Collections.IDictionary, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Hashtable extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.ICloneable, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Hashtable" />
  <TypeSignature Language="VB.NET" Value="Public Class Hashtable&#xA;Implements ICloneable, IDeserializationCallback, IDictionary, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Hashtable : ICloneable, System::Collections::IDictionary, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Hashtable = class&#xA;    interface IDictionary&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Hashtable/HashtableDebugView))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f8043-101">Representa una colección de pares de clave y valor que se organizan por código hash de la clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-101">Represents a collection of key/value pairs that are organized based on the hash code of the key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="f8043-102">Cada elemento es un par clave/valor almacenado en un <xref:System.Collections.DictionaryEntry> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-102">Each element is a key/value pair stored in a <xref:System.Collections.DictionaryEntry> object.</span></span> <span data-ttu-id="f8043-103">No puede ser una clave `null`, pero puede ser un valor.</span><span class="sxs-lookup"><span data-stu-id="f8043-103">A key cannot be `null`, but a value can be.</span></span>  

> [!IMPORTANT]
>  <span data-ttu-id="f8043-104">No se recomienda que utilice el `Hashtable` clase para el nuevo desarrollo.</span><span class="sxs-lookup"><span data-stu-id="f8043-104">We don't recommend that you use the `Hashtable` class for new development.</span></span> <span data-ttu-id="f8043-105">En su lugar, se recomienda que use el tipo genérico <xref:System.Collections.Generic.HashSet%601> clase.</span><span class="sxs-lookup"><span data-stu-id="f8043-105">Instead, we recommend that you use the generic <xref:System.Collections.Generic.HashSet%601> class.</span></span> <span data-ttu-id="f8043-106">Para obtener más información, consulte [no deben usarse las colecciones no genéricas](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) en GitHub.</span><span class="sxs-lookup"><span data-stu-id="f8043-106">For more information, see [Non-generic collections shouldn't be used](https://github.com/dotnet/platform-compat/blob/master/docs/DE0006.md) on GitHub.</span></span>
  
 <span data-ttu-id="f8043-107">Los objetos utilizados como claves por un <xref:System.Collections.Hashtable> es necesario reemplazar el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> método (o el <xref:System.Collections.IHashCodeProvider> interfaz) y el <xref:System.Object.Equals%2A?displayProperty=nameWithType> método (o el <xref:System.Collections.IComparer> interfaz).</span><span class="sxs-lookup"><span data-stu-id="f8043-107">The objects used as keys by a <xref:System.Collections.Hashtable> are required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IHashCodeProvider> interface) and the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method (or the <xref:System.Collections.IComparer> interface).</span></span> <span data-ttu-id="f8043-108">La implementación de métodos e interfaces debe tratar mayúsculas y minúsculas del mismo modo; en caso contrario, el <xref:System.Collections.Hashtable> pueden comportarse de forma incorrecta.</span><span class="sxs-lookup"><span data-stu-id="f8043-108">The implementation of both methods and interfaces must handle case sensitivity the same way; otherwise, the <xref:System.Collections.Hashtable> might behave incorrectly.</span></span> <span data-ttu-id="f8043-109">Por ejemplo, al crear un <xref:System.Collections.Hashtable>, debe usar el <xref:System.Collections.CaseInsensitiveHashCodeProvider> clase (o cualquier entre mayúsculas y minúsculas <xref:System.Collections.IHashCodeProvider> implementación) con el <xref:System.Collections.CaseInsensitiveComparer> clase (o cualquier entre mayúsculas y minúsculas <xref:System.Collections.IComparer> implementación).</span><span class="sxs-lookup"><span data-stu-id="f8043-109">For example, when creating a <xref:System.Collections.Hashtable>, you must use the <xref:System.Collections.CaseInsensitiveHashCodeProvider> class (or any case-insensitive <xref:System.Collections.IHashCodeProvider> implementation) with the <xref:System.Collections.CaseInsensitiveComparer> class (or any case-insensitive <xref:System.Collections.IComparer> implementation).</span></span>  
  
 <span data-ttu-id="f8043-110">Además, estos métodos deben dar los mismos resultados cuando se llama con los mismos parámetros, mientras que la clave existe en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-110">Furthermore, these methods must produce the same results when called with the same parameters while the key exists in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-111">Una alternativa es usar un <xref:System.Collections.Hashtable> constructor con un <xref:System.Collections.IEqualityComparer> parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-111">An alternative is to use a <xref:System.Collections.Hashtable> constructor with an <xref:System.Collections.IEqualityComparer> parameter.</span></span> <span data-ttu-id="f8043-112">Si la igualdad de clave fuera simplemente igualdad de referencia, la implementación heredada de <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> y <xref:System.Object.Equals%2A?displayProperty=nameWithType> sería suficiente.</span><span class="sxs-lookup"><span data-stu-id="f8043-112">If key equality were simply reference equality, the inherited implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> would suffice.</span></span>  
  
 <span data-ttu-id="f8043-113">Objetos de clave deben ser inmutable, siempre se utilizan como claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-113">Key objects must be immutable as long as they are used as keys in the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="f8043-114">Cuando se agrega un elemento a la <xref:System.Collections.Hashtable>, el elemento se coloca en un depósito en función del código hash de la clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-114">When an element is added to the <xref:System.Collections.Hashtable>, the element is placed into a bucket based on the hash code of the key.</span></span> <span data-ttu-id="f8043-115">Las búsquedas subsiguientes de la clave de usar el código hash de la clave para buscar en sólo un depósito determinado, lo que reduce sustancialmente el número de comparaciones claves necesarios para buscar un elemento.</span><span class="sxs-lookup"><span data-stu-id="f8043-115">Subsequent lookups of the key use the hash code of the key to search in only one particular bucket, thus substantially reducing the number of key comparisons required to find an element.</span></span>  
  
 <span data-ttu-id="f8043-116">El factor de carga de un <xref:System.Collections.Hashtable> determina la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-116">The load factor of a <xref:System.Collections.Hashtable> determines the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-117">Factores de carga más pequeños provocar tiempos de más rápido promedio búsqueda a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-117">Smaller load factors cause faster average lookup times at the cost of increased memory consumption.</span></span> <span data-ttu-id="f8043-118">El factor de carga predeterminado de 1,0 suele ofrece el mejor equilibrio entre velocidad y tamaño.</span><span class="sxs-lookup"><span data-stu-id="f8043-118">The default load factor of 1.0 generally provides the best balance between speed and size.</span></span> <span data-ttu-id="f8043-119">También puede ser un factor de carga diferentes que se especificó cuando la <xref:System.Collections.Hashtable> se crea.</span><span class="sxs-lookup"><span data-stu-id="f8043-119">A different load factor can also be specified when the <xref:System.Collections.Hashtable> is created.</span></span>  
  
 <span data-ttu-id="f8043-120">Cuando se agregan elementos a un <xref:System.Collections.Hashtable>, el factor de carga real de la <xref:System.Collections.Hashtable> aumenta.</span><span class="sxs-lookup"><span data-stu-id="f8043-120">As elements are added to a <xref:System.Collections.Hashtable>, the actual load factor of the <xref:System.Collections.Hashtable> increases.</span></span> <span data-ttu-id="f8043-121">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos en los <xref:System.Collections.Hashtable> aumenta automáticamente hasta el número primo más pequeño que sea mayor que el doble del número actual de <xref:System.Collections.Hashtable> depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-121">When the actual load factor reaches the specified load factor, the number of buckets in the <xref:System.Collections.Hashtable> is automatically increased to the smallest prime number that is larger than twice the current number of <xref:System.Collections.Hashtable> buckets.</span></span>  
  
 <span data-ttu-id="f8043-122">Cada objeto de clave en el <xref:System.Collections.Hashtable> debe proporcionar su propia función hash, que se puede acceder mediante una llamada a <xref:System.Collections.Hashtable.GetHash%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-122">Each key object in the <xref:System.Collections.Hashtable> must provide its own hash function, which can be accessed by calling <xref:System.Collections.Hashtable.GetHash%2A>.</span></span> <span data-ttu-id="f8043-123">Sin embargo, cualquier objeto que implemente <xref:System.Collections.IHashCodeProvider> puede pasarse a una <xref:System.Collections.Hashtable> constructor y que se usa la función hash para todos los objetos en la tabla.</span><span class="sxs-lookup"><span data-stu-id="f8043-123">However, any object implementing <xref:System.Collections.IHashCodeProvider> can be passed to a <xref:System.Collections.Hashtable> constructor, and that hash function is used for all objects in the table.</span></span>  
  
 <span data-ttu-id="f8043-124">La capacidad de un <xref:System.Collections.Hashtable> es el número de elementos de la <xref:System.Collections.Hashtable> puede contener.</span><span class="sxs-lookup"><span data-stu-id="f8043-124">The capacity of a <xref:System.Collections.Hashtable> is the number of elements the <xref:System.Collections.Hashtable> can hold.</span></span> <span data-ttu-id="f8043-125">Cuando se agregan elementos a un <xref:System.Collections.Hashtable>, automáticamente se aumenta la capacidad según sea necesario mediante la reasignación.</span><span class="sxs-lookup"><span data-stu-id="f8043-125">As elements are added to a <xref:System.Collections.Hashtable>, the capacity is automatically increased as required through reallocation.</span></span>  
  
 <span data-ttu-id="f8043-126">**Solo para .NET framework:** Para gran <xref:System.Collections.Hashtable> objetos, puede aumentar la capacidad máxima de 2 millones de elementos en un sistema de 64 bits mediante el establecimiento la `enabled` atributo de la [ `<gcAllowVeryLargeObjects>` ](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) elemento de configuración a `true` en el entorno de tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="f8043-126">**.NET Framework only:** For very large <xref:System.Collections.Hashtable> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the [`<gcAllowVeryLargeObjects>`](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="f8043-127">El `foreach` instrucción del lenguaje C# (`For Each` en Visual Basic) devuelve un objeto del tipo de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-127">The `foreach` statement of the C# language (`For Each` in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="f8043-128">Puesto que cada elemento de la <xref:System.Collections.Hashtable> es un par clave/valor, el tipo de elemento no es el tipo de la clave o el tipo del valor.</span><span class="sxs-lookup"><span data-stu-id="f8043-128">Since each element of the <xref:System.Collections.Hashtable> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="f8043-129">En su lugar, el tipo de elemento es <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="f8043-129">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span> <span data-ttu-id="f8043-130">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="f8043-130">For example:</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/remarks.cpp#01)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/remarks.cs#01)]
 [!code-vb[System.Collections.Hashtable_ClassExample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/remarks.vb#01)]  
  
 <span data-ttu-id="f8043-131">El `foreach` instrucción es un contenedor del enumerador, que sólo permite la lectura desde no escribir en la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-131">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
 <span data-ttu-id="f8043-132">Dado que serializar y deserializar un enumerador para un <xref:System.Collections.Hashtable> puede hacer que los elementos que se va a convertirse en reordenar, no es posible continuar la enumeración sin llamar a la <xref:System.Collections.IEnumerator.Reset%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-132">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f8043-133">Dado que las claves se pueden heredar y su comportamiento puede cambiar, no se puede garantizar su unicidad absoluta mediante comparaciones utilizando el <xref:System.Type.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-133">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-134">El ejemplo siguiente muestra cómo crear, inicializar y realizar varias funciones para un <xref:System.Collections.Hashtable> y cómo imprimir sus claves y valores.</span><span class="sxs-lookup"><span data-stu-id="f8043-134">The following example shows how to create, initialize and perform various functions to a <xref:System.Collections.Hashtable> and how to print out its keys and values.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cpp/hashtable_example.cpp#00)]
 [!code-csharp[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/cs/hashtable_example.cs#00)]
 [!code-vb[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ClassExample/vb/hashtable_example.vb#00)]
 [!code-powershell[System.Collections.Hashtable_ClassExample#00](~/samples/snippets/powershell/VS_Snippets_CLR_System/system.collections.hashtable.class/ps/hashtable.ps1#00)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f8043-135"><see cref="T:System.Collections.Hashtable" /> es seguro para su uso por varios subprocesos de lectura y un único subproceso de escritura de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-135"><see cref="T:System.Collections.Hashtable" /> is thread safe for use by multiple reader threads and a single writing thread.</span></span> <span data-ttu-id="f8043-136">Es seguro para subprocesos para multiproceso cuando use solo uno de los subprocesos realizan operaciones de escritura (actualización), lo que permite lecturas sin bloqueo siempre que los escritores se serializan en el <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-136">It is thread safe for multi-thread use when only one of the threads perform write (update) operations, which allows for lock-free reads provided that the writers are serialized to the <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="f8043-137">Para admitir varios sistemas de escritura en todas las operaciones en el <see cref="T:System.Collections.Hashtable" /> debe realizarse a través del contenedor devuelto por el <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> método, proporcionado que no hay ningún subproceso leyendo el <see cref="T:System.Collections.Hashtable" /> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-137">To support multiple writers all operations on the <see cref="T:System.Collections.Hashtable" /> must be done through the wrapper returned by the <see cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" /> method, provided that there are no threads reading the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="f8043-138">Enumerar una colección no es un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-138">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="f8043-139">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="f8043-139">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f8043-140">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-140">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="T:System.Collections.IHashCodeProvider" />
    <altmember cref="M:System.Object.GetHashCode" />
    <altmember cref="M:System.Object.Equals(System.Object)" />
    <altmember cref="T:System.Collections.DictionaryEntry" />
    <altmember cref="T:System.Collections.Generic.Dictionary`2" />
    <altmember cref="T:System.Collections.IEqualityComparer" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f8043-141">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-141">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8043-142">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial, el factor de carga, el proveedor de código hash y el comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-142">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity, load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-143">Capacidad de una tabla hash se utiliza para calcular el número óptimo de depósitos de la tabla hash según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-143">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="f8043-144">Automáticamente se aumenta la capacidad según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="f8043-144">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="f8043-145">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-145">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-146">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-146">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-147">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-147">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-148">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-148">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-149">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-149">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-150">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-150">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-151">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-151">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-152">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-152">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-153">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-153">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-154">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-154">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable d" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f8043-155">Objeto <see cref="T:System.Collections.IDictionary" /> que debe copiarse a un nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-155">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <summary><span data-ttu-id="f8043-156">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Hashtable" /> copiando los elementos del diccionario especificado en el nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-156">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="f8043-157">El nuevo objeto <see cref="T:System.Collections.Hashtable" /> tiene una capacidad inicial igual al número de elementos copiados, y utiliza el factor de carga, el proveedor de código hash y comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-157">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-158">La capacidad inicial se establece en el número de elementos en el diccionario de origen.</span><span class="sxs-lookup"><span data-stu-id="f8043-158">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="f8043-159">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-159">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-160">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-160">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-161">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-161">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-162">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-162">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-163">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-163">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-164">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-164">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-165">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-165">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-166">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-166">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-167">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-167">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-168">Los elementos de la nueva <xref:System.Collections.Hashtable> se ordenan en el mismo orden en que el enumerador recorre el <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-168">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="f8043-169">Este constructor es O (`n`) operación, donde `n` es el número de elementos de la `d` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-169">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-170">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-170">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-171"><paramref name="d" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-171"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable equalityComparer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="equalityComparer"><span data-ttu-id="f8043-172">Objeto <see cref="T:System.Collections.IEqualityComparer" /> que define el proveedor de código hash y el comparador que se van a utilizar con el objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-172">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="f8043-173">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-173">-or-</span></span> 
 <span data-ttu-id="f8043-174"><see langword="null" /> para utilizar el proveedor de código hash y el comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-174"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="f8043-175">El proveedor de código hash predeterminado es la implementación del método <see cref="M:System.Object.GetHashCode" /> de cada clave y el comparador predeterminado es la implementación del método <see cref="M:System.Object.Equals(System.Object)" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-175">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-176">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial y el factor de carga predeterminados, y el objeto <see cref="T:System.Collections.IEqualityComparer" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f8043-176">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-177">Capacidad de una tabla hash se utiliza para calcular el número óptimo de depósitos de la tabla hash según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-177">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="f8043-178">Automáticamente se aumenta la capacidad según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="f8043-178">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="f8043-179">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-179">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-180">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-180">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-181">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-181">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-182">La <xref:System.Collections.IEqualityComparer> objeto incluye el proveedor de código hash y el comparador.</span><span class="sxs-lookup"><span data-stu-id="f8043-182">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="f8043-183">Si un <xref:System.Collections.IEqualityComparer> se utiliza en el <xref:System.Collections.Hashtable> constructor, los objetos utilizados como claves en el <xref:System.Collections.Hashtable> objeto no es necesario reemplazar el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> y <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="f8043-183">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f8043-184">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-184">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-185">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-185">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-186">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-186">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-187">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-187">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-188">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-188">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-189">El <xref:System.Collections.IEqualityComparer> habilita escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-189">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-190">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-190">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-191">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-191">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="f8043-192">Número aproximado de elementos que el objeto <see cref="T:System.Collections.Hashtable" /> puede contener inicialmente.</span><span class="sxs-lookup"><span data-stu-id="f8043-192">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <summary><span data-ttu-id="f8043-193">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial especificada, y el factor de carga, el proveedor de código hash y el comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-193">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, and the default load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-194">Especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-194">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-195">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-195">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-196">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-196">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-197">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-197">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-198">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-198">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-199">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-199">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-200">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-200">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-201">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-201">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-202">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-202">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-203">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-203">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-204">Este constructor es O (`n`) operación, donde `n` es `capacity`.</span><span class="sxs-lookup"><span data-stu-id="f8043-204">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-205">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-205">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-206"><paramref name="capacity" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="f8043-206"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f8043-207">Objeto <see cref="T:System.Collections.IDictionary" /> que debe copiarse a un nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-207">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="f8043-208">Objeto <see cref="T:System.Collections.IEqualityComparer" /> que define el proveedor de código hash y el comparador que se van a usar con <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-208">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="f8043-209">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-209">-or-</span></span> 
 <span data-ttu-id="f8043-210"><see langword="null" /> para utilizar el proveedor de código hash y el comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-210"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="f8043-211">El proveedor de código hash predeterminado es la implementación del método <see cref="M:System.Object.GetHashCode" /> de cada clave y el comparador predeterminado es la implementación del método <see cref="M:System.Object.Equals(System.Object)" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-211">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-212">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Hashtable" /> copiando los elementos del diccionario especificado en un nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-212">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="f8043-213">El nuevo objeto <see cref="T:System.Collections.Hashtable" /> tiene una capacidad inicial igual al número de elementos copiados, y utiliza el factor de carga predeterminado y el objeto <see cref="T:System.Collections.IEqualityComparer" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="f8043-213">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor and the specified <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-214">La capacidad inicial se establece en el número de elementos en el diccionario de origen.</span><span class="sxs-lookup"><span data-stu-id="f8043-214">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="f8043-215">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-215">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-216">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-216">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-217">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-217">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-218">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-218">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-219">La <xref:System.Collections.IEqualityComparer> objeto incluye el proveedor de código hash y el comparador.</span><span class="sxs-lookup"><span data-stu-id="f8043-219">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="f8043-220">Si un <xref:System.Collections.IEqualityComparer> se utiliza en el <xref:System.Collections.Hashtable> constructor, los objetos utilizados como claves en el <xref:System.Collections.Hashtable> objeto no es necesario reemplazar el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> y <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="f8043-220">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f8043-221">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-221">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-222">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-222">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-223">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-223">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-224">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-224">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-225">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-225">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-226">El <xref:System.Collections.IEqualityComparer> habilita escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-226">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-227">Los elementos de la nueva <xref:System.Collections.Hashtable> se ordenan en el mismo orden en que el enumerador recorre el <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-227">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="f8043-228">Este constructor es O (`n`) operación, donde `n` es el número de elementos de la `d` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-228">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-229">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-229">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-230"><paramref name="d" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-230"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f8043-231">Objeto <see cref="T:System.Collections.IDictionary" /> que debe copiarse a un nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-231">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="f8043-232">Número incluido en el intervalo de 0,1 a 1,0 que se multiplica por el valor predeterminado que proporciona el mejor rendimiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-232">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="f8043-233">El resultado es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-233">The result is the maximum ratio of elements to buckets.</span></span></param>
        <summary><span data-ttu-id="f8043-234">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Hashtable" /> copiando los elementos del diccionario especificado en el nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-234">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="f8043-235">El nuevo objeto <see cref="T:System.Collections.Hashtable" /> tiene una capacidad inicial igual al número de elementos copiados, utiliza el factor de carga especificado, y el proveedor de código hash y comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-235">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, and the default hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-236">La capacidad inicial se establece en el número de elementos en el diccionario de origen.</span><span class="sxs-lookup"><span data-stu-id="f8043-236">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="f8043-237">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-237">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-238">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-238">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-239">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-239">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="f8043-240">Un factor de carga de 1,0 es el mejor equilibrio entre velocidad y tamaño.</span><span class="sxs-lookup"><span data-stu-id="f8043-240">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="f8043-241">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-241">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-242">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-242">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-243">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-243">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-244">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-244">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-245">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-245">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-246">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-246">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-247">Los elementos de la nueva <xref:System.Collections.Hashtable> se ordenan en el mismo orden en que el enumerador recorre el <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-247">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="f8043-248">Este constructor es O (`n`) operación, donde `n` es el número de elementos de la `d` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-248">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-249">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-249">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-250"><paramref name="d" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-250"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-251"><paramref name="loadFactor" /> es menor que 0,1.</span><span class="sxs-lookup"><span data-stu-id="f8043-251"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="f8043-252">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-252">-or-</span></span> 
 <span data-ttu-id="f8043-253"><paramref name="loadFactor" /> es mayor que 1,0.</span><span class="sxs-lookup"><span data-stu-id="f8043-253"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="hcp"><span data-ttu-id="f8043-254">Objeto <see cref="T:System.Collections.IHashCodeProvider" /> que suministra los códigos hash de todas las claves del objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-254">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" /> object.</span></span>  
  
<span data-ttu-id="f8043-255">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-255">-or-</span></span> 
 <span data-ttu-id="f8043-256"><see langword="null" /> para utilizar el proveedor predeterminado de código hash, que es la implementación de <see cref="M:System.Object.GetHashCode" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-256"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="f8043-257">Objeto <see cref="T:System.Collections.IComparer" /> que se va a usar para determinar si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-257">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="f8043-258">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-258">-or-</span></span> 
 <span data-ttu-id="f8043-259"><see langword="null" /> para utilizar el comparador predeterminado, que es la implementación de cada clave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-259"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-260">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial y el factor de carga predeterminados, y el proveedor de código hash y el comparador especificados.</span><span class="sxs-lookup"><span data-stu-id="f8043-260">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the default initial capacity and load factor, and the specified hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-261">Capacidad de una tabla hash se utiliza para calcular el número óptimo de depósitos de la tabla hash según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-261">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="f8043-262">Automáticamente se aumenta la capacidad según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="f8043-262">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="f8043-263">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-263">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-264">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-264">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-265">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-265">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-266">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-266">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-267">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-267">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-268">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-268">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-269">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-269">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-270">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-270">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-271">El proveedor de código hash y el comparador personalizado permiten escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-271">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-272">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-272">This constructor is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-273">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-273">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CPP/hashtable_ctor.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/CS/hashtable_ctor.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctor/VB/hashtable_ctor.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="f8043-274">Número aproximado de elementos que el objeto <see cref="T:System.Collections.Hashtable" /> puede contener inicialmente.</span><span class="sxs-lookup"><span data-stu-id="f8043-274">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="f8043-275">Objeto <see cref="T:System.Collections.IEqualityComparer" /> que define el proveedor de código hash y el comparador que se van a usar con <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-275">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="f8043-276">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-276">-or-</span></span> 
 <span data-ttu-id="f8043-277"><see langword="null" /> para utilizar el proveedor de código hash y el comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-277"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="f8043-278">El proveedor de código hash predeterminado es la implementación del método <see cref="M:System.Object.GetHashCode" /> de cada clave y el comparador predeterminado es la implementación del método <see cref="M:System.Object.Equals(System.Object)" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-278">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-279">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial y el objeto <see cref="T:System.Collections.IEqualityComparer" /> especificados, y el factor de carga predeterminado.</span><span class="sxs-lookup"><span data-stu-id="f8043-279">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and <see cref="T:System.Collections.IEqualityComparer" />, and the default load factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-280">Especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-280">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-281">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-281">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-282">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-282">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-283">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-283">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-284">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-284">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-285">La <xref:System.Collections.IEqualityComparer> objeto incluye el proveedor de código hash y el comparador.</span><span class="sxs-lookup"><span data-stu-id="f8043-285">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="f8043-286">Si un <xref:System.Collections.IEqualityComparer> se utiliza en el <xref:System.Collections.Hashtable> constructor, los objetos utilizados como claves en el <xref:System.Collections.Hashtable> no es necesario reemplazar el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> y <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="f8043-286">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f8043-287">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-287">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-288">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-288">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-289">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-289">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-290">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-290">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-291">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-291">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-292">El <xref:System.Collections.IEqualityComparer> habilita escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-292">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-293">Este constructor es O (`n`) operación, donde `n` es el `capacity` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-293">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-294">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-294">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-295"><paramref name="capacity" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="f8043-295"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="f8043-296">Número aproximado de elementos que el objeto <see cref="T:System.Collections.Hashtable" /> puede contener inicialmente.</span><span class="sxs-lookup"><span data-stu-id="f8043-296">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="f8043-297">Número incluido en el intervalo de 0,1 a 1,0 que se multiplica por el valor predeterminado que proporciona el mejor rendimiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-297">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="f8043-298">El resultado es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-298">The result is the maximum ratio of elements to buckets.</span></span></param>
        <summary><span data-ttu-id="f8043-299">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial y el factor de carga especificados, y el proveedor de código hash y el comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-299">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity and load factor, and the default hash code provider and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-300">Especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-300">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-301">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-301">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-302">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-302">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-303">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-303">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="f8043-304">Un factor de carga de 1,0 es el mejor equilibrio entre velocidad y tamaño.</span><span class="sxs-lookup"><span data-stu-id="f8043-304">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="f8043-305">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-305">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-306">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-306">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-307">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-307">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-308">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-308">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-309">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-309">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-310">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-310">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-311">Este constructor es O (`n`) operación, donde `n` es el `capacity` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-311">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-312">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-312">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-313"><paramref name="capacity" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="f8043-313"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="f8043-314">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-314">-or-</span></span> 
 <span data-ttu-id="f8043-315"><paramref name="loadFactor" /> es menor que 0,1.</span><span class="sxs-lookup"><span data-stu-id="f8043-315"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="f8043-316">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-316">-or-</span></span> 
 <span data-ttu-id="f8043-317"><paramref name="loadFactor" /> es mayor que 1,0.</span><span class="sxs-lookup"><span data-stu-id="f8043-317"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8043-318"><paramref name="capacity" /> está produciendo un desbordamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-318"><paramref name="capacity" /> is causing an overflow.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Hashtable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Hashtable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f8043-319">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información que se requiere para serializar el objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-319">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="f8043-320">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada al <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-320">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="f8043-321">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> que es serializable, utilizando los objetos <see cref="T:System.Runtime.Serialization.SerializationInfo" /> y <see cref="T:System.Runtime.Serialization.StreamingContext" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="f8043-321">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class that is serializable using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-322">Capacidad de una tabla hash se utiliza para calcular el número óptimo de depósitos de la tabla hash según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-322">A hash table's capacity is used to calculate the optimal number of hash table buckets based on the load factor.</span></span> <span data-ttu-id="f8043-323">Automáticamente se aumenta la capacidad según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="f8043-323">Capacity is automatically increased as required.</span></span>  
  
 <span data-ttu-id="f8043-324">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-324">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-325">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-325">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-326">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-326">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-327">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-327">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-328">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-328">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-329">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-329">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-330">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-330">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-331">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-331">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-332">Este constructor es O (`n`) operación, donde `n` es <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-332">This constructor is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="f8043-333">Dado que serializar y deserializar un enumerador para un <xref:System.Collections.Hashtable> puede hacer que los elementos que se va a convertirse en reordenar, no es posible continuar la enumeración sin llamar a la <xref:System.Collections.IEnumerator.Reset%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-333">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-334"><paramref name="info" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-334"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f8043-335">Objeto <see cref="T:System.Collections.IDictionary" /> que debe copiarse a un nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-335">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="hcp"><span data-ttu-id="f8043-336">Objeto <see cref="T:System.Collections.IHashCodeProvider" /> que suministra los códigos hash de todas las claves de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-336">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="f8043-337">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-337">-or-</span></span> 
 <span data-ttu-id="f8043-338"><see langword="null" /> para utilizar el proveedor predeterminado de código hash, que es la implementación de <see cref="M:System.Object.GetHashCode" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-338"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="f8043-339">Objeto <see cref="T:System.Collections.IComparer" /> que se va a usar para determinar si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-339">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="f8043-340">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-340">-or-</span></span> 
 <span data-ttu-id="f8043-341"><see langword="null" /> para utilizar el comparador predeterminado, que es la implementación de cada clave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-341"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-342">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Hashtable" /> copiando los elementos del diccionario especificado en el nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-342">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="f8043-343">El nuevo objeto <see cref="T:System.Collections.Hashtable" /> tiene una capacidad inicial igual al número de elementos copiados, utiliza el factor de carga predeterminado, y el proveedor de código hash y comparador especificados.</span><span class="sxs-lookup"><span data-stu-id="f8043-343">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the default load factor, and the specified hash code provider and comparer.</span></span> <span data-ttu-id="f8043-344">Esta API está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="f8043-344">This API is obsolete.</span></span> <span data-ttu-id="f8043-345">Para una alternativa, vea <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-345">For an alternative, see <see cref="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Collections.IEqualityComparer)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-346">La capacidad inicial se establece en el número de elementos en el diccionario de origen.</span><span class="sxs-lookup"><span data-stu-id="f8043-346">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="f8043-347">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-347">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-348">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-348">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-349">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-349">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-350">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-350">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-351">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-351">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-352">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-352">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-353">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-353">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-354">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-354">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-355">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-355">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-356">El proveedor de código hash y el comparador personalizado permiten escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-356">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-357">Los elementos de la nueva <xref:System.Collections.Hashtable> se ordenan en el mismo orden en que el enumerador recorre el <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-357">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="f8043-358">Este constructor es O (`n`) operación, donde `n` es el número de elementos de la `d` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-358">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-359">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-359">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CPP/hashtable_ctordictionary.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/CS/hashtable_ctordictionary.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionary#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionary/VB/hashtable_ctordictionary.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-360"><paramref name="d" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-360"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f8043-361">Objeto <see cref="T:System.Collections.IDictionary" /> que debe copiarse a un nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-361">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="f8043-362">Número incluido en el intervalo de 0,1 a 1,0 que se multiplica por el valor predeterminado que proporciona el mejor rendimiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-362">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="f8043-363">El resultado es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-363">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="f8043-364">Objeto <see cref="T:System.Collections.IEqualityComparer" /> que define el proveedor de código hash y el comparador que se van a usar con <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-364">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="f8043-365">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-365">-or-</span></span> 
 <span data-ttu-id="f8043-366"><see langword="null" /> para utilizar el proveedor de código hash y el comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-366"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="f8043-367">El proveedor de código hash predeterminado es la implementación del método <see cref="M:System.Object.GetHashCode" /> de cada clave y el comparador predeterminado es la implementación del método <see cref="M:System.Object.Equals(System.Object)" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-367">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-368">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Hashtable" /> copiando los elementos del diccionario especificado en el nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-368">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="f8043-369">El nuevo objeto <see cref="T:System.Collections.Hashtable" /> tiene una capacidad inicial igual al número de elementos copiados, y utiliza el factor de carga y el objeto <see cref="T:System.Collections.IEqualityComparer" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="f8043-369">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor and <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-370">La capacidad inicial se establece en el número de elementos en el diccionario de origen.</span><span class="sxs-lookup"><span data-stu-id="f8043-370">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="f8043-371">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-371">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-372">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-372">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-373">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-373">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="f8043-374">Un factor de carga de 1,0 es el mejor equilibrio entre velocidad y tamaño.</span><span class="sxs-lookup"><span data-stu-id="f8043-374">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="f8043-375">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-375">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-376">La <xref:System.Collections.IEqualityComparer> objeto incluye el proveedor de código hash y el comparador.</span><span class="sxs-lookup"><span data-stu-id="f8043-376">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="f8043-377">Si un <xref:System.Collections.IEqualityComparer> se utiliza en el <xref:System.Collections.Hashtable> constructor, los objetos utilizados como claves en el <xref:System.Collections.Hashtable> objeto no es necesario reemplazar el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> y <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="f8043-377">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> object are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f8043-378">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-378">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-379">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-379">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-380">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-380">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-381">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-381">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-382">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-382">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-383">El <xref:System.Collections.IEqualityComparer> habilita escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-383">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-384">Los elementos de la nueva <xref:System.Collections.Hashtable> se ordenan en el mismo orden en que el enumerador recorre el <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-384">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="f8043-385">Este constructor es O (`n`) operación, donde `n` es el número de elementos de la `d` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-385">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-386">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-386">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-387"><paramref name="d" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-387"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-388"><paramref name="loadFactor" /> es menor que 0,1.</span><span class="sxs-lookup"><span data-stu-id="f8043-388"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="f8043-389">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-389">-or-</span></span> 
 <span data-ttu-id="f8043-390"><paramref name="loadFactor" /> es mayor que 1,0.</span><span class="sxs-lookup"><span data-stu-id="f8043-390"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(int, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="f8043-391">Número aproximado de elementos que el objeto <see cref="T:System.Collections.Hashtable" /> puede contener inicialmente.</span><span class="sxs-lookup"><span data-stu-id="f8043-391">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="hcp"><span data-ttu-id="f8043-392">Objeto <see cref="T:System.Collections.IHashCodeProvider" /> que suministra los códigos hash de todas las claves de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-392">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="f8043-393">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-393">-or-</span></span> 
 <span data-ttu-id="f8043-394"><see langword="null" /> para utilizar el proveedor predeterminado de código hash, que es la implementación de <see cref="M:System.Object.GetHashCode" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-394"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="f8043-395">Objeto <see cref="T:System.Collections.IComparer" /> que se va a usar para determinar si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-395">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="f8043-396">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-396">-or-</span></span> 
 <span data-ttu-id="f8043-397"><see langword="null" /> para utilizar el comparador predeterminado, que es la implementación de cada clave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-397"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-398">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial, el proveedor de código hash y el comparador especificados, y el factor de carga predeterminado.</span><span class="sxs-lookup"><span data-stu-id="f8043-398">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, hash code provider, comparer, and the default load factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-399">Especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-399">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-400">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-400">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-401">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-401">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-402">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-402">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span>  
  
 <span data-ttu-id="f8043-403">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-403">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-404">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-404">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-405">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-405">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-406">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-406">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-407">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-407">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-408">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-408">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-409">El proveedor de código hash y el comparador personalizado permiten escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-409">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-410">Este constructor es O (`n`) operación, donde `n` es el `capacity` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-410">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-411">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-411">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CPP/hashtable_ctorint.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/CS/hashtable_ctorint.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorInt#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorInt/VB/hashtable_ctorint.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-412"><paramref name="capacity" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="f8043-412"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IEqualityComparer equalityComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IEqualityComparer equalityComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, equalityComparer As IEqualityComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IEqualityComparer ^ equalityComparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IEqualityComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, equalityComparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="equalityComparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="f8043-413">Número aproximado de elementos que el objeto <see cref="T:System.Collections.Hashtable" /> puede contener inicialmente.</span><span class="sxs-lookup"><span data-stu-id="f8043-413">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="f8043-414">Número incluido en el intervalo de 0,1 a 1,0 que se multiplica por el valor predeterminado que proporciona el mejor rendimiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-414">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="f8043-415">El resultado es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-415">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="equalityComparer"><span data-ttu-id="f8043-416">Objeto <see cref="T:System.Collections.IEqualityComparer" /> que define el proveedor de código hash y el comparador que se van a usar con <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-416">The <see cref="T:System.Collections.IEqualityComparer" /> object that defines the hash code provider and the comparer to use with the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="f8043-417">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-417">-or-</span></span> 
 <span data-ttu-id="f8043-418"><see langword="null" /> para utilizar el proveedor de código hash y el comparador predeterminados.</span><span class="sxs-lookup"><span data-stu-id="f8043-418"><see langword="null" /> to use the default hash code provider and the default comparer.</span></span> <span data-ttu-id="f8043-419">El proveedor de código hash predeterminado es la implementación del método <see cref="M:System.Object.GetHashCode" /> de cada clave y el comparador predeterminado es la implementación del método <see cref="M:System.Object.Equals(System.Object)" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-419">The default hash code provider is each key's implementation of <see cref="M:System.Object.GetHashCode" /> and the default comparer is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-420">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial, el factor de carga y el objeto <see cref="T:System.Collections.IEqualityComparer" /> especificados.</span><span class="sxs-lookup"><span data-stu-id="f8043-420">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, and <see cref="T:System.Collections.IEqualityComparer" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-421">Especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-421">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-422">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-422">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-423">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-423">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-424">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-424">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="f8043-425">Un factor de carga de 1,0 es el mejor equilibrio entre velocidad y tamaño.</span><span class="sxs-lookup"><span data-stu-id="f8043-425">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="f8043-426">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-426">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-427">La <xref:System.Collections.IEqualityComparer> objeto incluye el proveedor de código hash y el comparador.</span><span class="sxs-lookup"><span data-stu-id="f8043-427">The <xref:System.Collections.IEqualityComparer> object includes both the hash code provider and the comparer.</span></span> <span data-ttu-id="f8043-428">Si un <xref:System.Collections.IEqualityComparer> se utiliza en el <xref:System.Collections.Hashtable> constructor, los objetos utilizados como claves en el <xref:System.Collections.Hashtable> no es necesario reemplazar el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> y <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="f8043-428">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f8043-429">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-429">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-430">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-430">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-431">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-431">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-432">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-432">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-433">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-433">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-434">El <xref:System.Collections.IEqualityComparer> habilita escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-434">The <xref:System.Collections.IEqualityComparer> enables scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-435">Este constructor es O (`n`) operación, donde `n` es el `capacity` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-435">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-436">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-436">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-437"><paramref name="capacity" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="f8043-437"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="f8043-438">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-438">-or-</span></span> 
 <span data-ttu-id="f8043-439"><paramref name="loadFactor" /> es menor que 0,1.</span><span class="sxs-lookup"><span data-stu-id="f8043-439"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="f8043-440">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-440">-or-</span></span> 
 <span data-ttu-id="f8043-441"><paramref name="loadFactor" /> es mayor que 1,0.</span><span class="sxs-lookup"><span data-stu-id="f8043-441"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (System.Collections.IDictionary d, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary d, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Collections.IDictionary,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (d As IDictionary, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(System::Collections::IDictionary ^ d, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : System.Collections.IDictionary * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (d, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(IDictionary, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="d" Type="System.Collections.IDictionary" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="f8043-442">Objeto <see cref="T:System.Collections.IDictionary" /> que debe copiarse a un nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-442">The <see cref="T:System.Collections.IDictionary" /> object to copy to a new <see cref="T:System.Collections.Hashtable" /> object.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="f8043-443">Número incluido en el intervalo de 0,1 a 1,0 que se multiplica por el valor predeterminado que proporciona el mejor rendimiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-443">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="f8043-444">El resultado es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-444">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="hcp"><span data-ttu-id="f8043-445">Objeto <see cref="T:System.Collections.IHashCodeProvider" /> que suministra los códigos hash de todas las claves de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-445">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="f8043-446">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-446">-or-</span></span> 
 <span data-ttu-id="f8043-447"><see langword="null" /> para utilizar el proveedor predeterminado de código hash, que es la implementación de <see cref="M:System.Object.GetHashCode" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-447"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="f8043-448">Objeto <see cref="T:System.Collections.IComparer" /> que se va a usar para determinar si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-448">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="f8043-449">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-449">-or-</span></span> 
 <span data-ttu-id="f8043-450"><see langword="null" /> para utilizar el comparador predeterminado, que es la implementación de cada clave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-450"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-451">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.Hashtable" /> copiando los elementos del diccionario especificado en el nuevo objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-451">Initializes a new instance of the <see cref="T:System.Collections.Hashtable" /> class by copying the elements from the specified dictionary to the new <see cref="T:System.Collections.Hashtable" /> object.</span></span> <span data-ttu-id="f8043-452">El nuevo objeto <see cref="T:System.Collections.Hashtable" /> tiene una capacidad inicial igual al número de elementos copiados, y utiliza el factor de carga, el proveedor de código hash y el comparador especificados.</span><span class="sxs-lookup"><span data-stu-id="f8043-452">The new <see cref="T:System.Collections.Hashtable" /> object has an initial capacity equal to the number of elements copied, and uses the specified load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-453">La capacidad inicial se establece en el número de elementos en el diccionario de origen.</span><span class="sxs-lookup"><span data-stu-id="f8043-453">The initial capacity is set to the number of elements in the source dictionary.</span></span> <span data-ttu-id="f8043-454">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-454">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-455">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-455">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-456">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-456">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="f8043-457">Un factor de carga de 1,0 es el mejor equilibrio entre velocidad y tamaño.</span><span class="sxs-lookup"><span data-stu-id="f8043-457">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="f8043-458">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-458">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-459">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-459">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-460">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-460">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-461">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-461">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-462">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-462">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-463">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-463">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-464">El proveedor de código hash y el comparador personalizado permiten escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-464">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-465">Los elementos de la nueva <xref:System.Collections.Hashtable> se ordenan en el mismo orden en que el enumerador recorre el <xref:System.Collections.IDictionary> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-465">The elements of the new <xref:System.Collections.Hashtable> are sorted in the same order in which the enumerator iterates through the <xref:System.Collections.IDictionary> object.</span></span>  
  
 <span data-ttu-id="f8043-466">Este constructor es O (`n`) operación, donde `n` es el número de elementos de la `d` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-466">This constructor is an O(`n`) operation, where `n` is the number of elements in the `d` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-467">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-467">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CPP/hashtable_ctordictionaryfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/CS/hashtable_ctordictionaryfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorDictionaryFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorDictionaryFloat/VB/hashtable_ctordictionaryfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-468"><paramref name="d" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-468"><paramref name="d" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-469"><paramref name="loadFactor" /> es menor que 0,1.</span><span class="sxs-lookup"><span data-stu-id="f8043-469"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="f8043-470">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-470">-or-</span></span> 
 <span data-ttu-id="f8043-471"><paramref name="loadFactor" /> es mayor que 1,0.</span><span class="sxs-lookup"><span data-stu-id="f8043-471"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Hashtable (int capacity, float loadFactor, System.Collections.IHashCodeProvider hcp, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity, float32 loadFactor, class System.Collections.IHashCodeProvider hcp, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.#ctor(System.Int32,System.Single,System.Collections.IHashCodeProvider,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer, loadFactor As Single, hcp As IHashCodeProvider, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Hashtable(int capacity, float loadFactor, System::Collections::IHashCodeProvider ^ hcp, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="new System.Collections.Hashtable : int * single * System.Collections.IHashCodeProvider * System.Collections.IComparer -&gt; System.Collections.Hashtable" Usage="new System.Collections.Hashtable (capacity, loadFactor, hcp, comparer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use Hashtable(int, float, IEqualityComparer) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="hcp" Type="System.Collections.IHashCodeProvider" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="f8043-472">Número aproximado de elementos que el objeto <see cref="T:System.Collections.Hashtable" /> puede contener inicialmente.</span><span class="sxs-lookup"><span data-stu-id="f8043-472">The approximate number of elements that the <see cref="T:System.Collections.Hashtable" /> object can initially contain.</span></span></param>
        <param name="loadFactor"><span data-ttu-id="f8043-473">Número incluido en el intervalo de 0,1 a 1,0 que se multiplica por el valor predeterminado que proporciona el mejor rendimiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-473">A number in the range from 0.1 through 1.0 that is multiplied by the default value which provides the best performance.</span></span> <span data-ttu-id="f8043-474">El resultado es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-474">The result is the maximum ratio of elements to buckets.</span></span></param>
        <param name="hcp"><span data-ttu-id="f8043-475">Objeto <see cref="T:System.Collections.IHashCodeProvider" /> que suministra los códigos hash de todas las claves de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-475">The <see cref="T:System.Collections.IHashCodeProvider" /> object that supplies the hash codes for all keys in the <see cref="T:System.Collections.Hashtable" />.</span></span>  
  
<span data-ttu-id="f8043-476">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-476">-or-</span></span> 
 <span data-ttu-id="f8043-477"><see langword="null" /> para utilizar el proveedor predeterminado de código hash, que es la implementación de <see cref="M:System.Object.GetHashCode" /> de cada clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-477"><see langword="null" /> to use the default hash code provider, which is each key's implementation of <see cref="M:System.Object.GetHashCode" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="f8043-478">Objeto <see cref="T:System.Collections.IComparer" /> que se va a usar para determinar si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-478">The <see cref="T:System.Collections.IComparer" /> object to use to determine whether two keys are equal.</span></span>  
  
<span data-ttu-id="f8043-479">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-479">-or-</span></span> 
 <span data-ttu-id="f8043-480"><see langword="null" /> para utilizar el comparador predeterminado, que es la implementación de cada clave de <see cref="M:System.Object.Equals(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-480"><see langword="null" /> to use the default comparer, which is each key's implementation of <see cref="M:System.Object.Equals(System.Object)" />.</span></span></param>
        <summary><span data-ttu-id="f8043-481">Inicializa una nueva instancia vacía de la clase <see cref="T:System.Collections.Hashtable" /> utilizando la capacidad inicial, el factor de carga, el proveedor de código hash y el comparador especificados.</span><span class="sxs-lookup"><span data-stu-id="f8043-481">Initializes a new, empty instance of the <see cref="T:System.Collections.Hashtable" /> class using the specified initial capacity, load factor, hash code provider, and comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-482">Especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-482">Specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.Hashtable> object.</span></span> <span data-ttu-id="f8043-483">La capacidad es automáticamente aumentar según sea necesario según el factor de carga.</span><span class="sxs-lookup"><span data-stu-id="f8043-483">Capacity is automatically increased as required based on the load factor.</span></span>  
  
 <span data-ttu-id="f8043-484">El factor de carga es la relación máxima de elementos por sectores de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f8043-484">The load factor is the maximum ratio of elements to buckets.</span></span> <span data-ttu-id="f8043-485">Un factor de carga inferior significa que una búsqueda más rápida a costa de consumo de memoria mayor.</span><span class="sxs-lookup"><span data-stu-id="f8043-485">A smaller load factor means faster lookup at the cost of increased memory consumption.</span></span> <span data-ttu-id="f8043-486">Un factor de carga de 1,0 es el mejor equilibrio entre velocidad y tamaño.</span><span class="sxs-lookup"><span data-stu-id="f8043-486">A load factor of 1.0 is the best balance between speed and size.</span></span>  
  
 <span data-ttu-id="f8043-487">Cuando el factor de carga real alcanza el factor de carga especificado, el número de depósitos aumenta automáticamente hasta el número primo más pequeño que es mayor que dos veces el número actual de depósitos.</span><span class="sxs-lookup"><span data-stu-id="f8043-487">When the actual load factor reaches the specified load factor, the number of buckets is automatically increased to the smallest prime number that is larger than twice the current number of buckets.</span></span>  
  
 <span data-ttu-id="f8043-488">El proveedor de código hash asigna códigos hash para las claves en el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-488">The hash code provider dispenses hash codes for keys in the <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-489">El proveedor de código hash predeterminado es la implementación de la clave <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-489">The default hash code provider is the key's implementation of <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-490">El comparador determina si dos claves son iguales.</span><span class="sxs-lookup"><span data-stu-id="f8043-490">The comparer determines whether two keys are equal.</span></span> <span data-ttu-id="f8043-491">Todas las claves de un <xref:System.Collections.Hashtable> deben ser únicos.</span><span class="sxs-lookup"><span data-stu-id="f8043-491">Every key in a <xref:System.Collections.Hashtable> must be unique.</span></span> <span data-ttu-id="f8043-492">El comparador predeterminado es la implementación de la clave <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-492">The default comparer is the key's implementation of <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="f8043-493">El proveedor de código hash y el comparador personalizado permiten escenarios como la realización de búsquedas con cadenas de mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f8043-493">The custom hash code provider and the custom comparer enable scenarios such as doing lookups with case-insensitive strings.</span></span>  
  
 <span data-ttu-id="f8043-494">Este constructor es O (`n`) operación, donde `n` es el `capacity` parámetro.</span><span class="sxs-lookup"><span data-stu-id="f8043-494">This constructor is an O(`n`) operation, where `n` is the `capacity` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-495">En el ejemplo de código siguiente se crea tablas hash utilizando diferentes <xref:System.Collections.Hashtable> constructores y se muestran las diferencias en el comportamiento de las tablas hash, aunque cada uno de ellos contiene los mismos elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-495">The following code example creates hash tables using different <xref:System.Collections.Hashtable> constructors and demonstrates the differences in the behavior of the hash tables, even if each one contains the same elements.</span></span>  
  
 [!code-cpp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CPP/hashtable_ctorintfloat.cpp#1)]
 [!code-csharp[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/CS/hashtable_ctorintfloat.cs#1)]
 [!code-vb[System.Collections.Hashtable_ctorIntFloat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Hashtable_ctorIntFloat/VB/hashtable_ctorintfloat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-496"><paramref name="capacity" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="f8043-496"><paramref name="capacity" /> is less than zero.</span></span>  
  
<span data-ttu-id="f8043-497">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-497">-or-</span></span> 
 <span data-ttu-id="f8043-498"><paramref name="loadFactor" /> es menor que 0,1.</span><span class="sxs-lookup"><span data-stu-id="f8043-498"><paramref name="loadFactor" /> is less than 0.1.</span></span>  
  
<span data-ttu-id="f8043-499">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-499">-or-</span></span> 
 <span data-ttu-id="f8043-500"><paramref name="loadFactor" /> es mayor que 1,0.</span><span class="sxs-lookup"><span data-stu-id="f8043-500"><paramref name="loadFactor" /> is greater than 1.0.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; unit&#xA;override this.Add : obj * obj -&gt; unit" Usage="hashtable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f8043-501">Clave del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="f8043-501">The key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="f8043-502">Valor del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="f8043-502">The value of the element to add.</span></span> <span data-ttu-id="f8043-503">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-503">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f8043-504">Agrega un elemento con la clave y el valor especificados a <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-504">Adds an element with the specified key and value into the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-505">No puede ser una clave `null`, pero puede ser un valor.</span><span class="sxs-lookup"><span data-stu-id="f8043-505">A key cannot be `null`, but a value can be.</span></span>  
  
 <span data-ttu-id="f8043-506">Un objeto que no tiene ninguna correlación entre su estado y su valor de código hash normalmente no se recomienda como clave.</span><span class="sxs-lookup"><span data-stu-id="f8043-506">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="f8043-507">Por ejemplo, objetos de cadena son mejores que los objetos de StringBuilder para su uso como claves.</span><span class="sxs-lookup"><span data-stu-id="f8043-507">For example, String objects are better than StringBuilder objects for use as keys.</span></span>  
  
 <span data-ttu-id="f8043-508">También puede usar el <xref:System.Collections.Hashtable.Item%2A> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el <xref:System.Collections.Hashtable>; por ejemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="f8043-508">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="f8043-509">Sin embargo, si la clave especificada ya existe en el <xref:System.Collections.Hashtable>, estableciendo el <xref:System.Collections.Hashtable.Item%2A> propiedad sobrescribe el valor anterior.</span><span class="sxs-lookup"><span data-stu-id="f8043-509">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="f8043-510">En cambio, el <xref:System.Collections.Hashtable.Add%2A> método no modifica los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="f8043-510">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="f8043-511">Si <xref:System.Collections.Hashtable.Count%2A> es menor que la capacidad de la <xref:System.Collections.Hashtable>, este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-511">If <xref:System.Collections.Hashtable.Count%2A> is less than the capacity of the <xref:System.Collections.Hashtable>, this method is an O(1) operation.</span></span> <span data-ttu-id="f8043-512">Si la capacidad debe aumentarse para alojar el nuevo elemento, este método se convierte en una O (`n`) operación, donde `n` es <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-512">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-513">El ejemplo siguiente muestra cómo agregar elementos a la <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-513">The following example shows how to add elements to the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-514"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-514"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8043-515">Ya existe un elemento con la misma clave en <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-515">An element with the same key already exists in the <see cref="T:System.Collections.Hashtable" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f8043-516"><see cref="T:System.Collections.Hashtable" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f8043-516">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="f8043-517">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-517">-or-</span></span> 
<span data-ttu-id="f8043-518"><see cref="T:System.Collections.Hashtable" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="f8043-518">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Remove(System.Object)" />
        <altmember cref="P:System.Collections.Hashtable.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="hashtable.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8043-519">Quita todos los elementos de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-519">Removes all elements from the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-520"><xref:System.Collections.Hashtable.Count%2A> está establecido en cero y también se liberan las referencias a otros objetos de elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-520"><xref:System.Collections.Hashtable.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="f8043-521">La capacidad permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="f8043-521">The capacity remains unchanged.</span></span>  
  
 <span data-ttu-id="f8043-522">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-522">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-523">El ejemplo siguiente muestra cómo borrar los valores de la <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-523">The following example shows how to clear the values of the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f8043-524"><see cref="T:System.Collections.Hashtable" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f8043-524">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.IDictionary.Clear" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="hashtable.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8043-525">Crea una copia superficial de la colección <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-525">Creates a shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="f8043-526">Copia superficial de la colección <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-526">A shallow copy of the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-527">Una copia superficial de una colección copia solo los elementos de la colección, si son tipos de referencia o tipos de valor, pero no copia los objetos que hacen referencia las referencias.</span><span class="sxs-lookup"><span data-stu-id="f8043-527">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="f8043-528">Las referencias de la nueva colección apuntan a los mismos objetos que seleccione las referencias en la colección original.</span><span class="sxs-lookup"><span data-stu-id="f8043-528">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="f8043-529">En cambio, una copia en profundidad de una colección copia los elementos y todo lo que hacen referencia directa o indirectamente los elementos.</span><span class="sxs-lookup"><span data-stu-id="f8043-529">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="f8043-530">El <xref:System.Collections.Hashtable> duplicado tiene el mismo número, la misma capacidad, la misma <xref:System.Collections.IHashCodeProvider> implementación y el mismo <xref:System.Collections.IComparer> implementación como el original <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-530">The <xref:System.Collections.Hashtable> clone has the same count, the same capacity, the same <xref:System.Collections.IHashCodeProvider> implementation, and the same <xref:System.Collections.IComparer> implementation as the original <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="f8043-531">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-531">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="comparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IComparer comparer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IComparer comparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.comparer" />
      <MemberSignature Language="VB.NET" Value="Protected Property comparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IComparer ^ comparer { System::Collections::IComparer ^ get(); void set(System::Collections::IComparer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.comparer : System.Collections.IComparer with get, set" Usage="System.Collections.Hashtable.comparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use KeyComparer properties.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-532">Obtiene o establece el objeto <see cref="T:System.Collections.IComparer" /> que se usará para <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-532">Gets or sets the <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="f8043-533"><see cref="T:System.Collections.IComparer" /> que se va a usar para <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-533">The <see cref="T:System.Collections.IComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-534">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="f8043-534">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8043-535">La propiedad está establecida en un valor, pero la tabla hash se creó utilizando una interfaz <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-535">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Contains : obj -&gt; bool&#xA;override this.Contains : obj -&gt; bool" Usage="hashtable.Contains key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f8043-536">Clave que se buscará en <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-536">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="f8043-537">Determina si <see cref="T:System.Collections.Hashtable" /> contiene una clave específica.</span><span class="sxs-lookup"><span data-stu-id="f8043-537">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="f8043-538"><see langword="true" /> si la colección <see cref="T:System.Collections.Hashtable" /> contiene un elemento con la clave especificada; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-538"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-539"><xref:System.Collections.Hashtable.Contains%2A> implementa <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8043-539"><xref:System.Collections.Hashtable.Contains%2A> implements <xref:System.Collections.IDictionary.Contains%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="f8043-540">Se comporta exactamente como <xref:System.Collections.Hashtable.ContainsKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-540">It behaves exactly as <xref:System.Collections.Hashtable.ContainsKey%2A>.</span></span>  
  
 <span data-ttu-id="f8043-541">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-541">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="f8043-542">A partir de .NET Framework 2.0, este método utiliza los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe el elemento.</span><span class="sxs-lookup"><span data-stu-id="f8043-542">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="f8043-543">En las versiones anteriores de .NET Framework, esta determinación se realiza mediante el uso de la <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-543">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-544">El ejemplo siguiente muestra cómo determinar si el <xref:System.Collections.Hashtable> contiene un elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f8043-544">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-545"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-545"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool&#xA;override this.ContainsKey : obj -&gt; bool" Usage="hashtable.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f8043-546">Clave que se buscará en <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-546">The key to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="f8043-547">Determina si <see cref="T:System.Collections.Hashtable" /> contiene una clave específica.</span><span class="sxs-lookup"><span data-stu-id="f8043-547">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific key.</span></span></summary>
        <returns><span data-ttu-id="f8043-548"><see langword="true" /> si la colección <see cref="T:System.Collections.Hashtable" /> contiene un elemento con la clave especificada; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-548"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-549">Este método se comporta exactamente como <xref:System.Collections.Hashtable.Contains%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-549">This method behaves exactly as <xref:System.Collections.Hashtable.Contains%2A>.</span></span>  
  
 <span data-ttu-id="f8043-550">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-550">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="f8043-551">A partir de .NET Framework 2.0, este método utiliza los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe el elemento.</span><span class="sxs-lookup"><span data-stu-id="f8043-551">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="f8043-552">En las versiones anteriores de .NET Framework, esta determinación se realiza mediante el uso de la <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-552">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-553">El ejemplo siguiente muestra cómo determinar si el <xref:System.Collections.Hashtable> contiene un elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f8043-553">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-554"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-554"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Contains(System.Object)" />
        <altmember cref="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsValue">
      <MemberSignature Language="C#" Value="public virtual bool ContainsValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsValue(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.ContainsValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsValue (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ContainsValue : obj -&gt; bool&#xA;override this.ContainsValue : obj -&gt; bool" Usage="hashtable.ContainsValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="f8043-555">Valor que se va a buscar en la colección <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-555">The value to locate in the <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="f8043-556">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-556">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="f8043-557">Determina si <see cref="T:System.Collections.Hashtable" /> contiene un valor específico.</span><span class="sxs-lookup"><span data-stu-id="f8043-557">Determines whether the <see cref="T:System.Collections.Hashtable" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="f8043-558">Es <see langword="true" /> si <see cref="T:System.Collections.Hashtable" /> contiene un elemento con <paramref name="value" /> especificado; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-558"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> contains an element with the specified <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-559">Los valores de los elementos de la <xref:System.Collections.Hashtable> se comparan con el valor especificado mediante el <xref:System.Object.Equals%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-559">The values of the elements of the <xref:System.Collections.Hashtable> are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="f8043-560">Este método realiza una búsqueda lineal; por lo tanto, este método es O (`n`) operación, donde `n` es <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-560">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="f8043-561">A partir de .NET Framework 2.0, este método utiliza los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe el elemento.</span><span class="sxs-lookup"><span data-stu-id="f8043-561">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="f8043-562">En las versiones anteriores de .NET Framework, esta determinación se realiza mediante el uso de la <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-562">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-563">El ejemplo siguiente muestra cómo determinar si el <xref:System.Collections.Hashtable> contiene un elemento específico.</span><span class="sxs-lookup"><span data-stu-id="f8043-563">The following example shows how to determine whether the <xref:System.Collections.Hashtable> contains a specific element.</span></span>  
  
 [!code-cpp[Classic Hashtable.Contains Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Contains Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Contains Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Contains Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.ContainsKey(System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="hashtable.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f8043-564"><see cref="T:System.Array" /> unidimensional que constituye el destino de los objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-564">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from <see cref="T:System.Collections.Hashtable" />.</span></span> <span data-ttu-id="f8043-565"><see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="f8043-565">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="f8043-566">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="f8043-566">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="f8043-567">Copia los elementos de <see cref="T:System.Collections.Hashtable" /> a una instancia unidimensional de <see cref="T:System.Array" /> en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="f8043-567">Copies the <see cref="T:System.Collections.Hashtable" /> elements to a one-dimensional <see cref="T:System.Array" /> instance at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-568">Los elementos se copian en el <xref:System.Array> en el mismo orden en que el enumerador recorre el <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-568">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.Hashtable>.</span></span>  
  
 <span data-ttu-id="f8043-569">Para copiar sólo las claves de la <xref:System.Collections.Hashtable>, utilice `Hashtable.Keys.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="f8043-569">To copy only the keys in the <xref:System.Collections.Hashtable>, use `Hashtable.Keys.CopyTo`.</span></span>  
  
 <span data-ttu-id="f8043-570">Para copiar sólo los valores de la <xref:System.Collections.Hashtable>, utilice `Hashtable.Values.CopyTo`.</span><span class="sxs-lookup"><span data-stu-id="f8043-570">To copy only the values in the <xref:System.Collections.Hashtable>, use `Hashtable.Values.CopyTo`.</span></span>  
  
 <span data-ttu-id="f8043-571">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-571">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-572">El ejemplo siguiente muestra cómo copiar la lista de claves o la lista de valores en un <xref:System.Collections.Hashtable> en unidimensional <xref:System.Array>.</span><span class="sxs-lookup"><span data-stu-id="f8043-572">The following example shows how to copy the list of keys or the list of values in a <xref:System.Collections.Hashtable> into a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-573"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-573"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="f8043-574"><paramref name="arrayIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="f8043-574"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8043-575"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="f8043-575"><paramref name="array" /> is multidimensional.</span></span>  
  
<span data-ttu-id="f8043-576">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-576">-or-</span></span> 
<span data-ttu-id="f8043-577">El número de elementos de la <see cref="T:System.Collections.Hashtable" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="f8043-577">The number of elements in the source <see cref="T:System.Collections.Hashtable" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="f8043-578">El tipo de la <see cref="T:System.Collections.Hashtable" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="f8043-578">The type of the source <see cref="T:System.Collections.Hashtable" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.Hashtable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Hashtable.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-579">Obtiene el número de pares clave-valor incluidos en <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-579">Gets the number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="f8043-580">Número de pares clave-valor incluidos en <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-580">The number of key/value pairs contained in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-581">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="f8043-581">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="protected System.Collections.IEqualityComparer EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEqualityComparer EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property EqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IEqualityComparer ^ EqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.IEqualityComparer" Usage="System.Collections.Hashtable.EqualityComparer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-582">Obtiene el <see cref="T:System.Collections.IEqualityComparer" /> que se va a utilizar para <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-582">Gets the <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="f8043-583"><see cref="T:System.Collections.IEqualityComparer" /> que se va a usar para <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-583">The <see cref="T:System.Collections.IEqualityComparer" /> to use for the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-584">El <xref:System.Collections.IEqualityComparer> incluye tanto el proveedor de código hash y el comparador.</span><span class="sxs-lookup"><span data-stu-id="f8043-584">The <xref:System.Collections.IEqualityComparer> includes both the comparer and the hash code provider.</span></span> <span data-ttu-id="f8043-585">Si un <xref:System.Collections.IEqualityComparer> se utiliza en el <xref:System.Collections.Hashtable> constructor, los objetos utilizados como claves en el <xref:System.Collections.Hashtable> no es necesario reemplazar el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> y <xref:System.Object.Equals%2A?displayProperty=nameWithType> métodos.</span><span class="sxs-lookup"><span data-stu-id="f8043-585">If an <xref:System.Collections.IEqualityComparer> is used in the <xref:System.Collections.Hashtable> constructor, the objects used as keys in the <xref:System.Collections.Hashtable> are not required to override the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> and <xref:System.Object.Equals%2A?displayProperty=nameWithType> methods.</span></span>  
  
 <span data-ttu-id="f8043-586">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="f8043-586">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8043-587">La propiedad está establecida en un valor, pero la tabla hash se creó utilizando un <see cref="T:System.Collections.IHashCodeProvider" /> y un <see cref="T:System.Collections.IComparer" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-587">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IHashCodeProvider" /> and an <see cref="T:System.Collections.IComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.Comparer" />
        <altmember cref="T:System.Collections.IEqualityComparer" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IDictionaryEnumerator" Usage="hashtable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8043-588">Devuelve un objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera a través del objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-588">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="f8043-589">Estructura <see cref="T:System.Collections.IDictionaryEnumerator" /> para la colección <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-589">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-590">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="f8043-590">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="f8043-591">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="f8043-591">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="f8043-592">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="f8043-592">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f8043-593">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="f8043-593">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f8043-594">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-594">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f8043-595"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="f8043-595"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="f8043-596">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="f8043-596">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f8043-597">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-597">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f8043-598"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-598"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f8043-599"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="f8043-599"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f8043-600">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f8043-600">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f8043-601">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="f8043-601">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f8043-602">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> es indefinido.</span><span class="sxs-lookup"><span data-stu-id="f8043-602">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="f8043-603">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-603">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f8043-604">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="f8043-604">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f8043-605">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="f8043-605">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="f8043-606">La enumeración en una colección no es un procedimiento seguro para subprocesos ya que el enumerador carece de acceso exclusivo.</span><span class="sxs-lookup"><span data-stu-id="f8043-606">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="f8043-607">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="f8043-607">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="f8043-608">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="f8043-608">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="f8043-609">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-609">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="f8043-610">Dado que serializar y deserializar un enumerador para un <xref:System.Collections.Hashtable> puede hacer que los elementos que se va a convertirse en reordenar, no es posible continuar la enumeración sin llamar a la <xref:System.Collections.IEnumerator.Reset%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-610">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-611">El ejemplo siguiente compara el uso de <xref:System.Collections.Hashtable.GetEnumerator%2A> y `foreach` para enumerar el contenido de un <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-611">The following example compares the use of <xref:System.Collections.Hashtable.GetEnumerator%2A> and `foreach` to enumerate the contents of a <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic Hashtable Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable Example/CS/source2.cs#2)]
 [!code-vb[Classic Hashtable Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetHash">
      <MemberSignature Language="C#" Value="protected virtual int GetHash (object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 GetHash(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetHash(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetHash (key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int GetHash(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member GetHash : obj -&gt; int&#xA;override this.GetHash : obj -&gt; int" Usage="hashtable.GetHash key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f8043-612"><see cref="T:System.Object" /> para el que se va a devolver un código hash.</span><span class="sxs-lookup"><span data-stu-id="f8043-612">The <see cref="T:System.Object" /> for which a hash code is to be returned.</span></span></param>
        <summary><span data-ttu-id="f8043-613">Devuelve el código hash de la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="f8043-613">Returns the hash code for the specified key.</span></span></summary>
        <returns><span data-ttu-id="f8043-614">Código hash de <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-614">The hash code for <paramref name="key" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-615">Si la tabla hash se creó con un valor concreto <xref:System.Collections.IHashCodeProvider> implementación, este método utiliza ese proveedor de código hash; en caso contrario, usa el <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implementací `key`.</span><span class="sxs-lookup"><span data-stu-id="f8043-615">If the hash table was created with a specific <xref:System.Collections.IHashCodeProvider> implementation, this method uses that hash code provider; otherwise, it uses the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> implementation of `key`.</span></span>  
  
 <span data-ttu-id="f8043-616">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-616">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="f8043-617"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-617"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Object.GetHashCode" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="hashtable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="f8043-618">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> que contiene la información necesaria para serializar el <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-618">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <param name="context"><span data-ttu-id="f8043-619">Objeto <see cref="T:System.Runtime.Serialization.StreamingContext" /> que contiene el origen y el destino de la secuencia serializada asociada al <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-619">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:System.Collections.Hashtable" />.</span></span></param>
        <summary><span data-ttu-id="f8043-620">Implementa la interfaz de <see cref="T:System.Runtime.Serialization.ISerializable" /> y devuelve los datos necesarios para serializar <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-620">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-621">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-621">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-622"><paramref name="info" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-622"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f8043-623">Se modificó la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-623">The collection was modified.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="f8043-624">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="f8043-624">requires full trust for the immediate caller.</span></span> <span data-ttu-id="f8043-625">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="f8043-625">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="hcp">
      <MemberSignature Language="C#" Value="protected System.Collections.IHashCodeProvider hcp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IHashCodeProvider hcp" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.hcp" />
      <MemberSignature Language="VB.NET" Value="Protected Property hcp As IHashCodeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IHashCodeProvider ^ hcp { System::Collections::IHashCodeProvider ^ get(); void set(System::Collections::IHashCodeProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.hcp : System.Collections.IHashCodeProvider with get, set" Usage="System.Collections.Hashtable.hcp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("Please use EqualityComparer property.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IHashCodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-626">Obtiene o establece el objeto que puede dispensar códigos hash.</span><span class="sxs-lookup"><span data-stu-id="f8043-626">Gets or sets the object that can dispense hash codes.</span></span></summary>
        <value><span data-ttu-id="f8043-627">Objeto que puede dispensar códigos hash.</span><span class="sxs-lookup"><span data-stu-id="f8043-627">The object that can dispense hash codes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-628">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="f8043-628">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f8043-629">La propiedad está establecida en un valor, pero la tabla hash se creó utilizando una interfaz <see cref="T:System.Collections.IEqualityComparer" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-629">The property is set to a value, but the hash table was created using an <see cref="T:System.Collections.IEqualityComparer" />.</span></span></exception>
        <altmember cref="T:System.Collections.IHashCodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Collections.Hashtable.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-630">Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.Hashtable" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="f8043-630">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></summary>
        <value><span data-ttu-id="f8043-631">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.Hashtable" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-631"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f8043-632">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-632">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-633">Una colección de tamaño fijo no permite agregar o quitar elementos una vez que se ha creado, pero sí permite modificar los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="f8043-633">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="f8043-634">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja los cambios.</span><span class="sxs-lookup"><span data-stu-id="f8043-634">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f8043-635">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="f8043-635">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Collections.Hashtable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-636">Obtiene un valor que indica si <see cref="T:System.Collections.Hashtable" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f8043-636">Gets a value indicating whether the <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span></summary>
        <value><span data-ttu-id="f8043-637">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.Hashtable" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-637"><see langword="true" /> if the <see cref="T:System.Collections.Hashtable" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f8043-638">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-638">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-639">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="f8043-639">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="f8043-640">Una colección es de solo lectura es simplemente una colección con un contenedor que evita la modificación de la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja los cambios.</span><span class="sxs-lookup"><span data-stu-id="f8043-640">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="f8043-641">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="f8043-641">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Collections.Hashtable.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-642">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.Hashtable" /> está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="f8043-642">Gets a value indicating whether access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="f8043-643">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.Hashtable" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-643"><see langword="true" /> if access to the <see cref="T:System.Collections.Hashtable" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f8043-644">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-644">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-645">Un <xref:System.Collections.Hashtable> puede admitir un escritor y varios lectores simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="f8043-645">A <xref:System.Collections.Hashtable> can support one writer and multiple readers concurrently.</span></span> <span data-ttu-id="f8043-646">Para admitir varios sistemas de escritura, todas las operaciones deben realizarse a través de contenedores devueltos por el <xref:System.Collections.Hashtable.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-646">To support multiple writers, all operations must be done through the wrapper returned by the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="f8043-647">Enumerar una colección no es un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-647">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="f8043-648">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="f8043-648">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f8043-649">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-649">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f8043-650">El ejemplo de código siguiente muestra cómo bloquear la colección utilizando el <xref:System.Collections.Hashtable.SyncRoot%2A> durante toda la enumeración:</span><span class="sxs-lookup"><span data-stu-id="f8043-650">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="f8043-651">El ejemplo siguiente muestra cómo sincronizar un <xref:System.Collections.Hashtable>, determinar si un <xref:System.Collections.Hashtable> está sincronizada y usar sincronizado <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-651">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(key As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : obj with get, set" Usage="System.Collections.Hashtable.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f8043-652">Clave cuyo valor se va a obtener o a establecer.</span><span class="sxs-lookup"><span data-stu-id="f8043-652">The key whose value to get or set.</span></span></param>
        <summary><span data-ttu-id="f8043-653">Obtiene o establece el valor asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="f8043-653">Gets or sets the value associated with the specified key.</span></span></summary>
        <value><span data-ttu-id="f8043-654">Valor asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="f8043-654">The value associated with the specified key.</span></span> <span data-ttu-id="f8043-655">Si no se encuentra la clave especificada, al intentar obtenerla se devuelve <see langword="null" /> y al intentar establecerla se crea una nueva entrada con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="f8043-655">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-656">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="f8043-656">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="f8043-657">También puede usar el <xref:System.Collections.Hashtable.Item%2A> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el <xref:System.Collections.Hashtable>; por ejemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="f8043-657">You can also use the <xref:System.Collections.Hashtable.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.Hashtable>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="f8043-658">Sin embargo, si la clave especificada ya existe en el <xref:System.Collections.Hashtable>, estableciendo el <xref:System.Collections.Hashtable.Item%2A> propiedad sobrescribe el valor anterior.</span><span class="sxs-lookup"><span data-stu-id="f8043-658">However, if the specified key already exists in the <xref:System.Collections.Hashtable>, setting the <xref:System.Collections.Hashtable.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="f8043-659">En cambio, el <xref:System.Collections.Hashtable.Add%2A> método no modifica los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="f8043-659">In contrast, the <xref:System.Collections.Hashtable.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="f8043-660">No puede ser una clave `null`, pero puede ser un valor.</span><span class="sxs-lookup"><span data-stu-id="f8043-660">A key cannot be `null`, but a value can be.</span></span> <span data-ttu-id="f8043-661">Para distinguir entre `null` que se devuelve porque no se encuentra la clave especificada y `null` que se devuelve porque el valor de la clave especificada es `null`, utilice el <xref:System.Collections.Hashtable.Contains%2A> método o la <xref:System.Collections.Hashtable.ContainsKey%2A> método para determinar si la clave existe en la lista.</span><span class="sxs-lookup"><span data-stu-id="f8043-661">To distinguish between `null` that is returned because the specified key is not found and `null` that is returned because the value of the specified key is `null`, use the <xref:System.Collections.Hashtable.Contains%2A> method or the <xref:System.Collections.Hashtable.ContainsKey%2A> method to determine if the key exists in the list.</span></span>  
  
 <span data-ttu-id="f8043-662">Recuperar el valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-662">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
 <span data-ttu-id="f8043-663">El C# lenguaje usa el [ `this` ](~/docs/csharp/language-reference/keywords/this.md) palabra clave para definir los indizadores en lugar de implementar la <xref:System.Collections.IList.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f8043-663">The C# language uses the [`this`](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="f8043-664">Visual Basic implementa <xref:System.Collections.Hashtable.Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="f8043-664">Visual Basic implements <xref:System.Collections.Hashtable.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-665"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-665"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f8043-666">La propiedad está establecida y <see cref="T:System.Collections.Hashtable" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f8043-666">The property is set and the <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="f8043-667">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-667">-or-</span></span> 
<span data-ttu-id="f8043-668">La propiedad está establecida, <paramref name="key" /> no existe en la colección y <see cref="T:System.Collections.Hashtable" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="f8043-668">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="KeyEquals">
      <MemberSignature Language="C#" Value="protected virtual bool KeyEquals (object item, object key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool KeyEquals(object item, object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.KeyEquals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function KeyEquals (item As Object, key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool KeyEquals(System::Object ^ item, System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member KeyEquals : obj * obj -&gt; bool&#xA;override this.KeyEquals : obj * obj -&gt; bool" Usage="hashtable.KeyEquals (item, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="f8043-669"><see cref="T:System.Object" /> que se va a comparar con <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-669">The <see cref="T:System.Object" /> to compare with <paramref name="key" />.</span></span></param>
        <param name="key"><span data-ttu-id="f8043-670">Clave de <see cref="T:System.Collections.Hashtable" /> que se va a comparar con <paramref name="item" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-670">The key in the <see cref="T:System.Collections.Hashtable" /> to compare with <paramref name="item" />.</span></span></param>
        <summary><span data-ttu-id="f8043-671">Compara un <see cref="T:System.Object" /> específico con una clave concreta en <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-671">Compares a specific <see cref="T:System.Object" /> with a specific key in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="f8043-672"><see langword="true" /> si <paramref name="item" /> y <paramref name="key" /> son iguales; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-672"><see langword="true" /> if <paramref name="item" /> and <paramref name="key" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-673">Si la tabla hash se creó con un valor concreto <xref:System.Collections.IComparer> implementación, este método utiliza ese comparador; es decir, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span><span class="sxs-lookup"><span data-stu-id="f8043-673">If the hash table was created with a specific <xref:System.Collections.IComparer> implementation, this method uses that comparer; that is, <xref:System.Collections.IComparer.Compare%2A> (`item`, `key`).</span></span> <span data-ttu-id="f8043-674">De lo contrario, se usa `item.Equals(key)`.</span><span class="sxs-lookup"><span data-stu-id="f8043-674">Otherwise, it uses `item.Equals(key)`.</span></span>  
  
 <span data-ttu-id="f8043-675">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-675">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-676"><paramref name="item" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-676"><paramref name="item" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="f8043-677">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-677">-or-</span></span> 
 <span data-ttu-id="f8043-678"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-678"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />
        <altmember cref="M:System.Object.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Collections.Hashtable.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-679">Obtiene un <see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-679">Gets an <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="f8043-680"><see cref="T:System.Collections.ICollection" /> que contiene las claves de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-680">An <see cref="T:System.Collections.ICollection" /> containing the keys in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-681">El orden de las claves en el <xref:System.Collections.ICollection> no está especificado, pero es el mismo orden que los valores asociados en el <xref:System.Collections.ICollection> devuelto por la <xref:System.Collections.Hashtable.Values%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-681">The order of the keys in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated values in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Values%2A> method.</span></span>  
  
 <span data-ttu-id="f8043-682">El valor devuelto <xref:System.Collections.ICollection> no es una copia estática; en su lugar, el <xref:System.Collections.ICollection> hace referencia a las claves en el original <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-682">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-683">Por consiguiente, los cambios a la <xref:System.Collections.Hashtable> continuar en reflejarse en el <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f8043-683">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="f8043-684">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="f8043-684">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Values" />
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public virtual void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="hashtable.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="f8043-685">Origen del evento de deserialización.</span><span class="sxs-lookup"><span data-stu-id="f8043-685">The source of the deserialization event.</span></span></param>
        <summary><span data-ttu-id="f8043-686">Implementa la interfaz <see cref="T:System.Runtime.Serialization.ISerializable" /> y genera el evento de deserialización cuando esta ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="f8043-686">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and raises the deserialization event when the deserialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-687">Este método es O (`n`) operación, donde `n` es <xref:System.Collections.Hashtable.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-687">This method is an O(`n`) operation, where `n` is <xref:System.Collections.Hashtable.Count%2A>.</span></span>  
  
 <span data-ttu-id="f8043-688">Dado que serializar y deserializar un enumerador para un <xref:System.Collections.Hashtable> puede hacer que los elementos que se va a convertirse en reordenar, no es posible continuar la enumeración sin llamar a la <xref:System.Collections.IEnumerator.Reset%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-688">Because serializing and deserializing an enumerator for a <xref:System.Collections.Hashtable> can cause the elements to become reordered, it is not possible to continue enumeration without calling the <xref:System.Collections.IEnumerator.Reset%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="f8043-689">El objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> asociado a la <see cref="T:System.Collections.Hashtable" /> actual no es válido.</span><span class="sxs-lookup"><span data-stu-id="f8043-689">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object associated with the current <see cref="T:System.Collections.Hashtable" /> is invalid.</span></span></exception>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Collections.Hashtable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (key As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="hashtable.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="f8043-690">Clave del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="f8043-690">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="f8043-691">Quita el elemento con la clave especificada de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-691">Removes the element with the specified key from the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-692">Si el <xref:System.Collections.Hashtable> no contiene un elemento con la clave especificada, el <xref:System.Collections.Hashtable> permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="f8043-692">If the <xref:System.Collections.Hashtable> does not contain an element with the specified key, the <xref:System.Collections.Hashtable> remains unchanged.</span></span> <span data-ttu-id="f8043-693">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="f8043-693">No exception is thrown.</span></span>  
  
 <span data-ttu-id="f8043-694">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-694">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-695">El ejemplo siguiente muestra cómo quitar los elementos de la <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-695">The following example shows how to remove elements from the <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-696"><paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-696"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="f8043-697"><see cref="T:System.Collections.Hashtable" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f8043-697">The <see cref="T:System.Collections.Hashtable" /> is read-only.</span></span>  
  
<span data-ttu-id="f8043-698">O bien</span><span class="sxs-lookup"><span data-stu-id="f8043-698">-or-</span></span> 
<span data-ttu-id="f8043-699"><see cref="T:System.Collections.Hashtable" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="f8043-699">The <see cref="T:System.Collections.Hashtable" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.Hashtable.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.Hashtable Synchronized (System.Collections.Hashtable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Hashtable Synchronized(class System.Collections.Hashtable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (table As Hashtable) As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Hashtable ^ Synchronized(System::Collections::Hashtable ^ table);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Collections.Hashtable -&gt; System.Collections.Hashtable" Usage="System.Collections.Hashtable.Synchronized table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Collections.Hashtable" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="f8043-700"><see cref="T:System.Collections.Hashtable" /> que se va a sincronizar.</span><span class="sxs-lookup"><span data-stu-id="f8043-700">The <see cref="T:System.Collections.Hashtable" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="f8043-701">Devuelve un contenedor sincronizado (seguro para subprocesos) para el objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-701">Returns a synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <returns><span data-ttu-id="f8043-702">Contenedor sincronizado (seguro para subprocesos) para el objeto <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-702">A synchronized (thread-safe) wrapper for the <see cref="T:System.Collections.Hashtable" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-703">El <xref:System.Collections.Hashtable.Synchronized%2A> método es que es seguro para subprocesos para varios lectores y escritores.</span><span class="sxs-lookup"><span data-stu-id="f8043-703">The <xref:System.Collections.Hashtable.Synchronized%2A> method is thread safe for multiple readers and writers.</span></span> <span data-ttu-id="f8043-704">Además, el contenedor sincronizado garantiza que hay un único escritor escribir a la vez.</span><span class="sxs-lookup"><span data-stu-id="f8043-704">Furthermore, the synchronized wrapper ensures that there is only one writer writing at a time.</span></span>  
  
 <span data-ttu-id="f8043-705">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-705">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="f8043-706">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="f8043-706">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f8043-707">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-707">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f8043-708">El ejemplo de código siguiente muestra cómo bloquear la colección utilizando el <xref:System.Collections.Hashtable.SyncRoot%2A> durante toda la enumeración:</span><span class="sxs-lookup"><span data-stu-id="f8043-708">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 <span data-ttu-id="f8043-709">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-709">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8043-710">El ejemplo siguiente muestra cómo sincronizar un <xref:System.Collections.Hashtable>, determinar si un <xref:System.Collections.Hashtable> está sincronizada y usar sincronizado <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-710">The following example shows how to synchronize a <xref:System.Collections.Hashtable>, determine if a <xref:System.Collections.Hashtable> is synchronized, and use a synchronized <xref:System.Collections.Hashtable>.</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f8043-711"><paramref name="table" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-711"><paramref name="table" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="P:System.Collections.Hashtable.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Collections.Hashtable.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-712">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-712">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="f8043-713">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-713">An object that can be used to synchronize access to the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-714">Para crear una versión sincronizada de la <xref:System.Collections.Hashtable>, utilice el <xref:System.Collections.Hashtable.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-714">To create a synchronized version of the <xref:System.Collections.Hashtable>, use the <xref:System.Collections.Hashtable.Synchronized%2A> method.</span></span> <span data-ttu-id="f8043-715">Sin embargo, las clases derivadas pueden proporcionar su propia versión sincronizada de la <xref:System.Collections.Hashtable> utilizando el <xref:System.Collections.Hashtable.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f8043-715">However, derived classes can provide their own synchronized version of the <xref:System.Collections.Hashtable> using the <xref:System.Collections.Hashtable.SyncRoot%2A> property.</span></span> <span data-ttu-id="f8043-716">El código de sincronización debe realizar operaciones en el <xref:System.Collections.Hashtable.SyncRoot%2A> de la <xref:System.Collections.Hashtable>, no directamente en el <xref:System.Collections.Hashtable> .</span><span class="sxs-lookup"><span data-stu-id="f8043-716">The synchronizing code must perform operations on the <xref:System.Collections.Hashtable.SyncRoot%2A> of the <xref:System.Collections.Hashtable>, not directly on the <xref:System.Collections.Hashtable> .</span></span> <span data-ttu-id="f8043-717">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="f8043-717">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="f8043-718">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar simultáneamente la <xref:System.Collections.Hashtable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f8043-718">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.Hashtable> object.</span></span>  
  
 <span data-ttu-id="f8043-719">Enumerar una colección no es un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-719">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="f8043-720">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="f8043-720">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f8043-721">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-721">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f8043-722">El ejemplo de código siguiente muestra cómo bloquear la colección utilizando el <xref:System.Collections.Hashtable.SyncRoot%2A> durante toda la enumeración:</span><span class="sxs-lookup"><span data-stu-id="f8043-722">The following code example shows how to lock the collection using the <xref:System.Collections.Hashtable.SyncRoot%2A> during the entire enumeration:</span></span>  
  
 [!code-cpp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CPP/remarks.cpp#2)]
 [!code-csharp[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/CS/remarks.cs#2)]
 [!code-vb[Classic Hashtable.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Hashtable.IsSynchronized Example/VB/remarks.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.Hashtable.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Hashtable.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f8043-723">Devuelve un enumerador que recorre en iteración una colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-723">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="f8043-724"><see cref="T:System.Collections.IEnumerator" /> que se puede utilizar para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-724">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-725">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="f8043-725">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="f8043-726">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="f8043-726">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="f8043-727">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="f8043-727">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="f8043-728">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="f8043-728">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="f8043-729">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="f8043-729">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="f8043-730"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="f8043-730"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="f8043-731">En esta posición, una llamada a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="f8043-731">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="f8043-732">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-732">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="f8043-733"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-733"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="f8043-734"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="f8043-734"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="f8043-735">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="f8043-735">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="f8043-736">Cuando el enumerador está en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="f8043-736">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="f8043-737">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, al llamar a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="f8043-737">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="f8043-738">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8043-738">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="f8043-739">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="f8043-739">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="f8043-740">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador se puede invalidar y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="f8043-740">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator can be invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="f8043-741">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devuelve el elemento que está establecido, incluso si el enumerador ya se ha invalidado.</span><span class="sxs-lookup"><span data-stu-id="f8043-741">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="f8043-742">La enumeración en una colección no es un procedimiento seguro para subprocesos ya que el enumerador carece de acceso exclusivo.</span><span class="sxs-lookup"><span data-stu-id="f8043-742">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="f8043-743">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="f8043-743">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="f8043-744">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="f8043-744">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="f8043-745">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="f8043-745">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Hashtable.Values" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.ICollection" Usage="System.Collections.Hashtable.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f8043-746">Obtiene una interfaz <see cref="T:System.Collections.ICollection" /> que contiene los valores de la interfaz <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-746">Gets an <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span></span></summary>
        <value><span data-ttu-id="f8043-747"><see cref="T:System.Collections.ICollection" /> que contiene los valores de <see cref="T:System.Collections.Hashtable" />.</span><span class="sxs-lookup"><span data-stu-id="f8043-747">An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Collections.Hashtable" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8043-748">El orden de los valores de la <xref:System.Collections.ICollection> no está especificado, pero es el mismo orden que las claves asociadas en la <xref:System.Collections.ICollection> devuelto por la <xref:System.Collections.Hashtable.Keys%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f8043-748">The order of the values in the <xref:System.Collections.ICollection> is unspecified, but it is the same order as the associated keys in the <xref:System.Collections.ICollection> returned by the <xref:System.Collections.Hashtable.Keys%2A> method.</span></span>  
  
 <span data-ttu-id="f8043-749">El valor devuelto <xref:System.Collections.ICollection> no es una copia estática; en su lugar, el <xref:System.Collections.ICollection> hace referencia a los valores en el original <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="f8043-749">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.Hashtable>.</span></span> <span data-ttu-id="f8043-750">Por consiguiente, los cambios a la <xref:System.Collections.Hashtable> continuar en reflejarse en el <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="f8043-750">Therefore, changes to the <xref:System.Collections.Hashtable> continue to be reflected in the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="f8043-751">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="f8043-751">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.Hashtable.Keys" />
      </Docs>
    </Member>
  </Members>
</Type>
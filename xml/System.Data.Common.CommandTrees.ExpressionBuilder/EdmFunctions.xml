<Type Name="EdmFunctions" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d23b740d732b5e61661f2c7879d7b0c51cc2a1ac" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36694831" /></Metadata><TypeSignature Language="C#" Value="public static class EdmFunctions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EdmFunctions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions" />
  <TypeSignature Language="VB.NET" Value="Public Module EdmFunctions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EdmFunctions abstract sealed" />
  <TypeSignature Language="F#" Value="type EdmFunctions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a428a-101">Proporciona una API para construir objetos <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que invoquen funciones EDM canónicas y permite tener acceso a esa API como métodos de extensión en los tipos de la propia expresión.</span><span class="sxs-lookup"><span data-stu-id="a428a-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that invoke canonical EDM functions, and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Abs(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Abs (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Abs(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a428a-102">Una expresión que especifica el valor numérico.</span><span class="sxs-lookup"><span data-stu-id="a428a-102">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="a428a-103">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Abs' canónica con el argumento especificado, cada uno de los cuales debe tener un tipo de resultado numérico.</span><span class="sxs-lookup"><span data-stu-id="a428a-103">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Abs' function with the specified argument, which must each have a numeric result type.</span></span> <span data-ttu-id="a428a-104">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-104">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a428a-105">Nueva clase DbFunctionExpression que devuelve el valor absoluto de **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-105">A new DbFunctionExpression that returns the absolute value of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-106">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-106">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-107">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-107">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddDays(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddDays (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a428a-108">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-108">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-109">Expresión que especifica el número de días que se van a agregar a **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-109">An expression that specifies the number of days to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-110">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddDays' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-110">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddDays' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="a428a-111">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-111">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-112">Nueva clase DbFunctionExpression que agrega el número de días especificados por **addValue** al valor especificado por **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-112">A new DbFunctionExpression that adds the number of days specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-113">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-113">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-114">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-114">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddHours(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddHours (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-115">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-115">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-116">Expresión que especifica el número de horas que se van a agregar a **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-116">An expression that specifies the number of hours to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-117">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddHours' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-117">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddHours' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a428a-118">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-118">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-119">Nueva clase DbFunctionExpression que agrega el número de horas especificadas por **addValue** al valor especificado por **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-119">A new DbFunctionExpression that adds the number of hours specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-120">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-120">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-121">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-121">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMicroseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-122">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-122">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-123">Expresión que especifica el número de microsegundos que se van a agregar a **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-123">An expression that specifies the number of microseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-124">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddMicroseconds' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-124">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMicroseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a428a-125">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-125">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-126">Nueva clase DbFunctionExpression que agrega el número de microsegundos especificados por **addValue** al valor especificado por **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-126">A new DbFunctionExpression that adds the number of microseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-127">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-127">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-128">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-128">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMilliseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-129">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-129">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-130">Expresión que especifica el número de milisegundos que se van a agregar a **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-130">An expression that specifies the number of milliseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-131">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddMilliseconds' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-131">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMilliseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a428a-132">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-132">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-133">Nueva clase DbFunctionExpression que agrega el número de milisegundos especificados por **addValue** al valor especificado por **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-133">A new DbFunctionExpression that adds the number of milliseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-134">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-134">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-135">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-135">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMinutes (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-136">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-136">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-137">Expresión que especifica el número de minutos que se van a agregar a **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-137">An expression that specifies the number of minutes to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-138">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddMinutes' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-138">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMinutes' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a428a-139">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-139">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-140">Nueva clase DbFunctionExpression que agrega el número de minutos especificados por **addValue** al valor especificado por **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-140">A new DbFunctionExpression that adds the number of minutes specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-141">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-141">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-142">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-142">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddMonths(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddMonths (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a428a-143">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-143">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-144">Expresión que especifica el número de meses que se van a agregar a **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-144">An expression that specifies the number of months to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-145">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddMonths' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-145">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddMonths' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="a428a-146">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-146">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-147">Nueva clase DbFunctionExpression que agrega el número de meses especificados por **addValue** al valor especificado por **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-147">A new DbFunctionExpression that adds the number of months specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-148">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-148">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-149">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-149">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddNanoseconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-150">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-150">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-151">Expresión que especifica el número de nanosegundos que se van a agregar a **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-151">An expression that specifies the number of nanoseconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-152">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddNanoseconds' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-152">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddNanoseconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a428a-153">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-153">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-154">Nueva clase DbFunctionExpression que agrega el número de nanosegundos especificados por **addValue** al valor especificado por **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-154">A new DbFunctionExpression that adds the number of nanoseconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-155">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-155">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-156">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-156">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddSeconds (timeValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds (timeValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-157">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-157">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-158">Expresión que especifica el número de segundos que se van a agregar a **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-158">An expression that specifies the number of seconds to add to **timeValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-159">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddSeconds' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-159">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddSeconds' function with the specified arguments, which must have DateTime, DateTimeOffset or Time, and integer result types.</span></span> <span data-ttu-id="a428a-160">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-160">The result type of the expression is the same as the result type of **timeValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-161">Nueva clase DbFunctionExpression que agrega el número de segundos especificados por **addValue** al valor especificado por **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-161">A new DbFunctionExpression that adds the number of seconds specified by **addValue** to the value specified by **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-162">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-162">**timeValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-163">**timeValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-163">**timeValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression AddYears(class System.Data.Common.CommandTrees.DbExpression dateValue, class System.Data.Common.CommandTrees.DbExpression addValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddYears (dateValue As DbExpression, addValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ AddYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue, System::Data::Common::CommandTrees::DbExpression ^ addValue);" />
      <MemberSignature Language="F#" Value="static member AddYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears (dateValue, addValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="addValue" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a428a-164">Expresión que especifica el valor al que se debe agregar **addValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-164">An expression that specifies the value to which **addValue**should be added.</span></span></param>
        <param name="addValue"><span data-ttu-id="a428a-165">Expresión que especifica el número de años que se van a agregar a **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-165">An expression that specifies the number of years to add to **dateValue**.</span></span></param>
        <summary><span data-ttu-id="a428a-166">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'AddYears' canónica con los argumentos especificados, que deben tener tipos de resultado entero y DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-166">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'AddYears' function with the specified arguments, which must have DateTime or DateTimeOffset and integer result types.</span></span> <span data-ttu-id="a428a-167">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-167">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-168">Nueva clase DbFunctionExpression que agrega el número de años especificados por **addValue** al valor especificado por **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-168">A new DbFunctionExpression that adds the number of years specified by **addValue** to the value specified by **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-169">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-169">**dateValue** **addValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-170">**dateValue** **addValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-170">**dateValue** **addValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Average">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Average(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Average (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Average(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Average : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-171">Una expresión que especifica la colección cuyo valor promedio se debe calcular.</span><span class="sxs-lookup"><span data-stu-id="a428a-171">An expression that specifies the collection from which the average value should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-172">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “Avg” canónica sobre la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-172">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Avg' function over the specified collection.</span></span> <span data-ttu-id="a428a-173">El tipo de resultado de la expresión es el mismo que el tipo de elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="a428a-173">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="a428a-174">Nueva expresión DbFunctionExpression que produce el valor promedio.</span><span class="sxs-lookup"><span data-stu-id="a428a-174">A new DbFunctionExpression that produces the average value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-175">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-175">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-176">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-176">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseAnd (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseAnd(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseAnd : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="a428a-177">Una expresión que especifica el primer operando.</span><span class="sxs-lookup"><span data-stu-id="a428a-177">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="a428a-178">Una expresión que especifica el segundo operando.</span><span class="sxs-lookup"><span data-stu-id="a428a-178">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="a428a-179">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'BitwiseAnd' canónica con los argumentos especificados, que deben tener el mismo tipo de resultado numérico entero.</span><span class="sxs-lookup"><span data-stu-id="a428a-179">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseAnd' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="a428a-180">El tipo de resultado de la expresión es el mismo que el tipo de los operandos argumentos.</span><span class="sxs-lookup"><span data-stu-id="a428a-180">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="a428a-181">Nueva clase DbFunctionExpression que devuelve el valor generado realizando una operación AND bit a bit de **value1** y de **value2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-181">A new DbFunctionExpression that returns the value produced by performing the bitwise AND of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-182">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a428a-182">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-183">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a428a-183">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseNot">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseNot (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseNot(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member BitwiseNot : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a428a-184">Una expresión que especifica el primer operando.</span><span class="sxs-lookup"><span data-stu-id="a428a-184">An expression that specifies the first operand.</span></span></param>
        <summary><span data-ttu-id="a428a-185">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'BitwiseNot' canónica con el argumento especificado, que debe tener un tipo de resultado numérico entero.</span><span class="sxs-lookup"><span data-stu-id="a428a-185">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseNot' function with the specified argument, which must have an integer numeric result type.</span></span> <span data-ttu-id="a428a-186">El tipo de resultado de la expresión es el mismo que el tipo de los operandos argumentos.</span><span class="sxs-lookup"><span data-stu-id="a428a-186">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="a428a-187">Nueva clase DbFunctionExpression que devuelve el valor generado realizando una operación NOT bit a bit de **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-187">A new DbFunctionExpression that returns the value produced by performing the bitwise NOT of **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-188">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-188">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-189">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-189">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseOr (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseOr(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseOr : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="a428a-190">Una expresión que especifica el primer operando.</span><span class="sxs-lookup"><span data-stu-id="a428a-190">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="a428a-191">Una expresión que especifica el segundo operando.</span><span class="sxs-lookup"><span data-stu-id="a428a-191">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="a428a-192">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'BitwiseOr' canónica con los argumentos especificados, que deben tener el mismo tipo de resultado numérico entero.</span><span class="sxs-lookup"><span data-stu-id="a428a-192">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseOr' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="a428a-193">El tipo de resultado de la expresión es el mismo que el tipo de los operandos argumentos.</span><span class="sxs-lookup"><span data-stu-id="a428a-193">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="a428a-194">Nueva clase DbFunctionExpression que devuelve el valor generado realizando una operación OR bit a bit de **value1** y de **value2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-194">A new DbFunctionExpression that returns the value produced by performing the bitwise OR of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-195">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a428a-195">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-196">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a428a-196">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BitwiseXor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor(class System.Data.Common.CommandTrees.DbExpression value1, class System.Data.Common.CommandTrees.DbExpression value2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BitwiseXor (value1 As DbExpression, value2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ BitwiseXor(System::Data::Common::CommandTrees::DbExpression ^ value1, System::Data::Common::CommandTrees::DbExpression ^ value2);" />
      <MemberSignature Language="F#" Value="static member BitwiseXor : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor (value1, value2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="value2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value1"><span data-ttu-id="a428a-197">Una expresión que especifica el primer operando.</span><span class="sxs-lookup"><span data-stu-id="a428a-197">An expression that specifies the first operand.</span></span></param>
        <param name="value2"><span data-ttu-id="a428a-198">Una expresión que especifica el segundo operando.</span><span class="sxs-lookup"><span data-stu-id="a428a-198">An expression that specifies the second operand.</span></span></param>
        <summary><span data-ttu-id="a428a-199">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'BitwiseXor' canónica con los argumentos especificados, que deben tener el mismo tipo de resultado numérico entero.</span><span class="sxs-lookup"><span data-stu-id="a428a-199">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BitwiseXor' function with the specified arguments, which must have the same integer numeric result type.</span></span> <span data-ttu-id="a428a-200">El tipo de resultado de la expresión es el mismo que el tipo de los operandos argumentos.</span><span class="sxs-lookup"><span data-stu-id="a428a-200">The result type of the expression is the same as the type of the arguments.</span></span></summary>
        <returns><span data-ttu-id="a428a-201">Nueva clase DbFunctionExpression que devuelve el valor generado realizando una operación XOR (OR exclusivo) bit a bit de **value1** y de **value2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-201">A new DbFunctionExpression that returns the value produced by performing the bitwise XOR (exclusive OR) of **value1** and **value2**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-202">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a428a-202">**value1** **value2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-203">**value1** **value2**</span><span class="sxs-lookup"><span data-stu-id="a428a-203">**value1** **value2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Ceiling">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Ceiling(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Ceiling (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Ceiling(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Ceiling : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a428a-204">Una expresión que especifica el valor numérico.</span><span class="sxs-lookup"><span data-stu-id="a428a-204">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="a428a-205">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Ceiling' canónica con el argumento especificado, cada uno de los cuales debe tener un tipo de resultado single, doble o decimal.</span><span class="sxs-lookup"><span data-stu-id="a428a-205">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Ceiling' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="a428a-206">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-206">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a428a-207">Nueva clase DbFunctionExpression que devuelve el valor entero más pequeño no inferior a **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-207">A new DbFunctionExpression that returns the smallest integer value not less than than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-208">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-208">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-209">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-209">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Concat(class System.Data.Common.CommandTrees.DbExpression string1, class System.Data.Common.CommandTrees.DbExpression string2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Concat (string1 As DbExpression, string2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Concat(System::Data::Common::CommandTrees::DbExpression ^ string1, System::Data::Common::CommandTrees::DbExpression ^ string2);" />
      <MemberSignature Language="F#" Value="static member Concat : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat (string1, string2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="string2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="string1"><span data-ttu-id="a428a-210">Una expresión que especifica la cadena que debe aparecer en primer lugar en la cadena de resultados concatenada.</span><span class="sxs-lookup"><span data-stu-id="a428a-210">An expression that specifies the string that should appear first in the concatenated result string.</span></span></param>
        <param name="string2"><span data-ttu-id="a428a-211">Una expresión que especifica la cadena que debe aparecer en segundo lugar en la cadena de resultados concatenada.</span><span class="sxs-lookup"><span data-stu-id="a428a-211">An expression that specifies the string that should appear second in the concatenated result string.</span></span></param>
        <summary><span data-ttu-id="a428a-212">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Concat' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-212">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Concat' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a428a-213">El tipo de resultado de la expresión es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-213">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="a428a-214">Nueva DbFunctionExpression que genera la cadena concatenada.</span><span class="sxs-lookup"><span data-stu-id="a428a-214">A new DbFunctionExpression that produces the concatenated string.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-215">**string1** **string2**</span><span class="sxs-lookup"><span data-stu-id="a428a-215">**string1** **string2**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-216">**string1** **string2**</span><span class="sxs-lookup"><span data-stu-id="a428a-216">**string1** **string2**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Contains(class System.Data.Common.CommandTrees.DbExpression searchedString, class System.Data.Common.CommandTrees.DbExpression searchedForString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Contains (searchedString As DbExpression, searchedForString As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Contains(System::Data::Common::CommandTrees::DbExpression ^ searchedString, System::Data::Common::CommandTrees::DbExpression ^ searchedForString);" />
      <MemberSignature Language="F#" Value="static member Contains : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains (searchedString, searchedForString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchedString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="searchedForString" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchedString"><span data-ttu-id="a428a-217">Expresión que especifica la cadena cuyas coincidencias con **searchedForString** se van a buscar.</span><span class="sxs-lookup"><span data-stu-id="a428a-217">An expression that specifies the string to search for any occurence of **searchedForString**.</span></span></param>
        <param name="searchedForString"><span data-ttu-id="a428a-218">Expresión que especifica la cadena que se va a buscar en **searchedString**.</span><span class="sxs-lookup"><span data-stu-id="a428a-218">An expression that specifies the string to search for in **searchedString**.</span></span></param>
        <summary><span data-ttu-id="a428a-219">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Contains' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-219">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Contains' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a428a-220">El tipo de resultado de la expresión es booleano.</span><span class="sxs-lookup"><span data-stu-id="a428a-220">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="a428a-221">Nueva clase DbFunctionExpression que devuelve un valor booleano que indica si **searchedForString** se produce dentro de **searchedString**.</span><span class="sxs-lookup"><span data-stu-id="a428a-221">A new DbFunctionExpression that returns a Boolean value indicating whether or not **searchedForString** occurs within **searchedString**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-222">**searchedString** **searchedForString**</span><span class="sxs-lookup"><span data-stu-id="a428a-222">**searchedString** **searchedForString**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-223">**searchedString** **searchedForString**</span><span class="sxs-lookup"><span data-stu-id="a428a-223">**searchedString** **searchedForString**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Count(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Count (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Count(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Count : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-224">Una expresión que especifica la colección sobre la que se debe calcular el valor de recuento.</span><span class="sxs-lookup"><span data-stu-id="a428a-224">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-225">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “Count” canónica sobre la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-225">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Count' function over the specified collection.</span></span> <span data-ttu-id="a428a-226">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-226">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-227">Nueva expresión DbFunctionExpression que genera el valor de recuento.</span><span class="sxs-lookup"><span data-stu-id="a428a-227">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-228">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-228">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-229">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-229">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTime (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTime(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateDateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime (year, month, day, hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="a428a-230">Una expresión que proporciona el valor de año para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-230">An expression that provides the year value for the new DateTime instance.</span></span></param>
        <param name="month"><span data-ttu-id="a428a-231">Una expresión que proporciona el valor de mes para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-231">An expression that provides the month value for the new DateTime instance.</span></span></param>
        <param name="day"><span data-ttu-id="a428a-232">Una expresión que proporciona el valor de día para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-232">An expression that provides the day value for the new DateTime instance.</span></span></param>
        <param name="hour"><span data-ttu-id="a428a-233">Una expresión que proporciona el valor de hora para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-233">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="a428a-234">Una expresión que proporciona el valor de minuto para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-234">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="a428a-235">Una expresión que proporciona el valor de segundo para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-235">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="a428a-236">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que llama a la función 'CreateDateTime' canónica con los argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="a428a-236">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTime' function with the specified arguments.</span></span> <span data-ttu-id="a428a-237">**second** debe tener un tipo de resultado de Edm.Double, mientras que todos los demás argumentos deben tener un tipo de resultado de Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-237">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="a428a-238">El tipo de resultado de la expresión es Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-238">The result type of the expression is Edm.DateTime.</span></span></summary>
        <returns><span data-ttu-id="a428a-239">Nuevo DbFunctionExpression que devuelve un nuevo DateTime según los valores especificados.</span><span class="sxs-lookup"><span data-stu-id="a428a-239">A new DbFunctionExpression that returns a new DateTime based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-240">**year** **month** **day** **hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="a428a-240">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-241">**year** **month** **day** **hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="a428a-241">**year** **month** **day** **hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset(class System.Data.Common.CommandTrees.DbExpression year, class System.Data.Common.CommandTrees.DbExpression month, class System.Data.Common.CommandTrees.DbExpression day, class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second, class System.Data.Common.CommandTrees.DbExpression timeZoneOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDateTimeOffset (year As DbExpression, month As DbExpression, day As DbExpression, hour As DbExpression, minute As DbExpression, second As DbExpression, timeZoneOffset As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateDateTimeOffset(System::Data::Common::CommandTrees::DbExpression ^ year, System::Data::Common::CommandTrees::DbExpression ^ month, System::Data::Common::CommandTrees::DbExpression ^ day, System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second, System::Data::Common::CommandTrees::DbExpression ^ timeZoneOffset);" />
      <MemberSignature Language="F#" Value="static member CreateDateTimeOffset : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset (year, month, day, hour, minute, second, timeZoneOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="year" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="month" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="day" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="timeZoneOffset" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="year"><span data-ttu-id="a428a-242">Una expresión que proporciona el valor de año para la nueva instancia de DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-242">An expression that provides the year value for the new DateTimeOffset instance.</span></span></param>
        <param name="month"><span data-ttu-id="a428a-243">Una expresión que proporciona el valor de mes para la nueva instancia de DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-243">An expression that provides the month value for the new DateTimeOffset instance.</span></span></param>
        <param name="day"><span data-ttu-id="a428a-244">Una expresión que proporciona el valor de día para la nueva instancia de DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-244">An expression that provides the day value for the new DateTimeOffset instance.</span></span></param>
        <param name="hour"><span data-ttu-id="a428a-245">Una expresión que proporciona el valor de hora para la nueva instancia de DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-245">An expression that provides the hour value for the new DateTimeOffset instance.</span></span></param>
        <param name="minute"><span data-ttu-id="a428a-246">Una expresión que proporciona el valor de minuto para la nueva instancia de DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-246">An expression that provides the minute value for the new DateTimeOffset instance.</span></span></param>
        <param name="second"><span data-ttu-id="a428a-247">Una expresión que proporciona el valor de segundo para la nueva instancia de DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-247">An expression that provides the second value for the new DateTimeOffset instance.</span></span></param>
        <param name="timeZoneOffset"><span data-ttu-id="a428a-248">Una expresión que proporciona el número de minutos en el valor de desplazamiento de zona horaria para la nueva instancia de DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-248">An expression that provides the number of minutes in the time zone offset value for the new DateTimeOffset instance.</span></span></param>
        <summary><span data-ttu-id="a428a-249">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que llama a la función 'CreateDateTimeOffset' canónica con los argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="a428a-249">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateDateTimeOffset' function with the specified arguments.</span></span> <span data-ttu-id="a428a-250">**second** debe tener un tipo de resultado de Edm.Double, mientras que todos los demás argumentos deben tener un tipo de resultado de Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-250">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="a428a-251">El tipo de resultado de la expresión es Edm.DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-251">The result type of the expression is Edm.DateTimeOffset.</span></span></summary>
        <returns><span data-ttu-id="a428a-252">Nuevo DbFunctionExpression que devuelve un nuevo DateTimeOffset según los valores especificados.</span><span class="sxs-lookup"><span data-stu-id="a428a-252">A new DbFunctionExpression that returns a new DateTimeOffset based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span><span class="sxs-lookup"><span data-stu-id="a428a-253">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span><span class="sxs-lookup"><span data-stu-id="a428a-254">**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CreateTime(class System.Data.Common.CommandTrees.DbExpression hour, class System.Data.Common.CommandTrees.DbExpression minute, class System.Data.Common.CommandTrees.DbExpression second) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateTime (hour As DbExpression, minute As DbExpression, second As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CreateTime(System::Data::Common::CommandTrees::DbExpression ^ hour, System::Data::Common::CommandTrees::DbExpression ^ minute, System::Data::Common::CommandTrees::DbExpression ^ second);" />
      <MemberSignature Language="F#" Value="static member CreateTime : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime (hour, minute, second)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hour" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="minute" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="second" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="hour"><span data-ttu-id="a428a-255">Una expresión que proporciona el valor de hora para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-255">An expression that provides the hour value for the new DateTime instance.</span></span></param>
        <param name="minute"><span data-ttu-id="a428a-256">Una expresión que proporciona el valor de minuto para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-256">An expression that provides the minute value for the new DateTime instance.</span></span></param>
        <param name="second"><span data-ttu-id="a428a-257">Una expresión que proporciona el valor de segundo para la nueva instancia de DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-257">An expression that provides the second value for the new DateTime instance.</span></span></param>
        <summary><span data-ttu-id="a428a-258">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que llama a la función 'CreateTime' canónica con los argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="a428a-258">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CreateTime' function with the specified arguments.</span></span> <span data-ttu-id="a428a-259">**second** debe tener un tipo de resultado de Edm.Double, mientras que todos los demás argumentos deben tener un tipo de resultado de Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-259">**second** must have a result type of Edm.Double, while all other arguments must have a result type of Edm.Int32.</span></span> <span data-ttu-id="a428a-260">El tipo de resultado de la expresión es Edm.Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-260">The result type of the expression is Edm.Time.</span></span></summary>
        <returns><span data-ttu-id="a428a-261">Nuevo DbFunctionExpression que devuelve un nuevo Time según los valores especificados.</span><span class="sxs-lookup"><span data-stu-id="a428a-261">A new DbFunctionExpression that returns a new Time based on the specified values.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-262">**hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="a428a-262">**hour** **minute** **second**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-263">**hour** **minute** **second**</span><span class="sxs-lookup"><span data-stu-id="a428a-263">**hour** **minute** **second**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a428a-264">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'CurrentDateTime' canónica.</span><span class="sxs-lookup"><span data-stu-id="a428a-264">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="a428a-265">Nuevo DbFunctionExpression que devuelve la fecha y la hora actual como una instancia de Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-265">A new DbFunctionExpression that returns the current date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDateTimeOffset">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentDateTimeOffset () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentDateTimeOffset();" />
      <MemberSignature Language="F#" Value="static member CurrentDateTimeOffset : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a428a-266">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'CurrentDateTimeOffset' canónica.</span><span class="sxs-lookup"><span data-stu-id="a428a-266">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentDateTimeOffset' function.</span></span></summary>
        <returns><span data-ttu-id="a428a-267">Nuevo DbFunctionExpression que devuelve la fecha y la hora actual como una instancia de Edm.DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-267">A new DbFunctionExpression that returns the current date and time as an Edm.DateTimeOffset instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentUtcDateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime" />
      <MemberSignature Language="VB.NET" Value="Public Function CurrentUtcDateTime () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ CurrentUtcDateTime();" />
      <MemberSignature Language="F#" Value="static member CurrentUtcDateTime : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a428a-268">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'CurrentUtcDateTime' canónica.</span><span class="sxs-lookup"><span data-stu-id="a428a-268">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'CurrentUtcDateTime' function.</span></span></summary>
        <returns><span data-ttu-id="a428a-269">Nuevo DbFunctionExpression que devuelve la fecha y la hora UTC actual como una instancia de Edm.DateTime.</span><span class="sxs-lookup"><span data-stu-id="a428a-269">A new DbFunctionExpression that returns the current UTC date and time as an Edm.DateTime instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Day">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Day(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Day (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Day(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Day : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a428a-270">Expresión que especifica el valor del que se debe recuperar el día.</span><span class="sxs-lookup"><span data-stu-id="a428a-270">An expression that specifies the value from which the day should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-271">Crea una <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Day' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-271">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Day' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-272">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-272">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-273">Nueva clase DbFunctionExpression que devuelve el valor de día de entero de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-273">A new DbFunctionExpression that returns the integer day value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-274">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-274">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-275">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-275">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DayOfYear">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DayOfYear (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DayOfYear(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member DayOfYear : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a428a-276">Expresión que especifica el valor del que se debe recuperar el día del año.</span><span class="sxs-lookup"><span data-stu-id="a428a-276">An expression that specifies the value from which the day within the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-277">Crea una <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DayOfYear' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-277">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DayOfYear' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-278">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-278">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-279">Nueva clase DbFunctionExpression que devuelve el valor de día del año entero de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-279">A new DbFunctionExpression that returns the integer day of year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-280">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-280">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-281">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-281">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DiffDays">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffDays(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffDays (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffDays(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffDays : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="a428a-282">Expresión que especifica el primer argumento de valor de fecha.</span><span class="sxs-lookup"><span data-stu-id="a428a-282">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="a428a-283">Expresión que especifica el segundo argumento de valor de fecha.</span><span class="sxs-lookup"><span data-stu-id="a428a-283">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-284">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffDays' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-284">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffDays' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-285">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-285">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-286">Nueva clase DbFunctionExpression que devuelve el número de días que es la diferencia entre **dateValue1** y **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-286">A new DbFunctionExpression that returns the number of days that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffHours">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffHours(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffHours (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffHours(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffHours : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a428a-287">Expresión que especifica el primer argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-287">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a428a-288">Expresión que especifica el segundo argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-288">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-289">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffHours' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-289">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffHours' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-290">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-290">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-291">Nueva clase DbFunctionExpression que devuelve el número de horas que es la diferencia entre **timeValue1** y **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-291">A new DbFunctionExpression that returns the number of hours that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMicroseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMicroseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMicroseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMicroseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a428a-292">Expresión que especifica el primer argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-292">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a428a-293">Expresión que especifica el segundo argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-293">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-294">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffMicroseconds' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-294">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMicroseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-295">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-295">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-296">Nueva clase DbFunctionExpression que devuelve el número de microsegundos que es la diferencia entre **timeValue1** y **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-296">A new DbFunctionExpression that returns the number of microseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMilliseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMilliseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMilliseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMilliseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a428a-297">Expresión que especifica el primer argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-297">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a428a-298">Expresión que especifica el segundo argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-298">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-299">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffMilliseconds' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-299">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMilliseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-300">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-300">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-301">Nueva clase DbFunctionExpression que devuelve el número de milisegundos que es la diferencia entre **timeValue1** y **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-301">A new DbFunctionExpression that returns the number of milliseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMinutes (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMinutes(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMinutes : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a428a-302">Expresión que especifica el primer argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-302">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a428a-303">Expresión que especifica el segundo argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-303">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-304">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffMinutes' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-304">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMinutes' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-305">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-305">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-306">Nueva clase DbFunctionExpression que devuelve el número de minutos que es la diferencia entre **timeValue1** y **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-306">A new DbFunctionExpression that returns the number of minutes that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffMonths">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffMonths (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffMonths(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffMonths : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="a428a-307">Expresión que especifica el primer argumento de valor de fecha.</span><span class="sxs-lookup"><span data-stu-id="a428a-307">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="a428a-308">Expresión que especifica el segundo argumento de valor de fecha.</span><span class="sxs-lookup"><span data-stu-id="a428a-308">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-309">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffMonths' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-309">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffMonths' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-310">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-310">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-311">Nueva clase DbFunctionExpression que devuelve el número de meses que es la diferencia entre **dateValue1** y **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-311">A new DbFunctionExpression that returns the number of months that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffNanoseconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffNanoseconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffNanoseconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffNanoseconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a428a-312">Expresión que especifica el primer argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-312">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a428a-313">Expresión que especifica el segundo argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-313">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-314">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffNanoseconds' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-314">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffNanoseconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-315">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-315">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-316">Nueva clase DbFunctionExpression que devuelve el número de nanosegundos que es la diferencia entre **timeValue1** y **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-316">A new DbFunctionExpression that returns the number of nanoseconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffSeconds">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds(class System.Data.Common.CommandTrees.DbExpression timeValue1, class System.Data.Common.CommandTrees.DbExpression timeValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffSeconds (timeValue1 As DbExpression, timeValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffSeconds(System::Data::Common::CommandTrees::DbExpression ^ timeValue1, System::Data::Common::CommandTrees::DbExpression ^ timeValue2);" />
      <MemberSignature Language="F#" Value="static member DiffSeconds : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds (timeValue1, timeValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="timeValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="timeValue1"><span data-ttu-id="a428a-317">Expresión que especifica el primer argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-317">An expression that specifies the first time value argument.</span></span></param>
        <param name="timeValue2"><span data-ttu-id="a428a-318">Expresión que especifica el segundo argumento de valor de tiempo.</span><span class="sxs-lookup"><span data-stu-id="a428a-318">An expression that specifies the second time value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-319">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffSeconds' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-319">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffSeconds' function with the specified arguments, which must each have DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-320">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-320">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-321">Nueva clase DbFunctionExpression que devuelve el número de segundos que es la diferencia entre **timeValue1** y **timeValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-321">A new DbFunctionExpression that returns the number of seconds that is the difference between **timeValue1** and **timeValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffYears">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression DiffYears(class System.Data.Common.CommandTrees.DbExpression dateValue1, class System.Data.Common.CommandTrees.DbExpression dateValue2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function DiffYears (dateValue1 As DbExpression, dateValue2 As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ DiffYears(System::Data::Common::CommandTrees::DbExpression ^ dateValue1, System::Data::Common::CommandTrees::DbExpression ^ dateValue2);" />
      <MemberSignature Language="F#" Value="static member DiffYears : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears (dateValue1, dateValue2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue1" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="dateValue2" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="dateValue1"><span data-ttu-id="a428a-322">Expresión que especifica el primer argumento de valor de fecha.</span><span class="sxs-lookup"><span data-stu-id="a428a-322">An expression that specifies the first date value argument.</span></span></param>
        <param name="dateValue2"><span data-ttu-id="a428a-323">Expresión que especifica el segundo argumento de valor de fecha.</span><span class="sxs-lookup"><span data-stu-id="a428a-323">An expression that specifies the second date value argument.</span></span></param>
        <summary><span data-ttu-id="a428a-324">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'DiffYears' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-324">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'DiffYears' function with the specified arguments, which must each have DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-325">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-325">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-326">Nueva clase DbFunctionExpression que devuelve el número de años que es la diferencia entre **dateValue1** y **dateValue2**.</span><span class="sxs-lookup"><span data-stu-id="a428a-326">A new DbFunctionExpression that returns the number of years that is the difference between **dateValue1** and **dateValue2**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression EndsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression suffix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function EndsWith (stringArgument As DbExpression, suffix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ EndsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ suffix);" />
      <MemberSignature Language="F#" Value="static member EndsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith (stringArgument, suffix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="suffix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-327">Expresión que especifica la cadena que se busca al final de la cadena **suffix**.</span><span class="sxs-lookup"><span data-stu-id="a428a-327">An expression that specifies the string that is searched at the end for string **suffix**.</span></span></param>
        <param name="suffix"><span data-ttu-id="a428a-328">Expresión que especifica la cadena de destino que se busca en el final de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-328">An expression that specifies the target string that is searched for at the end of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="a428a-329">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'EndsWith' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-329">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'EndsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a428a-330">El tipo de resultado de la expresión es booleano.</span><span class="sxs-lookup"><span data-stu-id="a428a-330">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="a428a-331">Nueva clase DbFunctionExpression que devuelve un valor booleano que indica si **stringArgument** termina con **suffix**.</span><span class="sxs-lookup"><span data-stu-id="a428a-331">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** ends with **suffix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Floor">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Floor(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Floor (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Floor(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Floor : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a428a-332">Una expresión que especifica el valor numérico.</span><span class="sxs-lookup"><span data-stu-id="a428a-332">An expression that specifies the numeric value.</span></span></param>
        <summary><span data-ttu-id="a428a-333">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Floor' canónica con el argumento especificado, cada uno de los cuales debe tener un tipo de resultado single, doble o decimal.</span><span class="sxs-lookup"><span data-stu-id="a428a-333">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Floor' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="a428a-334">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-334">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a428a-335">Nueva clase DbFunctionExpression que devuelve el valor expresado en número entero mayor no superior a **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-335">A new DbFunctionExpression that returns the largest integer value not greater than **value**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-336">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-336">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-337">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-337">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTotalOffsetMinutes">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes(class System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTotalOffsetMinutes (dateTimeOffsetArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ GetTotalOffsetMinutes(System::Data::Common::CommandTrees::DbExpression ^ dateTimeOffsetArgument);" />
      <MemberSignature Language="F#" Value="static member GetTotalOffsetMinutes : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes dateTimeOffsetArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateTimeOffsetArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateTimeOffsetArgument"><span data-ttu-id="a428a-338">Una expresión que especifica el valor DateTimeOffset del que se debe recuperar el desplazamiento de minutos respecto de GMT.</span><span class="sxs-lookup"><span data-stu-id="a428a-338">An expression that specifies the DateTimeOffset value from which the minute offset from GMT should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-339">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'GetTotalOffsetMinutes' canónica con el argumento especificado, que debe tener un tipo de resultado DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-339">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'GetTotalOffsetMinutes' function with the specified argument, which must have a DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-340">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-340">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-341">Nueva clase DbFunctionExpression que devuelve el número de minutos **dateTimeOffsetArgument** que es un desplazamiento de GMT.</span><span class="sxs-lookup"><span data-stu-id="a428a-341">A new DbFunctionExpression that returns the number of minutes **dateTimeOffsetArgument** is offset from GMT.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-342">**dateTimeOffsetArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-342">**dateTimeOffsetArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-343">**dateTimeOffsetArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-343">**dateTimeOffsetArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hour">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Hour(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Hour (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Hour(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Hour : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-344">Expresión que especifica el valor del que se debe recuperar la hora.</span><span class="sxs-lookup"><span data-stu-id="a428a-344">An expression that specifies the value from which the hour should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-345">Crea una <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Hour' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-345">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Hour' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-346">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-346">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-347">Nueva clase DbFunctionExpression que devuelve el valor de hora entero de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-347">A new DbFunctionExpression that returns the integer hour value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-348">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-348">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-349">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-349">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression IndexOf(class System.Data.Common.CommandTrees.DbExpression searchString, class System.Data.Common.CommandTrees.DbExpression stringToFind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IndexOf (searchString As DbExpression, stringToFind As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ IndexOf(System::Data::Common::CommandTrees::DbExpression ^ searchString, System::Data::Common::CommandTrees::DbExpression ^ stringToFind);" />
      <MemberSignature Language="F#" Value="static member IndexOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf (searchString, stringToFind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchString" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="stringToFind" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="searchString"><span data-ttu-id="a428a-350">Expresión que especifica la cadena que se va a buscar en **stringToFind**.</span><span class="sxs-lookup"><span data-stu-id="a428a-350">An expression that specifies the string to search for **stringToFind**.</span></span></param>
        <param name="stringToFind"><span data-ttu-id="a428a-351">Se debe comprobar una expresión que especifique la cadena que se va a buscar dentro de **searchString**.</span><span class="sxs-lookup"><span data-stu-id="a428a-351">An expression that specifies the string to locate within **searchString** should be checked.</span></span></param>
        <summary><span data-ttu-id="a428a-352">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'IndexOf' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-352">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'IndexOf' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a428a-353">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-353">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-354">Nueva clase DbFunctionExpression que devuelve el primer índice de **stringToFind** en **searchString**.</span><span class="sxs-lookup"><span data-stu-id="a428a-354">A new DbFunctionExpression that returns the first index of **stringToFind** in **searchString**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a428a-355">Es el índice devuelto por IndexOf \<b > basado en 1\</b >.</span><span class="sxs-lookup"><span data-stu-id="a428a-355">The index returned by IndexOf is \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-356">**searchString** **stringToFind**</span><span class="sxs-lookup"><span data-stu-id="a428a-356">**searchString** **stringToFind**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-357">**searchString** **stringToFind**</span><span class="sxs-lookup"><span data-stu-id="a428a-357">**searchString** **stringToFind**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Left(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Left (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Left(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Left : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-358">Expresión que especifica la cadena de la que se va a extraer la subcadena más a la izquierda.</span><span class="sxs-lookup"><span data-stu-id="a428a-358">An expression that specifies the string from which to extract the leftmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="a428a-359">Expresión que especifica la longitud de la subcadena más a la izquierda que se va a extraer de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-359">An expression that specifies the length of the leftmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="a428a-360">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Left' canónica con los argumentos especificados, que deben tener un tipo de resultado numérico entero y de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-360">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Left' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="a428a-361">El tipo de resultado de la expresión es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-361">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="a428a-362">Nuevo elemento DbFunctionExpression que devuelve la subcadena del extremo izquierdo de longitud (**length**) del elemento **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-362">A new DbFunctionExpression that returns the leftmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-363">**stringArgument** **length**</span><span class="sxs-lookup"><span data-stu-id="a428a-363">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-364">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-364">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Length(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Length (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Length(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Length : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-365">Expresión que especifica la cadena para la que se debe calcular la longitud.</span><span class="sxs-lookup"><span data-stu-id="a428a-365">An expression that specifies the string for which the length should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-366">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Length' canónica con el argumento especificado, que debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-366">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Length' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a428a-367">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-367">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-368">Nueva clase DbFunctionExpression que devuelve la longitud de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-368">A new DbFunctionExpression that returns the length of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-369">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-369">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-370">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-370">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LongCount">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression LongCount(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LongCount (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ LongCount(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member LongCount : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-371">Una expresión que especifica la colección sobre la que se debe calcular el valor de recuento.</span><span class="sxs-lookup"><span data-stu-id="a428a-371">An expression that specifies the collection over which the count value should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-372">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “BigCount” canónica sobre la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-372">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'BigCount' function over the specified collection.</span></span> <span data-ttu-id="a428a-373">El tipo de resultado de la expresión es Edm.Int64.</span><span class="sxs-lookup"><span data-stu-id="a428a-373">The result type of the expression is Edm.Int64.</span></span></summary>
        <returns><span data-ttu-id="a428a-374">Nueva expresión DbFunctionExpression que genera el valor de recuento.</span><span class="sxs-lookup"><span data-stu-id="a428a-374">A new DbFunctionExpression that produces the count value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-375">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-375">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-376">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-376">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Max(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Max (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Max(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Max : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-377">Una expresión que especifica la colección cuyo valor máximo se debe recuperar.</span><span class="sxs-lookup"><span data-stu-id="a428a-377">An expression that specifies the collection from which the maximum value should be retrieved</span></span></param>
        <summary><span data-ttu-id="a428a-378">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “Max” canónica sobre la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-378">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Max' function over the specified collection.</span></span> <span data-ttu-id="a428a-379">El tipo de resultado de la expresión es el mismo que el tipo de elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="a428a-379">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="a428a-380">Nueva expresión DbFunctionExpression que produce el valor máximo.</span><span class="sxs-lookup"><span data-stu-id="a428a-380">A new DbFunctionExpression that produces the maximum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-381">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-381">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-382">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-382">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Millisecond">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Millisecond(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Millisecond (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Millisecond(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Millisecond : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-383">Expresión que especifica el valor del que se debe recuperar el milisegundo.</span><span class="sxs-lookup"><span data-stu-id="a428a-383">An expression that specifies the value from which the millisecond should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-384">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Millisecond' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-384">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Millisecond' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-385">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-385">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-386">Nueva clase DbFunctionExpression que devuelve el valor de milisegundo entero de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-386">A new DbFunctionExpression that returns the integer millisecond value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-387">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-387">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-388">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-388">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Min(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Min (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Min(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Min : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-389">Una expresión que especifica la colección cuyo valor mínimo se debe recuperar.</span><span class="sxs-lookup"><span data-stu-id="a428a-389">An expression that specifies the collection from which the minimum value should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-390">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “Min” canónica sobre la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-390">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Min' function over the specified collection.</span></span> <span data-ttu-id="a428a-391">El tipo de resultado de la expresión es el mismo que el tipo de elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="a428a-391">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="a428a-392">Nueva expresión DbFunctionExpression que produce el valor mínimo.</span><span class="sxs-lookup"><span data-stu-id="a428a-392">A new DbFunctionExpression that produces the minimum value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-393">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-393">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-394">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-394">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minute">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Minute(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minute (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Minute(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Minute : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-395">Expresión que especifica el valor del que se debe recuperar el minuto.</span><span class="sxs-lookup"><span data-stu-id="a428a-395">An expression that specifies the value from which the minute should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-396">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Minute' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-396">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Minute' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-397">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-397">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-398">Nueva clase DbFunctionExpression que devuelve el valor de minuto entero de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-398">A new DbFunctionExpression that returns the integer minute value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-399">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-399">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-400">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-400">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Month">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Month(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Month (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Month(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Month : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a428a-401">Expresión que especifica el valor del que se debe recuperar el mes.</span><span class="sxs-lookup"><span data-stu-id="a428a-401">An expression that specifies the value from which the month should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-402">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Month' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-402">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Month' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-403">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-403">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-404">Nueva clase DbFunctionExpression que devuelve el valor de mes de entero de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-404">A new DbFunctionExpression that returns the integer month value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-405">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-405">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-406">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-406">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewGuid">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression NewGuid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid" />
      <MemberSignature Language="VB.NET" Value="Public Function NewGuid () As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ NewGuid();" />
      <MemberSignature Language="F#" Value="static member NewGuid : unit -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a428a-407">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'NewGuid' canónica.</span><span class="sxs-lookup"><span data-stu-id="a428a-407">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'NewGuid' function.</span></span></summary>
        <returns><span data-ttu-id="a428a-408">Nuevo DbFunctionExpression que devuelve un nuevo valor de GUID.</span><span class="sxs-lookup"><span data-stu-id="a428a-408">A new DbFunctionExpression that returns a new GUID value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Power">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Power(class System.Data.Common.CommandTrees.DbExpression baseArgument, class System.Data.Common.CommandTrees.DbExpression exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Power (baseArgument As DbExpression, exponent As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Power(System::Data::Common::CommandTrees::DbExpression ^ baseArgument, System::Data::Common::CommandTrees::DbExpression ^ exponent);" />
      <MemberSignature Language="F#" Value="static member Power : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power (baseArgument, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="exponent" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="baseArgument"><span data-ttu-id="a428a-409">Una expresión que especifica el valor numérico para activar a la potencia indicada.</span><span class="sxs-lookup"><span data-stu-id="a428a-409">An expression that specifies the numeric value to raise to the given power.</span></span></param>
        <param name="exponent"><span data-ttu-id="a428a-410">Expresión que especifica la potencia a la que se debe elevar **baseArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-410">An expression that specifies the power to which **baseArgument** should be raised.</span></span></param>
        <summary><span data-ttu-id="a428a-411">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Power' canónica con los argumentos especificados, que deben tener tipos de resultado numéricos.</span><span class="sxs-lookup"><span data-stu-id="a428a-411">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Power' function with the specified arguments, which must have numeric result types.</span></span> <span data-ttu-id="a428a-412">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **baseArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-412">The result type of the expression is the same as the result type of **baseArgument**.</span></span></summary>
        <returns><span data-ttu-id="a428a-413">Nueva clase DbFunctionExpression que devuelve el valor de **baseArgument** elevado a la potencia especificada por **exponent**.</span><span class="sxs-lookup"><span data-stu-id="a428a-413">A new DbFunctionExpression that returns the value of **baseArgument** raised to the power specified by **exponent**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-414">**baseArgument** **exponent**</span><span class="sxs-lookup"><span data-stu-id="a428a-414">**baseArgument** **exponent**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-415">**baseArgument** **exponent**</span><span class="sxs-lookup"><span data-stu-id="a428a-415">**baseArgument** **exponent**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Replace(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression toReplace, class System.Data.Common.CommandTrees.DbExpression replacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Replace (stringArgument As DbExpression, toReplace As DbExpression, replacement As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Replace(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ toReplace, System::Data::Common::CommandTrees::DbExpression ^ replacement);" />
      <MemberSignature Language="F#" Value="static member Replace : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace (stringArgument, toReplace, replacement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="toReplace" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="replacement" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-416">Una expresión que especifica la cadena en la que se va a realizar la operación de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="a428a-416">An expression that specifies the string in which to perform the replacement operation.</span></span></param>
        <param name="toReplace"><span data-ttu-id="a428a-417">Una expresión que especifica la cadena que se va a reemplazar.</span><span class="sxs-lookup"><span data-stu-id="a428a-417">An expression that specifies the string that is replaced.</span></span></param>
        <param name="replacement"><span data-ttu-id="a428a-418">Una expresión que especifica la cadena de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="a428a-418">An expression that specifies the replacement string.</span></span></param>
        <summary><span data-ttu-id="a428a-419">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Replace' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-419">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Replace' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a428a-420">El tipo de resultado de la expresión también es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-420">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a428a-421">Nueva clase DbFunctionExpression que devuelve una cadena nueva basada en **stringArgument** donde cada aparición de **toReplace** se reemplaza por **replacement**.</span><span class="sxs-lookup"><span data-stu-id="a428a-421">A new DbFunctionExpression than returns a new string based on **stringArgument** where every occurence of **toReplace** is replaced by **replacement**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-422">**stringArgument** **toReplace** **replacement**</span><span class="sxs-lookup"><span data-stu-id="a428a-422">**stringArgument** **toReplace** **replacement**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-423">**stringArgument** **toReplace** **replacement**</span><span class="sxs-lookup"><span data-stu-id="a428a-423">**stringArgument** **toReplace** **replacement**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Reverse(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Reverse (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Reverse(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Reverse : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-424">Expresión que especifica la cadena que se va a invertir.</span><span class="sxs-lookup"><span data-stu-id="a428a-424">An expression that specifies the string to reverse.</span></span></param>
        <summary><span data-ttu-id="a428a-425">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Reverse' canónica con el argumento especificado, que debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-425">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Reverse' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a428a-426">El tipo de resultado de la expresión también es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-426">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a428a-427">Nueva clase DbFunctionExpression que genera el valor invertido de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-427">A new DbFunctionExpression that produces the reversed value of **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-428">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-428">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-429">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-429">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Right(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Right (stringArgument As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Right(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Right : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right (stringArgument, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-430">Expresión que especifica la cadena de la que se va a extraer la subcadena más a la derecha.</span><span class="sxs-lookup"><span data-stu-id="a428a-430">An expression that specifies the string from which to extract the rightmost substring.</span></span></param>
        <param name="length"><span data-ttu-id="a428a-431">Expresión que especifica la longitud de la subcadena más a la derecha que se va a extraer de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-431">An expression that specifies the length of the rightmost substring to extract from **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="a428a-432">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Right' canónica con los argumentos especificados, que deben tener un tipo de resultado numérico entero y de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-432">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Right' function with the specified arguments, which must have a string and integer numeric result type.</span></span> <span data-ttu-id="a428a-433">El tipo de resultado de la expresión es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-433">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="a428a-434">Nuevo elemento DbFunctionExpression que devuelve la subcadena del extremo derecho de longitud (**length**) del elemento **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-434">A new DbFunctionExpression that returns the rightmost substring of length **length** from **stringArgument**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-435">**stringArgument** **length**</span><span class="sxs-lookup"><span data-stu-id="a428a-435">**stringArgument** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-436">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-436">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Round">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a428a-437">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Round' canónica.</span><span class="sxs-lookup"><span data-stu-id="a428a-437">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a428a-438">Una expresión que especifica el valor numérico que ser va a redondear.</span><span class="sxs-lookup"><span data-stu-id="a428a-438">An expression that specifies the numeric value to round.</span></span></param>
        <summary><span data-ttu-id="a428a-439">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Round' canónica con el argumento especificado, cada uno de los cuales debe tener un tipo de resultado single, doble o decimal.</span><span class="sxs-lookup"><span data-stu-id="a428a-439">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified argument, which must each have a single, double or decimal result type.</span></span> <span data-ttu-id="a428a-440">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-440">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a428a-441">Nuevo DbFunctionExpression que redondea el argumento especificado al valor entero más cercano.</span><span class="sxs-lookup"><span data-stu-id="a428a-441">A new DbFunctionExpression that rounds the specified argument to the nearest integer value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-442">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-442">**value**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-443">**value**</span><span class="sxs-lookup"><span data-stu-id="a428a-443">**value**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Round">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Round(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Round (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Round(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Round : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a428a-444">Una expresión que especifica el valor numérico que ser va a redondear.</span><span class="sxs-lookup"><span data-stu-id="a428a-444">An expression that specifies the numeric value to round.</span></span></param>
        <param name="digits"><span data-ttu-id="a428a-445">Una expresión que especifica el número de dígitos de precisión que se va a usar para el redondeo.</span><span class="sxs-lookup"><span data-stu-id="a428a-445">An expression that specifies the number of digits of precision to use when rounding.</span></span></param>
        <summary><span data-ttu-id="a428a-446">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Round' canónica con los argumentos especificados, que deben tener tipos de resultado entero o decimal.</span><span class="sxs-lookup"><span data-stu-id="a428a-446">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Round' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="a428a-447">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-447">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a428a-448">Nueva clase DbFunctionExpression que redondea el argumento especificado al valor entero más cercano, con la precisión especificada por **digits**.</span><span class="sxs-lookup"><span data-stu-id="a428a-448">A new DbFunctionExpression that rounds the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-449">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="a428a-449">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-450">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="a428a-450">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Second">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Second(class System.Data.Common.CommandTrees.DbExpression timeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Second (timeValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Second(System::Data::Common::CommandTrees::DbExpression ^ timeValue);" />
      <MemberSignature Language="F#" Value="static member Second : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second timeValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="timeValue"><span data-ttu-id="a428a-451">Expresión que especifica el valor del que se debe recuperar el segundo.</span><span class="sxs-lookup"><span data-stu-id="a428a-451">An expression that specifies the value from which the second should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-452">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Second' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime, DateTimeOffset o Time.</span><span class="sxs-lookup"><span data-stu-id="a428a-452">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Second' function with the specified argument, which must have a DateTime, DateTimeOffset or Time result type.</span></span> <span data-ttu-id="a428a-453">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-453">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-454">Nueva clase DbFunctionExpression que devuelve el valor de segundo entero de **timeValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-454">A new DbFunctionExpression that returns the integer second value from **timeValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-455">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-455">**timeValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-456">**timeValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-456">**timeValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StartsWith(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StartsWith (stringArgument As DbExpression, prefix As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StartsWith(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ prefix);" />
      <MemberSignature Language="F#" Value="static member StartsWith : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith (stringArgument, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="prefix" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-457">Expresión que especifica la cadena que se busca al principio de la cadena **prefix**.</span><span class="sxs-lookup"><span data-stu-id="a428a-457">An expression that specifies the string that is searched at the start for string **prefix**.</span></span></param>
        <param name="prefix"><span data-ttu-id="a428a-458">Expresión que especifica la cadena de destino que se busca en el principio de **stringArgument**.</span><span class="sxs-lookup"><span data-stu-id="a428a-458">An expression that specifies the target string that is searched for at the start of **stringArgument**.</span></span></param>
        <summary><span data-ttu-id="a428a-459">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'StartsWith' canónica con los argumentos especificados, cada uno de los cuales debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-459">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StartsWith' function with the specified arguments, which must each have a string result type.</span></span> <span data-ttu-id="a428a-460">El tipo de resultado de la expresión es booleano.</span><span class="sxs-lookup"><span data-stu-id="a428a-460">The result type of the expression is Boolean.</span></span></summary>
        <returns><span data-ttu-id="a428a-461">Nueva clase DbFunctionExpression que devuelve un valor booleano que indica si **stringArgument** empieza por **prefix**.</span><span class="sxs-lookup"><span data-stu-id="a428a-461">A new DbFunctionExpression that returns a Boolean value indicating whether or not **stringArgument** starts with **prefix**.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StDev">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDev(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDev (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDev(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDev : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-462">Una expresión que especifica la colección para la que se debe calcular la desviación estándar.</span><span class="sxs-lookup"><span data-stu-id="a428a-462">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-463">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “StDev” canónica sobre los miembros no null de la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-463">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDev' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="a428a-464">El tipo de resultado de la expresión es Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="a428a-464">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="a428a-465">Nueva expresión DbFunctionExpression que produce el valor de desviación estándar sobre los miembros no null de la colección.</span><span class="sxs-lookup"><span data-stu-id="a428a-465">A new DbFunctionExpression that produces the standard deviation value over non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-466">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-466">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-467">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-467">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="StDevP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression StDevP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function StDevP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ StDevP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member StDevP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-468">Una expresión que especifica la colección para la que se debe calcular la desviación estándar.</span><span class="sxs-lookup"><span data-stu-id="a428a-468">An expression that specifies the collection for which the standard deviation should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-469">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “StDevP” canónica sobre el rellenado de la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-469">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'StDevP' function over the population of the specified collection.</span></span> <span data-ttu-id="a428a-470">El tipo de resultado de la expresión es Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="a428a-470">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="a428a-471">Nueva expresión DbFunctionExpression que produce el valor de desviación estándar.</span><span class="sxs-lookup"><span data-stu-id="a428a-471">A new DbFunctionExpression that produces the standard deviation value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-472">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-472">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-473">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-473">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Substring(class System.Data.Common.CommandTrees.DbExpression stringArgument, class System.Data.Common.CommandTrees.DbExpression start, class System.Data.Common.CommandTrees.DbExpression length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Substring (stringArgument As DbExpression, start As DbExpression, length As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Substring(System::Data::Common::CommandTrees::DbExpression ^ stringArgument, System::Data::Common::CommandTrees::DbExpression ^ start, System::Data::Common::CommandTrees::DbExpression ^ length);" />
      <MemberSignature Language="F#" Value="static member Substring : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring (stringArgument, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="start" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="length" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-474">Una expresión que especifica la cadena de la que se va a extraer la subcadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-474">An expression that specifies the string from which to extract the substring.</span></span></param>
        <param name="start"><span data-ttu-id="a428a-475">Una expresión que especifica el índice de inicio del que se debe tomar la subcadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-475">An expression that specifies the starting index from which the substring should be taken.</span></span></param>
        <param name="length"><span data-ttu-id="a428a-476">Una expresión que especifica la longitud de la subcadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-476">An expression that specifies the length of the substring.</span></span></param>
        <summary><span data-ttu-id="a428a-477">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Substring' canónica con los argumentos especificados, que deben tener tipos de resultado numéricos entero y de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-477">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Substring' function with the specified arguments, which must have a string and integer numeric result types.</span></span> <span data-ttu-id="a428a-478">El tipo de resultado de la expresión es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-478">The result type of the expression is string.</span></span></summary>
        <returns><span data-ttu-id="a428a-479">Nueva clase DbFunctionExpression que devuelve la subcadena de la longitud **length** de **stringArgument** con inicio en **start**.</span><span class="sxs-lookup"><span data-stu-id="a428a-479">A new DbFunctionExpression that returns the substring of length **length** from **stringArgument** starting at **start**.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a428a-480">La subcadena requiere que el índice especificado por **iniciar** ser \<b > basado en 1\</b >.</span><span class="sxs-lookup"><span data-stu-id="a428a-480">Substring requires that the index specified by **start** be \<b>1-based\</b>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-481">**stringArgument** **start** **length**</span><span class="sxs-lookup"><span data-stu-id="a428a-481">**stringArgument** **start** **length**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-482">**stringArgument** **start** **length**</span><span class="sxs-lookup"><span data-stu-id="a428a-482">**stringArgument** **start** **length**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sum">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Sum(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sum (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Sum(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Sum : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-483">Una expresión que especifica la colección cuya suma se debe calcular.</span><span class="sxs-lookup"><span data-stu-id="a428a-483">An expression that specifies the collection from which the sum should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-484">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “Sum” canónica sobre la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-484">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Sum' function over the specified collection.</span></span> <span data-ttu-id="a428a-485">El tipo de resultado de la expresión es el mismo que el tipo de elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="a428a-485">The result type of the expression is the same as the element type of the collection.</span></span></summary>
        <returns><span data-ttu-id="a428a-486">Nueva expresión DbFunctionExpression que produce la suma.</span><span class="sxs-lookup"><span data-stu-id="a428a-486">A new DbFunctionExpression that produces the sum.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-487">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-487">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-488">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-488">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToLower(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToLower (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToLower(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToLower : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-489">Expresión que especifica la cadena que se debe convertir a minúsculas.</span><span class="sxs-lookup"><span data-stu-id="a428a-489">An expression that specifies the string that should be converted to lower case.</span></span></param>
        <summary><span data-ttu-id="a428a-490">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'ToLower' canónica con el argumento especificado, que debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-490">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToLower' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a428a-491">El tipo de resultado de la expresión también es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-491">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a428a-492">Nueva clase DbFunctionExpression que devuelve el valor de **stringArgument** convertido en minúsculas.</span><span class="sxs-lookup"><span data-stu-id="a428a-492">A new DbFunctionExpression that returns value of **stringArgument** converted to lower case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-493">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-493">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-494">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-494">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression ToUpper(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToUpper (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ ToUpper(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member ToUpper : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-495">Expresión que especifica la cadena que se debe convertir a mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="a428a-495">An expression that specifies the string that should be converted to upper case.</span></span></param>
        <summary><span data-ttu-id="a428a-496">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'ToUpper' canónica con el argumento especificado, que debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-496">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'ToUpper' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a428a-497">El tipo de resultado de la expresión también es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-497">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a428a-498">Nueva clase DbFunctionExpression que devuelve el valor de **stringArgument** convertido en mayúsculas.</span><span class="sxs-lookup"><span data-stu-id="a428a-498">A new DbFunctionExpression that returns value of **stringArgument** converted to upper case.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-499">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-499">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-500">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-500">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Trim(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Trim (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Trim(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member Trim : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-501">Expresión que especifica la cadena de la que deben quitarse los espacios inicial y final.</span><span class="sxs-lookup"><span data-stu-id="a428a-501">An expression that specifies the string from which leading and trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="a428a-502">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Trim' canónica con el argumento especificado, que debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Trim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a428a-503">El tipo de resultado de la expresión también es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-503">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a428a-504">Nueva clase DbFunctionExpression que devuelve el valor de **stringArgument** con los espacios inicial y final suprimidos.</span><span class="sxs-lookup"><span data-stu-id="a428a-504">A new DbFunctionExpression that returns value of **stringArgument** with leading and trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-505">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-505">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-506">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-506">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimEnd (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimEnd(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimEnd : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-507">Expresión que especifica la cadena de la que debe quitarse el espacio final.</span><span class="sxs-lookup"><span data-stu-id="a428a-507">An expression that specifies the string from which trailing space should be removed.</span></span></param>
        <summary><span data-ttu-id="a428a-508">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'RTrim' canónica con el argumento especificado, que debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-508">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'RTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a428a-509">El tipo de resultado de la expresión también es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-509">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a428a-510">Nueva clase DbFunctionExpression que devuelve el valor de **stringArgument** con el espacio final suprimido.</span><span class="sxs-lookup"><span data-stu-id="a428a-510">A new DbFunctionExpression that returns value of **stringArgument** with trailing space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-511">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-511">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-512">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-512">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TrimStart(class System.Data.Common.CommandTrees.DbExpression stringArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TrimStart (stringArgument As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TrimStart(System::Data::Common::CommandTrees::DbExpression ^ stringArgument);" />
      <MemberSignature Language="F#" Value="static member TrimStart : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart stringArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stringArgument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stringArgument"><span data-ttu-id="a428a-513">Expresión que especifica la cadena de la que debe quitarse el espacio inicial.</span><span class="sxs-lookup"><span data-stu-id="a428a-513">An expression that specifies the string from which leading space should be removed.</span></span></param>
        <summary><span data-ttu-id="a428a-514">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'LTrim' canónica con el argumento especificado, que debe tener un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-514">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'LTrim' function with the specified argument, which must have a string result type.</span></span> <span data-ttu-id="a428a-515">El tipo de resultado de la expresión también es una cadena.</span><span class="sxs-lookup"><span data-stu-id="a428a-515">The result type of the expression is also string.</span></span></summary>
        <returns><span data-ttu-id="a428a-516">Nueva clase DbFunctionExpression que devuelve el valor de **stringArgument** con el espacio inicial suprimido.</span><span class="sxs-lookup"><span data-stu-id="a428a-516">A new DbFunctionExpression that returns value of **stringArgument** with leading space removed.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-517">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-517">**stringArgument**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-518">**stringArgument**</span><span class="sxs-lookup"><span data-stu-id="a428a-518">**stringArgument**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Truncate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Truncate(class System.Data.Common.CommandTrees.DbExpression value, class System.Data.Common.CommandTrees.DbExpression digits) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Truncate (value As DbExpression, digits As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Truncate(System::Data::Common::CommandTrees::DbExpression ^ value, System::Data::Common::CommandTrees::DbExpression ^ digits);" />
      <MemberSignature Language="F#" Value="static member Truncate : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate (value, digits)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
        <Parameter Name="digits" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a428a-519">Una expresión que especifica el valor numérico que ser va a truncar.</span><span class="sxs-lookup"><span data-stu-id="a428a-519">An expression that specifies the numeric value to truncate.</span></span></param>
        <param name="digits"><span data-ttu-id="a428a-520">Una expresión que especifica el número de dígitos de precisión que se va a usar al truncar.</span><span class="sxs-lookup"><span data-stu-id="a428a-520">An expression that specifies the number of digits of precision to use when truncating.</span></span></param>
        <summary><span data-ttu-id="a428a-521">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Truncate' canónica con los argumentos especificados, que deben tener tipos de resultado entero y single, doble o decimal.</span><span class="sxs-lookup"><span data-stu-id="a428a-521">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Truncate' function with the specified arguments, which must have a single, double or decimal, and integer result types.</span></span> <span data-ttu-id="a428a-522">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **value**.</span><span class="sxs-lookup"><span data-stu-id="a428a-522">The result type of the expression is the same as the result type of **value**.</span></span></summary>
        <returns><span data-ttu-id="a428a-523">Nueva clase DbFunctionExpression que trunca el argumento especificado al valor entero más cercano, con la precisión especificada por **digits**.</span><span class="sxs-lookup"><span data-stu-id="a428a-523">A new DbFunctionExpression that truncates the specified argument to the nearest integer value, with precision as specified by **digits**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-524">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="a428a-524">**value** **digits**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-525">**value** **digits**</span><span class="sxs-lookup"><span data-stu-id="a428a-525">**value** **digits**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TruncateTime">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TruncateTime (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ TruncateTime(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member TruncateTime : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a428a-526">Expresión que especifica el valor para el que se debe truncar la parte de hora.</span><span class="sxs-lookup"><span data-stu-id="a428a-526">An expression that specifies the value for which the time portion should be truncated.</span></span></param>
        <summary><span data-ttu-id="a428a-527">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'TruncateTime' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-527">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'TruncateTime' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-528">El tipo de resultado de la expresión es el mismo que el tipo de resultado de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-528">The result type of the expression is the same as the result type of **dateValue**.</span></span></summary>
        <returns><span data-ttu-id="a428a-529">Nueva clase DbFunctionExpression que devuelve el valor de **dateValue** con la hora establecida en cero.</span><span class="sxs-lookup"><span data-stu-id="a428a-529">A new DbFunctionExpression that returns the value of **dateValue** with time set to zero.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-530">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-530">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-531">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-531">**dateValue**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Var">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Var(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Var (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Var(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member Var : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-532">Una expresión que especifica la colección para la que se debe calcular la varianza estadística.</span><span class="sxs-lookup"><span data-stu-id="a428a-532">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-533">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “Var” canónica sobre los miembros no null de la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-533">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Var' function over the non-null members of the specified collection.</span></span> <span data-ttu-id="a428a-534">El tipo de resultado de la expresión es Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="a428a-534">The result type of the expression is Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="a428a-535">Nueva expresión DbFunctionExpression que produce el valor de varianza estadística para los miembros no null de la colección.</span><span class="sxs-lookup"><span data-stu-id="a428a-535">A new DbFunctionExpression that produces the statistical variance value for the non-null members of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-536">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-536">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-537">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-537">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VarP">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression VarP(class System.Data.Common.CommandTrees.DbExpression collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function VarP (collection As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ VarP(System::Data::Common::CommandTrees::DbExpression ^ collection);" />
      <MemberSignature Language="F#" Value="static member VarP : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP collection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collection" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="collection"><span data-ttu-id="a428a-538">Una expresión que especifica la colección para la que se debe calcular la varianza estadística.</span><span class="sxs-lookup"><span data-stu-id="a428a-538">An expression that specifies the collection for which the statistical variance should be computed.</span></span></param>
        <summary><span data-ttu-id="a428a-539">Crea un <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función “VarP” canónica sobre el rellenado de la colección especificada.</span><span class="sxs-lookup"><span data-stu-id="a428a-539">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'VarP' function over the population of the specified collection.</span></span> <span data-ttu-id="a428a-540">El tipo de resultado de la expresión es Edm.Double.</span><span class="sxs-lookup"><span data-stu-id="a428a-540">The result type of the expression Edm.Double.</span></span></summary>
        <returns><span data-ttu-id="a428a-541">Nueva expresión DbFunctionExpression que produce el valor de varianza estadística.</span><span class="sxs-lookup"><span data-stu-id="a428a-541">A new DbFunctionExpression that produces the statistical variance value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-542">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-542">**collection**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-543">**collection**</span><span class="sxs-lookup"><span data-stu-id="a428a-543">**collection**</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Year">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Year(class System.Data.Common.CommandTrees.DbExpression dateValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Year (dateValue As DbExpression) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Year(System::Data::Common::CommandTrees::DbExpression ^ dateValue);" />
      <MemberSignature Language="F#" Value="static member Year : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year dateValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateValue" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="dateValue"><span data-ttu-id="a428a-544">Expresión que especifica el valor del que se debe recuperar el año.</span><span class="sxs-lookup"><span data-stu-id="a428a-544">An expression that specifies the value from which the year should be retrieved.</span></span></param>
        <summary><span data-ttu-id="a428a-545">Crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que invoca la función 'Year' canónica con el argumento especificado, que debe tener un tipo de resultado DateTime o DateTimeOffset.</span><span class="sxs-lookup"><span data-stu-id="a428a-545">Creates a <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that invokes the canonical 'Year' function with the specified argument, which must have a DateTime or DateTimeOffset result type.</span></span> <span data-ttu-id="a428a-546">El tipo de resultado de la expresión es Edm.Int32.</span><span class="sxs-lookup"><span data-stu-id="a428a-546">The result type of the expression is Edm.Int32.</span></span></summary>
        <returns><span data-ttu-id="a428a-547">Nueva clase DbFunctionExpression que devuelve el valor de año de entero de **dateValue**.</span><span class="sxs-lookup"><span data-stu-id="a428a-547">A new DbFunctionExpression that returns the integer year value from **dateValue**.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a428a-548">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-548">**dateValue**</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a428a-549">**dateValue**</span><span class="sxs-lookup"><span data-stu-id="a428a-549">**dateValue**</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
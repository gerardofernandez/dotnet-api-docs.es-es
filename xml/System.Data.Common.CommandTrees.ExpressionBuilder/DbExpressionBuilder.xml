<Type Name="DbExpressionBuilder" FullName="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c64a13e94c3be88d176cf83c55472e871123514" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57960254" /></Metadata><TypeSignature Language="C#" Value="public static class DbExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionBuilder abstract sealed" />
  <TypeSignature Language="F#" Value="type DbExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9f50f-101">Proporciona una API para construir elementos <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> y permite tener acceso a dicha API como métodos de extensión en el propio tipo de expresión.</span><span class="sxs-lookup"><span data-stu-id="9f50f-101">Provides an API to construct <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s and allows that API to be accessed as extension methods on the expression type itself.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ Aggregate(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Aggregate : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="9f50f-102">Función que define la operación de agregado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-102">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="9f50f-103">Argumento sobre el que se calculará la función de agregado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-103">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="9f50f-104">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-104">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-105">Nuevo agregado de función con una referencia a la función y al argumento especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-105">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="9f50f-106">La propiedad Distinct del agregado de la función tendrá el valor <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-106">The function aggregate's Distinct property will have the value <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-107"><paramref name="function" /> o <paramref name="argument" /> null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-107"><paramref name="function" /> or <paramref name="argument" /> null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-108"><paramref name="function" /> no es una función de agregado o tiene más de un argumento, o el tipo de resultado de <paramref name="argument" /> no es igual ni se puede promover al tipo de parámetro de <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-108"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AggregateDistinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AggregateDistinct (function As EdmFunction, argument As DbExpression) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionAggregate ^ AggregateDistinct(System::Data::Metadata::Edm::EdmFunction ^ function, System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member AggregateDistinct : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct (function, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="9f50f-109">Función que define la operación de agregado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-109">The function that defines the aggregate operation.</span></span></param>
        <param name="argument"><span data-ttu-id="9f50f-110">Argumento sobre el que se calculará la función de agregado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-110">The argument over which the aggregate function should be calculated.</span></span></param>
        <summary><span data-ttu-id="9f50f-111">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> que se aplica de un modo distinto.</span><span class="sxs-lookup"><span data-stu-id="9f50f-111">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionAggregate" /> that is applied in a distinct fashion.</span></span></summary>
        <returns><span data-ttu-id="9f50f-112">Nuevo agregado de función con una referencia a la función y al argumento especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-112">A new function aggregate with a reference to the given function and argument.</span></span> <span data-ttu-id="9f50f-113">La propiedad Distinct del agregado de la función tendrá el valor <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-113">The function aggregate's Distinct property will have the value <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-114"><paramref name="function" /> o <paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-114"><paramref name="function" /> or <paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-115"><paramref name="function" /> no es una función de agregado o tiene más de un argumento, o el tipo de resultado de <paramref name="argument" /> no es igual ni se puede promover al tipo de parámetro de <paramref name="function" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-115"><paramref name="function" /> is not an aggregate function or has more than one argument, or the result type of <paramref name="argument" /> is not equal or promotable to the parameter type of <paramref name="function" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="All">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-116">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina si el predicado definido se aplica a todos los elementos del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-116">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-117">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-117">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="9f50f-118">Un método que representa un predicado que se va a evaluar para cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-118">A method representing a predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="9f50f-119">Este método debe generar una expresión con un tipo de resultado booleano que proporcione la lógica del predicado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-119">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="9f50f-120">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina si el predicado definido se aplica a todos los elementos del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-120">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-121">Nuevo DbQuantifierExpression que representa la operación All.</span><span class="sxs-lookup"><span data-stu-id="9f50f-121">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-122"><paramref name="source" /> o <paramref name="predicate" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-122"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="9f50f-123">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-123">-or-</span></span>

<span data-ttu-id="9f50f-124">La expresión producida por <paramref name="predicate" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-124">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-125"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-125"><paramref name="source" />  does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-126">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-126">-or-</span></span>

<span data-ttu-id="9f50f-127">La expresión producida por <paramref name="Predicate" /> no tiene un tipo de resultado Booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-127">The expression produced by <paramref name="Predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="All">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression All(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ All(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member All : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-128">Un enlace de expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-128">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="9f50f-129">Una expresión que representa un predicado que se va a evaluar para cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-129">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-130">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina si el predicado definido se aplica a todos los elementos del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-130">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for all elements of the input set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-131">Nuevo DbQuantifierExpression que representa la operación All.</span><span class="sxs-lookup"><span data-stu-id="9f50f-131">A new DbQuantifierExpression that represents the All operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-132"><paramref name="input" /> o <paramref name="predicate" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-132"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-133"><paramref name="predicate" /> no tiene un tipo de resultado booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-133"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="And">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbAndExpression And(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function And (left As DbExpression, right As DbExpression) As DbAndExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbAndExpression ^ And(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member And : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbAndExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAndExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-134">Una expresión booleana que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-134">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-135">Una expresión booleana que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-135">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-136">Crea un <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> que realiza la operación de And lógico de los argumentos izquierdo y derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-136">Creates an <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that performs the logical And of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="9f50f-137">Nuevo DbAndExpression con argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-137">A new DbAndExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-138"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-138"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-139"><paramref name="left" /> y <paramref name="right" /> no tienen un tipo de resultado booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-139"><paramref name="left" /> and <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Any">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-140">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que determina si el argumento de conjunto especificado no está vacío.</span><span class="sxs-lookup"><span data-stu-id="9f50f-140">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Any(class System.Data.Common.CommandTrees.DbExpression source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-141">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-141">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-142">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que determina si el argumento de conjunto especificado no está vacío.</span><span class="sxs-lookup"><span data-stu-id="9f50f-142">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="9f50f-143">Nuevo <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> aplicado a un nuevo <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> con el argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-143">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-144"><paramref name="source" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-144"><paramref name="source" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-145"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-145"><paramref name="source" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-146">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-146">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="9f50f-147">Método que representa el predicado que se va a evaluar para cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-147">A method representing the predicate to evaluate for each member of the input set.</span></span> <span data-ttu-id="9f50f-148">Este método debe generar una expresión con un tipo de resultado booleano que proporcione la lógica del predicado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-148">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="9f50f-149">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina si el predicado definido se aplica a cualquier elemento del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-149">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-150">Nuevo DbQuantifierExpression que representa la operación Any.</span><span class="sxs-lookup"><span data-stu-id="9f50f-150">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-151"><paramref name="source" /> o <paramref name="predicate" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-151"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="9f50f-152">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-152">-or-</span></span>

<span data-ttu-id="9f50f-153">La expresión producida por <paramref name="predicate" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-153">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-154"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-154"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-155">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-155">-or-</span></span> 
<span data-ttu-id="9f50f-156">La expresión producida por <paramref name="predicate" /> no tiene un tipo de resultado Booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-156">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Any">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbQuantifierExpression Any(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any (input As DbExpressionBinding, predicate As DbExpression) As DbQuantifierExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbQuantifierExpression ^ Any(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Any : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbQuantifierExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbQuantifierExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-157">Un enlace de expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-157">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="9f50f-158">Una expresión que representa un predicado que se va a evaluar para cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-158">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-159">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> que determina si el predicado definido se aplica a cualquier elemento del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-159">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that determines whether the given predicate holds for any element of the input set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-160">Nuevo DbQuantifierExpression que representa la operación Any.</span><span class="sxs-lookup"><span data-stu-id="9f50f-160">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-161"><paramref name="input" /> o <paramref name="predicate" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-161"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-162">La expresión producida por <paramref name="predicate" /> no tiene un tipo de resultado Booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-162">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="As">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-163">Devuelve los argumentos especificados como un objeto de par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-163">Returns the specified arguments as a key/value pair object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt; As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt; As(class System.Data.Common.CommandTrees.DbAggregate value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbAggregate, alias As String) As KeyValuePair(Of String, DbAggregate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt; As(System::Data::Common::CommandTrees::DbAggregate ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbAggregate * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbAggregate" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="alias" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f50f-164">El valor del par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-164">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="9f50f-165">La clave del par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-165">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="9f50f-166">Devuelve los argumentos especificados como un objeto de par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-166">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="9f50f-167">Objeto de par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-167">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="As">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt; As (this System.Data.Common.CommandTrees.DbExpression value, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt; As(class System.Data.Common.CommandTrees.DbExpression value, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function As (value As DbExpression, alias As String) As KeyValuePair(Of String, DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt; As(System::Data::Common::CommandTrees::DbExpression ^ value, System::String ^ alias);" />
      <MemberSignature Language="F#" Value="static member As : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As (value, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="alias" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f50f-168">El valor del par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-168">The value in the key/value pair.</span></span></param>
        <param name="alias"><span data-ttu-id="9f50f-169">La clave del par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-169">The key in the key/value pair.</span></span></param>
        <summary><span data-ttu-id="9f50f-170">Devuelve los argumentos especificados como un objeto de par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-170">Returns the specified arguments as a key/value pair object.</span></span></summary>
        <returns><span data-ttu-id="9f50f-171">Objeto de par clave-valor.</span><span class="sxs-lookup"><span data-stu-id="9f50f-171">A key/value pair object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding Bind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bind (input As DbExpression) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ Bind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member Bind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-172">Expresión que se va a enlazar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-172">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="9f50f-173">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> objeta que usa un nombre de variable generado para enlazar la expresión dada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-173">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses a generated variable name to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="9f50f-174">Nuevo enlace de expresiones con la expresión especificada y un nombre de variable generado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-174">A new expression binding with the specified expression and a generated variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-175"><paramref name="input" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-175"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-176"><paramref name="input" /> no tiene un resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-176"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpressionBinding BindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function BindAs (input As DbExpression, varName As String) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpressionBinding ^ BindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName);" />
      <MemberSignature Language="F#" Value="static member BindAs : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs (input, varName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="varName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-177">Expresión que se va a enlazar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-177">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="9f50f-178">Nombre de variable que se debe utilizar para el enlace.</span><span class="sxs-lookup"><span data-stu-id="9f50f-178">The variable name that should be used for the binding.</span></span></param>
        <summary><span data-ttu-id="9f50f-179">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> objeta que usa el nombre de variable especificado para enlazar la expresión dada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-179">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that uses the specified variable name to bind the given expression</span></span></summary>
        <returns><span data-ttu-id="9f50f-180">Nuevo enlace de expresiones con la expresión especificada y un nombre de variable.</span><span class="sxs-lookup"><span data-stu-id="9f50f-180">A new expression binding with the specified expression and variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-181"><paramref name="input" /> o <paramref name="varName" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-181"><paramref name="input" /> or <paramref name="varName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-182"><paramref name="input" /> no tiene un resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-182"><paramref name="input" /> does not have a collection result.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Case">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCaseExpression Case(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; whenExpressions, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; thenExpressions, class System.Data.Common.CommandTrees.DbExpression elseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Function Case (whenExpressions As IEnumerable(Of DbExpression), thenExpressions As IEnumerable(Of DbExpression), elseExpression As DbExpression) As DbCaseExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCaseExpression ^ Case(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ whenExpressions, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ thenExpressions, System::Data::Common::CommandTrees::DbExpression ^ elseExpression);" />
      <MemberSignature Language="F#" Value="static member Case : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbCaseExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case (whenExpressions, thenExpressions, elseExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCaseExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="thenExpressions" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="elseExpression" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="whenExpressions"><span data-ttu-id="9f50f-183">Lista de expresiones que proporcionan la expresión condicional para cada caso.</span><span class="sxs-lookup"><span data-stu-id="9f50f-183">A list of expressions that provide the conditional for of each case.</span></span></param>
        <param name="thenExpressions"><span data-ttu-id="9f50f-184">Una lista de expresiones que proporcionan el resultado de cada caso.</span><span class="sxs-lookup"><span data-stu-id="9f50f-184">A list of expressions that provide the result of each case.</span></span></param>
        <param name="elseExpression"><span data-ttu-id="9f50f-185">Una expresión que define el resultado cuando no coincide con ningún caso.</span><span class="sxs-lookup"><span data-stu-id="9f50f-185">An expression that defines the result when no case is matched.</span></span></param>
        <summary><span data-ttu-id="9f50f-186">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-186">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-187">Nuevo DbCaseExpression con los casos especificados y el resultado predeterminado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-187">A new DbCaseExpression with the specified cases and default result.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-188"><paramref name="whenExpressions" /> o <paramref name="thenExpressions" /> es null, o contiene null, o <paramref name="elseExpression" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-188"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is null or contains null, or <paramref name="elseExpression" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-189"><paramref name="whenExpressions" /> o <paramref name="thenExpressions" /> está vacío o <paramref name="whenExpressions" /> contiene una expresión con un tipo de resultado no booleano, o no existe un tipo de resultado común para todas las expresiones de <paramref name="thenExpressions" /> y <paramref name="elseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-189"><paramref name="whenExpressions" /> or <paramref name="thenExpressions" /> is empty or <paramref name="whenExpressions" /> contains an expression with a non-Boolean result type, or no common result type exists for all expressions in <paramref name="thenExpressions" /> and <paramref name="elseExpression" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CastTo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCastExpression CastTo(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage toType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CastTo (argument As DbExpression, toType As TypeUsage) As DbCastExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbCastExpression ^ CastTo(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ toType);" />
      <MemberSignature Language="F#" Value="static member CastTo : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbCastExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo (argument, toType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCastExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toType" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-190">Argumento al que se debe aplicar la conversión.</span><span class="sxs-lookup"><span data-stu-id="9f50f-190">The argument to which the cast should be applied.</span></span></param>
        <param name="toType"><span data-ttu-id="9f50f-191">Metadatos de tipo que especifican el tipo al que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="9f50f-191">Type metadata that specifies the type to cast to.</span></span></param>
        <summary><span data-ttu-id="9f50f-192">Crea una nueva <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> que aplica una operación de conversión a un argumento polimórfico.</span><span class="sxs-lookup"><span data-stu-id="9f50f-192">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that applies a cast operation to a polymorphic argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-193">Nuevo DbCastExpression con el argumento y el tipo de destino especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-193">A new DbCastExpression with the specified argument and target type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-194"><paramref name="Argument" /> o <paramref name="toType" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-194"><paramref name="Argument" /> or <paramref name="toType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-195">La conversión especificada no es válida.</span><span class="sxs-lookup"><span data-stu-id="9f50f-195">The specified cast is not valid.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Constant">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-196">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-196">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Constant (value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="9f50f-197">Valor constante que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-197">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="9f50f-198">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con el valor constante especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-198">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="9f50f-199">Nuevo DbConstantExpression con el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-199">A new DbConstantExpression with the given value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-200"><paramref name="value" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-200"><paramref name="value" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-201"><paramref name="value" /> no es una instancia de un tipo de constante válido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-201"><paramref name="value" /> is not an instance of a valid constant type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Constant">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbConstantExpression Constant(class System.Data.Metadata.Edm.TypeUsage constantType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Constant (constantType As TypeUsage, value As Object) As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbConstantExpression ^ Constant(System::Data::Metadata::Edm::TypeUsage ^ constantType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member Constant : System.Data.Metadata.Edm.TypeUsage * obj -&gt; System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant (constantType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constantType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="constantType"><span data-ttu-id="9f50f-202">Tipo del valor constante.</span><span class="sxs-lookup"><span data-stu-id="9f50f-202">The type of the constant value.</span></span></param>
        <param name="value"><span data-ttu-id="9f50f-203">Valor constante que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-203">The constant value to represent.</span></span></param>
        <summary><span data-ttu-id="9f50f-204">Crea una nueva <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> del tipo primitivo especificado con el valor constante definido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-204">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> of the specified primitive type with the given constant value.</span></span></summary>
        <returns><span data-ttu-id="9f50f-205">Nuevo DbConstantExpression con el valor especificado y un tipo de resultado de <paramref name="constantType" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-205">A new DbConstantExpression with the given value and a result type of <paramref name="constantType" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-206"><paramref name="value" /> o <paramref name="constantType" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-206"><paramref name="value" /> or <paramref name="constantType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-207"><paramref name="value" /> no es una instancia de un tipo de constante válido, <paramref name="constantType" /> no representa un tipo primitivo, o <paramref name="value" /> es de un tipo primitivo diferente al representado mediante <paramref name="constantType" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-207"><paramref name="value" /> is not an instance of a valid constant type,  <paramref name="constantType" /> does not represent a primitive type, or <paramref name="value" /> is of a different primitive type than that represented by <paramref name="constantType" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRef">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-208">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica una referencia a una entidad concreta de un tipo dado basándose en los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-208">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="9f50f-209">Conjunto de entidades en el que reside el elemento al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-209">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="9f50f-210">Colección de <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que proporcionan los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-210">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="9f50f-211">Estas expresiones deben coincidir (en número, tipo y orden) con las propiedades clave del tipo de entidad al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-211">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="9f50f-212">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica una referencia a una entidad concreta basándose en los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-212">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="9f50f-213">Nueva clase DbRefExpression que hace referencia al elemento con los valores de clave especificados en el conjunto de entidades especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-213">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-214"><paramref name="entitySet" /> es null, o <paramref name="keyValues" /> es nulo o contiene un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-214"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-215">El recuento de <paramref name="keyValues" /> no coincide con el recuento de miembros clave declarado por el tipo de elemento de <paramref name="entitySet" />, o <paramref name="keyValues" /> contiene una expresión con un tipo de resultado que no es compatible con el tipo del miembro clave correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-215">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="9f50f-216">Conjunto de entidades en el que reside el elemento al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-216">The entity set in which the referenced element resides.</span></span></param>
        <param name="keyValues"><span data-ttu-id="9f50f-217">Colección de <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que proporcionan los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-217">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="9f50f-218">Estas expresiones deben coincidir (en número, tipo y orden) con las propiedades clave del tipo de entidad al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-218">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="9f50f-219">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica una referencia a una entidad concreta basándose en los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-219">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="9f50f-220">Nueva clase DbRefExpression que hace referencia al elemento con los valores de clave especificados en el conjunto de entidades especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-220">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-221"><paramref name="entitySet" /> es null, o <paramref name="keyValues" /> es nulo o contiene un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-221"><paramref name="entitySet" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-222">El recuento de <paramref name="keyValues" /> no coincide con el recuento de miembros clave declarado por el tipo de elemento de <paramref name="entitySet" />, o <paramref name="keyValues" /> contiene una expresión con un tipo de resultado que no es compatible con el tipo del miembro clave correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-222">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyValues" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="9f50f-223">Conjunto de entidades en el que reside el elemento al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-223">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="9f50f-224">Tipo específico de la entidad a la que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-224">The specific type of the referenced entity.</span></span> <span data-ttu-id="9f50f-225">Debe ser un tipo de entidad de la misma jerarquía que el tipo de elemento del conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="9f50f-225">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="9f50f-226">Colección de <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que proporcionan los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-226">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="9f50f-227">Estas expresiones deben coincidir (en número, tipo y orden) con las propiedades clave del tipo de entidad al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-227">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="9f50f-228">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica una referencia a una entidad concreta de un tipo dado basándose en los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-228">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="9f50f-229">Nueva clase DbRefExpression que hace referencia al elemento con los valores de clave especificados en el conjunto de entidades especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-229">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-230"><paramref name="entitySet" /> o <paramref name="entityType" /> es null, o <paramref name="keyValues" /> es null o contiene null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-230"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-231"><paramref name="entityType" /> no pertenece a la misma jerarquía de tipos (un subtipo, supertipo o el mismo tipo) que el tipo de elemento de <paramref name="entitySet" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-231"><paramref name="entityType" /> is not from the same type hierarchy (a subtype, supertype, or the same type) as <paramref name="entitySet" />'s element type.</span></span>

<span data-ttu-id="9f50f-232">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-232">-or-</span></span>

<span data-ttu-id="9f50f-233">El recuento de <paramref name="keyValues" /> no coincide con el recuento de miembros clave declarado por el tipo de elemento de <paramref name="entitySet" />, o <paramref name="keyValues" /> contiene una expresión con un tipo de resultado que no es compatible con el tipo del miembro clave correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-233">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, params System.Data.Common.CommandTrees.DbExpression[] keyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression CreateRef(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Metadata.Edm.EntityType entityType, class System.Data.Common.CommandTrees.DbExpression[] keyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ CreateRef(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Metadata::Edm::EntityType ^ entityType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ keyValues);" />
      <MemberSignature Language="F#" Value="static member CreateRef : System.Data.Metadata.Edm.EntitySet * System.Data.Metadata.Edm.EntityType * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef (entitySet, entityType, keyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyValues" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="9f50f-234">Conjunto de entidades en el que reside el elemento al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-234">The entity set in which the referenced element resides.</span></span></param>
        <param name="entityType"><span data-ttu-id="9f50f-235">Tipo específico de la entidad a la que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-235">The specific type of the referenced entity.</span></span> <span data-ttu-id="9f50f-236">Debe ser un tipo de entidad de la misma jerarquía que el tipo de elemento del conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="9f50f-236">This must be an entity type from the same hierarchy as the entity set's element type.</span></span></param>
        <param name="keyValues"><span data-ttu-id="9f50f-237">Colección de <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s que proporcionan los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-237">A collection of <see cref="T:System.Data.Common.CommandTrees.DbExpression" />s that provide the key values.</span></span> <span data-ttu-id="9f50f-238">Estas expresiones deben coincidir (en número, tipo y orden) con las propiedades clave del tipo de entidad al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-238">These expressions must match (in number, type, and order) the key properties of the referenced entity type.</span></span></param>
        <summary><span data-ttu-id="9f50f-239">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica una referencia a una entidad concreta de un tipo dado basándose en los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-239">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific entity of a given type based on key values.</span></span></summary>
        <returns><span data-ttu-id="9f50f-240">Nueva clase DbRefExpression que hace referencia al elemento con los valores de clave especificados en el conjunto de entidades especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-240">A new DbRefExpression that references the element with the specified key values in the given entity set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-241"><paramref name="entitySet" /> o <paramref name="entityType" /> es null, o <paramref name="keyValues" /> es null o contiene null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-241"><paramref name="entitySet" /> or <paramref name="entityType" /> is null, or <paramref name="keyValues" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-242"><paramref name="entityType" /> no pertenece a la misma jerarquía de tipos (un subtipo, supertipo o el mismo tipo) que el tipo de elemento de <paramref name="entitySet" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-242"><paramref name="entityType" /> is not from the same type hierarchy (a subtype, supertype, or the same type) as <paramref name="entitySet" />'s element type.</span></span>

<span data-ttu-id="9f50f-243">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-243">-or-</span></span>

<span data-ttu-id="9f50f-244">El recuento de <paramref name="keyValues" /> no coincide con el recuento de miembros clave declarado por el tipo de elemento de <paramref name="entitySet" />, o <paramref name="keyValues" /> contiene una expresión con un tipo de resultado que no es compatible con el tipo del miembro clave correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-244">The count of <paramref name="keyValues" /> does not match the count of key members declared by the <paramref name="entitySet" />'s element type, or <paramref name="keyValues" /> contains an expression with a result type that is not compatible with the type of the corresponding key member.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CrossApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-245">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que evalúa la expresión <paramref name="apply" /> definida una vez por cada elemento de un conjunto de entrada dado y genera una colección de filas con las columnas input y apply correspondientes.</span><span class="sxs-lookup"><span data-stu-id="9f50f-245">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-246">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-246">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="9f50f-247">Un método que especifica la lógica que se va a evaluar una vez por cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-247">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-248">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que evalúa la expresión <paramref name="apply" /> definida una vez por cada elemento de un conjunto de entrada dado y genera una colección de filas con las columnas input y apply correspondientes.</span><span class="sxs-lookup"><span data-stu-id="9f50f-248">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="9f50f-249">No se incluyen las filas para las que <paramref name="apply" /> se evalúa como un conjunto vacío.</span><span class="sxs-lookup"><span data-stu-id="9f50f-249">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="9f50f-250">Un nuevo DbApplyExpression con los enlaces de entrada y aplicación especificados y un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-250">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-251"><paramref name="source" /> o <paramref name="apply" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-251"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="9f50f-252">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-252">-or-</span></span>

<span data-ttu-id="9f50f-253">El resultado de <paramref name="apply" /> contiene un nombre o expresión que es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-253">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-254"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-254"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-255">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-255">-or-</span></span> 
<span data-ttu-id="9f50f-256">El resultado de <paramref name="apply" /> contiene un nombre o una expresión que no son válidos en un enlace de expresiones.</span><span class="sxs-lookup"><span data-stu-id="9f50f-256">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression CrossApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CrossApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ CrossApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member CrossApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-257">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-257">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="9f50f-258">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica la lógica que se va a evaluar una vez por cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-258">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-259">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que evalúa la expresión <paramref name="apply" /> definida una vez por cada elemento de un conjunto de entrada dado y genera una colección de filas con las columnas input y apply correspondientes.</span><span class="sxs-lookup"><span data-stu-id="9f50f-259">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="9f50f-260">No se incluyen las filas para las que <paramref name="apply" /> se evalúa como un conjunto vacío.</span><span class="sxs-lookup"><span data-stu-id="9f50f-260">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span></summary>
        <returns><span data-ttu-id="9f50f-261">Un nuevo DbApplyExpression con los enlaces de entrada y aplicación especificados y un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-261">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-262"><paramref name="input" /> o <paramref name="apply" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-262"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CrossJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; inputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Public Function CrossJoin (inputs As IEnumerable(Of DbExpressionBinding)) As DbCrossJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbCrossJoinExpression ^ CrossJoin(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ inputs);" />
      <MemberSignature Language="F#" Value="static member CrossJoin : seq&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Data.Common.CommandTrees.DbCrossJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin inputs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbCrossJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputs" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="inputs"><span data-ttu-id="9f50f-263">Una lista de enlaces de expresión que especifica los conjuntos de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-263">A list of expression bindings that specifies the input sets.</span></span></param>
        <summary><span data-ttu-id="9f50f-264">Crea una nueva <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> que combina incondicionalmente los conjuntos especificados por la lista de enlaces de expresión de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-264">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that unconditionally joins the sets specified by the list of input expression bindings.</span></span></summary>
        <returns><span data-ttu-id="9f50f-265">Nuevo DbCrossJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossJoin, que representa la unión incondicional de los conjuntos de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-265">A new DbCrossJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossJoin, that represents the unconditional join of the input sets.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-266"><paramref name="inputs" /> es null, o contiene elemento null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-266"><paramref name="inputs" /> is null or contains null element.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-267"><paramref name="inputs" /> contiene menos de 2 enlaces de expresión.</span><span class="sxs-lookup"><span data-stu-id="9f50f-267"><paramref name="inputs" /> contains fewer than 2 expression bindings.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deref">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDerefExpression Deref(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Deref (argument As DbExpression) As DbDerefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDerefExpression ^ Deref(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Deref : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDerefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDerefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-268">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que proporciona la referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-268">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that provides the reference.</span></span> <span data-ttu-id="9f50f-269">Esta expresión debe tener un tipo de referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-269">This expression must have a reference Type.</span></span></param>
        <summary><span data-ttu-id="9f50f-270">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> que recupera una entidad concreta para la que se ha proporcionado una expresión de referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-270">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that retrieves a specific Entity given a reference expression.</span></span></summary>
        <returns><span data-ttu-id="9f50f-271">Nuevo DbDerefExpression que recupera la entidad especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-271">A new DbDerefExpression that retrieves the specified Entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-272"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-272"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-273"><paramref name="argument" /> no tiene un tipo de resultado de referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-273"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbDistinctExpression Distinct(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Distinct (argument As DbExpression) As DbDistinctExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbDistinctExpression ^ Distinct(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Distinct : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbDistinctExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbDistinctExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-274">Una expresión que define el conjunto sobre el que se va a realizar la operación distinta.</span><span class="sxs-lookup"><span data-stu-id="9f50f-274">An expression that defines the set over which to perfom the distinct operation.</span></span></param>
        <summary><span data-ttu-id="9f50f-275">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> que quita los duplicados del argumento de conjunto dado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-275">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that removes duplicates from the given set argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-276">Nuevo DbDistinctExpression que representa la operación distinta aplicada al argumento determinado especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-276">A new DbDistinctExpression that represents the distinct operation applied to the specified set argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-277"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-277"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-278"><paramref name="argument" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-278"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Divide(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Divide (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Divide(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-279">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-279">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-280">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-280">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-281">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que divide el argumento izquierdo por el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-281">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that divides the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-282">Nuevo DbArithmeticExpression que representa la operación de división.</span><span class="sxs-lookup"><span data-stu-id="9f50f-282">A new DbArithmeticExpression representing the division operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-283"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-283"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-284">No existe ningún tipo de resultado numérico común entre <paramref name="left" /> o <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-284">No common numeric result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbElementExpression Element(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Element (argument As DbExpression) As DbElementExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbElementExpression ^ Element(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Element : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbElementExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbElementExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-285">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-285">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-286">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> que convierte un conjunto en un singleton.</span><span class="sxs-lookup"><span data-stu-id="9f50f-286">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that converts a set into a singleton.</span></span></summary>
        <returns><span data-ttu-id="9f50f-287">DbElementExpression que representa la conversión del argumento de conjunto establecido en un singleton.</span><span class="sxs-lookup"><span data-stu-id="9f50f-287">A DbElementExpression that represents the conversion of the set argument to a singleton.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-288"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-288"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-289"><paramref name="argument" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-289"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equal">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression Equal(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Equal (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ Equal(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Equal : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-290">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-290">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-291">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-291">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-292">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que compara los argumentos izquierdo y derecho para ver si son iguales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-292">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for equality.</span></span></summary>
        <returns><span data-ttu-id="9f50f-293">Nuevo DbComparisonExpression que representa la comparación de igualdad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-293">A new DbComparisonExpression representing the equality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-294"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-294"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-295">No existe ningún tipo de resultado cuya igualdad se pueda comparar entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-295">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExceptExpression Except(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Except (left As DbExpression, right As DbExpression) As DbExceptExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExceptExpression ^ Except(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Except : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExceptExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExceptExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-296">Una expresión que define el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-296">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-297">Una expresión que define el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-297">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-298">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> que calcula la resta de argumento del conjunto derecho del argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-298">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that computes the subtraction of the right set argument from the left set argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-299">Nueva DbExceptExpression que representa la diferencia entre el argumento izquierdo y derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-299">A new DbExceptExpression that represents the difference of the left argument from the right argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-300"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-300"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-301">No existe ningún tipo de resultado de colección común entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-301">No common collection result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Exists(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Exists (argument As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Exists(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Exists : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-302">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-302">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-303">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que determina si el argumento de conjunto especificado no está vacío.</span><span class="sxs-lookup"><span data-stu-id="9f50f-303">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that determines whether the specified set argument is non-empty.</span></span></summary>
        <returns><span data-ttu-id="9f50f-304">Nuevo <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> aplicado a un nuevo <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> con el argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-304">A new <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> applied to a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-305"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-305"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-306"><paramref name="argument" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-306"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="False">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression False" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property False As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ False { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.False : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f50f-307">Obtiene una expresión <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con el valor booleano <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-307">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></summary>
        <value><span data-ttu-id="9f50f-308">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con el valor booleano <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-308">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Filter(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Filter (input As DbExpressionBinding, predicate As DbExpression) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Filter(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Filter : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter (input, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-309">Un enlace de expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-309">An expression binding that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="9f50f-310">Una expresión que representa un predicado que se va a evaluar para cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-310">An expression representing a predicate to evaluate for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-311">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> que filtra los elementos del conjunto de entrada definido utilizando el predicado especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-311">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="9f50f-312">Nuevo DbFilterExpression que genera el conjunto filtrado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-312">A new DbFilterExpression that produces the filtered set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-313"><paramref name="input" /> o <paramref name="predicate" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-313"><paramref name="input" /> or <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-314"><paramref name="predicate" /> no tiene un tipo de resultado booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-314"><paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FullOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-315">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por las expresiones izquierda y derecha, en la condición de combinación especificada, mediante FullOuterJoin como <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-315">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-316">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-316">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-317">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-317">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="9f50f-318">Un método que representa la condición según la que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-318">A method representing the condition on which to join.</span></span> <span data-ttu-id="9f50f-319">Este método debe generar una expresión con un tipo de resultado booleano que proporciona la lógica de la condición de combinación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-319">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="9f50f-320">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por las expresiones izquierda y derecha, en la condición de combinación especificada, mediante FullOuterJoin como <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-320">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-321">Una nueva clase DbJoinExpression, con un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de FullOuterJoin, que representa la operación de combinación externa completa que se aplica a los conjuntos de entrada izquierdo y derecho en la condición de combinación dada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-321">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-322"><paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-322"><paramref name="left" />, <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="9f50f-323">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-323">-or-</span></span>

<span data-ttu-id="9f50f-324">La expresión producida por <paramref name="joinCondition" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-324">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-325"><paramref name="left" /> o <paramref name="right" /> no tiene un tipo de resultado de colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-325"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-326">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-326">-or-</span></span> 
<span data-ttu-id="9f50f-327">La expresión producida por <paramref name="joinCondition" /> no tiene un tipo de resultado Booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-327">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FullOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FullOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ FullOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member FullOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-328">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-328">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-329">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-329">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="9f50f-330">Una expresión que especifica la condición según la que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-330">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="9f50f-331">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por los enlaces de las expresiones izquierda y derecha según la condición de combinación definida, usando FullOuterJoin como la <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-331">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using FullOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-332">Nueva clase DbJoinExpression, con un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de FullOuterJoin, que representa la operación de combinación externa completa que se aplica a los conjuntos de entrada izquierdo y derecho en la condición de combinación dada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-332">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of FullOuterJoin, that represents the full outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-333"><paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-333"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-334">La expresión producida por <paramref name="joinCondition" /> no tiene un tipo de resultado Booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-334">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityRef">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetEntityRef (argument As DbExpression) As DbEntityRefExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbEntityRefExpression ^ GetEntityRef(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetEntityRef : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbEntityRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbEntityRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-335">Expresión que proporciona la entidad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-335">The expression that provides the entity.</span></span> <span data-ttu-id="9f50f-336">Esta expresión debe tener un tipo de resultado de entidad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-336">This expression must have an entity result type.</span></span></param>
        <summary><span data-ttu-id="9f50f-337">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> que recupera la referencia de la entidad especificada en forma estructural.</span><span class="sxs-lookup"><span data-stu-id="9f50f-337">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that retrieves the ref of the specifed entity in structural form.</span></span></summary>
        <returns><span data-ttu-id="9f50f-338">Nuevo DbEntityRefExpression que recupera una referencia a la entidad especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-338">A new DbEntityRefExpression that retrieves a reference to the specified entity.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-339"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-339"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-340"><paramref name="argument" /> no tiene un tipo de resultado de entidad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-340"><paramref name="argument" /> does not have an entity result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRefKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRefKey (argument As DbExpression) As DbRefKeyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefKeyExpression ^ GetRefKey(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member GetRefKey : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefKeyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefKeyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-341">Expresión que proporciona la referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-341">The expression that provides the reference.</span></span> <span data-ttu-id="9f50f-342">Esta expresión debe tener un tipo de referencia con un tipo de elemento de entidad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-342">This expression must have a reference Type with an Entity element type.</span></span></param>
        <summary><span data-ttu-id="9f50f-343">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> que recupera los valores de clave de la referencia especificada en forma estructural.</span><span class="sxs-lookup"><span data-stu-id="9f50f-343">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that retrieves the key values of the specifed reference in structural form.</span></span></summary>
        <returns><span data-ttu-id="9f50f-344">Nuevo DbRefKeyExpression que recupera los valores de clave de la referencia especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-344">A new DbRefKeyExpression that retrieves the key values of the specified reference.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-345"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-345"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-346"><paramref name="argument" /> no tiene un tipo de resultado de referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-346"><paramref name="argument" /> does not have a reference result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-347">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-347">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-348">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-348">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-349">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que determina si el argumento izquierdo es mayor que el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-349">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than the right argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-350">Nuevo DbComparisonExpression que representa la comparación mayor que.</span><span class="sxs-lookup"><span data-stu-id="9f50f-350">A new DbComparisonExpression representing the greater-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-351"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-351"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-352">No existe ningún tipo de resultado cuyo orden se pueda comparar entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-352">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GreaterThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ GreaterThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member GreaterThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-353">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-353">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-354">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-354">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-355">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que determina si el argumento izquierdo es mayor o igual que el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-355">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is greater than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-356">Nuevo DbComparisonExpression que representa la comparación mayor o igual que.</span><span class="sxs-lookup"><span data-stu-id="9f50f-356">A new DbComparisonExpression representing the greater-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-357"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-357"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-358">No existe ningún tipo de resultado cuyo orden se pueda comparar entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-358">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBind">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind(class System.Data.Common.CommandTrees.DbExpression input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBind (input As DbExpression) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBind(System::Data::Common::CommandTrees::DbExpression ^ input);" />
      <MemberSignature Language="F#" Value="static member GroupBind : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-359">Expresión que se va a enlazar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-359">The expression to bind.</span></span></param>
        <summary><span data-ttu-id="9f50f-360">Crea un nuevo enlace de expresión de grupo que usa los nombres de variable y de variable de grupo generados para enlazar la expresión definida.</span><span class="sxs-lookup"><span data-stu-id="9f50f-360">Creates a new group expression binding that uses generated variable and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="9f50f-361">Nuevo enlace de expresiones de grupo con la expresión especificada y un nombre de variable generado y un nombre de variable de grupo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-361">A new group expression binding with the specified expression and a generated variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-362"><paramref name="input" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-362"><paramref name="input" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-363"><paramref name="input" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-363"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBindAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs(class System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBindAs (input As DbExpression, varName As String, groupVarName As String) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ GroupBindAs(System::Data::Common::CommandTrees::DbExpression ^ input, System::String ^ varName, System::String ^ groupVarName);" />
      <MemberSignature Language="F#" Value="static member GroupBindAs : System.Data.Common.CommandTrees.DbExpression * string * string -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs (input, varName, groupVarName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="varName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="groupVarName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-364">Expresión que se va a enlazar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-364">The expression to bind.</span></span></param>
        <param name="varName"><span data-ttu-id="9f50f-365">Nombre de variable que se debe utilizar para el enlace.</span><span class="sxs-lookup"><span data-stu-id="9f50f-365">The variable name that should be used for the binding.</span></span></param>
        <param name="groupVarName"><span data-ttu-id="9f50f-366">Nombre de variable que se debe usar para hacer referencia al grupo cuando el nuevo enlace de la expresión de grupo se utiliza en una expresión group-by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-366">The variable name that should be used to refer to the group when the new group expression binding is used in a group-by expression.</span></span></param>
        <summary><span data-ttu-id="9f50f-367">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> que usa el nombre de variable y los nombres de variable de grupo especificados para enlazar la expresión definida.</span><span class="sxs-lookup"><span data-stu-id="9f50f-367">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that uses the specified variable name and group variable names to bind the given expression.</span></span></summary>
        <returns><span data-ttu-id="9f50f-368">Nuevo enlace de expresiones de grupo con la expresión, el nombre de la variable y el nombre de variable del grupo especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-368">A new group expression binding with the specified expression, variable name and group variable name.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-369"><paramref name="input" />, <paramref name="varName" /> o <paramref name="groupVarName" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-369"><paramref name="input" />,  <paramref name="varName" /> or <paramref name="groupVarName" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-370"><paramref name="input" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-370"><paramref name="input" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbGroupByExpression GroupBy(class System.Data.Common.CommandTrees.DbGroupExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; keys, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbAggregate&gt;&gt; aggregates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GroupBy (input As DbGroupExpressionBinding, keys As IEnumerable(Of KeyValuePair(Of String, DbExpression)), aggregates As IEnumerable(Of KeyValuePair(Of String, DbAggregate))) As DbGroupByExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbGroupByExpression ^ GroupBy(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ keys, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbAggregate ^&gt;&gt; ^ aggregates);" />
      <MemberSignature Language="F#" Value="static member GroupBy : System.Data.Common.CommandTrees.DbGroupExpressionBinding * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbAggregate&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbGroupByExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy (input, keys, aggregates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupByExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="aggregates" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbAggregate&gt;&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-371">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-371">A <see cref="T:System.Data.Common.CommandTrees.DbGroupExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="keys"><span data-ttu-id="9f50f-372">Una lista de pares cadena-expresión que definen las columnas de agrupación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-372">A list of string-expression pairs that define the grouping columns.</span></span></param>
        <param name="aggregates"><span data-ttu-id="9f50f-373">Lista de expresiones que especifican los agregados a aplicar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-373">A list of expressions that specify aggregates to apply.</span></span></param>
        <summary><span data-ttu-id="9f50f-374">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> que agrupa los elementos del conjunto de entrada según las claves de grupo especificadas y aplica los agregados dados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-374">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that groups the elements of the input set according to the specified group keys and applies the given aggregates.</span></span></summary>
        <returns><span data-ttu-id="9f50f-375">Nuevo DbGroupByExpression con el conjunto especificado de entrada, claves y agregados de agrupación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-375">A new DbGroupByExpression with the specified input set, grouping keys and aggregates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-376">DbGroupByExpression permite que la lista de claves o la lista de agregados que deben estar en blanco, pero no ambos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-376">DbGroupByExpression allows either the list of keys or the list of aggregates to be empty, but not both.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-377"><paramref name="input" />, <paramref name="keys" /> o <paramref name="aggregates" /> es null, <paramref name="keys" /> contiene un nombre de columna clave o expresión null, o <paramref name="aggregates" /> contiene un nombre de columna agregado o agregado null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-377"><paramref name="input" />,  <paramref name="keys" /> or <paramref name="aggregates" /> is null,  <paramref name="keys" /> contains a null column key or expression, or <paramref name="aggregates" /> contains a null aggregate column name or aggregate.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-378"><paramref name="keys" /> y <paramref name="aggregates" /> están vacíos, o se especificó un nombre de columna no válido o duplicado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-378">Both <paramref name="keys" /> and <paramref name="aggregates" /> are empty, or an invalid or duplicate column name was specified.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InnerJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-379">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por las expresiones izquierda y derecha según la condición de combinación definida, usando InnerJoin como la <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-379">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-380">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-380">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-381">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-381">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="9f50f-382">Un método que representa la condición según la que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-382">A method representing the condition on which to join.</span></span> <span data-ttu-id="9f50f-383">Este método debe generar una expresión con un tipo de resultado booleano que proporciona la lógica de la condición de combinación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-383">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="9f50f-384">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por las expresiones izquierda y derecha según la condición de combinación definida, usando InnerJoin como la <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-384">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-385">Nuevo DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de InnerJoin, que representa la operación de combinación interna completa aplicada a los conjuntos de entrada izquierdo y derecho según la condición de combinación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-385">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-386"><paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-386"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="9f50f-387">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-387">-or-</span></span>

<span data-ttu-id="9f50f-388">La expresión producida por <paramref name="joinCondition" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-388">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-389"><paramref name="left" /> o <paramref name="right" /> no tiene un tipo de resultado de colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-389"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-390">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-390">-or-</span></span>

<span data-ttu-id="9f50f-391">La expresión producida por <paramref name="joinCondition" /> no tiene un tipo de resultado Booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-391">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InnerJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression InnerJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InnerJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ InnerJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member InnerJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-392">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-392">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-393">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-393">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="9f50f-394">Una expresión que especifica la condición según la que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-394">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="9f50f-395">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por los enlaces de las expresiones izquierda y derecha según la condición de combinación definida, usando InnerJoin como la <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-395">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-396">Nuevo DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de InnerJoin, que representa la operación de combinación interna completa aplicada a los conjuntos de entrada izquierdo y derecho según la condición de combinación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-396">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-397"><paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-397"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-398"><paramref name="joinCondition" /> no tiene un tipo de resultado booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-398"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIntersectExpression Intersect(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Intersect (left As DbExpression, right As DbExpression) As DbIntersectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIntersectExpression ^ Intersect(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Intersect : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIntersectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIntersectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-399">Una expresión que define el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-399">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-400">Una expresión que define el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-400">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-401">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> que calcula la intersección de los argumentos del conjunto izquierdo y derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-401">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that computes the intersection of the left and right set arguments.</span></span></summary>
        <returns><span data-ttu-id="9f50f-402">Nueva DbIntersectExpression que representa la intersección de los argumentos de los argumentos izquierdo y derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-402">A new DbIntersectExpression that represents the intersection of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-403"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-403"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-404">No existe ningún tipo de resultado de colección común entre <paramref name="left" /> o <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-404">No common collection result type exists between <paramref name="left" /> or <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-405">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> que representa la aplicación de la función Lambda especificada a los argumentos dados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-405">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, arguments As IEnumerable(Of DbExpression)) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="9f50f-406">Instancia de <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> que representa la función Lambda que se va a aplicar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-406">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="9f50f-407">Una lista de expresiones que proporcionan los argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-407">A list of expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="9f50f-408">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> que representa la aplicación de la función Lambda especificada a los argumentos dados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-408">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="9f50f-409">Nuevo DbLambdaExpression que representa la aplicación de la función lambda.</span><span class="sxs-lookup"><span data-stu-id="9f50f-409">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-410"><paramref name="lambda" /> o <paramref name="arguments" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-410"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-411">El recuento de <paramref name="arguments" /> no es igual al número de variables declarado por <paramref name="lambda" />, o <paramref name="arguments" /> contiene una expresión que tiene un tipo de resultado que no es igual ni se puede promover al tipo de variable correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-411">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambdaExpression Invoke(class System.Data.Common.CommandTrees.DbLambda lambda, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (lambda As DbLambda, ParamArray arguments As DbExpression()) As DbLambdaExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLambdaExpression ^ Invoke(System::Data::Common::CommandTrees::DbLambda ^ lambda, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Common.CommandTrees.DbLambda * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbLambdaExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (lambda, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambdaExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="9f50f-412">Instancia de <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> que representa la función Lambda que se va a aplicar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-412">A <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> instance representing the Lambda function to apply.</span></span></param>
        <param name="arguments"><span data-ttu-id="9f50f-413">Expresiones que proporcionan los argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-413">Expressions that provide the arguments.</span></span></param>
        <summary><span data-ttu-id="9f50f-414">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> que representa la aplicación de la función Lambda especificada a los argumentos dados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-414">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> representing the application of the specified Lambda function to the given arguments.</span></span></summary>
        <returns><span data-ttu-id="9f50f-415">Nuevo DbLambdaExpression que representa la aplicación de la función lambda.</span><span class="sxs-lookup"><span data-stu-id="9f50f-415">A new DbLambdaExpression representing the Lambda function application.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-416"><paramref name="lambda" /> o <paramref name="arguments" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-416"><paramref name="lambda" /> or <paramref name="arguments" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-417">El recuento de <paramref name="arguments" /> no es igual al número de variables declarado por <paramref name="lambda" />, o <paramref name="arguments" /> contiene una expresión que tiene un tipo de resultado que no es igual ni se puede promover al tipo de variable correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-417">The count of <paramref name="arguments" /> does not equal the number of variables declared by <paramref name="lambda" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding variable type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, arguments As IEnumerable(Of DbExpression)) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="9f50f-418">Metadatos para la función que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-418">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="9f50f-419">Una lista de expresiones que proporcionan los argumentos para la función.</span><span class="sxs-lookup"><span data-stu-id="9f50f-419">A list of expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="9f50f-420">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que representa la invocación de la función especificada con argumentos determinados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-420">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="9f50f-421">Nuevo DbFunctionExpression que representa la invocación de función.</span><span class="sxs-lookup"><span data-stu-id="9f50f-421">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-422"><paramref name="function" /> es null, o <paramref name="arguments" /> es nulo o contiene un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-422"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-423">El recuento de <paramref name="arguments" /> no es igual al número de parámetros declarados por <paramref name="function" />, o <paramref name="arguments" /> contiene una expresión que tiene un tipo de resultado que no es igual ni se puede promover al tipo de parámetro de función correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-423">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFunctionExpression Invoke(class System.Data.Metadata.Edm.EdmFunction function, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Invoke (function As EdmFunction, ParamArray arguments As DbExpression()) As DbFunctionExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFunctionExpression ^ Invoke(System::Data::Metadata::Edm::EdmFunction ^ function, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member Invoke : System.Data.Metadata.Edm.EdmFunction * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbFunctionExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke (function, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="function" Type="System.Data.Metadata.Edm.EdmFunction" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="function"><span data-ttu-id="9f50f-424">Metadatos para la función que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-424">Metadata for the function to invoke.</span></span></param>
        <param name="arguments"><span data-ttu-id="9f50f-425">Expresiones que proporcionan los argumentos para la función.</span><span class="sxs-lookup"><span data-stu-id="9f50f-425">Expressions that provide the arguments to the function.</span></span></param>
        <summary><span data-ttu-id="9f50f-426">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> que representa la invocación de la función especificada con argumentos determinados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-426">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> representing the invocation of the specified function with the given arguments.</span></span></summary>
        <returns><span data-ttu-id="9f50f-427">Nuevo DbFunctionExpression que representa la invocación de función.</span><span class="sxs-lookup"><span data-stu-id="9f50f-427">A new DbFunctionExpression representing the function invocation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-428"><paramref name="function" /> es null, o <paramref name="arguments" /> es nulo o contiene un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-428"><paramref name="function" /> is null, or <paramref name="arguments" /> is null or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-429">El recuento de <paramref name="arguments" /> no es igual al número de parámetros declarados por <paramref name="function" />, o <paramref name="arguments" /> contiene una expresión que tiene un tipo de resultado que no es igual ni se puede promover al tipo de parámetro de función correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-429">The count of <paramref name="arguments" /> does not equal the number of parameters declared by <paramref name="function" />, or <paramref name="arguments" /> contains an expression that has a result type that is not equal or promotable to the corresponding function parameter type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsEmpty (argument As DbExpression) As DbIsEmptyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsEmptyExpression ^ IsEmpty(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsEmpty : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsEmptyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsEmptyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-430">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-430">An expression that specifies the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-431">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> que determina si el argumento de conjunto especificado es un conjunto vacío.</span><span class="sxs-lookup"><span data-stu-id="9f50f-431">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that determines whether the specified set argument is an empty set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-432">Nuevo DbIsEmptyExpression con el argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-432">A new DbIsEmptyExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-433"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-433"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-434"><paramref name="argument" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-434"><paramref name="argument" /> does not have a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsNullExpression IsNull(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsNull (argument As DbExpression) As DbIsNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsNullExpression ^ IsNull(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member IsNull : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbIsNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-435">Una expresión que especifica el argumento.</span><span class="sxs-lookup"><span data-stu-id="9f50f-435">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-436">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> que determina si el argumento especificado es NULL.</span><span class="sxs-lookup"><span data-stu-id="9f50f-436">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that determines whether the specified argument is null.</span></span></summary>
        <returns><span data-ttu-id="9f50f-437">Nuevo DbIsNullExpression con el argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-437">A new DbIsNullExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-438"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-438"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-439"><paramref name="argument" /> tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-439"><paramref name="argument" /> has a collection result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOf">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOf(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOf (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOf(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOf : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-440">Una expresión que especifica la instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-440">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="9f50f-441">Metadatos de tipo que especifican el tipo con el que debe compararse el tipo de resultado de la instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-441">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="9f50f-442">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> que determina si el argumento definido es del tipo especificado o un subtipo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-442">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that determines whether the given argument is of the specified type or a subtype.</span></span></summary>
        <returns><span data-ttu-id="9f50f-443">Nuevo DbIsOfExpression con la instancia y el tipo especificados y DbExpressionKind IsOf.</span><span class="sxs-lookup"><span data-stu-id="9f50f-443">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOf.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-444">DbIsOfExpression requiere que `argument` tiene un tipo de resultado polimórfico y que `type` es un tipo de la misma jerarquía de tipos que ese tipo de resultado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-444">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-445"><paramref name="argument" /> o <paramref name="type" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-445"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-446"><paramref name="type" /> no está en la misma jerarquía de tipos que el tipo de resultado de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-446"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsOfOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsOfOnly (argument As DbExpression, type As TypeUsage) As DbIsOfExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbIsOfExpression ^ IsOfOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member IsOfOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbIsOfExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbIsOfExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-447">Una expresión que especifica la instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-447">An expression that specifies the instance.</span></span></param>
        <param name="type"><span data-ttu-id="9f50f-448">Metadatos de tipo que especifican el tipo con el que debe compararse el tipo de resultado de la instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-448">Type metadata that specifies the type that the instance's result type should be compared to.</span></span></param>
        <summary><span data-ttu-id="9f50f-449">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> que determina si el argumento definido es del tipo especificado y solo de ese tipo (no un subtipo).</span><span class="sxs-lookup"><span data-stu-id="9f50f-449">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> expression that determines whether the given argument is of the specified type, and only that type (not a subtype).</span></span></summary>
        <returns><span data-ttu-id="9f50f-450">Nuevo DbIsOfExpression con la instancia y el tipo especificados y DbExpressionKind IsOfOnly.</span><span class="sxs-lookup"><span data-stu-id="9f50f-450">A new DbIsOfExpression with the specified instance and type and DbExpressionKind IsOfOnly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-451">DbIsOfExpression requiere que `argument` tiene un tipo de resultado polimórfico y que `type` es un tipo de la misma jerarquía de tipos que ese tipo de resultado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-451">DbIsOfExpression requires that `argument` has a polymorphic result type, and that `type` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-452"><paramref name="argument" /> o <paramref name="type" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-452"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-453"><paramref name="type" /> no está en la misma jerarquía de tipos que el tipo de resultado de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-453"><paramref name="type" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression Join(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="outer"><span data-ttu-id="9f50f-454"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto externo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-454">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="9f50f-455">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto interno.</span><span class="sxs-lookup"><span data-stu-id="9f50f-455">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="9f50f-456">Un método que especifica cómo el valor de clave externo se debe derivar de un elemento del conjunto externo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-456">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="9f50f-457">Un método que especifica cómo el valor de clave interno se debe derivar de un elemento del conjunto interno.</span><span class="sxs-lookup"><span data-stu-id="9f50f-457">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <summary><span data-ttu-id="9f50f-458">Crea una nueva <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por las expresiones externas e internas, en una condición de igualdad entre las claves especificadas de externas e internas, usando InnerJoin como <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-458">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the outer and inner expressions, on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-459">Una nueva clase DbJoinExpression, con un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de InnerJoin, que representa la operación de combinación interna aplicada a los conjuntos de entrada izquierdo y derecho en una condición de combinación que compara los valores de las claves externa e interna para ver si son iguales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-459">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-460"><paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" /> o <paramref name="innerKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-460"><paramref name="outer" />, <paramref name="inner" />, <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span>

<span data-ttu-id="9f50f-461">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-461">-or-</span></span> 
<span data-ttu-id="9f50f-462">La expresión generada por <paramref name="outerKey" /> o <paramref name="innerKey" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-462">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-463"><paramref name="outer" /> o <paramref name="inner" /> no tiene un tipo de resultado de colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-463"><paramref name="outer" /> or <paramref name="inner" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-464">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-464">-or-</span></span>

<span data-ttu-id="9f50f-465">En las expresiones producidas por <paramref name="outerKey" /> y <paramref name="innerKey" /> no se puede realizar una comparación de igualdad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-465">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> are not comparable for equality.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; outerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; innerKey, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Join&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression outer, class System.Data.Common.CommandTrees.DbExpression inner, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; outerKey, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; innerKey, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Join(Of TSelector) (outer As DbExpression, inner As DbExpression, outerKey As Func(Of DbExpression, DbExpression), innerKey As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Join(System::Data::Common::CommandTrees::DbExpression ^ outer, System::Data::Common::CommandTrees::DbExpression ^ inner, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ outerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ innerKey, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Join : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join (outer, inner, outerKey, innerKey, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="outer" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="inner" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="outerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="innerKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" Index="4" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="9f50f-466">Tipo de la propiedad <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-466">The type of the <paramref name="selector" />.</span></span></typeparam>
        <param name="outer"><span data-ttu-id="9f50f-467"><see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto externo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-467">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the outer set argument.</span></span></param>
        <param name="inner"><span data-ttu-id="9f50f-468">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto interno.</span><span class="sxs-lookup"><span data-stu-id="9f50f-468">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the inner set argument.</span></span></param>
        <param name="outerKey"><span data-ttu-id="9f50f-469">Un método que especifica cómo el valor de clave externo se debe derivar de un elemento del conjunto externo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-469">A method that specifies how the outer key value should be derived from an element of the outer set.</span></span></param>
        <param name="innerKey"><span data-ttu-id="9f50f-470">Un método que especifica cómo el valor de clave interno se debe derivar de un elemento del conjunto interno.</span><span class="sxs-lookup"><span data-stu-id="9f50f-470">A method that specifies how the inner key value should be derived from an element of the inner set.</span></span></param>
        <param name="selector"><span data-ttu-id="9f50f-471">Un método que especifica cómo un elemento del conjunto de resultados se debe derivar de los elementos de los conjuntos internos y externos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-471">A method that specifies how an element of the result set should be derived from elements of the inner and outer sets.</span></span> <span data-ttu-id="9f50f-472">Este método debe generar una instancia de un tipo que sea compatible con Join y que pueda resolverse en una <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-472">This method must produce an instance of a type that is compatible with Join and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="9f50f-473">Los requisitos de compatibilidad de <c>TSelector</c> se describen en la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="9f50f-473">Compatibility requirements for <c>TSelector</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="9f50f-474">Crea una nueva <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que proyecta el selector especificado sobre los conjuntos especificados por las expresiones externas e internas, combinadas en una condición de igualdad entre las claves especificadas de externas e internas, usando InnerJoin como <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-474">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified selector over the sets specified by the outer and inner expressions, joined on an equality condition between the specified outer and inner keys, using InnerJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-475">Nueva DbProjectExpression con el selector especificado como su proyección, y una nueva DbJoinExpression como su entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-475">A new DbProjectExpression with the specified selector as its projection, and a new DbJoinExpression as its input.</span></span> <span data-ttu-id="9f50f-476">La DbJoinExpression de entrada se crea con un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de InnerJoin, que representa la operación de combinación interna aplicada a los conjuntos de entrada izquierdo y derecho en una condición de combinación que compara los valores de las claves externa e interna para ver si son iguales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-476">The input DbJoinExpression is created with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of InnerJoin, that represents the inner join operation applied to the left and right input sets under a join condition that compares the outer and inner key values for equality.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-477">Para que sea compatible con la combinación, `TSelector` debe derivarse de <xref:System.Data.Common.CommandTrees.DbExpression>, o debe ser un tipo anónimo con propiedades derivadas de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="9f50f-477">To be compatible with Join, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="9f50f-478">Los siguientes son ejemplos de tipos admitidos para `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="9f50f-478">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => o.Property("Name"))  
```  
  
 <span data-ttu-id="9f50f-479">(`TSelector` es <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="9f50f-479">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
outer.Join(inner, o => o.Property("ID"), i => i.Property("ID"), (o, i) => new { OName = o.Property("Name"), IName = i.Property("Name") })  
```  
  
 <span data-ttu-id="9f50f-480">(`TSelector` es un tipo anónimo con propiedades derivadas de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="9f50f-480">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-481"><paramref name="outer" />,  <paramref name="inner" />,  <paramref name="outerKey" />,  <paramref name="innerKey" /> o <paramref name="selector" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-481"><paramref name="outer" />,  <paramref name="inner" />,  <paramref name="outerKey" />,  <paramref name="innerKey" /> or <paramref name="selector" /> is null.</span></span>

<span data-ttu-id="9f50f-482">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-482">-or-</span></span>

<span data-ttu-id="9f50f-483">La expresión generada por <paramref name="outerKey" /> o <paramref name="innerKey" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-483">The expression produced by <paramref name="outerKey" /> or <paramref name="innerKey" /> is null.</span></span>

<span data-ttu-id="9f50f-484">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-484">-or-</span></span>

<span data-ttu-id="9f50f-485">El resultado de <paramref name="selector" /> es null tras la conversión a DbExpression.</span><span class="sxs-lookup"><span data-stu-id="9f50f-485">The result of <paramref name="selector" /> is null after conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-486"><paramref name="outer" /> o <paramref name="inner" /> no tiene un tipo de resultado de colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-486"><paramref name="outer" /> or <paramref name="inner" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-487">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-487">-or-</span></span>

<span data-ttu-id="9f50f-488">En las expresiones generadas por <paramref name="outerKey" /> y <paramref name="innerKey" /> no se puede realizar una comparación de igualdad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-488">The expressions produced by <paramref name="outerKey" /> and <paramref name="innerKey" /> is not comparable for equality.</span></span>

<span data-ttu-id="9f50f-489">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-489">-or-</span></span> 
<span data-ttu-id="9f50f-490">El resultado de <paramref name="selector" /> no es compatible con SelectMany.</span><span class="sxs-lookup"><span data-stu-id="9f50f-490">The result of <paramref name="selector" /> is not compatible with SelectMany.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Lambda">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-491">Crea un <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> con la implementación de una función Lambda insertada y los parámetros formales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-491">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, variables As IEnumerable(Of DbVariableReferenceExpression)) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="variables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="9f50f-492">Expresión que define la lógica de la función Lambda.</span><span class="sxs-lookup"><span data-stu-id="9f50f-492">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="9f50f-493">Colección <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> que representa los parámetros formales para la función Lambda.</span><span class="sxs-lookup"><span data-stu-id="9f50f-493">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="9f50f-494">Estas variables son válidas para el uso en la expresión <paramref name="body" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-494">These variables are valid for use in the <paramref name="body" /> expression.</span></span></param>
        <summary><span data-ttu-id="9f50f-495">Crea un <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> con la implementación de una función Lambda insertada y los parámetros formales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-495">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="9f50f-496">Nuevo DbLambda que describe una función Lambda alineada con el cuerpo y los parámetros formales especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-496">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-497"><paramref name="variables" /> es null o contiene null, o <paramref name="body" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-497"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-498"><paramref name="variables" /> contiene más de un elemento con el mismo nombre de variable.</span><span class="sxs-lookup"><span data-stu-id="9f50f-498"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Lambda">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, params System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLambda Lambda(class System.Data.Common.CommandTrees.DbExpression body, class System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Lambda (body As DbExpression, ParamArray variables As DbVariableReferenceExpression()) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbLambda ^ Lambda(System::Data::Common::CommandTrees::DbExpression ^ body, ... cli::array &lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ variables);" />
      <MemberSignature Language="F#" Value="static member Lambda : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression[] -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda (body, variables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Data.Common.CommandTrees.DbExpression" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="variables" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="body"><span data-ttu-id="9f50f-499">Expresión que define la lógica de la función Lambda.</span><span class="sxs-lookup"><span data-stu-id="9f50f-499">An expression that defines the logic of the Lambda function.</span></span></param>
        <param name="variables"><span data-ttu-id="9f50f-500">Colección <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> que representa los parámetros formales para la función Lambda.</span><span class="sxs-lookup"><span data-stu-id="9f50f-500">A <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> collection that represents the formal parameters to the Lambda function.</span></span> <span data-ttu-id="9f50f-501">Estas variables son válidas para el uso en la expresión <paramref name="body" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-501">These variables are valid for use in the <paramref name="body" /> expression.</span></span></param>
        <summary><span data-ttu-id="9f50f-502">Crea un <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> con la implementación de una función Lambda insertada y los parámetros formales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-502">Creates a <see cref="T:System.Data.Common.CommandTrees.DbLambda" /> with the specified inline Lambda function implementation and formal parameters.</span></span></summary>
        <returns><span data-ttu-id="9f50f-503">Nuevo DbLambda que describe una función Lambda alineada con el cuerpo y los parámetros formales especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-503">A new DbLambda that describes an inline Lambda function with the specified body and formal parameters.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-504"><paramref name="variables" /> es null o contiene null, o <paramref name="body" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-504"><paramref name="variables" /> is null or contains null, or <paramref name="body" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-505"><paramref name="variables" /> contiene más de un elemento con el mismo nombre de variable.</span><span class="sxs-lookup"><span data-stu-id="9f50f-505"><paramref name="variables" /> contains more than one element with the same variable name.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LeftOuterJoin">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-506">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por las expresiones izquierda y derecha según la condición de combinación definida, usando LeftOuterJoin como la <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-506">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpression, right As DbExpression, joinCondition As Func(Of DbExpression, DbExpression, DbExpression)) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-507">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-507">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-508">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-508">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="9f50f-509">Un método que representa la condición según la que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-509">A method representing the condition on which to join.</span></span> <span data-ttu-id="9f50f-510">Este método debe generar una expresión con un tipo de resultado booleano que proporciona la lógica de la condición de combinación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-510">This method must produce an expression with a Boolean result type that provides the logic of the join condition.</span></span></param>
        <summary><span data-ttu-id="9f50f-511">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por las expresiones izquierda y derecha según la condición de combinación definida, usando LeftOuterJoin como la <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-511">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expressions, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-512">Nuevo DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de LeftOuterJoin, que representa la operación de combinación externa izquierda aplicada a los conjuntos de entrada izquierdo y derecho según la condición de combinación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-512">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-513"><paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-513"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span>

<span data-ttu-id="9f50f-514">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-514">-or-</span></span>

<span data-ttu-id="9f50f-515">La expresión producida por <paramref name="joinCondition" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-515">The expression produced by <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-516"><paramref name="left" /> o <paramref name="right" /> no tiene un tipo de resultado de colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-516"><paramref name="left" /> or <paramref name="right" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-517">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-517">-or-</span></span>

<span data-ttu-id="9f50f-518">La expresión producida por <paramref name="joinCondition" /> no tiene un tipo de resultado Booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-518">The expression produced by <paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LeftOuterJoin">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin(class System.Data.Common.CommandTrees.DbExpressionBinding left, class System.Data.Common.CommandTrees.DbExpressionBinding right, class System.Data.Common.CommandTrees.DbExpression joinCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LeftOuterJoin (left As DbExpressionBinding, right As DbExpressionBinding, joinCondition As DbExpression) As DbJoinExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbJoinExpression ^ LeftOuterJoin(System::Data::Common::CommandTrees::DbExpressionBinding ^ left, System::Data::Common::CommandTrees::DbExpressionBinding ^ right, System::Data::Common::CommandTrees::DbExpression ^ joinCondition);" />
      <MemberSignature Language="F#" Value="static member LeftOuterJoin : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbJoinExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin (left, right, joinCondition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbJoinExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="joinCondition" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-519">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-519">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-520">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-520">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the right set argument.</span></span></param>
        <param name="joinCondition"><span data-ttu-id="9f50f-521">Una expresión que especifica la condición según la que se va a combinar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-521">An expression that specifies the condition on which to join.</span></span></param>
        <summary><span data-ttu-id="9f50f-522">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> que combina los conjuntos especificados por los enlaces de las expresiones izquierda y derecha según la condición de combinación definida, usando LeftOuterJoin como la <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-522">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that joins the sets specified by the left and right expression bindings, on the specified join condition, using LeftOuterJoin as the <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-523">Nuevo DbJoinExpression, con <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de LeftOuterJoin, que representa la operación de combinación externa izquierda aplicada a los conjuntos de entrada izquierdo y derecho según la condición de combinación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-523">A new DbJoinExpression, with an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of LeftOuterJoin, that represents the left outer join operation applied to the left and right     input sets under the given join condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-524"><paramref name="left" />, <paramref name="right" /> o <paramref name="joinCondition" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-524"><paramref name="left" />,  <paramref name="right" /> or <paramref name="joinCondition" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-525"><paramref name="joinCondition" /> no tiene un tipo de resultado booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-525"><paramref name="joinCondition" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThan(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThan (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThan(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThan : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-526">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-526">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-527">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-527">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-528">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que determina si el argumento izquierdo es menor que el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-528">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than the right argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-529">Nuevo DbComparisonExpression que representa la comparación menor que.</span><span class="sxs-lookup"><span data-stu-id="9f50f-529">A new DbComparisonExpression representing the less-than comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-530"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-530"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-531">No existe ningún tipo de resultado cuyo orden se pueda comparar entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-531">No common order-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LessThanOrEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ LessThanOrEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member LessThanOrEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-532">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-532">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-533">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-533">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-534">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que determina si el argumento izquierdo es menor o igual que el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-534">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that determines whether the left argument is less than or equal to the right argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-535">Nuevo DbComparisonExpression que representa la comparación menor o igual que.</span><span class="sxs-lookup"><span data-stu-id="9f50f-535">A new DbComparisonExpression representing the less-than-or-equal-to comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-536"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-536"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-537">No existe ningún tipo de resultado cuyo orden e igualdad se puedan comparar entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-537">No common result type that is both equality- and order-comparable exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Like">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-538">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> que compara la cadena de entrada especificada con el modelo definido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-538">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-539">Una expresión que especifica la cadena de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-539">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="9f50f-540">Una expresión que especifica la cadena del modelo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-540">An expression that specifies the pattern string.</span></span></param>
        <summary><span data-ttu-id="9f50f-541">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> que compara la cadena de entrada especificada con el modelo definido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-541">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern.</span></span></summary>
        <returns><span data-ttu-id="9f50f-542">Nuevo DbLikeExpression con la entrada, el modelo y escape null especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-542">A new DbLikeExpression with the specified input, pattern and a null escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-543"><paramref name="Argument" /> o <paramref name="pattern" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-543"><paramref name="Argument" /> or <paramref name="pattern" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-544"><paramref name="Argument" /> o <paramref name="pattern" /> no tiene un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="9f50f-544"><paramref name="Argument" /> or <paramref name="pattern" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Like">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLikeExpression Like(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression pattern, class System.Data.Common.CommandTrees.DbExpression escape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Like (argument As DbExpression, pattern As DbExpression, escape As DbExpression) As DbLikeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLikeExpression ^ Like(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ pattern, System::Data::Common::CommandTrees::DbExpression ^ escape);" />
      <MemberSignature Language="F#" Value="static member Like : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLikeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like (argument, pattern, escape)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLikeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="pattern" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="escape" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-545">Una expresión que especifica la cadena de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-545">An expression that specifies the input string.</span></span></param>
        <param name="pattern"><span data-ttu-id="9f50f-546">Una expresión que especifica la cadena del modelo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-546">An expression that specifies the pattern string.</span></span></param>
        <param name="escape"><span data-ttu-id="9f50f-547">Una expresión opcional que especifica la cadena de escape.</span><span class="sxs-lookup"><span data-stu-id="9f50f-547">An optional expression that specifies the escape string.</span></span></param>
        <summary><span data-ttu-id="9f50f-548">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> que compara la cadena de entrada especificada con el modelo definido utilizando el escape opcional.</span><span class="sxs-lookup"><span data-stu-id="9f50f-548">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that compares the specified input string to the given pattern using the optional escape.</span></span></summary>
        <returns><span data-ttu-id="9f50f-549">Nuevo DbLikeExpression con la entrada, el modelo y escape especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-549">A new DbLikeExpression with the specified input, pattern and escape.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-550"><paramref name="argument" />, <paramref name="pattern" /> o <paramref name="escape" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-550"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-551"><paramref name="argument" />, <paramref name="pattern" /> o <paramref name="escape" /> no tiene un tipo de resultado de cadena.</span><span class="sxs-lookup"><span data-stu-id="9f50f-551"><paramref name="argument" />,   <paramref name="pattern" /> or <paramref name="escape" /> does not have a string result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Limit(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Limit (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Limit(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Limit : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-552">Expresión que especifica la colección de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-552">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="9f50f-553">Una expresión que especifica el valor de límite.</span><span class="sxs-lookup"><span data-stu-id="9f50f-553">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="9f50f-554">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> que restringe el número de elementos en la colección Argument al valor de Limit especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-554">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="9f50f-555">Los resultados enlazados no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-555">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="9f50f-556">Nuevo DbLimitExpression con valores de límite de argumento y recuento especificados que no incluye resultados iguales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-556">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-557"><paramref name="argument" /> o <paramref name="count" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-557"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-558"><paramref name="argument" /> no tiene un tipo de resultado de la colección, o <paramref name="count" /> no tiene ningún tipo de resultado que sea igual o se pueda promover a un tipo entero de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="9f50f-558"><paramref name="argument" /> does not have a collection result type, or <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Minus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Minus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Minus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Minus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Minus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-559">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-559">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-560">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-560">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-561">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que resta el argumento derecho del argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-561">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that subtracts the right argument from the left argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-562">Nuevo DbArithmeticExpression que representa la operación de resta.</span><span class="sxs-lookup"><span data-stu-id="9f50f-562">A new DbArithmeticExpression representing the subtraction operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-563"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-563"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-564">No existe ningún tipo de resultado numérico común entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-564">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Modulo">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Modulo(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Modulo (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Modulo(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Modulo : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-565">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-565">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-566">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-566">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-567">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que calcula el resto del argumento izquierdo dividido por el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-567">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that computes the remainder of the left argument divided by the right argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-568">Nuevo DbArithmeticExpression que representa la operación de módulos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-568">A new DbArithmeticExpression representing the modulo operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-569"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-569"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-570">No existe ningún tipo de resultado numérico común entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-570">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Multiply(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Multiply (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Multiply(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-571">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-571">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-572">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-572">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-573">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que multiplica el argumento izquierdo por el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-573">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that multiplies the left argument by the right argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-574">Nuevo DbArithmeticExpression que representa la operación de multiplicación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-574">A new DbArithmeticExpression representing the multiplication operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-575"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-575"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-576">No existe ningún tipo de resultado numérico común entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-576">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-577">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> que representa la navegación de una relación de asociación o composición.</span><span class="sxs-lookup"><span data-stu-id="9f50f-577">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Common.CommandTrees.DbExpression navigateFrom, class System.Data.Metadata.Edm.RelationshipEndMember fromEnd, class System.Data.Metadata.Edm.RelationshipEndMember toEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (navigateFrom As DbExpression, fromEnd As RelationshipEndMember, toEnd As RelationshipEndMember) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Common::CommandTrees::DbExpression ^ navigateFrom, System::Data::Metadata::Edm::RelationshipEndMember ^ fromEnd, System::Data::Metadata::Edm::RelationshipEndMember ^ toEnd);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (navigateFrom, fromEnd, toEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fromEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="navigateFrom"><span data-ttu-id="9f50f-578">Una expresión que especifica la instancia desde la que se debe producir la navegación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-578">An expression that specifies the instance from which navigation should occur.</span></span></param>
        <param name="fromEnd"><span data-ttu-id="9f50f-579">Metadatos de la propiedad que representa el final de la relación desde la que se debe producir la navegación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-579">Metadata for the property that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEnd"><span data-ttu-id="9f50f-580">Metadatos de la propiedad que representa el final de la relación hacia la que se debe producir la navegación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-580">Metadata for the property that represents the end of the relationship to which navigation should occur.</span></span></param>
        <summary><span data-ttu-id="9f50f-581">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> que representa la navegación de una relación de asociación o composición.</span><span class="sxs-lookup"><span data-stu-id="9f50f-581">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="9f50f-582">Nuevo DbRelationshipNavigationExpression que representa la navegación de los extremos de la relación desde y hasta especificados del tipo de relación especificada desde la instancia origen de navegación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-582">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-583"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requiere que se producen siempre la navegación de una referencia de modo que `navigateFrom` siempre debe tener un tipo de resultado de referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-583"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-584"><paramref name="fromEnd" />, <paramref name="toEnd" /> o <paramref name="navigateFrom" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-584"><paramref name="fromEnd" />,  <paramref name="toEnd" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-585"><paramref name="fromEnd" /> y <paramref name="toEnd" /> no se declaran con el mismo tipo de relación o <paramref name="navigateFrom" /> tiene un tipo de resultado incompatible con el tipo de propiedad de <paramref name="fromEnd" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-585"><paramref name="fromEnd" /> and <paramref name="toEnd" /> are not declared by the same relationship type, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of <paramref name="fromEnd" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate(class System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, class System.Data.Common.CommandTrees.DbExpression navigateFrom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Navigate (type As RelationshipType, fromEndName As String, toEndName As String, navigateFrom As DbExpression) As DbRelationshipNavigationExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ Navigate(System::Data::Metadata::Edm::RelationshipType ^ type, System::String ^ fromEndName, System::String ^ toEndName, System::Data::Common::CommandTrees::DbExpression ^ navigateFrom);" />
      <MemberSignature Language="F#" Value="static member Navigate : System.Data.Metadata.Edm.RelationshipType * string * string * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate (type, fromEndName, toEndName, navigateFrom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRelationshipNavigationExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.RelationshipType" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="fromEndName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="toEndName" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigateFrom" Type="System.Data.Common.CommandTrees.DbExpression" Index="3" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9f50f-586">Metadatos para el tipo de relación que representa la relación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-586">Metadata for the relation type that represents the relationship.</span></span></param>
        <param name="fromEndName"><span data-ttu-id="9f50f-587">Nombre de la propiedad del tipo de relación que representa el final de la relación desde la que debe realizarse la navegación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-587">The name of the property of the relation type that represents the end of the relationship from which navigation should occur.</span></span></param>
        <param name="toEndName"><span data-ttu-id="9f50f-588">Nombre de la propiedad del tipo de relación que representa el final de la relación en la que debe realizarse la navegación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-588">The name of the property of the relation type that represents the end of the relationship to which navigation should occur.</span></span></param>
        <param name="navigateFrom"><span data-ttu-id="9f50f-589">Una expresión que especifica la instancia desde la que se debe producir la navegación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-589">An expression the specifies the instance from which naviagtion should occur.</span></span></param>
        <summary><span data-ttu-id="9f50f-590">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> que representa la navegación de una relación de asociación o composición.</span><span class="sxs-lookup"><span data-stu-id="9f50f-590">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> representing the navigation of a composition or association relationship.</span></span></summary>
        <returns><span data-ttu-id="9f50f-591">Nuevo DbRelationshipNavigationExpression que representa la navegación de los extremos de la relación desde y hasta especificados del tipo de relación especificada desde la instancia origen de navegación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-591">A new DbRelationshipNavigationExpression representing the navigation of the specified from and to relation ends of the specified relation type from the specified navigation source instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-592"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requiere que se producen siempre la navegación de una referencia de modo que `navigateFrom` siempre debe tener un tipo de resultado de referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-592"><xref:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression> requires that navigation always occur from a reference, and so `navigateFrom` must always have a reference result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-593"><paramref name="type" />, <paramref name="fromEndName" />, <paramref name="toEndName" /> o <paramref name="navigateFrom" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-593"><paramref name="type" />,  <paramref name="fromEndName" />,  <paramref name="toEndName" /> or <paramref name="navigateFrom" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-594"><paramref name="type" /> no está asociado al área de trabajo de metadatos de este árbol de comandos o <paramref name="navigateFrom" /> está asociado a otro árbol de comandos diferente, o <paramref name="type" /> no declara una propiedad de final de relación con el nombre <paramref name="toEndName" /> o <paramref name="fromEndName" />, o <paramref name="navigateFrom" /> tiene un tipo de resultado que no es compatible con el tipo de propiedad de la propiedad de final de relación con el nombre <paramref name="fromEndName" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-594"><paramref name="type" /> is not associated with this command tree's metadata workspace or <paramref name="navigateFrom" /> is associated with a different command tree, or <paramref name="type" /> does not declare a relation end property with name <paramref name="toEndName" /> or <paramref name="fromEndName" />, or <paramref name="navigateFrom" /> has a result type that is not compatible with the property type of the relation end property with name <paramref name="fromEndName" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Negate(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Negate (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Negate(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-595">Una expresión que especifica el argumento.</span><span class="sxs-lookup"><span data-stu-id="9f50f-595">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-596">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que niega el valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="9f50f-596">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-597">Nuevo DbArithmeticExpression que representa la operación de negación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-597">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-598"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-598"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-599">No existe ningún tipo de resultado numérico para <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-599">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="New">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-600">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-600">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, arguments As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="9f50f-601">Tipo de la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-601">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="9f50f-602">Expresiones que especifican valores de nuevas instancias, interpretadas según el tipo de la instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-602">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="9f50f-603">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-603">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="9f50f-604">Si el argumento de tipo es un tipo de colección, los argumentos especifican los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-604">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="9f50f-605">De lo contrario, los argumentos se usan como valores de propiedad o de columna en la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-605">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="9f50f-606">Nuevo DbNewInstanceExpression con el tipo y los argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-606">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-607">Si `instanceType` es un tipo de colección, a continuación, todas las expresiones de `arguments` debe tener un tipo de resultado que se pueda promover al tipo de elemento de la `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="9f50f-607">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="9f50f-608">Si `instanceType` es un tipo de fila, `arguments` debe contener tantas expresiones como las columnas existentes en el tipo de fila y el tipo de resultado de cada expresión debe ser igual o promovible al tipo de la columna correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-608">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="9f50f-609">Un tipo de fila que no declara ninguna columna no es válido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-609">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="9f50f-610">Si `instanceType` es un tipo de entidad `arguments` debe contener tal muchas expresiones como las propiedades definidas por el tipo y el tipo de resultado de cada expresión debe ser igual o promovible al tipo de la propiedad correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-610">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-611"><paramref name="instanceType" /> o <paramref name="arguments" /> es null, <paramref name="arguments" /> o contiene null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-611"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-612"><paramref name="arguments" /> está vacío o los tipos de resultado de las expresiones incluidas no coinciden con los requisitos de <paramref name="instanceType" />. Vea la sección de notas para más información.</span><span class="sxs-lookup"><span data-stu-id="9f50f-612"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="New">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, params System.Data.Common.CommandTrees.DbExpression[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression New(class System.Data.Metadata.Edm.TypeUsage instanceType, class System.Data.Common.CommandTrees.DbExpression[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function New (instanceType As TypeUsage, ParamArray arguments As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ New(System::Data::Metadata::Edm::TypeUsage ^ instanceType, ... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="static member New : System.Data.Metadata.Edm.TypeUsage * System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New (instanceType, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="arguments" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="instanceType"><span data-ttu-id="9f50f-613">Tipo de la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-613">The type of the new instance.</span></span></param>
        <param name="arguments"><span data-ttu-id="9f50f-614">Expresiones que especifican valores de nuevas instancias, interpretadas según el tipo de la instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-614">Expressions that specify values of the new instances, interpreted according to the instance's type.</span></span></param>
        <summary><span data-ttu-id="9f50f-615">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-615">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span> <span data-ttu-id="9f50f-616">Si el argumento de tipo es un tipo de colección, los argumentos especifican los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-616">If the type argument is a collection type, the arguments specify the elements of the collection.</span></span> <span data-ttu-id="9f50f-617">De lo contrario, los argumentos se usan como valores de propiedad o de columna en la nueva instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-617">Otherwise the arguments are used as property or column values in the new instance.</span></span></summary>
        <returns><span data-ttu-id="9f50f-618">Nuevo DbNewInstanceExpression con el tipo y los argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-618">A new DbNewInstanceExpression with the specified type and arguments.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-619">Si `instanceType` es un tipo de colección, a continuación, todas las expresiones de `arguments` debe tener un tipo de resultado que se pueda promover al tipo de elemento de la `instanceType`.</span><span class="sxs-lookup"><span data-stu-id="9f50f-619">If `instanceType` is a collection type then every expression in `arguments` must have a result type that is promotable to the element type of the `instanceType`.</span></span> <span data-ttu-id="9f50f-620">Si `instanceType` es un tipo de fila, `arguments` debe contener tantas expresiones como las columnas existentes en el tipo de fila y el tipo de resultado de cada expresión debe ser igual o promovible al tipo de la columna correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-620">If `instanceType` is a row type,  `arguments` must contain as many expressions as there are columns in the row type, and the result type of each expression must be equal or promotable to the type of the corresponding column.</span></span> <span data-ttu-id="9f50f-621">Un tipo de fila que no declara ninguna columna no es válido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-621">A row type that does not declare any columns is invalid.</span></span> <span data-ttu-id="9f50f-622">Si `instanceType` es un tipo de entidad `arguments` debe contener tal muchas expresiones como las propiedades definidas por el tipo y el tipo de resultado de cada expresión debe ser igual o promovible al tipo de la propiedad correspondiente.</span><span class="sxs-lookup"><span data-stu-id="9f50f-622">If `instanceType` is an entity type,  `arguments` must contain as many expressions as there are properties defined by the type, and the result type of each expression must be equal or promotable to the type of the corresponding property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-623"><paramref name="instanceType" /> o <paramref name="arguments" /> es null, <paramref name="arguments" /> o contiene null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-623"><paramref name="instanceType" /> or <paramref name="arguments" /> is null, or <paramref name="arguments" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-624"><paramref name="arguments" /> está vacío o los tipos de resultado de las expresiones incluidas no coinciden con los requisitos de <paramref name="instanceType" />. Vea la sección de notas para más información.</span><span class="sxs-lookup"><span data-stu-id="9f50f-624"><paramref name="arguments" /> is empty or the result types of the contained expressions do not match the requirements of <paramref name="instanceType" /> (as explained in the remarks section).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="NewCollection">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-625">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que construye una colección que contiene los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-625">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt; elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (elements As IEnumerable(Of DbExpression)) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : seq&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="9f50f-626">Una lista de expresiones que proporcionan los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-626">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="9f50f-627">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que construye una colección que contiene los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-627">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="9f50f-628">El tipo de la colección está basado en el tipo común de los elementos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-628">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="9f50f-629">Si no existe ningún tipo de elemento común, se inicia una excepción.</span><span class="sxs-lookup"><span data-stu-id="9f50f-629">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="9f50f-630">Nuevo DbNewInstanceExpression con el tipo de colección y los argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-630">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-631"><paramref name="elements" /> es null, o contiene null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-631"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-632"><paramref name="elements" /> está vacío o contiene expresiones para las que no existe ningún tipo de resultado común.</span><span class="sxs-lookup"><span data-stu-id="9f50f-632"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (params System.Data.Common.CommandTrees.DbExpression[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection(class System.Data.Common.CommandTrees.DbExpression[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Function NewCollection (ParamArray elements As DbExpression()) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewCollection(... cli::array &lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ elements);" />
      <MemberSignature Language="F#" Value="static member NewCollection : System.Data.Common.CommandTrees.DbExpression[] -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection elements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elements" Type="System.Data.Common.CommandTrees.DbExpression[]" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elements"><span data-ttu-id="9f50f-633">Una lista de expresiones que proporcionan los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-633">A list of expressions that provide the elements of the collection.</span></span></param>
        <summary><span data-ttu-id="9f50f-634">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que construye una colección que contiene los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-634">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs a collection containing the specified elements.</span></span> <span data-ttu-id="9f50f-635">El tipo de la colección está basado en el tipo común de los elementos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-635">The type of the collection is based on the common type of the elements.</span></span> <span data-ttu-id="9f50f-636">Si no existe ningún tipo de elemento común, se inicia una excepción.</span><span class="sxs-lookup"><span data-stu-id="9f50f-636">If no common element type exists an exception is thrown.</span></span></summary>
        <returns><span data-ttu-id="9f50f-637">Nuevo DbNewInstanceExpression con el tipo de colección y los argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-637">A new DbNewInstanceExpression with the specified collection type and arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-638"><paramref name="elements" /> es null, o contiene null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-638"><paramref name="elements" /> is null, or contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-639"><paramref name="elements" /> está vacío o contiene expresiones para las que no existe ningún tipo de resultado común.</span><span class="sxs-lookup"><span data-stu-id="9f50f-639"><paramref name="elements" /> is empty or contains expressions for which no common result type exists.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewEmptyCollection">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection(class System.Data.Metadata.Edm.TypeUsage collectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NewEmptyCollection (collectionType As TypeUsage) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewEmptyCollection(System::Data::Metadata::Edm::TypeUsage ^ collectionType);" />
      <MemberSignature Language="F#" Value="static member NewEmptyCollection : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection collectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="collectionType"><span data-ttu-id="9f50f-640">Tipo de metadatos para la colección que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="9f50f-640">The type metadata for the collection to create</span></span></param>
        <summary><span data-ttu-id="9f50f-641">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que construye una colección vacía del tipo de colección especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-641">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that constructs an empty collection of the specified collection type.</span></span></summary>
        <returns><span data-ttu-id="9f50f-642">Nuevo DbNewInstanceExpression con el tipo de colección especificado y una lista vacía de <paramref name="Arguments" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-642">A new DbNewInstanceExpression with the specified collection type and an empty <paramref name="Arguments" /> list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-643"><paramref name="collectionType" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-643"><paramref name="collectionType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-644"><paramref name="collectionType" /> no es un tipo de colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-644"><paramref name="collectionType" /> is not a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; columnValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow (columnValues As IEnumerable(Of KeyValuePair(Of String, DbExpression))) As DbNewInstanceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Common::CommandTrees::DbNewInstanceExpression ^ NewRow(System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ columnValues);" />
      <MemberSignature Language="F#" Value="static member NewRow : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbNewInstanceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow columnValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNewInstanceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnValues" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnValues"><span data-ttu-id="9f50f-645">Lista de pares clave-valor cadena-DbExpression que define la estructura y los valores de la fila.</span><span class="sxs-lookup"><span data-stu-id="9f50f-645">A list of string-DbExpression key-value pairs that defines the structure and values of the row.</span></span></param>
        <summary><span data-ttu-id="9f50f-646">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> que genera una fila con las columnas con nombre especificadas y los valores definidos, especificados como expresiones.</span><span class="sxs-lookup"><span data-stu-id="9f50f-646">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that produces a row with the specified named columns and the given values, specified as expressions.</span></span></summary>
        <returns><span data-ttu-id="9f50f-647">Nuevo DbNewInstanceExpression que representa la construcción de la fila.</span><span class="sxs-lookup"><span data-stu-id="9f50f-647">A new DbNewInstanceExpression that represents the construction of the row.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-648"><paramref name="columnValues" /> es null o contiene un elemento con un nombre de columna o expresión null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-648"><paramref name="columnValues" /> is null or contains an element with a null column name or expression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-649"><paramref name="columnValues" /> está vacío o contiene un nombre de columna duplicado o no válido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-649"><paramref name="columnValues" /> is empty, or contains a duplicate or invalid column name.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNotExpression Not(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Not (argument As DbExpression) As DbNotExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNotExpression ^ Not(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member Not : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbNotExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNotExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-650">Una expresión booleana que especifica el argumento.</span><span class="sxs-lookup"><span data-stu-id="9f50f-650">A Boolean expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-651">Crea una expresión <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> que realiza la negación lógica del argumento definido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-651">Creates a <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that performs the logical negation of the given argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-652">Nuevo DbNotExpression con el argumento especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-652">A new DbNotExpression with the specified argument.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-653"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-653"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-654"><paramref name="argument" /> no tiene un tipo de resultado booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-654"><paramref name="argument" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="NotEqual">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbComparisonExpression NotEqual(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function NotEqual (left As DbExpression, right As DbExpression) As DbComparisonExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbComparisonExpression ^ NotEqual(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member NotEqual : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbComparisonExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbComparisonExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-655">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-655">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-656">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-656">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-657">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> que compara los argumentos izquierdo y derecho para ver si no son iguales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-657">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that compares the left and right arguments for inequality.</span></span></summary>
        <returns><span data-ttu-id="9f50f-658">Nuevo DbComparisonExpression que representa la comparación de desigualdad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-658">A new DbComparisonExpression representing the inequality comparison.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-659"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-659"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-660">No existe ningún tipo de resultado cuya igualdad se pueda comparar entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-660">No common equality-comparable result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbNullExpression Null(class System.Data.Metadata.Edm.TypeUsage nullType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Null (nullType As TypeUsage) As DbNullExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbNullExpression ^ Null(System::Data::Metadata::Edm::TypeUsage ^ nullType);" />
      <MemberSignature Language="F#" Value="static member Null : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbNullExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null nullType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbNullExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nullType" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="nullType"><span data-ttu-id="9f50f-661">Tipo del valor NULL.</span><span class="sxs-lookup"><span data-stu-id="9f50f-661">The type of the null value.</span></span></param>
        <summary><span data-ttu-id="9f50f-662">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, que representa un valor NULL con tipo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-662">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />, which represents a typed null value.</span></span></summary>
        <returns><span data-ttu-id="9f50f-663">Instancia de DbNullExpression.</span><span class="sxs-lookup"><span data-stu-id="9f50f-663">An instance of DbNullExpression.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-664"><paramref name="nullType" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-664"><paramref name="nullType" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfType">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfType(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfType (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfType(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfType : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-665">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-665">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="9f50f-666">Metadatos del tipo que deben tener los elementos del conjunto de entrada para poder incluirlos en el conjunto resultante.</span><span class="sxs-lookup"><span data-stu-id="9f50f-666">Type metadata for the type that elements of the input set must have to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="9f50f-667">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> que genera un conjunto de elementos del conjunto de entrada dado que son del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-667">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of the specified type.</span></span></summary>
        <returns><span data-ttu-id="9f50f-668">Nuevo DbOfTypeExpression con el argumento y el tipo determinados especificados, y un ExpressionKind de <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-668">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-669">DbOfTypeExpression requiere que `argument` tiene una colección de tipo de resultado con un tipo de elemento polimórfico y que `type` es un tipo de la misma jerarquía de tipos que ese tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="9f50f-669">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-670"><paramref name="argument" /> o <paramref name="type" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-670"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-671"><paramref name="argument" /> no tiene un tipo de resultado de la colección o <paramref name="type" /> no pertenece a la misma jerarquía de tipos que el tipo de elemento tipo de resultado de la colección <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-671"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OfTypeOnly">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OfTypeOnly (argument As DbExpression, type As TypeUsage) As DbOfTypeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOfTypeExpression ^ OfTypeOnly(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="static member OfTypeOnly : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbOfTypeExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly (argument, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOfTypeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-672">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-672">An <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="type"><span data-ttu-id="9f50f-673">Metadatos del tipo con el que deben coincidir exactamente los elementos del conjunto de entrada para poder incluirlos en el conjunto resultante.</span><span class="sxs-lookup"><span data-stu-id="9f50f-673">Type metadata for the type that elements of the input set must match exactly to be included in the resulting set.</span></span></param>
        <summary><span data-ttu-id="9f50f-674">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> que genera un conjunto de elementos del conjunto de entrada dado que son exactamente del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-674">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that produces a set consisting of the elements of the given input set that are of exactly the specified type.</span></span></summary>
        <returns><span data-ttu-id="9f50f-675">Nuevo DbOfTypeExpression con el argumento y el tipo determinados especificados, y un ExpressionKind de <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-675">A new DbOfTypeExpression with the specified set argument and type, and an ExpressionKind of <see cref="F:System.Data.Common.CommandTrees.DbExpressionKind.OfTypeOnly" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-676">DbOfTypeExpression requiere que `argument` tiene una colección de tipo de resultado con un tipo de elemento polimórfico y que `type` es un tipo de la misma jerarquía de tipos que ese tipo de elemento.</span><span class="sxs-lookup"><span data-stu-id="9f50f-676">DbOfTypeExpression requires that `argument` has a collection result type with a polymorphic element type, and that `type` is a type from the same type hierarchy as that element type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-677"><paramref name="argument" /> o <paramref name="type" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-677"><paramref name="argument" /> or <paramref name="type" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-678"><paramref name="argument" /> no tiene un tipo de resultado de la colección o <paramref name="type" /> no pertenece a la misma jerarquía de tipos que el tipo de elemento tipo de resultado de la colección <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-678"><paramref name="argument" /> does not have a collection result type, or <paramref name="type" /> is not a type in the same type hierarchy as the element type of the collection result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbOrExpression Or(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Or (left As DbExpression, right As DbExpression) As DbOrExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbOrExpression ^ Or(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Or : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbOrExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbOrExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-679">Una expresión booleana que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-679">A Boolean expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-680">Una expresión booleana que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-680">A Boolean expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-681">Crea una expresión <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> que realiza la operación de OR lógico de los argumentos izquierdo y derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-681">Creates an <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that performs the logical Or of the left and right arguments.</span></span></summary>
        <returns><span data-ttu-id="9f50f-682">Nuevo DbOrExpression con argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-682">A new DbOrExpression with the specified arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-683"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-683"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-684"><paramref name="left" /> o <paramref name="right" /> no tiene un tipo de resultado booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-684"><paramref name="left" /> or <paramref name="right" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-685">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que ordena el conjunto de entrada definido según la clave de ordenación especificada, con criterio de ordenación ascendente y la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-685">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-686">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-686">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="9f50f-687">Un método que especifica cómo derivar la expresión de clave de ordenación, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-687">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-688">Este método debe generar una expresión con un tipo de resultado con comparación de orden que proporcione la definición de la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-688">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="9f50f-689">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que ordena el conjunto de entrada definido según la clave de ordenación especificada, con criterio de ordenación ascendente y la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-689">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-690">Nueva clase DbSortExpression que representa la operación order by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-690">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-691"><paramref name="source" /> o <paramref name="sortKey" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-691"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="9f50f-692">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-692">-or-</span></span>

<span data-ttu-id="9f50f-693">La expresión producida por <paramref name="sortKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-693">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-694"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-694"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-695">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-695">-or-</span></span>

<span data-ttu-id="9f50f-696">La expresión generada por <paramref name="sortKey" /> no tiene un tipo de resultado con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-696">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderBy(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderBy(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-697">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-697">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="9f50f-698">Un método que especifica cómo derivar la expresión de clave de ordenación, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-698">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-699">Este método debe generar una expresión con un tipo de resultado con comparación de orden que proporcione la definición de la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-699">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="9f50f-700">Intercalación por la que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-700">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="9f50f-701">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que ordena el conjunto de entrada definido según la clave de ordenación especificada, con criterio de ordenación ascendente y la intercalación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-701">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-702">Nueva clase DbSortExpression que representa la operación order by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-702">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-703"><paramref name="source" />, <paramref name="sortKey" /> o <paramref name="collation" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-703"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="9f50f-704">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-704">-or-</span></span> 
<span data-ttu-id="9f50f-705">La expresión producida por <paramref name="sortKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-705">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-706"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-706"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-707">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-707">-or-</span></span>

<span data-ttu-id="9f50f-708">La expresión generada por <paramref name="sortKey" /> no tiene ningún tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-708">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f50f-709"><paramref name="collation" /> está vacío o solo contiene caracteres de espacios en blanco.</span><span class="sxs-lookup"><span data-stu-id="9f50f-709"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-710">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que ordena el conjunto de entrada definido según la clave de ordenación especificada, con criterio de ordenación descendente y la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-710">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-711">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-711">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="9f50f-712">Un método que especifica cómo derivar la expresión de clave de ordenación, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-712">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-713">Este método debe generar una expresión con un tipo de resultado con comparación de orden que proporcione la definición de la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-713">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="9f50f-714">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que ordena el conjunto de entrada definido según la clave de ordenación especificada, con criterio de ordenación descendente y la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-714">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-715">Nueva clase DbSortExpression que representa la operación order by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-715">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-716"><paramref name="source" /> o <paramref name="sortKey" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-716"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="9f50f-717">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-717">-or-</span></span>

<span data-ttu-id="9f50f-718">La expresión producida por <paramref name="sortKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-718">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-719"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-719"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-720">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-720">-or-</span></span>

<span data-ttu-id="9f50f-721">La expresión generada por <paramref name="sortKey" /> no tiene un tipo de resultado con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-721">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression OrderByDescending(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending (source As DbExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ OrderByDescending(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-722">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-722">An expression that specifies the input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="9f50f-723">Un método que especifica cómo derivar la expresión de clave de ordenación, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-723">A method that specifies how to derive the sort key expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-724">Este método debe generar una expresión con un tipo de resultado con comparación de orden que proporcione la definición de la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-724">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="9f50f-725">Intercalación por la que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-725">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="9f50f-726">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que ordena el conjunto de entrada definido según la clave de ordenación especificada, con criterio de ordenación descendente y la intercalación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-726">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort key, with descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-727">Nueva clase DbSortExpression que representa la operación order by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-727">A new DbSortExpression that represents the order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-728"><paramref name="source" />, <paramref name="sortKey" /> o <paramref name="collation" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-728"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="9f50f-729">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-729">-or-</span></span>

<span data-ttu-id="9f50f-730">La expresión producida por <paramref name="sortKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-730">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-731"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-731"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-732">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-732">-or-</span></span>

<span data-ttu-id="9f50f-733">La expresión generada por <paramref name="sortKey" /> no tiene ningún tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-733">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f50f-734"><paramref name="collation" /> está vacío o solo contiene caracteres de espacios en blanco.</span><span class="sxs-lookup"><span data-stu-id="9f50f-734"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OuterApply">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-735">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que evalúa la expresión <paramref name="apply" /> definida una vez por cada elemento de un conjunto de entrada dado y genera una colección de filas con las columnas input y apply correspondientes.</span><span class="sxs-lookup"><span data-stu-id="9f50f-735">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;string,System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Data.Common.CommandTrees.DbExpression&gt;&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (source As DbExpression, apply As Func(Of DbExpression, KeyValuePair(Of String, DbExpression))) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Data::Common::CommandTrees::DbExpression ^&gt;&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Collections.Generic.KeyValuePair&lt;string, System.Data.Common.CommandTrees.DbExpression&gt;&gt; -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair&lt;System.String,System.Data.Common.CommandTrees.DbExpression&gt;&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-736">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-736">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="9f50f-737">Un método que especifica la lógica que se va a evaluar una vez por cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-737">A method that specifies the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-738">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que evalúa la expresión <paramref name="apply" /> definida una vez por cada elemento de un conjunto de entrada dado y genera una colección de filas con las columnas input y apply correspondientes.</span><span class="sxs-lookup"><span data-stu-id="9f50f-738">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="9f50f-739">Las filas para las que <paramref name="apply" /> se evalúa como un conjunto vacío tienen un valor de <see langword="null" /> en la columna apply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-739">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-740">Un nuevo DbApplyExpression con los enlaces de entrada y aplicación especificados y un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de OuterApply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-740">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-741"><paramref name="source" /> o <paramref name="apply" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-741"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="9f50f-742">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-742">-or-</span></span> 
<span data-ttu-id="9f50f-743">El resultado de <paramref name="apply" /> contiene un nombre o expresión que es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-743">The result of <paramref name="apply" /> contains a name or expression that is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-744"><paramref name="Source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-744"><paramref name="Source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-745">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-745">-or-</span></span>

<span data-ttu-id="9f50f-746">El resultado de <paramref name="apply" /> contiene un nombre o una expresión que no son válidos en un enlace de expresiones.</span><span class="sxs-lookup"><span data-stu-id="9f50f-746">The result of <paramref name="apply" /> contains a name or expression that is not valid in an expression binding.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OuterApply">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbApplyExpression OuterApply(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpressionBinding apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OuterApply (input As DbExpressionBinding, apply As DbExpressionBinding) As DbApplyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbApplyExpression ^ OuterApply(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpressionBinding ^ apply);" />
      <MemberSignature Language="F#" Value="static member OuterApply : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbApplyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply (input, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbApplyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Data.Common.CommandTrees.DbExpressionBinding" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-747">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-747">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="9f50f-748">Un objeto <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> que especifica la lógica que se va a evaluar una vez por cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-748">An <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-749">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que evalúa la expresión <paramref name="apply" /> definida una vez por cada elemento de un conjunto de entrada dado y genera una colección de filas con las columnas input y apply correspondientes.</span><span class="sxs-lookup"><span data-stu-id="9f50f-749">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="9f50f-750">Las filas para las que <paramref name="apply" /> se evalúa como un conjunto vacío tienen un valor de <see langword="null" /> en la columna apply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-750">Rows for which <paramref name="apply" /> evaluates to an empty set have an apply column value of <see langword="null" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-751">Un nuevo DbApplyExpression con los enlaces de entrada y aplicación especificados y un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de OuterApply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-751">An new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of OuterApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-752"><paramref name="input" /> o <paramref name="apply" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-752"><paramref name="input" /> or <paramref name="apply" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Parameter (type As TypeUsage, name As String) As DbParameterReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ Parameter(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Parameter : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbParameterReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbParameterReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9f50f-753">Tipo del parámetro al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-753">The type of the referenced parameter.</span></span></param>
        <param name="name"><span data-ttu-id="9f50f-754">Nombre del parámetro al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-754">The name of the referenced parameter.</span></span></param>
        <summary><span data-ttu-id="9f50f-755">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> que hace referencia a un parámetro con el nombre y tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-755">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that references a parameter with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="9f50f-756">DbParameterReferenceExpression que representa una referencia a un parámetro con el nombre y el tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-756">A DbParameterReferenceExpression that represents a reference to a parameter with the specified name and type.</span></span> <span data-ttu-id="9f50f-757">El tipo de resultado de la expresión será el mismo que para <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-757">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Plus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression Plus(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Plus (left As DbExpression, right As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ Plus(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Plus : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-758">Una expresión que especifica el argumento izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-758">An expression that specifies the left argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-759">Una expresión que especifica el argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-759">An expression that specifies the right argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-760">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que agrega el argumento izquierdo al argumento derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-760">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that adds the left argument to the right argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-761">Nuevo DbArithmeticExpression que representa la operación de suma.</span><span class="sxs-lookup"><span data-stu-id="9f50f-761">A new DbArithmeticExpression representing the addition operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-762"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-762"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-763">No existe ningún tipo de resultado numérico común entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-763">No common numeric result type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Project(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Data.Common.CommandTrees.DbExpression projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Project (input As DbExpressionBinding, projection As DbExpression) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Project(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Data::Common::CommandTrees::DbExpression ^ projection);" />
      <MemberSignature Language="F#" Value="static member Project : System.Data.Common.CommandTrees.DbExpressionBinding * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project (input, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projection" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-764">Un enlace de expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-764">An expression binding that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="9f50f-765">Una expresión que se va a proyectar sobre el conjunto.</span><span class="sxs-lookup"><span data-stu-id="9f50f-765">An expression to project over the set.</span></span></param>
        <summary><span data-ttu-id="9f50f-766">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que proyecta la expresión especificada sobre el conjunto de entrada definido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-766">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that projects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-767">Nuevo DbProjectExpression que representa la operación de proyección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-767">A new DbProjectExpression that represents the projection operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-768"><paramref name="input" /> o <paramref name="projection" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-768"><paramref name="input" /> or <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Property">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-769">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa la recuperación de la propiedad de navegación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-769">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.EdmProperty propertyMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyMetadata As EdmProperty) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::EdmProperty ^ propertyMetadata);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EdmProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="propertyMetadata" Type="System.Data.Metadata.Edm.EdmProperty" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="9f50f-770">Instancia desde la que se va a recuperar la propiedad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-770">The instance from which to retrieve the property.</span></span> <span data-ttu-id="9f50f-771">Puede ser NULL si la propiedad es estática.</span><span class="sxs-lookup"><span data-stu-id="9f50f-771">May be null if the property is static.</span></span></param>
        <param name="propertyMetadata"><span data-ttu-id="9f50f-772">Metadatos de la propiedad que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-772">Metadata for the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="9f50f-773">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa la recuperación de la propiedad de navegación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-773">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified property.</span></span></summary>
        <returns><span data-ttu-id="9f50f-774">Nuevo DbPropertyExpression que representa la recuperación de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-774">A new DbPropertyExpression representing the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-775"><paramref name="propertyMetadata" /> es null o <paramref name="instance" /> es null y la propiedad no es estática.</span><span class="sxs-lookup"><span data-stu-id="9f50f-775"><paramref name="propertyMetadata" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.NavigationProperty navigationProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::NavigationProperty ^ navigationProperty);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.NavigationProperty -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, navigationProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="navigationProperty" Type="System.Data.Metadata.Edm.NavigationProperty" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="9f50f-776">Instancia desde la que se va a recuperar la propiedad de navegación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-776">The instance from which to retrieve the navigation property.</span></span></param>
        <param name="navigationProperty"><span data-ttu-id="9f50f-777">Metadatos de la propiedad de navegación que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-777">Metadata for the navigation property to retrieve.</span></span></param>
        <summary><span data-ttu-id="9f50f-778">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa la recuperación de la propiedad de navegación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-778">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified navigation property.</span></span></summary>
        <returns><span data-ttu-id="9f50f-779">Nuevo DbPropertyExpression que representa la recuperación de la propiedad de navegación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-779">A new DbPropertyExpression representing the navigation property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-780"><paramref name="navigationProperty" /> o <paramref name="instance" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-780"><paramref name="navigationProperty" /> or <paramref name="instance" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, class System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, relationshipEnd As RelationshipEndMember) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::Data::Metadata::Edm::RelationshipEndMember ^ relationshipEnd);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.RelationshipEndMember -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, relationshipEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="relationshipEnd" Type="System.Data.Metadata.Edm.RelationshipEndMember" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="9f50f-781">Instancia de la que se va a recuperar el miembro de fin de relación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-781">The instance from which to retrieve the relationship end member.</span></span></param>
        <param name="relationshipEnd"><span data-ttu-id="9f50f-782">Metadatos del miembro de fin de relación que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-782">Metadata for the relationship end member to retrieve.</span></span></param>
        <summary><span data-ttu-id="9f50f-783">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa la recuperación del miembro de fin de relación especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-783">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the specified relationship end member.</span></span></summary>
        <returns><span data-ttu-id="9f50f-784">Nuevo DbPropertyExpression que representa la recuperación de la relación y del miembro.</span><span class="sxs-lookup"><span data-stu-id="9f50f-784">A new DbPropertyExpression representing the relationship end member retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-785"><paramref name="relationshipEnd" /> es null o <paramref name="instance" /> es null y la propiedad no es estática.</span><span class="sxs-lookup"><span data-stu-id="9f50f-785"><paramref name="relationshipEnd" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbPropertyExpression Property(class System.Data.Common.CommandTrees.DbExpression instance, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Property (instance As DbExpression, propertyName As String) As DbPropertyExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbPropertyExpression ^ Property(System::Data::Common::CommandTrees::DbExpression ^ instance, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="static member Property : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbPropertyExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property (instance, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbPropertyExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="propertyName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="9f50f-786">Instancia desde la que se va a recuperar la propiedad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-786">The instance from which to retrieve the property.</span></span></param>
        <param name="propertyName"><span data-ttu-id="9f50f-787">Nombre de la propiedad que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-787">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="9f50f-788">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> que representa la recuperación de la propiedad de instancia con el nombre especificado de la instancia determinada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-788">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> representing the retrieval of the instance property with the specified name from the given instance.</span></span></summary>
        <returns><span data-ttu-id="9f50f-789">Nuevo DbPropertyExpression que representa la recuperación de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-789">A new DbPropertyExpression that represents the property retrieval.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-790"><paramref name="propertyName" /> es null o <paramref name="instance" /> es null y la propiedad no es estática.</span><span class="sxs-lookup"><span data-stu-id="9f50f-790"><paramref name="propertyName" /> is null or <paramref name="instance" /> is null and the property is not static.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f50f-791">No se declara ninguna propiedad con el nombre especificado por el tipo de <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-791">No property with the specified name is declared by the type of <paramref name="instance" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RefFromKey">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-792">Crea una nueva clase <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica una referencia a una entidad concreta basada en los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-792">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="9f50f-793">Conjunto de entidades en el que reside el elemento al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-793">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="9f50f-794">Expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que construye un registro con columnas que coinciden (en número, tipo y orden) con las propiedades clave del tipo de entidad al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-794">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <summary><span data-ttu-id="9f50f-795">Crea una nueva clase <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica una referencia a una entidad concreta basada en los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-795">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="9f50f-796">Nueva clase DbRefExpression que hace referencia al elemento con los valores de clave especificados en el conjunto de entidades especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-796">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-797">`keyRow` debe ser una expresión que especifica los valores de clave que identifican la entidad que se hace referencia dentro de la entidad especificada establecida.</span><span class="sxs-lookup"><span data-stu-id="9f50f-797">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="9f50f-798">El tipo de resultado de `keyRow` debe contener una columna correspondiente para cada propiedad clave definida por `entitySet's` tipo de entidad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-798">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-799"><paramref name="entitySet" /> o <paramref name="keyRow" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-799"><paramref name="entitySet" /> or <paramref name="keyRow" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-800"><paramref name="keyRow" /> no tiene un tipo de resultado de registro que coincida con las propiedades de clave del tipo de entidad del conjunto de entidades al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-800"><paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RefFromKey">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbRefExpression RefFromKey(class System.Data.Metadata.Edm.EntitySet entitySet, class System.Data.Common.CommandTrees.DbExpression keyRow, class System.Data.Metadata.Edm.EntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbRefExpression ^ RefFromKey(System::Data::Metadata::Edm::EntitySet ^ entitySet, System::Data::Common::CommandTrees::DbExpression ^ keyRow, System::Data::Metadata::Edm::EntityType ^ entityType);" />
      <MemberSignature Language="F#" Value="static member RefFromKey : System.Data.Metadata.Edm.EntitySet * System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.EntityType -&gt; System.Data.Common.CommandTrees.DbRefExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey (entitySet, keyRow, entityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbRefExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySet" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="keyRow" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="entityType" Type="System.Data.Metadata.Edm.EntityType" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="9f50f-801">Conjunto de entidades en el que reside el elemento al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-801">The Entity set in which the referenced element resides.</span></span></param>
        <param name="keyRow"><span data-ttu-id="9f50f-802">Expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que construye un registro con columnas que coinciden (en número, tipo y orden) con las propiedades clave del tipo de entidad al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-802">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that constructs a record with columns that match (in number, type, and order) the Key properties of the referenced Entity type.</span></span></param>
        <param name="entityType"><span data-ttu-id="9f50f-803">Tipo de la entidad a la que se debería referir la referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-803">The type of the Entity that the reference should refer to.</span></span></param>
        <summary><span data-ttu-id="9f50f-804">Crea una nueva clase <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> que codifica una referencia a una entidad concreta basada en los valores de clave.</span><span class="sxs-lookup"><span data-stu-id="9f50f-804">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that encodes a reference to a specific Entity based on key values.</span></span></summary>
        <returns><span data-ttu-id="9f50f-805">Nueva clase DbRefExpression que hace referencia al elemento con los valores de clave especificados en el conjunto de entidades especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-805">A new DbRefExpression that references the element with the specified key values in the given Entity set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-806">`keyRow` debe ser una expresión que especifica los valores de clave que identifican la entidad que se hace referencia dentro de la entidad especificada establecida.</span><span class="sxs-lookup"><span data-stu-id="9f50f-806">`keyRow` should be an expression that specifies the key values that identify the referenced entity within the given entity set.</span></span> <span data-ttu-id="9f50f-807">El tipo de resultado de `keyRow` debe contener una columna correspondiente para cada propiedad clave definida por `entitySet's` tipo de entidad.</span><span class="sxs-lookup"><span data-stu-id="9f50f-807">The result type of `keyRow` should contain a corresponding column for each key property defined by `entitySet's` entity type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-808"><paramref name="entitySet" />, <paramref name="keyRow" /> o <paramref name="entityType" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-808"><paramref name="entitySet" />,  <paramref name="keyRow" /> or <paramref name="entityType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-809"><paramref name="entityType" /> no está en la misma jerarquía de tipos que el tipo de entidad del conjunto de entidades, o <paramref name="keyRow" /> no tiene un tipo de resultado de registro que coincida con las propiedades de clave del tipo de entidad del conjunto de entidades a que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-809"><paramref name="entityType" /> is not in the same type hierarchy as the entity set's entity type, or <paramref name="keyRow" /> does not have a record result type that matches the key properties of the referenced entity set's entity type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Scan">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbScanExpression Scan(class System.Data.Metadata.Edm.EntitySetBase targetSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Scan (targetSet As EntitySetBase) As DbScanExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbScanExpression ^ Scan(System::Data::Metadata::Edm::EntitySetBase ^ targetSet);" />
      <MemberSignature Language="F#" Value="static member Scan : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Common.CommandTrees.DbScanExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan targetSet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbScanExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetSet" Type="System.Data.Metadata.Edm.EntitySetBase" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetSet"><span data-ttu-id="9f50f-810">Metadatos del conjunto de entidades o relaciones al que se va a hacer referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-810">Metadata for the entity or relationship set to reference.</span></span></param>
        <summary><span data-ttu-id="9f50f-811">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> que hace referencia a la entidad o conjunto de relaciones especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-811">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that references the specified entity or relationship set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-812">Nuevo DbScanExpression basado en el conjunto de entidades o relaciones especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-812">A new DbScanExpression based on the specified entity or relationship set.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-813"><paramref name="targetSet" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-813"><paramref name="targetSet" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TProjection&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt; projection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression Select&lt;TProjection&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, !!TProjection&gt; projection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TProjection) (source As DbExpression, projection As Func(Of DbExpression, TProjection)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TProjection&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ Select(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, TProjection&gt; ^ projection);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, 'Projection&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select (source, projection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TProjection" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="projection" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,TProjection&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TProjection"><span data-ttu-id="9f50f-814">Tipo de resultado del método de <paramref name="projection" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-814">The method result type of <paramref name="projection" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="9f50f-815">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-815">An expression that specifies the input set.</span></span></param>
        <param name="projection"><span data-ttu-id="9f50f-816">Método que especifica cómo derivar la expresión proyectada, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-816">A method that specifies how to derive the projected expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-817">Este método debe generar una instancia de un tipo que sea compatible con Select y se pueda resolver en una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-817">This method must produce an instance of a type that is compatible with Select and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="9f50f-818">Los requisitos de compatibilidad de <c>TProjection</c> se describen en la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="9f50f-818">Compatibility requirements for <c>TProjection</c> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="9f50f-819">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que selecciona la expresión especificada sobre el conjunto de entrada definido.</span><span class="sxs-lookup"><span data-stu-id="9f50f-819">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that selects the specified expression over the given input set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-820">Nuevo DbProjectExpression que representa la operación de selección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-820">A new DbProjectExpression that represents the select operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-821">Para que sea compatible con Select, `TProjection` debe derivarse de <xref:System.Data.Common.CommandTrees.DbExpression>, o debe ser un tipo anónimo con propiedades derivadas de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="9f50f-821">To be compatible with Select, `TProjection` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="9f50f-822">Los siguientes son ejemplos de tipos admitidos para `TProjection`:</span><span class="sxs-lookup"><span data-stu-id="9f50f-822">The following are examples of supported types for `TProjection`:</span></span>  
  
```  
source.Select(x => x.Property("Name"))  
```  
  
 <span data-ttu-id="9f50f-823">`TProjection` es <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="9f50f-823">`TProjection` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.Select(x => new { Name = x.Property("Name") })  
```  
  
 <span data-ttu-id="9f50f-824">(`TProjection` es un tipo anónimo con una propiedad derivadas de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="9f50f-824">(`TProjection` is an anonymous type with a DbExpression-derived property).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-825"><paramref name="source" /> o <paramref name="projection" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-825"><paramref name="source" /> or <paramref name="projection" /> is null.</span></span>

<span data-ttu-id="9f50f-826">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-826">-or-</span></span>

<span data-ttu-id="9f50f-827">El resultado de <paramref name="projection" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-827">The result of <paramref name="projection" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany (source As DbExpression, apply As Func(Of DbExpression, DbExpression)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-828">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-828">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="9f50f-829">Método que representa la lógica que se va a evaluar una vez por cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-829">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <summary><span data-ttu-id="9f50f-830">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que evalúa la expresión <paramref name="apply" /> definida una vez por cada elemento de un conjunto de entrada dado y genera una colección de filas con las columnas input y apply correspondientes.</span><span class="sxs-lookup"><span data-stu-id="9f50f-830">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="9f50f-831">No se incluyen las filas para las que <paramref name="apply" /> se evalúa como un conjunto vacío.</span><span class="sxs-lookup"><span data-stu-id="9f50f-831">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="9f50f-832">A continuación, se crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que selecciona la columna <paramref name="apply" /> de cada fila, generando la colección total de resultados <paramref name="apply" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-832">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the <paramref name="apply" /> column from each row, producing the overall collection of <paramref name="apply" /> results.</span></span></summary>
        <returns><span data-ttu-id="9f50f-833">Un nuevo DbProjectExpression que selecciona la columna apply de una nueva DbApplyExpression con los enlaces de entrada y aplicación especificados y un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-833">An new DbProjectExpression that selects the apply column from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-834"><paramref name="source" /> o <paramref name="apply" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-834"><paramref name="source" /> or <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="9f50f-835">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-835">-or-</span></span>

<span data-ttu-id="9f50f-836">La expresión producida por <paramref name="apply" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-836">The expression produced by <paramref name="apply" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-837"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-837"><paramref name="source" />  does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-838">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-838">-or-</span></span>

<span data-ttu-id="9f50f-839">La expresión generada por <paramref name="apply" /> no tiene un tipo colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-839">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSelector&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt; (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; apply, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbProjectExpression SelectMany&lt;TSelector&gt;(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; apply, class System.Func`3&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression, !!TSelector&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSelector) (source As DbExpression, apply As Func(Of DbExpression, DbExpression), selector As Func(Of DbExpression, DbExpression, TSelector)) As DbProjectExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSelector&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbProjectExpression ^ SelectMany(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ apply, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^, TSelector&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member SelectMany : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression, 'Selector&gt; -&gt; System.Data.Common.CommandTrees.DbProjectExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany (source, apply, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbProjectExpression</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSelector" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="apply" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="selector" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector&gt;" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <typeparam name="TSelector"><span data-ttu-id="9f50f-840">Tipo de resultado del método de <paramref name="selector" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-840">The method result type of <paramref name="selector" />.</span></span></typeparam>
        <param name="source"><span data-ttu-id="9f50f-841">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-841">A <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the input set.</span></span></param>
        <param name="apply"><span data-ttu-id="9f50f-842">Método que representa la lógica que se va a evaluar una vez por cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-842">A method that represents the logic to evaluate once for each member of the input set.</span></span></param>
        <param name="selector"><span data-ttu-id="9f50f-843">Un método que especifica cómo se debe derivar un elemento del conjunto de resultados, dado un elemento de los conjuntos input y apply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-843">A method that specifies how an element of the result set should be derived given an element of the input and apply sets.</span></span> <span data-ttu-id="9f50f-844">Este método debe generar una instancia de un tipo que sea compatible con SelectMany y se pueda resolver en una expresión <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-844">This method must produce an instance of a type that is compatible with SelectMany and can be resolved into a <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span></span> <span data-ttu-id="9f50f-845">Los requisitos de compatibilidad de <typeparamref name="TSelector" /> se describen en la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="9f50f-845">Compatibility requirements for <typeparamref name="TSelector" /> are described in remarks.</span></span></param>
        <summary><span data-ttu-id="9f50f-846">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> que evalúa la expresión <paramref name="apply" /> definida una vez por cada elemento de un conjunto de entrada dado y genera una colección de filas con las columnas input y apply correspondientes.</span><span class="sxs-lookup"><span data-stu-id="9f50f-846">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that evaluates the given <paramref name="apply" /> expression once for each element of a given input set, producing a collection of rows with corresponding input and apply columns.</span></span> <span data-ttu-id="9f50f-847">No se incluyen las filas para las que <paramref name="apply" /> se evalúa como un conjunto vacío.</span><span class="sxs-lookup"><span data-stu-id="9f50f-847">Rows for which <paramref name="apply" /> evaluates to an empty set are not included.</span></span> <span data-ttu-id="9f50f-848">A continuación, se crea un objeto <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> que selecciona el <paramref name="selector" /> especificado en cada fila, generando la colección de resultados total.</span><span class="sxs-lookup"><span data-stu-id="9f50f-848">A <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> is then created that selects the specified <paramref name="selector" /> over each row, producing the overall collection of results.</span></span></summary>
        <returns><span data-ttu-id="9f50f-849">Un nuevo DbProjectExpression que selecciona el resultado del selector dado de una nueva DbApplyExpression con los enlaces de entrada y aplicación especificados y un <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> de CrossApply.</span><span class="sxs-lookup"><span data-stu-id="9f50f-849">An new DbProjectExpression that selects the result of the given selector from a new DbApplyExpression with the specified input and apply bindings and an <see cref="T:System.Data.Common.CommandTrees.DbExpressionKind" /> of CrossApply.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-850">Para que sea compatible con SelectMany, `TSelector` debe derivarse de <xref:System.Data.Common.CommandTrees.DbExpression>, o debe ser un tipo anónimo con propiedades derivadas de DbExpression.</span><span class="sxs-lookup"><span data-stu-id="9f50f-850">To be compatible with SelectMany, `TSelector` must be derived from <xref:System.Data.Common.CommandTrees.DbExpression>,     or must be an anonymous type with DbExpression-derived properties.</span></span> <span data-ttu-id="9f50f-851">Los siguientes son ejemplos de tipos admitidos para `TSelector`:</span><span class="sxs-lookup"><span data-stu-id="9f50f-851">The following are examples of supported types for `TSelector`:</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => apply.Property("Name"))  
```  
  
 <span data-ttu-id="9f50f-852">(`TSelector` es <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span><span class="sxs-lookup"><span data-stu-id="9f50f-852">(`TSelector` is <xref:System.Data.Common.CommandTrees.DbPropertyExpression>).</span></span>  
  
```  
source.SelectMany(x => x.Property("RelatedCollection"), (source, apply) => new { SourceName = source.Property("Name"), RelatedName = apply.Property("Name") })  
```  
  
 <span data-ttu-id="9f50f-853">(`TSelector` es un tipo anónimo con propiedades derivadas de DbExpression).</span><span class="sxs-lookup"><span data-stu-id="9f50f-853">(`TSelector` is an anonymous type with DbExpression-derived properties).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-854"><paramref name="source" />, <paramref name="apply" /> o <paramref name="selector" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-854"><paramref name="source" />,  <paramref name="apply" /> or <paramref name="selector" /> is null.</span></span>

<span data-ttu-id="9f50f-855">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-855">-or-</span></span>

<span data-ttu-id="9f50f-856">La expresión producida por <paramref name="apply" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-856">The expression produced by <paramref name="apply" /> is null.</span></span>

<span data-ttu-id="9f50f-857">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-857">-or-</span></span>

<span data-ttu-id="9f50f-858">El resultado de <paramref name="selector" /> es null en la conversión a DbExpression.</span><span class="sxs-lookup"><span data-stu-id="9f50f-858">The result of <paramref name="selector" /> is null on conversion to DbExpression.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-859"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-859"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-860">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-860">-or-</span></span> 
<span data-ttu-id="9f50f-861">La expresión generada por <paramref name="apply" /> no tiene un tipo colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-861">The expression produced by <paramref name="apply" /> does not have a collection type.</span></span> <span data-ttu-id="9f50f-862">no tiene un tipo de colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-862">does not have a collection type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Skip">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-863">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> que ordena el conjunto de entrada dado según las especificaciones de ordenación dadas antes de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-863">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbSortExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (argument As DbSortExpression, count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbSortExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbSortExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-864">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que especifica el conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-864">A <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that specifies the sorted input set.</span></span></param>
        <param name="count"><span data-ttu-id="9f50f-865">Una expresión que especifica cuántos elementos del conjunto ordenado se van a omitir.</span><span class="sxs-lookup"><span data-stu-id="9f50f-865">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="9f50f-866">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> que omite el número especificado de elementos del conjunto de entrada ordenado dado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-866">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that skips the specified number of elements from the given sorted input set.</span></span></summary>
        <returns><span data-ttu-id="9f50f-867">Nuevo DbSkipExpression que representa la operación de salto.</span><span class="sxs-lookup"><span data-stu-id="9f50f-867">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-868"><paramref name="argument" /> o <paramref name="count" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-868"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-869"><paramref name="count" /> no es <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> o <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> o tiene un tipo de resultado que no es igual ni se puede promover a un tipo entero de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="9f50f-869"><paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSkipExpression Skip(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Skip (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause), count As DbExpression) As DbSkipExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSkipExpression ^ Skip(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Skip : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSkipExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip (input, sortOrder, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSkipExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-870">Un enlace de expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-870">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="9f50f-871">Una lista de especificaciones de ordenación que determinan cómo deberían ordenarse los elementos del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-871">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <param name="count"><span data-ttu-id="9f50f-872">Una expresión que especifica cuántos elementos del conjunto ordenado se van a omitir.</span><span class="sxs-lookup"><span data-stu-id="9f50f-872">An expression the specifies how many elements of the ordered set to skip.</span></span></param>
        <summary><span data-ttu-id="9f50f-873">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> que ordena el conjunto de entrada dado según las especificaciones de ordenación dadas antes de omitir el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="9f50f-873">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that sorts the given input set by the given sort specifications before skipping the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="9f50f-874">Nuevo DbSkipExpression que representa la operación de salto.</span><span class="sxs-lookup"><span data-stu-id="9f50f-874">A new DbSkipExpression that represents the skip operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-875"><paramref name="input" />, <paramref name="sortOrder" /> o <paramref name="count" /> es null, o <paramref name="sortOrder" /> contiene null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-875"><paramref name="input" />,  <paramref name="sortOrder" /> or <paramref name="count" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-876"><paramref name="sortOrder" /> está vacío o <paramref name="count" /> no es <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> o <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> o tiene un tipo de resultado que no es igual ni se puede promover a un tipo entero de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="9f50f-876"><paramref name="sortOrder" /> is empty, or <paramref name="count" /> is not <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> or <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> or has a result type that is not equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression Sort(class System.Data.Common.CommandTrees.DbExpressionBinding input, class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Sort (input As DbExpressionBinding, sortOrder As IEnumerable(Of DbSortClause)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ Sort(System::Data::Common::CommandTrees::DbExpressionBinding ^ input, System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberSignature Language="F#" Value="static member Sort : System.Data.Common.CommandTrees.DbExpressionBinding * seq&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort (input, sortOrder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.Data.Common.CommandTrees.DbExpressionBinding" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input"><span data-ttu-id="9f50f-877">Un enlace de expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-877">An expression binding that specifies the input set.</span></span></param>
        <param name="sortOrder"><span data-ttu-id="9f50f-878">Una lista de especificaciones de ordenación que determinan cómo deberían ordenarse los elementos del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-878">A list of sort specifications that determine how the elements of the input set should be sorted.</span></span></param>
        <summary><span data-ttu-id="9f50f-879">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> que ordena el conjunto de entrada definido según las especificaciones de ordenación determinadas.</span><span class="sxs-lookup"><span data-stu-id="9f50f-879">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that sorts the given input set by the specified sort specifications.</span></span></summary>
        <returns><span data-ttu-id="9f50f-880">Nueva clase DbSortExpression que representa la operación de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-880">A new DbSortExpression that represents the sort operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-881"><paramref name="input" /> o <paramref name="sortOrder" /> es null, <paramref name="sortOrder" /> o contiene null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-881"><paramref name="input" /> or <paramref name="sortOrder" /> is null, or <paramref name="sortOrder" /> contains null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-882"><paramref name="sortOrder" /> está vacía.</span><span class="sxs-lookup"><span data-stu-id="9f50f-882"><paramref name="sortOrder" /> is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Take">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbLimitExpression Take(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Common.CommandTrees.DbExpression count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Take (argument As DbExpression, count As DbExpression) As DbLimitExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbLimitExpression ^ Take(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Common::CommandTrees::DbExpression ^ count);" />
      <MemberSignature Language="F#" Value="static member Take : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbLimitExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take (argument, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLimitExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="count" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-883">Expresión que especifica la colección de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-883">An expression that specifies the input collection.</span></span></param>
        <param name="count"><span data-ttu-id="9f50f-884">Una expresión que especifica el valor de límite.</span><span class="sxs-lookup"><span data-stu-id="9f50f-884">An expression that specifies the limit value.</span></span></param>
        <summary><span data-ttu-id="9f50f-885">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> que restringe el número de elementos en la colección Argument al valor de Limit especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-885">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that restricts the number of elements in the Argument collection to the specified count Limit value.</span></span> <span data-ttu-id="9f50f-886">Los resultados enlazados no se incluyen en el resultado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-886">Tied results are not included in the output.</span></span></summary>
        <returns><span data-ttu-id="9f50f-887">Nuevo DbLimitExpression con valores de límite de argumento y recuento especificados que no incluye resultados iguales.</span><span class="sxs-lookup"><span data-stu-id="9f50f-887">A new DbLimitExpression with the specified argument and count limit values that does not include tied results.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-888"><paramref name="argument" /> o <paramref name="count" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-888"><paramref name="argument" /> or <paramref name="count" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-889"><paramref name="argument" /> no tiene un tipo de resultado de la colección, <paramref name="count" /> no tiene ningún tipo de resultado que sea igual o se pueda promover a un tipo entero de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="9f50f-889"><paramref name="argument" /> does not have a collection result type,  <paramref name="count" /> does not have a result type that is equal or promotable to a 64-bit integer type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-890">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un criterio de ordenación que incluye el criterio de ordenación del conjunto de entrada de orden especificado, así como la clave de ordenación especificada en orden ascendente y con la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-890">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-891">DbSortExpression que especifica el conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-891">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="9f50f-892">Un método que especifica cómo derivar la expresión de clave de ordenación adicional, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-892">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-893">Este método debe generar una expresión con un tipo de resultado con comparación de orden que proporcione la definición de la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-893">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="9f50f-894">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un criterio de ordenación que incluye el criterio de ordenación del conjunto de entrada de orden especificado, así como la clave de ordenación especificada en orden ascendente y con la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-894">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-895">Nueva clase DbSortExpression que representa la nueva operación global order by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-895">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-896"><paramref name="source" /> o <paramref name="sortKey" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-896"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="9f50f-897">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-897">-or-</span></span>

<span data-ttu-id="9f50f-898">La expresión producida por <paramref name="sortKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-898">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-899"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-899"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-900">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-900">-or-</span></span>

<span data-ttu-id="9f50f-901"><paramref name="sortKey" /> no tiene un tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-901"><paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenBy">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenBy(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenBy(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-902">DbSortExpression que especifica el conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-902">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="9f50f-903">Un método que especifica cómo derivar la expresión de clave de ordenación adicional, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-903">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-904">Este método debe generar una expresión con un tipo de resultado con comparación de orden que proporcione la definición de la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-904">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="9f50f-905">Intercalación por la que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-905">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="9f50f-906">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un criterio de ordenación que incluye el criterio de ordenación del conjunto de entrada de orden especificado, junto con la clave de ordenación especificada en orden ascendente y con la intercalación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-906">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in ascending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-907">Nueva clase DbSortExpression que representa la nueva operación global order by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-907">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-908"><paramref name="source" />, <paramref name="sortKey" /> o <paramref name="collation" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-908"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="9f50f-909">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-909">-or-</span></span> 
<span data-ttu-id="9f50f-910">La expresión producida por <paramref name="sortKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-910">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-911"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-911"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-912">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-912">-or-</span></span>

<span data-ttu-id="9f50f-913">La expresión generada por <paramref name="sortKey" /> no tiene ningún tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-913">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f50f-914"><paramref name="collation" /> está vacío o solo contiene caracteres de espacios en blanco.</span><span class="sxs-lookup"><span data-stu-id="9f50f-914"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-915">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un criterio de ordenación que incluye el criterio de ordenación del conjunto de entrada de orden especificado, así como la clave de ordenación especificada en orden descendente y con la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-915">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression)) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-916">DbSortExpression que especifica el conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-916">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="9f50f-917">Un método que especifica cómo derivar la expresión de clave de ordenación adicional, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-917">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-918">Este método debe generar una expresión con un tipo de resultado con comparación de orden que proporcione la definición de la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-918">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <summary><span data-ttu-id="9f50f-919">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un criterio de ordenación que incluye el criterio de ordenación del conjunto de entrada de orden especificado, así como la clave de ordenación especificada en orden descendente y con la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-919">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with default collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-920">Nueva clase DbSortExpression que representa la nueva operación global order by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-920">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-921"><paramref name="source" /> o <paramref name="sortKey" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-921"><paramref name="source" /> or <paramref name="sortKey" /> is null.</span></span>

<span data-ttu-id="9f50f-922">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-922">-or-</span></span>

<span data-ttu-id="9f50f-923">La expresión producida por <paramref name="sortKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-923">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-924"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-924"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-925">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-925">-or-</span></span> 
<span data-ttu-id="9f50f-926">La expresión generada por <paramref name="sortKey" /> no tiene un tipo de resultado con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-926">The expression produced by <paramref name="sortKey" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortExpression ThenByDescending(class System.Data.Common.CommandTrees.DbSortExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; sortKey, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending (source As DbSortExpression, sortKey As Func(Of DbExpression, DbExpression), collation As String) As DbSortExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortExpression ^ ThenByDescending(System::Data::Common::CommandTrees::DbSortExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ sortKey, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.Common.CommandTrees.DbSortExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; * string -&gt; System.Data.Common.CommandTrees.DbSortExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending (source, sortKey, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbSortExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="sortKey" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="2" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-927">DbSortExpression que especifica el conjunto de entrada ordenado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-927">A DbSortExpression that specifies the ordered input set.</span></span></param>
        <param name="sortKey"><span data-ttu-id="9f50f-928">Un método que especifica cómo derivar la expresión de clave de ordenación adicional, dado un miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-928">A method that specifies how to derive the additional sort key expression given a member of the input set.</span></span> <span data-ttu-id="9f50f-929">Este método debe generar una expresión con un tipo de resultado con comparación de orden que proporcione la definición de la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-929">This method must produce an expression with an order-comparable result type that provides the sort key definition.</span></span></param>
        <param name="collation"><span data-ttu-id="9f50f-930">Intercalación por la que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-930">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="9f50f-931">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> con un criterio de ordenación que incluye el criterio de ordenación del conjunto de entrada de orden especificado, junto con la clave de ordenación especificada en orden descendente y con la intercalación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-931">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that with a sort order that includes the sort order of the given order input set together with the specified sort key in descending sort order and  with the specified collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-932">Nueva clase DbSortExpression que representa la nueva operación global order by.</span><span class="sxs-lookup"><span data-stu-id="9f50f-932">A new DbSortExpression that represents the new overall order-by operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-933"><paramref name="source" />, <paramref name="sortKey" /> o <paramref name="collation" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-933"><paramref name="source" />,  <paramref name="sortKey" /> or <paramref name="collation" /> is null.</span></span>

<span data-ttu-id="9f50f-934">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-934">-or-</span></span>

<span data-ttu-id="9f50f-935">La expresión producida por <paramref name="sortKey" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-935">The expression produced by <paramref name="sortKey" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-936"><paramref name="source" /> no tiene un tipo de resultado de la colección.</span><span class="sxs-lookup"><span data-stu-id="9f50f-936"><paramref name="source" /> does not have a collection result type.</span></span>

<span data-ttu-id="9f50f-937">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-937">-or-</span></span> 
<span data-ttu-id="9f50f-938">La expresión generada por <paramref name="sortKey" /> no tiene ningún tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-938">The expression produced by <paramref name="sortKey" /> does not have an order-comparable string result type.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f50f-939"><paramref name="collation" /> está vacío o solo contiene caracteres de espacios en blanco.</span><span class="sxs-lookup"><span data-stu-id="9f50f-939"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClause">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-940">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un criterio de ordenación ascendente y la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-940">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9f50f-941">Expresión que define la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-941">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="9f50f-942">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un criterio de ordenación ascendente y la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-942">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-943">Nueva cláusula de ordenación con la clave de orden y orden de clasificación ascendente especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-943">A new sort clause with the given sort key and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-944"><paramref name="key" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-944"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-945"><paramref name="key" /> no tiene un tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-945"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClause">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClause(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClause (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClause(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClause : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9f50f-946">Expresión que define la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-946">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="9f50f-947">Intercalación por la que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-947">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="9f50f-948">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un criterio de ordenación ascendente y la intercalación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-948">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with an ascending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-949">Nueva cláusula de ordenación con la clave de ordenación y colación y orden de clasificación ascendente especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-949">A new sort clause with the given sort key and collation, and ascending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-950"><paramref name="key" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-950"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f50f-951"><paramref name="collation" /> está vacío o solo contiene caracteres de espacios en blanco.</span><span class="sxs-lookup"><span data-stu-id="9f50f-951"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-952"><paramref name="key" /> no tiene un tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-952"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToSortClauseDescending">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9f50f-953">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un criterio de ordenación descendente y la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-953">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9f50f-954">Expresión que define la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-954">The expression that defines the sort key.</span></span></param>
        <summary><span data-ttu-id="9f50f-955">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un criterio de ordenación descendente y la intercalación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-955">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and default collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-956">Nueva cláusula de ordenación con la clave de orden y orden de clasificación descendente especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-956">A new sort clause with the given sort key and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-957"><paramref name="key" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-957"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-958"><paramref name="key" /> no tiene un tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-958"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToSortClauseDescending">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending(class System.Data.Common.CommandTrees.DbExpression key, string collation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToSortClauseDescending (key As DbExpression, collation As String) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbSortClause ^ ToSortClauseDescending(System::Data::Common::CommandTrees::DbExpression ^ key, System::String ^ collation);" />
      <MemberSignature Language="F#" Value="static member ToSortClauseDescending : System.Data.Common.CommandTrees.DbExpression * string -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending (key, collation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="collation" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="9f50f-959">Expresión que define la clave de ordenación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-959">The expression that defines the sort key.</span></span></param>
        <param name="collation"><span data-ttu-id="9f50f-960">Intercalación por la que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-960">The collation to sort under.</span></span></param>
        <summary><span data-ttu-id="9f50f-961">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> con un criterio de ordenación descendente y la intercalación especificada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-961">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbSortClause" /> with a descending sort order and the specified collation.</span></span></summary>
        <returns><span data-ttu-id="9f50f-962">Nueva cláusula de ordenación con la clave de ordenación y colación y orden de clasificación descendente especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-962">A new sort clause with the given sort key and collation, and descending sort order.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-963"><paramref name="key" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-963"><paramref name="key" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9f50f-964"><paramref name="collation" /> está vacío o solo contiene caracteres de espacios en blanco.</span><span class="sxs-lookup"><span data-stu-id="9f50f-964"><paramref name="collation" /> is empty or contains only space characters.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-965"><paramref name="key" /> no tiene un tipo de resultado de cadena con comparación de orden.</span><span class="sxs-lookup"><span data-stu-id="9f50f-965"><paramref name="key" /> does not have an order-comparable result type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TreatAs">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbTreatExpression TreatAs(class System.Data.Common.CommandTrees.DbExpression argument, class System.Data.Metadata.Edm.TypeUsage treatType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TreatAs (argument As DbExpression, treatType As TypeUsage) As DbTreatExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbTreatExpression ^ TreatAs(System::Data::Common::CommandTrees::DbExpression ^ argument, System::Data::Metadata::Edm::TypeUsage ^ treatType);" />
      <MemberSignature Language="F#" Value="static member TreatAs : System.Data.Common.CommandTrees.DbExpression * System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Common.CommandTrees.DbTreatExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs (argument, treatType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbTreatExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="treatType" Type="System.Data.Metadata.Edm.TypeUsage" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-966">Una expresión que especifica la instancia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-966">An expression that specifies the instance.</span></span></param>
        <param name="treatType"><span data-ttu-id="9f50f-967">Metadatos del tipo como se debe tratar.</span><span class="sxs-lookup"><span data-stu-id="9f50f-967">Type metadata for the treat-as type.</span></span></param>
        <summary><span data-ttu-id="9f50f-968">Crea un nuevo <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-968">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span></span></summary>
        <returns><span data-ttu-id="9f50f-969">Nuevo DbTreatExpression con el argumento y el tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-969">A new DbTreatExpression with the specified argument and type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9f50f-970">DbTreatExpression requiere que `argument` tiene un tipo de resultado polimórfico y que `treatType` es un tipo de la misma jerarquía de tipos que ese tipo de resultado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-970">DbTreatExpression requires that `argument` has a polymorphic result type, and that `treatType` is a type from the same type hierarchy as that result type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-971"><paramref name="argument" /> o <paramref name="treatType" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-971"><paramref name="argument" /> or <paramref name="treatType" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-972"><paramref name="treatType" /> no está en la misma jerarquía de tipos que el tipo de resultado de <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-972"><paramref name="treatType" /> is not in the same type hierarchy as the result type of <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="True">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Data.Common.CommandTrees.DbConstantExpression True" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property True As DbConstantExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Data::Common::CommandTrees::DbConstantExpression ^ True { System::Data::Common::CommandTrees::DbConstantExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.True : System.Data.Common.CommandTrees.DbConstantExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbConstantExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9f50f-973">Obtiene una expresión <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con el valor booleano <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-973">Gets a <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="9f50f-974">Una expresión <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> con el valor booleano <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-974">A <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> with the Boolean value <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnaryMinus">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus(class System.Data.Common.CommandTrees.DbExpression argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnaryMinus (argument As DbExpression) As DbArithmeticExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbArithmeticExpression ^ UnaryMinus(System::Data::Common::CommandTrees::DbExpression ^ argument);" />
      <MemberSignature Language="F#" Value="static member UnaryMinus : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbArithmeticExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus argument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbArithmeticExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="9f50f-975">Una expresión que especifica el argumento.</span><span class="sxs-lookup"><span data-stu-id="9f50f-975">An expression that specifies the argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-976">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> que niega el valor del argumento.</span><span class="sxs-lookup"><span data-stu-id="9f50f-976">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that negates the value of the argument.</span></span></summary>
        <returns><span data-ttu-id="9f50f-977">Nuevo DbArithmeticExpression que representa la operación de negación.</span><span class="sxs-lookup"><span data-stu-id="9f50f-977">A new DbArithmeticExpression representing the negation operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-978"><paramref name="argument" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-978"><paramref name="argument" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-979">No existe ningún tipo de resultado numérico para <paramref name="argument" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-979">No numeric result type exists for <paramref name="argument" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbExpression Union(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Union (left As DbExpression, right As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbExpression ^ Union(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member Union : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-980">Una expresión que define el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-980">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-981">Una expresión que define el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-981">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-982">Crea un nuevo objeto <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> que calcula la unión de los argumentos del conjunto izquierdo y derecho con los duplicados quitados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-982">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that computes the union of the left and right set arguments with duplicates removed.</span></span></summary>
        <returns><span data-ttu-id="9f50f-983">Nuevo elemento DbExpression que calcula la unión, sin duplicados, de los argumentos izquierdo y derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-983">A new DbExpression that computes the union, without duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-984"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-984"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-985">No existe ningún tipo de resultado de colección común con un tipo de elemento cuya igualdad se pueda comparar entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-985">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll(class System.Data.Common.CommandTrees.DbExpression left, class System.Data.Common.CommandTrees.DbExpression right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UnionAll (left As DbExpression, right As DbExpression) As DbUnionAllExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbUnionAllExpression ^ UnionAll(System::Data::Common::CommandTrees::DbExpression ^ left, System::Data::Common::CommandTrees::DbExpression ^ right);" />
      <MemberSignature Language="F#" Value="static member UnionAll : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbUnionAllExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbUnionAllExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="right" Type="System.Data.Common.CommandTrees.DbExpression" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9f50f-986">Una expresión que define el argumento del conjunto izquierdo.</span><span class="sxs-lookup"><span data-stu-id="9f50f-986">An expression that defines the left set argument.</span></span></param>
        <param name="right"><span data-ttu-id="9f50f-987">Una expresión que define el argumento del conjunto derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-987">An expression that defines the right set argument.</span></span></param>
        <summary><span data-ttu-id="9f50f-988">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> que calcula la unión de los argumentos del conjunto izquierdo y derecho, y no quita los duplicados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-988">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that computes the union of the left and right set arguments and does not remove duplicates.</span></span></summary>
        <returns><span data-ttu-id="9f50f-989">Nuevo elemento DbUnionAllExpression que realiza la unión, incluidos los duplicados, de los argumentos izquierdo y derecho.</span><span class="sxs-lookup"><span data-stu-id="9f50f-989">A new DbUnionAllExpression that union, including duplicates, of the left and right arguments.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-990"><paramref name="left" /> o <paramref name="right" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-990"><paramref name="left" /> or <paramref name="right" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-991">No existe ningún tipo de resultado de colección común con un tipo de elemento cuya igualdad se pueda comparar entre <paramref name="left" /> y <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-991">No common collection result type with an equality-comparable element type exists between <paramref name="left" /> and <paramref name="right" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Variable">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable(class System.Data.Metadata.Edm.TypeUsage type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Variable (type As TypeUsage, name As String) As DbVariableReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ Variable(System::Data::Metadata::Edm::TypeUsage ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member Variable : System.Data.Metadata.Edm.TypeUsage * string -&gt; System.Data.Common.CommandTrees.DbVariableReferenceExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbVariableReferenceExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9f50f-992">Tipo de la variable a la que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-992">The type of the referenced variable.</span></span></param>
        <param name="name"><span data-ttu-id="9f50f-993">Nombre de la variable a la que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="9f50f-993">The name of the referenced variable.</span></span></param>
        <summary><span data-ttu-id="9f50f-994">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> que hace referencia a una variable con el nombre y tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-994">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that references a variable with the specified name and type.</span></span></summary>
        <returns><span data-ttu-id="9f50f-995">DbVariableReferenceExpression que representa una referencia a una variable con el nombre y el tipo especificados.</span><span class="sxs-lookup"><span data-stu-id="9f50f-995">A DbVariableReferenceExpression that represents a reference to a variable with the specified name and type.</span></span> <span data-ttu-id="9f50f-996">El tipo de resultado de la expresión será el mismo que para <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="9f50f-996">The result type of the expression will be the same as <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.CommandTrees.DbFilterExpression Where(class System.Data.Common.CommandTrees.DbExpression source, class System.Func`2&lt;class System.Data.Common.CommandTrees.DbExpression, class System.Data.Common.CommandTrees.DbExpression&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where (source As DbExpression, predicate As Func(Of DbExpression, DbExpression)) As DbFilterExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::CommandTrees::DbFilterExpression ^ Where(System::Data::Common::CommandTrees::DbExpression ^ source, Func&lt;System::Data::Common::CommandTrees::DbExpression ^, System::Data::Common::CommandTrees::DbExpression ^&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.Common.CommandTrees.DbExpression * Func&lt;System.Data.Common.CommandTrees.DbExpression, System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Data.Common.CommandTrees.DbFilterExpression" Usage="System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFilterExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.Common.CommandTrees.DbExpression" RefType="this" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="predicate" Type="System.Func&lt;System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression&gt;" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="9f50f-997">Una expresión que especifica el conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-997">An expression that specifies the input set.</span></span></param>
        <param name="predicate"><span data-ttu-id="9f50f-998">Método que representa el predicado que se va a evaluar para cada miembro del conjunto de entrada.</span><span class="sxs-lookup"><span data-stu-id="9f50f-998">A method representing the predicate to evaluate for each member of the input set.</span></span>    <span data-ttu-id="9f50f-999">Este método debe generar una expresión con un tipo de resultado booleano que proporcione la lógica del predicado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-999">This method must produce an expression with a Boolean result type that provides the predicate logic.</span></span></param>
        <summary><span data-ttu-id="9f50f-1000">Crea una nueva expresión <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> que filtra los elementos del conjunto de entrada definido utilizando el predicado especificado.</span><span class="sxs-lookup"><span data-stu-id="9f50f-1000">Creates a new <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that filters the elements in the given input set using the specified predicate.</span></span></summary>
        <returns><span data-ttu-id="9f50f-1001">Nuevo DbQuantifierExpression que representa la operación Any.</span><span class="sxs-lookup"><span data-stu-id="9f50f-1001">A new DbQuantifierExpression that represents the Any operation.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9f50f-1002"><paramref name="source" /> o <paramref name="predicate" /> es null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-1002"><paramref name="source" /> or <paramref name="predicate" /> is null.</span></span>

<span data-ttu-id="9f50f-1003">O bien</span><span class="sxs-lookup"><span data-stu-id="9f50f-1003">-or-</span></span> 
<span data-ttu-id="9f50f-1004">La expresión producida por <paramref name="predicate" /> es un valor null.</span><span class="sxs-lookup"><span data-stu-id="9f50f-1004">The expression produced by <paramref name="predicate" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9f50f-1005">La expresión producida por <paramref name="predicate" /> no tiene un tipo de resultado Booleano.</span><span class="sxs-lookup"><span data-stu-id="9f50f-1005">The expression produced by <paramref name="predicate" /> does not have a Boolean result type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
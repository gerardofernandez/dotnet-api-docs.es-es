<Type Name="MetaTable" FullName="System.Web.DynamicData.MetaTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c9a8c544aac5080acbd7b6e66f3890f0b9fcbc25" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57959786" /></Metadata><TypeSignature Language="C#" Value="public class MetaTable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaTable extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaTable" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaTable" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaTable" />
  <TypeSignature Language="F#" Value="type MetaTable = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9beb7-101">Representa los metadatos que describen una tabla para su uso en páginas de datos dinámicos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-101">Represents the metadata that describes a table for use by Dynamic Data pages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9beb7-102">El ejemplo siguiente es parte del archivo de código subyacente para la plantilla de página Insert.aspx.</span><span class="sxs-lookup"><span data-stu-id="9beb7-102">The following example is part of the code-behind file for the Insert.aspx page template.</span></span> <span data-ttu-id="9beb7-103">El <xref:System.Web.DynamicData.MetaTable> instancia se inicializa en el `Page_Load` método.</span><span class="sxs-lookup"><span data-stu-id="9beb7-103">The <xref:System.Web.DynamicData.MetaTable> instance is initialized in the `Page_Load` method.</span></span> <span data-ttu-id="9beb7-104">El título de la página se establece en la tabla `DisplayName` propiedad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-104">The title for the page is set to the table `DisplayName` property.</span></span>  
  
```csharp  
public partial class Insert : System.Web.UI.Page {  
    protected MetaTable table;     
  
    protected void Page_Load(object sender, EventArgs e) {  
        table = DetailsDataSource.GetTable();  
        Title = table.DisplayName;  
    }  
}  
```  
  
```vb  
Partial Class Insert  
    Inherits System.Web.UI.Page  
  
    Protected table As MetaTable      
  
    Protected Sub Page_Load(ByVal sender As Object, _  
            ByVal e As EventArgs)  
        table = DetailsDataSource.GetTable  
        Title = table.DisplayName  
    End Sub  
End Class  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaTable (System.Web.DynamicData.MetaModel metaModel, System.Web.DynamicData.ModelProviders.TableProvider tableProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaModel metaModel, class System.Web.DynamicData.ModelProviders.TableProvider tableProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.#ctor(System.Web.DynamicData.MetaModel,System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaTable(System::Web::DynamicData::MetaModel ^ metaModel, System::Web::DynamicData::ModelProviders::TableProvider ^ tableProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaTable : System.Web.DynamicData.MetaModel * System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="new System.Web.DynamicData.MetaTable (metaModel, tableProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metaModel" Type="System.Web.DynamicData.MetaModel" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="tableProvider" Type="System.Web.DynamicData.ModelProviders.TableProvider" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="metaModel"><span data-ttu-id="9beb7-105">Metamodelo de la entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-105">The entity meta model.</span></span></param>
        <param name="tableProvider"><span data-ttu-id="9beb7-106">Proveedor de modelos de entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-106">The entity model provider.</span></span></param>
        <summary><span data-ttu-id="9beb7-107">Inicializa una nueva instancia de la clase <see cref="T:System.Web.DynamicData.MetaTable" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-107">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaTable" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-108">El `tableProvider` parámetro se usa para inicializar el <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-108">The `tableProvider` parameter is used to initialize the <xref:System.Web.DynamicData.MetaTable.DataContextPropertyName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Web.DynamicData.MetaTable.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-109">Obtiene los atributos asociados a la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-109">Gets the attributes that are associated with the table.</span></span></summary>
        <value><span data-ttu-id="9beb7-110">Colección que contiene los atributos de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-110">A collection that contains the attributes of the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberSignature Language="F#" Value="abstract member BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection" Usage="metaTable.BuildAttributeCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9beb7-111">Crea la colección de atributos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-111">Creates the attribute collection.</span></span></summary>
        <returns><span data-ttu-id="9beb7-112">Colección de atributos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-112">The attribute collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDelete(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanDelete(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanDelete (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanDelete(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanDelete : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanDelete : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanDelete principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanDelete(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="9beb7-113">Contexto de seguridad del usuario.</span><span class="sxs-lookup"><span data-stu-id="9beb7-113">The user's security context.</span></span></param>
        <summary><span data-ttu-id="9beb7-114">Obtiene un valor que indica si el usuario especificado puede realizar operaciones de eliminación.</span><span class="sxs-lookup"><span data-stu-id="9beb7-114">Gets a value that indicates whether the specified user is allowed to perform delete operations.</span></span></summary>
        <returns><span data-ttu-id="9beb7-115">Es <see langword="true" /> si el usuario puede realizar operaciones de eliminación; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-115"><see langword="true" /> if the user is allowed to perform delete operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-116">Un objeto principal representa el contexto de seguridad del usuario se ejecuta el código, incluida la identidad del usuario y los roles a los que pertenecen.</span><span class="sxs-lookup"><span data-stu-id="9beb7-116">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsert(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanInsert(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsert (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsert(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanInsert : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanInsert : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanInsert principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanInsert(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="9beb7-117">Contexto de seguridad del usuario.</span><span class="sxs-lookup"><span data-stu-id="9beb7-117">The user's security context.</span></span></param>
        <summary><span data-ttu-id="9beb7-118">Obtiene un valor que indica si el usuario especificado puede realizar operaciones de inserción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-118">Gets a value that indicates whether the specified user is allowed to perform insert operations.</span></span></summary>
        <returns><span data-ttu-id="9beb7-119">Es <see langword="true" /> si el usuario puede realizar operaciones de inserción; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-119"><see langword="true" /> if the user is allowed to perform insert operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-120">Un objeto principal representa el contexto de seguridad del usuario se ejecuta el código, incluida la identidad del usuario y los roles a los que pertenecen.</span><span class="sxs-lookup"><span data-stu-id="9beb7-120">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public virtual bool CanRead (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRead(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanRead(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRead (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRead(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanRead : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanRead : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanRead principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanRead(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="9beb7-121">Contexto de seguridad del usuario.</span><span class="sxs-lookup"><span data-stu-id="9beb7-121">The user's security context.</span></span></param>
        <summary><span data-ttu-id="9beb7-122">Obtiene un valor que indica si el usuario especificado puede realizar operaciones de lectura.</span><span class="sxs-lookup"><span data-stu-id="9beb7-122">Gets a value that indicates whether the specified user is allowed to perform read operations.</span></span></summary>
        <returns><span data-ttu-id="9beb7-123">Es <see langword="true" /> si el usuario puede realizar operaciones de lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-123"><see langword="true" /> if the user is allowed to perform read operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-124">Un objeto principal representa el contexto de seguridad del usuario se ejecuta el código, incluida la identidad del usuario y los roles a los que pertenecen.</span><span class="sxs-lookup"><span data-stu-id="9beb7-124">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate (System.Security.Principal.IPrincipal principal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUpdate(class System.Security.Principal.IPrincipal principal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CanUpdate(System.Security.Principal.IPrincipal)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUpdate (principal As IPrincipal) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUpdate(System::Security::Principal::IPrincipal ^ principal);" />
      <MemberSignature Language="F#" Value="abstract member CanUpdate : System.Security.Principal.IPrincipal -&gt; bool&#xA;override this.CanUpdate : System.Security.Principal.IPrincipal -&gt; bool" Usage="metaTable.CanUpdate principal" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CanUpdate(System.Security.Principal.IPrincipal)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="principal"><span data-ttu-id="9beb7-125">Contexto de seguridad del usuario.</span><span class="sxs-lookup"><span data-stu-id="9beb7-125">The user's security context.</span></span></param>
        <summary><span data-ttu-id="9beb7-126">Obtiene un valor que indica si el usuario especificado puede realizar operaciones de actualización.</span><span class="sxs-lookup"><span data-stu-id="9beb7-126">Gets a value that indicates whether the specified user is allowed to perform update operations.</span></span></summary>
        <returns><span data-ttu-id="9beb7-127">Es <see langword="true" /> si el usuario puede realizar operaciones de actualización; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-127"><see langword="true" /> if the user is allowed to perform update operations; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-128">Un objeto principal representa el contexto de seguridad del usuario se ejecuta el código, incluida la identidad del usuario y los roles a los que pertenecen.</span><span class="sxs-lookup"><span data-stu-id="9beb7-128">A principal object represents the security context of the user on whose behalf the code is running, including that user's identity and any roles to which they belong.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; Columns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ Columns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Columns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="System.Web.DynamicData.MetaTable.Columns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-129">Obtiene la colección de columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-129">Gets the column collection for the table.</span></span></summary>
        <value><span data-ttu-id="9beb7-130">Colección que contiene las columnas de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-130">A collection that contains the columns for the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9beb7-131">En el ejemplo siguiente se muestra cómo usar la propiedad <xref:System.Web.DynamicData.MetaTable.Columns%2A>.</span><span class="sxs-lookup"><span data-stu-id="9beb7-131">The following example shows how to use the <xref:System.Web.DynamicData.MetaTable.Columns%2A> property.</span></span> <span data-ttu-id="9beb7-132">En el ejemplo, las plantillas de página dinámico de datos se han copiado en la carpeta \DynamicData\CustomPages\ProductDescriptions para ofrecer una visualización personalizada de la tabla ProductDescription de la base de datos AdventureWorksLT.</span><span class="sxs-lookup"><span data-stu-id="9beb7-132">In the example, the Dynamic Data page templates have been copied to the \DynamicData\CustomPages\ProductDescriptions folder to provide a custom display for the ProductDescription table of the AdventureWorksLT database.</span></span> <span data-ttu-id="9beb7-133">El marcado del archivo Insert.aspx se cambia para agregar un `OnDataBound` controlador de eventos denominado `DetailsView1_DataBound`.</span><span class="sxs-lookup"><span data-stu-id="9beb7-133">The markup of the Insert.aspx file is changed to add an `OnDataBound` event handler named `DetailsView1_DataBound`.</span></span> <span data-ttu-id="9beb7-134">En el controlador de eventos, el <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> método se utiliza para buscar en la tabla de metadatos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-134">In the event handler, the <xref:System.Web.DynamicData.DynamicDataExtensions.FindMetaTable%2A> method is used to find the meta table.</span></span> <span data-ttu-id="9beb7-135">El <xref:System.Web.DynamicData.MetaTable.Columns%2A> propiedad se utiliza para mostrar el número de columnas en la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-135">The <xref:System.Web.DynamicData.MetaTable.Columns%2A> property is used to display the number of columns in the table.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.DynamicDataExtensions#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx.cs#1)]  
[!code-aspx-csharp[System.Web.DynamicData.DynamicDataExtensions#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.DynamicDataExtensions/cs/Insert.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildrenColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaChildrenColumn CreateChildrenColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateChildrenColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaChildrenColumn ^ CreateChildrenColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateChildrenColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn&#xA;override this.CreateChildrenColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaChildrenColumn" Usage="metaTable.CreateChildrenColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaChildrenColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="9beb7-136">Proveedor de columnas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-136">The column provider.</span></span></param>
        <summary><span data-ttu-id="9beb7-137">Crea un nuevo objeto <see cref="T:System.Web.DynamicData.MetaChildrenColumn" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-137">Creates a new <see cref="T:System.Web.DynamicData.MetaChildrenColumn" /> object.</span></span></summary>
        <returns><span data-ttu-id="9beb7-138">Nuevo objeto secundario de metacolumna.</span><span class="sxs-lookup"><span data-stu-id="9beb7-138">The new child metacolumn object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-139">Este método se puede invalidar para crear un tipo derivado.</span><span class="sxs-lookup"><span data-stu-id="9beb7-139">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaColumn CreateColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaColumn CreateColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaColumn ^ CreateColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn&#xA;override this.CreateColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn" Usage="metaTable.CreateColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="9beb7-140">Proveedor de columnas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-140">The column provider.</span></span></param>
        <summary><span data-ttu-id="9beb7-141">Crea un objeto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-141">Creates a <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <returns><span data-ttu-id="9beb7-142">Nuevo objeto de metacolumna.</span><span class="sxs-lookup"><span data-stu-id="9beb7-142">The new metacolumn object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-143">Este método se puede invalidar para crear un tipo derivado.</span><span class="sxs-lookup"><span data-stu-id="9beb7-143">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContext">
      <MemberSignature Language="C#" Value="public virtual object CreateContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateContext () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateContext();" />
      <MemberSignature Language="F#" Value="abstract member CreateContext : unit -&gt; obj&#xA;override this.CreateContext : unit -&gt; obj" Usage="metaTable.CreateContext " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.CreateContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9beb7-144">Devuelve el contexto de datos de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-144">Returns the data context for the table.</span></span></summary>
        <returns><span data-ttu-id="9beb7-145">Contexto de datos de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-145">The data context for the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-146">El contexto de datos se recupera de un nuevo contexto que se crea una instancia mediante una llamada a la <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9beb7-146">The data context is retrieved from a new context that is instantiated by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9beb7-147">Para obtener más información, consulte el <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-147">For more information, see the <xref:System.Web.DynamicData.MetaTable?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateForeignKeyColumn">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn (System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaForeignKeyColumn CreateForeignKeyColumn(class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateForeignKeyColumn(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaForeignKeyColumn ^ CreateForeignKeyColumn(System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="abstract member CreateForeignKeyColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaForeignKeyColumn&#xA;override this.CreateForeignKeyColumn : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaForeignKeyColumn" Usage="metaTable.CreateForeignKeyColumn columnProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaForeignKeyColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="columnProvider"><span data-ttu-id="9beb7-148">Proveedor de columnas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-148">The column provider.</span></span></param>
        <summary><span data-ttu-id="9beb7-149">Crea un objeto que contiene los metadatos de clave externa.</span><span class="sxs-lookup"><span data-stu-id="9beb7-149">Creates an object that contains foreign-key metadata.</span></span></summary>
        <returns><span data-ttu-id="9beb7-150">Objeto que contiene los metadatos de clave externa.</span><span class="sxs-lookup"><span data-stu-id="9beb7-150">An object that contains foreign-key metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-151">Este método se puede invalidar para crear un tipo derivado.</span><span class="sxs-lookup"><span data-stu-id="9beb7-151">This method can be overridden to create a derived type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9beb7-152">Crea un objeto <see cref="T:System.Web.DynamicData.MetaTable" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-152">Creates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (System.ComponentModel.ICustomTypeDescriptor typeDescriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.ComponentModel.ICustomTypeDescriptor typeDescriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.ComponentModel.ICustomTypeDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (typeDescriptor As ICustomTypeDescriptor) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(System::ComponentModel::ICustomTypeDescriptor ^ typeDescriptor);" />
      <MemberSignature Language="F#" Value="static member CreateTable : System.ComponentModel.ICustomTypeDescriptor -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.CreateTable typeDescriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptor" Type="System.ComponentModel.ICustomTypeDescriptor" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="typeDescriptor"><span data-ttu-id="9beb7-153">Información sobre el tipo de tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-153">Information about the table type.</span></span></param>
        <summary><span data-ttu-id="9beb7-154">Crea los metadatos de la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-154">Creates the metadata for the specified table.</span></span></summary>
        <returns><span data-ttu-id="9beb7-155">Objeto que contiene los metadatos de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-155">An object that contains the table metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable CreateTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable CreateTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.CreateTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ CreateTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="static member CreateTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.CreateTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="9beb7-156">Tipo de tabla para el que se van a generar los metadatos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-156">The table type for which to generate metadata.</span></span></param>
        <summary><span data-ttu-id="9beb7-157">Crea los metadatos de la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-157">Creates the metadata for the specified table.</span></span></summary>
        <returns><span data-ttu-id="9beb7-158">Objeto que contiene los metadatos de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-158">An object that contains the table metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextPropertyName">
      <MemberSignature Language="C#" Value="public string DataContextPropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataContextPropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextPropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataContextPropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContextPropertyName : string" Usage="System.Web.DynamicData.MetaTable.DataContextPropertyName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextPropertyName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-159">Obtiene el nombre de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-159">Gets the name of the table.</span></span></summary>
        <value><span data-ttu-id="9beb7-160">Nombre de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-160">The name of the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-161">El nombre procede del <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> objeto al que pertenece la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-161">The name comes from the <xref:System.Web.DynamicData.MetaTable.DataContextType%2A> object that the table belongs to.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextType">
      <MemberSignature Language="C#" Value="public Type DataContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataContextType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataContextType : Type" Usage="System.Web.DynamicData.MetaTable.DataContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DataContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-162">Obtiene el tipo del contexto de datos asociado a la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-162">Gets the type of the data context that is associated with the table.</span></span></summary>
        <value><span data-ttu-id="9beb7-163">Tipo del contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-163">The type of the data context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-164">Para obtener más información, consulte el <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-164">For more information, see the <xref:System.Data.Linq.DataContext?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn DisplayColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn DisplayColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ DisplayColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayColumn : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaTable.DisplayColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-165">Obtiene la columna que se usa para mostrar valores cuando se emplean las entradas de esta tabla como elementos primarios en las relaciones de clave externa.</span><span class="sxs-lookup"><span data-stu-id="9beb7-165">Gets the column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span></span></summary>
        <value><span data-ttu-id="9beb7-166">Columna que se usa para mostrar valores cuando se emplean las entradas de esta tabla como elementos primarios en las relaciones de clave externa.</span><span class="sxs-lookup"><span data-stu-id="9beb7-166">The column that is used to display values when entries in this table are used as parents in foreign-key relationships.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-167">Se selecciona la columna que se devuelve en este orden:</span><span class="sxs-lookup"><span data-stu-id="9beb7-167">The column that is returned is selected in this order:</span></span>  
  
1.  <span data-ttu-id="9beb7-168">La columna que se especifica mediante el <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="9beb7-168">The column that is specified by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute.</span></span>  
  
2.  <span data-ttu-id="9beb7-169">La primera columna de cadena que no está en la clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-169">The first string column that is not in the primary key.</span></span>  
  
3.  <span data-ttu-id="9beb7-170">La primera columna de cadena que se encuentra en la clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-170">The first string column that is in the primary key.</span></span>  
  
4.  <span data-ttu-id="9beb7-171">La primera columna que no son de cadena que se encuentra en la clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-171">The first non-string column that is in the primary key.</span></span>  
  
5.  <span data-ttu-id="9beb7-172">La primera columna.</span><span class="sxs-lookup"><span data-stu-id="9beb7-172">The first column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.DynamicData.MetaTable.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-173">Obtiene el nombre de la tabla en formato descriptivo.</span><span class="sxs-lookup"><span data-stu-id="9beb7-173">Gets the name of the table in a user-friendly format.</span></span></summary>
        <value><span data-ttu-id="9beb7-174">Cadena que representa el nombre descriptivo de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-174">The string that represents the user-friendly name of the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-175">El valor predeterminado es el valor de esta propiedad en el valor de la <xref:System.Web.DynamicData.MetaTable.Name%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-175">The value of this property defaults to the value of the <xref:System.Web.DynamicData.MetaTable.Name%2A> property.</span></span> <span data-ttu-id="9beb7-176">El valor de esta propiedad se puede personalizar mediante la <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> atributo.</span><span class="sxs-lookup"><span data-stu-id="9beb7-176">You can customize the value of this property by using the <xref:System.ComponentModel.DisplayNameAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityType">
      <MemberSignature Language="C#" Value="public Type EntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type EntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.EntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ EntityType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityType : Type" Usage="System.Web.DynamicData.MetaTable.EntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.EntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-177">Obtiene el tipo de entidad que representa la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-177">Gets the entity type that represents the table.</span></span></summary>
        <value><span data-ttu-id="9beb7-178">Tipo que representa la entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-178">The type that represents the entity.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyColumnsNames">
      <MemberSignature Language="C#" Value="public string ForeignKeyColumnsNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ForeignKeyColumnsNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForeignKeyColumnsNames As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ForeignKeyColumnsNames { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ForeignKeyColumnsNames : string" Usage="System.Web.DynamicData.MetaTable.ForeignKeyColumnsNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.ForeignKeyColumnsNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-179">Obtiene una lista separada por comas de nombres de clave externa.</span><span class="sxs-lookup"><span data-stu-id="9beb7-179">Gets a comma-separated list of foreign-key names.</span></span></summary>
        <value><span data-ttu-id="9beb7-180">Lista separada por comas de nombres de clave externa.</span><span class="sxs-lookup"><span data-stu-id="9beb7-180">A comma-separated list of foreign-key names.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetActionPath">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9beb7-181">Obtiene la ruta de acción de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-181">Gets the action path for the specified row.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-182">La ruta de acción es una dirección URL para una acción para una entidad específica.</span><span class="sxs-lookup"><span data-stu-id="9beb7-182">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="9beb7-183">Para obtener más información, consulte el <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-183">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string -&gt; string&#xA;override this.GetActionPath : string -&gt; string" Usage="metaTable.GetActionPath action" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="9beb7-184">Nombre de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-184">The name of the action.</span></span></param>
        <summary><span data-ttu-id="9beb7-185">Devuelve la ruta de acción de la tabla actual y la acción especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-185">Returns the action path for the current table and the specified action.</span></span></summary>
        <returns><span data-ttu-id="9beb7-186">Ruta de acción de la acción especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-186">The action path for the specified action.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9beb7-187">La ruta de acción es una dirección URL para una acción para una entidad específica.</span><span class="sxs-lookup"><span data-stu-id="9beb7-187">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="9beb7-188">Para obtener más información, consulte el <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-188">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; -&gt; string&#xA;override this.GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; -&gt; string" Usage="metaTable.GetActionPath (action, primaryKeyValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="9beb7-189">Nombre de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-189">The name of the action.</span></span></param>
        <param name="primaryKeyValues"><span data-ttu-id="9beb7-190">Lista de valores de columna que constituyen la clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-190">The list of column values that make up the primary key.</span></span></param>
        <summary><span data-ttu-id="9beb7-191">Devuelve la ruta de acción de la tabla actual, la acción especificada y la clave principal especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-191">Returns the action path for the current table, specified action, and specified primary key.</span></span></summary>
        <returns><span data-ttu-id="9beb7-192">Ruta de acción correspondiente a la acción y clave principal especificadas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-192">The action path for the specified action and primary key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-193">La ruta de acción es una dirección URL para una acción para una entidad específica.</span><span class="sxs-lookup"><span data-stu-id="9beb7-193">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="9beb7-194">Para obtener más información, consulte el <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-194">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * obj -&gt; string&#xA;override this.GetActionPath : string * obj -&gt; string" Usage="metaTable.GetActionPath (action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="9beb7-195">Nombre de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-195">The name of the action.</span></span></param>
        <param name="row"><span data-ttu-id="9beb7-196">Fila para la que se obtiene la ruta de acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-196">The row to get the action path for.</span></span></param>
        <summary><span data-ttu-id="9beb7-197">Devuelve la ruta de acción de la fila especificada utilizando el nombre de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-197">Returns the action path for the specified row by using the name of the action.</span></span></summary>
        <returns><span data-ttu-id="9beb7-198">Ruta de acción de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-198">The action path for the specified row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-199">La ruta de acción es una dirección URL para una acción para una entidad específica.</span><span class="sxs-lookup"><span data-stu-id="9beb7-199">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="9beb7-200">La ruta de acción contiene los nombres de columna de clave principal, que se pueden usar para los filtros de la cadena de consulta.</span><span class="sxs-lookup"><span data-stu-id="9beb7-200">The action path contains the primary-key column names, which can be used for query-string filters.</span></span>  
  
 <span data-ttu-id="9beb7-201">Para obtener más información, consulte el <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-201">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Web.Routing.RouteValueDictionary routeValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Web.Routing.RouteValueDictionary routeValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, routeValues As RouteValueDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Web::Routing::RouteValueDictionary ^ routeValues);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Web.Routing.RouteValueDictionary -&gt; string&#xA;override this.GetActionPath : string * System.Web.Routing.RouteValueDictionary -&gt; string" Usage="metaTable.GetActionPath (action, routeValues)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Web.Routing.RouteValueDictionary)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="9beb7-202">Nombre de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-202">The name of the action.</span></span></param>
        <param name="routeValues"><span data-ttu-id="9beb7-203">Lista de rutas de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-203">The list of routes for the action.</span></span></param>
        <summary><span data-ttu-id="9beb7-204">Devuelve la ruta de acción para la tabla actual, y para la acción y rutas especificadas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-204">Returns the action path for the current table and for the specified action and routes.</span></span></summary>
        <returns><span data-ttu-id="9beb7-205">Ruta de acción para la acción y rutas especificadas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-205">The action path for the specified action and routes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-206">La ruta de acción es una dirección URL para una acción para una entidad específica.</span><span class="sxs-lookup"><span data-stu-id="9beb7-206">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="9beb7-207">Para obtener más información, consulte el <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-207">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, System.Collections.Generic.IList&lt;object&gt; primaryKeyValues, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, primaryKeyValues As IList(Of Object), path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; * string -&gt; string&#xA;override this.GetActionPath : string * System.Collections.Generic.IList&lt;obj&gt; * string -&gt; string" Usage="metaTable.GetActionPath (action, primaryKeyValues, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Collections.Generic.IList{System.Object},System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="9beb7-208">Nombre de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-208">The name of the action.</span></span></param>
        <param name="primaryKeyValues"><span data-ttu-id="9beb7-209">Lista de valores de columna que constituyen la clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-209">The list of column values that make up the primary key.</span></span></param>
        <param name="path"><span data-ttu-id="9beb7-210">Ruta de acceso virtual de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-210">The virtual path of the action.</span></span></param>
        <summary><span data-ttu-id="9beb7-211">Anexa cadenas de consulta a la ruta de acción, según la clave principal y la ruta de acceso virtual especificadas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-211">Appends query strings to the action path, based on the specified primary key and virtual path.</span></span></summary>
        <returns><span data-ttu-id="9beb7-212">Ruta de acción correspondiente a la clave principal y ruta de acceso virtual especificadas, con los valores de cadena de consulta anexados.</span><span class="sxs-lookup"><span data-stu-id="9beb7-212">The action path for the specified primary key and virtual path, with query-string values appended to it.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-213">La ruta de acción es una dirección URL para una acción para una entidad específica.</span><span class="sxs-lookup"><span data-stu-id="9beb7-213">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="9beb7-214">Para obtener más información, consulte el <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-214">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string action, object row, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string action, object row, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetActionPath(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (action As String, row As Object, path As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ action, System::Object ^ row, System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * obj * string -&gt; string&#xA;override this.GetActionPath : string * obj * string -&gt; string" Usage="metaTable.GetActionPath (action, row, path)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetActionPath(System.String,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="9beb7-215">Nombre de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-215">The name of the action.</span></span></param>
        <param name="row"><span data-ttu-id="9beb7-216">Objeto que contiene la fila de la ruta de acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-216">An object that contains the row for the action path.</span></span></param>
        <param name="path"><span data-ttu-id="9beb7-217">Ruta de acceso virtual de la acción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-217">The virtual path of the action.</span></span></param>
        <summary><span data-ttu-id="9beb7-218">Devuelve la ruta de acción de la fila especificada utilizando el nombre de la acción y su ruta de acceso virtual.</span><span class="sxs-lookup"><span data-stu-id="9beb7-218">Returns the action path for the specified row by using the name of the action and the virtual path of the action.</span></span></summary>
        <returns><span data-ttu-id="9beb7-219">Ruta de acción de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-219">The action path for the specified row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-220">La ruta de acción es una dirección URL para una acción para una entidad específica.</span><span class="sxs-lookup"><span data-stu-id="9beb7-220">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="9beb7-221">Para obtener más información, consulte el <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-221">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumn">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaColumn GetColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaColumn GetColumn(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumn (columnName As String) As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaColumn ^ GetColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumn : string -&gt; System.Web.DynamicData.MetaColumn" Usage="metaTable.GetColumn columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="9beb7-222">Nombre de la columna cuyos metadatos se van a obtener.</span><span class="sxs-lookup"><span data-stu-id="9beb7-222">The name of the column to get metadata for.</span></span></param>
        <summary><span data-ttu-id="9beb7-223">Devuelve los metadatos de la columna especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-223">Returns the metadata for the specified column.</span></span></summary>
        <returns><span data-ttu-id="9beb7-224">Metadatos de la columna.</span><span class="sxs-lookup"><span data-stu-id="9beb7-224">The column metadata.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColumnValuesFromRoute">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetColumnValuesFromRoute (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetColumnValuesFromRoute(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetColumnValuesFromRoute(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnValuesFromRoute (context As HttpContext) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetColumnValuesFromRoute(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetColumnValuesFromRoute : System.Web.HttpContext -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="metaTable.GetColumnValuesFromRoute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="9beb7-225">Contexto de la solicitud web especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-225">The context for the specified Web request.</span></span></param>
        <summary><span data-ttu-id="9beb7-226">Obtiene una colección de valores de columna.</span><span class="sxs-lookup"><span data-stu-id="9beb7-226">Gets the collection of column values.</span></span></summary>
        <returns><span data-ttu-id="9beb7-227">Colección de valores de columna.</span><span class="sxs-lookup"><span data-stu-id="9beb7-227">The collection of column values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataKeyFromRoute">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.DataKey GetDataKeyFromRoute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.WebControls.DataKey GetDataKeyFromRoute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDataKeyFromRoute" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataKeyFromRoute () As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::WebControls::DataKey ^ GetDataKeyFromRoute();" />
      <MemberSignature Language="F#" Value="abstract member GetDataKeyFromRoute : unit -&gt; System.Web.UI.WebControls.DataKey&#xA;override this.GetDataKeyFromRoute : unit -&gt; System.Web.UI.WebControls.DataKey" Usage="metaTable.GetDataKeyFromRoute " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDataKeyFromRoute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9beb7-228">Recupera la clave principal de la entidad a partir de valores de ruta.</span><span class="sxs-lookup"><span data-stu-id="9beb7-228">Retrieves the primary key of the entity from the route values.</span></span></summary>
        <returns><span data-ttu-id="9beb7-229">Valores de clave principal de las entidades si se encuentran; de lo contrario, devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-229">The primary-key values of the entities, if they are found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-230">Los valores de ruta normalmente provienen de la cadena de consulta de dirección URL de solicitud.</span><span class="sxs-lookup"><span data-stu-id="9beb7-230">The route values typically come from the request URL query string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayString">
      <MemberSignature Language="C#" Value="public virtual string GetDisplayString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDisplayString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetDisplayString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDisplayString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDisplayString(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayString : obj -&gt; string&#xA;override this.GetDisplayString : obj -&gt; string" Usage="metaTable.GetDisplayString row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetDisplayString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="9beb7-231">Fila cuya cadena de presentación se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="9beb7-231">The row to get the display string for.</span></span></param>
        <summary><span data-ttu-id="9beb7-232">Devuelve el valor que se usa como cadena de presentación para una instancia de una fila cuando la fila se usa en relaciones de clave externa.</span><span class="sxs-lookup"><span data-stu-id="9beb7-232">Returns the value to use as the display string for an instance of a row when the row is used in foreign-key relationships.</span></span></summary>
        <returns><span data-ttu-id="9beb7-233">Nombre para mostrar de una instancia de una fila.</span><span class="sxs-lookup"><span data-stu-id="9beb7-233">The display name for an instance of a row.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-234">Si la fila es `null`, se devuelve una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="9beb7-234">If the row is `null`, an empty string is returned.</span></span> <span data-ttu-id="9beb7-235">Si la clase de entidad incluye una invalidación de la <xref:System.Web.DynamicData.MetaTable.ToString%2A> método, invalidado <xref:System.Web.DynamicData.MetaTable.ToString%2A> se devuelve el valor.</span><span class="sxs-lookup"><span data-stu-id="9beb7-235">If the entity class includes an override of the <xref:System.Web.DynamicData.MetaTable.ToString%2A> method, the overridden <xref:System.Web.DynamicData.MetaTable.ToString%2A> value is returned.</span></span> <span data-ttu-id="9beb7-236">En caso contrario, el método devuelve el `ToString` representación del valor de la <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> propiedad de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-236">Otherwise, the method returns the `ToString` representation of the value of the <xref:System.Web.DynamicData.MetaTable.DisplayColumn%2A> property for the specified row.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilteredColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetFilteredColumns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetFilteredColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFilteredColumns () As IEnumerable(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetFilteredColumns();" />
      <MemberSignature Language="F#" Value="abstract member GetFilteredColumns : unit -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;&#xA;override this.GetFilteredColumns : unit -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="metaTable.GetFilteredColumns " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9beb7-237">Recupera una lista de las columnas filtrables.</span><span class="sxs-lookup"><span data-stu-id="9beb7-237">Retrieves a list of columns that are filterable.</span></span></summary>
        <returns><span data-ttu-id="9beb7-238">Lista de las columnas filtrables.</span><span class="sxs-lookup"><span data-stu-id="9beb7-238">A list of columns that are filterable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-239">Una columna es filtrable si se anota con el <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> atributo y el `Enabled` propiedad de la <xref:System.Web.Mvc.FilterAttribute> atributo de la columna está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="9beb7-239">A column is filterable if it is annotated with the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute> attribute and the `Enabled` property of the <xref:System.Web.Mvc.FilterAttribute> attribute of the column is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyDictionary">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; GetPrimaryKeyDictionary (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetPrimaryKeyDictionary(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyDictionary(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyDictionary (row As Object) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetPrimaryKeyDictionary(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetPrimaryKeyDictionary : obj -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="metaTable.GetPrimaryKeyDictionary row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyDictionary(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="9beb7-240">Fila.</span><span class="sxs-lookup"><span data-stu-id="9beb7-240">A row.</span></span></param>
        <summary><span data-ttu-id="9beb7-241">Recupera un diccionario de nombres y valores de clave principal para la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-241">Retrieves a dictionary of primary-key names and values for the specified row.</span></span></summary>
        <returns><span data-ttu-id="9beb7-242">Diccionario de nombres y valores de clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-242">A dictionary of primary-key names and values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9beb7-243">El ejemplo siguiente muestra cómo crear un diccionario de clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-243">The following example shows how to create a primary-key dictionary.</span></span>  
  
```csharp  
private RouteValueDictionary GetRouteValues(MetaTable table, object row) {  
    RouteValueDictionary routeValues = GetRouteValues();  
    foreach (var pk in table.GetPrimaryKeyDictionary(row)) {  
        routeValues[pk.Key] = pk.Value;  
    }  
    return routeValues;  
}   
```  
  
```vb  
Private Function GetRouteValues(ByVal table As MetaTable, _  
        ByVal row As Object) As RouteValueDictionary   
    Dim routeValues As RouteValueDictionary = GetRouteValues()   
    For Each pk In table.GetPrimaryKeyDictionary(row)   
        routeValues(pk.Key) = pk.Value   
    Next   
    Return routeValues   
End Function   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPrimaryKeyString">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9beb7-244">Obtiene una lista de valores que representan la clave principal de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-244">Gets a list of values that represent the primary key for the specified row.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (System.Collections.Generic.IList&lt;object&gt; primaryKeyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(class System.Collections.Generic.IList`1&lt;object&gt; primaryKeyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (primaryKeyValues As IList(Of Object)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Collections::Generic::IList&lt;System::Object ^&gt; ^ primaryKeyValues);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyString : System.Collections.Generic.IList&lt;obj&gt; -&gt; string&#xA;override this.GetPrimaryKeyString : System.Collections.Generic.IList&lt;obj&gt; -&gt; string" Usage="metaTable.GetPrimaryKeyString primaryKeyValues" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Collections.Generic.IList{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryKeyValues" Type="System.Collections.Generic.IList&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="primaryKeyValues"><span data-ttu-id="9beb7-245">Lista de valores de columna que constituyen la clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-245">The list of column values that make up the primary key.</span></span></param>
        <summary><span data-ttu-id="9beb7-246">Devuelve una lista separada por comas de valores de columna que representan la clave principal de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-246">Returns a comma-separated list of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="9beb7-247">Lista de valores de columna separados por comas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-247">A comma-separated list of column values.</span></span> <span data-ttu-id="9beb7-248">Si la lista está vacía, se devuelve una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="9beb7-248">If the list is empty, an empty string is returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyString">
      <MemberSignature Language="C#" Value="public string GetPrimaryKeyString (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPrimaryKeyString(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyString (row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPrimaryKeyString(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyString : obj -&gt; string&#xA;override this.GetPrimaryKeyString : obj -&gt; string" Usage="metaTable.GetPrimaryKeyString row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyString(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="9beb7-249">Fila cuya clave principal se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="9beb7-249">The row to get the primary key for.</span></span></param>
        <summary><span data-ttu-id="9beb7-250">Devuelve una lista separada por comas de valores de columna que representan la clave principal de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-250">Returns a comma-separated list of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="9beb7-251">Lista separada por comas de valores de columna que representan la clave principal de la fila.</span><span class="sxs-lookup"><span data-stu-id="9beb7-251">A comma-separated list of column values that represent the primary key for the row.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;object&gt; GetPrimaryKeyValues (object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;object&gt; GetPrimaryKeyValues(object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetPrimaryKeyValues(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyValues (row As Object) As IList(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Object ^&gt; ^ GetPrimaryKeyValues(System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyValues : obj -&gt; System.Collections.Generic.IList&lt;obj&gt;&#xA;override this.GetPrimaryKeyValues : obj -&gt; System.Collections.Generic.IList&lt;obj&gt;" Usage="metaTable.GetPrimaryKeyValues row" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetPrimaryKeyValues(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="row"><span data-ttu-id="9beb7-252">Fila cuya clave principal se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="9beb7-252">The row to get the primary key for.</span></span></param>
        <summary><span data-ttu-id="9beb7-253">Devuelve una colección de valores de columna que representan la clave principal de la fila especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-253">Returns a collection of column values that represent the primary key for the specified row.</span></span></summary>
        <returns><span data-ttu-id="9beb7-254">Colección de valores de columna que representan la clave principal de la fila.</span><span class="sxs-lookup"><span data-stu-id="9beb7-254">A collection of column values that represent the primary key for the row.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetQuery">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9beb7-255">Obtiene la instancia de <see cref="T:System.Linq.IQueryable" /> que corresponde al tipo de entidad que representa la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-255">Gets the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public System.Linq.IQueryable GetQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function GetQuery () As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery();" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : unit -&gt; System.Linq.IQueryable&#xA;override this.GetQuery : unit -&gt; System.Linq.IQueryable" Usage="metaTable.GetQuery " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9beb7-256">Devuelve la instancia de <see cref="T:System.Linq.IQueryable" /> que corresponde al tipo de entidad que representa la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-256">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table.</span></span></summary>
        <returns><span data-ttu-id="9beb7-257">Instancia de <see cref="T:System.Linq.IQueryable" /> que corresponde al tipo de entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-257">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQuery">
      <MemberSignature Language="C#" Value="public virtual System.Linq.IQueryable GetQuery (object context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.IQueryable GetQuery(object context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetQuery(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQuery (context As Object) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Linq::IQueryable ^ GetQuery(System::Object ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetQuery : obj -&gt; System.Linq.IQueryable&#xA;override this.GetQuery : obj -&gt; System.Linq.IQueryable" Usage="metaTable.GetQuery context" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaTable.GetQuery(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="9beb7-258">Contexto del objeto <see cref="T:System.Web.DynamicData.MetaTable" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-258">The context of the <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></param>
        <summary><span data-ttu-id="9beb7-259">Devuelve la instancia de <see cref="T:System.Linq.IQueryable" /> que corresponde al tipo de entidad que representa la tabla según el contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-259">Returns the <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table by using the data context.</span></span></summary>
        <returns><span data-ttu-id="9beb7-260">Instancia de <see cref="T:System.Linq.IQueryable" /> para el tipo de entidad que representa la tabla en el contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-260">The <see cref="T:System.Linq.IQueryable" /> instance for the entity type that represents the table in the data context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-261">Si el `context` parámetro es `null`, este método crea un nuevo contexto mediante una llamada a la <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="9beb7-261">If the `context` parameter is `null`, this method creates a new context by calling the <xref:System.Web.DynamicData.MetaTable.CreateContext%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaffoldColumns">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns (System.Web.UI.WebControls.DataBoundControlMode mode, System.Web.DynamicData.ContainerType containerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.DynamicData.MetaColumn&gt; GetScaffoldColumns(valuetype System.Web.UI.WebControls.DataBoundControlMode mode, valuetype System.Web.DynamicData.ContainerType containerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetScaffoldColumns(System.Web.UI.WebControls.DataBoundControlMode,System.Web.DynamicData.ContainerType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ GetScaffoldColumns(System::Web::UI::WebControls::DataBoundControlMode mode, System::Web::DynamicData::ContainerType containerType);" />
      <MemberSignature Language="F#" Value="abstract member GetScaffoldColumns : System.Web.UI.WebControls.DataBoundControlMode * System.Web.DynamicData.ContainerType -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;&#xA;override this.GetScaffoldColumns : System.Web.UI.WebControls.DataBoundControlMode * System.Web.DynamicData.ContainerType -&gt; seq&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="metaTable.GetScaffoldColumns (mode, containerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Web.UI.WebControls.DataBoundControlMode" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="containerType" Type="System.Web.DynamicData.ContainerType" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="9beb7-262">Modo del control enlazado a datos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-262">The data-bound control mode.</span></span></param>
        <param name="containerType"><span data-ttu-id="9beb7-263">Valor que indica si la tabla se muestra como una entidad o como parte de una lista de entidades.</span><span class="sxs-lookup"><span data-stu-id="9beb7-263">A value that indicates whether the table is displayed as an individual entity or as part of a list of entities.</span></span></param>
        <summary><span data-ttu-id="9beb7-264">Devuelve una lista de las columnas que se van a mostrar mediante la técnica scaffolding.</span><span class="sxs-lookup"><span data-stu-id="9beb7-264">Returns a list of columns to display by using scaffolding.</span></span></summary>
        <returns><span data-ttu-id="9beb7-265">Lista de las columnas que se van a mostrar mediante la técnica scaffolding.</span><span class="sxs-lookup"><span data-stu-id="9beb7-265">A list of columns to display by using scaffolding.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-266">Este método devuelve todas las columnas cuyos <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> propiedad está establecida en `true` , excepto las siguientes:</span><span class="sxs-lookup"><span data-stu-id="9beb7-266">This method returns all columns whose <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> property is set to `true` except the following:</span></span>  
  
-   <span data-ttu-id="9beb7-267">Columnas, que son las columnas de cadena larga cuyo <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> propiedad está establecida en `true` y cuyo `containerType` parámetro es `true`.</span><span class="sxs-lookup"><span data-stu-id="9beb7-267">Long string columns, which are columns whose <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is set to `true` and whose `containerType` parameter is `true`.</span></span>  
  
-   <span data-ttu-id="9beb7-268">Columnas secundarias cuyo <xref:System.Web.UI.WebControls.DataBoundControlMode> valor se establece en <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.</span><span class="sxs-lookup"><span data-stu-id="9beb7-268">Child columns whose <xref:System.Web.UI.WebControls.DataBoundControlMode> value is set to <xref:System.Web.UI.WebControls.DataBoundControlMode.Insert>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="static member GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaTable.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="9beb7-269">Tipo de la entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-269">The type of the entity.</span></span></param>
        <summary><span data-ttu-id="9beb7-270">Recupera la metatabla que está asociada al tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="9beb7-270">Retrieves the metatable that is associated with the specified type.</span></span></summary>
        <returns><span data-ttu-id="9beb7-271">Metatabla que está asociada al tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="9beb7-271">The metatable that is associated with the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-272">Este método llama a <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</span><span class="sxs-lookup"><span data-stu-id="9beb7-272">This method calls <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29>.</span></span> <span data-ttu-id="9beb7-273">Si <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> devuelve `false`, un <xref:System.InvalidOperationException> es una excepción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-273">If <xref:System.Web.DynamicData.MetaTable.TryGetTable%28System.Type%2CSystem.Web.DynamicData.MetaTable%40%29> returns `false`, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="9beb7-274">El método <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> al que llamó este método devolvió <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-274">The <see cref="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" /> method that was called by this method returned <see langword="false" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasPrimaryKey">
      <MemberSignature Language="C#" Value="public bool HasPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasPrimaryKey : bool" Usage="System.Web.DynamicData.MetaTable.HasPrimaryKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.HasPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-275">Obtiene un valor que indica si la tabla tiene una clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-275">Gets a value that indicates whether the table has a primary key.</span></span></summary>
        <value><span data-ttu-id="9beb7-276">Es <see langword="true" /> si la tabla tiene una clave principal; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-276"><see langword="true" /> if the table has a primary key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="metaTable.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9beb7-277">Inicializa datos que quizás no estén disponibles cuando se llame al constructor.</span><span class="sxs-lookup"><span data-stu-id="9beb7-277">Initializes data that may not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-278">Este método llama a la <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> método para cada columna de la <xref:System.Web.DynamicData.MetaTable> instancia.</span><span class="sxs-lookup"><span data-stu-id="9beb7-278">This method calls the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method for each column in the <xref:System.Web.DynamicData.MetaTable> instance.</span></span> <span data-ttu-id="9beb7-279">Este método no se puede llamar directamente.</span><span class="sxs-lookup"><span data-stu-id="9beb7-279">This method cannot be called directly.</span></span> <span data-ttu-id="9beb7-280">Para personalizar la inicialización, puede derivar de esta clase e invalidar el <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9beb7-280">To customize initialization, you can derive from this class and override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method.</span></span> <span data-ttu-id="9beb7-281">Si invalida este método, llame a la base del control `Initialize` método.</span><span class="sxs-lookup"><span data-stu-id="9beb7-281">If you override this method, call the base control's `Initialize` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9beb7-282">El ejemplo siguiente muestra cómo invalidar el <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> método con el fin de personalizar el proceso de inicialización.</span><span class="sxs-lookup"><span data-stu-id="9beb7-282">The following example shows how to override the <xref:System.Web.DynamicData.MetaColumn.Initialize%2A> method in order to customize the initialization process.</span></span>  
  
```csharp  
protected  override void Initialize() {  
    base.Initialize();  
    MyOverridenInit();  
}  
```  
  
```vb  
Protected Overloads Overrides Sub Initialize()   
    MyBase.Initialize()   
    MyOverridenInit()   
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.DynamicData.MetaTable.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-283">Obtiene un valor que indica si la tabla es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="9beb7-283">Gets a value that indicates whether the table is read-only.</span></span></summary>
        <value><span data-ttu-id="9beb7-284">Es <see langword="true" /> si la tabla es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-284"><see langword="true" /> if the table is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ListActionPath">
      <MemberSignature Language="C#" Value="public string ListActionPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ListActionPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ListActionPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ListActionPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ListActionPath : string" Usage="System.Web.DynamicData.MetaTable.ListActionPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-285">Obtiene la ruta de acción que corresponde a la acción de lista de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-285">Gets the action path of the list action for the table.</span></span></summary>
        <value><span data-ttu-id="9beb7-286">Ruta de acción que corresponde a la acción de lista de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-286">The action path of the list action for the table.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-287">La ruta de acción es una dirección URL para una acción para una entidad específica.</span><span class="sxs-lookup"><span data-stu-id="9beb7-287">The action path is a URL for an action for a specific entity.</span></span> <span data-ttu-id="9beb7-288">Para obtener más información, consulte el <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-288">For more information, see the <xref:System.Web.DynamicData.PageAction?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaTable.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-289">Obtiene el metamodelo al que pertenece la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-289">Gets the meta model that the table belongs to.</span></span></summary>
        <value><span data-ttu-id="9beb7-290">Metamodelo al que pertenece la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-290">The meta model that the table belongs to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-291">Para obtener más información, consulte el <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="9beb7-291">For more information, see the <xref:System.Data.Linq.Mapping.MetaModel?displayProperty=nameWithType> class overview.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.DynamicData.MetaTable.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-292">Obtiene el nombre único de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-292">Gets the unique name of the table.</span></span></summary>
        <value><span data-ttu-id="9beb7-293">Nombre único de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-293">The unique name of the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKeyColumns">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaColumn&gt; PrimaryKeyColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PrimaryKeyColumns As ReadOnlyCollection(Of MetaColumn)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ PrimaryKeyColumns { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaColumn ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryKeyColumns : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;" Usage="System.Web.DynamicData.MetaTable.PrimaryKeyColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaColumn&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-294">Obtiene la colección de columnas que definen la clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-294">Gets the collection of columns that define the primary key.</span></span></summary>
        <value><span data-ttu-id="9beb7-295">Colección que contiene las columnas de clave principal.</span><span class="sxs-lookup"><span data-stu-id="9beb7-295">A collection that contains the primary-key columns.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.TableProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.TableProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As TableProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::TableProvider ^ Provider { System::Web::DynamicData::ModelProviders::TableProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.DynamicData.ModelProviders.TableProvider" Usage="System.Web.DynamicData.MetaTable.Provider" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Provider</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.TableProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-296">Obtiene el proveedor de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-296">Gets the provider for the table.</span></span></summary>
        <value><span data-ttu-id="9beb7-297">Proveedor de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-297">The provider for the table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetMetadata();" />
      <MemberSignature Language="F#" Value="member this.ResetMetadata : unit -&gt; unit" Usage="metaTable.ResetMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9beb7-298">Restablece los metadatos almacenados en caché de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-298">Resets the cached metadata for the table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-299">Los metadatos de la tabla almacenada en caché constan de la información que se obtiene de los atributos del modelo de datos y de los metadatos sobre columnas intrínsecas.</span><span class="sxs-lookup"><span data-stu-id="9beb7-299">The cached table metadata consists of the information that is obtained from data-model attributes and from metadata about intrinsic columns.</span></span> <span data-ttu-id="9beb7-300">La caché de metadatos se recompila la próxima vez que se solicitan los metadatos.</span><span class="sxs-lookup"><span data-stu-id="9beb7-300">The metadata cache is rebuilt the next time any metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootEntityType">
      <MemberSignature Language="C#" Value="public Type RootEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type RootEntityType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootEntityType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ RootEntityType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootEntityType : Type" Usage="System.Web.DynamicData.MetaTable.RootEntityType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.RootEntityType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-301">Obtiene el tipo raíz de la jerarquía de herencia de la entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-301">Gets the root type of the entity's inheritance hierarchy.</span></span></summary>
        <value><span data-ttu-id="9beb7-302">Tipo raíz de la jerarquía de herencia de la entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-302">The root type of the entity's inheritance hierarchy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-303">Si el tipo es la parte superior de la jerarquía de herencia o no tiene un tipo de elemento primario, se devuelve el tipo de entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-303">If the type is at the top of the inheritance hierarchy or does not have a parent type, the entity type is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool" Usage="System.Web.DynamicData.MetaTable.Scaffold" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-304">Obtiene o establece un valor que indica si la tabla debe mostrarse.</span><span class="sxs-lookup"><span data-stu-id="9beb7-304">Gets or sets a value that indicates whether the table should be displayed.</span></span></summary>
        <value><span data-ttu-id="9beb7-305">Es <see langword="true" /> si la tabla debe mostrarse; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-305"><see langword="true" /> if the table should be displayed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.MetaColumn SortColumn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaColumn SortColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortColumn As MetaColumn" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::DynamicData::MetaColumn ^ SortColumn { System::Web::DynamicData::MetaColumn ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortColumn : System.Web.DynamicData.MetaColumn" Usage="System.Web.DynamicData.MetaTable.SortColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaColumn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-306">Obtiene el valor <see cref="T:System.Web.DynamicData.MetaColumn" /> según el cual se ordena la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-306">Gets the <see cref="T:System.Web.DynamicData.MetaColumn" /> value that the table is sorted by.</span></span></summary>
        <value><span data-ttu-id="9beb7-307">Columna según la cual se ordena la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-307">The column that the table is sorted by.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SortDescending">
      <MemberSignature Language="C#" Value="public virtual bool SortDescending { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SortDescending" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SortDescending As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SortDescending { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SortDescending : bool" Usage="System.Web.DynamicData.MetaTable.SortDescending" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaTable.SortDescending</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9beb7-308">Obtiene un valor que indica si las entradas se ordenan de mayor a menor cuando se usan como elementos primarios en una relación de clave externa.</span><span class="sxs-lookup"><span data-stu-id="9beb7-308">Gets a value that indicates whether entries are sorted in descending order when they are used as parents in a foreign-key relationship.</span></span></summary>
        <value><span data-ttu-id="9beb7-309">Es <see langword="true" /> si las entradas se ordenan de mayor a menor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-309"><see langword="true" /> if entries are sorted in descending order; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-310">Puede especificar el criterio de ordenación mediante el <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> atributo.</span><span class="sxs-lookup"><span data-stu-id="9beb7-310">You can specify sort order by using the <xref:System.ComponentModel.DataAnnotations.DisplayColumnAttribute?displayProperty=nameWithType> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="metaTable.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9beb7-311">Devuelve el nombre de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-311">Returns the name of the table.</span></span></summary>
        <returns><span data-ttu-id="9beb7-312">Nombre de la tabla.</span><span class="sxs-lookup"><span data-stu-id="9beb7-312">The name of the table.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetColumn">
      <MemberSignature Language="C#" Value="public bool TryGetColumn (string columnName, out System.Web.DynamicData.MetaColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetColumn(string columnName, [out] class System.Web.DynamicData.MetaColumn&amp; column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetColumn(System.String,System.Web.DynamicData.MetaColumn@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetColumn (columnName As String, ByRef column As MetaColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetColumn(System::String ^ columnName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaColumn ^ % column);" />
      <MemberSignature Language="F#" Value="member this.TryGetColumn : string *  -&gt; bool" Usage="metaTable.TryGetColumn (columnName, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="column" Type="System.Web.DynamicData.MetaColumn" RefType="out" />
      </Parameters>
      <Docs>
        <param name="columnName"><span data-ttu-id="9beb7-313">Nombre de la columna para buscar.</span><span class="sxs-lookup"><span data-stu-id="9beb7-313">The name of the column to find.</span></span></param>
        <param name="column"><span data-ttu-id="9beb7-314">Cuando este método regresa, contiene el objeto <see langword="MetaColumn" /> de <paramref name="columnName" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-314">When this method returns, contains the <see langword="MetaColumn" /> object for <paramref name="columnName" />.</span></span> <span data-ttu-id="9beb7-315">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="9beb7-315">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="9beb7-316">Devuelve un valor que indica si se puede encontrar una columna especificada.</span><span class="sxs-lookup"><span data-stu-id="9beb7-316">Returns a value that indicates whether a specified column can be found.</span></span></summary>
        <returns><span data-ttu-id="9beb7-317">Es <see langword="true" /> si se puede encontrar la columna especificada; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-317"><see langword="true" /> if the specified column can be found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9beb7-318">Si el `columnName` parámetro es null, un <xref:System.InvalidOperationException> es una excepción.</span><span class="sxs-lookup"><span data-stu-id="9beb7-318">If the `columnName` parameter is null, an <xref:System.InvalidOperationException> exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public static bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaTable.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="static member TryGetTable : Type *  -&gt; bool" Usage="System.Web.DynamicData.MetaTable.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="9beb7-319">Tipo de la entidad.</span><span class="sxs-lookup"><span data-stu-id="9beb7-319">The type of the entity.</span></span></param>
        <param name="table"><span data-ttu-id="9beb7-320">Cuando este método devuelve un valor, contiene la metatabla que está asociada al tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="9beb7-320">When this method returns, contains the metatable that is associated with the specified type.</span></span> <span data-ttu-id="9beb7-321">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="9beb7-321">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="9beb7-322">Recupera la metatabla que está asociada al tipo y a la tabla especificados.</span><span class="sxs-lookup"><span data-stu-id="9beb7-322">Retrieves the metatable that is associated with the specified type and table.</span></span></summary>
        <returns><span data-ttu-id="9beb7-323">Metatabla que está asociada al tipo y a la tabla especificados.</span><span class="sxs-lookup"><span data-stu-id="9beb7-323">The metatable that is associated with the given specified and table.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9beb7-324"><paramref name="entityType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9beb7-324"><paramref name="entityType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
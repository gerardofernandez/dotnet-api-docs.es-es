<Type Name="MetaModel" FullName="System.Web.DynamicData.MetaModel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8723d77ff7e98495ad9cd7c753205c2a2fee62a0" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52230412" /></Metadata><TypeSignature Language="C#" Value="public class MetaModel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaModel extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaModel" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaModel" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaModel" />
  <TypeSignature Language="F#" Value="type MetaModel = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b03a4-101">Representa una o varias bases de datos que los datos dinámicos de ASP.NET usan.</span><span class="sxs-lookup"><span data-stu-id="b03a4-101">Represents one or multiple databases that are used by ASP.NET Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-102">El <xref:System.Web.DynamicData.MetaModel> tipo le permite registrar uno o varios contextos de datos para una aplicación Web de datos dinámicos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-102">The <xref:System.Web.DynamicData.MetaModel> type lets you register one or multiple data contexts for a Dynamic Data Web application.</span></span>  
  
 <span data-ttu-id="b03a4-103">Un contexto de datos es un objeto que representa una conexión de base de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-103">A data context is an object that represents a database connection.</span></span> <span data-ttu-id="b03a4-104">Un contexto de datos tiene acceso a un modelo de datos que representa una base de datos que está disponible a través de esa conexión.</span><span class="sxs-lookup"><span data-stu-id="b03a4-104">A data context has access to one data model which represents a database that is available through that connection.</span></span> <span data-ttu-id="b03a4-105">Un modelo de datos es un objeto que representa las entidades de datos de una base de datos como tipos CLR.</span><span class="sxs-lookup"><span data-stu-id="b03a4-105">A data model is an object that represents a database's data entities as CLR types.</span></span> <span data-ttu-id="b03a4-106">Datos dinámicos admiten modelos de datos basados en LINQ to SQL y ADO.NET Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="b03a4-106">Dynamic Data supports data models based on LINQ to SQL and on the ADO.NET Entity Framework.</span></span>  
  
 <span data-ttu-id="b03a4-107">En Visual Studio, puede generar tipos de modelo de datos mediante el **clases LINQ to SQL** plantilla o la **ADO.NET Entity Data Model** plantilla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-107">In Visual Studio, you can generate data-model types by using the **LINQ to SQL Classes** template or the **ADO.NET Entity Data Model** template.</span></span> <span data-ttu-id="b03a4-108">Estas plantillas usan Object Relational Designer (Object Relational Designer) para el modelo LINQ to SQL o ADO.NET Entity Data Model Designer (Entity Designer) para el modelo de Entity Framework.</span><span class="sxs-lookup"><span data-stu-id="b03a4-108">These templates use the Object Relational Designer (O/R Designer) for the LINQ to SQL model, or the ADO.NET Entity Data Model Designer (Entity Designer) for the Entity Framework model.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b03a4-109">El ejemplo siguiente muestra cómo usar <xref:System.Web.DynamicData.MetaModel> tipo para realizar las tareas siguientes para poder usar el scaffolding automático en un sitio Web de ASP.NET:</span><span class="sxs-lookup"><span data-stu-id="b03a4-109">The following example shows how to use <xref:System.Web.DynamicData.MetaModel> type to perform the following tasks in order to use automatic scaffolding in an ASP.NET Web site:</span></span>  
  
-   <span data-ttu-id="b03a4-110">Obtener el modelo de datos para el contexto de datos de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-110">Get the data model for the default data context.</span></span>  
  
-   <span data-ttu-id="b03a4-111">Obtener el modelo de datos para un contexto de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="b03a4-111">Get the data model for a specified data context.</span></span>  
  
-   <span data-ttu-id="b03a4-112">Evaluar la ruta de enrutamiento (determinar la dirección URL) para una tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-112">Evaluate the routing path (determine the URL) for a specified table.</span></span>  
  
 <span data-ttu-id="b03a4-113">El ejemplo consta de una página y su archivo de código subyacente.</span><span class="sxs-lookup"><span data-stu-id="b03a4-113">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PlaceHolder.cs#1)]
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx#1)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx#1)]
 [!code-vb[System.Web.DynamicData.MetaModel#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PlaceHolder.vb#1)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#2)]
 [!code-vb[System.Web.DynamicData.MetaModel#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#2)]  
  
 <span data-ttu-id="b03a4-114">Para compilar el ejemplo, necesita lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="b03a4-114">To compile the example, you need the following:</span></span>  
  
-   [!INCLUDE[vs_dev10_long](~/includes/vs-dev10-long-md.md)] <span data-ttu-id="b03a4-115">o [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b03a4-115">or [!INCLUDE[vwd_exp_dev10_long](~/includes/vwd-exp-dev10-long-md.md)].</span></span>  
  
-   <span data-ttu-id="b03a4-116">Un sitio Web de datos dinámicos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-116">A Dynamic Data Web site.</span></span> <span data-ttu-id="b03a4-117">Para obtener más información, consulte [Tutorial: crear un nuevo Dynamic Data sitio Web usando Scaffolding](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span><span class="sxs-lookup"><span data-stu-id="b03a4-117">For more information, see [Walkthrough: Creating a New Dynamic Data Web Site Using Scaffolding](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).</span></span>  
  
 <span data-ttu-id="b03a4-118">Vea un ejemplo de código de tiempo de ejecución de esta característica: [ejecutar](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span><span class="sxs-lookup"><span data-stu-id="b03a4-118">See a run-time code example of this feature: [Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel).</span></span>  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b03a4-119">Cualquier método la puede iniciar si se ha producido un error de registro del contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-119">Can be thrown by any method if there has been a data context registration error.</span></span></exception>
    <related type="Article" href="https://msdn.microsoft.com/library/ee5dd2fb-5bb8-4bd7-a13d-d0a2659c3870"><span data-ttu-id="b03a4-120">Personalización del modelo de datos dinámicos de ASP.NET</span><span class="sxs-lookup"><span data-stu-id="b03a4-120">ASP.NET Dynamic Data Model Customization</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/45e477c0-5c6b-41f9-b2d0-2808fb4f6537"><span data-ttu-id="b03a4-121">Object Relational Designer (Object Relational Designer)</span><span class="sxs-lookup"><span data-stu-id="b03a4-121">Object Relational Designer (O/R Designer)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="b03a4-122">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="b03a4-122">LINQ to SQL</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="b03a4-123">Cómo: definir una ruta</span><span class="sxs-lookup"><span data-stu-id="b03a4-123">How to: Define a Route</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b03a4-124">Crea una nueva instancia de la clase <see cref="T:System.Web.DynamicData.MetaModel" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-124">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b03a4-125">Crea una nueva instancia de la clase <see cref="T:System.Web.DynamicData.MetaModel" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-125">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-126">Se suele llamar a la <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor en el `Application_Start` método del archivo Global.asax.</span><span class="sxs-lookup"><span data-stu-id="b03a4-126">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b03a4-127">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor para realizar las tareas siguientes:</span><span class="sxs-lookup"><span data-stu-id="b03a4-127">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="b03a4-128">Crear una instancia de la <xref:System.Web.DynamicData.MetaModel> clase.</span><span class="sxs-lookup"><span data-stu-id="b03a4-128">Instantiate the <xref:System.Web.DynamicData.MetaModel> class.</span></span>  
  
-   <span data-ttu-id="b03a4-129">Inicializar y registrar el <xref:System.Web.DynamicData.MetaModel> instancia.</span><span class="sxs-lookup"><span data-stu-id="b03a4-129">Initialize and register the <xref:System.Web.DynamicData.MetaModel> instance.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaModel (bool registerGlobally);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool registerGlobally) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (registerGlobally As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaModel(bool registerGlobally);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaModel : bool -&gt; System.Web.DynamicData.MetaModel" Usage="new System.Web.DynamicData.MetaModel registerGlobally" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="registerGlobally" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="registerGlobally"><span data-ttu-id="b03a4-130">Es <see langword="true" /> para indicar que el modelo se registra globalmente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-130"><see langword="true" /> to indicate that the model is registered globally; otherwise <see langword="false" />.</span></span> <span data-ttu-id="b03a4-131">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-131">The default is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="b03a4-132">Crea una nueva instancia de la clase <see cref="T:System.Web.DynamicData.MetaModel" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-132">Instantiates a new instance of the <see cref="T:System.Web.DynamicData.MetaModel" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-133">Este constructor determina si el modelo de datos se registra de forma global para que se puede recuperar utilizando la <xref:System.Web.DynamicData.MetaModel.GetModel%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b03a4-133">This constructor determines whether the data model is registered globally so that it can be retrieved using the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method.</span></span> <span data-ttu-id="b03a4-134">Permite crear varios modelos y usar los mismos tipos de entidad al tiempo que evita conflictos de tipo.</span><span class="sxs-lookup"><span data-stu-id="b03a4-134">It enables you to create multiple models and use the same entity types while avoiding type conflicts.</span></span>  
  
 <span data-ttu-id="b03a4-135">Se suele llamar a la <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor en el `Application_Start` método del archivo Global.asax.</span><span class="sxs-lookup"><span data-stu-id="b03a4-135">You typically call the <xref:System.Web.DynamicData.MetaModel.%23ctor%2A> constructor in the `Application_Start` method of the Global.asax file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.DynamicData.MetaTable CreateTable (System.Web.DynamicData.ModelProviders.TableProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.DynamicData.MetaTable CreateTable(class System.Web.DynamicData.ModelProviders.TableProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.CreateTable(System.Web.DynamicData.ModelProviders.TableProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable (provider As TableProvider) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::DynamicData::MetaTable ^ CreateTable(System::Web::DynamicData::ModelProviders::TableProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable&#xA;override this.CreateTable : System.Web.DynamicData.ModelProviders.TableProvider -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.CreateTable provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.Web.DynamicData.ModelProviders.TableProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b03a4-136">Proveedor de la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-136">The provider for the table.</span></span></param>
        <summary><span data-ttu-id="b03a4-137">Crea una instancia de un objeto <see cref="T:System.Web.DynamicData.MetaTable" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-137">Instantiates a <see cref="T:System.Web.DynamicData.MetaTable" /> object.</span></span></summary>
        <returns><span data-ttu-id="b03a4-138">Nueva instancia de la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-138">A new instance of the table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-139">El <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> se puede invalidar el método para crear una instancia de un tipo derivado.</span><span class="sxs-lookup"><span data-stu-id="b03a4-139">The <xref:System.Web.DynamicData.MetaModel.CreateTable%2A> method can be overridden to instantiate a derived type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="T:System.Web.DynamicData.ModelProviders.TableProvider" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.DynamicData.MetaModel Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::DynamicData::MetaModel ^ Default { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b03a4-140">Obtiene la primera instancia de un modelo de datos creado por la aplicación.</span><span class="sxs-lookup"><span data-stu-id="b03a4-140">Gets the first instance of a data model that is created by the application.</span></span></summary>
        <value><span data-ttu-id="b03a4-141">Instancia del modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-141">The data-model instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-142">Esta propiedad proporciona una manera sencilla de hacer referencia a la instancia de modelo de datos predeterminada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-142">This property provides a simple way to reference the default data-model instance.</span></span> <span data-ttu-id="b03a4-143">Si la aplicación usa varios modelos, debe proporcionar su propia manera de almacenar referencias a los modelos de datos adicionales.</span><span class="sxs-lookup"><span data-stu-id="b03a4-143">If the application uses multiple models, you must provide your own way to store references to the additional data models.</span></span> <span data-ttu-id="b03a4-144">Para encontrar un modelo de datos específica, llame a la <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="b03a4-144">To find a specific data model, call the <xref:System.Web.DynamicData.MetaModel.GetModel%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b03a4-145">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.Default%2A> propiedad en el <xref:System.Web.DynamicData.MetaModel.GetModel%2A> método para obtener el modelo de datos de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-145">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Default%2A> property in the <xref:System.Web.DynamicData.MetaModel.GetModel%2A> method to get the default data model.</span></span>  
  
 <span data-ttu-id="b03a4-146">Para obtener un ejemplo completo, vea el <xref:System.Web.DynamicData.MetaModel> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="b03a4-146">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DynamicDataFolderVirtualPath">
      <MemberSignature Language="C#" Value="public string DynamicDataFolderVirtualPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DynamicDataFolderVirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicDataFolderVirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DynamicDataFolderVirtualPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicDataFolderVirtualPath : string with get, set" Usage="System.Web.DynamicData.MetaModel.DynamicDataFolderVirtualPath" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.DynamicDataFolderVirtualPath</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b03a4-147">Obtiene o establece la ruta de acceso virtual de la carpeta DynamicData en el sitio web.</span><span class="sxs-lookup"><span data-stu-id="b03a4-147">Gets or sets the virtual path of the DynamicData folder in the Web site.</span></span></summary>
        <value><span data-ttu-id="b03a4-148">Ruta de acceso virtual de la carpeta DynamicData.</span><span class="sxs-lookup"><span data-stu-id="b03a4-148">The virtual path of the DynamicData folder.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-149">Esta propiedad le permite cambiar la ruta de acceso virtual de la carpeta DynamicData.</span><span class="sxs-lookup"><span data-stu-id="b03a4-149">This property enables you to change the virtual path of the DynamicData folder.</span></span> <span data-ttu-id="b03a4-150">El valor predeterminado es "~/DynamicData".</span><span class="sxs-lookup"><span data-stu-id="b03a4-150">The default value is "~/DynamicData".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.EntityTemplateFactory EntityTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTemplateFactory As EntityTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::EntityTemplateFactory ^ EntityTemplateFactory { System::Web::DynamicData::EntityTemplateFactory ^ get(); void set(System::Web::DynamicData::EntityTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityTemplateFactory : System.Web.DynamicData.EntityTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.EntityTemplateFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.EntityTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b03a4-151">Obtiene o establece el objeto <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> asociado al modelo.</span><span class="sxs-lookup"><span data-stu-id="b03a4-151">Gets or sets the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="b03a4-152">Instancia del objeto <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> asociado al modelo.</span><span class="sxs-lookup"><span data-stu-id="b03a4-152">An instance of the <see cref="T:System.Web.DynamicData.EntityTemplateFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldTemplateFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.IFieldTemplateFactory FieldTemplateFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FieldTemplateFactory As IFieldTemplateFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::IFieldTemplateFactory ^ FieldTemplateFactory { System::Web::DynamicData::IFieldTemplateFactory ^ get(); void set(System::Web::DynamicData::IFieldTemplateFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FieldTemplateFactory : System.Web.DynamicData.IFieldTemplateFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FieldTemplateFactory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaModel.FieldTemplateFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.IFieldTemplateFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b03a4-153">Obtiene o establece una interfaz <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> personalizada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-153">Gets or sets a custom <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></summary>
        <value><span data-ttu-id="b03a4-154">Interfaz <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-154">The <see cref="T:System.Web.DynamicData.IFieldTemplateFactory" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-155">El <xref:System.Web.DynamicData.IFieldTemplateFactory> interfaz le permite especificar qué plantillas de campo se crean para las columnas de tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-155">The <xref:System.Web.DynamicData.IFieldTemplateFactory> interface lets you specify which field templates are created for the table columns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterFactory">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.FilterFactory FilterFactory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.FilterFactory FilterFactory" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterFactory As FilterFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::FilterFactory ^ FilterFactory { System::Web::DynamicData::FilterFactory ^ get(); void set(System::Web::DynamicData::FilterFactory ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterFactory : System.Web.DynamicData.FilterFactory with get, set" Usage="System.Web.DynamicData.MetaModel.FilterFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.FilterFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b03a4-156">Obtiene o establece el objeto <see cref="T:System.Web.DynamicData.FilterFactory" /> asociado al modelo.</span><span class="sxs-lookup"><span data-stu-id="b03a4-156">Gets or sets the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></summary>
        <value><span data-ttu-id="b03a4-157">Instancia del objeto <see cref="T:System.Web.DynamicData.FilterFactory" /> asociado al modelo.</span><span class="sxs-lookup"><span data-stu-id="b03a4-157">An instance of the <see cref="T:System.Web.DynamicData.FilterFactory" /> object that is associated with the model.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetActionPath">
      <MemberSignature Language="C#" Value="public string GetActionPath (string tableName, string action, object row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetActionPath(string tableName, string action, object row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetActionPath(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetActionPath (tableName As String, action As String, row As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetActionPath(System::String ^ tableName, System::String ^ action, System::Object ^ row);" />
      <MemberSignature Language="F#" Value="abstract member GetActionPath : string * string * obj -&gt; string&#xA;override this.GetActionPath : string * string * obj -&gt; string" Usage="metaModel.GetActionPath (tableName, action, row)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.GetActionPath(System.String,System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="row" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="b03a4-158">Nombre de la tabla a la que se aplica la acción.</span><span class="sxs-lookup"><span data-stu-id="b03a4-158">The name of the table that the action applies to.</span></span></param>
        <param name="action"><span data-ttu-id="b03a4-159">Acción que se va a aplicar a la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-159">The action to apply to the table.</span></span></param>
        <param name="row"><span data-ttu-id="b03a4-160">Objeto que representa una sola fila de datos de una tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-160">An object that represents a single row of data in a table.</span></span> <span data-ttu-id="b03a4-161"><paramref name="row" /> se usa para proporcionar los valores de los parámetros de cadena de consulta.</span><span class="sxs-lookup"><span data-stu-id="b03a4-161"><paramref name="row" /> is used to provide values for query-string parameters.</span></span></param>
        <summary><span data-ttu-id="b03a4-162">Devuelve la ruta de acción que está asociada a una tabla concreta.</span><span class="sxs-lookup"><span data-stu-id="b03a4-162">Returns the action path that is associated with a specific table.</span></span></summary>
        <returns><span data-ttu-id="b03a4-163">Dirección URL asociada a la ruta.</span><span class="sxs-lookup"><span data-stu-id="b03a4-163">The URL that is associated with the route.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-164">La ruta se determina mediante la combinación del nombre de tabla y la acción.</span><span class="sxs-lookup"><span data-stu-id="b03a4-164">The route is determined by the combination of the table name and action.</span></span>  
  
 <span data-ttu-id="b03a4-165">[Ejecute](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) un ejemplo en línea de esta característica.</span><span class="sxs-lookup"><span data-stu-id="b03a4-165">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=PathModel.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b03a4-166">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> método para evaluar la ruta de enrutamiento (determinar la dirección URL) para una tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-166">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetActionPath%28System.String%2CSystem.String%2CSystem.Object%29> method to evaluate the routing path (determine the URL) for a specified table.</span></span> <span data-ttu-id="b03a4-167">Para obtener un ejemplo completo, consulte <xref:System.Web.DynamicData.MetaModel>.</span><span class="sxs-lookup"><span data-stu-id="b03a4-167">For a complete example, see <xref:System.Web.DynamicData.MetaModel>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#23](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#23)]
 [!code-vb[System.Web.DynamicData.MetaModel#23](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModel">
      <MemberSignature Language="C#" Value="public static System.Web.DynamicData.MetaModel GetModel (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.DynamicData.MetaModel GetModel(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetModel(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetModel (contextType As Type) As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::DynamicData::MetaModel ^ GetModel(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="static member GetModel : Type -&gt; System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaModel.GetModel contextType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="b03a4-168">Tipo del contexto de datos tal y como se define en el modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-168">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="b03a4-169">Devuelve la instancia del modelo de datos que corresponde al contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="b03a4-169">Returns the data-model instance for the specified context.</span></span></summary>
        <returns><span data-ttu-id="b03a4-170">Modelo de datos que está asociado al tipo de contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="b03a4-170">The data model that is associated with the specified context type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b03a4-171">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> método para realizar las siguientes tareas:</span><span class="sxs-lookup"><span data-stu-id="b03a4-171">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetModel%28System.Type%29> method to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="b03a4-172">Obtener el modelo de datos de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-172">Getting the default data model.</span></span>  
  
-   <span data-ttu-id="b03a4-173">Obtener el modelo de datos especificado por el tipo de contexto pasado.</span><span class="sxs-lookup"><span data-stu-id="b03a4-173">Getting the data model specified by the passed context type.</span></span>  
  
 <span data-ttu-id="b03a4-174">Para obtener un ejemplo completo, vea el <xref:System.Web.DynamicData.MetaModel> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="b03a4-174">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#22](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/PathModel.aspx.cs#22)]
 [!code-vb[System.Web.DynamicData.MetaModel#22](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/PathModel.aspx.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b03a4-175">No se encontró la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-175">The table was not found.</span></span></exception>
        <summary><span data-ttu-id="b03a4-176">Devuelve los metadatos que describen una tabla de modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-176">Returns the metadata that describes a data model table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-177">La <xref:System.Web.DynamicData.MetaTable> objeto devuelto por los métodos sobrecargados contiene la información de metadatos que está asociada a la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-177">The <xref:System.Web.DynamicData.MetaTable> object that is returned by the overloaded methods contains the metadata information that is associated with the specified table.</span></span>  
  
 <span data-ttu-id="b03a4-178">[Ejecute](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) un ejemplo en línea de esta característica.</span><span class="sxs-lookup"><span data-stu-id="b03a4-178">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=GetTable.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b03a4-179">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.GetTable%2A> sobrecargar métodos para llevar a cabo las siguientes tareas:</span><span class="sxs-lookup"><span data-stu-id="b03a4-179">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> overloaded methods to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="b03a4-180">Obtener el <xref:System.Web.DynamicData.MetaTable> objeto de la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-180">Get the <xref:System.Web.DynamicData.MetaTable> object for the specified table.</span></span>  
  
-   <span data-ttu-id="b03a4-181">Obtener acceso a la información de metadatos que contiene el <xref:System.Web.DynamicData.MetaTable> objeto.</span><span class="sxs-lookup"><span data-stu-id="b03a4-181">Access the metadata information that is contained by the <xref:System.Web.DynamicData.MetaTable> object.</span></span>  
  
 <span data-ttu-id="b03a4-182">El ejemplo consta de una página y su archivo de código subyacente.</span><span class="sxs-lookup"><span data-stu-id="b03a4-182">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx#3)] -->
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/GetTable.aspx#3)] --> 
  
 [!code-csharp[System.Web.DynamicData.MetaModel#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#4)]
 [!code-vb[System.Web.DynamicData.MetaModel#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string uniqueTableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string uniqueTableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (uniqueTableName As String) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ uniqueTableName);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable uniqueTableName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="b03a4-183">Nombre que identifica la tabla en el modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-183">The name that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="b03a4-184">Devuelve los metadatos que están asociados a la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-184">Returns the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="b03a4-185">Metadatos que describen la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-185">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-186">El nombre de forma exclusiva identifica una tabla en el modelo de datos y se usa para generar la dirección URL relacionada para el enrutamiento.</span><span class="sxs-lookup"><span data-stu-id="b03a4-186">The name uniquely identifies a table in the data model and is used to generate the related URL for routing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b03a4-187">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> método para obtener los metadatos de la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-187">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="b03a4-188">Para obtener un ejemplo completo, consulte <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="b03a4-188">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#42](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#42)]
 [!code-vb[System.Web.DynamicData.MetaModel#42](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b03a4-189">No se encontró el nombre en el modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-189">The name was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (Type entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(class System.Type entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (entityType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(Type ^ entityType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="b03a4-190">Tipo que identifica la tabla en el modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-190">The type that identifies the table in the data model.</span></span></param>
        <summary><span data-ttu-id="b03a4-191">Devuelve los metadatos que describen la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-191">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="b03a4-192">Metadatos que describen la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-192">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b03a4-193">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> método para obtener los metadatos de la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-193">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="b03a4-194">Para obtener un ejemplo completo, consulte <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="b03a4-194">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#41](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#41)]
 [!code-vb[System.Web.DynamicData.MetaModel#41](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b03a4-195">No se encontró el tipo en el modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-195">The type was not found in the data model.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <Member MemberName="GetTable">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable GetTable (string tableName, Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.DynamicData.MetaTable GetTable(string tableName, class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.GetTable(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTable (tableName As String, contextType As Type) As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::DynamicData::MetaTable ^ GetTable(System::String ^ tableName, Type ^ contextType);" />
      <MemberSignature Language="F#" Value="member this.GetTable : string * Type -&gt; System.Web.DynamicData.MetaTable" Usage="metaModel.GetTable (tableName, contextType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="tableName"><span data-ttu-id="b03a4-196">Nombre de la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-196">The name of the table.</span></span></param>
        <param name="contextType"><span data-ttu-id="b03a4-197">Contexto de datos para buscar la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-197">The data context to search for the table.</span></span></param>
        <summary><span data-ttu-id="b03a4-198">Devuelve los metadatos que describen la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-198">Returns the metadata that describes the specified table.</span></span></summary>
        <returns><span data-ttu-id="b03a4-199">Metadatos que describen la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-199">The metadata that describes the specified table.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b03a4-200">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> método para obtener los metadatos de la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-200">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.GetTable%28System.String%2CSystem.Type%29> method to obtain the metadata for the specified table.</span></span> <span data-ttu-id="b03a4-201">Para obtener un ejemplo completo, consulte <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span><span class="sxs-lookup"><span data-stu-id="b03a4-201">For a complete example, see <xref:System.Web.DynamicData.MetaModel.GetTable%2A>.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#43](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/GetTable.aspx.cs#43)]
 [!code-vb[System.Web.DynamicData.MetaModel#43](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/gettable.aspx.vb#43)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b03a4-202">El valor de <paramref name="tablename" /> o <paramref name="contextType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-202"><paramref name="tablename" /> or <paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b03a4-203">El contexto no está registrado o la tabla no existe en el contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-203">The context is not registered or the table does not exist in the data context.</span></span></exception>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterContext">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b03a4-204">Registra el contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-204">Registers the data context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-205">Puede definir información de inicialización del contexto de datos mediante el uso de las propiedades de la <xref:System.Web.DynamicData.ContextConfiguration> clase.</span><span class="sxs-lookup"><span data-stu-id="b03a4-205">You can define data-context initialization information by using the properties of the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; -&gt; unit" Usage="metaModel.RegisterContext contextFactory" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="b03a4-206">Generador que crea instancias del contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-206">The factory for instantiating the data context.</span></span></param>
        <summary><span data-ttu-id="b03a4-207">Registra el contexto de datos especificado por un generador de contextos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-207">Registers the data context that is specified by a context factory.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-208">Este método usa la información de contexto predeterminada definida por el <xref:System.Web.DynamicData.ContextConfiguration> clase.</span><span class="sxs-lookup"><span data-stu-id="b03a4-208">This method uses the default context information that is defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span> <span data-ttu-id="b03a4-209">Permite crear instancias del contexto de datos mediante su propio constructor.</span><span class="sxs-lookup"><span data-stu-id="b03a4-209">It enables you to instantiate the data context by using your own constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type -&gt; unit&#xA;override this.RegisterContext : Type -&gt; unit" Usage="metaModel.RegisterContext contextType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="b03a4-210">Tipo del contexto de datos tal y como se define en el modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-210">The type of the data context as defined in the data model.</span></span></param>
        <summary><span data-ttu-id="b03a4-211">Registra una instancia de contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-211">Registers a data-context instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-212">Este método usa la información de contexto predeterminada definida por el <xref:System.Web.DynamicData.ContextConfiguration> clase.</span><span class="sxs-lookup"><span data-stu-id="b03a4-212">This method uses the default context information as defined by the <xref:System.Web.DynamicData.ContextConfiguration> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider -&gt; unit" Usage="metaModel.RegisterContext dataModelProvider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="b03a4-213">Proveedor del modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-213">A provider for the data model.</span></span></param>
        <summary><span data-ttu-id="b03a4-214">Registra una instancia de contexto de datos utilizando un proveedor de modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-214">Registers a data context instance by using a data-model provider</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Func&lt;object&gt; contextFactory, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Func`1&lt;object&gt; contextFactory, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextFactory As Func(Of Object), configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Func&lt;System::Object ^&gt; ^ contextFactory, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Func&lt;obj&gt; * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextFactory, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Func{System.Object},System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextFactory" Type="System.Func&lt;System.Object&gt;" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextFactory"><span data-ttu-id="b03a4-215">Delegado que se usa para crear instancias del contexto del modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-215">A delegate that is used to instantiate the data model context.</span></span></param>
        <param name="configuration"><span data-ttu-id="b03a4-216">La información de contexto tal y como la define la clase <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-216">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="b03a4-217">Registra una instancia de contexto de datos con la configuración de contexto especificada, habilitando un constructor personalizado.</span><span class="sxs-lookup"><span data-stu-id="b03a4-217">Registers a data-context instance by using the specified context configuration and by enabling a custom constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-218">El generador de contextos de este método le permite crear una instancia de un contexto de modelo de datos mediante un constructor personalizado.</span><span class="sxs-lookup"><span data-stu-id="b03a4-218">The context factory in this method enables you to instantiate a data model context by using a custom constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b03a4-219">El valor de <paramref name="contextFactory" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-219"><paramref name="contextFactory" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b03a4-220">El tipo de contexto <paramref name="contextType" /> del que <paramref name="contextFactory" /> crea instancias no es válido.</span><span class="sxs-lookup"><span data-stu-id="b03a4-220">The <paramref name="contextType" /> that is instantiated by <paramref name="contextFactory" /> is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public void RegisterContext (Type contextType, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Type contextType, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterContext (contextType As Type, configuration As ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(Type ^ contextType, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : Type * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (contextType, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Type,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextType" Type="System.Type" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="contextType"><span data-ttu-id="b03a4-221">Tipo del contexto de datos tal y como se define en el modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-221">The type of the data context as defined in the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="b03a4-222">La información de configuración del contexto, tal y como la define la clase <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-222">The configuration information for the context, as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="b03a4-223">Registra una instancia de contexto de datos con la configuración de contexto especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-223">Registers a data-context instance by using the specified context configuration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b03a4-224">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> método para registrar un contexto de datos con la técnica scaffolding habilitada, tal y como especifica la `configuration` parámetro.</span><span class="sxs-lookup"><span data-stu-id="b03a4-224">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.RegisterContext%28System.Type%2CSystem.Web.DynamicData.ContextConfiguration%29> method to register a data context with scaffolding enabled, as specified by the `configuration` parameter.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#99](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/global.asax.cs#99)]
 [!code-vb[System.Web.DynamicData.MetaModel#99](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/global.asax.vb#99)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b03a4-225">El valor de <paramref name="contextType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-225"><paramref name="contextType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RegisterContext">
      <MemberSignature Language="C#" Value="public virtual void RegisterContext (System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, System.Web.DynamicData.ContextConfiguration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterContext(class System.Web.DynamicData.ModelProviders.DataModelProvider dataModelProvider, class System.Web.DynamicData.ContextConfiguration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterContext(System::Web::DynamicData::ModelProviders::DataModelProvider ^ dataModelProvider, System::Web::DynamicData::ContextConfiguration ^ configuration);" />
      <MemberSignature Language="F#" Value="abstract member RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit&#xA;override this.RegisterContext : System.Web.DynamicData.ModelProviders.DataModelProvider * System.Web.DynamicData.ContextConfiguration -&gt; unit" Usage="metaModel.RegisterContext (dataModelProvider, configuration)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaModel.RegisterContext(System.Web.DynamicData.ModelProviders.DataModelProvider,System.Web.DynamicData.ContextConfiguration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataModelProvider" Type="System.Web.DynamicData.ModelProviders.DataModelProvider" />
        <Parameter Name="configuration" Type="System.Web.DynamicData.ContextConfiguration" />
      </Parameters>
      <Docs>
        <param name="dataModelProvider"><span data-ttu-id="b03a4-226">Proveedor del modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-226">A provider for the data model.</span></span></param>
        <param name="configuration"><span data-ttu-id="b03a4-227">La información de contexto tal y como la define la clase <see cref="T:System.Web.DynamicData.ContextConfiguration" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-227">The context information as defined by the <see cref="T:System.Web.DynamicData.ContextConfiguration" /> class.</span></span></param>
        <summary><span data-ttu-id="b03a4-228">Registra una instancia de contexto de datos con la configuración de contexto especificada, habilitando un proveedor de modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-228">Registers a data-context instance by using the specified context configuration and by enabling a data-model provider.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b03a4-229">El valor de <paramref name="dataModelProvider" /> o <paramref name="configuration" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-229"><paramref name="dataModelProvider" /> or <paramref name="configuration" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b03a4-230"><paramref name="contextType" /> ya se ha registrado.</span><span class="sxs-lookup"><span data-stu-id="b03a4-230"><paramref name="contextType" /> is already registered.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetRegistrationException">
      <MemberSignature Language="C#" Value="public static void ResetRegistrationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetRegistrationException() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.ResetRegistrationException" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ResetRegistrationException ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ResetRegistrationException();" />
      <MemberSignature Language="F#" Value="static member ResetRegistrationException : unit -&gt; unit" Usage="System.Web.DynamicData.MetaModel.ResetRegistrationException " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b03a4-231">Restablece cualquier error de registro de contexto anterior que se haya producido.</span><span class="sxs-lookup"><span data-stu-id="b03a4-231">Resets any previous context registration error that might have occurred.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-232">Cuando se produce un error durante el registro de contexto de datos, la excepción se almacena en caché y se produce en todas las operaciones subsiguientes.</span><span class="sxs-lookup"><span data-stu-id="b03a4-232">When an error occurs during data-context registration, the exception is cached and thrown on all subsequent operations.</span></span> <span data-ttu-id="b03a4-233">Por ejemplo, si se produce un error al iniciar la aplicación, se produce en cada solicitud.</span><span class="sxs-lookup"><span data-stu-id="b03a4-233">For example, if an error occurs at application start, it is thrown on every request.</span></span> <span data-ttu-id="b03a4-234">Llame a este método para borrar el error y habilitar un nuevo registro de contexto que se realizará.</span><span class="sxs-lookup"><span data-stu-id="b03a4-234">Call this method to clear the error and to enable a new context registration to be performed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tables">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt; Tables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Web.DynamicData.MetaTable&gt; Tables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.Tables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tables As ReadOnlyCollection(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ Tables { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tables : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.Tables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b03a4-235">Obtiene una colección de todas las tablas que forman parte del modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-235">Gets a collection of all the tables that are part of the data model.</span></span></summary>
        <value><span data-ttu-id="b03a4-236">Colección que contiene las tablas que pertenecen al modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-236">A collection that contains the tables that belong to the data model.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-237">La colección contiene todas las tablas del modelo de datos, que incluye las tablas que no son visibles (no forman parte de scaffolding de datos dinámicos).</span><span class="sxs-lookup"><span data-stu-id="b03a4-237">The collection contains all the tables in the data model, which includes the tables that are not visible (are not part of Dynamic Data scaffolding).</span></span>  
  
 <span data-ttu-id="b03a4-238">[Ejecute](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) un ejemplo en línea de esta característica.</span><span class="sxs-lookup"><span data-stu-id="b03a4-238">[Run](https://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.MetaModel&spage=TablesMenu.aspx) an online example of this feature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b03a4-239">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.Tables%2A> y <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> propiedades para realizar las tareas siguientes:</span><span class="sxs-lookup"><span data-stu-id="b03a4-239">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.Tables%2A> and <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> properties to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="b03a4-240">Obtiene una colección de todas las tablas en un modelo de datos y mostrarlos en un `GridView` control.</span><span class="sxs-lookup"><span data-stu-id="b03a4-240">Get a collection of all the tables in a data model and show them in a `GridView` control.</span></span>  
  
-   <span data-ttu-id="b03a4-241">Obtiene una colección de las tablas visibles en un modelo de datos y mostrarlos en un `GridView` control.</span><span class="sxs-lookup"><span data-stu-id="b03a4-241">Get a collection of the visible tables in a data model and show them in a `GridView` control.</span></span>  
  
 <span data-ttu-id="b03a4-242">El ejemplo consta de una página y su archivo de código subyacente.</span><span class="sxs-lookup"><span data-stu-id="b03a4-242">The example consists of a page and its code-behind file.</span></span>  
  
 [!code-aspx-csharp[System.Web.DynamicData.MetaModel#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx#5)]
 [!code-aspx-vb[System.Web.DynamicData.MetaModel#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx#5)]  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#6)]
 [!code-vb[System.Web.DynamicData.MetaModel#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetTable">
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b03a4-243">Intenta obtener los metadatos que están asociados a la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-243">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (string uniqueTableName, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(string uniqueTableName, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.String,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (uniqueTableName As String, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(System::String ^ uniqueTableName, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : string *  -&gt; bool" Usage="metaModel.TryGetTable (uniqueTableName, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueTableName" Type="System.String" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="uniqueTableName"><span data-ttu-id="b03a4-244">Nombre que identifica de manera única la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-244">The name that uniquely identifies the table.</span></span></param>
        <param name="table"><span data-ttu-id="b03a4-245">Cuando este método regresa, si ha encontrado la tabla solicitada, contiene los metadatos de dicha tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-245">When this method returns, and if it has found the requested table, contains the metadata for that table.</span></span> <span data-ttu-id="b03a4-246">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="b03a4-246">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="b03a4-247">Intenta obtener los metadatos que están asociados a la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-247">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="b03a4-248">Es <see langword="true" /> si se encuentran los metadatos de la tabla; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-248"><see langword="true" /> if the table metadata is found; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-249">Este método obtiene los metadatos que están asociado a la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-249">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="b03a4-250">Si no se encuentra en la tabla, este método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="b03a4-250">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="b03a4-251">Esto difiere de la <xref:System.Web.DynamicData.MetaModel.GetTable%2A> método, que produce una excepción si no se encuentra en la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-251">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b03a4-252">El valor de <paramref name="uniqueTableName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-252"><paramref name="uniqueTableName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetTable">
      <MemberSignature Language="C#" Value="public bool TryGetTable (Type entityType, out System.Web.DynamicData.MetaTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetTable(class System.Type entityType, [out] class System.Web.DynamicData.MetaTable&amp; table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaModel.TryGetTable(System.Type,System.Web.DynamicData.MetaTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetTable (entityType As Type, ByRef table As MetaTable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetTable(Type ^ entityType, [Runtime::InteropServices::Out] System::Web::DynamicData::MetaTable ^ % table);" />
      <MemberSignature Language="F#" Value="member this.TryGetTable : Type *  -&gt; bool" Usage="metaModel.TryGetTable (entityType, table)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="System.Type" />
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entityType"><span data-ttu-id="b03a4-253">Tipo de tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-253">The table type.</span></span></param>
        <param name="table"><span data-ttu-id="b03a4-254">Cuando este método devuelve un valor, si se ha encontrado la tabla solicitada, contiene los metadatos de dicha tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-254">When this method returns, and if the requested table has been found, contains the metadata for the specified table.</span></span> <span data-ttu-id="b03a4-255">Este parámetro se pasa sin inicializar.</span><span class="sxs-lookup"><span data-stu-id="b03a4-255">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="b03a4-256">Intenta obtener los metadatos que están asociados a la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-256">Attempts to get the metadata that is associated with the specified table.</span></span></summary>
        <returns><span data-ttu-id="b03a4-257">Es <see langword="true" /> si se encuentran los metadatos de la tabla; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-257"><see langword="true" /> if the table metadata is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b03a4-258">Este método obtiene los metadatos que están asociado a la tabla especificada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-258">This method gets the metadata that is associated with the specified table.</span></span> <span data-ttu-id="b03a4-259">Si no se encuentra en la tabla, este método devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="b03a4-259">If the table is not found, this method returns `false`.</span></span> <span data-ttu-id="b03a4-260">Esto difiere de la <xref:System.Web.DynamicData.MetaModel.GetTable%2A> método, que produce una excepción si no se encuentra en la tabla.</span><span class="sxs-lookup"><span data-stu-id="b03a4-260">This differs from the <xref:System.Web.DynamicData.MetaModel.GetTable%2A> method, which throws an exception if the table is not found.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b03a4-261">El valor de <paramref name="entityType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b03a4-261"><paramref name="entityType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="VisibleTables">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt; VisibleTables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;class System.Web.DynamicData.MetaTable&gt; VisibleTables" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisibleTables As List(Of MetaTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ VisibleTables { System::Collections::Generic::List&lt;System::Web::DynamicData::MetaTable ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VisibleTables : System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;" Usage="System.Web.DynamicData.MetaModel.VisibleTables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.Web.DynamicData.MetaTable&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b03a4-262">Obtiene una colección de las tablas visibles del modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-262">Gets a collection of the visible tables in the data model.</span></span></summary>
        <value><span data-ttu-id="b03a4-263">Una tabla visible se refiere a una tabla que tiene la técnica scaffolding habilitada.</span><span class="sxs-lookup"><span data-stu-id="b03a4-263">A visible table refers to a table that has scaffolding enabled.</span></span> <span data-ttu-id="b03a4-264">Esto significa que es una tabla para la que existe una página List.aspx.</span><span class="sxs-lookup"><span data-stu-id="b03a4-264">This means that it is a table for which a List.aspx page exists.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b03a4-265">El ejemplo siguiente muestra cómo usar el <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> propiedad para obtener una colección de las tablas visibles del modelo de datos.</span><span class="sxs-lookup"><span data-stu-id="b03a4-265">The following example shows how to use the <xref:System.Web.DynamicData.MetaModel.VisibleTables%2A> property to get a collection of the visible tables in the data model.</span></span> <span data-ttu-id="b03a4-266">Para obtener un ejemplo completo, vea el <xref:System.Web.DynamicData.MetaModel> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="b03a4-266">For a complete example, see the <xref:System.Web.DynamicData.MetaModel> class overview.</span></span>  
  
 [!code-csharp[System.Web.DynamicData.MetaModel#62](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/CS/TablesMenu.aspx.cs#62)]
 [!code-vb[System.Web.DynamicData.MetaModel#62](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.DynamicData.MetaModel/VB/TablesMenu.aspx.vb#62)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
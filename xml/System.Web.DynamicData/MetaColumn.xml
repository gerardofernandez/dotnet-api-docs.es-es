<Type Name="MetaColumn" FullName="System.Web.DynamicData.MetaColumn">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d8d893fb62966a8db4730b7354f9f1690d3cd18" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51938230" /></Metadata><TypeSignature Language="C#" Value="public class MetaColumn : System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MetaColumn extends System.Object implements class System.Web.DynamicData.IFieldFormattingOptions" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.MetaColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class MetaColumn&#xA;Implements IFieldFormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetaColumn : System::Web::DynamicData::IFieldFormattingOptions" />
  <TypeSignature Language="F#" Value="type MetaColumn = class&#xA;    interface IFieldFormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IFieldFormattingOptions</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7d0be-101">Representa una columna de base de datos que los datos dinámicos utilizan.</span><span class="sxs-lookup"><span data-stu-id="7d0be-101">Represents a database column that is used by Dynamic Data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-102">En las aplicaciones de datos dinámicos de ASP.NET, el <xref:System.Web.DynamicData.MetaColumn> clase representa un campo de base de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-102">In ASP.NET Dynamic Data applications, the <xref:System.Web.DynamicData.MetaColumn> class represents a database field.</span></span> <span data-ttu-id="7d0be-103">La <xref:System.Web.DynamicData.MetaColumn> clase le permite recuperar información sobre el campo de datos como la información de tipo y los metadatos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-103">The <xref:System.Web.DynamicData.MetaColumn> class lets you retrieve information about the data field such as type and metadata information.</span></span>  
  
 <span data-ttu-id="7d0be-104">Puede recuperar la tabla que pertenece el campo de datos utilizando el <xref:System.Web.DynamicData.MetaColumn.Table%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-104">You can retrieve the table that the data field belongs to by using the <xref:System.Web.DynamicData.MetaColumn.Table%2A> property.</span></span> <span data-ttu-id="7d0be-105">También puede recuperar el modelo de datos mediante el <xref:System.Web.DynamicData.MetaColumn.Model%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-105">You can also retrieve the data model by using the <xref:System.Web.DynamicData.MetaColumn.Model%2A> property.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.DynamicData.MetaChildrenColumn" />
    <altmember cref="T:System.Web.DynamicData.MetaForeignKeyColumn" />
    <related type="Article" href="https://msdn.microsoft.com/library/78c7fcd7-5f38-46a0-a4bc-48eff3c8a512"><span data-ttu-id="7d0be-106">Información general de datos dinámicos de ASP.NET</span><span class="sxs-lookup"><span data-stu-id="7d0be-106">ASP.NET Dynamic Data Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MetaColumn (System.Web.DynamicData.MetaTable table, System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.DynamicData.MetaTable table, class System.Web.DynamicData.ModelProviders.ColumnProvider columnProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.#ctor(System.Web.DynamicData.MetaTable,System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MetaColumn(System::Web::DynamicData::MetaTable ^ table, System::Web::DynamicData::ModelProviders::ColumnProvider ^ columnProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.DynamicData.MetaColumn : System.Web.DynamicData.MetaTable * System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; System.Web.DynamicData.MetaColumn" Usage="new System.Web.DynamicData.MetaColumn (table, columnProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="table" Type="System.Web.DynamicData.MetaTable" />
        <Parameter Name="columnProvider" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="table"><span data-ttu-id="7d0be-107">Metatabla que contiene la columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-107">The meta table that contains the column.</span></span></param>
        <param name="columnProvider"><span data-ttu-id="7d0be-108">Proveedor de columnas.</span><span class="sxs-lookup"><span data-stu-id="7d0be-108">The column provider.</span></span></param>
        <summary><span data-ttu-id="7d0be-109">Inicializa una nueva instancia de la clase <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-109">Initializes a new instance of the <see cref="T:System.Web.DynamicData.MetaColumn" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowInitialValue">
      <MemberSignature Language="C#" Value="public bool AllowInitialValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowInitialValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowInitialValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowInitialValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowInitialValue : bool" Usage="System.Web.DynamicData.MetaColumn.AllowInitialValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.AllowInitialValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-110">Obtiene o establece un valor que especifica si una columna permite la inserción de un valor.</span><span class="sxs-lookup"><span data-stu-id="7d0be-110">Gets or sets a value that specifies whether a column enables a value to be inserted.</span></span></summary>
        <value><span data-ttu-id="7d0be-111">Es <see langword="true" /> si la columna permite la inserción de un valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-111"><see langword="true" /> if the column enables a value to be inserted; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-112">El valor predeterminado es `false` cuando la columna es de solo lectura y `true` cuando la columna no es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="7d0be-112">The default value is `false` when the column is read-only and `true` when the column is not read-only.</span></span> <span data-ttu-id="7d0be-113">El valor predeterminado puede invalidarse mediante el uso de la <xref:System.ComponentModel.DataAnnotations.EditableAttribute> atributo.</span><span class="sxs-lookup"><span data-stu-id="7d0be-113">The default value can be overridden by using the <xref:System.ComponentModel.DataAnnotations.EditableAttribute> attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public bool ApplyFormatInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ApplyFormatInEditMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool" Usage="System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ApplyFormatInEditMode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ApplyFormatInEditMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-114">Obtiene un valor que indica si la cadena de formato especificada por la propiedad <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> se aplica a los valores de campo cuando el control enlazado a datos que contiene el campo de datos representado por el objeto <see cref="T:System.Web.DynamicData.MetaColumn" /> se encuentra en modo de edición.</span><span class="sxs-lookup"><span data-stu-id="7d0be-114">Gets a value that indicates whether the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode.</span></span></summary>
        <value><span data-ttu-id="7d0be-115">Es <see langword="true" /> si la cadena de formato especificada por la propiedad <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> se aplica a los valores de campo cuando el control enlazado a datos que contiene el campo de datos representado por el objeto <see cref="T:System.Web.DynamicData.MetaColumn" /> se encuentra en modo de edición; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-115"><see langword="true" /> if the formatting string specified by the <see cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" /> property is applied to field values when the data-bound control that contains the data field that is represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object is in edit mode; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-116">El <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo se aplica al campo de datos y recupera el valor de la <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-116">The <xref:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7d0be-117">Si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> no se encuentra el atributo, esta propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> se aplica el atributo para recuperar información de formato.</span><span class="sxs-lookup"><span data-stu-id="7d0be-117">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ApplyFormatInEditMode" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Web.DynamicData.MetaColumn.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-118">Obtiene la colección de atributos de metadatos que se aplican al campo de datos representado por el objeto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-118">Gets the collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <value><span data-ttu-id="7d0be-119">Colección de atributos de metadatos que se aplican al campo de datos representado por el objeto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-119">The collection of metadata attributes that apply to the data field represented by the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAttributeCollection">
      <MemberSignature Language="C#" Value="protected virtual System.ComponentModel.AttributeCollection BuildAttributeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ComponentModel.AttributeCollection BuildAttributeCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.BuildAttributeCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BuildAttributeCollection () As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ComponentModel::AttributeCollection ^ BuildAttributeCollection();" />
      <MemberSignature Language="F#" Value="abstract member BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection&#xA;override this.BuildAttributeCollection : unit -&gt; System.ComponentModel.AttributeCollection" Usage="metaColumn.BuildAttributeCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d0be-120">Obtiene la colección de atributos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-120">Gets the attribute collection.</span></span></summary>
        <returns><span data-ttu-id="7d0be-121">Colección de atributos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-121">The attribute collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-122">Debe llamar a la <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> método antes de acceder a la <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-122">You must call the <xref:System.Web.DynamicData.MetaColumn.BuildAttributeCollection%2A> method before you access the <xref:System.Web.DynamicData.MetaColumn.Attributes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnType">
      <MemberSignature Language="C#" Value="public Type ColumnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ColumnType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ColumnType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnType : Type" Usage="System.Web.DynamicData.MetaColumn.ColumnType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ColumnType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-123">Obtiene el tipo del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-123">Gets the data field type.</span></span></summary>
        <value><span data-ttu-id="7d0be-124">Tipo del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-124">The data field type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-125">El <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> propiedad devuelve el tipo de common language runtime (CLR) del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-125">The <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property returns the common language runtime (CLR) type of the data field.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool" Usage="System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.ConvertEmptyStringToNull</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ConvertEmptyStringToNull</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-126">Obtiene un valor que indica si los valores de cadena vacía ("") se convierten automáticamente en valores <see langword="null" /> cuando se actualiza el campo de datos en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-126">Gets a value that indicates whether empty string values ("") are automatically converted to <see langword="null" /> values when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="7d0be-127">Es <see langword="true" /> si los valores de cadena vacía se convierten automáticamente en valores <see langword="null" /> cuando se actualiza el campo de datos en el origen de datos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-127"><see langword="true" /> if empty string values are automatically converted to <see langword="null" /> values when the data field is updated in the data source; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-128">El <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo se aplica al campo de datos y recupera el valor de la <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-128">The <xref:System.Web.DynamicData.MetaColumn.ConvertEmptyStringToNull%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7d0be-129">Si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> no se encuentra el atributo, esta propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> se aplica el atributo para recuperar información de formato.</span><span class="sxs-lookup"><span data-stu-id="7d0be-129">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.ConvertEmptyStringToNull" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public string DataFormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataFormatString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string" Usage="System.Web.DynamicData.MetaColumn.DataFormatString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.DataFormatString</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataFormatString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-130">Obtiene la cadena que especifica el formato de presentación del valor de campo.</span><span class="sxs-lookup"><span data-stu-id="7d0be-130">Gets the string that specifies the display format for the field value.</span></span></summary>
        <value><span data-ttu-id="7d0be-131">Cadena que especifica el formato de presentación del valor de campo.</span><span class="sxs-lookup"><span data-stu-id="7d0be-131">The string that specifies the display format for the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-132">El <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo se aplica al campo de datos y recupera el valor de la <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-132">The <xref:System.Web.DynamicData.MetaColumn.DataFormatString%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7d0be-133">Si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> no se encuentra el atributo, esta propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> se aplica el atributo para recuperar información de formato.</span><span class="sxs-lookup"><span data-stu-id="7d0be-133">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ApplyFormatInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="DataTypeAttribute">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.DataAnnotations.DataTypeAttribute DataTypeAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTypeAttribute As DataTypeAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DataAnnotations::DataTypeAttribute ^ DataTypeAttribute { System::ComponentModel::DataAnnotations::DataTypeAttribute ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataTypeAttribute : System.ComponentModel.DataAnnotations.DataTypeAttribute" Usage="System.Web.DynamicData.MetaColumn.DataTypeAttribute" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DataTypeAttribute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DataAnnotations.DataTypeAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-134">Obtiene el atributo <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> que se aplica al campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-134">Gets the <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-135">Atributo <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> que se aplica al campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-135">The <see cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" /> attribute that is applied to the data field.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj" Usage="System.Web.DynamicData.MetaColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DefaultValue</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-136">Obtiene el valor predeterminado del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-136">Gets the default value for the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-137">Valor predeterminado del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-137">The default value for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-138">El <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> propiedad se utiliza normalmente para rellenar previamente el valor del campo cuando se crea una nueva entrada.</span><span class="sxs-lookup"><span data-stu-id="7d0be-138">The <xref:System.Web.DynamicData.MetaColumn.DefaultValue%2A> property is typically used to pre-populate the field value when a new entry is created.</span></span> <span data-ttu-id="7d0be-139">Esta propiedad comprueba si un <xref:System.ComponentModel.DefaultValueAttribute> atributo se aplica al campo de datos y recupera el valor de la <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-139">This property verifies if a <xref:System.ComponentModel.DefaultValueAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DefaultValueAttribute.Value%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
        <altmember cref="P:System.ComponentModel.DefaultValueAttribute.Value" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Web.DynamicData.MetaColumn.Description" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-140">Obtiene la descripción del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-140">Gets the description for the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-141">Descripción del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-141">The description for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-142">El <xref:System.Web.DynamicData.MetaColumn.Description%2A> propiedad comprueba si un <xref:System.ComponentModel.DescriptionAttribute> atributo se aplica al campo de datos y recupera el valor de la <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-142">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DescriptionAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DescriptionAttribute.Description%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DescriptionAttribute" />
        <altmember cref="P:System.ComponentModel.DescriptionAttribute.Description" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.DynamicData.MetaColumn.DisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.DisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-143">Obtiene el nombre para mostrar del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-143">Gets the display name for the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-144">Nombre para mostrar del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-144">The display name for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-145">El <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> propiedad devuelve el nombre para mostrar descriptivo del campo de datos si se ha establecido uno, o el nombre del campo si no se ha especificado ningún nombre para mostrar.</span><span class="sxs-lookup"><span data-stu-id="7d0be-145">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property returns the friendly display name for the data field if one has been set, or the field name if no display name has been specified.</span></span> <span data-ttu-id="7d0be-146">El <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> propiedad comprueba si se ha establecido un nombre para mostrar descriptivo comprobando si un <xref:System.ComponentModel.DisplayNameAttribute> atributo se aplica al campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-146">The <xref:System.Web.DynamicData.MetaColumn.DisplayName%2A> property verifies if a friendly display name has been set by checking if a <xref:System.ComponentModel.DisplayNameAttribute> attribute is applied to the data field.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DisplayNameAttribute" />
      </Docs>
    </Member>
    <Member MemberName="EntityTypeProperty">
      <MemberSignature Language="C#" Value="public System.Reflection.PropertyInfo EntityTypeProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.PropertyInfo EntityTypeProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityTypeProperty As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::PropertyInfo ^ EntityTypeProperty { System::Reflection::PropertyInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityTypeProperty : System.Reflection.PropertyInfo" Usage="System.Web.DynamicData.MetaColumn.EntityTypeProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.EntityTypeProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-147">Obtiene un objeto que contiene los atributos de la propiedad que representa el campo de datos del tipo de entidad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-147">Gets an object that contains attributes of the property that represents the data field in the entity type.</span></span></summary>
        <value><span data-ttu-id="7d0be-148">Objeto que contiene los atributos de la propiedad que representa el campo de datos del tipo de entidad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-148">An object that contains attributes of the property that represents the data field in the entity type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterUIHint">
      <MemberSignature Language="C#" Value="public string FilterUIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterUIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterUIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterUIHint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterUIHint : string" Usage="System.Web.DynamicData.MetaColumn.FilterUIHint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.FilterUIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-149">Obtiene el valor de <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> que se utiliza para la columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-149">Gets the <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span></span></summary>
        <value><span data-ttu-id="7d0be-150">Valor de <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> que se utiliza para la columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-150">The <see cref="P:System.ComponentModel.DataAnnotations.FilterUIHintAttribute.FilterUIHint" /> value that is used for the column.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public bool HtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool" Usage="System.Web.DynamicData.MetaColumn.HtmlEncode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.HtmlEncode</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.HtmlEncode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-151">Obtiene un valor que indica si los valores de campo están codificados en HTML antes de mostrarse en un control enlazado a datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-151">Gets a value that indicates whether field values are HTML-encoded before they are displayed in a data-bound control.</span></span></summary>
        <value><span data-ttu-id="7d0be-152"><see langword="true" /> en todos los casos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-152"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberSignature Language="F#" Value="abstract member Initialize : unit -&gt; unit&#xA;override this.Initialize : unit -&gt; unit" Usage="metaColumn.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d0be-153">Inicializa datos que quizás no estén disponibles cuando se llame al constructor.</span><span class="sxs-lookup"><span data-stu-id="7d0be-153">Initializes data that might not be available when the constructor is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-154">Este método no se puede llamar directamente.</span><span class="sxs-lookup"><span data-stu-id="7d0be-154">This method cannot be called directly.</span></span> <span data-ttu-id="7d0be-155">Para personalizar la inicialización, puede derivar de esta clase e invalidar el `Initialize` método.</span><span class="sxs-lookup"><span data-stu-id="7d0be-155">To customize initialization, you can derive from this class and override the `Initialize` method.</span></span> <span data-ttu-id="7d0be-156">Si invalida este método, llame a la base del control `Initialize` método.</span><span class="sxs-lookup"><span data-stu-id="7d0be-156">If you override this method, call the base control's `Initialize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinaryData">
      <MemberSignature Language="C#" Value="public bool IsBinaryData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinaryData" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBinaryData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBinaryData { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBinaryData : bool" Usage="System.Web.DynamicData.MetaColumn.IsBinaryData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsBinaryData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-157">Obtiene un valor que indica si el campo de datos contiene datos binarios.</span><span class="sxs-lookup"><span data-stu-id="7d0be-157">Gets a value that indicates whether the data field contains binary data.</span></span></summary>
        <value><span data-ttu-id="7d0be-158">Es <see langword="true" /> si el campo de datos contiene datos binarios; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-158"><see langword="true" /> if the data field contains binary data; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsCustomProperty">
      <MemberSignature Language="C#" Value="public bool IsCustomProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomProperty" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCustomProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCustomProperty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCustomProperty : bool" Usage="System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsCustomProperty</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-159">Obtiene un valor que indica si el campo de datos existe en la base de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-159">Gets a value that indicates whether the data field exists in the database.</span></span></summary>
        <value><span data-ttu-id="7d0be-160">Es <see langword="true" /> si el campo de datos no existe en la base de datos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-160"><see langword="true" /> if the data field does not exist in the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-161">Use el <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> propiedad para determinar si un campo de datos está en la base de datos o si es una propiedad adicional que se ha agregado al objeto de contexto de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-161">Use the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property to determine whether a data field is in the database or if it is an extra property that was added to the data context object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFloatingPoint">
      <MemberSignature Language="C#" Value="public bool IsFloatingPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFloatingPoint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFloatingPoint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFloatingPoint { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFloatingPoint : bool" Usage="System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsFloatingPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-162">Obtiene un valor que indica si el campo de datos es un tipo de punto flotante.</span><span class="sxs-lookup"><span data-stu-id="7d0be-162">Gets a value that indicates whether the data field is a floating-point type.</span></span></summary>
        <value><span data-ttu-id="7d0be-163">Es <see langword="true" /> si el campo de datos es un tipo de punto flotante; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-163"><see langword="true" /> if the data field is a floating-point type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-164">Los tipos de `float`, `double`, y `decimal` son tipos de punto flotante.</span><span class="sxs-lookup"><span data-stu-id="7d0be-164">The types `float`, `double`, and `decimal` are floating point types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsForeignKeyComponent">
      <MemberSignature Language="C#" Value="public bool IsForeignKeyComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsForeignKeyComponent" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsForeignKeyComponent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsForeignKeyComponent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsForeignKeyComponent : bool" Usage="System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsForeignKeyComponent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-165">Obtiene un valor que indica si el campo de datos forma parte de una clave externa.</span><span class="sxs-lookup"><span data-stu-id="7d0be-165">Gets a value that indicates whether the data field is part of a foreign key.</span></span></summary>
        <value><span data-ttu-id="7d0be-166">Es <see langword="true" /> si el campo de datos forma parte de una clave externa; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-166"><see langword="true" /> if the data field is part of a foreign key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      </Docs>
    </Member>
    <Member MemberName="IsGenerated">
      <MemberSignature Language="C#" Value="public bool IsGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGenerated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsGenerated : bool" Usage="System.Web.DynamicData.MetaColumn.IsGenerated" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsGenerated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-167">Obtiene un valor que indica si el valor del campo de datos se genera automáticamente en la base de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-167">Gets a value that indicates whether the data field value is automatically generated in the database.</span></span></summary>
        <value><span data-ttu-id="7d0be-168">Es <see langword="true" /> si el valor del campo de datos se genera automáticamente en la base de datos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-168"><see langword="true" /> if the data field value is automatically generated in the database; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteger">
      <MemberSignature Language="C#" Value="public bool IsInteger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteger" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInteger As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInteger { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInteger : bool" Usage="System.Web.DynamicData.MetaColumn.IsInteger" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsInteger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-169">Obtiene un valor que indica si el tipo del campo de datos es un tipo entero.</span><span class="sxs-lookup"><span data-stu-id="7d0be-169">Gets a value that indicates whether the data field type is an integer type.</span></span></summary>
        <value><span data-ttu-id="7d0be-170">Es <see langword="true" /> si el tipo del campo de datos es un tipo entero; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-170"><see langword="true" /> if the data field type is an integer type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-171">Los tipos de `byte`, `short`, `int`, y `long` son tipos enteros.</span><span class="sxs-lookup"><span data-stu-id="7d0be-171">The types `byte`, `short`, `int`, and `long` are integer types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
      </Docs>
    </Member>
    <Member MemberName="IsLongString">
      <MemberSignature Language="C#" Value="public bool IsLongString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLongString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLongString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLongString { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLongString : bool" Usage="System.Web.DynamicData.MetaColumn.IsLongString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsLongString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-172">Obtiene un valor que indica si el tipo del campo de datos puede incluir cadenas largas.</span><span class="sxs-lookup"><span data-stu-id="7d0be-172">Gets a value that indicates whether the data field type can contain long strings.</span></span></summary>
        <value><span data-ttu-id="7d0be-173">Es <see langword="true" /> si el tipo del campo de datos puede incluir cadenas largas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-173"><see langword="true" /> if the data field type can contain long strings; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-174">Los tipos SQL `text`, `ntext`, `varchar`, y `nvarchar` puede incluir cadenas largas.</span><span class="sxs-lookup"><span data-stu-id="7d0be-174">The SQL types `text`, `ntext`, `varchar`, and `nvarchar` can contain long strings.</span></span> <span data-ttu-id="7d0be-175">El valor de la <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> propiedad se utiliza para determinar si se muestra la plantilla de campo TextBox o TextArea para permitir a los usuarios modificar el valor del campo.</span><span class="sxs-lookup"><span data-stu-id="7d0be-175">The value of the <xref:System.Web.DynamicData.MetaColumn.IsLongString%2A> property is used to determine whether the TextBox or TextArea field template is displayed to enable users to modify the field value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsString" />
        <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12"><span data-ttu-id="7d0be-176">Scaffolding de datos dinámicos de ASP.NET</span><span class="sxs-lookup"><span data-stu-id="7d0be-176">ASP.NET Dynamic Data Scaffolding</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKey">
      <MemberSignature Language="C#" Value="public bool IsPrimaryKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrimaryKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrimaryKey { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKey : bool" Usage="System.Web.DynamicData.MetaColumn.IsPrimaryKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsPrimaryKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-177">Obtiene un valor que indica si el campo de datos forma parte de la clave principal de la tabla.</span><span class="sxs-lookup"><span data-stu-id="7d0be-177">Gets a value that indicates whether the data field is part of the table's primary key.</span></span></summary>
        <value><span data-ttu-id="7d0be-178">Es <see langword="true" /> si el campo de datos forma parte de la clave principal de la tabla; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-178"><see langword="true" /> if the data field is part of the table's primary key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.DynamicData.MetaColumn.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-179">Obtiene un valor que indica si el campo de datos es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="7d0be-179">Gets a value that indicates whether the data field is read-only.</span></span></summary>
        <value><span data-ttu-id="7d0be-180"><see langword="true" /> si el campo de datos es de sólo lectura; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-180"><see langword="true" /> if the data field is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRequired">
      <MemberSignature Language="C#" Value="public bool IsRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRequired" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRequired : bool" Usage="System.Web.DynamicData.MetaColumn.IsRequired" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-181">Obtiene un valor que indica si el campo de datos requiere un valor.</span><span class="sxs-lookup"><span data-stu-id="7d0be-181">Gets a value that indicates whether the data field requires a value.</span></span></summary>
        <value><span data-ttu-id="7d0be-182">Es <see langword="true" /> si el campo de datos requiere un valor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-182"><see langword="true" /> if the data field requires a value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-183">El <xref:System.Web.DynamicData.MetaColumn.Description%2A> propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> atributo se aplica al campo de datos o si el esquema de base de datos contiene información sobre los datos de campo que se requiere en la base de datos para determinar si el campo de datos requiere un valor.</span><span class="sxs-lookup"><span data-stu-id="7d0be-183">The <xref:System.Web.DynamicData.MetaColumn.Description%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> attribute is applied to the data field or if the database schema contains information about the data field being required in the database to determine whether the data field requires a value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.Nullable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      </Docs>
    </Member>
    <Member MemberName="IsString">
      <MemberSignature Language="C#" Value="public bool IsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsString" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.IsString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsString { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsString : bool" Usage="System.Web.DynamicData.MetaColumn.IsString" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.IsString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-184">Obtiene un valor que indica si el tipo del campo de datos es un tipo de cadena.</span><span class="sxs-lookup"><span data-stu-id="7d0be-184">Gets a value that indicates whether the data field type is a string type.</span></span></summary>
        <value><span data-ttu-id="7d0be-185">Es <see langword="true" /> si el tipo del campo de datos es un tipo de cadena; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-185"><see langword="true" /> if the data field type is a string type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsLongString" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsBinaryData" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsFloatingPoint" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsInteger" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int" Usage="System.Web.DynamicData.MetaColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.MaxLength</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-186">Obtiene un valor que indica la longitud máxima de los datos que pueden almacenarse en el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-186">Gets a value that indicates the maximum length of data that can be stored in the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-187">Longitud máxima de los datos que pueden almacenarse en el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-187">The maximum length of data that can be stored in the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-188">El <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> atributo se aplica al campo de datos y recupera el valor de la <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-188">The <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength%2A> property.</span></span> <span data-ttu-id="7d0be-189">Si un <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> atributo no se aplica al campo de datos, el <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> propiedad usa el tipo de base de datos para recuperar la longitud máxima permitida.</span><span class="sxs-lookup"><span data-stu-id="7d0be-189">If a <xref:System.ComponentModel.DataAnnotations.StringLengthAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.MaxLength%2A> property uses the database type to retrieve the maximum length allowed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.StringLengthAttribute.MaximumLength" />
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaModel Model" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As MetaModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaModel ^ Model { System::Web::DynamicData::MetaModel ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Model : System.Web.DynamicData.MetaModel" Usage="System.Web.DynamicData.MetaColumn.Model" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-190">Obtiene el objeto <see cref="T:System.Web.DynamicData.MetaModel" /> que representa el modelo de datos al que pertenece este campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-190">Gets the <see cref="T:System.Web.DynamicData.MetaModel" /> object that represents the data model that this data field belongs to.</span></span></summary>
        <value><span data-ttu-id="7d0be-191">Objeto que representa el modelo de datos al que pertenece este campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-191">An object that represents the data model that this data field belongs to.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaModel" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Table" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.DynamicData.MetaColumn.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-192">Obtiene el nombre del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-192">Gets the name of the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-193">Nombre del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-193">The name of the data field.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public string NullDisplayText { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NullDisplayText { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string" Usage="System.Web.DynamicData.MetaColumn.NullDisplayText" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IFieldFormattingOptions.NullDisplayText</InterfaceMember>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.NullDisplayText</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-194">Obtiene el título que se muestra para un campo cuando el valor del campo es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-194">Gets the caption that is displayed for a field when the field's value is <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="7d0be-195">Título que se muestra para un campo cuando el valor del campo es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-195">The caption that is displayed for a field when the field's value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-196">El <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> atributo se aplica al campo de datos y recupera el valor de la <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-196">The <xref:System.Web.DynamicData.MetaColumn.NullDisplayText%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7d0be-197">Si un <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> no se encuentra el atributo, esta propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> se aplica el atributo para recuperar información de formato.</span><span class="sxs-lookup"><span data-stu-id="7d0be-197">If a <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> attribute is not found, this property verifies if a <xref:System.ComponentModel.DataAnnotations.DataTypeAttribute> attribute is applied to retrieve formatting information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.DisplayFormatAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.NullDisplayText" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.DataTypeAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Prompt">
      <MemberSignature Language="C#" Value="public virtual string Prompt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prompt" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Prompt As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Prompt { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prompt : string" Usage="System.Web.DynamicData.MetaColumn.Prompt" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Prompt</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-198">Obtiene un valor que se puede utilizar como marca de agua en la interfaz de usuario que se enlaza a datos en la columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-198">Gets a value that can be used as a watermark in the UI that is bound to data in the column.</span></span></summary>
        <value><span data-ttu-id="7d0be-199">Valor que se puede utilizar como marca de agua en la interfaz de usuario que se enlaza a datos en la columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-199">A value that can be used as a watermark in the UI that is bound to data in the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-200">Un `null` o se puede devolver una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="7d0be-200">A `null` or empty string can be returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7d0be-201">Esta propiedad se establece mediante la <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> atributo en la definición de la columna en la clase de metadatos para la entidad de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-201">This property is set by the <xref:System.ComponentModel.DataAnnotations.DisplayAttribute> attribute in the column's definition in the meta class for the data entity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.ModelProviders.ColumnProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.ColumnProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As ColumnProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::ModelProviders::ColumnProvider ^ Provider { System::Web::DynamicData::ModelProviders::ColumnProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.DynamicData.ModelProviders.ColumnProvider" Usage="System.Web.DynamicData.MetaColumn.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.ColumnProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-202">Obtiene el objeto del proveedor de abstracción que se utiliza para generar el objeto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-202">Gets the abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></summary>
        <value><span data-ttu-id="7d0be-203">Objeto del proveedor de abstracción que se utiliza para generar el objeto <see cref="T:System.Web.DynamicData.MetaColumn" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-203">The abstraction provider object that is used to generate the <see cref="T:System.Web.DynamicData.MetaColumn" /> object.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Docs>
    </Member>
    <Member MemberName="RequiredErrorMessage">
      <MemberSignature Language="C#" Value="public string RequiredErrorMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequiredErrorMessage" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequiredErrorMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequiredErrorMessage { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiredErrorMessage : string" Usage="System.Web.DynamicData.MetaColumn.RequiredErrorMessage" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.RequiredErrorMessage</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-204">Obtiene el mensaje de error que se muestra cuando el campo de datos requiere un valor pero su valor está vacío.</span><span class="sxs-lookup"><span data-stu-id="7d0be-204">Gets the error message that is displayed when the data field requires a value but its value is empty.</span></span></summary>
        <value><span data-ttu-id="7d0be-205">Mensaje de error que se muestra cuando el campo de datos requiere un valor pero su valor está vacío.</span><span class="sxs-lookup"><span data-stu-id="7d0be-205">The error message that is displayed when the data field requires a value but its value is empty.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsRequired" />
      </Docs>
    </Member>
    <Member MemberName="ResetMetadata">
      <MemberSignature Language="C#" Value="public void ResetMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ResetMetadata" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetMetadata ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetMetadata();" />
      <MemberSignature Language="F#" Value="abstract member ResetMetadata : unit -&gt; unit&#xA;override this.ResetMetadata : unit -&gt; unit" Usage="metaColumn.ResetMetadata " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.DynamicData.IMetaColumn.ResetMetadata</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d0be-206">Borra los metadatos de columna almacenados en memoria caché.</span><span class="sxs-lookup"><span data-stu-id="7d0be-206">Clears cached column metadata.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-207">Los metadatos de columna son información que se deriva de atributos y que se almacena en caché para el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="7d0be-207">The column metadata is information that is derived from attributes and that is cached for performance.</span></span> <span data-ttu-id="7d0be-208">Llamar a este método borra la caché de metadatos para esta columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-208">Calling this method clears the metadata cache for this column.</span></span> <span data-ttu-id="7d0be-209">La caché de metadatos se recompila la próxima vez que se solicita cualquier información que se deriva de metadatos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-209">The metadata cache is rebuilt the next time any information that is derived from metadata is requested.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public virtual bool Scaffold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Scaffold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool with get, set" Usage="System.Web.DynamicData.MetaColumn.Scaffold" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.Scaffold</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-210">Obtiene un valor que indica si debe mostrarse el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-210">Gets a value that indicates whether the data field should be displayed.</span></span></summary>
        <value><span data-ttu-id="7d0be-211">Es <see langword="true" /> si debe mostrarse el campo de datos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7d0be-211"><see langword="true" /> if the data field should be displayed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-212">El <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> propiedad indica si se debe mostrar un campo de datos cuando se genera automáticamente los datos dinámicos de ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7d0be-212">The <xref:System.Web.DynamicData.MetaColumn.Scaffold%2A> property indicates whether a data field should be displayed when it is automatically generated by ASP.NET Dynamic Data.</span></span> <span data-ttu-id="7d0be-213">Esta propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> atributo se aplica al campo de datos y devuelve el valor de la <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-213">This property verifies if a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is applied to the data field and returns the value of the <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7d0be-214">Si un <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> atributo no se aplica al campo de datos, datos dinámicos utilizan las siguientes reglas para determinar si se debe mostrar la columna:</span><span class="sxs-lookup"><span data-stu-id="7d0be-214">If a <xref:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute> attribute is not applied to the data field, Dynamic Data uses the following rules to determine whether to display the column:</span></span>  
  
-   <span data-ttu-id="7d0be-215">Si un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atributo se aplica al campo de datos, se muestra el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-215">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field, the data field is displayed.</span></span> <span data-ttu-id="7d0be-216">Esta regla invalida todas las reglas.</span><span class="sxs-lookup"><span data-stu-id="7d0be-216">This rule overrides all the other rules.</span></span>  
  
-   <span data-ttu-id="7d0be-217">Si el valor de la <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> propiedad es `true`, no se muestra el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-217">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="7d0be-218">Esto ocurre porque los datos dinámicos controla los campos de clave externa de una manera diferente y normalmente no mostrará el valor del campo de clave externa.</span><span class="sxs-lookup"><span data-stu-id="7d0be-218">This occurs because Dynamic Data handles foreign-key fields in a different way and will not typically display the foreign-key field value.</span></span>  
  
-   <span data-ttu-id="7d0be-219">Si el valor de la <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> propiedad es `true`, no se muestra el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-219">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsGenerated%2A> property is `true`, the data field is not displayed.</span></span> <span data-ttu-id="7d0be-220">Normalmente, los campos que se generan automáticamente en la base de datos no contienen información relevante.</span><span class="sxs-lookup"><span data-stu-id="7d0be-220">Typically fields that are automatically generated in the database do not contain relevant information.</span></span> <span data-ttu-id="7d0be-221">Asegúrese de que aplica el <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atributo al campo de datos, si debe mostrarse el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-221">Make sure that you apply the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute to the data field, if the data field must be displayed.</span></span>  
  
-   <span data-ttu-id="7d0be-222">Si el valor de la <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> propiedad es `true`, no se muestra el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-222">If the value of the <xref:System.Web.DynamicData.MetaColumn.IsCustomProperty%2A> property is `true`, the data field is not displayed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute" />
        <altmember cref="P:System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute.Scaffold" />
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsForeignKeyComponent" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsGenerated" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.IsCustomProperty" />
      </Docs>
    </Member>
    <Member MemberName="ShortDisplayName">
      <MemberSignature Language="C#" Value="public virtual string ShortDisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ShortDisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ShortDisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ShortDisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ShortDisplayName : string" Usage="System.Web.DynamicData.MetaColumn.ShortDisplayName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.ShortDisplayName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-223">Obtiene el nombre corto de la columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-223">Gets the short name for the column.</span></span></summary>
        <value><span data-ttu-id="7d0be-224">Nombre corto de la columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-224">The short name for the column.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-225">Esta propiedad se proporciona para <xref:System.Web.UI.WebControls.GridView> control y otros controles que se necesita un nombre corto de un espacio en el encabezado de columna limitado.</span><span class="sxs-lookup"><span data-stu-id="7d0be-225">This property is provided for <xref:System.Web.UI.WebControls.GridView> control and other controls where a short name is needed because of limited column-header space.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SortExpression">
      <MemberSignature Language="C#" Value="public string SortExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SortExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SortExpression : string" Usage="System.Web.DynamicData.MetaColumn.SortExpression" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.SortExpression</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-226">Obtiene la expresión que se usa para determinar el criterio de ordenación del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-226">Gets the expression that is used to determine the sort order for the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-227">Expresión que se usa para determinar el criterio de ordenación del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-227">The expression that is used to determine the sort order for the data field.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Web.DynamicData.MetaTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.MetaTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As MetaTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::DynamicData::MetaTable ^ Table { System::Web::DynamicData::MetaTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Web.DynamicData.MetaTable" Usage="System.Web.DynamicData.MetaColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.MetaTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-228">Obtiene el objeto <see cref="T:System.Web.DynamicData.MetaTable" /> que representa la tabla a la que pertenece el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-228">Gets the <see cref="T:System.Web.DynamicData.MetaTable" /> object that represents the table that the data field belongs to.</span></span></summary>
        <value><span data-ttu-id="7d0be-229">Objeto que representa la tabla a la que pertenece el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-229">An object that represents the table that the data field belongs to.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.DynamicData.MetaTable" />
        <altmember cref="P:System.Web.DynamicData.MetaColumn.Model" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.MetaColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="metaColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7d0be-230">Obtiene el nombre del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-230">Gets the data field name.</span></span></summary>
        <returns><span data-ttu-id="7d0be-231">Nombre del campo de datos, que es la representación de cadena de la columna.</span><span class="sxs-lookup"><span data-stu-id="7d0be-231">The data field name, which is the string representation of the column.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public TypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeCode As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode TypeCode { TypeCode get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeCode : TypeCode" Usage="System.Web.DynamicData.MetaColumn.TypeCode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.TypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-232">Obtiene el tipo del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-232">Gets the type of the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-233">Tipo del campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-233">The type of the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-234">El <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> valor de propiedad se deriva del valor de la <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-234">The <xref:System.Web.DynamicData.MetaColumn.TypeCode%2A> property value is derived from the value of the <xref:System.Web.DynamicData.MetaColumn.ColumnType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.DynamicData.MetaColumn.ColumnType" />
      </Docs>
    </Member>
    <Member MemberName="UIHint">
      <MemberSignature Language="C#" Value="public virtual string UIHint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UIHint" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UIHint As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UIHint { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UIHint : string" Usage="System.Web.DynamicData.MetaColumn.UIHint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IMetaColumn.UIHint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7d0be-235">Obtiene el nombre de la plantilla de campo especificada para el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-235">Gets the name of the field template specified for the data field.</span></span></summary>
        <value><span data-ttu-id="7d0be-236">Nombre de la plantilla de campo especificada para el campo de datos.</span><span class="sxs-lookup"><span data-stu-id="7d0be-236">The name of the field template specified for the data field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7d0be-237">El <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> propiedad comprueba si un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atributo se aplica al campo de datos y recupera el valor de la <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7d0be-237">The <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property verifies if a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is applied to the data field and retrieves the value of the <xref:System.ComponentModel.DataAnnotations.UIHintAttribute.UIHint%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="7d0be-238">Si un <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> atributo no se aplica al campo de datos, el <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> propiedad devuelve una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="7d0be-238">If a <xref:System.ComponentModel.DataAnnotations.UIHintAttribute> attribute is not applied to the data field, the <xref:System.Web.DynamicData.MetaColumn.UIHint%2A> property returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DataAnnotations.UIHintAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12"><span data-ttu-id="7d0be-239">Scaffolding de datos dinámicos de ASP.NET</span><span class="sxs-lookup"><span data-stu-id="7d0be-239">ASP.NET Dynamic Data Scaffolding</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
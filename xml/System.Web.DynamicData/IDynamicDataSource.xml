<Type Name="IDynamicDataSource" FullName="System.Web.DynamicData.IDynamicDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0deec69b41686d60c653cfdab13703ae434837e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37752091" /></Metadata><TypeSignature Language="C#" Value="public interface IDynamicDataSource : System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicDataSource implements class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.IDynamicDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicDataSource&#xA;Implements IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicDataSource : System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type IDynamicDataSource = interface&#xA;    interface IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="0c600-101">Representa un origen de datos para un control de datos dinámicos.</span><span class="sxs-lookup"><span data-stu-id="0c600-101">Represents a data source for a Dynamic Data control.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateWhereClause : bool with get, set" Usage="System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-102">Obtiene o establece un valor que indica si el control <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> crea dinámicamente una cláusula <see langword="Where" /> según los valores definidos en la colección <see cref="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters" />.</span><span class="sxs-lookup"><span data-stu-id="0c600-102">Gets or sets a value that indicates whether the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> control dynamically creates a <see langword="Where" /> clause based on values defined in the <see cref="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters" /> collection.</span></span></summary>
        <value><span data-ttu-id="0c600-103">Es <see langword="true" /> si el control de origen de datos crea dinámicamente la cláusula <see langword="Where" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c600-103"><see langword="true" /> if the data source control creates the <see langword="Where" /> clause dynamically; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public Type ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type with get, set" Usage="System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-104">Obtiene el tipo de la clase <see cref="T:System.Data.Linq.DataContext" />.</span><span class="sxs-lookup"><span data-stu-id="0c600-104">Gets the type of the <see cref="T:System.Data.Linq.DataContext" /> class.</span></span></summary>
        <value><span data-ttu-id="0c600-105">Tipo asociado a la clase.</span><span class="sxs-lookup"><span data-stu-id="0c600-105">The type associated with the class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.IDynamicDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.DynamicData.IDynamicDataSource.EnableDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-106">Obtiene o establece un valor que indica si la vista de origen de datos permite eliminar filas.</span><span class="sxs-lookup"><span data-stu-id="0c600-106">Gets or sets a value that indicates whether the data source view supports the ability to delete rows.</span></span></summary>
        <value><span data-ttu-id="0c600-107">Es <see langword="true" /> si la vista de origen de datos permite eliminar filas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c600-107"><see langword="true" /> if the data source view supports the ability to delete rows; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.IDynamicDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.DynamicData.IDynamicDataSource.EnableInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-108">Obtiene o establece un valor que indica si la vista de origen de datos permite insertar filas.</span><span class="sxs-lookup"><span data-stu-id="0c600-108">Gets or sets a value that indicates whether the data source view supports the ability to insert rows.</span></span></summary>
        <value><span data-ttu-id="0c600-109">Es <see langword="true" /> si la vista de origen de datos permite insertar filas; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c600-109"><see langword="true" /> if the data source view supports the ability to insert rows; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.DynamicData.IDynamicDataSource.EnableUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-110">Obtiene o establece un valor que indica si la vista de origen de datos permite actualizar filas.</span><span class="sxs-lookup"><span data-stu-id="0c600-110">Gets or sets a value that indicates whether the data source view supports the ability to update rows.</span></span></summary>
        <value><span data-ttu-id="0c600-111"><see langword="true" /> Si la vista admite la capacidad para actualizar filas; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0c600-111"><see langword="true" /> if the view supports the ability to  update rows; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string with get, set" Usage="System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-112">Obtiene o establece el nombre del conjunto de entidades.</span><span class="sxs-lookup"><span data-stu-id="0c600-112">Gets or sets the entity set name.</span></span></summary>
        <value><span data-ttu-id="0c600-113">Nombre de la entidad.</span><span class="sxs-lookup"><span data-stu-id="0c600-113">The name of the entity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c600-114">En el <xref:System.Web.UI.WebControls.LinqDataSource> (clase), esta propiedad se denomina `TableName`.</span><span class="sxs-lookup"><span data-stu-id="0c600-114">In the <xref:System.Web.UI.WebControls.LinqDataSource> class, this property is called `TableName`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="VB.NET" Value="Event Exception As EventHandler(Of DynamicValidatorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::DynamicData::DynamicValidatorEventArgs ^&gt; ^ Exception;" />
      <MemberSignature Language="F#" Value="member this.Exception : EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; " Usage="member this.Exception : System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-115">Se produce cuando un campo de datos no se valida correctamente.</span><span class="sxs-lookup"><span data-stu-id="0c600-115">Occurs when a data field fails to validate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.IDynamicDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.DynamicData.IDynamicDataSource.Where" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-116">Obtiene o establece un valor que especifica la condición que debe cumplirse para que una cláusula <see langword="Where" /> incluya un registro en los datos recuperados.</span><span class="sxs-lookup"><span data-stu-id="0c600-116">Gets or sets a value that specifies the condition that must be true for a record to be included in the retrieved data by a <see langword="Where" /> clause.</span></span></summary>
        <value><span data-ttu-id="0c600-117">Valor que se utiliza para crear la cláusula <see langword="Where" />.</span><span class="sxs-lookup"><span data-stu-id="0c600-117">The value that is used to create the <see langword="Where" /> clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0c600-118">La sintaxis específica de la `Where` cláusula depende del origen de datos que se usa.</span><span class="sxs-lookup"><span data-stu-id="0c600-118">The specific syntax for the `Where` clause depends on the data source that is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.DynamicData.IDynamicDataSource.WhereParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0c600-119">Obtiene una colección de parámetros que se utilizan para crear una cláusula <see langword="Where" />.</span><span class="sxs-lookup"><span data-stu-id="0c600-119">Gets a collection of parameters that are used to create a <see langword="Where" /> clause.</span></span></summary>
        <value><span data-ttu-id="0c600-120">Colección que contiene los parámetros utilizados por esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="0c600-120">A collection that contains the parameters that are used by this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="TaskCanceledException" FullName="System.Threading.Tasks.TaskCanceledException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81f1b240eee5bdd5178b6bc1d84a6cc1545bf8ca" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52358073" /></Metadata><TypeSignature Language="C#" Value="public class TaskCanceledException : OperationCanceledException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TaskCanceledException extends System.OperationCanceledException" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.TaskCanceledException" />
  <TypeSignature Language="VB.NET" Value="Public Class TaskCanceledException&#xA;Inherits OperationCanceledException" />
  <TypeSignature Language="C++ CLI" Value="public ref class TaskCanceledException : OperationCanceledException" />
  <TypeSignature Language="F#" Value="type TaskCanceledException = class&#xA;    inherit OperationCanceledException" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.OperationCanceledException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ec29f-101">Representa una excepción usada para comunicar la cancelación de la tarea.</span><span class="sxs-lookup"><span data-stu-id="ec29f-101">Represents an exception used to communicate task cancellation.</span></span></summary>
    <remarks>To be added.</remarks>
    <threadsafe><span data-ttu-id="ec29f-102">El <see cref="P:System.Threading.Tasks.TaskCanceledException.Task" /> propiedad es segura para subprocesos y se pueden usar desde varios subprocesos simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="ec29f-102">The <see cref="P:System.Threading.Tasks.TaskCanceledException.Task" /> property is thread-safe and may be used from multiple threads concurrently.</span></span></threadsafe>
    <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="ec29f-103">Programación asincrónica basada en tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-103">Task-based Asynchronous Programming</span></span></related>
    <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="ec29f-104">Cancelación de tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-104">Task Cancellation</span></span></related>
    <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="ec29f-105">Cómo: Cancelar una tarea y sus elementos secundarios</span><span class="sxs-lookup"><span data-stu-id="ec29f-105">How to: Cancel a Task and Its Children</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ec29f-106">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Tasks.TaskCanceledException" />.</span><span class="sxs-lookup"><span data-stu-id="ec29f-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ec29f-107">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con un mensaje proporcionado por el sistema que describe el error.</span><span class="sxs-lookup"><span data-stu-id="ec29f-107">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec29f-108">Este constructor inicializa la propiedad <xref:System.Exception.Message%2A> de una nueva instancia en un mensaje proporcionado por el sistema que describe el error.</span><span class="sxs-lookup"><span data-stu-id="ec29f-108">This constructor initializes the <xref:System.Exception.Message%2A> property of the new instance to a system-supplied message that describes the error.</span></span> <span data-ttu-id="ec29f-109">Este mensaje tiene en cuenta la referencia cultural del sistema actual.</span><span class="sxs-lookup"><span data-stu-id="ec29f-109">This message takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="ec29f-110">En la tabla siguiente se muestra los valores de propiedad iniciales de una instancia de <xref:System.OperationCanceledException>:</span><span class="sxs-lookup"><span data-stu-id="ec29f-110">The following table shows the initial property values for an instance of <xref:System.OperationCanceledException>:</span></span>  
  
|<span data-ttu-id="ec29f-111">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="ec29f-111">Property</span></span>|<span data-ttu-id="ec29f-112">Valor</span><span class="sxs-lookup"><span data-stu-id="ec29f-112">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ec29f-113">`null`.</span><span class="sxs-lookup"><span data-stu-id="ec29f-113">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ec29f-114">La cadena del mensaje de error localizado.</span><span class="sxs-lookup"><span data-stu-id="ec29f-114">The localized error message string.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ec29f-115">Controlar y generar excepciones</span><span class="sxs-lookup"><span data-stu-id="ec29f-115">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="ec29f-116">Programación asincrónica basada en tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-116">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="ec29f-117">Cancelación de tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-117">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="ec29f-118">Cómo: Cancelar una tarea y sus elementos secundarios</span><span class="sxs-lookup"><span data-stu-id="ec29f-118">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : string -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ec29f-119">Mensaje que describe la excepción.</span><span class="sxs-lookup"><span data-stu-id="ec29f-119">The message that describes the exception.</span></span> <span data-ttu-id="ec29f-120">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</span><span class="sxs-lookup"><span data-stu-id="ec29f-120">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <summary><span data-ttu-id="ec29f-121">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con un mensaje especificado que describe el error.</span><span class="sxs-lookup"><span data-stu-id="ec29f-121">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec29f-122">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.Threading.Tasks.TaskCanceledException>.</span><span class="sxs-lookup"><span data-stu-id="ec29f-122">The following table shows the initial property values for an instance of <xref:System.Threading.Tasks.TaskCanceledException>.</span></span>  
  
|<span data-ttu-id="ec29f-123">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="ec29f-123">Property</span></span>|<span data-ttu-id="ec29f-124">Valor</span><span class="sxs-lookup"><span data-stu-id="ec29f-124">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ec29f-125">`null`.</span><span class="sxs-lookup"><span data-stu-id="ec29f-125">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ec29f-126">La cadena de mensaje de error especificada en `message`.</span><span class="sxs-lookup"><span data-stu-id="ec29f-126">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ec29f-127">Controlar y generar excepciones</span><span class="sxs-lookup"><span data-stu-id="ec29f-127">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="ec29f-128">Programación asincrónica basada en tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-128">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="ec29f-129">Cancelación de tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-129">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="ec29f-130">Cómo: Cancelar una tarea y sus elementos secundarios</span><span class="sxs-lookup"><span data-stu-id="ec29f-130">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException (System.Threading.Tasks.Task task);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Threading.Tasks.Task task) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException(System::Threading::Tasks::Task ^ task);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : System.Threading.Tasks.Task -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException task" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="task" Type="System.Threading.Tasks.Task" />
      </Parameters>
      <Docs>
        <param name="task"><span data-ttu-id="ec29f-131">Tarea que se ha cancelado.</span><span class="sxs-lookup"><span data-stu-id="ec29f-131">A task that has been canceled.</span></span></param>
        <summary><span data-ttu-id="ec29f-132">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con una referencia al objeto <see cref="T:System.Threading.Tasks.Task" /> que se ha cancelado.</span><span class="sxs-lookup"><span data-stu-id="ec29f-132">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with a reference to the <see cref="T:System.Threading.Tasks.Task" /> that has been canceled.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ec29f-133">Controlar y generar excepciones</span><span class="sxs-lookup"><span data-stu-id="ec29f-133">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="ec29f-134">Programación asincrónica basada en tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-134">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="ec29f-135">Cancelación de tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-135">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="ec29f-136">Cómo: Cancelar una tarea y sus elementos secundarios</span><span class="sxs-lookup"><span data-stu-id="ec29f-136">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TaskCanceledException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TaskCanceledException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="ec29f-137">Objeto que contiene los datos del objeto serializados.</span><span class="sxs-lookup"><span data-stu-id="ec29f-137">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="ec29f-138">Información contextual acerca del origen o del destino.</span><span class="sxs-lookup"><span data-stu-id="ec29f-138">The contextual information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="ec29f-139">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con datos serializados.</span><span class="sxs-lookup"><span data-stu-id="ec29f-139">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec29f-140">Durante la deserialización se llama a este constructor para reconstituir el objeto de excepción transmitido en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="ec29f-140">This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</span></span> <span data-ttu-id="ec29f-141">Para obtener más información, consulte [serialización SOAP y XML](https://go.microsoft.com/fwlink/p/?LinkID=248602).</span><span class="sxs-lookup"><span data-stu-id="ec29f-141">For more information, see [XML and SOAP Serialization](https://go.microsoft.com/fwlink/p/?LinkID=248602).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ec29f-142">Controlar y generar excepciones</span><span class="sxs-lookup"><span data-stu-id="ec29f-142">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="ec29f-143">Programación asincrónica basada en tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-143">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="ec29f-144">Cancelación de tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-144">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="ec29f-145">Cómo: Cancelar una tarea y sus elementos secundarios</span><span class="sxs-lookup"><span data-stu-id="ec29f-145">How to: Cancel a Task and Its Children</span></span></related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/p/?LinkID=248602"><span data-ttu-id="ec29f-146">Serialización de SOAP y XML</span><span class="sxs-lookup"><span data-stu-id="ec29f-146">XML and SOAP Serialization</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : string * Exception -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="ec29f-147">Mensaje que describe la excepción.</span><span class="sxs-lookup"><span data-stu-id="ec29f-147">The message that describes the exception.</span></span> <span data-ttu-id="ec29f-148">El autor de llamada de este constructor debe asegurarse de que la cadena se haya adaptado para la referencia cultural actual del sistema.</span><span class="sxs-lookup"><span data-stu-id="ec29f-148">The caller of this constructor is required to ensure that this string has been localized for the current system culture.</span></span></param>
        <param name="innerException"><span data-ttu-id="ec29f-149">Excepción que es la causa de la excepción actual.</span><span class="sxs-lookup"><span data-stu-id="ec29f-149">The exception that is the cause of the current exception.</span></span> <span data-ttu-id="ec29f-150">Si el parámetro <paramref name="innerException" /> no es <see langword="null" />, la excepción actual se produce en un bloque <see langword="catch" /> que controla la excepción interna.</span><span class="sxs-lookup"><span data-stu-id="ec29f-150">If the <paramref name="innerException" /> parameter is not <see langword="null" />, the current exception is raised in a <see langword="catch" /> block that handles the inner exception.</span></span></param>
        <summary><span data-ttu-id="ec29f-151">Inicializa una nueva instancia de la clase <see cref="T:System.Threading.Tasks.TaskCanceledException" /> con el mensaje de error especificado y una referencia a la excepción interna que representa la causa de esta excepción.</span><span class="sxs-lookup"><span data-stu-id="ec29f-151">Initializes a new instance of the <see cref="T:System.Threading.Tasks.TaskCanceledException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec29f-152">Una excepción que se produce como consecuencia directa de una excepción anterior debe incluir una referencia a esta última en la propiedad <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="ec29f-152">An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <xref:System.Exception.InnerException%2A> property.</span></span> <span data-ttu-id="ec29f-153">La propiedad <xref:System.Exception.InnerException%2A> devuelve el mismo valor que se haya pasado al constructor, o bien `null` en caso de que la propiedad <xref:System.Exception.InnerException%2A> no le haya proporcionado al constructor el valor de la excepción interna.</span><span class="sxs-lookup"><span data-stu-id="ec29f-153">The <xref:System.Exception.InnerException%2A> property returns the same value that is passed into the constructor, or `null` if the <xref:System.Exception.InnerException%2A> property does not supply the inner exception value to the constructor.</span></span>  
  
 <span data-ttu-id="ec29f-154">En la tabla siguiente se muestran los valores de propiedad iniciales para una instancia de <xref:System.Threading.Tasks.TaskCanceledException>.</span><span class="sxs-lookup"><span data-stu-id="ec29f-154">The following table shows the initial property values for an instance of <xref:System.Threading.Tasks.TaskCanceledException>.</span></span>  
  
|<span data-ttu-id="ec29f-155">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="ec29f-155">Property</span></span>|<span data-ttu-id="ec29f-156">Valor</span><span class="sxs-lookup"><span data-stu-id="ec29f-156">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="ec29f-157">`null`.</span><span class="sxs-lookup"><span data-stu-id="ec29f-157">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="ec29f-158">La cadena de mensaje de error especificada en `message`.</span><span class="sxs-lookup"><span data-stu-id="ec29f-158">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ec29f-159">Controlar y generar excepciones</span><span class="sxs-lookup"><span data-stu-id="ec29f-159">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="ec29f-160">Programación asincrónica basada en tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-160">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="ec29f-161">Cancelación de tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-161">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="ec29f-162">Cómo: Cancelar una tarea y sus elementos secundarios</span><span class="sxs-lookup"><span data-stu-id="ec29f-162">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TaskCanceledException (string message, Exception innerException, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception, token As CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TaskCanceledException(System::String ^ message, Exception ^ innerException, System::Threading::CancellationToken token);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.TaskCanceledException : string * Exception * System.Threading.CancellationToken -&gt; System.Threading.Tasks.TaskCanceledException" Usage="new System.Threading.Tasks.TaskCanceledException (message, innerException, token)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="message">To be added.</param>
        <param name="innerException">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Task">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Task { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Task" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.TaskCanceledException.Task" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Task As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Task { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Task : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.TaskCanceledException.Task" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ec29f-163">Obtiene la tarea asociada a esta excepción.</span><span class="sxs-lookup"><span data-stu-id="ec29f-163">Gets the task associated with this exception.</span></span></summary>
        <value><span data-ttu-id="ec29f-164">Referencia al objeto <see cref="T:System.Threading.Tasks.Task" /> asociado a esta excepción.</span><span class="sxs-lookup"><span data-stu-id="ec29f-164">A reference to the <see cref="T:System.Threading.Tasks.Task" /> that is associated with this exception.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ec29f-165">Es admisible ninguna tarea se asocie a un <xref:System.Threading.Tasks.TaskCanceledException>, en cuyo caso esta propiedad devolverá null.</span><span class="sxs-lookup"><span data-stu-id="ec29f-165">It is permissible for no Task to be associated with a <xref:System.Threading.Tasks.TaskCanceledException>, in which case this property will return null.</span></span>  
  
 <span data-ttu-id="ec29f-166">Esta propiedad es segura para subprocesos y se puede usar desde varios subprocesos simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="ec29f-166">This property is thread-safe and may be used from multiple threads concurrently.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/exceptions/index.md"><span data-ttu-id="ec29f-167">Controlar y generar excepciones</span><span class="sxs-lookup"><span data-stu-id="ec29f-167">Handling and Throwing Exceptions</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-based-asynchronous-programming.md"><span data-ttu-id="ec29f-168">Programación asincrónica basada en tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-168">Task-based Asynchronous Programming</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/task-cancellation.md"><span data-ttu-id="ec29f-169">Cancelación de tareas</span><span class="sxs-lookup"><span data-stu-id="ec29f-169">Task Cancellation</span></span></related>
        <related type="Article" href="~/docs/standard/parallel-programming/how-to-cancel-a-task-and-its-children.md"><span data-ttu-id="ec29f-170">Cómo: Cancelar una tarea y sus elementos secundarios</span><span class="sxs-lookup"><span data-stu-id="ec29f-170">How to: Cancel a Task and Its Children</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
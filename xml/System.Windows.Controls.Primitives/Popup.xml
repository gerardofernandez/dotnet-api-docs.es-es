<Type Name="Popup" FullName="System.Windows.Controls.Primitives.Popup">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01740c5e90b6408bcd62f22c605f1144e9ddf655" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55310065" /></Metadata><TypeSignature Language="C#" Value="public class Popup : System.Windows.FrameworkElement, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Popup extends System.Windows.FrameworkElement implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.Popup" />
  <TypeSignature Language="VB.NET" Value="Public Class Popup&#xA;Inherits FrameworkElement&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class Popup : System::Windows::FrameworkElement, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type Popup = class&#xA;    inherit FrameworkElement&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Child")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Child")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b9a00-101">Representa una ventana emergente que tiene contenido.</span><span class="sxs-lookup"><span data-stu-id="b9a00-101">Represents a pop-up window that has content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-102">**Un modelo de contenido**: <xref:System.Windows.Controls.Primitives.Popup> tiene una propiedad de contenido: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-102">**Content Model**:  <xref:System.Windows.Controls.Primitives.Popup> has one content property: <xref:System.Windows.Controls.Primitives.Popup.Child%2A>.</span></span> <span data-ttu-id="b9a00-103">Un <xref:System.Windows.Controls.Primitives.Popup> puede tener un máximo de un elemento secundario, que puede ser cualquier <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-103">A <xref:System.Windows.Controls.Primitives.Popup> can have a maximum of one child, which can be any <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="b9a00-104">La siguiente ilustración muestra un <xref:System.Windows.Controls.Primitives.Popup> control que tiene un <xref:System.Windows.Controls.Button> como su elemento primario.</span><span class="sxs-lookup"><span data-stu-id="b9a00-104">The following illustration shows a <xref:System.Windows.Controls.Primitives.Popup> control that has a <xref:System.Windows.Controls.Button> as its parent.</span></span>  
  
 <span data-ttu-id="b9a00-105">![Ilustración emergente](~/add/media/popuppicture.JPG "ilustración emergente")</span><span class="sxs-lookup"><span data-stu-id="b9a00-105">![Popup illustration](~/add/media/popuppicture.JPG "Popup illustration")</span></span>  
  
 <span data-ttu-id="b9a00-106">Puede colocar un elemento emergente estableciendo el <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, y <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="b9a00-106">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties.</span></span> <span data-ttu-id="b9a00-107">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-107">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="b9a00-108">Cuando <xref:System.Windows.Controls.Primitives.Popup> se muestra en la pantalla, no cambia su posición si se cambia de posición su elemento primario.</span><span class="sxs-lookup"><span data-stu-id="b9a00-108">When <xref:System.Windows.Controls.Primitives.Popup> is displayed on the screen, it does not reposition itself if its parent is repositioned.</span></span>  
  
 <span data-ttu-id="b9a00-109">Un <xref:System.Windows.Controls.Primitives.Popup> muestra su contenido en su propia ventana en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="b9a00-109">A <xref:System.Windows.Controls.Primitives.Popup> displays its content in its own window on the screen.</span></span> <span data-ttu-id="b9a00-110">Un <xref:System.Windows.Controls.Primitives.Popup> control admite la animación cuando el <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> propiedad está establecida en `true` y la aplicación se ejecuta con plena confianza.</span><span class="sxs-lookup"><span data-stu-id="b9a00-110">A <xref:System.Windows.Controls.Primitives.Popup> control supports animation when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true` and the application is running with full trust.</span></span> <span data-ttu-id="b9a00-111">Una aplicación que se ejecuta con plena confianza tiene acceso completo a los recursos del sistema y se suele instalar en el sistema del usuario.</span><span class="sxs-lookup"><span data-stu-id="b9a00-111">An application that is running with full trust has complete access to system resources and is typically installed on the user's system.</span></span> <span data-ttu-id="b9a00-112">Para obtener más información, consulte [seguridad (WPF)](~/docs/framework/wpf/security-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-112">For more information, see [Security (WPF)](~/docs/framework/wpf/security-wpf.md).</span></span>  
  
 <span data-ttu-id="b9a00-113">Para los efectos de mapa de bits y opacidad aparecen en el contenido de un <xref:System.Windows.Controls.Primitives.Popup>, debe establecer los efectos directamente en el <xref:System.Windows.Controls.Primitives.Popup> contenido.</span><span class="sxs-lookup"><span data-stu-id="b9a00-113">For bitmap and opacity effects to appear on the content of a <xref:System.Windows.Controls.Primitives.Popup>, you must set the effects directly on the <xref:System.Windows.Controls.Primitives.Popup> content.</span></span> <span data-ttu-id="b9a00-114">El contenido de un <xref:System.Windows.Controls.Primitives.Popup> no hereda los efectos que se establecen en el <xref:System.Windows.Controls.Primitives.Popup> controlar o en cualquier otro elemento que se encuentra en la ventana primaria.</span><span class="sxs-lookup"><span data-stu-id="b9a00-114">The content of a <xref:System.Windows.Controls.Primitives.Popup> does not inherit effects that are set on the <xref:System.Windows.Controls.Primitives.Popup> control or on any other element that is in the parent window.</span></span>  
  
 <span data-ttu-id="b9a00-115">Un <xref:System.Windows.Controls.Primitives.Popup> se ajusta a su contenido de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="b9a00-115">A <xref:System.Windows.Controls.Primitives.Popup> is sized to its content by default.</span></span> <span data-ttu-id="b9a00-116">Cuando esto ocurre, aplicar un <xref:System.Windows.UIElement.RenderTransform%2A> o se pueden producir efectos de imagen el <xref:System.Windows.Controls.Primitives.Popup> se ocultan.</span><span class="sxs-lookup"><span data-stu-id="b9a00-116">When this occurs, applying a <xref:System.Windows.UIElement.RenderTransform%2A> or bitmap effects may cause the <xref:System.Windows.Controls.Primitives.Popup> to be obscured.</span></span> <span data-ttu-id="b9a00-117">Esto ocurre porque el tamaño predeterminado del contenido no proporciona espacio suficiente para que se muestren los efectos.</span><span class="sxs-lookup"><span data-stu-id="b9a00-117">This occurs because the default size of the content does not provide enough area for the effects to display.</span></span> <span data-ttu-id="b9a00-118">Si se requiere más espacio, puede definir un margen alrededor del <xref:System.Windows.Controls.Primitives.Popup> contenido para aumentar el área que está disponible para el control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-118">If more space is required, you can define a margin around the <xref:System.Windows.Controls.Primitives.Popup> content to increase the area that is available to the control.</span></span>  
  
 <span data-ttu-id="b9a00-119">El <xref:System.Windows.FrameworkElement.Parent%2A> propiedad debe establecerse en el <xref:System.Windows.Controls.Primitives.Popup> cuando se utiliza en un [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b9a00-119">The <xref:System.Windows.FrameworkElement.Parent%2A> property must be set on the <xref:System.Windows.Controls.Primitives.Popup> when used in a [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].</span></span>  
  
 <span data-ttu-id="b9a00-120">Para crear una información sobre herramientas, use el <xref:System.Windows.Controls.ToolTip> y <xref:System.Windows.Controls.ToolTipService> clases.</span><span class="sxs-lookup"><span data-stu-id="b9a00-120">To create a tooltip, use the <xref:System.Windows.Controls.ToolTip> and <xref:System.Windows.Controls.ToolTipService> classes.</span></span> <span data-ttu-id="b9a00-121">Para más información, consulte [Información general de información sobre herramientas](~/docs/framework/wpf/controls/tooltip-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-121">For more information, see [ToolTip Overview](~/docs/framework/wpf/controls/tooltip-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-122">El ejemplo siguiente muestra cómo crear un <xref:System.Windows.Controls.Primitives.Popup> control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-122">The following example shows how to create a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span>  
  
 [!code-xaml[PopupSimple#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml#2)]  
  
 [!code-csharp[PopupSimple#CreatePopup](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#createpopup)]
 [!code-vb[PopupSimple#CreatePopup](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSimple/VisualBasic/Window1.xaml.vb#createpopup)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.Primitives.PlacementMode" />
    <altmember cref="T:System.Windows.Controls.ToolTip" />
    <altmember cref="T:System.Windows.Controls.ToolTipService" />
    <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" />
    <altmember cref="T:System.Windows.Controls.Primitives.PopupAnimation" />
    <altmember cref="T:System.Windows.Controls.Primitives.PopupPrimaryAxis" />
    <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Popup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Popup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9a00-123">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Controls.Primitives.Popup.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-124">Obtiene o establece un valor que indica si un control <see cref="T:System.Windows.Controls.Primitives.Popup" /> puede incluir contenido transparente.</span><span class="sxs-lookup"><span data-stu-id="b9a00-124">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content.</span></span></summary>
        <value><span data-ttu-id="b9a00-125"><see langword="true" /> si el control <see cref="T:System.Windows.Controls.Primitives.Popup" /> puede incluir contenido transparente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-125"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control can contain transparent content; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9a00-126">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-126">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-127">Un <xref:System.Windows.Controls.Primitives.Popup> control solo puede incluir contenido transparente cuando la aplicación se ejecuta con plena confianza.</span><span class="sxs-lookup"><span data-stu-id="b9a00-127">A <xref:System.Windows.Controls.Primitives.Popup> control can only contain transparent content when the application runs with full trust.</span></span> <span data-ttu-id="b9a00-128">Una aplicación que se ejecuta con plena confianza tiene acceso completo a los recursos del sistema y se suele instalar en el sistema local.</span><span class="sxs-lookup"><span data-stu-id="b9a00-128">An application that runs with full trust has complete access to system resources and is typically installed on the local system.</span></span> <span data-ttu-id="b9a00-129">Para obtener más información, consulte [seguridad (WPF)](~/docs/framework/wpf/security-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-129">For more information, see [Security (WPF)](~/docs/framework/wpf/security-wpf.md).</span></span>  
  
 <span data-ttu-id="b9a00-130">No se puede establecer esta propiedad `true` cuando el <xref:System.Windows.Controls.Primitives.Popup> se hospeda en un [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b9a00-130">This property cannot be set to `true` when the <xref:System.Windows.Controls.Primitives.Popup> is hosted in a [!INCLUDE[TLA#tla_winfxwebapp](~/includes/tlasharptla-winfxwebapp-md.md)].</span></span>  
  
 <span data-ttu-id="b9a00-131">Si el <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> propiedad está establecida en `true` en una aplicación que no se ejecuta en plena confianza, el <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> se cambia el valor de propiedad a `false`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-131">If the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true` in an application that does not run in full trust, the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property value is changed to `false`.</span></span> <span data-ttu-id="b9a00-132">Una aplicación que se hospeda en un explorador es un ejemplo de una aplicación que no se ejecuta en plena confianza.</span><span class="sxs-lookup"><span data-stu-id="b9a00-132">An application that is hosted in a browser is an example of an application that does not run in full trust.</span></span>  
  
<a name="dependencyPropertyInfo_AllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-133">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-133">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-134">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-134">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty>|  
|<span data-ttu-id="b9a00-135">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-135">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-136">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-136">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-137">El ejemplo siguiente muestra cómo establecer el <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> propiedad en un <xref:System.Windows.Controls.Primitives.Popup> control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-137">The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property on a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span>  
  
 [!code-csharp[PopupSnips#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#allowstransparency)]
 [!code-vb[PopupSnips#AllowsTransparency](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#allowstransparency)]
 [!code-xaml[PopupSnips#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#allowstransparency)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="b9a00-138">Para establecer esta propiedad en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-138">for setting this property to <see langword="true" />.</span></span> <span data-ttu-id="b9a00-139">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="b9a00-139">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="P:System.Windows.Window.AllowsTransparency" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-140">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-140">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.AllowsTransparency" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-141">Identificador de la propiedad de dependencia <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-141">The identifier for the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="b9a00-142">Información general sobre las propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-142">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Child">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement Child { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement Child" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.Child" />
      <MemberSignature Language="VB.NET" Value="Public Property Child As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ Child { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Child : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Primitives.Popup.Child" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-143">Obtiene o establece el contenido del control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-143">Gets or sets the content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span></summary>
        <value><span data-ttu-id="b9a00-144">Contenido del elemento <see cref="T:System.Windows.UIElement" /> del control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-144">The <see cref="T:System.Windows.UIElement" /> content of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span> <span data-ttu-id="b9a00-145">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-145">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-146">**Un modelo de contenido**: El <xref:System.Windows.Controls.Primitives.Popup.Child%2A> es la propiedad de contenido solo para el <xref:System.Windows.Controls.Primitives.Popup> control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-146">**Content Model**: The <xref:System.Windows.Controls.Primitives.Popup.Child%2A> property is the only content property for the <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="b9a00-147">Un <xref:System.Windows.Controls.Primitives.Popup> solo puede tener una <xref:System.Windows.UIElement> como un elemento secundario, pero ese elemento secundario puede tener incrustado contenido complejo.</span><span class="sxs-lookup"><span data-stu-id="b9a00-147">A <xref:System.Windows.Controls.Primitives.Popup> can only have one <xref:System.Windows.UIElement> as a child, but that child can contain complex embedded content.</span></span> <span data-ttu-id="b9a00-148">Por ejemplo, el elemento secundario puede ser un <xref:System.Windows.Controls.StackPanel> que contiene un <xref:System.Windows.Controls.Image>, texto y otros tipos de controles.</span><span class="sxs-lookup"><span data-stu-id="b9a00-148">For example, the child can be a <xref:System.Windows.Controls.StackPanel> that contains an <xref:System.Windows.Controls.Image>, text, and other types of controls.</span></span>  
  
 <span data-ttu-id="b9a00-149">Cuando se agrega contenido a un <xref:System.Windows.Controls.Primitives.Popup> (control), el <xref:System.Windows.Controls.Primitives.Popup> control se convierte en el elemento primario lógico para el contenido.</span><span class="sxs-lookup"><span data-stu-id="b9a00-149">When content is added to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content.</span></span> <span data-ttu-id="b9a00-150">De forma similar, el <xref:System.Windows.Controls.Primitives.Popup> contenido se considera que el elemento secundario lógico de la <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-150">Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="b9a00-151">El contenido secundario no se agrega al árbol visual que contiene el <xref:System.Windows.Controls.Primitives.Popup> control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-151">The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="b9a00-152">En su lugar, el contenido secundario se representa en una ventana independiente con su propio objeto visual de árbol cuando el <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-152">Instead, the child content is rendered in a separate window with its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> is set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_Child"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-153">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-153">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-154">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-154">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.ChildProperty>|  
|<span data-ttu-id="b9a00-155">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-155">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-156">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-156">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-157">El ejemplo siguiente muestra cómo agregar contenido a un <xref:System.Windows.Controls.Primitives.Popup> control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-157">The following example shows how to add content to a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span>  
  
 [!code-csharp[PopupSnips#Child](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#child)]
 [!code-vb[PopupSnips#Child](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#child)]
 [!code-xaml[PopupSnips#Child](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#child)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ChildProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ChildProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.ChildProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ChildProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ChildProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ChildProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.ChildProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-158">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.Child" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-158">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Child" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.Popup.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-159">Se produce cuando la propiedad <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> cambia a <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-159">Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-160">Un <xref:System.Windows.Controls.Primitives.Popup> se abrieron y cerraron alternando el <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b9a00-160">A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-161">El ejemplo siguiente muestra cómo definir un controlador de eventos para el <xref:System.Windows.Controls.Primitives.Popup.Closed> eventos.</span><span class="sxs-lookup"><span data-stu-id="b9a00-161">The following example shows how to define an event handler for the <xref:System.Windows.Controls.Primitives.Popup.Closed> event.</span></span>  
  
 [!code-csharp[PopupSnips#Closed](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#closed)]
 [!code-vb[PopupSnips#Closed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#closed)]
 [!code-xaml[PopupSnips#Closed](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#closed)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.Popup.Opened" />
      </Docs>
    </Member>
    <Member MemberName="CreateRootPopup">
      <MemberSignature Language="C#" Value="public static void CreateRootPopup (System.Windows.Controls.Primitives.Popup popup, System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CreateRootPopup(class System.Windows.Controls.Primitives.Popup popup, class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.CreateRootPopup(System.Windows.Controls.Primitives.Popup,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CreateRootPopup(System::Windows::Controls::Primitives::Popup ^ popup, System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="static member CreateRootPopup : System.Windows.Controls.Primitives.Popup * System.Windows.UIElement -&gt; unit" Usage="System.Windows.Controls.Primitives.Popup.CreateRootPopup (popup, child)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="popup" Type="System.Windows.Controls.Primitives.Popup" />
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="popup"><span data-ttu-id="b9a00-162"><see cref="T:System.Windows.Controls.Primitives.Popup" /> al que se va a agregar el contenido secundario.</span><span class="sxs-lookup"><span data-stu-id="b9a00-162">The <see cref="T:System.Windows.Controls.Primitives.Popup" /> to which to add child content.</span></span></param>
        <param name="child"><span data-ttu-id="b9a00-163">Contenido secundario de <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-163">The <see cref="T:System.Windows.UIElement" /> child content.</span></span></param>
        <summary><span data-ttu-id="b9a00-164">Asocia un elemento secundario a un control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-164">Attaches a child element to a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-165">Es posible que desee crear un control personalizado que tiene la misma funcionalidad que un control existente y también muestra el comportamiento de un <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-165">You might want to create a custom control that has the same functionality as an existing control and also exhibits the behavior of a <xref:System.Windows.Controls.Primitives.Popup>.</span></span>  <span data-ttu-id="b9a00-166">Puede hacer que el control se comportan como un <xref:System.Windows.Controls.Primitives.Popup> agregando un <xref:System.Windows.Controls.Primitives.Popup> a su control y llamar a la <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A> método.</span><span class="sxs-lookup"><span data-stu-id="b9a00-166">You can make your control behave like a <xref:System.Windows.Controls.Primitives.Popup> by adding a <xref:System.Windows.Controls.Primitives.Popup> to your control and calling the <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A> method.</span></span>  
  
 <span data-ttu-id="b9a00-167">Este método asigna `child` en la propiedad secundaria y enlaza las propiedades siguientes para `child`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-167">This method assigns `child` to the child property and binds the following properties to `child`.</span></span>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A>  
  
 <span data-ttu-id="b9a00-168">Debe implementar estas como propiedades de dependencia en el control para que se pueda usan la misma manera que un <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-168">You should implement these as dependency properties in your control so it can be used the same way as a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="b9a00-169">Para más información, consulte [Propiedades de dependencia personalizadas](~/docs/framework/wpf/advanced/custom-dependency-properties.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-169">For more information, see [Custom Dependency Properties](~/docs/framework/wpf/advanced/custom-dependency-properties.md).</span></span>  
  
 <span data-ttu-id="b9a00-170">Cuando se llama a <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A>, `child` no puede ser un elemento secundario de un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-170">When you call <xref:System.Windows.Controls.Primitives.Popup.CreateRootPopup%2A>, `child` cannot be a child of a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="b9a00-171">Además, `PlacementTarget` debe establecerse en el control antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="b9a00-171">Also, `PlacementTarget` should be set on your control before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-172">Obtiene o establece el método controlador delegado que coloca el control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-172">Gets or sets a delegate handler method that positions the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span></summary>
        <value><span data-ttu-id="b9a00-173">Método delegado <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> que proporciona información de ubicación para el control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-173">The <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> delegate method that provides placement information for the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span> <span data-ttu-id="b9a00-174">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-174">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-175">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-175">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-176">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-176">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="b9a00-177">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-177">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-178">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-178">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-179">El ejemplo siguiente muestra cómo establecer un <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A> delegar.</span><span class="sxs-lookup"><span data-stu-id="b9a00-179">The following example shows how to set a <xref:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallback%2A> delegate.</span></span>  
  
 [!code-csharp[PopupCustomPlacement#DelegateDefinition](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupCustomPlacement/CSharp/Window1.xaml.cs#delegatedefinition)]
 [!code-vb[PopupCustomPlacement#DelegateDefinition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupCustomPlacement/visualbasic/window1.xaml.vb#delegatedefinition)]  
  
 [!code-csharp[PopupCustomPlacement#DelegateInstance](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupCustomPlacement/CSharp/Window1.xaml.cs#delegateinstance)]
 [!code-vb[PopupCustomPlacement#DelegateInstance](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupCustomPlacement/visualbasic/window1.xaml.vb#delegateinstance)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" />
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-180">Identifica la propiedad de dependencia <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-180">Identifies the <see cref="T:System.Windows.Controls.Primitives.CustomPopupPlacementCallback" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="popup.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b9a00-181">Devuelve el elemento lógico primario de <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-181">Returns the logical parent of a <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span></span></summary>
        <returns><span data-ttu-id="b9a00-182">Si <see cref="T:System.Windows.Controls.Primitives.Popup" /> no tiene definido ningún elemento primario y el valor de la propiedad <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> no es <see langword="null" />, se devuelve el valor de la propiedad <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-182">If the <see cref="T:System.Windows.Controls.Primitives.Popup" /> does not have a defined parent and the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is not <see langword="null" />, the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> is returned.</span></span> <span data-ttu-id="b9a00-183">De lo contrario, los valores devueltos son iguales que <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-183">Otherwise, the return values are the same as <see cref="M:System.Windows.FrameworkElement.GetUIParentCore" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool" Usage="System.Windows.Controls.Primitives.Popup.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-184">Obtiene un valor que indica si <see cref="T:System.Windows.Controls.Primitives.Popup" /> se muestra con un efecto de sombra.</span><span class="sxs-lookup"><span data-stu-id="b9a00-184">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow effect.</span></span></summary>
        <value><span data-ttu-id="b9a00-185">Es <see langword="true" /> si <see cref="T:System.Windows.Controls.Primitives.Popup" /> se muestra con un efecto de sombra; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-185"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is displayed with a drop shadow; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-186">Un efecto de sombra paralela muestra cuando el <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> propiedad y el <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=nameWithType> propiedad se establece en `true`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-186">A drop shadow effect displays when the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property and the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A?displayProperty=nameWithType> property are set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_HasDropShadow"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-187">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-187">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-188">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-188">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty>|  
|<span data-ttu-id="b9a00-189">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-189">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-190">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-190">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-191">El ejemplo siguiente muestra cómo obtener el valor de la <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b9a00-191">The following example shows how to get the value of the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> property.</span></span>  
  
 [!code-csharp[PopupSnips#HasDropShadow](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#hasdropshadow)]
 [!code-vb[PopupSnips#HasDropShadow](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#hasdropshadow)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-192">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-192">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HasDropShadow" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-193">Identificador de la propiedad de dependencia <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-193">The identifier for the <xref:System.Windows.Controls.Primitives.Popup.HasDropShadow%2A> dependency property.</span></span>  
  
   
  
## Examples  
 [<span data-ttu-id="b9a00-194">Información general sobre las propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-194">Dependency Properties Overview</span></span>](~/docs/framework/wpf/advanced/dependency-properties-overview.md)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-195">Obtiene o establece la distancia horizontal entre el origen de destino y el punto de alineación emergente.</span><span class="sxs-lookup"><span data-stu-id="b9a00-195">Get or sets the horizontal distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="b9a00-196">Distancia horizontal entre el origen de destino y el punto de alineación emergente.</span><span class="sxs-lookup"><span data-stu-id="b9a00-196">The horizontal distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="b9a00-197">Para obtener información sobre el punto de alineación de origen y el elemento emergente de destino, vea [selección de ubicación de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-197">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="b9a00-198">El valor predeterminado es 0.</span><span class="sxs-lookup"><span data-stu-id="b9a00-198">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-199">Puede colocar un elemento emergente estableciendo el <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, y <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="b9a00-199">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties.</span></span> <span data-ttu-id="b9a00-200">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-200">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-201">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-201">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-202">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-202">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty>|  
|<span data-ttu-id="b9a00-203">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-203">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-204">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-204">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b9a00-205">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="b9a00-205">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontallOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b9a00-206">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="b9a00-206">XAML Values</span></span>  
 `double`  
 <xref:System.Double>  
  
 <span data-ttu-id="b9a00-207">Representación de cadena de un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="b9a00-207">A string representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="b9a00-208">Esto se interpreta como un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="b9a00-208">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="b9a00-209">Las cadenas no es necesario incluir explícitamente puntos decimales.</span><span class="sxs-lookup"><span data-stu-id="b9a00-209">Strings do not have to explicitly include decimal points.</span></span> <span data-ttu-id="b9a00-210">Por ejemplo, un valor de `1` es aceptable.</span><span class="sxs-lookup"><span data-stu-id="b9a00-210">For example, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="b9a00-211">El mismo <xref:System.Double> aplican restricciones de intervalo como las que se mencionan en la sección de valor de propiedad de este tema.</span><span class="sxs-lookup"><span data-stu-id="b9a00-211">The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.</span></span>  
  
 `qualifiedDouble`  
 <span data-ttu-id="b9a00-212">Un `double` valor, como se describe anteriormente en esta tabla, seguido de una de las siguientes cadenas de declaración de unidad: `px`, `in`, `cm`, o `pt`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-212">A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.</span></span>  
  
 <span data-ttu-id="b9a00-213">`px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b9a00-213">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="b9a00-214">`in` pulgadas; 1 en = 96 px</span><span class="sxs-lookup"><span data-stu-id="b9a00-214">`in` is inches; 1in=96px</span></span>  
  
 <span data-ttu-id="b9a00-215">`cm` es centímetros; 1cm=(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="b9a00-215">`cm` is centimeters; 1cm=(96/2.54) px</span></span>  
  
 <span data-ttu-id="b9a00-216">`pt` puntos; 1pt=(96/72) px</span><span class="sxs-lookup"><span data-stu-id="b9a00-216">`pt` is points; 1pt=(96/72) px</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-217">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.Primitives.Popup> y establece el <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> y <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propiedades a 20.</span><span class="sxs-lookup"><span data-stu-id="b9a00-217">The following example creates a <xref:System.Windows.Controls.Primitives.Popup> and sets the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties to 20.</span></span>  <span data-ttu-id="b9a00-218">El <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> propiedad está establecida en <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> (que es el valor predeterminado), por lo que el origen de destino es la esquina inferior izquierda del área de destino y el punto de alineación emergente es la esquina superior izquierda de la <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-218">The <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> property is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> (which is the default), so the target origin is the bottom left corner of the target area and the popup alignment point is the top left corner of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#5)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-219">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-219">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.Primitives.Popup.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-220">Obtiene o establece un valor que indica si el objeto <see cref="T:System.Windows.Controls.Primitives.Popup" /> está visible.</span><span class="sxs-lookup"><span data-stu-id="b9a00-220">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible.</span></span></summary>
        <value><span data-ttu-id="b9a00-221">Es <see langword="true" /> si <see cref="T:System.Windows.Controls.Primitives.Popup" /> está visible; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-221"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is visible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b9a00-222">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-222">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-223">Si usa un control de un <xref:System.Windows.Controls.Primitives.Popup> como parte de su estilo predeterminado, enlazar la <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propiedad de la <xref:System.Windows.Controls.Primitives.Popup> a una propiedad del control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-223">If a control uses a <xref:System.Windows.Controls.Primitives.Popup> as part of its default style, bind the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property of the <xref:System.Windows.Controls.Primitives.Popup> to a property of the control.</span></span> <span data-ttu-id="b9a00-224">Por ejemplo, un <xref:System.Windows.Controls.ComboBox> puede enlazar su <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> propiedad a la <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propiedad de la <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-224">For example, a <xref:System.Windows.Controls.ComboBox> can bind its <xref:System.Windows.Controls.ComboBox.IsDropDownOpen%2A> property to the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="b9a00-225">Esto simplifica la lógica para controlar cuándo el <xref:System.Windows.Controls.Primitives.Popup> está visible.</span><span class="sxs-lookup"><span data-stu-id="b9a00-225">This simplifies the logic for controlling when the <xref:System.Windows.Controls.Primitives.Popup> is visible.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-226">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-227">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-227">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.IsOpenProperty>|  
|<span data-ttu-id="b9a00-228">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-229">En el ejemplo siguiente se muestra cómo establecer la propiedad <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-229">The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.</span></span>  
  
 [!code-csharp[PopupSnips#IsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#isopen)]
 [!code-vb[PopupSnips#IsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#isopen)]
 [!code-xaml[PopupSnips#IsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#isopen)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-230">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-230">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.Primitives.Popup.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-231">Obtiene un enumerador que puede utilizar para obtener acceso a los elementos lógicos secundarios del control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-231">Gets an enumerator that you can use to access the logical child elements of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span></summary>
        <value><span data-ttu-id="b9a00-232"><see cref="T:System.Collections.IEnumerator" /> que puede utilizar para obtener acceso a los elementos lógicos secundarios de un control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-232">An <see cref="T:System.Collections.IEnumerator" /> that you can use to access the logical child elements of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span> <span data-ttu-id="b9a00-233">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-233">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-234">Al agregar contenido a un <xref:System.Windows.Controls.Primitives.Popup> (control), el <xref:System.Windows.Controls.Primitives.Popup> control se convierte en el elemento primario lógico para el contenido.</span><span class="sxs-lookup"><span data-stu-id="b9a00-234">When you add content to a <xref:System.Windows.Controls.Primitives.Popup> control, the <xref:System.Windows.Controls.Primitives.Popup> control becomes the logical parent to the content.</span></span> <span data-ttu-id="b9a00-235">De forma similar, el <xref:System.Windows.Controls.Primitives.Popup> contenido se considera que el elemento secundario lógico de la <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-235">Similarly, the <xref:System.Windows.Controls.Primitives.Popup> content is considered to be the logical child of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="b9a00-236">El contenido secundario no se agrega al árbol visual que contiene el <xref:System.Windows.Controls.Primitives.Popup> control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-236">The child content is not added to the visual tree that contains the <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="b9a00-237">En su lugar, el contenido secundario se representa en una ventana independiente que tiene su propio objeto visual de árbol cuando el <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-237">Instead, the child content is rendered in a separate window that has its own visual tree when the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="popup.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="b9a00-238">Tamaño disponible que este elemento puede otorgar al elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="b9a00-238">The available size that this element can give to the child.</span></span> <span data-ttu-id="b9a00-239">Puede utilizar infinito como valor para indicar que el elemento puede ajustarse a cualquier contenido disponible.</span><span class="sxs-lookup"><span data-stu-id="b9a00-239">You can use infinity as a value to indicate that the element can size to whatever content is available.</span></span></param>
        <summary><span data-ttu-id="b9a00-240">Determina el tamaño necesario del contenido de <see cref="T:System.Windows.Controls.Primitives.Popup" /> dentro del árbol visual del elemento lógico primario.</span><span class="sxs-lookup"><span data-stu-id="b9a00-240">Determines the required size of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> content within the visual tree of the logical parent.</span></span></summary>
        <returns><span data-ttu-id="b9a00-241">Estructura <see cref="T:System.Windows.Size" /> cuyas propiedades <see cref="P:System.Windows.Size.Height" /> y <see cref="P:System.Windows.Size.Width" /> son iguales a cero (0).</span><span class="sxs-lookup"><span data-stu-id="b9a00-241">A <see cref="T:System.Windows.Size" /> structure that has the <see cref="P:System.Windows.Size.Height" /> and <see cref="P:System.Windows.Size.Width" /> properties both equal to zero (0).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-242">Este método devuelve siempre un <xref:System.Windows.Size> que tiene un ancho y alto de cero (0), porque <xref:System.Windows.Controls.Primitives.Popup> contenido no se encuentra en el árbol visual de su elemento primario lógico o <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-242">This method always returns a <xref:System.Windows.Size> that has a width and height of zero (0), because <xref:System.Windows.Controls.Primitives.Popup> content is not located in the visual tree of its logical parent or <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.</span></span> <span data-ttu-id="b9a00-243">El contenido secundario se crea en una ventana diferente que tenga su propio árbol visual.</span><span class="sxs-lookup"><span data-stu-id="b9a00-243">The child content is created in a different window that has its own visual tree.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="popup.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9a00-244">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="b9a00-244">The event data.</span></span></param>
        <summary><span data-ttu-id="b9a00-245">Responde cuando el valor de la propiedad <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> cambia de <see langword="true" /> a <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-245">Responds when the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from to <see langword="true" /> to <see langword="false" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnOpened(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : EventArgs -&gt; unit&#xA;override this.OnOpened : EventArgs -&gt; unit" Usage="popup.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9a00-246">Argumentos del evento.</span><span class="sxs-lookup"><span data-stu-id="b9a00-246">The event arguments.</span></span></param>
        <summary><span data-ttu-id="b9a00-247">Responde a la condición en la que el valor de la propiedad <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> cambia de <see langword="false" /> a <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-247">Responds to the condition in which the value of the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes from <see langword="false" /> to <see langword="true" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="popup.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9a00-248">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="b9a00-248">The event data.</span></span></param>
        <summary><span data-ttu-id="b9a00-249">Proporciona el control de clases para el evento <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-249">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-250">Implementación de este modo, se garantiza un <xref:System.Windows.Controls.Primitives.Popup> se cierra cuando se produce un evento del mouse fuera de la <xref:System.Windows.Controls.Primitives.Popup> cuando el <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> propiedad está establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-250">This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="popup.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9a00-251">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="b9a00-251">The event data.</span></span></param>
        <summary><span data-ttu-id="b9a00-252">Proporciona el control de clases para el evento <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-252">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-253">Implementación de este modo, se garantiza un <xref:System.Windows.Controls.Primitives.Popup> se cierra cuando se produce un evento del mouse fuera de la <xref:System.Windows.Controls.Primitives.Popup> cuando el <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> propiedad está establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-253">This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="popup.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9a00-254">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="b9a00-254">The event data.</span></span></param>
        <summary><span data-ttu-id="b9a00-255">Proporciona el control de clases para el evento <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-255">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-256">Implementación de este modo, se garantiza un <xref:System.Windows.Controls.Primitives.Popup> se cierra cuando se produce un evento del mouse fuera de la <xref:System.Windows.Controls.Primitives.Popup> cuando el <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> propiedad está establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-256">This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="popup.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b9a00-257">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="b9a00-257">The event data.</span></span></param>
        <summary><span data-ttu-id="b9a00-258">Proporciona el control de clases para el evento <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-258">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-259">Implementación de este modo, se garantiza un <xref:System.Windows.Controls.Primitives.Popup> se cierra cuando se produce un evento del mouse fuera de la <xref:System.Windows.Controls.Primitives.Popup> cuando el <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> propiedad está establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-259">This implementation makes sure that a <xref:System.Windows.Controls.Primitives.Popup> closes when a mouse event occurs outside the <xref:System.Windows.Controls.Primitives.Popup> when the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.Popup.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-260">Se produce cuando la propiedad <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> cambia a <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-260">Occurs when the <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property changes to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-261">Un <xref:System.Windows.Controls.Primitives.Popup> se abrieron y cerraron alternando el <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b9a00-261">A <xref:System.Windows.Controls.Primitives.Popup> is opened and closed by toggling the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-262">El ejemplo siguiente muestra cómo definir un controlador de eventos para el <xref:System.Windows.Controls.Primitives.Popup.Opened> eventos.</span><span class="sxs-lookup"><span data-stu-id="b9a00-262">The following example shows how to define an event handler for the <xref:System.Windows.Controls.Primitives.Popup.Opened> event.</span></span>  
  
 [!code-csharp[PopupSnips#Opened](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#opened)]
 [!code-vb[PopupSnips#Opened](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#opened)]
 [!code-xaml[PopupSnips#Opened](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#opened)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.Popup.Closed" />
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.Primitives.Popup.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-263">Obtiene o establece la orientación del control <see cref="T:System.Windows.Controls.Primitives.Popup" /> cuando se abre, y especifica el comportamiento del control <see cref="T:System.Windows.Controls.Primitives.Popup" /> cuando se superpone con los límites de la pantalla.</span><span class="sxs-lookup"><span data-stu-id="b9a00-263">Gets or sets the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and specifies the behavior of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when it overlaps screen boundaries.</span></span></summary>
        <value><span data-ttu-id="b9a00-264">Valor de enumeración <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> que determina la orientación del control <see cref="T:System.Windows.Controls.Primitives.Popup" /> cuando se abre y que especifica cómo interactúa el control con los límites de la pantalla.</span><span class="sxs-lookup"><span data-stu-id="b9a00-264">A <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration value that determines the orientation of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control when the control opens, and that specifies how the control interacts with screen boundaries.</span></span> <span data-ttu-id="b9a00-265">De manera predeterminada, es <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-265">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.Bottom" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-266">Puede colocar un elemento emergente estableciendo el <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, y <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="b9a00-266">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties.</span></span> <span data-ttu-id="b9a00-267">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-267">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
 <span data-ttu-id="b9a00-268">Si el <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> propiedad es `true`, estableciendo <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> a <xref:System.Windows.Controls.Primitives.PlacementMode.Left> o <xref:System.Windows.Controls.Primitives.PlacementMode.Right> invierte la posición de la <xref:System.Windows.Controls.Primitives.Popup>; un <xref:System.Windows.Controls.Primitives.Popup> con <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> establecido en <xref:System.Windows.Controls.Primitives.PlacementMode.Left> alinea su margen izquierdo con el borde derecho del <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> y un <xref:System.Windows.Controls.Primitives.Popup> con <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> establecido en <xref:System.Windows.Controls.Primitives.PlacementMode.Right> alinea su margen derecho con el margen izquierdo de <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-268">If the <xref:System.Windows.SystemParameters.MenuDropAlignment%2A> property is `true`, setting <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> to <xref:System.Windows.Controls.Primitives.PlacementMode.Left> or <xref:System.Windows.Controls.Primitives.PlacementMode.Right> reverses the position of the <xref:System.Windows.Controls.Primitives.Popup>; a <xref:System.Windows.Controls.Primitives.Popup> with <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> set to <xref:System.Windows.Controls.Primitives.PlacementMode.Left> aligns its left edge with the right edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> and a <xref:System.Windows.Controls.Primitives.Popup> with <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> set to <xref:System.Windows.Controls.Primitives.PlacementMode.Right> aligns its right edge with the left edge of <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>.</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-269">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-269">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-270">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-270">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.PlacementProperty>|  
|<span data-ttu-id="b9a00-271">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-271">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-272">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-272">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-273">El ejemplo siguiente crea cuatro <xref:System.Windows.Controls.Primitives.Popup> controles que están en relación con una imagen.</span><span class="sxs-lookup"><span data-stu-id="b9a00-273">The following example creates four <xref:System.Windows.Controls.Primitives.Popup> controls that are relative to an image.</span></span> <span data-ttu-id="b9a00-274">Cada <xref:System.Windows.Controls.Primitives.Popup> tiene un valor diferente para la propiedad de colocación.</span><span class="sxs-lookup"><span data-stu-id="b9a00-274">Each <xref:System.Windows.Controls.Primitives.Popup> has a different value for the placement property.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#3](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#3)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.PlacementMode" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-275">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-275">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.Placement" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-276">Obtiene o establece el rectángulo con respecto al cual se coloca el control <see cref="T:System.Windows.Controls.Primitives.Popup" /> cuando se abre.</span><span class="sxs-lookup"><span data-stu-id="b9a00-276">Gets or sets the rectangle relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="b9a00-277">Rectángulo que se utiliza para colocar el control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-277">The rectangle that is used to position the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span> <span data-ttu-id="b9a00-278">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-278">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-279">Puede colocar un elemento emergente estableciendo el <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, y <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="b9a00-279">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties.</span></span> <span data-ttu-id="b9a00-280">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-280">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-281">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-281">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-282">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-282">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty>|  
|<span data-ttu-id="b9a00-283">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-283">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-284">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-284">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-285">El ejemplo siguiente se establece la <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> propiedad de un <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-285">The following example sets the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> property of a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="b9a00-286">El <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, y <xref:System.Windows.Rect.Height%2A> propiedades de la <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> son 50, 50, 50 y 100, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="b9a00-286">The <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> properties of the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> are 50, 50, 50, and 100, respectively.</span></span> <span data-ttu-id="b9a00-287">El <xref:System.Windows.Controls.Primitives.Popup> es relativo a los límites de la <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="b9a00-287">The <xref:System.Windows.Controls.Primitives.Popup> is relative to the bounds of the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> property.</span></span> <span data-ttu-id="b9a00-288">Tenga en cuenta que el <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> propiedad no crea un elemento visible en la aplicación; en el ejemplo se crea un <xref:System.Windows.Shapes.Rectangle> con los mismos límites para representar el <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-288">Note that the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A> property does not create a visible element in the application; the example creates a <xref:System.Windows.Shapes.Rectangle> with the same bounds to represent the <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#6](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#6)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160032"><span data-ttu-id="b9a00-289">Ejemplo de colocación del elemento emergente</span><span class="sxs-lookup"><span data-stu-id="b9a00-289">Popup Placement Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-290">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-290">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.Primitives.Popup.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-291">Obtiene o establece el elemento con respecto al cual se coloca el control <see cref="T:System.Windows.Controls.Primitives.Popup" /> cuando se abre.</span><span class="sxs-lookup"><span data-stu-id="b9a00-291">Gets or sets the element relative to which the <see cref="T:System.Windows.Controls.Primitives.Popup" /> is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="b9a00-292">El <see cref="T:System.Windows.UIElement" /> que es el elemento primario lógico del control de <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-292">The <see cref="T:System.Windows.UIElement" /> that is the logical parent of the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span> <span data-ttu-id="b9a00-293">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-293">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-294">Puede colocar un elemento emergente estableciendo el <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, y <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="b9a00-294">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties.</span></span> <span data-ttu-id="b9a00-295">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-295">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-296">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-296">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-297">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-297">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty>|  
|<span data-ttu-id="b9a00-298">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-298">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-299">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-299">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-300">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.Primitives.Popup> que es el elemento secundario de un <xref:System.Windows.Controls.Canvas>y establece <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> a `ellipse1`, por lo que el elemento emergente es relativa a la <xref:System.Windows.Shapes.Ellipse>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-300">The following example creates a <xref:System.Windows.Controls.Primitives.Popup> that is the child of a <xref:System.Windows.Controls.Canvas>, and sets <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> to `ellipse1`, so the popup is relative to the <xref:System.Windows.Shapes.Ellipse>.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#2)]    
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-301">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-301">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopupAnimation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PopupAnimation PopupAnimation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PopupAnimation PopupAnimation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" />
      <MemberSignature Language="VB.NET" Value="Public Property PopupAnimation As PopupAnimation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PopupAnimation PopupAnimation { System::Windows::Controls::Primitives::PopupAnimation get(); void set(System::Windows::Controls::Primitives::PopupAnimation value); };" />
      <MemberSignature Language="F#" Value="member this.PopupAnimation : System.Windows.Controls.Primitives.PopupAnimation with get, set" Usage="System.Windows.Controls.Primitives.Popup.PopupAnimation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PopupAnimation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-302">Obtiene o establece una animación para la apertura y el cierre de un control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-302">Gets or sets an animation for the opening and closing of a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span></summary>
        <value><span data-ttu-id="b9a00-303">El valor de enumeración <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> que define una animación para abrir y cerrar un control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-303">The <see cref="T:System.Windows.Controls.Primitives.PopupAnimation" /> enumeration value that defines an animation to open and close a <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span> <span data-ttu-id="b9a00-304">De manera predeterminada, es <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-304">The default is <see cref="F:System.Windows.Controls.Primitives.PopupAnimation.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-305">Un <xref:System.Windows.Controls.Primitives.Popup> solo se puede animar cuando la <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-305">A <xref:System.Windows.Controls.Primitives.Popup> can only animate when the <xref:System.Windows.Controls.Primitives.Popup.AllowsTransparency%2A> property is set to `true`.</span></span> <span data-ttu-id="b9a00-306">Esto requiere que la aplicación que crea el <xref:System.Windows.Controls.Primitives.Popup> control se ejecute con plena confianza.</span><span class="sxs-lookup"><span data-stu-id="b9a00-306">This requires the application that creates the <xref:System.Windows.Controls.Primitives.Popup> control to run with full trust.</span></span>  
  
 <span data-ttu-id="b9a00-307">Si el <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> está animada, el <xref:System.Windows.Controls.Primitives.Popup> no se anima.</span><span class="sxs-lookup"><span data-stu-id="b9a00-307">If the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A> is animated, the <xref:System.Windows.Controls.Primitives.Popup> will not be animated.</span></span>  
  
<a name="dependencyPropertyInfo_PopupAnimation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-308">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-308">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-309">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-309">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty>|  
|<span data-ttu-id="b9a00-310">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-310">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-311">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-311">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-312">En el ejemplo siguiente se muestra cómo establecer la propiedad <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-312">The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.PopupAnimation%2A> property.</span></span>  
  
 [!code-csharp[PopupSnips#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#allowstransparency)]
 [!code-vb[PopupSnips#AllowsTransparency](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#allowstransparency)]
 [!code-xaml[PopupSnips#AllowsTransparency](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#allowstransparency)]  
  
 [!code-csharp[PopupSnips#Animation](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#animation)]
 [!code-vb[PopupSnips#Animation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#animation)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.PopupAnimation" />
      </Docs>
    </Member>
    <Member MemberName="PopupAnimationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PopupAnimationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PopupAnimationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.PopupAnimationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PopupAnimationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PopupAnimationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PopupAnimationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.PopupAnimationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-313">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-313">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.Primitives.Popup.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-314">Obtiene o establece un valor que indica si el control <see cref="T:System.Windows.Controls.Primitives.Popup" /> debe cerrarse cuando deja de estar en el foco.</span><span class="sxs-lookup"><span data-stu-id="b9a00-314">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when the control is no longer in focus.</span></span></summary>
        <value><span data-ttu-id="b9a00-315">Es <see langword="true" /> si el control <see cref="T:System.Windows.Controls.Primitives.Popup" /> se cierra cuando la propiedad <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> se establece en <see langword="false" />; <see langword="false" /> si el control <see cref="T:System.Windows.Controls.Primitives.Popup" /> se cierra cuando se produce un evento del mouse o teclado fuera del control <see cref="T:System.Windows.Controls.Primitives.Popup" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-315"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when <see cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" /> property is set to <see langword="false" />; <see langword="false" /> if the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control closes when a mouse or keyboard event occurs outside the <see cref="T:System.Windows.Controls.Primitives.Popup" /> control.</span></span> <span data-ttu-id="b9a00-316">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-316">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-317">Cuando el <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> propiedad está establecida en `true`, <xref:System.Windows.Controls.Primitives.Popup> permanece abierto hasta que se cierra explícitamente estableciendo la <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> propiedad `false`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-317">When the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property is set to `true`, <xref:System.Windows.Controls.Primitives.Popup> stays open until it is explicitly closed by setting the <xref:System.Windows.Controls.Primitives.Popup.IsOpen%2A> property to `false`.</span></span> <span data-ttu-id="b9a00-318">Cuando <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> es `false`, <xref:System.Windows.Controls.Primitives.Popup> control intercepta todos los eventos de mouse y teclado para determinar cuándo se produce uno de estos eventos fuera de la <xref:System.Windows.Controls.Primitives.Popup> control.</span><span class="sxs-lookup"><span data-stu-id="b9a00-318">When <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> is `false`, the <xref:System.Windows.Controls.Primitives.Popup> control intercepts all mouse and keyboard events to determine when one of these events occurs outside the <xref:System.Windows.Controls.Primitives.Popup> control.</span></span>  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-319">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-320">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-320">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.StaysOpenProperty>|  
|<span data-ttu-id="b9a00-321">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-321">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-322">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-322">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-323">En el ejemplo siguiente se muestra cómo establecer la propiedad <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-323">The following example shows how to set the <xref:System.Windows.Controls.Primitives.Popup.StaysOpen%2A> property.</span></span>  
  
 [!code-csharp[PopupSnips#StaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml.cs#staysopen)]
 [!code-vb[PopupSnips#StaysOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PopupSnips/visualbasic/window1.xaml.vb#staysopen)]
 [!code-xaml[PopupSnips#StaysOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSnips/Csharp/Window1.xaml#staysopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.IsOpen" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-324">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-324">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.StaysOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b9a00-325">Objeto que se va a agregar como elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="b9a00-325">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="b9a00-326">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9a00-326">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.Popup.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b9a00-327">Cadena que se va a agregar al objeto.</span><span class="sxs-lookup"><span data-stu-id="b9a00-327">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="b9a00-328">Este miembro es compatible con la infraestructura de [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] y no está diseñado para utilizarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="b9a00-328">This member supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.Primitives.Popup.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-329">Obtiene o establece la distancia vertical entre el origen del destino y el punto de alineación del elemento emergente.</span><span class="sxs-lookup"><span data-stu-id="b9a00-329">Gets or sets the vertical distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="b9a00-330">Distancia vertical entre el origen de destino y el punto de alineación emergente.</span><span class="sxs-lookup"><span data-stu-id="b9a00-330">The vertical distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="b9a00-331">Para obtener información sobre el punto de alineación de origen y el elemento emergente de destino, vea [selección de ubicación de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-331">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="b9a00-332">El valor predeterminado es 0.</span><span class="sxs-lookup"><span data-stu-id="b9a00-332">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b9a00-333">Puede colocar un elemento emergente estableciendo el <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, y <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="b9a00-333">You can position a popup by setting the <xref:System.Windows.Controls.Primitives.Popup.PlacementTarget%2A>, <xref:System.Windows.Controls.Primitives.Popup.PlacementRectangle%2A>, <xref:System.Windows.Controls.Primitives.Popup.Placement%2A>, <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A>, and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties.</span></span> <span data-ttu-id="b9a00-334">Para más información, consulte [Posición de un control Popup](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="b9a00-334">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="b9a00-335">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="b9a00-335">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="b9a00-336">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="b9a00-336">XAML Values</span></span>  
 `double`  
 <xref:System.Double>  
  
 <span data-ttu-id="b9a00-337">Representación de cadena de un <xref:System.Double> valor.</span><span class="sxs-lookup"><span data-stu-id="b9a00-337">A string representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="b9a00-338">Esto se interpreta como un [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] medida.</span><span class="sxs-lookup"><span data-stu-id="b9a00-338">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="b9a00-339">Las cadenas no es necesario incluir explícitamente puntos decimales.</span><span class="sxs-lookup"><span data-stu-id="b9a00-339">Strings do not have to explicitly include decimal points.</span></span> <span data-ttu-id="b9a00-340">Por ejemplo, un valor de `1` es aceptable.</span><span class="sxs-lookup"><span data-stu-id="b9a00-340">For example, a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="b9a00-341">El mismo <xref:System.Double> aplican restricciones de intervalo como las que se mencionan en la sección de valor de propiedad de este tema.</span><span class="sxs-lookup"><span data-stu-id="b9a00-341">The same <xref:System.Double> range restrictions apply as those that are mentioned in the Property Value section of this topic.</span></span>  
  
 `qualifiedDouble`  
 <span data-ttu-id="b9a00-342">Un `double` valor, como se describe anteriormente en esta tabla, seguido de una de las siguientes cadenas de declaración de unidad: `px`, `in`, `cm`, o `pt`.</span><span class="sxs-lookup"><span data-stu-id="b9a00-342">A `double` value as described earlier in this table, followed by one of the following unit declaration strings: `px`, `in`, `cm`, or `pt`.</span></span>  
  
 <span data-ttu-id="b9a00-343">`px` (valor predeterminado) es [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="b9a00-343">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="b9a00-344">`in` pulgadas; 1 en = 96 px</span><span class="sxs-lookup"><span data-stu-id="b9a00-344">`in` is inches; 1in=96px</span></span>  
  
 <span data-ttu-id="b9a00-345">`cm` es centímetros; 1cm=(96/2.54) px</span><span class="sxs-lookup"><span data-stu-id="b9a00-345">`cm` is centimeters; 1cm=(96/2.54) px</span></span>  
  
 <span data-ttu-id="b9a00-346">`pt` puntos; 1pt=(96/72) px</span><span class="sxs-lookup"><span data-stu-id="b9a00-346">`pt` is points; 1pt=(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b9a00-347">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="b9a00-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b9a00-348">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="b9a00-348">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty>|  
|<span data-ttu-id="b9a00-349">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="b9a00-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="b9a00-350">None</span><span class="sxs-lookup"><span data-stu-id="b9a00-350">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b9a00-351">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.Primitives.Popup> y establece el <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> y <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> propiedades a 20.</span><span class="sxs-lookup"><span data-stu-id="b9a00-351">The following example creates a <xref:System.Windows.Controls.Primitives.Popup> and sets the <xref:System.Windows.Controls.Primitives.Popup.HorizontalOffset%2A> and <xref:System.Windows.Controls.Primitives.Popup.VerticalOffset%2A> properties to 20.</span></span>  <span data-ttu-id="b9a00-352">El <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> propiedad está establecida en <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> (que es el valor predeterminado), por lo que el origen de destino es la esquina inferior izquierda del área de destino y el punto de alineación emergente es la esquina superior izquierda de la <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="b9a00-352">The <xref:System.Windows.Controls.Primitives.Popup.Placement%2A> property is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Bottom> (which is the default), so the target origin is the bottom left corner of the target area, and the popup alignment point is the top left corner of the <xref:System.Windows.Controls.Primitives.Popup>.</span></span>  
  
 [!code-xaml[PopupPositionSnippet#5](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS/Window1.xaml#5)]     
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementTarget" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.PlacementRectangle" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.Placement" />
        <altmember cref="P:System.Windows.Controls.Primitives.Popup.HorizontalOffset" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.Popup.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b9a00-353">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" />.</span><span class="sxs-lookup"><span data-stu-id="b9a00-353">Identifies the <see cref="P:System.Windows.Controls.Primitives.Popup.VerticalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="TextBoxBase" FullName="System.Windows.Controls.Primitives.TextBoxBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="011c88d0fa50a70171e6f1fef04d80c3d3e0944b" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53291800" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract TextBoxBase extends System.Windows.Controls.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8c6f2-101">Una clase base abstracta que proporciona la funcionalidad para los controles de edición de texto, incluidos <see cref="T:System.Windows.Controls.TextBox" /> y <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-101">An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-102">En el ejemplo siguiente se muestra cómo usar la clase derivada <xref:System.Windows.Controls.TextBox> objeto [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-102">The following example demonstrates how to use the derived <xref:System.Windows.Controls.TextBox> object in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 <span data-ttu-id="8c6f2-103">En el ejemplo siguiente se muestra cómo usar la clase derivada <xref:System.Windows.Controls.RichTextBox> objeto en el código.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-103">The following example demonstrates how to use the derived <xref:System.Windows.Controls.RichTextBox> object in code.</span></span>  
  
 [!code-csharp[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_richtextbox_mouseupdown)]
 [!code-vb[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_richtextbox_mouseupdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TextBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-104">Obtiene o establece un valor que indica la forma en que responde el control de edición de texto cuando el usuario presiona la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-104">Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</span></span></summary>
        <value><span data-ttu-id="8c6f2-105"><see langword="true" /> si al presionar la tecla ENTRAR se inserta una nueva línea en la posición actual del cursor; de lo contrario, se omite la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-105"><see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored.</span></span> <span data-ttu-id="8c6f2-106">El valor predeterminado es <see langword="false" /> para <see cref="T:System.Windows.Controls.TextBox" /> y <see langword="true" /> para <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-106">The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-107">La tecla ENTRAR corresponde a `VK_RETURN` código de tecla virtual.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-107">The ENTER key corresponds to `VK_RETURN` virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsReturn"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-108">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-108">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-109">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-109">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty>|  
|<span data-ttu-id="8c6f2-110">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-110">Metadata properties set to `true`</span></span>|<span data-ttu-id="8c6f2-111">None</span><span class="sxs-lookup"><span data-stu-id="8c6f2-111">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsReturnProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-112">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-112">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-113">Obtiene o establece un valor que indica la forma en que responde el control de edición de texto cuando el usuario presiona la tecla TAB.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-113">Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</span></span></summary>
        <value><span data-ttu-id="8c6f2-114"><see langword="true" /> si al presionar la tecla TAB se inserta un carácter de tabulación en la posición actual del cursor; <see langword="false" /> si al presiona la tecla TAB se mueve el foco al siguiente control que está marcado como una posición de tabulación y no se inserta un carácter de tabulación.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-114"><see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.</span></span>  
  
<span data-ttu-id="8c6f2-115">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-115">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-116">La tecla TAB corresponde a **VK_TAB** código de tecla virtual.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-116">The TAB key corresponds to **VK_TAB** virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsTab"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-117">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-118">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty>|  
|<span data-ttu-id="8c6f2-119">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="8c6f2-120">None</span><span class="sxs-lookup"><span data-stu-id="8c6f2-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsTabProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-121">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="8c6f2-122">Una cadena que especifica el texto para anexar al contenido actual del control de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-122">A string that specifies the text to append to the current contents of the text control.</span></span></param>
        <summary><span data-ttu-id="8c6f2-123">Anexa una cadena al contenido de un control de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-123">Appends a string to the contents of a text control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-124">El <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> método permite al usuario anexar texto al contenido de un control de texto sin usar la concatenación de texto, que puede producir un mejor rendimiento cuando se requieren muchas concatenaciones.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-124">The <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method enables the user to append text to the contents of a text control without using text concatenation, which, can yield better performance when many concatenations are required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-125">En el siguiente ejemplo se muestra cómo se utiliza el método <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-125">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase11)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoWordSelection : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-126">Obtiene o establece un valor que determina si cuando un usuario selecciona parte de una palabra arrastrando el mouse, se selecciona el resto de la palabra.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-126">Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</span></span></summary>
        <value><span data-ttu-id="8c6f2-127">Es <see langword="true" /> si la selección automática de fuentes está habilitada; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-127"><see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="8c6f2-128">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-128">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-129">Cuando <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> está habilitada, cada vez que se selecciona esa parte de una palabra por el usuario arrastra a través de la parte de una palabra con el mouse, la selección se expande automáticamente para incluir la palabra completa.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-129">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is enabled, every time that part of a word is selected by the user dragging over part of a word using the mouse, the selection is automatically expanded to include the whole word.</span></span> <span data-ttu-id="8c6f2-130">El usuario puede invalidar la selección automática de una palabra completa invirtiendo momentáneamente la dirección en la que se está arrastrando el puntero del mouse que se realiza la selección.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-130">The user can override automatic selection of a whole word by momentarily reversing the direction in which the mouse pointer is being dragged as the selection is made.</span></span> <span data-ttu-id="8c6f2-131">Esta acción deshace la selección automática de la palabra completa y permite al usuario seleccionar con precisión la totalidad o parte de la palabra.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-131">This action undoes the automatic selection of the whole word, and enables the user to precisely select part or all of the word.</span></span>  
  
 <span data-ttu-id="8c6f2-132">Cuando <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> está deshabilitado, una selección no se expande automáticamente para incluir palabras completas; en este caso, las selecciones precisas se determinan siempre manualmente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-132">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is disabled, a selection is not automatically expanded to include whole words; in this case, precise selections are always determined manually.</span></span>  
  
 > [!NOTE] 
 > <span data-ttu-id="8c6f2-133">Selección automática no afecta a la primera palabra que el usuario arrastra a través.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-133">Auto selection does not affect the first word that the user drags across.</span></span> <span data-ttu-id="8c6f2-134">Es solo una vez que se cruza este primer límite de palabras que surte efecto de selección automática.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-134">It is only after this first word boundary is crossed that auto selection takes effect.</span></span>  
  
<a name="dependencyPropertyInfo_AutoWordSelection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-135">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-136">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-136">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty>|  
|<span data-ttu-id="8c6f2-137">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="8c6f2-138">None</span><span class="sxs-lookup"><span data-stu-id="8c6f2-138">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoWordSelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoWordSelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoWordSelectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoWordSelectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoWordSelectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-139">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-139">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChange">
      <MemberSignature Language="C#" Value="public void BeginChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginChange();" />
      <MemberSignature Language="F#" Value="member this.BeginChange : unit -&gt; unit" Usage="textBoxBase.BeginChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-140">Inicia un bloque de cambios.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-140">Begins a change block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

 > [!NOTE] 
 > <span data-ttu-id="8c6f2-141">Cuando se llama a <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, también debe llamar a <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> para completar el bloque de cambios en caso contrario, una excepción se producirá.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-141">When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="8c6f2-142">Lógicamente, un bloque de cambios agrupa varios cambios en una unidad de deshacer única y evita que los eventos de cambio de contenido o la selección de texto que se generen hasta después del bloque de cambios.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-142">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="8c6f2-143">De este modo puede realizar varias ediciones en el elemento de texto sin el peligro de otro agente de escucha que se va a cambiar al mismo tiempo el elemento de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-143">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another listener.</span></span> <span data-ttu-id="8c6f2-144">Se crea un bloque de cambios mediante una llamada a la <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-144">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="8c6f2-145">Una llamada a la <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> método hace que todos los cambios posteriores que se incluirán en el bloque de cambio especificado hasta que una llamada correspondiente a la <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> se realiza el método.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-145">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-146">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> y <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> métodos para crear un bloque de cambios.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-146">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRedo : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-147">Obtiene un valor que indica si se puede rehacer la acción de deshacer más reciente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-147">Gets a value that indicates whether the most recent undo action can be redone.</span></span></summary>
        <value><span data-ttu-id="8c6f2-148"><see langword="true" /> si se puede rehacer la acción de deshacer más reciente; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-148"><see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="8c6f2-149">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-149">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-150">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> propiedad para determinar si se puede rehacer la acción de deshacer más reciente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-150">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> property to determine whether the most recent undo action can be redone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-151">Obtiene un valor que indica si se puede deshacer la acción más reciente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-151">Gets a value that indicates whether the most recent action can be undone.</span></span></summary>
        <value><span data-ttu-id="8c6f2-152"><see langword="true" /> Si la acción más reciente se puede deshacer; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-152"><see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="8c6f2-153">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-153">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-154">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> propiedad para determinar si se puede deshacer la acción más reciente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-154">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> property to determine whether the most recent action can be undone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-155">Obtiene o establece el pincel que se usa para pintar el símbolo de intercalación del cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-155">Gets or sets the brush that is used to paint the caret of the text box.</span></span></summary>
        <value><span data-ttu-id="8c6f2-156">Pincel que se usa para pintar el símbolo de intercalación del cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-156">The brush that is used to paint the caret of the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-157">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.TextBox> y agrega el texto "Este es un texto."</span><span class="sxs-lookup"><span data-stu-id="8c6f2-157">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="8c6f2-158">El ejemplo se establece la <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> y <xref:System.Windows.Controls.Control.Foreground%2A> las propiedades de un <xref:System.Windows.Controls.TextBox> a azul.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-158">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties of a <xref:System.Windows.Controls.TextBox> to blue.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="8c6f2-159">El ejemplo anterior genera un resultado es similar a la siguiente ilustración.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-159">The preceding example produces output that is like the following illustration.</span></span>  
  
 <span data-ttu-id="8c6f2-160">![TextBox con CaretBrush establecido en azul. ] (~/add/media/textboxcaretbrush.png "TextBox con CaretBrush establecido en azul.")</span><span class="sxs-lookup"><span data-stu-id="8c6f2-160">![TextBox with CaretBrush set to blue.](~/add/media/textboxcaretbrush.png "TextBox with CaretBrush set to blue.")</span></span>  
<span data-ttu-id="8c6f2-161">TextBox con CaretBrush establecido en azul</span><span class="sxs-lookup"><span data-stu-id="8c6f2-161">TextBox with CaretBrush set to blue</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CaretBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-162">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-162">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-163">Copia la selección actual del control de edición de texto en <see cref="T:System.Windows.Clipboard" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-163">Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-164">Una operación de copia copia el texto seleccionado a la <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-164">A copy operation copies the selected text to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="8c6f2-165">Tenga en cuenta que no se quita el texto seleccionado del control en el proceso de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-165">Note that the selected text is not removed from the text editing control in the process.</span></span> <span data-ttu-id="8c6f2-166">Un método similar, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, mueve la selección actual a la <xref:System.Windows.Clipboard> y quita el texto seleccionado del control en el proceso de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-166">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, moves the current selection to the <xref:System.Windows.Clipboard> and removes the selected text from the text editing control in the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-167">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> método para copiar el texto seleccionado en un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-167">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> method to copy the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase4)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8c6f2-168">para plena confianza para los herederos.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-168">for full trust for inheritors.</span></span> <span data-ttu-id="8c6f2-169">Este miembro no puede heredarse mediante código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-169">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-170">Quita la selección actual del control de edición de texto y lo copia en el <see cref="T:System.Windows.Clipboard" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-170">Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-171">Una operación de cortar quita la selección actual del control de edición de texto y lo copia en el <xref:System.Windows.Clipboard>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-171">A cut operation removes the current selection from the text editing control and copies it to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="8c6f2-172">Tenga en cuenta que se ha quitado el texto seleccionado (corta) del control en el proceso de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-172">Note that the selected text is removed (cut) from the text editing control in the process.</span></span> <span data-ttu-id="8c6f2-173">Un método similar, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copia la selección actual en el Portapapeles, pero no elimina el texto seleccionado del control de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-173">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copies the current selection to the Clipboard, but does not remove the selected text from the text editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-174">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> método para eliminar el texto seleccionado en un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-174">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> method to delete the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase5)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase5)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="8c6f2-175">para plena confianza para los herederos.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-175">for full trust for inheritors.</span></span> <span data-ttu-id="8c6f2-176">Este miembro no puede heredarse mediante código de confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-176">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="DeclareChangeBlock">
      <MemberSignature Language="C#" Value="public IDisposable DeclareChangeBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeclareChangeBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
      <MemberSignature Language="VB.NET" Value="Public Function DeclareChangeBlock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeclareChangeBlock();" />
      <MemberSignature Language="F#" Value="member this.DeclareChangeBlock : unit -&gt; IDisposable" Usage="textBoxBase.DeclareChangeBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-177">Crea un bloque de cambios.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-177">Creates a change block.</span></span></summary>
        <returns><span data-ttu-id="8c6f2-178">Un objeto <see cref="T:System.IDisposable" /> que hace referencia a un nuevo bloque de cambios.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-178">An <see cref="T:System.IDisposable" /> object that refers to a new change block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-179">Un bloque de cambios agrupa de manera lógica varios cambios en una unidad de deshacer única.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-179">A change block logically groups multiple changes into a single undo unit.</span></span> <span data-ttu-id="8c6f2-180">Se crea un bloque de cambios mediante una llamada a la <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-180">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="8c6f2-181">Una llamada a la <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> método hace que todos los cambios posteriores que se incluirán en el bloque de cambio especificado hasta que una llamada correspondiente a la <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> se realiza el método.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-181">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="EndChange">
      <MemberSignature Language="C#" Value="public void EndChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndChange();" />
      <MemberSignature Language="F#" Value="member this.EndChange : unit -&gt; unit" Usage="textBoxBase.EndChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-182">Finaliza un bloque de cambios.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-182">Ends a change block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 > [!NOTE] 
 > <span data-ttu-id="8c6f2-183">Cuando se llama a <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, también debe llamar a <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> para completar el bloque de cambios en caso contrario, una excepción se producirá.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-183">When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="8c6f2-184">Lógicamente, un bloque de cambios agrupa varios cambios en una unidad de deshacer única y evita que los eventos de cambio de contenido o la selección de texto que se generen hasta después del bloque de cambios.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-184">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="8c6f2-185">De este modo puede realizar varias ediciones en el elemento de texto sin el peligro de que el elemento de texto que se está cambiando al mismo tiempo, por otro proceso.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-185">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another process.</span></span> <span data-ttu-id="8c6f2-186">Se crea un bloque de cambios mediante una llamada a la <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-186">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="8c6f2-187">Una llamada a la <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> método hace que todos los cambios posteriores que se incluirán en el bloque de cambio especificado hasta que una llamada correspondiente a la <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> se realiza el método.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-187">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-188">El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> y <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> métodos para crear un bloque de cambios.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-188">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtentHeight : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-189">Obtiene el tamaño vertical del área de contenido visible.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-189">Gets the vertical size of the visible content area.</span></span></summary>
        <value><span data-ttu-id="8c6f2-190">Un valor de coma flotante que especifica el tamaño vertical del área de contenido visible, en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-190">A floating-point value that specifies the vertical size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="8c6f2-191">El valor de esta propiedad es 0.0 si el control de edición de texto no está configurado para admitir el desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-191">The value of this property is 0.0 if the text-editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="8c6f2-192">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-192">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-193">En el ejemplo siguiente se muestra cómo leer el valor de la <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-193">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtentWidth : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-194">Obtiene el tamaño horizontal del área de contenido visible.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-194">Gets the horizontal size of the visible content area.</span></span></summary>
        <value><span data-ttu-id="8c6f2-195">Un valor de coma flotante que especifica el tamaño horizontal del área de contenido visible, en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-195">A floating-point value that specifies the horizontal size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="8c6f2-196">El valor de esta propiedad es 0.0 si el control de edición de texto no está configurado para admitir el desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-196">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="8c6f2-197">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-197">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-198">En el ejemplo siguiente se muestra cómo leer el valor de la <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-198">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-199">Obtiene o establece la posición de desplazamiento horizontal.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-199">Gets or sets the horizontal scroll position.</span></span></summary>
        <value><span data-ttu-id="8c6f2-200">Un valor de coma flotante que especifica la posición del desplazamiento horizontal, en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-200">A floating-point value that specifies the horizontal scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="8c6f2-201">Establecer esta propiedad hace que el control de edición de texto se desplace al desplazamiento horizontal especificado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-201">Setting this property causes the text editing control to scroll to the specified horizontal offset.</span></span> <span data-ttu-id="8c6f2-202">Al leer esta propiedad, se devuelve el desplazamiento horizontal actual.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-202">Reading this property returns the current horizontal offset.</span></span>  
  
<span data-ttu-id="8c6f2-203">El valor de esta propiedad es 0.0 si el control de edición de texto no está configurado para admitir el desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-203">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="8c6f2-204">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-204">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-205">El desplazamiento horizontal se mide desde la derecha del área de texto visible si está trabajando en modo de derecha a izquierda; en caso contrario, se mide desde la izquierda.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-205">The horizontal offset is measured from the right of the visible text area if you are working in right-to-left mode; otherwise, it is measured from the left.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-206">En el ejemplo siguiente se muestra cómo leer el valor de la <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-206">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c6f2-207">Se ha intentado establecer esta propiedad en un valor negativo.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-207">An attempt is made to set this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-208">Obtiene o establece un valor que indica si se muestra una barra de desplazamiento horizontal.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-208">Gets or sets a value that indicates whether a horizontal scroll bar is shown.</span></span></summary>
        <value><span data-ttu-id="8c6f2-209">La enumeración <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> define este valor.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-209">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span></span>  
  
<span data-ttu-id="8c6f2-210">El valor predeterminado es <see cref="F:System.Windows.Visibility.Hidden" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-210">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HorizontalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-211">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-211">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-212">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-212">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty>|  
|<span data-ttu-id="8c6f2-213">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-213">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-214">En el ejemplo siguiente se muestra cómo establecer el valor de la <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> propiedad mediante el uso de [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-214">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-215">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-215">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInactiveSelectionHighlightEnabled : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-216">Obtiene o establece un valor que indica si el cuadro de texto muestra el texto seleccionado cuando el cuadro de texto no tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-216">Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</span></span></summary>
        <value><span data-ttu-id="8c6f2-217"><see langword="true" /> si el cuadro de texto muestra el texto seleccionado cuando no tiene el foco; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-217"><see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="8c6f2-218">El valor predeterminado registrado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-218">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="8c6f2-219">Para obtener más información sobre qué puede influir en el valor, consulte [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-219">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-220">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-220">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-221">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-221">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="8c6f2-222">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-222">Metadata properties set to `true`</span></span>|<span data-ttu-id="8c6f2-223">None</span><span class="sxs-lookup"><span data-stu-id="8c6f2-223">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInactiveSelectionHighlightEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-224">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-224">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-225">Obtiene o establece un valor que indica si el control de edición de texto es de sólo lectura para un usuario que interactúa con el control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-225">Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</span></span></summary>
        <value><span data-ttu-id="8c6f2-226"><see langword="true" /> si el contenido del control de edición de texto es de solo lectura para un usuario; de lo contrario, el usuario puede modificar el contenido del control de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-226"><see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user.</span></span> <span data-ttu-id="8c6f2-227">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-227">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-228">Este valor solo afecta a un usuario que está interactuando con el control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-228">This value only affects a user who is interacting with the control.</span></span> <span data-ttu-id="8c6f2-229">Siempre se puede modificar mediante programación el contenido de un control de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-229">The contents of a text editing control can always be modified programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-230">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-230">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-231">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-231">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty>|  
|<span data-ttu-id="8c6f2-232">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-232">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisible">
      <MemberSignature Language="C#" Value="public bool IsReadOnlyCaretVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnlyCaretVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnlyCaretVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnlyCaretVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnlyCaretVisible : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-233">Obtiene o establece un valor que indica si un cuadro de texto de solo lectura muestra un símbolo de intercalación.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-233">Gets or sets a value that indicates whether a read-only text box displays a caret.</span></span></summary>
        <value><span data-ttu-id="8c6f2-234">Es <see langword="true" /> si un cuadro de texto de solo lectura muestra un símbolo de intercalación; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-234"><see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8c6f2-235">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-235">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-236">Cuando <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> es `true`, un usuario todavía puede seleccionar y copiar el texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-236">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `true`, a user can still select and copy text.</span></span> <span data-ttu-id="8c6f2-237">Si el <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> propiedad también se establece en `true`, aparecerá un símbolo de intercalación en el cuadro de texto cuando el cuadro de texto tiene el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-237">If the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property is also set to `true`, a caret will appear in the text box when the text box has keyboard focus.</span></span> <span data-ttu-id="8c6f2-238">Cuando <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> es `false`, el <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> propiedad no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-238">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `false`, the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyCaretVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyCaretVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-239">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-239">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-240">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-240">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionActive : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-241">Obtiene un valor que indica si el cuadro de texto tiene el foco y texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-241">Gets a value that indicates whether the text box has focus and selected text.</span></span></summary>
        <value><span data-ttu-id="8c6f2-242"><see langword="true" /> si el cuadro de texto tiene el foco y texto seleccionado; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-242"><see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="8c6f2-243">El valor predeterminado registrado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-243">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="8c6f2-244">Para obtener más información sobre qué puede influir en el valor, consulte [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-244">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-245">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-245">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-246">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-246">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty>|  
|<span data-ttu-id="8c6f2-247">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-247">Metadata properties set to `true`</span></span>|<span data-ttu-id="8c6f2-248">None</span><span class="sxs-lookup"><span data-stu-id="8c6f2-248">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-249">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-249">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabled">
      <MemberSignature Language="C#" Value="public bool IsUndoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUndoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUndoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUndoEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUndoEnabled : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-250">Obtiene o establece un valor que indica si se habilita la función de deshacer para el control de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-250">Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</span></span></summary>
        <value><span data-ttu-id="8c6f2-251">Es <see langword="true" /> si está habilitada la compatibilidad de deshacer; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-251"><see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8c6f2-252">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-252">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-253">Establecer esta propiedad en `false` borra la pila de deshacer.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-253">Setting this property to `false` clears the undo stack.</span></span> <span data-ttu-id="8c6f2-254">Por lo tanto, si deshabilita deshacer y, a continuación, volver a habilitarla, deshacer comandos aún no funcionan porque la pila de deshacer se vació al deshabilitar deshacer.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-254">Therefore, if you disable undo and then re-enable it, undo commands still do not work because the undo stack was emptied when you disabled undo.</span></span>  
  
<a name="dependencyPropertyInfo_IsUndoEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-255">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-255">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-256">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-256">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty>|  
|<span data-ttu-id="8c6f2-257">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-257">Metadata properties set to `true`</span></span>|<span data-ttu-id="8c6f2-258">None</span><span class="sxs-lookup"><span data-stu-id="8c6f2-258">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-259">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> propiedad [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-259">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsUndoEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsUndoEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsUndoEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsUndoEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsUndoEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-260">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-260">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineDown();" />
      <MemberSignature Language="F#" Value="member this.LineDown : unit -&gt; unit" Usage="textBoxBase.LineDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-261">Desplaza el contenido del control una línea hacia abajo.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-261">Scrolls the contents of the control down by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-262">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-262">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase13)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineLeft();" />
      <MemberSignature Language="F#" Value="member this.LineLeft : unit -&gt; unit" Usage="textBoxBase.LineLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-263">Desplaza el contenido del control una línea hacia la izquierda.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-263">Scrolls the contents of the control to the left by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-264">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-264">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase14)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineRight();" />
      <MemberSignature Language="F#" Value="member this.LineRight : unit -&gt; unit" Usage="textBoxBase.LineRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-265">Desplaza el contenido del control una línea hacia la derecha.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-265">Scrolls the contents of the control to the right by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-266">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-266">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase15)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineUp();" />
      <MemberSignature Language="F#" Value="member this.LineUp : unit -&gt; unit" Usage="textBoxBase.LineUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-267">Desplaza el contenido del control una línea hacia arriba.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-267">Scrolls the contents of the control upward by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-268">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-268">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase16)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      </Docs>
    </Member>
    <Member MemberName="LockCurrentUndoUnit">
      <MemberSignature Language="C#" Value="public void LockCurrentUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockCurrentUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockCurrentUndoUnit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockCurrentUndoUnit();" />
      <MemberSignature Language="F#" Value="member this.LockCurrentUndoUnit : unit -&gt; unit" Usage="textBoxBase.LockCurrentUndoUnit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-269">Bloquea la unidad de deshacer más reciente de la pila de deshacer de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-269">Locks the most recent undo unit of the undo stack of the application.</span></span> <span data-ttu-id="8c6f2-270">Esto evita que la unidad bloqueada se combine con unidades de deshacer que se agregan posteriormente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-270">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-271">Llame a este método cuando una unidad de deshacer que no sean de texto se agrega a la pila de deshacer principal de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-271">Call this method when a non-text undo unit is added to the application's main undo stack.</span></span> <span data-ttu-id="8c6f2-272">Esto evita que la unidad bloqueada se combine con unidades de deshacer que se agregan posteriormente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-272">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="textBoxBase.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-273">Se llama cuando se aplica una plantilla de control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-273">Is called when a control template is applied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-274">Invalida <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-274">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8c6f2-275">Cuando se implementa en una clase derivada, este método se invoca cuando el código de aplicación o procesos internos llaman a <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-275">When implemented in a derived class, this method is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="textBoxBase.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-276">Argumentos del evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-276">Arguments of the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-277">Se le llama cada vez que un evento enrutado <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> no controlado alcanza esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-277">Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="8c6f2-278">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-278">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-279">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-279">This method has no default implementation.</span></span> <span data-ttu-id="8c6f2-280">Todavía debe llamar a la implementación base en caso de una clase intermedia en la herencia ha implementado este método.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-280">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="8c6f2-281">El propósito de este método es algo similar a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: le permite controlar el evento correspondiente de las clases derivadas con un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-281">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="8c6f2-282">En este caso, el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-282">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="8c6f2-283">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados, porque podría haber provocado el evento enrutado por un elemento secundario, que no es necesariamente el elemento que invoca los controladores.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-283">The implementation pattern of the On\* methods is different for routed events because the routed event might have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="8c6f2-284">Por lo tanto, la implementación debe tener en cuenta el evento propiedades del origen de argumentos (y no debe intentar volver a generar el evento en la mayoría de los casos).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-284">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="8c6f2-285">Las subclases de <xref:System.Windows.Controls.Primitives.TextBoxBase> puede llamar a métodos de controlador de clase privada cuando se recibe el evento a lo largo de la ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-285">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="8c6f2-286">Un escenario es tomar los argumentos del evento y marcar deliberadamente el evento como controlado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-286">One scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-287">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-287">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-288">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.DragDrop.DragEnter" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-288">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-289">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-289">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-290">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-290">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-291">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.DragDrop.DragLeave" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-291">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-292">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-292">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-293">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-293">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-294">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.DragDrop.DragOver" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-294">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-295">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-295">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-296">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-296">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-297">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.DragDrop.DragEnter" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-297">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-298">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-298">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="textBoxBase.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-299">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-299">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-300">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.DragDrop.GiveFeedback" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-300">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-301">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-301">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="textBoxBase.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-302">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-302">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-303">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-303">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-304">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-304">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-305">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-305">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-306">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-306">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-307">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-307">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-308">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-308">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-309">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-309">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-310">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-310">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="textBoxBase.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-311">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-311">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-312">Provoca el evento <see cref="E:System.Windows.UIElement.LostFocus" /> (utilizando los argumentos proporcionados).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-312">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="textBoxBase.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-313">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-313">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-314">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-314">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-315">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-315">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="textBoxBase.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-316">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-316">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-317">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.Input.Mouse.MouseDown" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-317">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-318">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-318">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-319">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-319">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-320">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.Input.Mouse.MouseMove" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-320">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-321">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-321">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-322">Argumentos del evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-322">Arguments of the event.</span></span> <span data-ttu-id="8c6f2-323">Estos argumentos incluirán detalles sobre qué botón del mouse se presionó y sobre el estado administrado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-323">These arguments will include details about which mouse button was depressed, and the handled state.</span></span></param>
        <summary><span data-ttu-id="8c6f2-324">Se invoca siempre que un evento <see cref="E:System.Windows.Input.Mouse.MouseUp" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-324">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-325">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-325">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="textBoxBase.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-326">Los argumentos de la rueda del mouse que se asocian a este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-326">The mouse wheel arguments that are associated with this event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-327">Se llama cuando un evento <see cref="E:System.Windows.UIElement.MouseWheel" /> se enruta a esta clase (o a una clase que hereda de esta clase).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-327">Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-328">El <xref:System.Windows.UIElement.MouseWheel> evento tiene lugar cuando se revierte la rueda del mouse.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-328">The <xref:System.Windows.UIElement.MouseWheel> event occurs when the mouse wheel is rolled.</span></span>  
  
 <span data-ttu-id="8c6f2-329">Invalida <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-329">Overrides <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-330">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-330">The event data.</span></span></param>
        <summary><span data-ttu-id="8c6f2-331">Se llama cuando se produce <see cref="E:System.Windows.UIElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-331">Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="textBoxBase.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-332">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-332">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-333">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-333">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-334">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-334">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-335">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-335">This method has no default implementation.</span></span> <span data-ttu-id="8c6f2-336">Todavía se recomienda llamar a base() en su implementación, en caso de una clase intermedia en la herencia implementa este método.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-336">Calling base() in your implementation is still recommended, in case an intermediate class in the inheritance implemented this method.</span></span> <span data-ttu-id="8c6f2-337">Se puede llamar a base() antes o después de su tratamiento especial, dependiendo de sus requisitos.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-337">You may call base() either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="8c6f2-338">El propósito de este método es algo similar a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: le permite controlar el evento correspondiente de las clases derivadas con un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-338">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="8c6f2-339">En este caso, el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-339">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="8c6f2-340">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se ha desencadenado el evento enrutado por un elemento secundario, que no es necesariamente el elemento que invoca los controladores.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-340">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="8c6f2-341">Por lo tanto, la implementación debe tener en cuenta el evento propiedades del origen de argumentos (y no debe intentar volver a generar el evento en la mayoría de los casos).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-341">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="8c6f2-342">Las subclases de <xref:System.Windows.Controls.Primitives.TextBoxBase> puede elegir llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-342">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="8c6f2-343">Un escenario es tomar los argumentos del evento y marcar el evento como controlado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-343">One scenario is to take the arguments of the event and mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="textBoxBase.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-344">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-344">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-345">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-345">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-346">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-346">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnSelectionChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="textBoxBase.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-347">Los argumentos que se asocian al evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-347">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-348">Se llama cuando el símbolo de intercalación o la selección actual cambia de posición.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-348">Is called when the caret or current selection changes position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-349">Este método provoca un <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-349">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="override this.OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="textBoxBase.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate"><span data-ttu-id="8c6f2-350">Un objeto <see cref="T:System.Windows.Controls.ControlTemplate" /> que especifica la plantilla de control que está activa actualmente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-350">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</span></span></param>
        <param name="newTemplate"><span data-ttu-id="8c6f2-351">Un objeto <see cref="T:System.Windows.Controls.ControlTemplate" /> que especifica una nueva plantilla de control para utilizar.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-351">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</span></span></param>
        <summary><span data-ttu-id="8c6f2-352">Se llama cuando cambia la plantilla del control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-352">Is called when the control template changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-353">Invalida <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-353">Overrides <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (System.Windows.Controls.TextChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.Windows.Controls.TextChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As TextChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(System::Windows::Controls::TextChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : System.Windows.Controls.TextChangedEventArgs -&gt; unit&#xA;override this.OnTextChanged : System.Windows.Controls.TextChangedEventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.TextChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-354">Los argumentos que se asocian al evento <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-354">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-355">Se llama cuando cambia el contenido en este control de edición.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-355">Is called when content in this editing control changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-356">Este método provoca un <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-356">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="textBoxBase.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8c6f2-357">Proporciona datos sobre el evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-357">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="8c6f2-358">Se invoca siempre que un evento enrutado asociado <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> sin controlar llega a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-358">Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="8c6f2-359">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-359">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageDown();" />
      <MemberSignature Language="F#" Value="member this.PageDown : unit -&gt; unit" Usage="textBoxBase.PageDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-360">Desplaza el contenido del control una página hacia abajo.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-360">Scrolls the contents of the control down by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-361">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-361">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase17)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageLeft();" />
      <MemberSignature Language="F#" Value="member this.PageLeft : unit -&gt; unit" Usage="textBoxBase.PageLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-362">Desplaza el contenido del control una página hacia la izquierda.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-362">Scrolls the contents of the control to the left by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-363">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-363">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase18)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageRight();" />
      <MemberSignature Language="F#" Value="member this.PageRight : unit -&gt; unit" Usage="textBoxBase.PageRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-364">Desplaza el contenido del control una página hacia la derecha.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-364">Scrolls the contents of the control to the right by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-365">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-365">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase19)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageUp();" />
      <MemberSignature Language="F#" Value="member this.PageUp : unit -&gt; unit" Usage="textBoxBase.PageUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-366">Desplaza el contenido del control una página hacia arriba.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-366">Scrolls the contents of the control up by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-367">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-367">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase20)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-368">Pega el contenido del Portapapeles sobre la selección actual en el control de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-368">Pastes the contents of the Clipboard over the current selection in the text editing control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-369">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> método para pegar el contenido seleccionado en un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-369">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> method to paste selected content into a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase6)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberSignature Language="F#" Value="member this.Redo : unit -&gt; bool" Usage="textBoxBase.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-370">Deshace el comando de deshacer más reciente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-370">Undoes the most recent undo command.</span></span> <span data-ttu-id="8c6f2-371">En otros términos, rehace la unidad de deshacer más reciente en la pila de deshacer.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-371">In other words, redoes the most recent undo unit on the undo stack.</span></span></summary>
        <returns><span data-ttu-id="8c6f2-372">Es <see langword="true" /> si el resultado de la operación de rehacer es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-372"><see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8c6f2-373">Este método devuelve <see langword="false" /> si no hay ningún comando de deshacer disponible (la pila de deshacer está vacía).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-373">This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-374">En el siguiente ejemplo se muestra cómo se utiliza el método <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-374">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToEnd">
      <MemberSignature Language="C#" Value="public void ScrollToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToEnd();" />
      <MemberSignature Language="F#" Value="member this.ScrollToEnd : unit -&gt; unit" Usage="textBoxBase.ScrollToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-375">Desplaza la vista del control de edición al final del contenido.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-375">Scrolls the view of the editing control to the end of the content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-376">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-376">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase22)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHome">
      <MemberSignature Language="C#" Value="public void ScrollToHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHome();" />
      <MemberSignature Language="F#" Value="member this.ScrollToHome : unit -&gt; unit" Usage="textBoxBase.ScrollToHome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-377">Desplaza la vista del control de edición al principio de la ventanilla.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-377">Scrolls the view of the editing control to the beginning of the viewport.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-378">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> método para desplazarse por el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-378">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase21)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHorizontalOffset(double offset);" />
      <MemberSignature Language="F#" Value="member this.ScrollToHorizontalOffset : double -&gt; unit" Usage="textBoxBase.ScrollToHorizontalOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="8c6f2-379">Valor doble que especifica el desplazamiento horizontal al que debe desplazarse.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-379">A double value that specifies the horizontal offset to scroll to.</span></span></param>
        <summary><span data-ttu-id="8c6f2-380">Desplaza el contenido del control de edición al desplazamiento vertical especificado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-380">Scrolls the contents of the editing control to the specified horizontal offset.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToVerticalOffset(double offset);" />
      <MemberSignature Language="F#" Value="member this.ScrollToVerticalOffset : double -&gt; unit" Usage="textBoxBase.ScrollToVerticalOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="8c6f2-381">Valor double que especifica el desplazamiento vertical al que debe desplazarse.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-381">A double value that specifies the vertical offset to scroll to.</span></span></param>
        <summary><span data-ttu-id="8c6f2-382">Desplaza el contenido del control de edición al desplazamiento vertical especificado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-382">Scrolls the contents of the editing control to the specified vertical offset.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-383">Selecciona todo el contenido del control de edición de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-383">Selects all the contents of the text editing control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-384">En el ejemplo siguiente se muestra cómo usar el <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> método para seleccionar todo el contenido de un <xref:System.Windows.Controls.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-384">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> method to select all the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase7)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-385">Obtiene o establece el pincel que resalta el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-385">Gets or sets the brush that highlights selected text.</span></span></summary>
        <value><span data-ttu-id="8c6f2-386">Pincel que resalta el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-386">The brush that highlights selected text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-387">Puede especificar el pincel que resalta el texto seleccionado estableciendo el <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> y <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-387">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> properties.</span></span> <span data-ttu-id="8c6f2-388">El <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> propiedad especifica la opacidad de la <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-388">The <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property specifies the opacity of the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-389">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.TextBox> y agrega el texto "Este es un texto."</span><span class="sxs-lookup"><span data-stu-id="8c6f2-389">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="8c6f2-390">El ejemplo se establece la <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> propiedad a rojo y el <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> propiedad en 0,5 para personalizar la apariencia del texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-390">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="8c6f2-391">La siguiente ilustración muestra el <xref:System.Windows.Controls.TextBox> del ejemplo anterior con el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-391">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="8c6f2-392">![TextBox con SelectionBrush en rojo](~/add/media/textboxselectionbrush.png "TextBox con SelectionBrush en rojo")</span><span class="sxs-lookup"><span data-stu-id="8c6f2-392">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="8c6f2-393">Texto seleccionado en un control TextBox con SelectionBrush establecido en rojo</span><span class="sxs-lookup"><span data-stu-id="8c6f2-393">Selected text in a TextBox with SelectionBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-394">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-394">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : System.Windows.RoutedEventHandler " Usage="member this.SelectionChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-395">Se produce cuando varía la selección de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-395">Occurs when the text selection has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectionChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="8c6f2-396">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="8c6f2-396">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-397">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-397">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent>|  
|<span data-ttu-id="8c6f2-398">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="8c6f2-398">Routing strategy</span></span>|<span data-ttu-id="8c6f2-399">Propagación</span><span class="sxs-lookup"><span data-stu-id="8c6f2-399">Bubbling</span></span>|  
|<span data-ttu-id="8c6f2-400">delegado</span><span class="sxs-lookup"><span data-stu-id="8c6f2-400">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-401">En el ejemplo siguiente se muestra cómo controlar el <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> eventos mediante código.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-401">The following example demonstrates how to handle the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event by using code.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase10)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectionChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectionChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectionChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-402">Identifica el evento enrutado <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-402">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionOpacity : double with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-403">Obtiene o establece la opacidad del objeto <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-403">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span></span></summary>
        <value><span data-ttu-id="8c6f2-404">La opacidad del objeto <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-404">The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span></span> <span data-ttu-id="8c6f2-405">El valor predeterminado es 0.4.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-405">The default is 0.4.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-406">Si <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> se establece en 0, el <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> es transparente y no está visible.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-406">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 0, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="8c6f2-407">Si <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> está establecido en 1.0 o superior, el <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> es opaco y seleccionado no está visible el texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-407">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 1.0 or greater, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-408">En el ejemplo siguiente se crea un <xref:System.Windows.Controls.TextBox> y agrega el texto "Este es un texto."</span><span class="sxs-lookup"><span data-stu-id="8c6f2-408">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="8c6f2-409">El ejemplo se establece la <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> propiedad a rojo y el <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> propiedad en 0,5 para personalizar la apariencia del texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-409">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="8c6f2-410">La siguiente ilustración muestra el <xref:System.Windows.Controls.TextBox> del ejemplo anterior con el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-410">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="8c6f2-411">![TextBox con SelectionBrush en rojo](~/add/media/textboxselectionbrush.png "TextBox con SelectionBrush en rojo")</span><span class="sxs-lookup"><span data-stu-id="8c6f2-411">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="8c6f2-412">Texto seleccionado en un control TextBox con SelectionOpacity establecido en 0,5</span><span class="sxs-lookup"><span data-stu-id="8c6f2-412">Selected text in a TextBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionOpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-413">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-413">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTextBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionTextBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionTextBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionTextBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionTextBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionTextBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-414">Obtiene o establece un valor que define el pincel usado para seleccionar texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-414">Gets or sets a value that defines the brush used for selected text.</span></span></summary>
        <value><span data-ttu-id="8c6f2-415">El pincel utilizado para el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-415">The brush used for selected text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks  

<span data-ttu-id="8c6f2-416">El valor predeterminado es un <xref:System.Windows.Media.SolidColorBrush> con el color definido por el sistema para el texto resaltado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-416">The default value is a <xref:System.Windows.Media.SolidColorBrush> with the system-defined color for highlighted text.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTextBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionTextBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionTextBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionTextBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionTextBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionTextBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-417">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-417">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks  

<span data-ttu-id="8c6f2-418">Si esta propiedad es `null`, no se representa el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-418">If this property is `null`, selected text is not rendered.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheck">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellCheck SpellCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SpellCheck SpellCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellCheck As SpellCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellCheck ^ SpellCheck { System::Windows::Controls::SpellCheck ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpellCheck : System.Windows.Controls.SpellCheck" Usage="System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-419">Obtiene un objeto <see cref="T:System.Windows.Controls.SpellCheck" /> que ofrece acceso a los errores de ortografía en el contenido de texto de un elemento <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> o <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-419">Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></summary>
        <value><span data-ttu-id="8c6f2-420">Un objeto <see cref="T:System.Windows.Controls.SpellCheck" /> que ofrece acceso a los errores de ortografía en el contenido de texto de un elemento <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> o <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-420">A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span>  
  
<span data-ttu-id="8c6f2-421">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-421">This property has no default value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.SpellingError" />
        <altmember cref="T:System.Windows.Controls.SpellingReform" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.TextChangedEventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.TextChangedEventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As TextChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::TextChangedEventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : System.Windows.Controls.TextChangedEventHandler " Usage="member this.TextChanged : System.Windows.Controls.TextChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.TextChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-422">Se produce cuando cambia el contenido en el elemento de texto.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-422">Occurs when content changes in the text element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-423">Para un <xref:System.Windows.Controls.TextBox>, este evento se produce cuando cambia su texto; para un <xref:System.Windows.Controls.RichTextBox>, este evento se produce cuando cualquiera de contenido o dar formato a los cambios (por ejemplo, imágenes, tabla o color de fondo).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-423">For a <xref:System.Windows.Controls.TextBox>, this event occurs when its text changes; for a <xref:System.Windows.Controls.RichTextBox>, this event occurs when any content or formatting changes (for example, images, table, or background color).</span></span>  
  
<a name="routedEventInfo_TextChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="8c6f2-424">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="8c6f2-424">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-425">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-425">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent>|  
|<span data-ttu-id="8c6f2-426">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="8c6f2-426">Routing strategy</span></span>|<span data-ttu-id="8c6f2-427">Propagación</span><span class="sxs-lookup"><span data-stu-id="8c6f2-427">Bubbling</span></span>|  
|<span data-ttu-id="8c6f2-428">delegado</span><span class="sxs-lookup"><span data-stu-id="8c6f2-428">Delegate</span></span>|<xref:System.Windows.Controls.TextChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.TextChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TextChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-429">Identifica el evento enrutado <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-429">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; bool" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8c6f2-430">Deshace el comando de deshacer más reciente.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-430">Undoes the most recent undo command.</span></span> <span data-ttu-id="8c6f2-431">En otros términos, deshace la unidad de deshacer más reciente en la pila de deshacer.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-431">In other words, undoes the most recent undo unit on the undo stack.</span></span></summary>
        <returns><span data-ttu-id="8c6f2-432">Es <see langword="true" /> si el resultado de la operación de fase de reversión es correcto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-432"><see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="8c6f2-433">Este método devuelve <see langword="false" /> si la pila de deshacer está vacía.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-433">This method returns <see langword="false" /> if the undo stack is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-434">En el siguiente ejemplo se muestra cómo se utiliza el método <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-434">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="UndoLimit">
      <MemberSignature Language="C#" Value="public int UndoLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UndoLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property UndoLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UndoLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UndoLimit : int with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-435">Obtiene o establece el número de acciones almacenadas en una cola de acciones de deshacer.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-435">Gets or sets the number of actions stored in the undo queue.</span></span></summary>
        <value><span data-ttu-id="8c6f2-436">Número de acciones almacenadas en una cola de acciones de deshacer.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-436">The number of actions stored in the undo queue.</span></span> <span data-ttu-id="8c6f2-437">El valor predeterminado es -1, lo que significa que la cola de deshacer se limita a la memoria que está disponible.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-437">The default is -1, which means the undo queue is limited to the memory that is available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-438">Establecer <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> borra la cola de deshacer.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-438">Setting <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> clears the undo queue.</span></span> <span data-ttu-id="8c6f2-439">Cuando <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> se establece en -1, la cola de deshacer está limitada sólo por la memoria que está disponible.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-439">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to -1, the undo queue is limited only by the memory that is available.</span></span> <span data-ttu-id="8c6f2-440">Cuando <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> se establece en 0, fase de reversión está deshabilitada en el <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-440">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to 0, undo is disabled on the <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span></span>  
  
 <span data-ttu-id="8c6f2-441"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> se introdujo en .NET Framework versión 3.5.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-441"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="8c6f2-442">Para más información, vea [Versiones y dependencias](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-442">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8c6f2-443"><see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> se establece después de llamar a <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> y antes de llamar a <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-443"><see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UndoLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UndoLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UndoLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UndoLimitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UndoLimitProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-444">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-444">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-445"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> se introdujo en .NET Framework versión 3.5.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-445"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> is introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="8c6f2-446">Para más información, vea [Versiones y dependencias](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="8c6f2-446">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-447">Obtiene o establece la posición de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-447">Gets or sets the vertical scroll position.</span></span></summary>
        <value><span data-ttu-id="8c6f2-448">Un valor de coma flotante que especifica la posición del desplazamiento vertical, en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-448">A floating-point value that specifies the vertical scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="8c6f2-449">Establecer esta propiedad hace que el control de edición de texto se desplace al desplazamiento vertical especificado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-449">Setting this property causes the text editing control to scroll to the specified vertical offset.</span></span> <span data-ttu-id="8c6f2-450">Al leer esta propiedad, se devuelve el desplazamiento vertical actual.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-450">Reading this property returns the current vertical offset.</span></span>  
  
<span data-ttu-id="8c6f2-451">El valor de esta propiedad es 0.0 si el control de edición de texto no está configurado para admitir el desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-451">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="8c6f2-452">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-452">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c6f2-453">El desplazamiento vertical se mide desde la parte superior del área de texto visible.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-453">The vertical offset is measured from the top of the visible text area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c6f2-454">En el ejemplo siguiente se muestra cómo leer el valor de la <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-454">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8c6f2-455">Se ha intentado establecer esta propiedad en un valor negativo.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-455">An attempt is made to set this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-456">Obtiene o establece un valor que indica si se muestra una barra de desplazamiento vertical.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-456">Gets or sets a value that indicates whether a vertical scroll bar is shown.</span></span></summary>
        <value><span data-ttu-id="8c6f2-457">La enumeración <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> define este valor.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-457">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span></span>  
  
<span data-ttu-id="8c6f2-458">El valor predeterminado es <see cref="F:System.Windows.Visibility.Hidden" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-458">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_VerticalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="8c6f2-459">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="8c6f2-459">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="8c6f2-460">Campo de identificador</span><span class="sxs-lookup"><span data-stu-id="8c6f2-460">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty>|  
|<span data-ttu-id="8c6f2-461">Establecen las propiedades de metadatos en `true`</span><span class="sxs-lookup"><span data-stu-id="8c6f2-461">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="T:System.Windows.Controls.ScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-462">Identifica la propiedad de dependencia <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-462">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewportHeight : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-463">Obtiene el tamaño vertical del área de contenido desplazable.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-463">Gets the vertical size of the scrollable content area.</span></span></summary>
        <value><span data-ttu-id="8c6f2-464">Un valor de coma flotante que especifica el tamaño vertical del área de contenido desplazable, en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-464">A floating-point value that specifies the vertical size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="8c6f2-465">El valor de esta propiedad es 0.0 si el control de edición de texto no está configurado para admitir el desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-465">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="8c6f2-466">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-466">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-467">En el ejemplo siguiente se muestra cómo leer el valor de la <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-467">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewportWidth : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c6f2-468">Obtiene el tamaño horizontal del área de contenido desplazable.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-468">Gets the horizontal size of the scrollable content area.</span></span></summary>
        <value><span data-ttu-id="8c6f2-469">Un valor de coma flotante que especifica el tamaño horizontal del área de contenido desplazable, en [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="8c6f2-469">A floating-point value that specifies the horizontal size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="8c6f2-470">El valor de esta propiedad es 0.0 si el control de edición de texto no está configurado para admitir el desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-470">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="8c6f2-471">Esta propiedad no tiene ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-471">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c6f2-472">En el ejemplo siguiente se muestra cómo leer el valor de la <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="8c6f2-472">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
  </Members>
</Type>
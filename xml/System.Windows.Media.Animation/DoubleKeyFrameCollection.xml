<Type Name="DoubleKeyFrameCollection" FullName="System.Windows.Media.Animation.DoubleKeyFrameCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="79b3e24225dc4a7dc8988d78478917c8078fb153" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53517979" /></Metadata><TypeSignature Language="C#" Value="public class DoubleKeyFrameCollection : System.Windows.Freezable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DoubleKeyFrameCollection extends System.Windows.Freezable implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DoubleKeyFrameCollection&#xA;Inherits Freezable&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class DoubleKeyFrameCollection : System::Windows::Freezable, System::Collections::IList" />
  <TypeSignature Language="F#" Value="type DoubleKeyFrameCollection = class&#xA;    inherit Freezable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="dafbb-101">Representa una colección de objetos <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-101">Represents a collection of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-102">Esta colección se usa como parte de un <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> para animar un <xref:System.Double> valor de propiedad a lo largo de un conjunto de fotogramas clave.</span><span class="sxs-lookup"><span data-stu-id="dafbb-102">This collection is used as part of a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> to animate a <xref:System.Double> property value along a set of key frames.</span></span>  
  
<a name="xamlImplicitCollectionUsage_DoubleKeyFrameCollection"></a>   
## <a name="xaml-implicit-collection-usage"></a><span data-ttu-id="dafbb-103">Uso de colecciones implícitas XAML</span><span class="sxs-lookup"><span data-stu-id="dafbb-103">XAML Implicit Collection Usage</span></span>  
  
```  
<object>  
  <object.property>  
    oneOrMoreDoubleKeyFrameObjectElements  
  </object.property>  
</object>  
```  
  
<a name="xamlValues_DoubleKeyFrameCollection"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dafbb-104">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="dafbb-104">XAML Values</span></span>  
 <span data-ttu-id="dafbb-105">*oneOrMoreDoubleKeyFrameObjectElements*</span><span class="sxs-lookup"><span data-stu-id="dafbb-105">*oneOrMoreDoubleKeyFrameObjectElements*</span></span>  
 <span data-ttu-id="dafbb-106">Uno o más <xref:System.Windows.Media.Animation.DoubleKeyFrame> objetos declarados mediante la sintaxis de elemento de objeto.</span><span class="sxs-lookup"><span data-stu-id="dafbb-106">One or more <xref:System.Windows.Media.Animation.DoubleKeyFrame> objects, declared using object element syntax.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dafbb-107">En el ejemplo siguiente se muestra cómo usar un <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> animación.</span><span class="sxs-lookup"><span data-stu-id="dafbb-107">The following example demonstrates how to use a <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames> animation.</span></span>  
  
 [!code-xaml[keyframes_ovw_snippet#AltDoubleAnimationUsingKeyFramesWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/keyframes_ovw_snippet/CS/AltDoubleAnimationUsingKeyFramesExample.xaml#altdoubleanimationusingkeyframeswholepage)] 
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160012"><span data-ttu-id="dafbb-108">Ejemplo de animación de fotogramas clave</span><span class="sxs-lookup"><span data-stu-id="dafbb-108">KeyFrame Animation Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DoubleKeyFrameCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DoubleKeyFrameCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dafbb-109">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-109">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Media.Animation.DoubleKeyFrame keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Media.Animation.DoubleKeyFrame keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Add(System.Windows.Media.Animation.DoubleKeyFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (keyFrame As DoubleKeyFrame) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Media::Animation::DoubleKeyFrame ^ keyFrame);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Media.Animation.DoubleKeyFrame -&gt; int" Usage="doubleKeyFrameCollection.Add keyFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFrame" Type="System.Windows.Media.Animation.DoubleKeyFrame" />
      </Parameters>
      <Docs>
        <param name="keyFrame"><span data-ttu-id="dafbb-110">Clase <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> que se va agregar al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-110">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to add to the end of the collection.</span></span></param>
        <summary><span data-ttu-id="dafbb-111">Agrega una clase <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-111">Adds a <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to the end of the collection.</span></span></summary>
        <returns><span data-ttu-id="dafbb-112">Índice al que se agregó el <paramref name="keyFrame" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-112">The index at which the <paramref name="keyFrame" /> was added.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="doubleKeyFrameCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dafbb-113">Quita todos los objetos <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-113">Removes all <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.DoubleKeyFrameCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.DoubleKeyFrameCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As DoubleKeyFrameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::DoubleKeyFrameCollection ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.DoubleKeyFrameCollection" Usage="doubleKeyFrameCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.DoubleKeyFrameCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dafbb-114">Crea un clon modificable de este <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> y hace copias en profundidad de los valores de este objeto.</span><span class="sxs-lookup"><span data-stu-id="dafbb-114">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />, making deep copies of this object's values.</span></span> <span data-ttu-id="dafbb-115">Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="dafbb-115">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <returns><span data-ttu-id="dafbb-116">Clon modificable del objeto actual.</span><span class="sxs-lookup"><span data-stu-id="dafbb-116">A modifiable clone of the current object.</span></span> <span data-ttu-id="dafbb-117">La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true." />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-117">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-118">Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto).</span><span class="sxs-lookup"><span data-stu-id="dafbb-118">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="dafbb-119">Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.</span><span class="sxs-lookup"><span data-stu-id="dafbb-119">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="dafbb-120">Para obtener más información, vea <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-120">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="doubleKeyFrameCollection.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="dafbb-121">La clase <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="dafbb-121">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> to clone.</span></span></param>
        <summary><span data-ttu-id="dafbb-122">Convierte esta instancia en una copia en profundidad del valor de <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-122">Makes this instance a deep copy of the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span></span> <span data-ttu-id="dafbb-123">Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="dafbb-123">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-124">Este método es invocado por el <xref:System.Windows.Freezable.Clone%2A> método y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método.</span><span class="sxs-lookup"><span data-stu-id="dafbb-124">This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="dafbb-125">Para crear una copia modificable del objeto actual, llame a <xref:System.Windows.Freezable.Clone%2A> en lugar de llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="dafbb-125">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="dafbb-126">Para obtener más información, vea <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-126">For more information, see <xref:System.Windows.Freezable.CloneCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="doubleKeyFrameCollection.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="dafbb-127">La clase <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="dafbb-127">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> to clone.</span></span></param>
        <summary><span data-ttu-id="dafbb-128">Convierte esta instancia en una copia en profundidad modificable del elemento <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> especificado mediante los valores de propiedad actuales.</span><span class="sxs-lookup"><span data-stu-id="dafbb-128">Makes this instance a modifiable deep copy of the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> using current property values.</span></span> <span data-ttu-id="dafbb-129">Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="dafbb-129">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-130">Este método es invocado por el <xref:System.Windows.Freezable.CloneCurrentValue%2A> método y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método.</span><span class="sxs-lookup"><span data-stu-id="dafbb-130">This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="dafbb-131">Para crear una copia modificable del objeto actual, llame a <xref:System.Windows.Freezable.CloneCurrentValue%2A> en lugar de llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="dafbb-131">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="dafbb-132">Para obtener más información, vea <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-132">For more information, see <xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Media.Animation.DoubleKeyFrame keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Media.Animation.DoubleKeyFrame keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Contains(System.Windows.Media.Animation.DoubleKeyFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (keyFrame As DoubleKeyFrame) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Media::Animation::DoubleKeyFrame ^ keyFrame);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Media.Animation.DoubleKeyFrame -&gt; bool" Usage="doubleKeyFrameCollection.Contains keyFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFrame" Type="System.Windows.Media.Animation.DoubleKeyFrame" />
      </Parameters>
      <Docs>
        <param name="keyFrame"><span data-ttu-id="dafbb-133"><see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> que se va a buscar en la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-133">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="dafbb-134">Devuelve un valor que indica si la colección contiene el elemento <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-134">Gets a value that indicates whether the collection contains the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" />.</span></span></summary>
        <returns><span data-ttu-id="dafbb-135"><see langword="true" /> si la colección contiene <paramref name="keyFrame" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-135"><see langword="true" /> if the collection contains <paramref name="keyFrame" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-136">Este método realiza una búsqueda lineal; por lo tanto, el tiempo medio de ejecución es proporcional al valor de <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-136">This method performs a linear search; therefore, the average execution time is proportional to the value of <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.</span></span> <span data-ttu-id="dafbb-137">Es decir, este método es una E/s (*n*) operación, donde *n* es igual a <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-137">That is, this method is an O(*n*) operation, where *n* is equal to <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="dafbb-138">Este método determina la igualdad llamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-138">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Freezable" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Windows.Media.Animation.DoubleKeyFrame[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Windows.Media.Animation.DoubleKeyFrame[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CopyTo(System.Windows.Media.Animation.DoubleKeyFrame[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As DoubleKeyFrame(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Windows::Media::Animation::DoubleKeyFrame ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Windows.Media.Animation.DoubleKeyFrame[] * int -&gt; unit" Usage="doubleKeyFrameCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Windows.Media.Animation.DoubleKeyFrame[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="dafbb-139">Identifica la matriz en la que se copia el contenido.</span><span class="sxs-lookup"><span data-stu-id="dafbb-139">Identifies the array to which content is copied.</span></span></param>
        <param name="index"><span data-ttu-id="dafbb-140">Posición de índice de la matriz en la que se copia el contenido de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-140">Index position in the array to which the contents of the collection are copied.</span></span></param>
        <summary><span data-ttu-id="dafbb-141">Copia todos los objetos <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> de una colección en una matriz especificada.</span><span class="sxs-lookup"><span data-stu-id="dafbb-141">Copies all of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> objects in a collection to a specified array.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.Media.Animation.DoubleKeyFrameCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dafbb-142">Obtiene el número de fotogramas clave incluidos en la <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-142">Gets the number of key frames contained in the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span></span></summary>
        <value><span data-ttu-id="dafbb-143">Número de fotogramas clave incluidos en la <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-143">The number of key frames contained in the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="doubleKeyFrameCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dafbb-144">Crea una nueva instancia inmovilizada de <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-144">Creates a new, frozen instance of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span></span></summary>
        <returns><span data-ttu-id="dafbb-145">Instancia inmovilizada de <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-145">A frozen instance of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Media.Animation.DoubleKeyFrameCollection Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Media.Animation.DoubleKeyFrameCollection Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As DoubleKeyFrameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Media::Animation::DoubleKeyFrameCollection ^ Empty { System::Windows::Media::Animation::DoubleKeyFrameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Empty : System.Windows.Media.Animation.DoubleKeyFrameCollection" Usage="System.Windows.Media.Animation.DoubleKeyFrameCollection.Empty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.DoubleKeyFrameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dafbb-146">Obtiene una <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> vacía.</span><span class="sxs-lookup"><span data-stu-id="dafbb-146">Gets an empty <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span></span></summary>
        <value><span data-ttu-id="dafbb-147">Objeto <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> vacío.</span><span class="sxs-lookup"><span data-stu-id="dafbb-147">An empty <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="doubleKeyFrameCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="dafbb-148"><see langword="true" /> si este método debe determinar simplemente si se puede inmovilizar esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dafbb-148"><see langword="true" /> if this method should simply determine whether this instance can be frozen.</span></span> <span data-ttu-id="dafbb-149"><see langword="false" /> si esta instancia se debe inmovilizar realmente cuando se llama a este método.</span><span class="sxs-lookup"><span data-stu-id="dafbb-149"><see langword="false" /> if this instance should actually freeze itself when this method is called.</span></span></param>
        <summary><span data-ttu-id="dafbb-150">Hace que esta instancia de <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> sea de solo lectura o determina si se puede establecer como de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="dafbb-150">Makes this instance of <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> read-only or determines whether it can be made read-only.</span></span></summary>
        <returns><span data-ttu-id="dafbb-151">Si <paramref name="isChecking" /> es true, este método devuelve <see langword="true" /> si se puede establecer esta instancia como de solo lectura o <see langword="false" /> si no se puede establecer como de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="dafbb-151">If <paramref name="isChecking" /> is true, this method returns <see langword="true" /> if this instance can be made read-only, or <see langword="false" /> if it cannot be made read-only.</span></span> <span data-ttu-id="dafbb-152">Si <paramref name="isChecking" /> es false, este método devuelve <see langword="true" />, si esta instancia es ahora de solo lectura, o <see langword="false" /> si no se puede establecer como de solo lectura, con el inconveniente de haber empezado a cambiar el estado de inmovilización de este objeto.</span><span class="sxs-lookup"><span data-stu-id="dafbb-152">If <paramref name="isChecking" /> is false, this method returns <see langword="true" /> if this instance is now read-only, or <see langword="false" /> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="doubleKeyFrameCollection.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="dafbb-153">Objeto <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> que se va a clonar e inmovilizar.</span><span class="sxs-lookup"><span data-stu-id="dafbb-153">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> object to clone and freeze.</span></span></param>
        <summary><span data-ttu-id="dafbb-154">Convierte esta instancia en un clon del objeto <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-154">Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-155">Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="dafbb-155">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span> <span data-ttu-id="dafbb-156">Tenga en cuenta que si estas propiedades contienen referencias de recursos o enlaces de datos, <xref:System.Windows.Freezable.GetAsFrozen%2A> se producirá un error al intentar inmovilizar el objeto y se producirá un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-156">Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="dafbb-157">Este método es invocado por el <xref:System.Windows.Freezable.GetAsFrozen%2A> método y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método.</span><span class="sxs-lookup"><span data-stu-id="dafbb-157">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="dafbb-158">Para crear una copia inmovilizada del objeto actual, llame a <xref:System.Windows.Freezable.GetAsFrozen%2A> en lugar de llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="dafbb-158">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="dafbb-159">Para obtener más información, vea <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-159">For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="doubleKeyFrameCollection.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="dafbb-160">Clase <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> que se va a copiar e inmovilizar.</span><span class="sxs-lookup"><span data-stu-id="dafbb-160">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="dafbb-161">Convierte esta instancia en un clon inmovilizado del valor de <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-161">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrameCollection" />.</span></span> <span data-ttu-id="dafbb-162">Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="dafbb-162">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-163">Este método es invocado por el <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> método y no debe llamarse directamente desde el código, excepto cuando se llama a la implementación base mientras se invalida este método.</span><span class="sxs-lookup"><span data-stu-id="dafbb-163">This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="dafbb-164">Para crear una copia inmovilizada del objeto actual, llame a <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> en lugar de llamar a este método directamente.</span><span class="sxs-lookup"><span data-stu-id="dafbb-164">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="dafbb-165">Para obtener más información, vea <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-165">For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="doubleKeyFrameCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dafbb-166">Devuelve un enumerador que puede recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-166">Returns an enumerator that can iterate through the collection.</span></span></summary>
        <returns><span data-ttu-id="dafbb-167"><see cref="T:System.Collections.IEnumerator" /> que puede recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-167">An <see cref="T:System.Collections.IEnumerator" /> that can iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-168">Los enumeradores sólo permiten la lectura de los datos de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-168">Enumerators only allow reading the data in the collection.</span></span> <span data-ttu-id="dafbb-169">No se puede usar enumeradores para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="dafbb-169">Enumerators cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="dafbb-170">Inicialmente, el enumerador se coloca delante del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-170">Initially, the enumerator is positioned before the first item in the collection.</span></span> <span data-ttu-id="dafbb-171"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="dafbb-171"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="dafbb-172">En esta posición, una llamada a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="dafbb-172">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="dafbb-173">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para avanzar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-173">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first item of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="dafbb-174"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-174"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="dafbb-175"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> al elemento siguiente.</span><span class="sxs-lookup"><span data-stu-id="dafbb-175"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next item.</span></span>  
  
 <span data-ttu-id="dafbb-176">Cuando se pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y que realiza la llamada <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="dafbb-176">After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="dafbb-177">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, al llamar a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="dafbb-177">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="dafbb-178">Para establecer <xref:System.Collections.IEnumerator.Current%2A> como el primer elemento de la colección de nuevo, se puede llamar a <xref:System.Collections.IEnumerator.Reset%2A> seguido <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-178">To set <xref:System.Collections.IEnumerator.Current%2A> to the first item of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="dafbb-179">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="dafbb-179">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="dafbb-180">Si se realizan cambios en la colección, como agregar, modificar o eliminar elementos, el enumerador queda invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-180">If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="dafbb-181">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devolverá el elemento que está establecido, incluso si el enumerador ya se ha invalidado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-181">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> will return the item that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="dafbb-182">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="dafbb-182">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="dafbb-183">Incluso cuando una colección está sincronizada, otros subprocesos podrían modificar la colección, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="dafbb-183">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="dafbb-184">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="dafbb-184">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Media.Animation.DoubleKeyFrame keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Media.Animation.DoubleKeyFrame keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.IndexOf(System.Windows.Media.Animation.DoubleKeyFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (keyFrame As DoubleKeyFrame) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Media::Animation::DoubleKeyFrame ^ keyFrame);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Windows.Media.Animation.DoubleKeyFrame -&gt; int" Usage="doubleKeyFrameCollection.IndexOf keyFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFrame" Type="System.Windows.Media.Animation.DoubleKeyFrame" />
      </Parameters>
      <Docs>
        <param name="keyFrame"><span data-ttu-id="dafbb-185"><see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> que se va a buscar en la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-185">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="dafbb-186">Busca el objeto <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> especificado y devuelve el índice de base cero de la primera aparición en toda la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-186">Searches for the specified <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> and returns the zero-based index of the first occurrence within the entire collection.</span></span></summary>
        <returns><span data-ttu-id="dafbb-187">Índice de base cero de la primera aparición de <paramref name="keyFrame" /> dentro de la colección, si se encuentra; en caso contrario, <c>-1</c>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-187">The zero-based index of the first occurrence of <paramref name="keyFrame" /> within the entire collection, if found; otherwise, <c>-1</c>.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-188">La colección se busca hacia delante, comenzando en el primer fotograma clave y terminando en el último fotograma clave.</span><span class="sxs-lookup"><span data-stu-id="dafbb-188">The collection is searched forward starting at the first key frame and ending at the last key frame.</span></span>  
  
 <span data-ttu-id="dafbb-189">Este método realiza una búsqueda lineal; por lo tanto, el tiempo medio de ejecución es proporcional al valor de <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-189">This method performs a linear search; therefore, the average execution time is proportional to the value of <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.</span></span> <span data-ttu-id="dafbb-190">Es decir, este método es una E/s (*n*) operación, donde *n* es igual a <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-190">That is, this method is an O(*n*) operation, where *n* is equal to <xref:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count%2A>.</span></span>  
  
 <span data-ttu-id="dafbb-191">Este método determina la igualdad llamando <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-191">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Freezable" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Media.Animation.DoubleKeyFrame keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Media.Animation.DoubleKeyFrame keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.DoubleKeyFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, keyFrame As DoubleKeyFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Media::Animation::DoubleKeyFrame ^ keyFrame);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Windows.Media.Animation.DoubleKeyFrame -&gt; unit" Usage="doubleKeyFrameCollection.Insert (index, keyFrame)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="keyFrame" Type="System.Windows.Media.Animation.DoubleKeyFrame" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="dafbb-192">La posición de índice en la que se inserta <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-192">The index position at which the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> is inserted.</span></span></param>
        <param name="keyFrame"><span data-ttu-id="dafbb-193">Objeto <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> que se va a insertar en la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-193">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> object to insert in the collection.</span></span></param>
        <summary><span data-ttu-id="dafbb-194">Inserta un <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> en una ubicación específica dentro de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-194">Inserts a <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> into a specific location within the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Windows.Media.Animation.DoubleKeyFrameCollection.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dafbb-195">Obtiene un valor que indica si el tamaño de la colección puede cambiar alguna vez.</span><span class="sxs-lookup"><span data-stu-id="dafbb-195">Gets a value that indicates if the collection size can ever change.</span></span></summary>
        <value><span data-ttu-id="dafbb-196"><see langword="true" /> si la colección está inmovilizada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-196"><see langword="true" /> if the collection is frozen; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Media.Animation.DoubleKeyFrameCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dafbb-197">Obtiene un valor que indica si la colección es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="dafbb-197">Gets a value that indicates if the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="dafbb-198"><see langword="true" /> si la colección es de solo lectura; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-198"><see langword="true" /> if the collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Windows.Media.Animation.DoubleKeyFrameCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dafbb-199">Obtiene un valor que indica si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos).</span><span class="sxs-lookup"><span data-stu-id="dafbb-199">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="dafbb-200"><see langword="true" /> si el acceso a la colección está sincronizado (es seguro para la ejecución de subprocesos; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-200"><see langword="true" /> if access to the collection is synchronized (thread-safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dafbb-201">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="dafbb-201">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="dafbb-202">Incluso cuando una colección está sincronizada, otros subprocesos podrían modificar la colección, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="dafbb-202">Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="dafbb-203">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="dafbb-203">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.DoubleKeyFrame this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.DoubleKeyFrame Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As DoubleKeyFrame" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::DoubleKeyFrame ^ default[int] { System::Windows::Media::Animation::DoubleKeyFrame ^ get(int index); void set(int index, System::Windows::Media::Animation::DoubleKeyFrame ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Windows.Media.Animation.DoubleKeyFrame with get, set" Usage="System.Windows.Media.Animation.DoubleKeyFrameCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.DoubleKeyFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="dafbb-204">Índice de base cero de <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="dafbb-204">The zero-based index of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to get or set.</span></span></param>
        <summary><span data-ttu-id="dafbb-205">Obtiene o establece <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> en la posición de índice especificada.</span><span class="sxs-lookup"><span data-stu-id="dafbb-205">Gets or sets the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> at the specified index position.</span></span></summary>
        <value><span data-ttu-id="dafbb-206"><see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-206">The <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dafbb-207">El intento de modificar la colección no es válido porque está inmovilizada (su propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> es <see langword="true" />).</span><span class="sxs-lookup"><span data-stu-id="dafbb-207">The attempt to modify the collection is invalid because the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dafbb-208"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="dafbb-208"><paramref name="index" /> is less than zero.</span></span>  
  
<span data-ttu-id="dafbb-209">O bien</span><span class="sxs-lookup"><span data-stu-id="dafbb-209">-or-</span></span> 
 <span data-ttu-id="dafbb-210"><paramref name="index" /> es igual o mayor que <see cref="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-210"><paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.Count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Media.Animation.DoubleKeyFrame keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Media.Animation.DoubleKeyFrame keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Remove(System.Windows.Media.Animation.DoubleKeyFrame)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (keyFrame As DoubleKeyFrame)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Media::Animation::DoubleKeyFrame ^ keyFrame);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Windows.Media.Animation.DoubleKeyFrame -&gt; unit" Usage="doubleKeyFrameCollection.Remove keyFrame" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFrame" Type="System.Windows.Media.Animation.DoubleKeyFrame" />
      </Parameters>
      <Docs>
        <param name="keyFrame"><span data-ttu-id="dafbb-211">Identifica el objeto <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> que se va a quitar de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-211">Identifies the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="dafbb-212">Quita un objeto <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-212">Removes a <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> object from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="doubleKeyFrameCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="dafbb-213">Posición de índice del <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="dafbb-213">Index position of the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> to be removed.</span></span></param>
        <summary><span data-ttu-id="dafbb-214">Quita el <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> de la posición del índice especificado de la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-214">Removes the <see cref="T:System.Windows.Media.Animation.DoubleKeyFrame" /> at the specified index position from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dafbb-215">Obtiene un objeto que se puede utilizar para sincronizar el acceso a la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-215">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="dafbb-216">Objeto que se puede utilizar para sincronizar el acceso a la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-216">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="dafbb-217"><see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-217">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="dafbb-218">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="dafbb-218">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="dafbb-219">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="dafbb-219">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="dafbb-220">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en <see cref="T:System.Array" />, empezando por un índice determinado de <see cref="T:System.Array" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-220">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (keyFrame As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ keyFrame) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFrame" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyFrame"><span data-ttu-id="dafbb-221">Objeto que se va a agregar a <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-221">The object to add to the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="dafbb-222">Agrega un elemento a <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-222">Adds an item to the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="dafbb-223">La posición en la que se insertó el nuevo elemento o -1 para indicar que el elemento no se insertó en la colección.</span><span class="sxs-lookup"><span data-stu-id="dafbb-223">The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (keyFrame As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ keyFrame) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFrame" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyFrame"><span data-ttu-id="dafbb-224">Objeto que se va a buscar en <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-224">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="dafbb-225">Determina si <see cref="T:System.Collections.IList" /> contiene un valor específico.</span><span class="sxs-lookup"><span data-stu-id="dafbb-225">Determines whether the <see cref="T:System.Collections.IList" /> contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="dafbb-226">Es <see langword="true" /> si <see cref="T:System.Object" /> se encuentra en <see cref="T:System.Collections.IList" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-226"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (keyFrame As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ keyFrame) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFrame" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyFrame"><span data-ttu-id="dafbb-227">Objeto que se va a buscar en <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-227">The object to locate in the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="dafbb-228">Determina el índice de un elemento específico de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-228">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="dafbb-229">Devuelve el índice de <paramref name="value" /> si se encuentra en la lista; de lo contrario, devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="dafbb-229">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, keyFrame As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ keyFrame) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="keyFrame" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="dafbb-230">Índice de base cero en el que se debe insertar <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="dafbb-230">The zero-based index at which <c>value</c> should be inserted.</span></span></param>
        <param name="keyFrame"><span data-ttu-id="dafbb-231">Objeto que se va a insertar en <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-231">The object to insert into the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="dafbb-232">Inserta un elemento en la interfaz <see cref="T:System.Collections.IList" />, en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-232">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="dafbb-233">Índice de base cero del elemento que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="dafbb-233">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="dafbb-234">Obtiene o establece el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-234">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="dafbb-235">Elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="dafbb-235">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object keyFrame);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object keyFrame) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (keyFrame As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ keyFrame) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyFrame" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyFrame"><span data-ttu-id="dafbb-236">Objeto que se va a quitar de <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-236">The object to remove from the <see cref="T:System.Collections.IList" />.</span></span></param>
        <summary><span data-ttu-id="dafbb-237">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="dafbb-237">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
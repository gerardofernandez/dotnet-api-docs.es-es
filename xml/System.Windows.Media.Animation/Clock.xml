<Type Name="Clock" FullName="System.Windows.Media.Animation.Clock">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f7c3ff75603854054321ced678001ae0bb0dec56" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52596788" /></Metadata><TypeSignature Language="C#" Value="public class Clock : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Clock extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Clock" />
  <TypeSignature Language="VB.NET" Value="Public Class Clock&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Clock : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type Clock = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c1a5c-101">Mantiene el estado de sincronización en tiempo de ejecución para una clase <see cref="T:System.Windows.Media.Animation.Timeline" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-101">Maintains run-time timing state for a <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-102">Un <xref:System.Windows.Media.Animation.Timeline>, por sí mismo, realmente no hace nada más que describir un segmento de tiempo.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-102">A <xref:System.Windows.Media.Animation.Timeline>, by itself, doesn't actually do anything other than describe a segment of time.</span></span> <span data-ttu-id="c1a5c-103">Es la escala de tiempo <xref:System.Windows.Media.Animation.Clock> objeto que hace el trabajo real: mantiene el estado de tiempo de ejecución relacionados con el control de tiempo para la escala de tiempo.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-103">It's the timeline's <xref:System.Windows.Media.Animation.Clock> object that does the real work: it maintains timing-related run-time state for the timeline.</span></span>  
  
 <span data-ttu-id="c1a5c-104">En la mayoría de los casos, automáticamente se crea un reloj para la escala de tiempo.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-104">In most cases, a clock is created automatically for your timeline.</span></span> <span data-ttu-id="c1a5c-105">Al animar utilizando un <xref:System.Windows.Media.Animation.Storyboard> o <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> método, relojes automáticamente se crean para sus escalas de tiempo y las animaciones y se aplican a sus propiedades concretas.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-105">When you animate by using a <xref:System.Windows.Media.Animation.Storyboard> or the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, clocks are automatically created for your timelines and animations and applied to their targeted properties.</span></span> <span data-ttu-id="c1a5c-106">Para obtener ejemplos, vea [Cómo: animar una propiedad utilizando un guión gráfico](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md) y [Cómo: animar una propiedad sin utilizar un guión gráfico](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md).</span><span class="sxs-lookup"><span data-stu-id="c1a5c-106">For examples, see [How to: Animate a Property by Using a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-by-using-a-storyboard.md) and [How to: Animate a Property Without Using a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-animate-a-property-without-using-a-storyboard.md).</span></span>  
  
 <span data-ttu-id="c1a5c-107">También puede crear un <xref:System.Windows.Media.Animation.Clock> explícitamente mediante el <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-107">You can also create a <xref:System.Windows.Media.Animation.Clock> explicitly by using the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method.</span></span> <span data-ttu-id="c1a5c-108">En escenarios de rendimiento intensivo, tales como la animación de grandes cantidades de objetos similares, administrar su propio <xref:System.Windows.Media.Animation.Clock> uso puede proporcionar ventajas de rendimiento.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-108">In performance-intensive scenarios, such as animating large numbers of similar objects, managing your own <xref:System.Windows.Media.Animation.Clock> use can provide performance benefits.</span></span>  
  
 <span data-ttu-id="c1a5c-109">Los relojes se organizan en árboles que coinciden con la estructura de la <xref:System.Windows.Media.Animation.Timeline> desde la que se crean objetos de árbol.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-109">Clocks are arranged in trees that match the structure of the <xref:System.Windows.Media.Animation.Timeline> objects tree from which they are created.</span></span> <span data-ttu-id="c1a5c-110">El reloj de raíz de este tipo un árbol de control de tiempo se puede manipular interactivamente (en pausa, reanudar, detenido etc.) mediante la recuperación de su <xref:System.Windows.Media.Animation.Clock.Controller%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-110">The root clock of such a timing tree can be interactively manipulated (paused, resumed, stopped, and so on) by retrieving its <xref:System.Windows.Media.Animation.Clock.Controller%2A>.</span></span> <span data-ttu-id="c1a5c-111">No se puede controlar directamente relojes no raíz.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-111">Non-root clocks cannot be directly controlled.</span></span>  
  
 <span data-ttu-id="c1a5c-112">Una vez creado, no se puede modificar un reloj (pero puede manipularse).</span><span class="sxs-lookup"><span data-stu-id="c1a5c-112">Once created, a clock cannot be modified (but it can be manipulated).</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="c1a5c-113">Uso de una escala de tiempo como un temporizador</span><span class="sxs-lookup"><span data-stu-id="c1a5c-113">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="c1a5c-114">El reloj de una escala de tiempo se centrará solo cuando hay un controlador de eventos asociado con él o (en el caso de un <xref:System.Windows.Media.Animation.AnimationClock> objeto) está asociado con una propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-114">A timeline's clock will only progress when there's an event handler associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="c1a5c-115">Para ello (y otros), se recomienda no utilizar un <xref:System.Windows.Media.Animation.Timeline> como un temporizador.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-115">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="c1a5c-116">Las clases derivadas deben implementar <see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /> si desean modificar flujos de tiempo de este reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-116">Derived classes should implement <see cref="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" /> if they want to modify how time flows for this clock.</span></span> <span data-ttu-id="c1a5c-117">Las clases derivadas pueden realizarse por realizar trabajo adicional cuando el reloj se repite, omite, las búsquedas, comienza, pone en pausa, se reanuda o detiene invalidando el <see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />, <see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" />, y <see cref="M:System.Windows.Media.Animation.Clock.Stopped" /> métodos.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-117">Derived classes can be made to do additional work when the clock repeats, skips, seeks, begins, pauses, resumes, or stops by overriding the <see cref="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />, <see cref="M:System.Windows.Media.Animation.Clock.SpeedChanged" />, and <see cref="M:System.Windows.Media.Animation.Clock.Stopped" /> methods.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal Clock (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; Clock(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Clock : System.Windows.Media.Animation.Timeline -&gt; System.Windows.Media.Animation.Clock" Usage="new System.Windows.Media.Animation.Clock timeline" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline"><span data-ttu-id="c1a5c-118">Propiedad <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> a partir de la que se debe construir este reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-118">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this clock should be constructed.</span></span> <span data-ttu-id="c1a5c-119">No se crean relojes para ninguna propiedad <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> secundaria, si existe.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-119">Clocks are not created for any child <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> objects, if they exist.</span></span></param>
        <summary><span data-ttu-id="c1a5c-120">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.Animation.Clock" /> utilizando la propiedad <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> especificada como plantilla.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-120">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Clock" /> class, using the specified <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> as a template.</span></span> <span data-ttu-id="c1a5c-121">El nuevo objeto <see cref="T:System.Windows.Media.Animation.Clock" /> no tiene ningún objeto secundario.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-121">The new <see cref="T:System.Windows.Media.Animation.Clock" /> object has no children.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-122">Se produce cuando este reloj ha dejado completamente de ejecutarse.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-122">Occurs when this clock has completely finished playing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-123">Si este reloj es el reloj de raíz de un árbol de relojes, ha completado la reproducción de una vez que llega al final de su duración activa (que incluye las repeticiones) y todos sus elementos secundarios han llegado al final de su duración activa.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-123">If this clock is the root clock of a clock tree, it has completed playing after it reaches the end of its active duration (which includes repeats) and all its children have reached the end of their active durations.</span></span> <span data-ttu-id="c1a5c-124">Si este reloj es un reloj secundario, se considera que ha terminado de reproducirse totalmente cuando el reloj de raíz del árbol de relojes a la que pertenece alcanza el final de su duración activa y todos sus relojes secundarios hayan terminado de reproducirse.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-124">If this clock is a child clock, it is considered to have completely finished playing when the root clock of the clock tree to which it belongs reaches the end of its active duration and all its child clocks have finished playing.</span></span>  
  
 <span data-ttu-id="c1a5c-125">Detener un reloj no provoca su evento completado, sino que lleva a su período de relleno.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-125">Stopping a clock does not trigger its completed event, but advancing it to its fill period does.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controller">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockController Controller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.ClockController Controller" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Controller" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controller As ClockController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::ClockController ^ Controller { System::Windows::Media::Animation::ClockController ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controller : System.Windows.Media.Animation.ClockController" Usage="System.Windows.Media.Animation.Clock.Controller" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-126">Obtiene una clase <see cref="T:System.Windows.Media.Animation.ClockController" /> que se puede usar para iniciar, pausar, reanudar, buscar, omitir, detener o quitar esta clase <see cref="T:System.Windows.Media.Animation.Clock" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-126">Gets a <see cref="T:System.Windows.Media.Animation.ClockController" /> that can be used to start, pause, resume, seek, skip, stop, or remove this <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></summary>
        <value><span data-ttu-id="c1a5c-127">Es una clase <see cref="T:System.Windows.Media.Animation.ClockController" /> si se trata de un reloj de raíz; de lo contrario, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-127">A <see cref="T:System.Windows.Media.Animation.ClockController" /> if this is a root clock; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-128">Solo los relojes de raíz pueden controlarse de forma interactiva.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-128">Only root clocks can be interactively controlled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Begin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; CurrentGlobalSpeed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; CurrentGlobalSpeed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentGlobalSpeed As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; CurrentGlobalSpeed { Nullable&lt;double&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeed : Nullable&lt;double&gt;" Usage="System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-129">Obtiene la velocidad a la que la hora del reloj avanza actualmente, en comparación con la hora real.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-129">Gets the rate at which the clock's time is currently progressing, compared to real-world time.</span></span></summary>
        <value><span data-ttu-id="c1a5c-130">Velocidad a la que la hora del reloj avanza actualmente, en comparación con la hora real.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-130">The rate at which this clock's time is current progressing, compared to real-world time.</span></span> <span data-ttu-id="c1a5c-131">Si se detiene el reloj, esta propiedad devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-131">If the clock is stopped, this property returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeedInvalidated : EventHandler " Usage="member this.CurrentGlobalSpeedInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-132">Se produce cuando se actualiza la velocidad del reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-132">Occurs when the clock's speed is updated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-133">Pausar, reanudar, invertir, acelerando, decelerar, que buscan, detener o cambiar un reloj interactivo de la velocidad con una <xref:System.Windows.Media.Animation.ClockController> desencadena este evento.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-133">Pausing, resuming, reversing, accelerating, decelerating, seeking, stopping, or changing a clock's interactive speed using a <xref:System.Windows.Media.Animation.ClockController> triggers this event.</span></span>  
  
 <span data-ttu-id="c1a5c-134">Aunque este evento se produce cuando el <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> propiedad pasa a ser válido, que no significa necesariamente que el cambio de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-134">Although this event occurs when the <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> property becomes invalid, that doesn't necessarily mean the property changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
        <altmember cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalTime">
      <MemberSignature Language="C#" Value="protected TimeSpan CurrentGlobalTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CurrentGlobalTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CurrentGlobalTime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property TimeSpan CurrentGlobalTime { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalTime : TimeSpan" Usage="System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-135">Obtiene la hora global actual, de la forma establecida por el sistema de control de tiempo de [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c1a5c-135">Gets the current global time, as established by the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] timing system.</span></span></summary>
        <value><span data-ttu-id="c1a5c-136">Hora global actual del sistema de control de tiempo de [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c1a5c-136">The current global time for the [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] timing system.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; CurrentIteration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;int32&gt; CurrentIteration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentIteration As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;int&gt; CurrentIteration { Nullable&lt;int&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentIteration : Nullable&lt;int&gt;" Usage="System.Windows.Media.Animation.Clock.CurrentIteration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-137">Obtiene la iteración actual de este reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-137">Get the current iteration of this clock.</span></span></summary>
        <value><span data-ttu-id="c1a5c-138">Iteración actual de este reloj dentro de su período activo actual o <see langword="null" /> si se detiene este reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-138">This clock's current iteration within its current active period, or <see langword="null" /> if this clock is stopped.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-139">Primera iteración de un reloj tiene un valor de 1.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-139">A clock's first iteration has a value of 1.</span></span>  
  
 <span data-ttu-id="c1a5c-140">Si la escala de tiempo del reloj tiene una <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> de `true`, una iteración completa consta de un par de avance inverso, no solo uno de estos segmentos.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-140">If this clock's timeline has an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting of `true`, a full iteration consists of a forward-reverse pair, not just one of these segments.</span></span>  
  
 <span data-ttu-id="c1a5c-141">Independientemente de su iteración actual, que buscan un reloj, devuelve su iteración actual en 1.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-141">Regardless of its current iteration, seeking a clock returns its current iteration to 1.</span></span> <span data-ttu-id="c1a5c-142">Reiniciar un reloj también devuelve su iteración actual en 1.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-142">Restarting a clock also returns its current iteration to 1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="CurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; CurrentProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;float64&gt; CurrentProgress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentProgress As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;double&gt; CurrentProgress { Nullable&lt;double&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentProgress : Nullable&lt;double&gt;" Usage="System.Windows.Media.Animation.Clock.CurrentProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-143">Obtiene el progreso actual de este objeto <see cref="T:System.Windows.Media.Animation.Clock" /> en su iteración actual.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-143">Gets the current progress of this <see cref="T:System.Windows.Media.Animation.Clock" /> within its current iteration.</span></span></summary>
        <value><span data-ttu-id="c1a5c-144">Es <see langword="null" /> si este reloj está en estado <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" /> o 0,0 si está activo y su <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> tiene la propiedad <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> establecida en <see cref="P:System.Windows.Duration.Forever" />; de lo contrario, es un valor comprendido entre 0,0 y 1,0 que indica el progreso actual de este reloj en su iteración actual.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-144"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, or 0.0 if this clock is active and its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> has a <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> of <see cref="P:System.Windows.Duration.Forever" />; otherwise, a value between 0.0 and 1.0 that indicates the current progress of this Clock within its current iteration.</span></span> <span data-ttu-id="c1a5c-145">Un valor de 0,0 no indica ningún progreso, mientras que un valor de 1,0 indica que el reloj se encuentra al final de su iteración actual.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-145">A value of 0.0 indicates no progress, and a value of 1.0 indicates that the clock is at the end of its current iteration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-146">El valor de esta propiedad indica la <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalizado por el <xref:System.Windows.Media.Animation.Timeline.Duration%2A> de este reloj <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-146">The value of this property indicates the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> normalized by the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of this clock's <xref:System.Windows.Media.Animation.Clock.Timeline%2A>.</span></span>  
  
 <span data-ttu-id="c1a5c-147">Un reloj <xref:System.Windows.Media.Animation.ClockState.Filling> tiene un <xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A> de 1.0.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-147">A clock that is <xref:System.Windows.Media.Animation.ClockState.Filling> has a <xref:System.Windows.Media.Animation.Clock.CurrentProgress%2A> of 1.0.</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="c1a5c-148">Uso de una escala de tiempo como un temporizador</span><span class="sxs-lookup"><span data-stu-id="c1a5c-148">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="c1a5c-149">El reloj de una escala de tiempo se centrará solo cuando hay un controlador de eventos asociado con él o (en el caso de un <xref:System.Windows.Media.Animation.AnimationClock> objeto) está asociado con una propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-149">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="c1a5c-150">Para ello (y otros), se recomienda no utilizar un <xref:System.Windows.Media.Animation.Timeline> como un temporizador.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-150">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.ClockState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::ClockState CurrentState { System::Windows::Media::Animation::ClockState get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.Media.Animation.ClockState" Usage="System.Windows.Media.Animation.Clock.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-151">Obtiene un valor que indica si el reloj es actualmente <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> o <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-151">Gets a value indicating whether the clock is currently <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></summary>
        <value><span data-ttu-id="c1a5c-152">Estado actual del reloj: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> o <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-152">The current state of the clock: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" />, or <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-153">Tenga en cuenta el reloj <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> propiedad no indica si ha pausado.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-153">Note the clock's <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property doesn't tell you whether it's paused.</span></span> <span data-ttu-id="c1a5c-154">Para determinar si un reloj está en pausa, utilice el <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-154">To determine whether a clock is paused, use the <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property.</span></span>  
  
 <span data-ttu-id="c1a5c-155">El <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> se produce cuando cambia el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-155">The <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> occurs whenever the value of this property changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalTime" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateInvalidated : EventHandler " Usage="member this.CurrentStateInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-156">Se produce cuando la propiedad <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> del reloj se actualiza.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-156">Occurs when the clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property is updated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-157">Use el <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> eventos cuando desea recibir una notificación si cuando el reloj se inicia, detiene o llena.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-157">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified if when the clock starts, stops, or fills.</span></span> <span data-ttu-id="c1a5c-158">El <xref:System.Object> parámetro de la <xref:System.EventHandler> controlador de eventos es el <xref:System.Windows.Media.Animation.Clock> cuyo estado se invalidó.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-158">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the <xref:System.Windows.Media.Animation.Clock> whose state was invalidated.</span></span>  
  
 <span data-ttu-id="c1a5c-159">Pausar un <xref:System.Windows.Media.Animation.Clock> no cambia su <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-159">Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span></span> <span data-ttu-id="c1a5c-160">Para recibir una notificación cuando se detiene un reloj, use el <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-160">To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 <span data-ttu-id="c1a5c-161">Aunque este evento se produce cuando el <xref:System.Windows.Media.Animation.ClockState> pasa a ser válido, que no significa necesariamente que la <xref:System.Windows.Media.Animation.ClockState> cambiado: un <xref:System.Windows.Media.Animation.Clock> que cambia de <xref:System.Windows.Media.Animation.ClockState.Active> a <xref:System.Windows.Media.Animation.ClockState.Filling> y luego volver a <xref:System.Windows.Media.Animation.ClockState.Active> provocará en el mismo paso Este evento, pero su <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> propiedad no cambia realmente.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-161">Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState.Active> to <xref:System.Windows.Media.Animation.ClockState.Filling> and then back to <xref:System.Windows.Media.Animation.ClockState.Active> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="T:System.Windows.Media.Animation.ClockState" />
        <altmember cref="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; CurrentTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; CurrentTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; CurrentTime { Nullable&lt;TimeSpan&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentTime : Nullable&lt;TimeSpan&gt;" Usage="System.Windows.Media.Animation.Clock.CurrentTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-162">Obtiene la hora actual de este reloj en su iteración actual.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-162">Gets this clock's current time within its current iteration.</span></span></summary>
        <value><span data-ttu-id="c1a5c-163">Es <see langword="null" /> si este reloj está en estado <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; de lo contrario, es la hora actual del reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-163"><see langword="null" /> if this clock is <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; otherwise, the current time of this clock.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="c1a5c-164">Uso de una escala de tiempo como un temporizador</span><span class="sxs-lookup"><span data-stu-id="c1a5c-164">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="c1a5c-165">El reloj de una escala de tiempo se centrará solo cuando hay un controlador de eventos asociado con él o (en el caso de un <xref:System.Windows.Media.Animation.AnimationClock> objeto) está asociado con una propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-165">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="c1a5c-166">Para ello (y otros), se recomienda no utilizar un <xref:System.Windows.Media.Animation.Timeline> como un temporizador.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-166">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeInvalidated : EventHandler " Usage="member this.CurrentTimeInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-167">Se produce cuando la propiedad <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> de este reloj deja de ser válida.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-167">Occurs when this clock's <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> becomes invalid.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-168">Un reloj <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> deja de ser válida cuando el reloj progresa.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-168">A clock's <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses.</span></span> <span data-ttu-id="c1a5c-169">Las siguientes operaciones interactivas también desencadenan el evento CurrentTimeInvalidated: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, y <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-169">The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiscontinuousTimeMovement">
      <MemberSignature Language="C#" Value="protected virtual void DiscontinuousTimeMovement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DiscontinuousTimeMovement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DiscontinuousTimeMovement ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DiscontinuousTimeMovement();" />
      <MemberSignature Language="F#" Value="abstract member DiscontinuousTimeMovement : unit -&gt; unit&#xA;override this.DiscontinuousTimeMovement : unit -&gt; unit" Usage="clock.DiscontinuousTimeMovement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1a5c-170">Cuando se implementa en una clase derivada, se invocará siempre que un reloj se repita, se omita o se busque.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-170">When implemented in a derived class, will be invoked whenever a clock repeats, skips, or seeks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCanSlip">
      <MemberSignature Language="C#" Value="protected virtual bool GetCanSlip ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetCanSlip() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.GetCanSlip" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCanSlip () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetCanSlip();" />
      <MemberSignature Language="F#" Value="abstract member GetCanSlip : unit -&gt; bool&#xA;override this.GetCanSlip : unit -&gt; bool" Usage="clock.GetCanSlip " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1a5c-171">Devuelve si <see cref="T:System.Windows.Media.Animation.Clock" /> tiene su propio origen externo de tiempo, que quizá requiera la sincronización con el sistema de control de tiempo.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-171">Returns whether the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external time source, which may require synchronization with the timing system.</span></span></summary>
        <returns><span data-ttu-id="c1a5c-172">Devuelve <see langword="true" /> si <see cref="T:System.Windows.Media.Animation.Clock" /> tiene su propio origen externo de tiempo, que quizá requiera sincronización con el sistema de control de tiempo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-172">Returns <see langword="true" /> if the <see cref="T:System.Windows.Media.Animation.Clock" /> has its own external source for time, which may require synchronization with the timing system; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-173">Multimedia que se reproduce mediante <xref:System.Windows.Media.MediaTimeline> dentro de un <xref:System.Windows.Media.Animation.Storyboard> es un ejemplo de creación de un <xref:System.Windows.Media.Animation.Clock> que tendría un origen de hora externo (un clip de vídeo por ejemplo) que quizá requiera sincronización con otras escalas de tiempo dentro de la <xref:System.Windows.Media.Animation.Storyboard>.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-173">Media being played using <xref:System.Windows.Media.MediaTimeline> within a <xref:System.Windows.Media.Animation.Storyboard> is an example of creating a <xref:System.Windows.Media.Animation.Clock> that would have an external time source (a video clip for example) which may require synchronization with other timelines within the <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="c1a5c-174">Vea <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-174">See <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTimeCore">
      <MemberSignature Language="C#" Value="protected virtual TimeSpan GetCurrentTimeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.TimeSpan GetCurrentTimeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.GetCurrentTimeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCurrentTimeCore () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual TimeSpan GetCurrentTimeCore();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentTimeCore : unit -&gt; TimeSpan&#xA;override this.GetCurrentTimeCore : unit -&gt; TimeSpan" Usage="clock.GetCurrentTimeCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1a5c-175">Obtiene la hora actual de este reloj en su iteración actual.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-175">Gets this clock's current time within its current iteration.</span></span></summary>
        <returns><span data-ttu-id="c1a5c-176">Es la hora actual de este reloj si está activo o se muestra el tiempo en pantalla; de lo contrario, es <see cref="F:System.TimeSpan.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-176">The current time of this clock if it is active or filling; otherwise, <see cref="F:System.TimeSpan.Zero" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-177">Este método se utiliza en la implementación de la <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> método y no debe llamarse directamente desde el código.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-177">This method is used in the implementation of the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> method and should not be called directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1a5c-178">Las clases derivadas deben reemplazar este método si desean modificar la forma en que determinan la hora actual.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-178">Derived classes should override this method if they want to modify how they determine the current time.</span></span></para></block>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="HasControllableRoot">
      <MemberSignature Language="C#" Value="public bool HasControllableRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasControllableRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.HasControllableRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasControllableRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasControllableRoot { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasControllableRoot : bool" Usage="System.Windows.Media.Animation.Clock.HasControllableRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-179">Obtiene un valor que indica si <see cref="T:System.Windows.Media.Animation.Clock" /> forma parte de un árbol de relojes que se puede controlar.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-179">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" /> is part of a controllable clock tree.</span></span></summary>
        <value><span data-ttu-id="c1a5c-180">Es <see langword="true" /> si este reloj pertenece a un árbol de relojes con un reloj de raíz que se pueda controlar o si este reloj es en sí mismo una raíz controlable; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-180"><see langword="true" /> if this clock belongs to a clock tree with a controllable root clock or if this clock is itself a controllable root; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPaused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="System.Windows.Media.Animation.Clock.IsPaused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-181">Obtiene un valor que indica si este objeto <see cref="T:System.Windows.Media.Animation.Clock" /> o alguno de sus objetos primarios está en pausa.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-181">Gets a value that indicates whether this <see cref="T:System.Windows.Media.Animation.Clock" />, or any of its parents, is paused.</span></span></summary>
        <value><span data-ttu-id="c1a5c-182">Es <see langword="true" /> si el objeto <see cref="T:System.Windows.Media.Animation.Clock" /> o alguno de sus objetos primarios está en pausa; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-182"><see langword="true" /> if this <see cref="T:System.Windows.Media.Animation.Clock" /> or any of its parents is paused; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="NaturalDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration NaturalDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration NaturalDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.NaturalDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NaturalDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration NaturalDuration { System::Windows::Duration get(); };" />
      <MemberSignature Language="F#" Value="member this.NaturalDuration : System.Windows.Duration" Usage="System.Windows.Media.Animation.Clock.NaturalDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-183">Obtiene la duración natural de la propiedad <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> de este reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-183">Gets the natural duration of this clock's <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span></span></summary>
        <value><span data-ttu-id="c1a5c-184">La duración natural de este reloj, de la forma determinada por su propiedad <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-184">The natural duration of this clock, as determined by its <see cref="P:System.Windows.Media.Animation.Clock.Timeline" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-185">Para obtener más información sobre la duración natural, vea el <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-185">For more information about natural duration, see the <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Parent { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.Clock.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-186">Obtiene el reloj que es el objeto primario de este reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-186">Gets the clock that is the parent of this clock.</span></span></summary>
        <value><span data-ttu-id="c1a5c-187">El objeto primario de este reloj o <see langword="null" /> si este reloj es de raíz.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-187">The parent of this clock or <see langword="null" /> if this clock is a root.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Clock.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberSignature Language="F#" Value="member this.RemoveRequested : EventHandler " Usage="member this.RemoveRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-188">Se produce cuando se llama al método <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> en <see cref="T:System.Windows.Media.Animation.Clock" /> o en uno de sus relojes primarios.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-188">Occurs when the <see cref="M:System.Windows.Media.Animation.ClockController.Remove" /> method is called on this <see cref="T:System.Windows.Media.Animation.Clock" /> or one of its parent clocks.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedChanged">
      <MemberSignature Language="C#" Value="protected virtual void SpeedChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SpeedChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.SpeedChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SpeedChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SpeedChanged();" />
      <MemberSignature Language="F#" Value="abstract member SpeedChanged : unit -&gt; unit&#xA;override this.SpeedChanged : unit -&gt; unit" Usage="clock.SpeedChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1a5c-189">Cuando se implementa en una clase derivada, se invocará siempre que un reloj se inicie, se omita, se pause, se reanude o cuando se modifique la propiedad <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> del reloj.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-189">When implemented in a derived class, will be invoked whenever a clock begins, skips, pauses, resumes, or when the clock's <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Stopped">
      <MemberSignature Language="C#" Value="protected virtual void Stopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Stopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Clock.Stopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Stopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Stopped();" />
      <MemberSignature Language="F#" Value="abstract member Stopped : unit -&gt; unit&#xA;override this.Stopped : unit -&gt; unit" Usage="clock.Stopped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1a5c-190">Cuando se implementa en una clase derivada, se invocará siempre que un reloj se detenga mediante el método <see cref="M:System.Windows.Media.Animation.ClockController.Stop" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-190">When implemented in a derived class, will be invoked whenever a clock is stopped using the <see cref="M:System.Windows.Media.Animation.ClockController.Stop" /> method.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeline">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Timeline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Timeline Timeline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Clock.Timeline" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timeline As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Timeline ^ Timeline { System::Windows::Media::Animation::Timeline ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeline : System.Windows.Media.Animation.Timeline" Usage="System.Windows.Media.Animation.Clock.Timeline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1a5c-191">Obtiene la propiedad <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> a partir de la que se creó <see cref="T:System.Windows.Media.Animation.Clock" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-191">Gets the <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</span></span></summary>
        <value><span data-ttu-id="c1a5c-192">Propiedad <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> a partir de la que se creó <see cref="T:System.Windows.Media.Animation.Clock" />.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-192">The <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> from which this <see cref="T:System.Windows.Media.Animation.Clock" /> was created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1a5c-193">Modificación de un reloj <xref:System.Windows.Media.MediaTimeline> no actualiza el reloj; un nuevo reloj debe crearse desde modificado <xref:System.Windows.Media.Animation.Timeline>.</span><span class="sxs-lookup"><span data-stu-id="c1a5c-193">Modifying a clock's <xref:System.Windows.Media.MediaTimeline> does not update the clock; a new clock must be created from the modified <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
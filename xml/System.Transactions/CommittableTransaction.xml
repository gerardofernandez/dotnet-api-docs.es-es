<Type Name="CommittableTransaction" FullName="System.Transactions.CommittableTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="464fc828a29932c8cf9248a436410338281d32e0" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65014205" /></Metadata><TypeSignature Language="C#" Value="public sealed class CommittableTransaction : System.Transactions.Transaction, IAsyncResult, IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit CommittableTransaction extends System.Transactions.Transaction implements class System.IAsyncResult, class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.CommittableTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommittableTransaction&#xA;Inherits Transaction&#xA;Implements IAsyncResult, IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommittableTransaction sealed : System::Transactions::Transaction, IAsyncResult, IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type CommittableTransaction = class&#xA;    inherit Transaction&#xA;    interface ISerializable&#xA;    interface IDisposable&#xA;    interface IAsyncResult" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="23137-101">Describe una transacción confirmable.</span><span class="sxs-lookup"><span data-stu-id="23137-101">Describes a committable transaction.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23137-102">La clase <xref:System.Transactions.CommittableTransaction> proporciona a las aplicaciones una manera explícita de utilizar una transacción, a diferencia de utilizar implícitamente la clase <xref:System.Transactions.TransactionScope>.</span><span class="sxs-lookup"><span data-stu-id="23137-102">The <xref:System.Transactions.CommittableTransaction> class provides an explicit way for applications to use a transaction, as opposed to using the <xref:System.Transactions.TransactionScope> class implicitly.</span></span> <span data-ttu-id="23137-103">A diferencia de la clase <xref:System.Transactions.TransactionScope>, el sistema de escritura de la aplicación ha de llamar específicamente a los métodos <xref:System.Transactions.CommittableTransaction.Commit%2A> y <xref:System.Transactions.Transaction.Rollback%2A> para confirmar o anular la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-103">Unlike the <xref:System.Transactions.TransactionScope> class, the application writer needs to specifically call the <xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.Transaction.Rollback%2A> methods in order to commit or abort the transaction.</span></span> <span data-ttu-id="23137-104">Sin embargo, solo el creador de una transacción puede confirmar la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-104">However, only the creator of a transaction can commit the transaction.</span></span> <span data-ttu-id="23137-105">Por lo tanto, copias de una transacción confirmable, se obtiene a través de la <xref:System.Transactions.Transaction.Clone%2A> método no son confirmable.</span><span class="sxs-lookup"><span data-stu-id="23137-105">Therefore, copies of a committable transaction, obtained through the <xref:System.Transactions.Transaction.Clone%2A> method are not committable.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="23137-106">Se recomienda crear transacciones implícitas mediante la <xref:System.Transactions.TransactionScope> clase, por lo que el contexto de transacción de ambiente se administra automáticamente.</span><span class="sxs-lookup"><span data-stu-id="23137-106">We recommend that you create implicit transactions using the <xref:System.Transactions.TransactionScope> class, so that the ambient transaction context is automatically managed for you.</span></span> <span data-ttu-id="23137-107">También se debe utilizar el <xref:System.Transactions.TransactionScope> y <xref:System.Transactions.DependentTransaction> clase para las aplicaciones que requieren el uso de la misma transacción entre varias llamadas de función o varias llamadas del subproceso.</span><span class="sxs-lookup"><span data-stu-id="23137-107">You should also use the <xref:System.Transactions.TransactionScope> and <xref:System.Transactions.DependentTransaction> class for applications that require the use of the same transaction across multiple function calls or multiple thread calls.</span></span> <span data-ttu-id="23137-108">Para obtener más información sobre este modelo, vea el [Implementing An implícita transacción Using transacción Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) tema.</span><span class="sxs-lookup"><span data-stu-id="23137-108">For more information on this model, see the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span>  
  
 <span data-ttu-id="23137-109">Creación de un <xref:System.Transactions.CommittableTransaction> no se establece automáticamente la transacción ambiente, que es la transacción se ejecuta en el código.</span><span class="sxs-lookup"><span data-stu-id="23137-109">Creating a <xref:System.Transactions.CommittableTransaction> does not automatically set the ambient transaction, which is the transaction your code executes in.</span></span> <span data-ttu-id="23137-110">Puede obtener o establecer la transacción ambiente llamando estático <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> propiedad de la información global <xref:System.Transactions.Transaction> objeto.</span><span class="sxs-lookup"><span data-stu-id="23137-110">You can get or set the ambient transaction by calling the static <xref:System.Transactions.Transaction.Current%2A?displayProperty=nameWithType> property of the global <xref:System.Transactions.Transaction> object.</span></span> <span data-ttu-id="23137-111">Para obtener más información sobre transacciones de ambiente, vea la sección "Flujo de transacción de administración utilizando TransactionScopeOption" de la [Implementing An implícita transacción Using transacción Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) tema.</span><span class="sxs-lookup"><span data-stu-id="23137-111">For more information on ambient transactions, see the " Managing Transaction Flow using TransactionScopeOption" section of the [Implementing An Implicit Transaction Using Transaction Scope](~/docs/framework/data/transactions/implementing-an-implicit-transaction-using-transaction-scope.md) topic.</span></span> <span data-ttu-id="23137-112">Si no se establece la transacción de ambiente, cualquier operación en un administrador de recursos no es parte de esa transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-112">If the ambient transaction is not set, any operation on a resource manager is not part of that transaction.</span></span> <span data-ttu-id="23137-113">Debe establecer explícitamente y restablecer la transacción ambiente para asegurarse de que los administradores de recursos funcionan bajo el contexto de transacción correcto.</span><span class="sxs-lookup"><span data-stu-id="23137-113">You need to explicitly set and reset the ambient transaction to ensure that resource managers operate under the right transaction context.</span></span>  
  
 <span data-ttu-id="23137-114">Hasta que un <xref:System.Transactions.CommittableTransaction> tiene ha confirmado, todos los recursos relacionados con la transacción todavía están bloqueados.</span><span class="sxs-lookup"><span data-stu-id="23137-114">Until a <xref:System.Transactions.CommittableTransaction> has been committed, all the resources involved with the transaction are still locked.</span></span>  
  
 <span data-ttu-id="23137-115">No se puede reutilizar un objeto <xref:System.Transactions.CommittableTransaction>.</span><span class="sxs-lookup"><span data-stu-id="23137-115">A <xref:System.Transactions.CommittableTransaction> object cannot be reused.</span></span> <span data-ttu-id="23137-116">Una vez que se ha confirmado o revertido, no puede volver a usar en una transacción ni establecer como el contexto de transacción de ambiente actual.</span><span class="sxs-lookup"><span data-stu-id="23137-116">Once it has been committed or rolled back, it cannot be used again in a transaction or set as the current ambient transaction context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="23137-117">El ejemplo siguiente crea dos nuevas instancias de <xref:System.Transactions.CommittableTransaction>, confirma y deshacen respectivamente.</span><span class="sxs-lookup"><span data-stu-id="23137-117">The following sample creates two new instances of <xref:System.Transactions.CommittableTransaction>, commits and rolls back them respectively.</span></span>  
  
  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="23137-118">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="23137-118">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/ms172152(v=vs.85)"><span data-ttu-id="23137-119">Implementar una transacción implícita mediante el ámbito de transacción</span><span class="sxs-lookup"><span data-stu-id="23137-119">Implementing An Implicit Transaction Using Transaction Scope</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/f6c648f8-d638-4228-bfa4-0d65dd262968"><span data-ttu-id="23137-120">Implementación de una transacción explícita con CommittableTransaction</span><span class="sxs-lookup"><span data-stu-id="23137-120">Implementing An Explicit Transaction Using CommittableTransaction</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="23137-121">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.CommittableTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="23137-121">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23137-122">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.CommittableTransaction" />.</span><span class="sxs-lookup"><span data-stu-id="23137-122">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="23137-123">El ejemplo siguiente crea una nueva instancia de <xref:System.Transactions.CommittableTransaction> y se confirma.</span><span class="sxs-lookup"><span data-stu-id="23137-123">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> and commits it.</span></span>  
  
 [!code-csharp[Tx_CommittableTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_committabletx/cs/committabletxwithsql.cs#1)]
 [!code-vb[Tx_CommittableTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_committabletx/vb/committabletxwithsql.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="23137-124">Se intenta crear una transacción bajo Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="23137-124">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : TimeSpan -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction timeout" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="23137-125">La cantidad máxima de tiempo de que la transacción puede existir, antes de anularse.</span><span class="sxs-lookup"><span data-stu-id="23137-125">The maximum amount of time the transaction can exist, before it is aborted.</span></span></param>
        <summary><span data-ttu-id="23137-126">Inicializa una nueva instancia de la clase <see cref="T:System.Transactions.CommittableTransaction" /> con el valor <paramref name="timeout" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="23137-126">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified <paramref name="timeout" /> value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="23137-127">Se intenta crear una transacción bajo Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="23137-127">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommittableTransaction (System.Transactions.TransactionOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Transactions.TransactionOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.#ctor(System.Transactions.TransactionOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As TransactionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommittableTransaction(System::Transactions::TransactionOptions options);" />
      <MemberSignature Language="F#" Value="new System.Transactions.CommittableTransaction : System.Transactions.TransactionOptions -&gt; System.Transactions.CommittableTransaction" Usage="new System.Transactions.CommittableTransaction options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="System.Transactions.TransactionOptions" />
      </Parameters>
      <Docs>
        <param name="options"><span data-ttu-id="23137-128">Un <see cref="T:System.Transactions.TransactionOptions" /> estructura que describe las opciones de transacción que se usará para la nueva transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-128">A <see cref="T:System.Transactions.TransactionOptions" /> structure that describes the transaction options to use for the new transaction.</span></span></param>
        <summary><span data-ttu-id="23137-129">Inicializa una nueva instancia de la <see cref="T:System.Transactions.CommittableTransaction" /> clase con las opciones de transacción especificado.</span><span class="sxs-lookup"><span data-stu-id="23137-129">Initializes a new instance of the <see cref="T:System.Transactions.CommittableTransaction" /> class with the specified transaction options.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="23137-130">El ejemplo siguiente crea una nueva instancia de <xref:System.Transactions.CommittableTransaction> con opciones y se anula.</span><span class="sxs-lookup"><span data-stu-id="23137-130">The following sample creates a new instance of <xref:System.Transactions.CommittableTransaction> with options, and aborts it.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="23137-131">Se intenta crear una transacción bajo Windows 98, Windows 98 Second Edition o Windows Millennium Edition.</span><span class="sxs-lookup"><span data-stu-id="23137-131">An attempt to create a transaction under Windows 98, Windows 98 Second Edition or Windows Millennium Edition.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="23137-132"><paramref name="options" /> no es válido.</span><span class="sxs-lookup"><span data-stu-id="23137-132"><paramref name="options" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginCommit">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback asyncCallback, object asyncState);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback asyncCallback, object asyncState) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ asyncCallback, System::Object ^ asyncState);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCommit (AsyncCallback callback, object user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCommit(class System.AsyncCallback callback, object user_defined_state) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCommit (callback As AsyncCallback, user_defined_state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCommit(AsyncCallback ^ callback, System::Object ^ user_defined_state);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCommit (callback As AsyncCallback, user_defined_state As Object) As IAsyncResult" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (callback, user_defined_state)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginCommit : AsyncCallback * obj -&gt; IAsyncResult" Usage="committableTransaction.BeginCommit (callback, user_defined_state)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="asyncState" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="user_defined_state" Type="System.Object" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncCallback"><span data-ttu-id="23137-133">El <see cref="T:System.AsyncCallback" /> delegado que se invoca cuando finaliza la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-133">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span></span> <span data-ttu-id="23137-134">Este parámetro puede ser <see langword="null" />, en cuyo caso no se notifica la aplicación de la finalización de la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-134">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span></span> <span data-ttu-id="23137-135">En su lugar, la aplicación debe utilizar el <see cref="T:System.IAsyncResult" /> interfaz para comprobar la finalización y esperar en consecuencia, o llamar a <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> para esperar la finalización.</span><span class="sxs-lookup"><span data-stu-id="23137-135">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span></span></param>
        <param name="callback"><span data-ttu-id="23137-136">El <see cref="T:System.AsyncCallback" /> delegado que se invoca cuando finaliza la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-136">The <see cref="T:System.AsyncCallback" /> delegate that is invoked when the transaction completes.</span></span> <span data-ttu-id="23137-137">Este parámetro puede ser <see langword="null" />, en cuyo caso no se notifica la aplicación de la finalización de la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-137">This parameter can be <see langword="null" />, in which case the application is not notified of the transaction's completion.</span></span> <span data-ttu-id="23137-138">En su lugar, la aplicación debe utilizar el <see cref="T:System.IAsyncResult" /> interfaz para comprobar la finalización y esperar en consecuencia, o llamar a <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> para esperar la finalización.</span><span class="sxs-lookup"><span data-stu-id="23137-138">Instead, the application must use the <see cref="T:System.IAsyncResult" /> interface to check for completion and wait accordingly, or call <see cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" /> to wait for completion.</span></span></param>
        <param name="asyncState"><span data-ttu-id="23137-139">Un objeto, que podría contener información de estado arbitraria, asociado con la confirmación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-139">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span></span> <span data-ttu-id="23137-140">Este objeto se pasa a la devolución de llamada y no interpreta <see cref="N:System.Transactions" />.</span><span class="sxs-lookup"><span data-stu-id="23137-140">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span></span> <span data-ttu-id="23137-141">Se permite una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="23137-141">A null reference is permitted.</span></span></param>
        <param name="user_defined_state"><span data-ttu-id="23137-142">Un objeto, que podría contener información de estado arbitraria, asociado con la confirmación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-142">An object, which might contain arbitrary state information, associated with the asynchronous commitment.</span></span> <span data-ttu-id="23137-143">Este objeto se pasa a la devolución de llamada y no interpreta <see cref="N:System.Transactions" />.</span><span class="sxs-lookup"><span data-stu-id="23137-143">This object is passed to the callback, and is not interpreted by <see cref="N:System.Transactions" />.</span></span> <span data-ttu-id="23137-144">Se permite una referencia nula.</span><span class="sxs-lookup"><span data-stu-id="23137-144">A null reference is permitted.</span></span></param>
        <summary><span data-ttu-id="23137-145">Comienza un intento de confirmar la transacción de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-145">Begins an attempt to commit the transaction asynchronously.</span></span></summary>
        <returns><span data-ttu-id="23137-146">Un <see cref="T:System.IAsyncResult" /> interfaz que puede utilizar el llamador para comprobar el estado de la operación asincrónica o esperar a que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="23137-146">An <see cref="T:System.IAsyncResult" /> interface that can be used by the caller to check the status of the asynchronous operation, or to wait for the operation to complete.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23137-147">Este método vuelve inmediatamente, antes de que se ha completado la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-147">This method returns immediately, before the transaction has been completed.</span></span> <span data-ttu-id="23137-148">La transacción, a continuación, en un subproceso diferente, las confirmaciones y los `asyncCallback` delegado se invoca cuando se ha completado.</span><span class="sxs-lookup"><span data-stu-id="23137-148">The transaction then commits on a different thread, and the `asyncCallback` delegate is invoked when it has completed.</span></span> <span data-ttu-id="23137-149">Después de llamar a este método, no se recibe el resultado de la transacción hasta que llame a <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span><span class="sxs-lookup"><span data-stu-id="23137-149">After this method is called, you do not receive the outcome of the transaction until you call <xref:System.Transactions.CommittableTransaction.EndCommit%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="23137-150">El proceso de confirmación puede finalizar sincrónicamente dentro de esta llamada al método.</span><span class="sxs-lookup"><span data-stu-id="23137-150">The commit process may complete synchronously inside this method call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" />
      </Docs>
    </Member>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Commit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.Commit" />
      <MemberSignature Language="VB.NET" Value="Public Sub Commit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit();" />
      <MemberSignature Language="F#" Value="member this.Commit : unit -&gt; unit" Usage="committableTransaction.Commit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23137-151">Intenta confirmar la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-151">Attempts to commit the transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23137-152">Cuando se llama a este método, todos los objetos que se han registrado para participar en la transacción se sondean y pueden indicar por separado su voto para confirmar o revertir la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-152">When this method is called, all objects that have registered to participate in the transaction are polled and can independently indicate their vote to either commit or roll back the transaction.</span></span> <span data-ttu-id="23137-153">Si cualquier participante vota para revertir la transacción, se revierte y este método produce una <xref:System.Transactions.TransactionException> excepción.</span><span class="sxs-lookup"><span data-stu-id="23137-153">If any participant votes to roll back the transaction, it is rolled back and this method throws a <xref:System.Transactions.TransactionException> exception.</span></span> <span data-ttu-id="23137-154">Se trata de una aparición normal para una transacción y el código debe detectar y procesar tales excepciones.</span><span class="sxs-lookup"><span data-stu-id="23137-154">This is a normal occurrence for a transaction and your code should catch and process such exceptions.</span></span>  
  
 <span data-ttu-id="23137-155"><xref:System.Transactions.CommittableTransaction.Commit%2A> y <xref:System.Transactions.CommittableTransaction.EndCommit%2A> bloquear hasta que se complete la primera fase del procesamiento de transacciones.</span><span class="sxs-lookup"><span data-stu-id="23137-155"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="23137-156">La primera fase finaliza después de todos los administradores de recursos y las inscripciones en la transacción han votado en el resultado de la transacción y el <xref:System.Transactions.TransactionManager> ha decidido confirmar o anular la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-156">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="23137-157">La segunda fase de procesamiento siempre es asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-157">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="23137-158">Por lo tanto, no hay ninguna garantía de que haya datos confirmados justo desde dentro de una transacción determinada estarán disponibles inmediatamente después cuando no se usa otra transacción para ver los datos.</span><span class="sxs-lookup"><span data-stu-id="23137-158">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 <span data-ttu-id="23137-159">Dado que puede producirse este método se bloquea hasta que la primera fase del procesamiento de transacciones se complete, debe ser extremadamente cuidadoso al usar este método en una aplicación de Windows Forms (WinForm) o a un interbloqueo.</span><span class="sxs-lookup"><span data-stu-id="23137-159">Because this method blocks until the first phase of transaction processing is complete, you should be extremely careful when using this method in a Windows Form (WinForm) application, or a deadlock can occur.</span></span> <span data-ttu-id="23137-160">Si llama a este método dentro de un evento de WinForm Control (por ejemplo, al hacer clic en un botón) y usa sincrónico <xref:System.Windows.Forms.Control.Invoke%2A> método para dirigir el control para realizar algunas tareas de la interfaz de usuario (por ejemplo, cambiar los colores) en el medio de procesamiento de la transacción, un se producirá un interbloqueo.</span><span class="sxs-lookup"><span data-stu-id="23137-160">If you call this method inside one WinForm Control event (for example, clicking a button), and use the synchronous <xref:System.Windows.Forms.Control.Invoke%2A> method to direct the control to perform some UI tasks (for example, changing colors) in the middle of processing the transaction, a deadlock will happen.</span></span> <span data-ttu-id="23137-161">Esto es porque el <xref:System.Windows.Forms.Control.Invoke%2A> método es sincrónico y bloquea el subproceso de trabajo hasta que el subproceso de interfaz de usuario finaliza su trabajo.</span><span class="sxs-lookup"><span data-stu-id="23137-161">This is because the <xref:System.Windows.Forms.Control.Invoke%2A> method is synchronous and blocks the worker thread until the UI thread finishes its job.</span></span> <span data-ttu-id="23137-162">Sin embargo, en nuestro escenario, también está esperando el subproceso de interfaz de usuario para que el subproceso de trabajo confirmar la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-162">However, in our scenario, the UI thread is also waiting for the worker thread to commit the transaction.</span></span> <span data-ttu-id="23137-163">El resultado es que ninguno es capaz de continuar y el ámbito espera indefinidamente a que finalice la ejecución.</span><span class="sxs-lookup"><span data-stu-id="23137-163">The result is that none is able to proceed and the scope waits indefinitely for the Commit to finish.</span></span> <span data-ttu-id="23137-164">Debe usar <xref:System.Windows.Forms.Control.BeginInvoke%2A> lugar <xref:System.Windows.Forms.Control.Invoke%2A> siempre que sea posible, porque es asincrónica y, por tanto, menos propenso a interbloqueo.</span><span class="sxs-lookup"><span data-stu-id="23137-164">You should use <xref:System.Windows.Forms.Control.BeginInvoke%2A> rather than <xref:System.Windows.Forms.Control.Invoke%2A> wherever possible, because it is asynchronous and thus less prone to deadlock.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionInDoubtException"><span data-ttu-id="23137-165"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> se llama en una transacción y la transacción se convierte en <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span><span class="sxs-lookup"><span data-stu-id="23137-165"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called on a transaction and the transaction becomes <see cref="F:System.Transactions.TransactionStatus.InDoubt" />.</span></span></exception>
        <exception cref="T:System.Transactions.TransactionAbortedException"><span data-ttu-id="23137-166"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> se llama y revierte la transacción por primera vez.</span><span class="sxs-lookup"><span data-stu-id="23137-166"><see cref="M:System.Transactions.CommittableTransaction.Commit" /> is called and the transaction rolls back for the first time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndCommit">
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult asyncResult);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult asyncResult) cil managed" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (asyncResult As IAsyncResult)" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ asyncResult);" FrameworkAlternate="netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netstandard-2.0;netcore-2.1;netframework-4.7.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;netcore-2.2;netcore-3.0;netstandard-2.1" />
      <MemberSignature Language="C#" Value="public void EndCommit (IAsyncResult ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCommit(class System.IAsyncResult ar) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCommit (ar As IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCommit(IAsyncResult ^ ar);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.EndCommit(System.IAsyncResult)" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit ar" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.EndCommit : IAsyncResult -&gt; unit" Usage="committableTransaction.EndCommit ar" FrameworkAlternate="xamarinandroid-7.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
        <Parameter Name="ar" Type="System.IAsyncResult" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="23137-167">La <see cref="T:System.IAsyncResult" /> objeto asociado a la confirmación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-167">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span></span></param>
        <param name="ar"><span data-ttu-id="23137-168">La <see cref="T:System.IAsyncResult" /> objeto asociado a la confirmación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-168">The <see cref="T:System.IAsyncResult" /> object associated with the asynchronous commitment.</span></span></param>
        <summary><span data-ttu-id="23137-169">Finaliza un intento de confirmar la transacción de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-169">Ends an attempt to commit the transaction asynchronously.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="23137-170">Debe llamar a este método en el delegado de devolución de llamada especificado como un parámetro a la <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> método, cuando haya terminado de cualquier trabajo de limpieza asociado con la confirmación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-170">You should call this method in the callback delegate specified as a parameter to the <xref:System.Transactions.CommittableTransaction.BeginCommit%2A> method, when you have finished any cleanup work associated with the asynchronous commitment.</span></span> <span data-ttu-id="23137-171">También se puede llamar este método al principio sin tener que esperar para el delegado.</span><span class="sxs-lookup"><span data-stu-id="23137-171">You can also call this method early without waiting for the delegate.</span></span> <span data-ttu-id="23137-172">Si, en el momento en que se llame a este método, no ha completado la transacción, este método espera su finalización.</span><span class="sxs-lookup"><span data-stu-id="23137-172">If, by the time you call this method, the transaction has not completed, this method waits for its completion.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="23137-173">El <xref:System.IAsyncResult.CompletedSynchronously%2A> propiedad devuelta por `asyncResult` siempre `false`, incluso si la operación finalice sincrónicamente.</span><span class="sxs-lookup"><span data-stu-id="23137-173">The <xref:System.IAsyncResult.CompletedSynchronously%2A> property returned by `asyncResult` is always `false`, even if the operation completed synchronously.</span></span>  
  
 <span data-ttu-id="23137-174"><xref:System.Transactions.CommittableTransaction.Commit%2A> y <xref:System.Transactions.CommittableTransaction.EndCommit%2A> bloquear hasta que se complete la primera fase del procesamiento de transacciones.</span><span class="sxs-lookup"><span data-stu-id="23137-174"><xref:System.Transactions.CommittableTransaction.Commit%2A> and <xref:System.Transactions.CommittableTransaction.EndCommit%2A> block until the first phase of transaction processing is complete.</span></span> <span data-ttu-id="23137-175">La primera fase finaliza después de todos los administradores de recursos y las inscripciones en la transacción han votado en el resultado de la transacción y el <xref:System.Transactions.TransactionManager> ha decidido confirmar o anular la transacción.</span><span class="sxs-lookup"><span data-stu-id="23137-175">The first phase ends after all resource managers and enlistments in the transaction have voted on the transaction outcome and the <xref:System.Transactions.TransactionManager> has durably decided to commit or abort the transaction.</span></span> <span data-ttu-id="23137-176">La segunda fase de procesamiento siempre es asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-176">The second phase of processing is always asynchronous.</span></span> <span data-ttu-id="23137-177">Por lo tanto, no hay ninguna garantía de que haya datos confirmados justo desde dentro de una transacción determinada estarán disponibles inmediatamente después cuando no se usa otra transacción para ver los datos.</span><span class="sxs-lookup"><span data-stu-id="23137-177">Therefore, there is no guarantee that data just committed from within a given transaction will be immediately available afterwards when not using another transaction to view this data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionAbortedException"><span data-ttu-id="23137-178"><see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> se llama y revierte la transacción por primera vez.</span><span class="sxs-lookup"><span data-stu-id="23137-178"><see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> is called and the transaction rolls back for the first time.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncState">
      <MemberSignature Language="C#" Value="object System.IAsyncResult.AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.IAsyncResult.AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncState As Object Implements IAsyncResult.AsyncState" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::IAsyncResult::AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23137-179">Obtiene el objeto proporcionado como el último parámetro de la <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> llamada al método.</span><span class="sxs-lookup"><span data-stu-id="23137-179">Gets the object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span></span></summary>
        <value><span data-ttu-id="23137-180">El objeto proporcionado como el último parámetro de la <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> llamada al método.</span><span class="sxs-lookup"><span data-stu-id="23137-180">The object provided as the last parameter of the <see cref="M:System.Transactions.CommittableTransaction.BeginCommit(System.AsyncCallback,System.Object)" /> method call.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.AsyncWaitHandle">
      <MemberSignature Language="C#" Value="System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property AsyncWaitHandle As WaitHandle Implements IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="C++ CLI" Value="property System::Threading::WaitHandle ^ System::IAsyncResult::AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23137-181">Obtiene <see cref="T:System.Threading.WaitHandle" /> que se utiliza para esperar a que finalice una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-181">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></summary>
        <value><span data-ttu-id="23137-182"><see cref="T:System.Threading.WaitHandle" /> que se utiliza para esperar a que finalice una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="23137-182">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.CompletedSynchronously">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property CompletedSynchronously As Boolean Implements IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System::IAsyncResult::CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23137-183">Obtiene una indicación de si la operación de confirmación asincrónica ha finalizado sincrónicamente.</span><span class="sxs-lookup"><span data-stu-id="23137-183">Gets an indication of whether the asynchronous commit operation completed synchronously.</span></span></summary>
        <value><span data-ttu-id="23137-184"><see langword="true" /> Si la operación de confirmación asincrónica ha finalizado sincrónicamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23137-184"><see langword="true" /> if the asynchronous commit operation completed synchronously; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="23137-185">Esta propiedad siempre devuelve <see langword="false" /> incluso si la operación finalice sincrónicamente.</span><span class="sxs-lookup"><span data-stu-id="23137-185">This property always returns <see langword="false" /> even if the operation completed synchronously.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IAsyncResult.IsCompleted">
      <MemberSignature Language="C#" Value="bool System.IAsyncResult.IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.Transactions.CommittableTransaction.System#IAsyncResult#IsCompleted" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsCompleted As Boolean Implements IAsyncResult.IsCompleted" />
      <MemberSignature Language="C++ CLI" Value="property bool System::IAsyncResult::IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23137-186">Obtiene un valor que indica si la operación de confirmación asincrónica ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="23137-186">Gets an indication whether the asynchronous commit operation has completed.</span></span></summary>
        <value><span data-ttu-id="23137-187"><see langword="true" /> si la operación ha finalizado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23137-187"><see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.CommittableTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
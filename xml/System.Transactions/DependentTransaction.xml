<Type Name="DependentTransaction" FullName="System.Transactions.DependentTransaction">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6e1497f6bad0a7b13959bae582ba68240e87e35" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57949555" /></Metadata><TypeSignature Language="C#" Value="public sealed class DependentTransaction : System.Transactions.Transaction, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DependentTransaction extends System.Transactions.Transaction implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Transactions.DependentTransaction" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependentTransaction&#xA;Inherits Transaction&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependentTransaction sealed : System::Transactions::Transaction, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type DependentTransaction = class&#xA;    inherit Transaction&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Transactions</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Transactions.Local</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Transactions.Transaction</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3fb72-101">Describe un clon de una transacción y garantiza que no se puede confirmar la transacción hasta que la aplicación no deja de procesar la transacción.</span><span class="sxs-lookup"><span data-stu-id="3fb72-101">Describes a clone of a transaction providing guarantee that the transaction cannot be committed until the application comes to rest regarding work on the transaction.</span></span> <span data-ttu-id="3fb72-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="3fb72-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fb72-103">El <xref:System.Transactions.DependentTransaction> es un clon de un <xref:System.Transactions.Transaction> objeto creado mediante el <xref:System.Transactions.Transaction.DependentClone%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3fb72-103">The <xref:System.Transactions.DependentTransaction> is a clone of a <xref:System.Transactions.Transaction> object created using the <xref:System.Transactions.Transaction.DependentClone%2A> method.</span></span>  <span data-ttu-id="3fb72-104">Su único propósito es permitir que la aplicación llegar a rest y garantizar que no se puede confirmar la transacción mientras todavía se está ejecutando el trabajo en la transacción (por ejemplo, en un subproceso de trabajo).</span><span class="sxs-lookup"><span data-stu-id="3fb72-104">Its sole purpose is to allow the application to come to rest and guarantee that the transaction cannot commit while work is still being performed on the transaction (for example, on a worker thread).</span></span>  
  
 <span data-ttu-id="3fb72-105">Cuando el trabajo realizado dentro de la transacción clonada finalmente está completo y listo para confirmarse, puede informar al creador de la transacción con el <xref:System.Transactions.DependentTransaction.Complete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3fb72-105">When the work done within the cloned transaction is finally complete and ready to be committed, it can inform the creator of the transaction using the <xref:System.Transactions.DependentTransaction.Complete%2A> method.</span></span> <span data-ttu-id="3fb72-106">Así se pueden conservar la coherencia y exactitud de los datos.</span><span class="sxs-lookup"><span data-stu-id="3fb72-106">Thus you can preserve the consistency and correctness of data.</span></span>  
  
 <span data-ttu-id="3fb72-107">El <xref:System.Transactions.DependentCloneOption> enumeración se utiliza para determinar el comportamiento de confirmación.</span><span class="sxs-lookup"><span data-stu-id="3fb72-107">The <xref:System.Transactions.DependentCloneOption> enumeration is used to determine the behavior on commit.</span></span>  <span data-ttu-id="3fb72-108">Este control de comportamiento permite que una aplicación se detenga, así como proporciona compatibilidad con la simultaneidad.</span><span class="sxs-lookup"><span data-stu-id="3fb72-108">This behavior control allows an application to come to rest, as well as provides concurrency support.</span></span> <span data-ttu-id="3fb72-109">Para obtener más información sobre cómo se utiliza esta enumeración, vea [administración de simultaneidad con DependentTransaction](https://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span><span class="sxs-lookup"><span data-stu-id="3fb72-109">For more information on how this enumeration is used, see [Managing Concurrency with DependentTransaction](https://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3fb72-110">El ejemplo siguiente muestra cómo crear una transacción dependiente.</span><span class="sxs-lookup"><span data-stu-id="3fb72-110">The following example shows you how to create a dependent transaction.</span></span>  
  
 [!code-csharp[Tx_DependentTx#1](~/samples/snippets/csharp/VS_Snippets_CFX/tx_dependenttx/cs/dependenttx.cs#1)]
 [!code-vb[Tx_DependentTx#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/tx_dependenttx/vb/dependenttx.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="3fb72-111">Este tipo es seguro para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="3fb72-111">This type is thread safe.</span></span></threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/bdad8468-2a90-4b81-8375-278067120cab"><span data-ttu-id="3fb72-112">Administrar la simultaneidad con DependentTransaction</span><span class="sxs-lookup"><span data-stu-id="3fb72-112">Managing Concurrency with DependentTransaction</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="override this.Complete : unit -&gt; unit" Usage="dependentTransaction.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3fb72-113">Intenta finalizar la transacción dependiente.</span><span class="sxs-lookup"><span data-stu-id="3fb72-113">Attempts to complete the dependent transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3fb72-114">Llame a este método cuando el clon dependiente desea informar al creador de la transacción que ha finalizado su trabajo, y se puede confirmar la transacción si el elemento primario también está preparado.</span><span class="sxs-lookup"><span data-stu-id="3fb72-114">Call this method when the dependent clone wants to inform the creator of the transaction that it has finished its work, and the transaction can be committed if the parent is also ready.</span></span>  
  
 <span data-ttu-id="3fb72-115">Una vez que se invoca esta llamada, no debe intentar ningún trabajo adicional en la transacción, o se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="3fb72-115">After this call is invoked, you should not attempt any additional work on the transaction, or an exception is thrown.</span></span>  
  
 <span data-ttu-id="3fb72-116">Si el dominio de aplicación deja de funcionar después de que se llama a este método y antes de que finalice la transacción, puede anular la transacción.</span><span class="sxs-lookup"><span data-stu-id="3fb72-116">If the application domain goes down after this method is called, and before the transaction is completed, the transaction might abort.</span></span>  
  
 <span data-ttu-id="3fb72-117">**Tenga en cuenta** este método debe llamarse una sola vez durante la vigencia de la transacción dependiente.</span><span class="sxs-lookup"><span data-stu-id="3fb72-117">**Note** This method should be called only once during the dependent transaction's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Transactions.TransactionException"><span data-ttu-id="3fb72-118">Cualquier intento de trabajo adicional en la transacción después de llamarse a este método.</span><span class="sxs-lookup"><span data-stu-id="3fb72-118">Any attempt for additional work on the transaction after this method is called.</span></span> <span data-ttu-id="3fb72-119">Incluyen la invocación de métodos como <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> o cualquier operación de serialización en la transacción.</span><span class="sxs-lookup"><span data-stu-id="3fb72-119">These include invoking methods such as <see cref="Overload:System.Transactions.Transaction.EnlistVolatile" />, <see cref="Overload:System.Transactions.Transaction.EnlistDurable" />, <see cref="M:System.Transactions.Transaction.Clone" />, <see cref="M:System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)" /> , or any serialization operations on the transaction.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/b85a97d8-8e02-4555-95df-34c8af095148"><span data-ttu-id="3fb72-120">Administrar la simultaneidad con DependentTransaction</span><span class="sxs-lookup"><span data-stu-id="3fb72-120">Managing Concurrency with DependentTransaction</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Transactions.DependentTransaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Transactions</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Transactions.Local</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="HasRunnableWorkflowEvent" FullName="System.Activities.DurableInstancing.HasRunnableWorkflowEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1cfd646d1e20d071ee8c664f99f0d0a8ba1ebead" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36655568" /></Metadata><TypeSignature Language="C#" Value="public sealed class HasRunnableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HasRunnableWorkflowEvent extends System.Runtime.DurableInstancing.InstancePersistenceEvent`1&lt;class System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HasRunnableWorkflowEvent&#xA;Inherits InstancePersistenceEvent(Of HasRunnableWorkflowEvent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class HasRunnableWorkflowEvent sealed : System::Runtime::DurableInstancing::InstancePersistenceEvent&lt;System::Activities::DurableInstancing::HasRunnableWorkflowEvent ^&gt;" />
  <TypeSignature Language="F#" Value="type HasRunnableWorkflowEvent = class&#xA;    inherit InstancePersistenceEvent&lt;HasRunnableWorkflowEvent&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.DurableInstancing.InstancePersistenceEvent&lt;System.Activities.DurableInstancing.HasRunnableWorkflowEvent&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Activities.DurableInstancing.HasRunnableWorkflowEvent</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9822a-101">Representa un evento que produce el Almacén de instancias de flujo de trabajo de SQL para notificar a los hosts del flujo de trabajo la existencia de instancias ejecutables en la base de datos de persistencia.</span><span class="sxs-lookup"><span data-stu-id="9822a-101">Represents an event that the SQL Workflow Instance Store raises to notify workflow hosts about the existence of runnable instances in the persistence database.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9822a-102">Es una instancia *ejecutable*, si todavía no está en estado suspendido o en estado completado y cumple las condiciones siguientes:</span><span class="sxs-lookup"><span data-stu-id="9822a-102">An instance is *runnable*, if it is not in the suspended state or the completed state and satisfies the following conditions:</span></span>  
  
-   <span data-ttu-id="9822a-103">La instancia se desbloquea y tiene un temporizador pendiente que ha expirado.</span><span class="sxs-lookup"><span data-stu-id="9822a-103">The instance is unlocked and has a pending timer that has expired.</span></span>  
  
-   <span data-ttu-id="9822a-104">La instancia está desbloqueada y su estado es **Executing**.</span><span class="sxs-lookup"><span data-stu-id="9822a-104">The instance is unlocked and its status is **Executing**.</span></span>  
  
-   <span data-ttu-id="9822a-105">La instancia tiene un bloqueo no válido.</span><span class="sxs-lookup"><span data-stu-id="9822a-105">The instance has an invalid lock on it.</span></span>  
  
 <span data-ttu-id="9822a-106">Un almacén de instancias debe buscar periódicamente instancias ejecutables que pertenecen a un host de flujo de trabajo que utiliza el almacén.</span><span class="sxs-lookup"><span data-stu-id="9822a-106">An instance store should periodically search for runnable instances that belong to a workflow host that uses the store.</span></span> <span data-ttu-id="9822a-107">Debería generar el evento <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> cuando encuentra una instancia ejecutable en el almacén de persistencia que coincida con su tipo de host de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="9822a-107">It should raise the <xref:System.Activities.DurableInstancing.HasRunnableWorkflowEvent> when it finds a runnable instance in the persistence store that matches its workflow host type.</span></span> <span data-ttu-id="9822a-108">Si el almacén de instancias no encuentra una instancia ejecutable en el almacén de persistencia, debería continuar supervisando el almacén de persistencia en busca de cualquier instancia ejecutable.</span><span class="sxs-lookup"><span data-stu-id="9822a-108">If the instance store does not find a runnable instance in the persistence store, it should continue to monitor the persistence store for any runnable instances.</span></span>  
  
 <span data-ttu-id="9822a-109">Después de generar el evento HasRunnableWorkflowEvent, el almacén de instancias debería dejar de supervisar el almacén de persistencia en busca de instancias ejecutables hasta que reciba y ejecute el comando <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span><span class="sxs-lookup"><span data-stu-id="9822a-109">After raising the HasRunnableWorkflowEvent, the instance store should stop monitoring the persistence store for runnable instances until it receives and executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand>.</span></span> <span data-ttu-id="9822a-110">La supervisión solo continúa si la ejecución del comando TryLoadRunnableWorkflowCommand no devuelve ninguna instancia ejecutable.</span><span class="sxs-lookup"><span data-stu-id="9822a-110">The monitoring continues only if the TryLoadRunnableWorkflowCommand execution does not return any runnable instances.</span></span>  
  
 <span data-ttu-id="9822a-111">Cuando un host de flujo de trabajo recibe el evento HasRunnableWorkflowEvent, ejecuta el comando <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> en el almacén de instancias para cargar la instancia en la memoria.</span><span class="sxs-lookup"><span data-stu-id="9822a-111">When a workflow host receives the HasRunnableWorkflowEvent, it executes the <xref:System.Activities.DurableInstancing.TryLoadRunnableWorkflowCommand> against the instance store to load the instance into the memory.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HasRunnableWorkflowEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.DurableInstancing.HasRunnableWorkflowEvent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HasRunnableWorkflowEvent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9822a-112">Inicializa una instancia de la clase <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" />.</span><span class="sxs-lookup"><span data-stu-id="9822a-112">Initializes an instance of the <see cref="T:System.Activities.DurableInstancing.HasRunnableWorkflowEvent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="OpenFileDialog" FullName="System.Windows.Forms.OpenFileDialog">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4d6be3b2635af8040d66e8f7dddaad2a6a38b7ec" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56355474" /></Metadata><TypeSignature Language="C#" Value="public sealed class OpenFileDialog : System.Windows.Forms.FileDialog" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OpenFileDialog extends System.Windows.Forms.FileDialog" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.OpenFileDialog" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OpenFileDialog&#xA;Inherits FileDialog" />
  <TypeSignature Language="C++ CLI" Value="public ref class OpenFileDialog sealed : System::Windows::Forms::FileDialog" />
  <TypeSignature Language="F#" Value="type OpenFileDialog = class&#xA;    inherit FileDialog" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.FileDialog</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.OpenFileDialogDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="f9249-101">Muestra un cuadro de diálogo que pide al usuario que abra un archivo.</span><span class="sxs-lookup"><span data-stu-id="f9249-101">Displays a standard dialog box that prompts the user to open a file.</span></span> <span data-ttu-id="f9249-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="f9249-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9249-103">Esta clase le permite comprobar si existe un archivo y abrirlo.</span><span class="sxs-lookup"><span data-stu-id="f9249-103">This class allows you to check whether a file exists and to open it.</span></span> <span data-ttu-id="f9249-104">El <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propiedad determina si aparece una casilla de solo lectura en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="f9249-104">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box.</span></span> <span data-ttu-id="f9249-105">El <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> propiedad indica si está activada la casilla de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f9249-105">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.</span></span>  
  
 <span data-ttu-id="f9249-106">La mayoría de las funcionalidades principales de esta clase se encuentra en el <xref:System.Windows.Forms.FileDialog> clase.</span><span class="sxs-lookup"><span data-stu-id="f9249-106">Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.</span></span>  

<span data-ttu-id="f9249-107">En un sistema operativo de derecha a izquierda, establecer el formulario que contiene <xref:System.Windows.Forms.Control.RightToLeft> propiedad <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localiza el cuadro de diálogo **nombre de archivo**, **abierto**, y **cancelar** botones.</span><span class="sxs-lookup"><span data-stu-id="f9249-107">On a right-to-left operating system, setting the containing form's <xref:System.Windows.Forms.Control.RightToLeft> property to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> localizes the dialog's **File Name**, **Open**, and **Cancel** buttons.</span></span> <span data-ttu-id="f9249-108">Si la propiedad no se establece en <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, texto en inglés se usa en su lugar.</span><span class="sxs-lookup"><span data-stu-id="f9249-108">If the property is not set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, English text is used instead.</span></span>  

 <span data-ttu-id="f9249-109">Si desea dar al usuario la capacidad de seleccionar una carpeta en lugar de un archivo, use <xref:System.Windows.Forms.FolderBrowserDialog> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="f9249-109">If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9249-110">En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.OpenFileDialog>, Establece varias propiedades para definir el comportamiento de filtro y el cuadro de diálogo de la extensión de archivo y se muestra el cuadro de diálogo mediante la <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="f9249-110">The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="f9249-111">El ejemplo requiere un formulario con un <xref:System.Windows.Forms.Button> colocado en él y una referencia a la <xref:System.IO> espacio de nombres que se agregan a él.</span><span class="sxs-lookup"><span data-stu-id="f9249-111">The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.FileDialog" />
    <altmember cref="T:System.Windows.Forms.CommonDialog" />
    <altmember cref="T:System.Windows.Forms.SaveFileDialog" />
    <related type="Article" href="~/docs/standard/io/how-to-read-text-from-a-file.md"><span data-ttu-id="f9249-112">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="f9249-112">How to: Read Text from a File</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OpenFileDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OpenFileDialog();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9249-113">Inicializa una instancia de la clase <see cref="T:System.Windows.Forms.OpenFileDialog" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-113">Initializes an instance of the <see cref="T:System.Windows.Forms.OpenFileDialog" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9249-114">Este es el valor predeterminado, el constructor proporcionado por el compilador para la <xref:System.Windows.Forms.OpenFileDialog> clase.</span><span class="sxs-lookup"><span data-stu-id="f9249-114">This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckFileExists">
      <MemberSignature Language="C#" Value="public override bool CheckFileExists { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckFileExists" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property CheckFileExists As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CheckFileExists { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckFileExists : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.CheckFileExists" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9249-115">Obtiene o establece un valor que indica si el cuadro de diálogo muestra una advertencia cuando el usuario especifica un nombre de archivo que no existe.</span><span class="sxs-lookup"><span data-stu-id="f9249-115">Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.</span></span></summary>
        <value><span data-ttu-id="f9249-116">Es <see langword="true" /> si el cuadro de diálogo muestra una advertencia cuando el usuario especifica un nombre de archivo que no existe; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-116"><see langword="true" /> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f9249-117">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-117">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="Multiselect">
      <MemberSignature Language="C#" Value="public bool Multiselect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Multiselect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberSignature Language="VB.NET" Value="Public Property Multiselect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Multiselect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Multiselect : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.Multiselect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9249-118">Obtiene o establece un valor que indica si el cuadro de diálogo permite seleccionar varios archivos.</span><span class="sxs-lookup"><span data-stu-id="f9249-118">Gets or sets a value indicating whether the dialog box allows multiple files to be selected.</span></span></summary>
        <value><span data-ttu-id="f9249-119">Es <see langword="true" /> si el cuadro de diálogo permite que se seleccionen varios archivos juntos o simultáneamente; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-119"><see langword="true" /> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f9249-120">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-120">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9249-121">Use el <xref:System.Windows.Forms.FileDialog.FileNames%2A> propiedad para tener acceso a la lista completa de los nombres de archivo seleccionados.</span><span class="sxs-lookup"><span data-stu-id="f9249-121">Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9249-122">El ejemplo de código siguiente permite al usuario seleccionar un número de imágenes y mostrarlas en <xref:System.Windows.Forms.PictureBox> controles en un formulario.</span><span class="sxs-lookup"><span data-stu-id="f9249-122">The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form.</span></span> <span data-ttu-id="f9249-123">Muestra cómo inicializar un <xref:System.Windows.Forms.OpenFileDialog>, estableciendo el <xref:System.Windows.Forms.FileDialog.Title%2A> y <xref:System.Windows.Forms.FileDialog.Filter%2A> propiedades y que permite al usuario seleccionar varios archivos, establezca el <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> propiedad en true.</span><span class="sxs-lookup"><span data-stu-id="f9249-123">It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true.</span></span> <span data-ttu-id="f9249-124">Este ejemplo de código se da por supuesto que el formulario ya tiene un <xref:System.Windows.Forms.OpenFileDialog> control denominado `openFileDialog1`, un <xref:System.Windows.Forms.Button> denominado `SelectFileButton`y un <xref:System.Windows.Forms.FlowLayoutPanel> denominado `flowLayoutPanel1`.</span><span class="sxs-lookup"><span data-stu-id="f9249-124">This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.</span></span>  
  
 [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.FileDialog.FileNames" />
        <altmember cref="P:System.Windows.Forms.FileDialog.Filter" />
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.Stream OpenFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream OpenFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.OpenFile" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ OpenFile();" />
      <MemberSignature Language="F#" Value="member this.OpenFile : unit -&gt; System.IO.Stream" Usage="openFileDialog.OpenFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9249-125">Abre el archivo seleccionado por el usuario con permiso de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f9249-125">Opens the file selected by the user, with read-only permission.</span></span> <span data-ttu-id="f9249-126">La propiedad <see cref="P:System.Windows.Forms.FileDialog.FileName" /> especifica el archivo.</span><span class="sxs-lookup"><span data-stu-id="f9249-126">The file is specified by the <see cref="P:System.Windows.Forms.FileDialog.FileName" /> property.</span></span></summary>
        <returns><span data-ttu-id="f9249-127"><see cref="T:System.IO.Stream" /> que especifica el archivo de solo lectura seleccionado por el usuario.</span><span class="sxs-lookup"><span data-stu-id="f9249-127">A <see cref="T:System.IO.Stream" /> that specifies the read-only file selected by the user.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9249-128">El <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> método se usa para facilitar una forma de abrir rápidamente un archivo desde el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="f9249-128">The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box.</span></span> <span data-ttu-id="f9249-129">El archivo se abre en modo de solo lectura por motivos de seguridad.</span><span class="sxs-lookup"><span data-stu-id="f9249-129">The file is opened in read-only mode for security purposes.</span></span> <span data-ttu-id="f9249-130">Para abrir un archivo en modo de lectura/escritura, debe usar otro método, como <xref:System.IO.FileStream>.</span><span class="sxs-lookup"><span data-stu-id="f9249-130">To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9249-131">En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A>.</span><span class="sxs-lookup"><span data-stu-id="f9249-131">The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.</span></span>  
  
 [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]
 [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]
 [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f9249-132">El nombre de archivo es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-132">The file name is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileDialogPermission"><span data-ttu-id="f9249-133">Para abrir un archivo.</span><span class="sxs-lookup"><span data-stu-id="f9249-133">to open a file.</span></span> <span data-ttu-id="f9249-134">Enumeración asociada: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-134">Associated enumeration: <see cref="F:System.Security.Permissions.FileDialogPermissionAccess.Open" />.</span></span></permission>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.CheckFileExists" />
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnlyChecked">
      <MemberSignature Language="C#" Value="public bool ReadOnlyChecked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnlyChecked" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnlyChecked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnlyChecked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnlyChecked : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9249-135">Obtiene o establece un valor que indica si la casilla de solo lectura está activada.</span><span class="sxs-lookup"><span data-stu-id="f9249-135">Gets or sets a value indicating whether the read-only check box is selected.</span></span></summary>
        <value><span data-ttu-id="f9249-136">Es <see langword="true" /> si la casilla de solo lectura está activada; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-136"><see langword="true" /> if the read-only check box is selected; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f9249-137">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-137">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9249-138">El <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> estado no afecta al modo de lectura/escritura que <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> se utiliza para abrir un archivo seleccionado en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="f9249-138">The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=nameWithType> uses to open a file selected in the dialog box.</span></span> <span data-ttu-id="f9249-139"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> siempre abrirá el archivo en modo de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f9249-139"><xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.</span></span>  
  
 <span data-ttu-id="f9249-140">El <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propiedad debe establecerse antes en orden para la casilla de solo lectura que aparezcan en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="f9249-140">The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f9249-141">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f9249-141">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property.</span></span> <span data-ttu-id="f9249-142">Este ejemplo se muestra el <xref:System.Windows.Forms.OpenFileDialog> cuadro con el <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propiedad establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="f9249-142">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="f9249-143">Si el usuario hace clic en la opción para abrir el archivo en modo de solo lectura, el <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> propiedad se evalúa en `true`y el <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> método se utiliza para abrir el archivo.</span><span class="sxs-lookup"><span data-stu-id="f9249-143">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="f9249-144">En caso contrario, el <xref:System.IO.FileStream> clase se utiliza para abrir el archivo en modo de lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="f9249-144">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.OpenFileDialog.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="openFileDialog.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f9249-145">Restablece los valores predeterminados de todas las propiedades.</span><span class="sxs-lookup"><span data-stu-id="f9249-145">Resets all properties to their default values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileName">
      <MemberSignature Language="C#" Value="public string SafeFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SafeFileName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SafeFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileName : string" Usage="System.Windows.Forms.OpenFileDialog.SafeFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9249-146">Obtiene el nombre y la extensión de archivo del archivo seleccionado en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="f9249-146">Gets the file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="f9249-147">El nombre de archivo no incluye la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="f9249-147">The file name does not include the path.</span></span></summary>
        <value><span data-ttu-id="f9249-148">Nombre y extensión del archivo seleccionado en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="f9249-148">The file name and extension for the file selected in the dialog box.</span></span> <span data-ttu-id="f9249-149">El nombre de archivo no incluye la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="f9249-149">The file name does not include the path.</span></span> <span data-ttu-id="f9249-150">El valor predeterminado es una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="f9249-150">The default value is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9249-151">Un nombre de archivo seguro (solo el nombre de archivo y la extensión sin una ruta de acceso) se puede usar para mejorar la seguridad para las aplicaciones porque no expone información de ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="f9249-151">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="f9249-152">Esta propiedad debe estar accesible para el código que se ejecuta con confianza limitada.</span><span class="sxs-lookup"><span data-stu-id="f9249-152">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SafeFileNames">
      <MemberSignature Language="C#" Value="public string[] SafeFileNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] SafeFileNames" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SafeFileNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ SafeFileNames { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SafeFileNames : string[]" Usage="System.Windows.Forms.OpenFileDialog.SafeFileNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9249-153">Obtiene una matriz de nombres y extensiones de archivo para todos los archivos seleccionados en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="f9249-153">Gets an array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="f9249-154">Los nombres de archivo no incluyen la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="f9249-154">The file names do not include the path.</span></span></summary>
        <value><span data-ttu-id="f9249-155">Matriz de nombres y extensiones de archivo para todos los archivos seleccionados en el cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="f9249-155">An array of file names and extensions for all the selected files in the dialog box.</span></span> <span data-ttu-id="f9249-156">Los nombres de archivo no incluyen la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="f9249-156">The file names do not include the path.</span></span> <span data-ttu-id="f9249-157">Si no se seleccionan archivos, se devuelve una interfaz vacía.</span><span class="sxs-lookup"><span data-stu-id="f9249-157">If no files are selected, an empty array is returned.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f9249-158">Un nombre de archivo seguro (solo el nombre de archivo y la extensión sin una ruta de acceso) se puede usar para mejorar la seguridad para las aplicaciones porque no expone información de ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="f9249-158">A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.</span></span> <span data-ttu-id="f9249-159">Esta propiedad debe estar accesible para el código que se ejecuta con confianza limitada.</span><span class="sxs-lookup"><span data-stu-id="f9249-159">This property should be accessible to code running with limited trust.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowReadOnly">
      <MemberSignature Language="C#" Value="public bool ShowReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowReadOnly : bool with get, set" Usage="System.Windows.Forms.OpenFileDialog.ShowReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f9249-160">Obtiene o establece un valor que indica si el cuadro de diálogo contiene una casilla de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="f9249-160">Gets or sets a value indicating whether the dialog box contains a read-only check box.</span></span></summary>
        <value><span data-ttu-id="f9249-161">Es <see langword="true" /> si el cuadro de diálogo contiene una casilla de solo lectura; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-161"><see langword="true" /> if the dialog box contains a read-only check box; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="f9249-162">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f9249-162">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f9249-163">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f9249-163">The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property.</span></span> <span data-ttu-id="f9249-164">Este ejemplo se muestra el <xref:System.Windows.Forms.OpenFileDialog> cuadro con el <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> propiedad establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="f9249-164">This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`.</span></span> <span data-ttu-id="f9249-165">Si el usuario hace clic en la opción para abrir el archivo en modo de solo lectura, el <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> método se utiliza para abrir el archivo.</span><span class="sxs-lookup"><span data-stu-id="f9249-165">If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file.</span></span> <span data-ttu-id="f9249-166">En caso contrario, el <xref:System.IO.FileStream> clase se utiliza para abrir el archivo en modo de lectura/escritura.</span><span class="sxs-lookup"><span data-stu-id="f9249-166">Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.</span></span>  
  
 [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]
 [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]
 [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked" />
      </Docs>
    </Member>
  </Members>
</Type>
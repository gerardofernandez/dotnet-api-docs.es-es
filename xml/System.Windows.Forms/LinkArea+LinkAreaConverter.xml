<Type Name="LinkArea+LinkAreaConverter" FullName="System.Windows.Forms.LinkArea+LinkAreaConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="831ce5d3965d5f8097d5342abf4c1358d01dbf44" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53457477" /></Metadata><TypeSignature Language="C#" Value="public class LinkArea.LinkAreaConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit LinkArea/LinkAreaConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkArea.LinkAreaConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkArea.LinkAreaConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public: ref class LinkArea::LinkAreaConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type LinkArea.LinkAreaConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e643a-101">Proporciona un convertidor de tipos para convertir objetos <see cref="T:System.Windows.Forms.LinkArea.LinkAreaConverter" /> a otras representaciones y desde otras representaciones.</span><span class="sxs-lookup"><span data-stu-id="e643a-101">Provides a type converter to convert <see cref="T:System.Windows.Forms.LinkArea.LinkAreaConverter" /> objects to and from various other representations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e643a-102">Para obtener más información sobre los convertidores de tipos, vea la <xref:System.ComponentModel.TypeConverter> clase base y [Cómo: Implementar un convertidor de tipos](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span><span class="sxs-lookup"><span data-stu-id="e643a-102">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e643a-103">Nunca se debe crear una instancia de un <xref:System.Windows.Forms.LinkArea.LinkAreaConverter>.</span><span class="sxs-lookup"><span data-stu-id="e643a-103">You should never create an instance of a <xref:System.Windows.Forms.LinkArea.LinkAreaConverter>.</span></span> <span data-ttu-id="e643a-104">En su lugar, llame a la <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> método <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="e643a-104">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="e643a-105">Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.</span><span class="sxs-lookup"><span data-stu-id="e643a-105">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.LinkArea" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkAreaConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkAreaConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e643a-106">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.LinkArea.LinkAreaConverter" />.</span><span class="sxs-lookup"><span data-stu-id="e643a-106">Initializes a new instance of the <see cref="T:System.Windows.Forms.LinkArea.LinkAreaConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="linkAreaConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e643a-107">Un contexto de formateador.</span><span class="sxs-lookup"><span data-stu-id="e643a-107">A formatter context.</span></span> <span data-ttu-id="e643a-108">Este objeto se puede usar para extraer información adicional sobre el entorno desde el que se está invocando este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e643a-108">This object can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="e643a-109">Su valor puede ser null; por tanto, se debe comprobar siempre.</span><span class="sxs-lookup"><span data-stu-id="e643a-109">This may be null, so you should always check.</span></span> <span data-ttu-id="e643a-110">Asimismo, las propiedades del objeto de contexto también pueden devolver un valor nulo.</span><span class="sxs-lookup"><span data-stu-id="e643a-110">Also, properties on the context object may also return null.</span></span></param>
        <param name="sourceType"><span data-ttu-id="e643a-111">Tipo desde el que se desea convertir.</span><span class="sxs-lookup"><span data-stu-id="e643a-111">The type you wish to convert from.</span></span></param>
        <summary><span data-ttu-id="e643a-112">Determina si este convertidor puede convertir un objeto del tipo de origen indicado al tipo nativo del convertidor.</span><span class="sxs-lookup"><span data-stu-id="e643a-112">Determines if this converter can convert an object in the given source type to the native type of the converter.</span></span></summary>
        <returns><span data-ttu-id="e643a-113">Es true si este objeto puede realizar la conversión.</span><span class="sxs-lookup"><span data-stu-id="e643a-113">True if this object can perform the conversion.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="linkAreaConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e643a-114"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="e643a-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="e643a-115">Clase <see cref="T:System.Type" /> que representa el tipo al que se desea convertir.</span><span class="sxs-lookup"><span data-stu-id="e643a-115">A <see cref="T:System.Type" /> that represents the type you wish to convert to.</span></span></param>
        <summary><span data-ttu-id="e643a-116">Obtiene un valor que indica si este convertidor puede convertir un objeto al tipo de destino especificado usando el contexto.</span><span class="sxs-lookup"><span data-stu-id="e643a-116">Gets a value indicating whether this converter can convert an object to the given destination type using the context.</span></span></summary>
        <returns><span data-ttu-id="e643a-117"><see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e643a-117"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e643a-118">El parámetro `context` puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e643a-118">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="e643a-119">Puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="e643a-119">This can be `null`, so always check.</span></span> <span data-ttu-id="e643a-120">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e643a-120">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e643a-121">Invalide este método para proporcionar sus propios requisitos de conversión.</span><span class="sxs-lookup"><span data-stu-id="e643a-121">Override this method to provide your own conversion requirements.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="linkAreaConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e643a-122">Un contexto de formateador.</span><span class="sxs-lookup"><span data-stu-id="e643a-122">A formatter context.</span></span> <span data-ttu-id="e643a-123">Este objeto se puede usar para extraer información adicional sobre el entorno desde el que se está invocando este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e643a-123">This object can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="e643a-124">Su valor puede ser null; por tanto, se debe comprobar siempre.</span><span class="sxs-lookup"><span data-stu-id="e643a-124">This may be null, so you should always check.</span></span> <span data-ttu-id="e643a-125">Asimismo, las propiedades del objeto de contexto también pueden devolver un valor nulo.</span><span class="sxs-lookup"><span data-stu-id="e643a-125">Also, properties on the context object may also return null.</span></span></param>
        <param name="culture"><span data-ttu-id="e643a-126">Información de referencia cultural opcional.</span><span class="sxs-lookup"><span data-stu-id="e643a-126">An optional culture info.</span></span> <span data-ttu-id="e643a-127">Si no se proporciona una referencia cultural, se usa la actual de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="e643a-127">If not supplied, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="e643a-128">Objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="e643a-128">The object to convert.</span></span></param>
        <summary><span data-ttu-id="e643a-129">Convierte el objeto especificado en el tipo nativo del convertidor.</span><span class="sxs-lookup"><span data-stu-id="e643a-129">Converts the given object to the converter's native type.</span></span></summary>
        <returns><span data-ttu-id="e643a-130">El objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="e643a-130">The converted object.</span></span> <span data-ttu-id="e643a-131">Producirá una excepción si no se pudo realizar la conversión.</span><span class="sxs-lookup"><span data-stu-id="e643a-131">This will throw an exception if the conversion could not be performed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="linkAreaConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e643a-132">Un contexto de formateador.</span><span class="sxs-lookup"><span data-stu-id="e643a-132">A formatter context.</span></span> <span data-ttu-id="e643a-133">Este objeto se puede usar para extraer información adicional sobre el entorno desde el que se está invocando este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e643a-133">This object can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="e643a-134">Su valor puede ser null; por tanto, se debe comprobar siempre.</span><span class="sxs-lookup"><span data-stu-id="e643a-134">This may be null, so you should always check.</span></span> <span data-ttu-id="e643a-135">Asimismo, las propiedades del objeto de contexto también pueden devolver un valor nulo.</span><span class="sxs-lookup"><span data-stu-id="e643a-135">Also, properties on the context object may also return null.</span></span></param>
        <param name="culture"><span data-ttu-id="e643a-136">Información de referencia cultural opcional.</span><span class="sxs-lookup"><span data-stu-id="e643a-136">An optional culture info.</span></span> <span data-ttu-id="e643a-137">Si no se proporciona ninguna referencia cultural, se utiliza la actual de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="e643a-137">If not supplied the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="e643a-138">Objeto que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="e643a-138">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="e643a-139">Tipo en el que se va a convertir el objeto.</span><span class="sxs-lookup"><span data-stu-id="e643a-139">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="e643a-140">Convierte el objeto especificado en otro tipo.</span><span class="sxs-lookup"><span data-stu-id="e643a-140">Converts the given object to another type.</span></span> <span data-ttu-id="e643a-141">Las conversiones de tipos más frecuentes son las conversiones a objetos de cadena y desde objetos de cadena.</span><span class="sxs-lookup"><span data-stu-id="e643a-141">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="e643a-142">La implementación predeterminada llamará al método <see cref="M:System.Windows.Forms.LinkArea.ToString" /> en el objeto si dicho objeto es válido y si el tipo de destino es una cadena.</span><span class="sxs-lookup"><span data-stu-id="e643a-142">The default implementation will make a call to <see cref="M:System.Windows.Forms.LinkArea.ToString" /> on the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="e643a-143">Si este método no puede efectuar la conversión al tipo de destino, producirá una excepción <see cref="T:System.NotSupportedException" />.</span><span class="sxs-lookup"><span data-stu-id="e643a-143">If this cannot convert to the destination type, this will throw a <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="e643a-144">El objeto convertido.</span><span class="sxs-lookup"><span data-stu-id="e643a-144">The converted object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="linkAreaConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e643a-145">Descriptor de tipos mediante el que se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="e643a-145">A type descriptor through which additional context may be provided.</span></span></param>
        <param name="propertyValues"><span data-ttu-id="e643a-146">Diccionario de nuevos valores de propiedad.</span><span class="sxs-lookup"><span data-stu-id="e643a-146">A dictionary of new property values.</span></span> <span data-ttu-id="e643a-147">El diccionario tiene una serie de pares de nombre-valor, uno para cada propiedad devuelta desde <see cref="M:System.Windows.Forms.LinkArea.LinkAreaConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />.</span><span class="sxs-lookup"><span data-stu-id="e643a-147">The dictionary contains a series of name-value pairs, one for each property returned from <see cref="M:System.Windows.Forms.LinkArea.LinkAreaConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />.</span></span></param>
        <summary><span data-ttu-id="e643a-148">Crea una instancia de este tipo, dado un conjunto de valores de propiedad para el objeto.</span><span class="sxs-lookup"><span data-stu-id="e643a-148">Creates an instance of this type, given a set of property values for the object.</span></span> <span data-ttu-id="e643a-149">Es útil para objetos que son inmutables, pero a los que se desea proporcionar propiedades modificables.</span><span class="sxs-lookup"><span data-stu-id="e643a-149">This is useful for objects that are immutable, but still want to provide changeable properties.</span></span></summary>
        <returns><span data-ttu-id="e643a-150">Objeto recién creado o un valor nulo si no se pudo crear el objeto.</span><span class="sxs-lookup"><span data-stu-id="e643a-150">The newly created object, or null if the object could not be created.</span></span> <span data-ttu-id="e643a-151">La implementación predeterminada devuelve un valor nulo.</span><span class="sxs-lookup"><span data-stu-id="e643a-151">The default implementation returns null.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="linkAreaConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e643a-152">Descriptor de tipos mediante el que se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="e643a-152">A type descriptor through which additional context may be provided.</span></span></param>
        <summary><span data-ttu-id="e643a-153">Determina si, al cambiar un valor en este objeto, es necesario llamar a <see cref="M:System.Windows.Forms.LinkArea.LinkAreaConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> para crear un nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="e643a-153">Determines if changing a value on this object should require a call to <see cref="M:System.Windows.Forms.LinkArea.LinkAreaConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> to create a new value.</span></span></summary>
        <returns><span data-ttu-id="e643a-154">Devuelve <see langword="true" /> si se debe llamar al objeto <see cref="M:System.Windows.Forms.LinkArea.LinkAreaConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> cuando se realiza un cambio en una o más propiedades de este objeto.</span><span class="sxs-lookup"><span data-stu-id="e643a-154">Returns <see langword="true" /> if <see cref="M:System.Windows.Forms.LinkArea.LinkAreaConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" /> should be called when a change is made to one or more properties of this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="linkAreaConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e643a-155">Descriptor de tipos mediante el que se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="e643a-155">A type descriptor through which additional context may be provided.</span></span></param>
        <param name="value"><span data-ttu-id="e643a-156">Valor del objeto del que se van a obtener las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e643a-156">The value of the object to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="e643a-157">Atributos del objeto para el que se obtienen las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e643a-157">The attributes of the object to get the properties for.</span></span></param>
        <summary><span data-ttu-id="e643a-158">Recupera el conjunto de propiedades de este tipo.</span><span class="sxs-lookup"><span data-stu-id="e643a-158">Retrieves the set of properties for this type.</span></span></summary>
        <returns><span data-ttu-id="e643a-159">Conjunto de propiedades que se deben exponer para este tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="e643a-159">The set of properties that should be exposed for this data type.</span></span> <span data-ttu-id="e643a-160">Si se deben exponer las propiedades, puede que devuelva <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e643a-160">If no properties should be exposed, this might return <see langword="null" />.</span></span> <span data-ttu-id="e643a-161">La implementación predeterminada siempre devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e643a-161">The default implementation always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e643a-162">De forma predeterminada, un tipo no devuelve ninguna propiedad.</span><span class="sxs-lookup"><span data-stu-id="e643a-162">By default, a type does not return any properties.</span></span> <span data-ttu-id="e643a-163">Simplemente puede llamar una implementación sencilla de este método <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para el tipo de datos correcto.</span><span class="sxs-lookup"><span data-stu-id="e643a-163">An easy implementation of this method can just call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.LinkAreaConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="linkAreaConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e643a-164">Descriptor de tipos mediante el que se puede proporcionar contexto adicional.</span><span class="sxs-lookup"><span data-stu-id="e643a-164">A type descriptor through which additional context may be provided.</span></span></param>
        <summary><span data-ttu-id="e643a-165">Determina si este objeto admite propiedades.</span><span class="sxs-lookup"><span data-stu-id="e643a-165">Determines if this object supports properties.</span></span> <span data-ttu-id="e643a-166">De forma predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e643a-166">By default, this is <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="e643a-167">Devuelve <see langword="true" /> si se debe llamar al método <see cref="M:System.Windows.Forms.LinkArea.LinkAreaConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> para buscar las propiedades de este objeto.</span><span class="sxs-lookup"><span data-stu-id="e643a-167">Returns <see langword="true" /> if <see cref="M:System.Windows.Forms.LinkArea.LinkAreaConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" /> should be called to find the properties of this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="IDataObject" FullName="System.Windows.Forms.IDataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd78769c002ec6164dd33b8ddba8cc01deb5a7b9" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48704566" /></Metadata><TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <TypeSignature Language="F#" Value="type IDataObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dc039-101">Proporciona un mecanismo para transferir datos que es independiente del formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-101">Provides a format-independent mechanism for transferring data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-102">El `IDataObject` interfaz la utiliza el <xref:System.Windows.Forms.Clipboard> clase y en las operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dc039-102">The `IDataObject` interface is used by the <xref:System.Windows.Forms.Clipboard> class and in drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="dc039-103">Cuando se implementa en una clase, el <xref:System.Windows.Forms.IDataObject> métodos permiten al usuario almacenar datos en varios formatos en una instancia de la clase.</span><span class="sxs-lookup"><span data-stu-id="dc039-103">When implemented in a class, the <xref:System.Windows.Forms.IDataObject> methods allow the user to store data in multiple formats in an instance of the class.</span></span> <span data-ttu-id="dc039-104">Almacenar datos en más de un formato aumenta la posibilidad de que una aplicación de destino, cuyos requisitos de formato no es posible que sabe, puede recuperar los datos almacenados.</span><span class="sxs-lookup"><span data-stu-id="dc039-104">Storing data in more than one format increases the chance that a target application, whose format requirements you might not know, can retrieve the stored data.</span></span> <span data-ttu-id="dc039-105">Para almacenar datos en una instancia de <xref:System.Windows.Forms.IDataObject>, llame a la <xref:System.Windows.Forms.IDataObject.SetData%2A> método y especificar el formato de datos en el `format` parámetro.</span><span class="sxs-lookup"><span data-stu-id="dc039-105">To store data in an instance of <xref:System.Windows.Forms.IDataObject>, call the <xref:System.Windows.Forms.IDataObject.SetData%2A> method and specify the data format in the `format` parameter.</span></span> <span data-ttu-id="dc039-106">Establecer el `autoConvert` parámetro `false` si no desea convertir a otro formato cuando se recuperan los datos almacenados.</span><span class="sxs-lookup"><span data-stu-id="dc039-106">Set the `autoConvert` parameter to `false` if you do not want stored data to be converted to another format when it is retrieved.</span></span> <span data-ttu-id="dc039-107">Invocar <xref:System.Windows.Forms.IDataObject.SetData%2A> varias veces en una instancia de <xref:System.Windows.Forms.IDataObject> para almacenar datos en más de un formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-107">Invoke <xref:System.Windows.Forms.IDataObject.SetData%2A> multiple times on one instance of <xref:System.Windows.Forms.IDataObject> to store data in more than one format.</span></span>  
  
 <span data-ttu-id="dc039-108">Recuperar los datos almacenados en un <xref:System.Windows.Forms.IDataObject> mediante una llamada a la <xref:System.Windows.Forms.IDataObject.GetData%2A> con formato de método y especificar los datos en el `format` parámetro.</span><span class="sxs-lookup"><span data-stu-id="dc039-108">You retrieve stored data from an <xref:System.Windows.Forms.IDataObject> by calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method and specifying the data format in the `format` parameter.</span></span> <span data-ttu-id="dc039-109">Establecer el `autoConvert` parámetro `false` para recuperar solo los datos que se almacenaron en el formato especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-109">Set the `autoConvert` parameter to `false` to retrieve only data that was stored in the specified format.</span></span> <span data-ttu-id="dc039-110">Para convertir los datos almacenados en el formato especificado, establezca `autoConvert` a `true`, o no use `autoConvert`.</span><span class="sxs-lookup"><span data-stu-id="dc039-110">To convert the stored data to the specified format, set `autoConvert` to `true`, or do not use `autoConvert`.</span></span>  
  
 <span data-ttu-id="dc039-111">Para determinar los formatos de los datos almacenados en un <xref:System.Windows.Forms.IDataObject>, use el siguiente <xref:System.Windows.Forms.IDataObject> métodos.</span><span class="sxs-lookup"><span data-stu-id="dc039-111">To determine the formats of the data stored in an <xref:System.Windows.Forms.IDataObject>, use the following <xref:System.Windows.Forms.IDataObject> methods.</span></span>  
  
-   <span data-ttu-id="dc039-112">Llame a la <xref:System.Windows.Forms.IDataObject.GetFormats%2A> método para recuperar una matriz de todos los formatos en los que los datos están disponibles.</span><span class="sxs-lookup"><span data-stu-id="dc039-112">Call the <xref:System.Windows.Forms.IDataObject.GetFormats%2A> method to retrieve an array of all the formats in which the data is available.</span></span> <span data-ttu-id="dc039-113">Establecer el `autoConvert` parámetro `false` para obtener solo los formatos en el que se almacenan los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-113">Set the `autoConvert` parameter to `false` to get only the formats in which the data is stored.</span></span> <span data-ttu-id="dc039-114">Para obtener todos los formatos en los que los datos están disponibles, establezca `autoConvert` a `true`, o no use este parámetro.</span><span class="sxs-lookup"><span data-stu-id="dc039-114">To get all the formats in which the data is available, set `autoConvert` to `true`, or do not use this parameter.</span></span>  
  
-   <span data-ttu-id="dc039-115">Llame a la <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> método para determinar si los datos almacenados están disponibles en un formato determinado.</span><span class="sxs-lookup"><span data-stu-id="dc039-115">Call the <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> method to determine whether stored data is available in a certain format.</span></span> <span data-ttu-id="dc039-116">Si no desea que los datos almacenados se conviertan al formato especificado, establezca el `autoConvert` parámetro `false`.</span><span class="sxs-lookup"><span data-stu-id="dc039-116">If you do not want stored data to be converted to the specified format, set the `autoConvert` parameter to `false`.</span></span>  
  
 <span data-ttu-id="dc039-117">Consulte la <xref:System.Windows.Forms.DataObject> clase para una implementación de esta interfaz.</span><span class="sxs-lookup"><span data-stu-id="dc039-117">See the <xref:System.Windows.Forms.DataObject> class for an implementation of this interface.</span></span> <span data-ttu-id="dc039-118">Consulte la <xref:System.Windows.Forms.DataFormats> clase para predefinido <xref:System.Windows.Forms.Clipboard> formatos de datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-118">See the <xref:System.Windows.Forms.DataFormats> class for the predefined <xref:System.Windows.Forms.Clipboard> data formats.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.DataObject" />
    <altmember cref="T:System.Windows.Forms.DataFormats" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc039-119">Recupera los datos asociados al formato de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-119">Retrieves the data associated with the specified data format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-120">Formato de los datos que se van a recuperar.</span><span class="sxs-lookup"><span data-stu-id="dc039-120">The format of the data to retrieve.</span></span> <span data-ttu-id="dc039-121">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-121">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="dc039-122">Recupera los datos asociados al formato de datos especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-122">Retrieves the data associated with the specified data format.</span></span></summary>
        <returns><span data-ttu-id="dc039-123">Datos asociados al formato especificado o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc039-123">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-124">Si este método no encuentra los datos en el formato especificado, intenta convertir los datos en el formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-124">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="dc039-125">Si los datos no se puede convertir al formato especificado, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="dc039-125">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="dc039-126">Para determinar si está asociadas con datos, o pueden convertirse en un formato, llame a <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> antes de llamar a <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc039-126">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="dc039-127">Llame a <xref:System.Windows.Forms.IDataObject.GetFormats%2A> para obtener una lista de formatos válidos para los datos almacenados en esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dc039-127">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc039-128">Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión, y si el formato solicitado es compatible con el formato almacenado.</span><span class="sxs-lookup"><span data-stu-id="dc039-128">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="dc039-129">Por ejemplo, los datos almacenados como Unicode se puede convertir en texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-129">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="dc039-130">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-130">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-131">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject,` para demostrar el uso de la `GetData` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-131">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="dc039-132">El método se usa para recuperar los datos almacenados en `myDataObject`, que está asociado el `Text` formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-132">The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format.</span></span> <span data-ttu-id="dc039-133">El ejemplo se supone que ya ha creado un <xref:System.Windows.Forms.Form> denominado `Form1` y un <xref:System.Windows.Forms.TextBox> denominado `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-133">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData1/CPP/getdata1.cpp#1)]
 [!code-csharp[GetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData1/CS/getdata1.cs#1)]
 [!code-vb[GetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData1/VB/getdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-134"><see cref="T:System.Type" /> que representa el formato de los datos que se van a recuperar.</span><span class="sxs-lookup"><span data-stu-id="dc039-134">A <see cref="T:System.Type" /> representing the format of the data to retrieve.</span></span> <span data-ttu-id="dc039-135">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-135">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="dc039-136">Recupera los datos asociados al formato de tipo de clase especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-136">Retrieves the data associated with the specified class type format.</span></span></summary>
        <returns><span data-ttu-id="dc039-137">Datos asociados al formato especificado o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc039-137">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-138">Si este método no encuentra los datos en el formato especificado, intenta convertir los datos en el formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-138">If this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="dc039-139">Si los datos no se puede convertir al formato especificado, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="dc039-139">If the data cannot be converted to the specified format, this method returns `null`.</span></span>  
  
 <span data-ttu-id="dc039-140">Para determinar si está asociadas con datos, o pueden convertirse en un formato, llame a <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> antes de llamar a <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc039-140">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="dc039-141">Llame a <xref:System.Windows.Forms.IDataObject.GetFormats%2A> para obtener una lista de formatos válidos para los datos almacenados en esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dc039-141">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc039-142">Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión, y si el formato solicitado es compatible con el formato almacenado.</span><span class="sxs-lookup"><span data-stu-id="dc039-142">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="dc039-143">Por ejemplo, los datos almacenados como Unicode se puede convertir en texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-143">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="dc039-144">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-144">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-145">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `GetData` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-145">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="dc039-146">El método se usa para recuperar los datos almacenados en `myObject`, que está asociado a un tipo específico, `myType`.</span><span class="sxs-lookup"><span data-stu-id="dc039-146">The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`.</span></span> <span data-ttu-id="dc039-147">El tipo de los datos recuperados se muestra en un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="dc039-147">The type of the retrieved data is displayed in a message box.</span></span> <span data-ttu-id="dc039-148">El ejemplo se supone que ya ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-148">The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData2/CPP/getdata2.cpp#1)]
 [!code-csharp[GetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData2/CS/getdata2.cs#1)]
 [!code-vb[GetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData2/VB/getdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj" Usage="iDataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-149">Formato de los datos que se van a recuperar.</span><span class="sxs-lookup"><span data-stu-id="dc039-149">The format of the data to retrieve.</span></span> <span data-ttu-id="dc039-150">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-150">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="dc039-151">Es <see langword="true" /> para convertir los datos al formato especificado; en cualquier otro caso, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc039-151"><see langword="true" /> to convert the data to the specified format; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dc039-152">Recupera los datos asociados al formato de datos especificado, usando un tipo booleano para determinar si se deben convertir a dicho formato los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-152">Retrieves the data associated with the specified data format, using a Boolean to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="dc039-153">Datos asociados al formato especificado o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc039-153">The data associated with the specified format, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-154">Si el `autoConvert` parámetro es `true` y este método no encuentra los datos en el formato especificado, intenta convertir los datos en el formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-154">If the `autoConvert` parameter is `true` and this method cannot find data in the specified format, it attempts to convert the data to the format.</span></span> <span data-ttu-id="dc039-155">Si los datos no se puede convertir al formato especificado, o si los datos se almacenaron con el `autoConvert` parámetro establecido en `false`, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="dc039-155">If the data cannot be converted to the specified format, or if the data was stored with the `autoConvert` parameter set to `false`, this method returns `null`.</span></span>  
  
 <span data-ttu-id="dc039-156">Si el `autoConvert` parámetro es `false`, este método devuelve datos en el formato especificado, o `null` si no se encuentra ningún dato en este formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-156">If the `autoConvert` parameter is `false`, this method returns data in the specified format, or `null` if no data in this format can be found.</span></span>  
  
 <span data-ttu-id="dc039-157">Para determinar si está asociadas con datos, o pueden convertirse en un formato, llame a <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> antes de llamar a <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc039-157">To determine whether data is associated with, or can be converted to, a format, call <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="dc039-158">Llame a <xref:System.Windows.Forms.IDataObject.GetFormats%2A> para obtener una lista de formatos válidos para los datos almacenados en esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dc039-158">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for a list of valid formats for the data stored in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc039-159">Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión, y si el formato solicitado es compatible con el formato almacenado.</span><span class="sxs-lookup"><span data-stu-id="dc039-159">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="dc039-160">Por ejemplo, los datos almacenados como Unicode se puede convertir en texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-160">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="dc039-161">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-161">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-162">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `GetData` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-162">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method.</span></span> <span data-ttu-id="dc039-163">El ejemplo recupera los datos almacenados en un `DataObject`, usando la `autoConvert` parámetro para especificar si desea convertir el formato de datos o no.</span><span class="sxs-lookup"><span data-stu-id="dc039-163">The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format.</span></span> <span data-ttu-id="dc039-164">Primero, `myDataObject` se crea con los datos de texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-164">First, `myDataObject` is created with text data.</span></span> <span data-ttu-id="dc039-165">A continuación, el ejemplo se trata de dos veces recuperar los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-165">Then the example tries twice to retrieve the data.</span></span> <span data-ttu-id="dc039-166">En la primera prueba, especifica su formato como una cadena y establece el `autoConvert` parámetro `false`.</span><span class="sxs-lookup"><span data-stu-id="dc039-166">In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`.</span></span> <span data-ttu-id="dc039-167">Se produce un error en esta versión de prueba y el resultado se muestra en un cuadro de mensaje con la etiqueta "Mensaje #1".</span><span class="sxs-lookup"><span data-stu-id="dc039-167">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="dc039-168">En la segunda prueba, el ejemplo recupera los mismos datos con el `autoConvert` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="dc039-168">In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`.</span></span> <span data-ttu-id="dc039-169">Esta versión de prueba se realiza correctamente y se muestra el resultado en un cuadro de mensaje con la etiqueta "Mensaje #2".</span><span class="sxs-lookup"><span data-stu-id="dc039-169">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="dc039-170">En el ejemplo se supone que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-170">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetData3/CPP/getdata3.cpp#1)]
 [!code-csharp[GetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetData3/CS/getdata3.cs#1)]
 [!code-vb[GetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetData3/VB/getdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc039-171">Determina si los datos almacenados en esta instancia están asociados con el formato especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-171">Determines whether data stored in this instance is associated with the specified format.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-172">Formato que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="dc039-172">The format for which to check.</span></span> <span data-ttu-id="dc039-173">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-173">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="dc039-174">Determina si los datos almacenados en esta instancia están asociados al formato especificado o pueden convertirse al formato especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-174">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="dc039-175">Es <see langword="true" /> si los datos almacenados en esta instancia están asociados o se pueden convertir al formato especificado; es <see langword="false" /> en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="dc039-175"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-176">Llame a este método para determinar si existe un formato en este <xref:System.Windows.Forms.DataObject> antes de llamar a <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc039-176">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="dc039-177">Llame a <xref:System.Windows.Forms.IDataObject.GetFormats%2A> para los formatos que están disponibles en esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dc039-177">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc039-178">Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión, y si el formato solicitado es compatible con el formato almacenado.</span><span class="sxs-lookup"><span data-stu-id="dc039-178">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="dc039-179">Por ejemplo, los datos almacenados como Unicode se puede convertir en texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-179">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="dc039-180">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-180">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-181">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `GetDataPresent` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-181">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="dc039-182">En primer lugar, crea un objeto de datos mediante una cadena y el `Text` formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-182">First, it creates a data object using a string and the `Text` format.</span></span> <span data-ttu-id="dc039-183">A continuación, comprueba que los datos están presentes en el `Text` dar formato y muestra los resultados en un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="dc039-183">Then it verifies that the data is present in the `Text` format and displays the results in a message box.</span></span> <span data-ttu-id="dc039-184">En el ejemplo se supone que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-184">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent1/CPP/getdatapresent1.cpp#1)]
 [!code-csharp[GetDataPresent1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent1/CS/getdatapresent1.cs#1)]
 [!code-vb[GetDataPresent1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent1/VB/getdatapresent1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-185"><see cref="T:System.Type" /> que representa el formato que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="dc039-185">A <see cref="T:System.Type" /> representing the format for which to check.</span></span> <span data-ttu-id="dc039-186">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-186">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <summary><span data-ttu-id="dc039-187">Determina si los datos almacenados en esta instancia están asociados al formato especificado o pueden convertirse al formato especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-187">Determines whether data stored in this instance is associated with, or can be converted to, the specified format.</span></span></summary>
        <returns><span data-ttu-id="dc039-188"><see langword="true" /> si los datos almacenados en esta instancia están asociados o se pueden convertir al formato especificado; <see langword="false" /> en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="dc039-188"><see langword="true" /> if data stored in this instance is associated with, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-189">Llame a este método para determinar si existe un formato en este <xref:System.Windows.Forms.DataObject> antes de llamar a <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc039-189">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="dc039-190">Llame a <xref:System.Windows.Forms.IDataObject.GetFormats%2A> para los formatos que están disponibles en esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dc039-190">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc039-191">Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión, y si el formato solicitado es compatible con el formato almacenado.</span><span class="sxs-lookup"><span data-stu-id="dc039-191">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="dc039-192">Por ejemplo, los datos almacenados como Unicode se puede convertir en texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-192">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="dc039-193">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-193">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-194">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `GetDataPresent` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-194">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="dc039-195">En primer lugar, crea un componente (`myComponent`) y lo almacena en un objeto de datos (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="dc039-195">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="dc039-196">A continuación, se comprueba si los datos especificados se almacenan en `myDataObject`.</span><span class="sxs-lookup"><span data-stu-id="dc039-196">Then it checks whether the specified data is stored in `myDataObject`.</span></span> <span data-ttu-id="dc039-197">Si la prueba se evalúa como `true`, se muestra el resultado en un cuadro de mensaje y se muestra el tipo de datos en un cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-197">If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box.</span></span> <span data-ttu-id="dc039-198">En este ejemplo se da por supuesto que ya ha creado un <xref:System.Windows.Forms.Form> denominado `Form1` y un <xref:System.Windows.Forms.TextBox> denominado `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-198">This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.</span></span>  
  
 [!code-cpp[GetDataPresent2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent2/CPP/getdatapresent2.cpp#1)]
 [!code-csharp[GetDataPresent2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent2/CS/getdatapresent2.cs#1)]
 [!code-vb[GetDataPresent2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent2/VB/getdatapresent2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool" Usage="iDataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-199">Formato que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="dc039-199">The format for which to check.</span></span> <span data-ttu-id="dc039-200">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-200">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="dc039-201"><see langword="true" /> para determinar si los datos almacenados en esta instancia pueden convertirse al formato especificado; <see langword="false" /> para comprobar si los datos tienen el formato especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-201"><see langword="true" /> to determine whether data stored in this instance can be converted to the specified format; <see langword="false" /> to check whether the data is in the specified format.</span></span></param>
        <summary><span data-ttu-id="dc039-202">Determina si los datos almacenados en esta instancia están asociados al formato especificado, usando un valor de tipo booleano para establecer si se deben convertir a ese formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-202">Determines whether data stored in this instance is associated with the specified format, using a Boolean value to determine whether to convert the data to the format.</span></span></summary>
        <returns><span data-ttu-id="dc039-203">Es <see langword="true" /> si los datos tienen el formato especificado o se pueden convertir en él; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc039-203"><see langword="true" /> if the data is in, or can be converted to, the specified format; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-204">Llame a este método para determinar si existe un formato en este <xref:System.Windows.Forms.DataObject> antes de llamar a <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span><span class="sxs-lookup"><span data-stu-id="dc039-204">Call this method to determine whether a format exists in this <xref:System.Windows.Forms.DataObject> before calling <xref:System.Windows.Forms.IDataObject.GetData%2A>.</span></span> <span data-ttu-id="dc039-205">Llame a <xref:System.Windows.Forms.IDataObject.GetFormats%2A> para los formatos que están disponibles en esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dc039-205">Call <xref:System.Windows.Forms.IDataObject.GetFormats%2A> for the formats that are available in this instance.</span></span>  
  
 <span data-ttu-id="dc039-206">Este método devuelve `true` cuando:</span><span class="sxs-lookup"><span data-stu-id="dc039-206">This method returns `true` when:</span></span>  
  
-   <span data-ttu-id="dc039-207">El `autoConvert` parámetro es `true` y los datos están en un formato que se puede convertir al formato apropiado.</span><span class="sxs-lookup"><span data-stu-id="dc039-207">The `autoConvert` parameter is `true` and the data is in a format that can be converted to the appropriate format.</span></span>  
  
-   <span data-ttu-id="dc039-208">El `autoConvert` parámetro es `false` y los datos están en el formato adecuado.</span><span class="sxs-lookup"><span data-stu-id="dc039-208">The `autoConvert` parameter is `false` and the data is in the appropriate format.</span></span>  
  
 <span data-ttu-id="dc039-209">Este método devuelve `false` cuando:</span><span class="sxs-lookup"><span data-stu-id="dc039-209">This method returns `false` when:</span></span>  
  
-   <span data-ttu-id="dc039-210">El `autoConvert` parámetro es `true` y este método no encuentra los datos en el formato especificado y datos no puede convertir al formato especificado o los datos se almacenaron con `autoConvert` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="dc039-210">The `autoConvert` parameter is `true` and this method cannot find data in the specified format, and it cannot convert data to the specified format, or the data was stored with `autoConvert` set to `false`.</span></span>  
  
-   <span data-ttu-id="dc039-211">El `autoConvert` parámetro es `false`, y no existen datos en esta instancia con el formato especificado.</span><span class="sxs-lookup"><span data-stu-id="dc039-211">The `autoConvert` parameter is `false`, and data does not exist in this instance in the specified format.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc039-212">Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión, y si el formato solicitado es compatible con el formato almacenado.</span><span class="sxs-lookup"><span data-stu-id="dc039-212">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="dc039-213">Por ejemplo, los datos almacenados como Unicode se puede convertir en texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-213">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="dc039-214">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-214">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-215">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `GetDataPresent` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-215">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method.</span></span> <span data-ttu-id="dc039-216">En primer lugar, crea un objeto de datos (`myDataObject`) mediante una cadena y el `Text` formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-216">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="dc039-217">A continuación, consulta el objeto de datos asociados con el `Text` formato, con el `autoConvert` parámetro establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="dc039-217">Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="dc039-218">Se produce un error en esta versión de prueba y el resultado se muestra en un cuadro de mensaje con la etiqueta "Mensaje #1".</span><span class="sxs-lookup"><span data-stu-id="dc039-218">This trial fails, and the result is displayed in a message box labeled "Message #1."</span></span> <span data-ttu-id="dc039-219">En la segunda prueba, Establece la `autoConvert` parámetro `true`.</span><span class="sxs-lookup"><span data-stu-id="dc039-219">In the second trial, it sets the `autoConvert` parameter to `true`.</span></span> <span data-ttu-id="dc039-220">Esta versión de prueba se realiza correctamente y se muestra el resultado en un cuadro de mensaje con la etiqueta "Mensaje #2".</span><span class="sxs-lookup"><span data-stu-id="dc039-220">This trial succeeds, and the result is displayed in a message box labeled "Message #2."</span></span> <span data-ttu-id="dc039-221">En el ejemplo se supone que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-221">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetDataPresent3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetDataPresent3/CPP/getdatapresent3.cpp#1)]
 [!code-csharp[GetDataPresent3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetDataPresent3/CS/getdatapresent3.cs#1)]
 [!code-vb[GetDataPresent3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetDataPresent3/VB/getdatapresent3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetDataPresent(System.Type)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc039-222">Devuelve una lista de todos los formatos a los que se asocian o a los que pueden convertirse los datos almacenados en esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dc039-222">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]" Usage="iDataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc039-223">Devuelve una lista de todos los formatos a los que se asocian o a los que pueden convertirse los datos almacenados en esta instancia.</span><span class="sxs-lookup"><span data-stu-id="dc039-223">Returns a list of all formats that data stored in this instance is associated with or can be converted to.</span></span></summary>
        <returns><span data-ttu-id="dc039-224">Matriz de nombres que representa una lista de todos los formatos admitidos por los datos almacenados en este objeto.</span><span class="sxs-lookup"><span data-stu-id="dc039-224">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-225">Llame a este método para obtener los formatos de datos compatibles antes de llamar a la <xref:System.Windows.Forms.IDataObject.GetData%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dc039-225">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="dc039-226">Consulte la <xref:System.Windows.Forms.DataFormats> clase para los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-226">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc039-227">Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión, y si el formato solicitado es compatible con el formato almacenado.</span><span class="sxs-lookup"><span data-stu-id="dc039-227">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="dc039-228">Por ejemplo, los datos almacenados como Unicode se puede convertir en texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-228">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="dc039-229">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-229">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-230">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `GetFormats` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-230">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="dc039-231">En primer lugar, crea un objeto de datos (`myDataObject`) mediante una cadena y el `Text` formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-231">First, it creates a data object (`myDataObject`) using a string and the `Text` format.</span></span> <span data-ttu-id="dc039-232">A continuación, recupera todos los formatos de datos y formatos de conversión de datos en el objeto de datos y muestra la lista resultante en un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="dc039-232">Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box.</span></span> <span data-ttu-id="dc039-233">En este ejemplo se da por supuesto que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-233">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats1/CPP/getformats1.cpp#1)]
 [!code-csharp[GetFormats1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats1/CS/getformats1.cs#1)]
 [!code-vb[GetFormats1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats1/VB/getformats1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]" Usage="iDataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><span data-ttu-id="dc039-234"><see langword="true" /> para recuperar todos los formatos a los que están asociados o a los que pueden convertirse los datos almacenados en esta instancia; <see langword="false" /> para recuperar sólo los formatos de datos nativos.</span><span class="sxs-lookup"><span data-stu-id="dc039-234"><see langword="true" /> to retrieve all formats that data stored in this instance is associated with or can be converted to; <see langword="false" /> to retrieve only native data formats.</span></span></param>
        <summary><span data-ttu-id="dc039-235">Obtiene una lista con todos los formatos a los que están asociados o se pueden convertir los datos almacenados en esta instancia, usando un valor de tipo booleano para determinar si se recuperarán sólo los formatos de datos nativos o todos los formatos a los que pueden convertirse los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-235">Gets a list of all formats that data stored in this instance is associated with or can be converted to, using a Boolean value to determine whether to retrieve all formats that the data can be converted to or only native data formats.</span></span></summary>
        <returns><span data-ttu-id="dc039-236">Matriz de nombres que representa una lista de todos los formatos admitidos por los datos almacenados en este objeto.</span><span class="sxs-lookup"><span data-stu-id="dc039-236">An array of the names that represents a list of all formats that are supported by the data stored in this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-237">Llame a este método para obtener los formatos de datos compatibles antes de llamar a la <xref:System.Windows.Forms.IDataObject.GetData%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dc039-237">Call this method to get the supported data formats before calling the <xref:System.Windows.Forms.IDataObject.GetData%2A> method.</span></span> <span data-ttu-id="dc039-238">Consulte la <xref:System.Windows.Forms.DataFormats> clase para los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-238">See the <xref:System.Windows.Forms.DataFormats> class for the predefined formats.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc039-239">Pueden convertir los datos a otro formato si se han almacenado especificando que se permite la conversión, y si el formato solicitado es compatible con el formato almacenado.</span><span class="sxs-lookup"><span data-stu-id="dc039-239">Data can be converted to another format if it was stored specifying that conversion is allowed, and if the requested format is compatible with the stored format.</span></span> <span data-ttu-id="dc039-240">Por ejemplo, los datos almacenados como Unicode se puede convertir en texto.</span><span class="sxs-lookup"><span data-stu-id="dc039-240">For example, data stored as Unicode can be converted to text.</span></span>  
  
 <span data-ttu-id="dc039-241">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-241">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-242">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `GetFormats` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-242">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method.</span></span> <span data-ttu-id="dc039-243">En primer lugar, crea un objeto de datos (`myDataObject`) mediante una cadena y el `UnicodeText` formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-243">First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format.</span></span> <span data-ttu-id="dc039-244">A continuación, realiza dos consultas para obtener los formatos asociados a los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-244">Then it makes two queries to get the formats associated with the data.</span></span> <span data-ttu-id="dc039-245">En la primera consulta, Establece la `autoConvert` parámetro `false` : en este caso, se devuelve solo el formato nativo de los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-245">In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned.</span></span> <span data-ttu-id="dc039-246">En la segunda consulta, Establece la `autoConvert` parámetro `true`, de modo que obtiene la lista de formatos, incluidos los que se pueden convertir los datos en.</span><span class="sxs-lookup"><span data-stu-id="dc039-246">In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to.</span></span> <span data-ttu-id="dc039-247">En cada caso, la lista resultante se muestra en un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="dc039-247">In each case, the resulting list is displayed in a message box.</span></span> <span data-ttu-id="dc039-248">En este ejemplo se da por supuesto que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-248">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[GetFormats2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/GetFormats2/CPP/getformats2.cpp#1)]
 [!code-csharp[GetFormats2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/GetFormats2/CS/getformats2.cs#1)]
 [!code-vb[GetFormats2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/GetFormats2/VB/getformats2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetData(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc039-249">Almacena en esta instancia los datos especificados y el formato asociado a estos datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-249">Stores the specified data and its associated format in this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit" Usage="iDataObject.SetData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="dc039-250">Datos que se van a almacenar.</span><span class="sxs-lookup"><span data-stu-id="dc039-250">The data to store.</span></span></param>
        <summary><span data-ttu-id="dc039-251">Almacena los datos especificados en esta instancia utilizando la clase de los datos para el formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-251">Stores the specified data in this instance, using the class of the data for the format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-252">El formato se deriva de la clase de datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-252">The format is derived from the data class.</span></span>  
  
 <span data-ttu-id="dc039-253">Datos almacenados mediante este método pueden convertirse en un formato compatible cuando se recuperan.</span><span class="sxs-lookup"><span data-stu-id="dc039-253">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="dc039-254">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-254">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-255">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `SetData` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-255">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="dc039-256">En primer lugar, crea un componente (`myComponent`) y lo almacena en un objeto de datos (`myDataObject`).</span><span class="sxs-lookup"><span data-stu-id="dc039-256">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`).</span></span> <span data-ttu-id="dc039-257">A continuación, comprueba si los datos especificados se almacenan en el objeto de datos y muestran el resultado en un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="dc039-257">Then it checks whether the specified data is stored in the data object, and displays the result in a message box.</span></span> <span data-ttu-id="dc039-258">En el ejemplo se supone que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-258">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData1/CPP/setdata1.cpp#1)]
 [!code-csharp[SetData1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData1/CS/setdata1.cs#1)]
 [!code-vb[SetData1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData1/VB/setdata1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-259">Formato asociado a los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-259">The format associated with the data.</span></span> <span data-ttu-id="dc039-260">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-260">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="dc039-261">Datos que se van a almacenar.</span><span class="sxs-lookup"><span data-stu-id="dc039-261">The data to store.</span></span></param>
        <summary><span data-ttu-id="dc039-262">Almacena en esta instancia los datos especificados y el formato asociado a estos datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-262">Stores the specified data and its associated format in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-263">Si no conoce el formato de la aplicación de destino, puede almacenar datos en múltiples formatos mediante este método.</span><span class="sxs-lookup"><span data-stu-id="dc039-263">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="dc039-264">Datos almacenados mediante este método pueden convertirse en un formato compatible cuando se recuperan.</span><span class="sxs-lookup"><span data-stu-id="dc039-264">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="dc039-265">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-265">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-266">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `SetData` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-266">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="dc039-267">En primer lugar, crea un objeto de datos (`myDataObject`) y almacena una cadena en el objeto que especifica el `UnicodeText` formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-267">First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format.</span></span> <span data-ttu-id="dc039-268">A continuación, recupera los datos almacenados en el objeto que especifica el `Text` formato, para que los datos se convierten en el `Text` formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-268">Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format.</span></span> <span data-ttu-id="dc039-269">El resultado se muestra en un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="dc039-269">The result is displayed in a message box.</span></span> <span data-ttu-id="dc039-270">En este ejemplo se da por supuesto que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-270">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData2/CPP/setdata2.cpp#1)]
 [!code-csharp[SetData2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData2/CS/setdata2.cs#1)]
 [!code-vb[SetData2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData2/VB/setdata2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-271"><see cref="T:System.Type" /> que representa el formato asociado a los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-271">A <see cref="T:System.Type" /> representing the format associated with the data.</span></span> <span data-ttu-id="dc039-272">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-272">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="data"><span data-ttu-id="dc039-273">Datos que se van a almacenar.</span><span class="sxs-lookup"><span data-stu-id="dc039-273">The data to store.</span></span></param>
        <summary><span data-ttu-id="dc039-274">Almacena en esta instancia los datos especificados y el tipo de clase asociado a estos datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-274">Stores the specified data and its associated class type in this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-275">Si no conoce el formato de la aplicación de destino, puede almacenar datos en múltiples formatos mediante este método.</span><span class="sxs-lookup"><span data-stu-id="dc039-275">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="dc039-276">Datos almacenados mediante este método pueden convertirse en un formato compatible cuando se recuperan.</span><span class="sxs-lookup"><span data-stu-id="dc039-276">Data stored using this method can be converted to a compatible format when it is retrieved.</span></span>  
  
 <span data-ttu-id="dc039-277">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-277">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-278">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `SetData` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-278">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="dc039-279">En primer lugar, crea un componente (`myComponent`) y lo almacena en un objeto de datos (`myDataObject`), con `myType` para especificar el formato de datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-279">First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format.</span></span> <span data-ttu-id="dc039-280">A continuación, comprueba si los datos del tipo especificado se almacenan en el objeto y muestran el resultado en un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="dc039-280">Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box.</span></span> <span data-ttu-id="dc039-281">En el ejemplo se supone que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-281">The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData3/CPP/setdata3.cpp#1)]
 [!code-csharp[SetData3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData3/CS/setdata3.cs#1)]
 [!code-vb[SetData3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData3/VB/setdata3.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.GetFormats(System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, bool autoConvert, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, bool autoConvert, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, autoConvert As Boolean, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, bool autoConvert, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * bool * obj -&gt; unit" Usage="iDataObject.SetData (format, autoConvert, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="dc039-282">Formato asociado a los datos.</span><span class="sxs-lookup"><span data-stu-id="dc039-282">The format associated with the data.</span></span> <span data-ttu-id="dc039-283">Vea <see cref="T:System.Windows.Forms.DataFormats" /> para obtener los formatos predefinidos.</span><span class="sxs-lookup"><span data-stu-id="dc039-283">See <see cref="T:System.Windows.Forms.DataFormats" /> for predefined formats.</span></span></param>
        <param name="autoConvert"><span data-ttu-id="dc039-284"><see langword="true" /> para permitir la conversión de los datos a otros formatos; en cualquier otro caso, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc039-284"><see langword="true" /> to allow the data to be converted to another format; otherwise, <see langword="false" />.</span></span></param>
        <param name="data"><span data-ttu-id="dc039-285">Datos que se van a almacenar.</span><span class="sxs-lookup"><span data-stu-id="dc039-285">The data to store.</span></span></param>
        <summary><span data-ttu-id="dc039-286">Almacena los datos especificados y el formato que tienen asociado en esta instancia, usando un valor de tipo booleano para indicar si pueden convertirse los datos a otro formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-286">Stores the specified data and its associated format in this instance, using a Boolean value to specify whether the data can be converted to another format.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc039-287">Si no conoce el formato de la aplicación de destino, puede almacenar datos en múltiples formatos mediante este método.</span><span class="sxs-lookup"><span data-stu-id="dc039-287">If you do not know the format of the target application, you can store data in multiple formats using this method.</span></span>  
  
 <span data-ttu-id="dc039-288">Para una implementación de este método, consulte <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dc039-288">For an implementation of this method, see <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc039-289">Este ejemplo se usa el <xref:System.Windows.Forms.DataObject> clase que implementa `IDataObject`, para demostrar el uso de la `SetData` método.</span><span class="sxs-lookup"><span data-stu-id="dc039-289">This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method.</span></span> <span data-ttu-id="dc039-290">En primer lugar, crea un objeto de datos (`myDataObject`) y almacena una `UnicodeText` de cadena, con el `autoConvert` parámetro establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="dc039-290">First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`.</span></span> <span data-ttu-id="dc039-291">A continuación, recupera los formatos asociados a los datos almacenados en el objeto y muestra el resultado en un cuadro de mensaje.</span><span class="sxs-lookup"><span data-stu-id="dc039-291">Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box.</span></span> <span data-ttu-id="dc039-292">El único formato asociado a los datos es el `UnicodeText` formato.</span><span class="sxs-lookup"><span data-stu-id="dc039-292">The only format associated with the data is the `UnicodeText` format.</span></span> <span data-ttu-id="dc039-293">En este ejemplo se da por supuesto que ha creado un <xref:System.Windows.Forms.Form> denominado `Form1`.</span><span class="sxs-lookup"><span data-stu-id="dc039-293">This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.</span></span>  
  
 [!code-cpp[SetData4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/SetData4/CPP/form1.cpp#1)]
 [!code-csharp[SetData4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/SetData4/CS/form1.cs#1)]
 [!code-vb[SetData4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/SetData4/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)" />
        <altmember cref="M:System.Windows.Forms.DataObject.SetData(System.String,System.Boolean,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>
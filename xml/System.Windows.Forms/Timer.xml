<Type Name="Timer" FullName="System.Windows.Forms.Timer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1c5c64237633b18061f1b1f00066f054f869e466" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53482216" /></Metadata><TypeSignature Language="C#" Value="public class Timer : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0ff85-101">Implementa un temporizador que genera un evento en los intervalos definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="0ff85-101">Implements a timer that raises an event at user-defined intervals.</span></span> <span data-ttu-id="0ff85-102">Este temporizador está optimizado para su uso en aplicaciones de Windows Forms y se debe utilizar en una ventana.</span><span class="sxs-lookup"><span data-stu-id="0ff85-102">This timer is optimized for use in Windows Forms applications and must be used in a window.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-103">Un <xref:System.Windows.Forms.Timer> se usa para generar un evento a intervalos definidos por el usuario.</span><span class="sxs-lookup"><span data-stu-id="0ff85-103">A <xref:System.Windows.Forms.Timer> is used to raise an event at user-defined intervals.</span></span> <span data-ttu-id="0ff85-104">Este temporizador de Windows está diseñado para un entorno de un único subproceso donde se usan los subprocesos de interfaz de usuario para realizar el procesamiento.</span><span class="sxs-lookup"><span data-stu-id="0ff85-104">This Windows timer is designed for a single-threaded environment where UI threads are used to perform processing.</span></span> <span data-ttu-id="0ff85-105">Requiere que el código de usuario tiene un suministro de mensajes de interfaz de usuario y siempre funcionan desde el mismo subproceso o calcular las referencias de la llamada a otro subproceso.</span><span class="sxs-lookup"><span data-stu-id="0ff85-105">It requires that the user code have a UI message pump available and always operate from the same thread, or marshal the call onto another thread.</span></span>  
  
 <span data-ttu-id="0ff85-106">Cuando se usa este temporizador, utilice el <xref:System.Windows.Forms.Timer.Tick> eventos para realizar una operación de sondeo o para mostrar una pantalla de presentación para un período de tiempo especificado.</span><span class="sxs-lookup"><span data-stu-id="0ff85-106">When you use this timer, use the <xref:System.Windows.Forms.Timer.Tick> event to perform a polling operation or to display a splash screen for a specified period of time.</span></span> <span data-ttu-id="0ff85-107">Cada vez que el <xref:System.Windows.Forms.Timer.Enabled%2A> propiedad está establecida en `true` y el <xref:System.Windows.Forms.Timer.Interval%2A> propiedad es mayor que cero, el <xref:System.Windows.Forms.Timer.Tick> evento se desencadena en los intervalos basados en el <xref:System.Windows.Forms.Timer.Interval%2A> configuración de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="0ff85-107">Whenever the <xref:System.Windows.Forms.Timer.Enabled%2A> property is set to `true` and the <xref:System.Windows.Forms.Timer.Interval%2A> property is greater than zero, the <xref:System.Windows.Forms.Timer.Tick> event is raised at intervals based on the <xref:System.Windows.Forms.Timer.Interval%2A> property setting.</span></span>  
  
 <span data-ttu-id="0ff85-108">Esta clase proporciona métodos para establecer el intervalo y para iniciar y detener el temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-108">This class provides methods to set the interval, and to start and stop the timer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ff85-109">El componente Timer de formularios Windows Forms es de subproceso único y está limitado a una precisión de 55 milisegundos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-109">The Windows Forms Timer component is single-threaded, and is limited to an accuracy of 55 milliseconds.</span></span> <span data-ttu-id="0ff85-110">Si necesita un temporizador multiproceso con mayor precisión, use la <xref:System.Timers.Timer> clase en el <xref:System.Timers> espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="0ff85-110">If you require a multithreaded timer with greater accuracy, use the <xref:System.Timers.Timer> class in the <xref:System.Timers> namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ff85-111">El ejemplo siguiente implementa un temporizador de intervalo simple, que dispara una alarma cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-111">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0ff85-112">Cuando se produce la alarma, un <xref:System.Windows.Forms.MessageBox> muestra un recuento del número de veces que la alarma se ha iniciado y pregunta al usuario si el temporizador debe continuar ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="0ff85-112">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0ff85-113">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-113">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ff85-114">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-115">Cuando se crea un nuevo temporizador, está deshabilitado; es decir, <xref:System.Windows.Forms.Timer.Enabled%2A> está establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-115">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="0ff85-116">Para habilitar el temporizador, llame a la <xref:System.Windows.Forms.Timer.Start%2A> método o un conjunto <xref:System.Windows.Forms.Timer.Enabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-116">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="0ff85-117">Si el temporizador está deshabilitado y el temporizador está fuera del ámbito, se eliminará el temporizador cuando se produce la recolección de elementos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-117">If the timer is disabled and the timer is out of scope, the timer will be disposed when garbage collection occurs.</span></span> <span data-ttu-id="0ff85-118">Si el temporizador está habilitado, incluso si está fuera del ámbito, no está sujeta a la recolección.</span><span class="sxs-lookup"><span data-stu-id="0ff85-118">If the timer is enabled, even if it is out of scope, it is not subject to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer (System.ComponentModel.IContainer container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.IContainer container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (container As IContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer(System::ComponentModel::IContainer ^ container);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Timer : System.ComponentModel.IContainer -&gt; System.Windows.Forms.Timer" Usage="new System.Windows.Forms.Timer container" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="container" Type="System.ComponentModel.IContainer" />
      </Parameters>
      <Docs>
        <param name="container"><span data-ttu-id="0ff85-119"><see cref="T:System.ComponentModel.IContainer" /> que representa el contenedor del temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-119">An <see cref="T:System.ComponentModel.IContainer" /> that represents the container for the timer.</span></span></param>
        <summary><span data-ttu-id="0ff85-120">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Timer" /> junto con el contenedor indicado.</span><span class="sxs-lookup"><span data-stu-id="0ff85-120">Initializes a new instance of the <see cref="T:System.Windows.Forms.Timer" /> class together with the specified container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-121">El <xref:System.Windows.Forms.Timer> constructor le permite asociar un <xref:System.Windows.Forms.Timer> con cualquier <xref:System.ComponentModel.Container> objeto.</span><span class="sxs-lookup"><span data-stu-id="0ff85-121">The <xref:System.Windows.Forms.Timer> constructor enables you to associate a <xref:System.Windows.Forms.Timer> with any <xref:System.ComponentModel.Container> object.</span></span> <span data-ttu-id="0ff85-122">Asociando el <xref:System.Windows.Forms.Timer> como éste, ceder el control de la duración de la <xref:System.Windows.Forms.Timer> a la <xref:System.ComponentModel.Container>.</span><span class="sxs-lookup"><span data-stu-id="0ff85-122">By associating the <xref:System.Windows.Forms.Timer> like this, you hand over control of the lifetime of the <xref:System.Windows.Forms.Timer> to the <xref:System.ComponentModel.Container>.</span></span> <span data-ttu-id="0ff85-123">Esto puede ser útil si usa una serie de componentes en la aplicación y desea eliminar todos ellos al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="0ff85-123">This can be useful if you use a number of components in your application and want to dispose of all of them simultaneously.</span></span> <span data-ttu-id="0ff85-124">Por ejemplo, si asocia un <xref:System.Windows.Forms.ToolTip>, un <xref:System.Windows.Forms.ImageList>y un <xref:System.Windows.Forms.Timer> con un <xref:System.ComponentModel.Container>, al llamar a <xref:System.ComponentModel.Container.Dispose%2A> en el <xref:System.ComponentModel.Container> se forzará la eliminación de todos estos componentes también.</span><span class="sxs-lookup"><span data-stu-id="0ff85-124">For example, if you associate a <xref:System.Windows.Forms.ToolTip>, an <xref:System.Windows.Forms.ImageList>, and a <xref:System.Windows.Forms.Timer> with a <xref:System.ComponentModel.Container>, calling <xref:System.ComponentModel.Container.Dispose%2A> on the <xref:System.ComponentModel.Container> will force disposal of all of these components as well.</span></span>  
  
 <span data-ttu-id="0ff85-125">Cuando se crea un nuevo temporizador, está deshabilitado; es decir, <xref:System.Windows.Forms.Timer.Enabled%2A> está establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-125">When a new timer is created, it is disabled; that is, <xref:System.Windows.Forms.Timer.Enabled%2A> is set to `false`.</span></span> <span data-ttu-id="0ff85-126">Para habilitar el temporizador, llame a la <xref:System.Windows.Forms.Timer.Start%2A> método o un conjunto <xref:System.Windows.Forms.Timer.Enabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-126">To enable the timer, call the <xref:System.Windows.Forms.Timer.Start%2A> method or set <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span>  
  
 <span data-ttu-id="0ff85-127">Esta instancia existirá hasta que lo libere su contenedor para la recolección de elementos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-127">This instance will exist until its container releases it to garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="timer.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="0ff85-128"><see langword="true" /> para liberar tanto los recursos administrados como los no administrados.</span><span class="sxs-lookup"><span data-stu-id="0ff85-128"><see langword="true" /> to release both managed and unmanaged resources.</span></span> <span data-ttu-id="0ff85-129"><see langword="false" /> para liberar solamente los recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="0ff85-129"><see langword="false" /> to release only the unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="0ff85-130">Se deshace de los recursos (distintos de la memoria) utilizados por el temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-130">Disposes of the resources, other than memory, used by the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-131">Llamar a <xref:System.Windows.Forms.Timer.Dispose%2A> cuando haya terminado de usar el temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-131">Call <xref:System.Windows.Forms.Timer.Dispose%2A> when you are finished using the timer.</span></span> <span data-ttu-id="0ff85-132">El <xref:System.Windows.Forms.Timer.Dispose%2A> método deja el temporizador en un estado inutilizable.</span><span class="sxs-lookup"><span data-stu-id="0ff85-132">The <xref:System.Windows.Forms.Timer.Dispose%2A> method leaves the timer in an unusable state.</span></span> <span data-ttu-id="0ff85-133">Después de llamar a <xref:System.Windows.Forms.Timer.Dispose%2A>, deben liberar todas las referencias al temporizador para que la memoria ocupaba puede ser reclamada por la recolección de elementos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-133">After you call <xref:System.Windows.Forms.Timer.Dispose%2A>, you must release all references to the timer so the memory it was occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ff85-134">Llame siempre a <xref:System.Windows.Forms.Timer.Dispose%2A> antes de liberar la última referencia al temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-134">Always call <xref:System.Windows.Forms.Timer.Dispose%2A> before you release your last reference to the timer.</span></span> <span data-ttu-id="0ff85-135">En caso contrario, los recursos que usa el temporizador no se liberarán hasta que la colección de elementos no utilizados llama al destructor del objeto de temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-135">Otherwise, the resources the timer is using will not be freed until garbage collection calls the destructor of the timer object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ff85-136">Obtiene o establece si el temporizador está funcionando.</span><span class="sxs-lookup"><span data-stu-id="0ff85-136">Gets or sets whether the timer is running.</span></span></summary>
        <value><span data-ttu-id="0ff85-137">Es <see langword="true" /> si el temporizador está habilitado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-137"><see langword="true" /> if the timer is currently enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0ff85-138">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-138">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-139">El temporizador no está sujeta a la colección de elementos no utilizados cuando el valor es `true`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-139">The timer is not subject to garbage collection when the value is `true`.</span></span>  
  
 <span data-ttu-id="0ff85-140">Una llamada a la <xref:System.Windows.Forms.Timer.Start%2A> método es lo mismo que establecer <xref:System.Windows.Forms.Timer.Enabled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-140">Calling the <xref:System.Windows.Forms.Timer.Start%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `true`.</span></span> <span data-ttu-id="0ff85-141">Del mismo modo, una llamada a la <xref:System.Windows.Forms.Timer.Stop%2A> método es lo mismo que establecer <xref:System.Windows.Forms.Timer.Enabled%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-141">Likewise, calling the <xref:System.Windows.Forms.Timer.Stop%2A> method is the same as setting <xref:System.Windows.Forms.Timer.Enabled%2A> to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ff85-142">El ejemplo siguiente implementa un temporizador de intervalo simple, que dispara una alarma cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-142">The following example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0ff85-143">Cuando se produce la alarma, un <xref:System.Windows.Forms.MessageBox> muestra un recuento del número de veces que la alarma se ha iniciado y solicita al usuario si el temporizador debe continuar ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="0ff85-143">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Windows.Forms.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(100)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ff85-144">Obtiene o establece el tiempo, en milisegundos, que ha de transcurrir antes de provocarse el evento <see cref="E:System.Windows.Forms.Timer.Tick" /> en relación con la última aparición del evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-144">Gets or sets the time, in milliseconds, before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <value><span data-ttu-id="0ff85-145"><see cref="T:System.Int32" /> que especifica el número de milisegundos que ha de transcurrir antes de provocarse el evento <see cref="E:System.Windows.Forms.Timer.Tick" /> en relación con la última aparición del evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-145">An <see cref="T:System.Int32" /> specifying the number of milliseconds before the <see cref="E:System.Windows.Forms.Timer.Tick" /> event is raised relative to the last occurrence of the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span> <span data-ttu-id="0ff85-146">El valor no puede ser menor que uno.</span><span class="sxs-lookup"><span data-stu-id="0ff85-146">The value cannot be less than one.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-147">Para obtener el número de segundos en el intervalo, dividir este número por 1000.</span><span class="sxs-lookup"><span data-stu-id="0ff85-147">To get the number of seconds in the interval, divide this number by 1,000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ff85-148">El ejemplo de código siguiente implementa un temporizador de intervalo simple, que dispara una alarma cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-148">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0ff85-149">Cuando se produce la alarma, un <xref:System.Windows.Forms.MessageBox> muestra un recuento del número de veces que la alarma se ha iniciado y solicita al usuario si el temporizador debe continuar ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="0ff85-149">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0ff85-150">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="0ff85-150">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span> <span data-ttu-id="0ff85-151">Siempre es <see cref="F:System.EventArgs.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-151">This is always <see cref="F:System.EventArgs.Empty" />.</span></span></param>
        <summary><span data-ttu-id="0ff85-152">Genera el evento <see cref="E:System.Windows.Forms.Timer.Tick" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-152">Raises the <see cref="E:System.Windows.Forms.Timer.Tick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-153">Se llama a este método para cada paso del temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-153">This method is called for each timer tick.</span></span> <span data-ttu-id="0ff85-154">Llama a los métodos que se agregan mediante <xref:System.Windows.Forms.Timer.Tick>.</span><span class="sxs-lookup"><span data-stu-id="0ff85-154">It calls any methods that are added through <xref:System.Windows.Forms.Timer.Tick>.</span></span> <span data-ttu-id="0ff85-155">Si se hereda de <xref:System.Windows.Forms.Timer>, puede invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="0ff85-155">If you are inheriting from <xref:System.Windows.Forms.Timer>, you can override this method.</span></span>  
  
 <span data-ttu-id="0ff85-156">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="0ff85-156">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="0ff85-157">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0ff85-157">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0ff85-158">Cuando se reemplaza <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> en una clase derivada, asegúrese de que se llama a la clase base <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="0ff85-158">When overriding <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> in a derived class, make sure that you call the base class's <see cref="M:System.Windows.Forms.Timer.OnTick(System.EventArgs)" /> method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="timer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ff85-159">Inicia el temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-159">Starts the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-160">También puede iniciar el temporizador estableciendo el <xref:System.Windows.Forms.Timer.Enabled%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-160">You can also start the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ff85-161">El ejemplo de código siguiente implementa un temporizador de intervalo simple, que dispara una alarma cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-161">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0ff85-162">Cuando se produce la alarma, un <xref:System.Windows.Forms.MessageBox> muestra un recuento del número de veces que la alarma se ha iniciado y solicita al usuario si el temporizador debe continuar ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="0ff85-162">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="timer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ff85-163">Detiene el temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-163">Stops the timer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-164">También puede detener el temporizador estableciendo el <xref:System.Windows.Forms.Timer.Enabled%2A> propiedad `false`.</span><span class="sxs-lookup"><span data-stu-id="0ff85-164">You can also stop the timer by setting the <xref:System.Windows.Forms.Timer.Enabled%2A> property to `false`.</span></span> <span data-ttu-id="0ff85-165">Un <xref:System.Windows.Forms.Timer> objeto se puede habilitar y deshabilitar varias veces en la misma sesión de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="0ff85-165">A <xref:System.Windows.Forms.Timer> object may be enabled and disabled multiple times within the same application session.</span></span>  
  
 <span data-ttu-id="0ff85-166">Una llamada a <xref:System.Windows.Forms.Timer.Start%2A> después de deshabilitar una <xref:System.Windows.Forms.Timer> mediante una llamada a <xref:System.Windows.Forms.Timer.Stop%2A> hará que el <xref:System.Windows.Forms.Timer> para reiniciar el intervalo interrumpido.</span><span class="sxs-lookup"><span data-stu-id="0ff85-166">Calling <xref:System.Windows.Forms.Timer.Start%2A> after you have disabled a <xref:System.Windows.Forms.Timer> by calling <xref:System.Windows.Forms.Timer.Stop%2A> will cause the <xref:System.Windows.Forms.Timer> to restart the interrupted interval.</span></span> <span data-ttu-id="0ff85-167">Si su <xref:System.Windows.Forms.Timer> está establecido para un intervalo de 5000 milisegundos y se llama a <xref:System.Windows.Forms.Timer.Stop%2A> en aproximadamente 3000 milisegundos, una llamada a <xref:System.Windows.Forms.Timer.Start%2A> hará que el <xref:System.Windows.Forms.Timer> a 5000 milisegundos de espera antes de generar el <xref:System.Windows.Forms.Timer.Tick> eventos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-167">If your <xref:System.Windows.Forms.Timer> is set for a 5000-millisecond interval, and you call <xref:System.Windows.Forms.Timer.Stop%2A> at around 3000 milliseconds, calling <xref:System.Windows.Forms.Timer.Start%2A> will cause the <xref:System.Windows.Forms.Timer> to wait 5000 milliseconds before raising the <xref:System.Windows.Forms.Timer.Tick> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0ff85-168">Llamar a Stop en cualquier <xref:System.Windows.Forms.Timer> dentro de un formulario Windows Forms aplicación puede producir mensajes de otros <xref:System.Windows.Forms.Timer> componentes de la aplicación que se procesen inmediatamente, porque todos los <xref:System.Windows.Forms.Timer> componentes funcionan en el subproceso principal de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="0ff85-168">Calling Stop on any <xref:System.Windows.Forms.Timer> within a Windows Forms application can cause messages from other <xref:System.Windows.Forms.Timer> components in the application to be processed immediately, because all <xref:System.Windows.Forms.Timer> components operate on the main application thread.</span></span> <span data-ttu-id="0ff85-169">Si tiene dos <xref:System.Windows.Forms.Timer> componentes, uno establecido en 700 milisegundos y un conjunto de 500 milisegundos y se llama <xref:System.Windows.Forms.Timer.Stop%2A> en la primera <xref:System.Windows.Forms.Timer>, la aplicación puede recibir una devolución de llamada de evento para el segundo componente primero.</span><span class="sxs-lookup"><span data-stu-id="0ff85-169">If you have two <xref:System.Windows.Forms.Timer> components, one set to 700 milliseconds and one set to 500 milliseconds, and you call <xref:System.Windows.Forms.Timer.Stop%2A> on the first <xref:System.Windows.Forms.Timer>, your application may receive an event callback for the second component first.</span></span> <span data-ttu-id="0ff85-170">Si esto resulta problemático, considere el uso de la <xref:System.Threading.Timer> clase en el <xref:System.Threading> espacio de nombres en su lugar.</span><span class="sxs-lookup"><span data-stu-id="0ff85-170">If this proves problematic, consider using the <xref:System.Threading.Timer> class in the <xref:System.Threading> namespace instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ff85-171">El ejemplo de código siguiente implementa un temporizador de intervalo simple, que dispara una alarma cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-171">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0ff85-172">Cuando se produce la alarma, un <xref:System.Windows.Forms.MessageBox> muestra un recuento del número de veces que la alarma se ha iniciado y solicita al usuario si el temporizador debe continuar ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="0ff85-172">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Timer.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Timer.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Timer.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ff85-173">Obtiene o establece una cadena arbitraria que representa algún tipo de estado del usuario.</span><span class="sxs-lookup"><span data-stu-id="0ff85-173">Gets or sets an arbitrary string representing some type of user state.</span></span></summary>
        <value><span data-ttu-id="0ff85-174">Cadena arbitraria que representa algún tipo de estado del usuario.</span><span class="sxs-lookup"><span data-stu-id="0ff85-174">An arbitrary string representing some type of user state.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Tick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler " Usage="member this.Tick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0ff85-175">Se produce cuando ha transcurrido el intervalo del temporizador especificado y está habilitado el temporizador.</span><span class="sxs-lookup"><span data-stu-id="0ff85-175">Occurs when the specified timer interval has elapsed and the timer is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-176">Una llamada a la <xref:System.Diagnostics.Debug.Assert%2A> método en el <xref:System.Diagnostics.Debug> clase desde el <xref:System.Windows.Forms.Timer.Tick> eventos pueden no comportarse según lo esperado, como mostrar el cuadro de diálogo de aserción cuadro puede provocar Windows generar el <xref:System.Windows.Forms.Timer.Tick> eventos varias veces.</span><span class="sxs-lookup"><span data-stu-id="0ff85-176">Calling the <xref:System.Diagnostics.Debug.Assert%2A> method on the <xref:System.Diagnostics.Debug> class from within the <xref:System.Windows.Forms.Timer.Tick> event may not behave as expected, as displaying the assertion dialog box may cause Windows to raise the <xref:System.Windows.Forms.Timer.Tick> event repeatedly.</span></span> <span data-ttu-id="0ff85-177">Se recomienda que abstenerse de probar las aserciones en este evento y utilice la <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, o <xref:System.Diagnostics.Debug.WriteLineIf%2A> métodos en su lugar.</span><span class="sxs-lookup"><span data-stu-id="0ff85-177">We recommend that you refrain from testing assertions within this event, and use the <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, or <xref:System.Diagnostics.Debug.WriteLineIf%2A> methods instead.</span></span>  
  
 <span data-ttu-id="0ff85-178">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="0ff85-178">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ff85-179">El ejemplo de código siguiente implementa un temporizador de intervalo simple, que dispara una alarma cada cinco segundos.</span><span class="sxs-lookup"><span data-stu-id="0ff85-179">The following code example implements a simple interval timer, which sets off an alarm every five seconds.</span></span> <span data-ttu-id="0ff85-180">Cuando se produce la alarma, un <xref:System.Windows.Forms.MessageBox> muestra un recuento del número de veces que la alarma se ha iniciado y solicita al usuario si el temporizador debe continuar ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="0ff85-180">When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.</span></span>  
  
 [!code-cpp[Classic Timer Example 2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Timer Example 2/CPP/source.cpp#1)]
 [!code-csharp[Classic Timer Example 2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Timer Example 2/CS/source.cs#1)]
 [!code-vb[Classic Timer Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Timer Example 2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Timer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="timer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0ff85-181">Devuelve una cadena que representa <see cref="T:System.Windows.Forms.Timer" />.</span><span class="sxs-lookup"><span data-stu-id="0ff85-181">Returns a string that represents the <see cref="T:System.Windows.Forms.Timer" />.</span></span></summary>
        <returns><span data-ttu-id="0ff85-182">Cadena que representa el objeto <see cref="T:System.Windows.Forms.Timer" /> actual.</span><span class="sxs-lookup"><span data-stu-id="0ff85-182">A string that represents the current <see cref="T:System.Windows.Forms.Timer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ff85-183">El <xref:System.Windows.Forms.Timer.ToString%2A> método devuelve una cadena que incluye el valor de la <xref:System.Windows.Forms.Timer.Interval%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="0ff85-183">The <xref:System.Windows.Forms.Timer.ToString%2A> method returns a string that includes the value of the <xref:System.Windows.Forms.Timer.Interval%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
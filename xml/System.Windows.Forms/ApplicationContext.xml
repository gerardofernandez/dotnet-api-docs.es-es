<Type Name="ApplicationContext" FullName="System.Windows.Forms.ApplicationContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8066d326d0481e5a4989ecf6ba32a96ad713dd39" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48599688" /></Metadata><TypeSignature Language="C#" Value="public class ApplicationContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ApplicationContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ApplicationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ApplicationContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ApplicationContext : IDisposable" />
  <TypeSignature Language="F#" Value="type ApplicationContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2de2c-101">Especifica información contextual sobre un subproceso de aplicación.</span><span class="sxs-lookup"><span data-stu-id="2de2c-101">Specifies the contextual information about an application thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-102">Puede usar el <xref:System.Windows.Forms.ApplicationContext> clase para definir las circunstancias que provocan un bucle de mensajes salir.</span><span class="sxs-lookup"><span data-stu-id="2de2c-102">You can use the <xref:System.Windows.Forms.ApplicationContext> class to redefine the circumstances that cause a message loop to exit.</span></span> <span data-ttu-id="2de2c-103">De forma predeterminada, el <xref:System.Windows.Forms.ApplicationContext> escucha el <xref:System.Windows.Forms.Form.Closed> principal del evento en la aplicación <xref:System.Windows.Forms.Form>, a continuación, cierra el bucle de mensajes del subproceso.</span><span class="sxs-lookup"><span data-stu-id="2de2c-103">By default, the <xref:System.Windows.Forms.ApplicationContext> listens to the <xref:System.Windows.Forms.Form.Closed> event on the application's main <xref:System.Windows.Forms.Form>, then exits the thread's message loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2c-104">En el ejemplo de código siguiente se muestra dos formularios y sale de la aplicación cuando se cierren ambas formas.</span><span class="sxs-lookup"><span data-stu-id="2de2c-104">The following code example displays two forms and exits the application when both forms are closed.</span></span> <span data-ttu-id="2de2c-105">Cuando la aplicación se inicia y se cierra, se recuerda la posición de cada formulario.</span><span class="sxs-lookup"><span data-stu-id="2de2c-105">When the application starts and exits, the position of each form is remembered.</span></span> <span data-ttu-id="2de2c-106">Este ejemplo muestra cómo usar un <xref:System.Windows.Forms.ApplicationContext>, junto con el `Application.Run(context)` método para mostrar varios formularios cuando se inicia la aplicación.</span><span class="sxs-lookup"><span data-stu-id="2de2c-106">This example demonstrates how to use an <xref:System.Windows.Forms.ApplicationContext>, along with the `Application.Run(context)` method, to display multiple forms when the application starts.</span></span>  
  
 <span data-ttu-id="2de2c-107">La clase `MyApplicationContext` hereda <xref:System.Windows.Forms.ApplicationContext> y realiza un seguimiento cuando se cierra cada formulario y sale del subproceso actual cuando ambos están.</span><span class="sxs-lookup"><span data-stu-id="2de2c-107">The class `MyApplicationContext` inherits from <xref:System.Windows.Forms.ApplicationContext> and keeps track when each form is closed, and exits the current thread when they both are.</span></span> <span data-ttu-id="2de2c-108">La clase almacena las posiciones de cada formulario para el usuario.</span><span class="sxs-lookup"><span data-stu-id="2de2c-108">The class stores the positions of each form for the user.</span></span> <span data-ttu-id="2de2c-109">Los datos de posición del formulario se almacenan en un archivo denominado `Appdata.txt` que se crea en la ubicación determinada por <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2c-109">The form position data is stored in a file titled `Appdata.txt` that is created in the location determined by <xref:System.Windows.Forms.Application.UserAppDataPath%2A>.</span></span>  
  
 <span data-ttu-id="2de2c-110">El `Main` llamadas al método `Application.Run(context)` para iniciar la aplicación, dado el <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="2de2c-110">The `Main` method calls `Application.Run(context)` to start the application, given the <xref:System.Windows.Forms.ApplicationContext>.</span></span>  
  
 [!code-cpp[Application#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#1)]
 [!code-csharp[Application#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#1)]
 [!code-vb[Application#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2de2c-111">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ApplicationContext" />.</span><span class="sxs-lookup"><span data-stu-id="2de2c-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2de2c-112">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ApplicationContext" /> sin contexto.</span><span class="sxs-lookup"><span data-stu-id="2de2c-112">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with no context.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ApplicationContext (System.Windows.Forms.Form mainForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Form mainForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.#ctor(System.Windows.Forms.Form)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mainForm As Form)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ApplicationContext(System::Windows::Forms::Form ^ mainForm);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.ApplicationContext : System.Windows.Forms.Form -&gt; System.Windows.Forms.ApplicationContext" Usage="new System.Windows.Forms.ApplicationContext mainForm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mainForm" Type="System.Windows.Forms.Form" />
      </Parameters>
      <Docs>
        <param name="mainForm"><span data-ttu-id="2de2c-113">Clase <see cref="T:System.Windows.Forms.Form" /> principal de la aplicación que se va a usar para el contexto.</span><span class="sxs-lookup"><span data-stu-id="2de2c-113">The main <see cref="T:System.Windows.Forms.Form" /> of the application to use for context.</span></span></param>
        <summary><span data-ttu-id="2de2c-114">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.ApplicationContext" /> con el objeto <see cref="T:System.Windows.Forms.Form" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="2de2c-114">Initializes a new instance of the <see cref="T:System.Windows.Forms.ApplicationContext" /> class with the specified <see cref="T:System.Windows.Forms.Form" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-115">Si <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> no es invalidado, el bucle de mensajes del subproceso finaliza cuando <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> está cerrado.</span><span class="sxs-lookup"><span data-stu-id="2de2c-115">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when <xref:System.Windows.Forms.ApplicationContext.MainForm%2A> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2de2c-116">Libera los recursos que usa <see cref="T:System.Windows.Forms.ApplicationContext" />.</span><span class="sxs-lookup"><span data-stu-id="2de2c-116">Releases the resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="applicationContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2de2c-117">Libera todos los recursos que usa <see cref="T:System.Windows.Forms.ApplicationContext" />.</span><span class="sxs-lookup"><span data-stu-id="2de2c-117">Releases all resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-118">Llame a <xref:System.Windows.Forms.ApplicationContext.Dispose> cuando haya terminado de usar <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="2de2c-118">Call <xref:System.Windows.Forms.ApplicationContext.Dispose> when you are finished using the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="2de2c-119">El método <xref:System.Windows.Forms.ApplicationContext.Dispose> deja el <xref:System.Windows.Forms.ApplicationContext> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="2de2c-119">The <xref:System.Windows.Forms.ApplicationContext.Dispose> method leaves the <xref:System.Windows.Forms.ApplicationContext> in an unusable state.</span></span> <span data-ttu-id="2de2c-120">Después de llamar a <xref:System.Windows.Forms.ApplicationContext.Dispose>, debe liberar todas las referencias a la <xref:System.Windows.Forms.ApplicationContext> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Windows.Forms.ApplicationContext> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="2de2c-120">After calling <xref:System.Windows.Forms.ApplicationContext.Dispose>, you must release all references to the <xref:System.Windows.Forms.ApplicationContext> so the garbage collector can reclaim the memory that the <xref:System.Windows.Forms.ApplicationContext> was occupying.</span></span> <span data-ttu-id="2de2c-121">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2de2c-121">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2de2c-122">Realice siempre una llamada a <xref:System.Windows.Forms.ApplicationContext.Dispose> antes de liberar la última referencia al objeto <xref:System.Windows.Forms.ApplicationContext>.</span><span class="sxs-lookup"><span data-stu-id="2de2c-122">Always call <xref:System.Windows.Forms.ApplicationContext.Dispose> before you release your last reference to the <xref:System.Windows.Forms.ApplicationContext>.</span></span> <span data-ttu-id="2de2c-123">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Windows.Forms.ApplicationContext> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="2de2c-123">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Windows.Forms.ApplicationContext> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="applicationContext.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="2de2c-124">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="2de2c-124"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="2de2c-125">Libera los recursos no administrados que usa <see cref="T:System.Windows.Forms.ApplicationContext" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="2de2c-125">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ApplicationContext" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-126">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2de2c-126">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="2de2c-127">`Dispose()` invoca el protegido <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="2de2c-127">`Dispose()` invokes the protected <xref:System.Windows.Forms.ApplicationContext.Dispose%28System.Boolean%29> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="2de2c-128"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="2de2c-128"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="2de2c-129">Cuando el `disposing` parámetro es true, este método libera todos los recursos mantenidos por los objetos administrados que este <xref:System.Windows.Forms.ApplicationContext> referencias.</span><span class="sxs-lookup"><span data-stu-id="2de2c-129">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ApplicationContext> references.</span></span> <span data-ttu-id="2de2c-130">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="2de2c-130">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="2de2c-131">
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="2de2c-131">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="2de2c-132">Al invalidar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="2de2c-132">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="2de2c-133">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="2de2c-133">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="2de2c-134">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="2de2c-134">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ExitThread">
      <MemberSignature Language="C#" Value="public void ExitThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExitThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExitThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExitThread();" />
      <MemberSignature Language="F#" Value="member this.ExitThread : unit -&gt; unit" Usage="applicationContext.ExitThread " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2de2c-135">Termina el bucle de mensajes del subproceso.</span><span class="sxs-lookup"><span data-stu-id="2de2c-135">Terminates the message loop of the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-136">Este método llama a <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2c-136">This method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2de2c-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> y <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> hacer realidad no causa finalice el subproceso.</span><span class="sxs-lookup"><span data-stu-id="2de2c-137"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="2de2c-138">Estos métodos provocan el <xref:System.Windows.Forms.Application.ThreadExit> eventos a la que el <xref:System.Windows.Forms.Application> objeto escucha.</span><span class="sxs-lookup"><span data-stu-id="2de2c-138">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="2de2c-139">La <xref:System.Windows.Forms.Application> objeto, a continuación, finaliza el subproceso.</span><span class="sxs-lookup"><span data-stu-id="2de2c-139">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2de2c-140">El ejemplo de código siguiente es un extracto del ejemplo en el <xref:System.Windows.Forms.ApplicationContext> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="2de2c-140">The following code example is an excerpt from the example in the <xref:System.Windows.Forms.ApplicationContext> class overview.</span></span> <span data-ttu-id="2de2c-141">Este ejemplo realiza un seguimiento de los formularios abiertos y sale del subproceso actual cuando se cierran todos los formularios.</span><span class="sxs-lookup"><span data-stu-id="2de2c-141">This example keeps track of open forms and exits the current thread when all forms are closed.</span></span> <span data-ttu-id="2de2c-142">El `OnFormClosed` método es un controlador de eventos para el <xref:System.Windows.Forms.Form.Closed> eventos.</span><span class="sxs-lookup"><span data-stu-id="2de2c-142">The `OnFormClosed` method is an event handler for the <xref:System.Windows.Forms.Form.Closed> event.</span></span> <span data-ttu-id="2de2c-143">Cuando el número de formularios abiertos es igual a 0, subproceso actual se cierra mediante una llamada a la <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> método.</span><span class="sxs-lookup"><span data-stu-id="2de2c-143">When the number of open forms is equal to 0, then current thread is exited by calling the <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> method.</span></span> <span data-ttu-id="2de2c-144">Se realiza un seguimiento de la cantidad de formularios al incrementar el `formCount` variable cuando se muestra un formulario y disminuye cuando se cierra un formulario.</span><span class="sxs-lookup"><span data-stu-id="2de2c-144">The number of forms is tracked by incrementing the `formCount` variable when a form is shown, and decrementing it when a form is closed.</span></span>  
  
 <span data-ttu-id="2de2c-145">No se muestra parte del código con el fin de brevedad.</span><span class="sxs-lookup"><span data-stu-id="2de2c-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="2de2c-146">Consulte <xref:System.Windows.Forms.ApplicationContext> para obtener el código completo.</span><span class="sxs-lookup"><span data-stu-id="2de2c-146">See <xref:System.Windows.Forms.ApplicationContext> for the whole code listing.</span></span>  
  
 [!code-cpp[Application#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Application/CPP/source.cpp#3)]
 [!code-csharp[Application#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Application/CS/source.cs#3)]
 [!code-vb[Application#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Application/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitThreadCore">
      <MemberSignature Language="C#" Value="protected virtual void ExitThreadCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExitThreadCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExitThreadCore ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExitThreadCore();" />
      <MemberSignature Language="F#" Value="abstract member ExitThreadCore : unit -&gt; unit&#xA;override this.ExitThreadCore : unit -&gt; unit" Usage="applicationContext.ExitThreadCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2de2c-147">Termina el bucle de mensajes del subproceso.</span><span class="sxs-lookup"><span data-stu-id="2de2c-147">Terminates the message loop of the thread.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-148">Este método se llama desde <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2c-148">This method is called from <xref:System.Windows.Forms.ApplicationContext.ExitThread%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2de2c-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> y <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> hacer realidad no causa finalice el subproceso.</span><span class="sxs-lookup"><span data-stu-id="2de2c-149"><xref:System.Windows.Forms.ApplicationContext.ExitThread%2A> and <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A> do not actually cause the thread to terminate.</span></span> <span data-ttu-id="2de2c-150">Estos métodos provocan el <xref:System.Windows.Forms.Application.ThreadExit> eventos a la que el <xref:System.Windows.Forms.Application> objeto escucha.</span><span class="sxs-lookup"><span data-stu-id="2de2c-150">These methods raise the <xref:System.Windows.Forms.Application.ThreadExit> event to which the <xref:System.Windows.Forms.Application> object listens.</span></span> <span data-ttu-id="2de2c-151">La <xref:System.Windows.Forms.Application> objeto, a continuación, finaliza el subproceso.</span><span class="sxs-lookup"><span data-stu-id="2de2c-151">The <xref:System.Windows.Forms.Application> object then terminates the thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ApplicationContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ApplicationContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="applicationContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2de2c-152">Intenta liberar recursos y realizar otras operaciones de limpieza antes de que el contexto de la aplicación sea reclamado por la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="2de2c-152">Attempts to free resources and perform other cleanup operations before the application context is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-153">Este método invalida <xref:System.Object.Finalize%2A?displayProperty=nameWithType> y limpia los recursos mediante una llamada a `Dispose(false)`.</span><span class="sxs-lookup"><span data-stu-id="2de2c-153">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType> and cleans up resources by calling `Dispose(false)`.</span></span> <span data-ttu-id="2de2c-154">Invalide `Dispose(Boolean)` para personalizar la limpieza.</span><span class="sxs-lookup"><span data-stu-id="2de2c-154">Override `Dispose(Boolean)` to customize the cleanup.</span></span>  
  
 <span data-ttu-id="2de2c-155">Código de la aplicación no debe llamar a este método; un objeto `Finalize` método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="2de2c-155">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="2de2c-156">Para obtener más información, consulte [métodos de finalización y destructores](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md), y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="2de2c-156">For more information, see [Finalize Methods and Destructors](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/0s71x931(v%3dvs.100)), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MainForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form MainForm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Form MainForm" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberSignature Language="VB.NET" Value="Public Property MainForm As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Form ^ MainForm { System::Windows::Forms::Form ^ get(); void set(System::Windows::Forms::Form ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MainForm : System.Windows.Forms.Form with get, set" Usage="System.Windows.Forms.ApplicationContext.MainForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2de2c-157">Obtiene o establece el <see cref="T:System.Windows.Forms.Form" /> que se va a utilizar como contexto.</span><span class="sxs-lookup"><span data-stu-id="2de2c-157">Gets or sets the <see cref="T:System.Windows.Forms.Form" /> to use as context.</span></span></summary>
        <value><span data-ttu-id="2de2c-158"><see cref="T:System.Windows.Forms.Form" /> que se va a utilizar como contexto.</span><span class="sxs-lookup"><span data-stu-id="2de2c-158">The <see cref="T:System.Windows.Forms.Form" /> to use as context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-159">Esta propiedad determina el método main <xref:System.Windows.Forms.Form> para este contexto.</span><span class="sxs-lookup"><span data-stu-id="2de2c-159">This property determines the main <xref:System.Windows.Forms.Form> for this context.</span></span> <span data-ttu-id="2de2c-160">Esta propiedad puede cambiar en cualquier momento.</span><span class="sxs-lookup"><span data-stu-id="2de2c-160">This property can change at any time.</span></span> <span data-ttu-id="2de2c-161">Si <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> no es invalidado, el bucle de mensajes del subproceso finaliza cuando el `mainForm` cierra el parámetro.</span><span class="sxs-lookup"><span data-stu-id="2de2c-161">If <xref:System.Windows.Forms.ApplicationContext.OnMainFormClosed%2A> is not overridden, the message loop of the thread terminates when the `mainForm` parameter closes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMainFormClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnMainFormClosed (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMainFormClosed(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ApplicationContext.OnMainFormClosed(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMainFormClosed (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMainFormClosed(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMainFormClosed : obj * EventArgs -&gt; unit&#xA;override this.OnMainFormClosed : obj * EventArgs -&gt; unit" Usage="applicationContext.OnMainFormClosed (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="2de2c-162">El objeto que ha generado el evento.</span><span class="sxs-lookup"><span data-stu-id="2de2c-162">The object that raised the event.</span></span></param>
        <param name="e"><span data-ttu-id="2de2c-163">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="2de2c-163">The <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="2de2c-164">Llama al método <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, que provoca el evento <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" />.</span><span class="sxs-lookup"><span data-stu-id="2de2c-164">Calls <see cref="M:System.Windows.Forms.ApplicationContext.ExitThreadCore" />, which raises the <see cref="E:System.Windows.Forms.ApplicationContext.ThreadExit" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-165">La implementación predeterminada de este método llama a <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="2de2c-165">The default implementation of this method calls <xref:System.Windows.Forms.ApplicationContext.ExitThreadCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ApplicationContext.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.ApplicationContext.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2de2c-166">Obtiene o establece un objeto que contiene datos sobre el control.</span><span class="sxs-lookup"><span data-stu-id="2de2c-166">Gets or sets an object that contains data about the control.</span></span></summary>
        <value><span data-ttu-id="2de2c-167"><see cref="T:System.Object" /> que contiene datos sobre el control.</span><span class="sxs-lookup"><span data-stu-id="2de2c-167">An <see cref="T:System.Object" /> that contains data about the control.</span></span> <span data-ttu-id="2de2c-168">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2de2c-168">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2de2c-169">Cualquier tipo derivado de la <xref:System.Object> clase puede asignarse a esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="2de2c-169">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="2de2c-170">Si el <xref:System.Windows.Forms.ApplicationContext.Tag%2A> propiedad se establece mediante el Diseñador de Windows Forms, se puede asignar solo texto.</span><span class="sxs-lookup"><span data-stu-id="2de2c-170">If the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="2de2c-171">Un uso común para el <xref:System.Windows.Forms.ApplicationContext.Tag%2A> propiedad consiste en almacenar datos estrechamente relacionados con el control.</span><span class="sxs-lookup"><span data-stu-id="2de2c-171">A common use for the <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="2de2c-172">Por ejemplo, si tiene un control que muestra información sobre un cliente, podría almacenar un <xref:System.Data.DataSet> que contiene el historial de pedidos del cliente en ese control <xref:System.Windows.Forms.ApplicationContext.Tag%2A> propiedad, por lo que pueden obtener acceso a los datos rápidamente.</span><span class="sxs-lookup"><span data-stu-id="2de2c-172">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.ApplicationContext.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThreadExit">
      <MemberSignature Language="C#" Value="public event EventHandler ThreadExit;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ThreadExit" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ApplicationContext.ThreadExit" />
      <MemberSignature Language="VB.NET" Value="Public Event ThreadExit As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ThreadExit;" />
      <MemberSignature Language="F#" Value="member this.ThreadExit : EventHandler " Usage="member this.ThreadExit : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2de2c-173">Se produce cuando el bucle de mensajes del subproceso debe terminar mediante una llamada a <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span><span class="sxs-lookup"><span data-stu-id="2de2c-173">Occurs when the message loop of the thread should be terminated, by calling <see cref="M:System.Windows.Forms.ApplicationContext.ExitThread" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2de2c-174">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="2de2c-174">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="2de2c-175">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.ApplicationContext.ThreadExit> eventos.</span><span class="sxs-lookup"><span data-stu-id="2de2c-175">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span> <span data-ttu-id="2de2c-176">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="2de2c-176">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="2de2c-177">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="2de2c-177">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="2de2c-178">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia del tipo <xref:System.Windows.Forms.ApplicationContext> denominado `ApplicationContext1`.</span><span class="sxs-lookup"><span data-stu-id="2de2c-178">To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.ApplicationContext> named `ApplicationContext1`.</span></span> <span data-ttu-id="2de2c-179">A continuación, asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.ApplicationContext.ThreadExit> eventos.</span><span class="sxs-lookup"><span data-stu-id="2de2c-179">Then ensure that the event handler is associated with the <xref:System.Windows.Forms.ApplicationContext.ThreadExit> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#75](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#75)]
 [!code-vb[System.Windows.Forms.EventExamples#75](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
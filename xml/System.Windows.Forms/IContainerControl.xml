<Type Name="IContainerControl" FullName="System.Windows.Forms.IContainerControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="09aedb94b0eeb3a5525d04ab7f76aa531bd38fa6" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37510935" /></Metadata><TypeSignature Language="C#" Value="public interface IContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContainerControl" />
  <TypeSignature Language="F#" Value="type IContainerControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="573c9-101">Proporciona la funcionalidad para un control que va a actuar como primario de otros controles.</span><span class="sxs-lookup"><span data-stu-id="573c9-101">Provides the functionality for a control to act as a parent for other controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="573c9-102">El ejemplo siguiente se hereda de la <xref:System.Windows.Forms.ScrollableControl> clase e implementa el <xref:System.Windows.Forms.IContainerControl> interfaz.</span><span class="sxs-lookup"><span data-stu-id="573c9-102">The following example inherits from the <xref:System.Windows.Forms.ScrollableControl> class and implements the <xref:System.Windows.Forms.IContainerControl> interface.</span></span> <span data-ttu-id="573c9-103">Se agrega a la implementación del <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> propiedad y el <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="573c9-103">Implementation is added to the <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> property and the <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> method.</span></span>  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="573c9-104"><para>Implemente esta interfaz en clases que se desean relacionar una colección de controles. Los miembros de esta interfaz permiten activar un control secundario, o para determinar qué control está activo actualmente. Cuando se implementa en una clase, <see cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" /> toma un <see cref="T:System.Windows.Forms.Control" /> como un parámetro y activa el control especificado. El <see cref="P:System.Windows.Forms.IContainerControl.ActiveControl" /> propiedad activa o recupera el control que está activo.  En escenarios más comunes, no es necesario implementar esta interfaz directamente. Por ejemplo, si crea un proyecto de biblioteca de controles de Windows, Visual Studio genera una clase inicial para usted. Clase que se hereda de la <see cref="T:System.Windows.Forms.UserControl" /> (clase), y <see cref="T:System.Windows.Forms.UserControl" /> implementa <see cref="T:System.Windows.Forms.IContainerControl" /> para usted.</para></span><span class="sxs-lookup"><span data-stu-id="573c9-104"><para>Implement this interface in classes that you want to parent a collection of controls. The members of this interface allow you to activate a child control, or determine which control is currently active. When implemented in a class, <see cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" /> takes a <see cref="T:System.Windows.Forms.Control" /> as a parameter and activates the specified control. The <see cref="P:System.Windows.Forms.IContainerControl.ActiveControl" /> property activates or retrieves the control that is active.  In most common scenarios, you do not need to directly implement this interface. For example, if you create a Windows Control Library project, Visual Studio generates an initial class for you. That class inherits from the <see cref="T:System.Windows.Forms.UserControl" /> class, and <see cref="T:System.Windows.Forms.UserControl" /> implements <see cref="T:System.Windows.Forms.IContainerControl" /> for you.</para></span></span></block>
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.Windows.Forms.Control" />
  </Docs>
  <Members>
    <Member MemberName="ActivateControl">
      <MemberSignature Language="C#" Value="public bool ActivateControl (System.Windows.Forms.Control active);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ActivateControl(class System.Windows.Forms.Control active) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateControl (active As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ActivateControl(System::Windows::Forms::Control ^ active);" />
      <MemberSignature Language="F#" Value="abstract member ActivateControl : System.Windows.Forms.Control -&gt; bool" Usage="iContainerControl.ActivateControl active" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="active" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="active"><span data-ttu-id="573c9-105"><see cref="T:System.Windows.Forms.Control" /> que se está activando.</span><span class="sxs-lookup"><span data-stu-id="573c9-105">The <see cref="T:System.Windows.Forms.Control" /> being activated.</span></span></param>
        <summary><span data-ttu-id="573c9-106">Activa un control especificado.</span><span class="sxs-lookup"><span data-stu-id="573c9-106">Activates a specified control.</span></span></summary>
        <returns><span data-ttu-id="573c9-107"><see langword="true" /> si el control se activa correctamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="573c9-107"><see langword="true" /> if the control is successfully activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="573c9-108">El ejemplo siguiente se hereda de la <xref:System.Windows.Forms.ScrollableControl> clase e implementa el <xref:System.Windows.Forms.IContainerControl> interfaz.</span><span class="sxs-lookup"><span data-stu-id="573c9-108">The following example inherits from the <xref:System.Windows.Forms.ScrollableControl> class and implements the <xref:System.Windows.Forms.IContainerControl> interface.</span></span> <span data-ttu-id="573c9-109">Se agrega a la implementación del <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> propiedad y el <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="573c9-109">Implementation is added to the <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> property and the <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> method.</span></span>  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="573c9-110"><para>Cuando se implementa en una clase, este método activa especificado <see cref="T:System.Windows.Forms.Control" />. El control debe ser un elemento secundario del control contenedor.</para></span><span class="sxs-lookup"><span data-stu-id="573c9-110"><para>When implemented in a class, this method activates the specified <see cref="T:System.Windows.Forms.Control" />. The control must be a child of the container control.</para></span></span></block>
        <altmember cref="P:System.Windows.Forms.IContainerControl.ActiveControl" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="ActiveControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control ActiveControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control ActiveControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ ActiveControl { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveControl : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="573c9-111">Obtiene o establece el control que está activo en el control contenedor.</span><span class="sxs-lookup"><span data-stu-id="573c9-111">Gets or sets the control that is active on the container control.</span></span></summary>
        <value><span data-ttu-id="573c9-112"><see cref="T:System.Windows.Forms.Control" /> que está activo actualmente en el control contenedor.</span><span class="sxs-lookup"><span data-stu-id="573c9-112">The <see cref="T:System.Windows.Forms.Control" /> that is currently active on the container control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="573c9-113">El ejemplo siguiente se hereda de la <xref:System.Windows.Forms.ScrollableControl> clase e implementa el <xref:System.Windows.Forms.IContainerControl> interfaz.</span><span class="sxs-lookup"><span data-stu-id="573c9-113">The following example inherits from the <xref:System.Windows.Forms.ScrollableControl> class and implements the <xref:System.Windows.Forms.IContainerControl> interface.</span></span> <span data-ttu-id="573c9-114">Se agrega a la implementación del <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> propiedad y el <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> método.</span><span class="sxs-lookup"><span data-stu-id="573c9-114">Implementation is added to the <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> property and the <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> method.</span></span>  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="573c9-115"><para>Cuando se implementa en una clase, esta propiedad activa o recupera el control activo en el control contenedor.</para></span><span class="sxs-lookup"><span data-stu-id="573c9-115"><para>When implemented in a class, this property activates or retrieves the active control on the container control.</para></span></span></block>
        <altmember cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="Control" FullName="System.Windows.Forms.Control">
  <Metadata><Meta Name="ms.openlocfilehash" Value="15f0697e24140411c608f9096381b11c01294fca" /><Meta Name="ms.sourcegitcommit" Value="f61362e4134a78bac27d2c8136823a467216f4ab" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/15/2019" /><Meta Name="ms.locfileid" Value="65629455" /></Metadata><TypeSignature Language="C#" Value="public class Control : System.ComponentModel.Component, IDisposable, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IBindableComponent, System.Windows.Forms.IDropTarget, System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Control extends System.ComponentModel.Component implements class System.ComponentModel.IComponent, class System.ComponentModel.ISynchronizeInvoke, class System.IDisposable, class System.Windows.Forms.IBindableComponent, class System.Windows.Forms.IDropTarget, class System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Control" />
  <TypeSignature Language="VB.NET" Value="Public Class Control&#xA;Inherits Component&#xA;Implements IBindableComponent, IDisposable, IDropTarget, ISynchronizeInvoke, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class Control : System::ComponentModel::Component, IDisposable, System::ComponentModel::ISynchronizeInvoke, System::Windows::Forms::IBindableComponent, System::Windows::Forms::IDropTarget, System::Windows::Forms::IWin32Window" />
  <TypeSignature Language="F#" Value="type Control = class&#xA;    inherit Component&#xA;    interface IDropTarget&#xA;    interface ISynchronizeInvoke&#xA;    interface IWin32Window&#xA;    interface IComponent&#xA;    interface IDisposable&#xA;    interface IBindableComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISynchronizeInvoke</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IBindableComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IDropTarget</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c1553-101">Define la clase base para los controles, que son componentes con una representación visual.</span><span class="sxs-lookup"><span data-stu-id="c1553-101">Defines the base class for controls, which are components with visual representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-102">Para crear su propia clase de control, herede de la <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> clases, o desde las otras formas de Windows siempre y cuando los controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-102">To create your own control class, inherit from the <xref:System.Windows.Forms.UserControl>, <xref:System.Windows.Forms.Control> classes, or from the other Windows Forms provided controls.</span></span> <span data-ttu-id="c1553-103">Para obtener más información sobre la creación de controles personalizados, vea [Developing Custom Controls de Windows Forms con .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-103">For more information about authoring custom controls, see [Developing Custom Windows Forms Controls with the .NET Framework](~/docs/framework/winforms/controls/developing-custom-windows-forms-controls.md).</span></span>  
  
 <span data-ttu-id="c1553-104">La <xref:System.Windows.Forms.Control> clase implementa la funcionalidad básica requerida por las clases que muestran información al usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-104">The <xref:System.Windows.Forms.Control> class implements very basic functionality required by classes that display information to the user.</span></span> <span data-ttu-id="c1553-105">Controla la entrada del usuario a través del teclado y dispositivos señaladores.</span><span class="sxs-lookup"><span data-stu-id="c1553-105">It handles user input through the keyboard and pointing devices.</span></span> <span data-ttu-id="c1553-106">Controla el enrutamiento de mensajes y seguridad.</span><span class="sxs-lookup"><span data-stu-id="c1553-106">It handles message routing and security.</span></span> <span data-ttu-id="c1553-107">Define los límites de un control (posición y tamaño), aunque no implementa la pintura.</span><span class="sxs-lookup"><span data-stu-id="c1553-107">It defines the bounds of a control (its position and size), although it does not implement painting.</span></span> <span data-ttu-id="c1553-108">Proporciona un identificador de ventana (`hWnd`).</span><span class="sxs-lookup"><span data-stu-id="c1553-108">It provides a window handle (`hWnd`).</span></span>  
  
 <span data-ttu-id="c1553-109">Controles de formularios Windows Forms usan las propiedades de ambiente para que los controles secundarios pueden aparecer como en su entorno circundante.</span><span class="sxs-lookup"><span data-stu-id="c1553-109">Windows Forms controls use ambient properties so child controls can appear like their surrounding environment.</span></span> <span data-ttu-id="c1553-110">Un *propiedad de ambiente* es una propiedad de control que, si no establece, se recupera desde el control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-110">An *ambient property* is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="c1553-111">Si el control no tiene un <xref:System.Windows.Forms.Control.Parent%2A>y la propiedad no está establecida, el control intenta determinar el valor de la propiedad de ambiente a través de la <xref:System.Windows.Forms.Control.Site%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-111">If the control does not have a <xref:System.Windows.Forms.Control.Parent%2A>, and the property is not set, the control attempts to determine the value of the ambient property through the <xref:System.Windows.Forms.Control.Site%2A> property.</span></span> <span data-ttu-id="c1553-112">Si el control no está ubicado, si el sitio no es compatible con las propiedades de ambiente, o si la propiedad no está establecida en el <xref:System.Windows.Forms.AmbientProperties>, el control utiliza sus propios valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="c1553-112">If the control is not sited, if the site does not support ambient properties, or if the property is not set on the <xref:System.Windows.Forms.AmbientProperties>, the control uses its own default values.</span></span> <span data-ttu-id="c1553-113">Normalmente, una propiedad de ambiente representa una característica de un control, como <xref:System.Windows.Forms.Control.BackColor%2A>, que se comunica con un control secundario.</span><span class="sxs-lookup"><span data-stu-id="c1553-113">Typically, an ambient property represents a characteristic of a control, such as <xref:System.Windows.Forms.Control.BackColor%2A>, that is communicated to a child control.</span></span> <span data-ttu-id="c1553-114">Por ejemplo, un <xref:System.Windows.Forms.Button> tendrá el mismo <xref:System.Windows.Forms.Control.BackColor%2A> como su elemento primario <xref:System.Windows.Forms.Form> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-114">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="c1553-115">Las propiedades de ambiente proporcionadas por el <xref:System.Windows.Forms.Control> clase incluyen: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, y <xref:System.Windows.Forms.Control.RightToLeft%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-115">Ambient properties provided by the <xref:System.Windows.Forms.Control> class include: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>, and <xref:System.Windows.Forms.Control.RightToLeft%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-116">Para que la aplicación de Windows Forms admiten estilos visuales, asegúrese de establecer el <xref:System.Windows.Forms.FlatStyle> propiedad `System` e incluir un manifiesto con el archivo ejecutable.</span><span class="sxs-lookup"><span data-stu-id="c1553-116">To make your Windows Forms application support visual styles, be sure to set the <xref:System.Windows.Forms.FlatStyle> property to `System` and include a manifest with your executable.</span></span> <span data-ttu-id="c1553-117">Un manifiesto es un archivo XML que se incluye como un recurso en el ejecutable de aplicación o como un archivo independiente que se encuentra en el mismo directorio que el archivo ejecutable.</span><span class="sxs-lookup"><span data-stu-id="c1553-117">A manifest is an XML file that is included either as a resource within your application executable or as a separate file that resides in the same directory as the executable file.</span></span> <span data-ttu-id="c1553-118">Para obtener un ejemplo de manifiesto, vea la sección ejemplo de la <xref:System.Windows.Forms.FlatStyle> enumeración.</span><span class="sxs-lookup"><span data-stu-id="c1553-118">For an example of a manifest, see the Example section of the <xref:System.Windows.Forms.FlatStyle> enumeration.</span></span> <span data-ttu-id="c1553-119">Para obtener más información sobre cómo usar los estilos visuales, vea [estilos visuales](https://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).</span><span class="sxs-lookup"><span data-stu-id="c1553-119">For more information about using visual styles, see [Visual Styles](https://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).</span></span>  
  
 <span data-ttu-id="c1553-120">Windows Forms tiene compatibilidad integrada para accesibilidad y proporciona información acerca de la aplicación que le permite trabajar con aplicaciones cliente de accesibilidad, como utilidades para aumentar y revisar la pantalla, la voz de las utilidades de entrada, en la pantalla teclados, dispositivos de entrada alternativos y utilidades de mejora del teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-120">Windows Forms has accessibility support built in, and provides information about your application that enables it to work with accessibility client applications such as screen enlarger and reviewer utilities, voice input utilities, on-screen keyboards, alternative input devices, and keyboard enhancement utilities.</span></span> <span data-ttu-id="c1553-121">A veces desea proporcionar información adicional a las aplicaciones cliente de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-121">Sometimes you will want to provide additional information to accessibility client applications.</span></span> <span data-ttu-id="c1553-122">Hay dos maneras de proporcionar esta información adicional.</span><span class="sxs-lookup"><span data-stu-id="c1553-122">There are two ways of providing this additional information.</span></span> <span data-ttu-id="c1553-123">Puede establecer el <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, y <xref:System.Windows.Forms.Control.AccessibleRole%2A> los valores de propiedad que se notificará a las aplicaciones cliente de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-123">You can set the <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> property values, which will be reported to accessibility client applications.</span></span> <span data-ttu-id="c1553-124">Este método se utiliza normalmente para proporcionar información de accesibilidad limitado de controles existentes.</span><span class="sxs-lookup"><span data-stu-id="c1553-124">This method is typically used to provide limited accessibility information for existing controls.</span></span> <span data-ttu-id="c1553-125">Como alternativa, puede escribir su propia clase que deriva de la <xref:System.Windows.Forms.AccessibleObject> o <xref:System.Windows.Forms.Control.ControlAccessibleObject> clases, proporcionar tanta información de accesibilidad según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-125">Alternatively, you can write your own class deriving from the <xref:System.Windows.Forms.AccessibleObject> or <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes, providing as much accessibility information as needed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-126">Para mantener un rendimiento óptimo, no establezca el tamaño de un control en su constructor.</span><span class="sxs-lookup"><span data-stu-id="c1553-126">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="c1553-127">El método preferido es invalidar el <xref:System.Windows.Forms.Control.DefaultSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-127">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-128">¿Agregar enlaces de datos para un <xref:System.Windows.Forms.Control> en su constructor.</span><span class="sxs-lookup"><span data-stu-id="c1553-128">Do not add data bindings for a <xref:System.Windows.Forms.Control> in its constructor.</span></span> <span data-ttu-id="c1553-129">Si lo hace, se producirán errores en la generación de código y puede provocar un comportamiento no deseado.</span><span class="sxs-lookup"><span data-stu-id="c1553-129">Doing so will cause errors in code generation and can cause unwanted behavior.</span></span>  
  
 <span data-ttu-id="c1553-130">La mayoría de los controles en el <xref:System.Windows.Forms> espacio de nombres use el control común de Windows subyacente como base para compilar en.</span><span class="sxs-lookup"><span data-stu-id="c1553-130">The majority of the controls in the <xref:System.Windows.Forms> namespace use the underlying Windows common control as a base to build on.</span></span> <span data-ttu-id="c1553-131">Para obtener más información acerca de los controles comunes de Windows, consulte [referencia de Control General](https://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).</span><span class="sxs-lookup"><span data-stu-id="c1553-131">For more information about the Windows common controls, see [General Control Reference](https://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).</span></span>  
  
 <span data-ttu-id="c1553-132">Para identificar los controles de Windows Forms desde un proceso independiente, use un estándar `SendMessage` llamada para pasar el mensaje WM_GETCONTROLNAME.</span><span class="sxs-lookup"><span data-stu-id="c1553-132">To identify Windows Forms controls from a separate process, use a standard `SendMessage` call to pass the WM_GETCONTROLNAME message.</span></span> <span data-ttu-id="c1553-133">WM_GETCONTROLNAME es independiente del idioma y la jerarquía de Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-133">WM_GETCONTROLNAME is independent of the language and Windows hierarchy.</span></span> <span data-ttu-id="c1553-134">Para obtener más información, vea el tema "Recomienda soluciones para Windows Forms" en[automatización de Windows Forms](https://msdn.microsoft.com/library/ms996405.aspx).</span><span class="sxs-lookup"><span data-stu-id="c1553-134">For more information, see the "Recommended Solution for Windows Forms" topic in[Automating Windows Forms](https://msdn.microsoft.com/library/ms996405.aspx).</span></span>  
  
 <span data-ttu-id="c1553-135">Use el <xref:System.Windows.Forms.Control.InvokeRequired%2A> propiedad para sincronizar el acceso al control desde varios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-135">Use the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property to synchronize access to the control from multiple threads.</span></span> <span data-ttu-id="c1553-136">Para obtener más información acerca de los controles de Windows Forms multiproceso, vea [Cómo: Realizar llamadas seguras para subprocesos a controles de formularios Windows Forms](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</span><span class="sxs-lookup"><span data-stu-id="c1553-136">For more information about multithreaded Windows Forms controls, see [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md)</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="c1553-137">Solo los miembros siguientes son seguros para subprocesos: <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />, <see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />, <see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />, <see cref="P:System.Windows.Forms.Control.InvokeRequired" />, y <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> si ya se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-137">Only the following members are thread safe: <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />, <see cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />, <see cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />, <see cref="P:System.Windows.Forms.Control.InvokeRequired" />, and <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> if the handle for the control has already been created.</span></span> <span data-ttu-id="c1553-138">Una llamada a <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> antes de que se ha creado el identificador del control en un subproceso en segundo plano puede provocar no válidas entre las llamadas de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-138">Calling <see cref="M:System.Windows.Forms.Control.CreateGraphics" /> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span></threadsafe>
    <altmember cref="T:System.Windows.Forms.Form" />
    <altmember cref="T:System.Windows.Forms.ScrollableControl" />
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.ComponentModel.Component" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-139">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-139">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-140">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Control" /> con los valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="c1553-140">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with default settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-141">La <xref:System.Windows.Forms.Control> clase es la clase base para todos los controles utilizados en una aplicación de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-141">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="c1553-142">Puesto que esta clase no se utiliza normalmente para crear una instancia de la clase, este constructor no se suele llamar directamente, pero en su lugar, se llama a una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-142">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : string -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="c1553-143">Texto que muestra el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-143">The text displayed by the control.</span></span></param>
        <summary><span data-ttu-id="c1553-144">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Control" /> con un texto específico.</span><span class="sxs-lookup"><span data-stu-id="c1553-144">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-145">La <xref:System.Windows.Forms.Control> clase es la clase base para todos los controles utilizados en una aplicación de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-145">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="c1553-146">Puesto que esta clase no se utiliza normalmente para crear una instancia de la clase, este constructor no se suele llamar directamente, pero en su lugar, se llama a una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-146">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="c1553-147">Esta versión de la <xref:System.Windows.Forms.Control.%23ctor%2A> constructor establece inicial <xref:System.Windows.Forms.Control.Text%2A> valor de propiedad para el `text` el valor del parámetro.</span><span class="sxs-lookup"><span data-stu-id="c1553-147">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (System.Windows.Forms.Control parent, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control parent, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Control, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::Windows::Forms::Control ^ parent, System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : System.Windows.Forms.Control * string -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (parent, text)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Forms.Control" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="c1553-148"><see cref="T:System.Windows.Forms.Control" /> que es el elemento primario del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-148">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control.</span></span></param>
        <param name="text"><span data-ttu-id="c1553-149">Texto que muestra el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-149">The text displayed by the control.</span></span></param>
        <summary><span data-ttu-id="c1553-150">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Control" /> como control secundario, con un texto específico.</span><span class="sxs-lookup"><span data-stu-id="c1553-150">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-151">La <xref:System.Windows.Forms.Control> clase es la clase base para todos los controles utilizados en una aplicación de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-151">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="c1553-152">Puesto que esta clase no se utiliza normalmente para crear una instancia de la clase, este constructor no se suele llamar directamente, pero en su lugar, se llama a una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-152">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="c1553-153">Esta versión de la <xref:System.Windows.Forms.Control.%23ctor%2A> constructor establece inicial <xref:System.Windows.Forms.Control.Text%2A> valor de propiedad para el `text` el valor del parámetro.</span><span class="sxs-lookup"><span data-stu-id="c1553-153">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="c1553-154">El constructor también agrega el control para el control primario <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="c1553-154">The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (string text, int left, int top, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 left, int32 top, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, left As Integer, top As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::String ^ text, int left, int top, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : string * int * int * int * int -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (text, left, top, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="c1553-155">Texto que muestra el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-155">The text displayed by the control.</span></span></param>
        <param name="left"><span data-ttu-id="c1553-156">Posición <see cref="P:System.Drawing.Point.X" /> del control, en píxeles, desde el borde izquierdo del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-156">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container.</span></span> <span data-ttu-id="c1553-157">El valor se asigna a la propiedad <see cref="P:System.Windows.Forms.Control.Left" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-157">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property.</span></span></param>
        <param name="top"><span data-ttu-id="c1553-158">Posición <see cref="P:System.Drawing.Point.Y" /> del control, en píxeles, desde el borde superior del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-158">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container.</span></span> <span data-ttu-id="c1553-159">El valor se asigna a la propiedad <see cref="P:System.Windows.Forms.Control.Top" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-159">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property.</span></span></param>
        <param name="width"><span data-ttu-id="c1553-160">Ancho del control, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-160">The width of the control, in pixels.</span></span> <span data-ttu-id="c1553-161">El valor se asigna a la propiedad <see cref="P:System.Windows.Forms.Control.Width" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-161">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property.</span></span></param>
        <param name="height"><span data-ttu-id="c1553-162">Alto del control, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-162">The height of the control, in pixels.</span></span> <span data-ttu-id="c1553-163">El valor se asigna a la propiedad <see cref="P:System.Windows.Forms.Control.Height" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-163">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property.</span></span></param>
        <summary><span data-ttu-id="c1553-164">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Control" /> con un texto, tamaño y ubicación específicos.</span><span class="sxs-lookup"><span data-stu-id="c1553-164">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class with specific text, size, and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-165">La <xref:System.Windows.Forms.Control> clase es la clase base para todos los controles utilizados en una aplicación de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-165">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="c1553-166">Puesto que esta clase no se utiliza normalmente para crear una instancia de la clase, este constructor no se suele llamar directamente, pero en su lugar, se llama a una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-166">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="c1553-167">Esta versión de la <xref:System.Windows.Forms.Control.%23ctor%2A> constructor establece inicial <xref:System.Windows.Forms.Control.Text%2A> valor de propiedad para el `text` el valor del parámetro.</span><span class="sxs-lookup"><span data-stu-id="c1553-167">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="c1553-168">Inicial <xref:System.Windows.Forms.Control.Size%2A> y <xref:System.Windows.Forms.Control.Location%2A> del control están determinados por la `left`, `top`, `width` y `height` los valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="c1553-168">The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-169">Para mantener un rendimiento óptimo, no establezca el tamaño de un control en su constructor.</span><span class="sxs-lookup"><span data-stu-id="c1553-169">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="c1553-170">El método preferido es invalidar el <xref:System.Windows.Forms.Control.DefaultSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-170">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Control (System.Windows.Forms.Control parent, string text, int left, int top, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Control parent, string text, int32 left, int32 top, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parent As Control, text As String, left As Integer, top As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Control(System::Windows::Forms::Control ^ parent, System::String ^ text, int left, int top, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.Control : System.Windows.Forms.Control * string * int * int * int * int -&gt; System.Windows.Forms.Control" Usage="new System.Windows.Forms.Control (parent, text, left, top, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parent" Type="System.Windows.Forms.Control" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="c1553-171"><see cref="T:System.Windows.Forms.Control" /> que es el elemento primario del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-171">The <see cref="T:System.Windows.Forms.Control" /> to be the parent of the control.</span></span></param>
        <param name="text"><span data-ttu-id="c1553-172">Texto que muestra el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-172">The text displayed by the control.</span></span></param>
        <param name="left"><span data-ttu-id="c1553-173">Posición <see cref="P:System.Drawing.Point.X" /> del control, en píxeles, desde el borde izquierdo del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-173">The <see cref="P:System.Drawing.Point.X" /> position of the control, in pixels, from the left edge of the control's container.</span></span> <span data-ttu-id="c1553-174">El valor se asigna a la propiedad <see cref="P:System.Windows.Forms.Control.Left" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-174">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Left" /> property.</span></span></param>
        <param name="top"><span data-ttu-id="c1553-175">Posición <see cref="P:System.Drawing.Point.Y" /> del control, en píxeles, desde el borde superior del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-175">The <see cref="P:System.Drawing.Point.Y" /> position of the control, in pixels, from the top edge of the control's container.</span></span> <span data-ttu-id="c1553-176">El valor se asigna a la propiedad <see cref="P:System.Windows.Forms.Control.Top" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-176">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Top" /> property.</span></span></param>
        <param name="width"><span data-ttu-id="c1553-177">Ancho del control, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-177">The width of the control, in pixels.</span></span> <span data-ttu-id="c1553-178">El valor se asigna a la propiedad <see cref="P:System.Windows.Forms.Control.Width" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-178">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Width" /> property.</span></span></param>
        <param name="height"><span data-ttu-id="c1553-179">Alto del control, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-179">The height of the control, in pixels.</span></span> <span data-ttu-id="c1553-180">El valor se asigna a la propiedad <see cref="P:System.Windows.Forms.Control.Height" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-180">The value is assigned to the <see cref="P:System.Windows.Forms.Control.Height" /> property.</span></span></param>
        <summary><span data-ttu-id="c1553-181">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.Control" /> como control secundario, con un texto, tamaño y ubicación específicos.</span><span class="sxs-lookup"><span data-stu-id="c1553-181">Initializes a new instance of the <see cref="T:System.Windows.Forms.Control" /> class as a child control, with specific text, size, and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-182">La <xref:System.Windows.Forms.Control> clase es la clase base para todos los controles utilizados en una aplicación de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-182">The <xref:System.Windows.Forms.Control> class is the base class for all controls used in a Windows Forms application.</span></span> <span data-ttu-id="c1553-183">Puesto que esta clase no se utiliza normalmente para crear una instancia de la clase, este constructor no se suele llamar directamente, pero en su lugar, se llama a una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-183">Because this class is not typically used to create an instance of the class, this constructor is typically not called directly but is instead called by a derived class.</span></span>  
  
 <span data-ttu-id="c1553-184">Esta versión de la <xref:System.Windows.Forms.Control.%23ctor%2A> constructor establece inicial <xref:System.Windows.Forms.Control.Text%2A> valor de propiedad para el `text` el valor del parámetro.</span><span class="sxs-lookup"><span data-stu-id="c1553-184">This version of the <xref:System.Windows.Forms.Control.%23ctor%2A> constructor sets the initial <xref:System.Windows.Forms.Control.Text%2A> property value to the `text` parameter value.</span></span> <span data-ttu-id="c1553-185">El constructor también agrega el control para el control primario <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="c1553-185">The constructor also adds the control to the parent control's <xref:System.Windows.Forms.Control.ControlCollection>.</span></span> <span data-ttu-id="c1553-186">Inicial <xref:System.Windows.Forms.Control.Size%2A> y <xref:System.Windows.Forms.Control.Location%2A> del control están determinados por la `left`, `top`, `width` y `height` los valores de parámetro.</span><span class="sxs-lookup"><span data-stu-id="c1553-186">The initial <xref:System.Windows.Forms.Control.Size%2A> and <xref:System.Windows.Forms.Control.Location%2A> of the control are determined by the `left`, `top`, `width` and `height` parameter values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-187">Para mantener un rendimiento óptimo, no establezca el tamaño de un control en su constructor.</span><span class="sxs-lookup"><span data-stu-id="c1553-187">To maintain better performance, do not set the size of a control in its constructor.</span></span> <span data-ttu-id="c1553-188">El método preferido es invalidar el <xref:System.Windows.Forms.Control.DefaultSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-188">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AccessibilityNotifyClients">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-189">Notifica los objetos <see cref="T:System.Windows.Forms.AccessibleEvents" /> a las aplicaciones cliente de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-189">Notifies the accessibility client applications of <see cref="T:System.Windows.Forms.AccessibleEvents" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AccessibilityNotifyClients">
      <MemberSignature Language="C#" Value="protected internal void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, childID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int childID);" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNotifyClients : System.Windows.Forms.AccessibleEvents * int -&gt; unit" Usage="control.AccessibilityNotifyClients (accEvent, childID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accEvent" Type="System.Windows.Forms.AccessibleEvents" />
        <Parameter Name="childID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accEvent"><span data-ttu-id="c1553-190"><see cref="T:System.Windows.Forms.AccessibleEvents" /> del que se va a notificar a las aplicaciones cliente de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-190">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</span></span></param>
        <param name="childID"><span data-ttu-id="c1553-191"><see cref="T:System.Windows.Forms.Control" /> secundario al que se notificará el evento accesible.</span><span class="sxs-lookup"><span data-stu-id="c1553-191">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</span></span></param>
        <summary><span data-ttu-id="c1553-192">Notifica a las aplicaciones cliente de accesibilidad los objetos <see cref="T:System.Windows.Forms.AccessibleEvents" /> especificados del control secundario especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-192">Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-193">Debe llamar a la <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType> método para cada <xref:System.Windows.Forms.AccessibleEvents> son las aplicaciones cliente de accesibilidad para recibir una notificación de.</span><span class="sxs-lookup"><span data-stu-id="c1553-193">You must call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=nameWithType> method for each <xref:System.Windows.Forms.AccessibleEvents> the accessibility client applications are to be notified of.</span></span> <span data-ttu-id="c1553-194">El <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> normalmente se llama al método cuando una propiedad se establece o desde un controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-194">The <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method is typically called when a property is set or from within an event handler.</span></span> <span data-ttu-id="c1553-195">Por ejemplo, podría llamar a la <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> método y pase un <xref:System.Windows.Forms.AccessibleEvents> valor de `Hide` desde dentro del controlador de eventos para el <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-195">For example, you might call the <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> method and pass in an <xref:System.Windows.Forms.AccessibleEvents> value of `Hide` from within the event handler for the <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=nameWithType> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-196">En el ejemplo de código siguiente se muestra la creación de un gráfico de accesibilidad para controlar, mediante el <xref:System.Windows.Forms.AccessibleObject> y <xref:System.Windows.Forms.Control.ControlAccessibleObject> clases para exponer información accesible.</span><span class="sxs-lookup"><span data-stu-id="c1553-196">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c1553-197">El control traza dos curvas junto con una leyenda.</span><span class="sxs-lookup"><span data-stu-id="c1553-197">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c1553-198">El `ChartControlAccessibleObject` (clase), que se deriva de `ControlAccessibleObject`, se usa en el <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> método para proporcionar información personalizada accesible para el control chart.</span><span class="sxs-lookup"><span data-stu-id="c1553-198">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c1553-199">Dado que la leyenda del gráfico no es un real <xref:System.Windows.Forms.Control> -control basado en, pero en su lugar se dibuja mediante el control chart, lo hace no ninguna información accesible.</span><span class="sxs-lookup"><span data-stu-id="c1553-199">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="c1553-200">Por este motivo, el `ChartControlAccessibleObject` clase invalida el <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> método para devolver el `CurveLegendAccessibleObject` que representa la información accesible de cada parte de la leyenda.</span><span class="sxs-lookup"><span data-stu-id="c1553-200">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c1553-201">Cuando una aplicación accesible para usa este control, el control puede proporcionar la información de acceso necesaria.</span><span class="sxs-lookup"><span data-stu-id="c1553-201">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c1553-202">Este fragmento de código se muestra cómo llamar el <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-202">This code excerpt demonstrates calling the <xref:System.Windows.Forms.Control.AccessibilityNotifyClients%2A> method.</span></span> <span data-ttu-id="c1553-203">Consulte la <xref:System.Windows.Forms.AccessibleObject> información general de clases para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-203">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#5)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#5)]
 [!code-vb[System.Windows.Forms.AccessibleObject#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleEvents" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNotifyClients">
      <MemberSignature Language="C#" Value="protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int objectID, int childID);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AccessibilityNotifyClients(valuetype System.Windows.Forms.AccessibleEvents accEvent, int32 objectID, int32 childID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AccessibilityNotifyClients (accEvent As AccessibleEvents, objectID As Integer, childID As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AccessibilityNotifyClients(System::Windows::Forms::AccessibleEvents accEvent, int objectID, int childID);" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNotifyClients : System.Windows.Forms.AccessibleEvents * int * int -&gt; unit" Usage="control.AccessibilityNotifyClients (accEvent, objectID, childID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accEvent" Type="System.Windows.Forms.AccessibleEvents" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="objectID" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="childID" Type="System.Int32" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="accEvent"><span data-ttu-id="c1553-204"><see cref="T:System.Windows.Forms.AccessibleEvents" /> del que se va a notificar a las aplicaciones cliente de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-204">The <see cref="T:System.Windows.Forms.AccessibleEvents" /> to notify the accessibility client applications of.</span></span></param>
        <param name="objectID"><span data-ttu-id="c1553-205">Identificador de <see cref="T:System.Windows.Forms.AccessibleObject" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-205">The identifier of the <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></param>
        <param name="childID"><span data-ttu-id="c1553-206"><see cref="T:System.Windows.Forms.Control" /> secundario al que se notificará el evento accesible.</span><span class="sxs-lookup"><span data-stu-id="c1553-206">The child <see cref="T:System.Windows.Forms.Control" /> to notify of the accessible event.</span></span></param>
        <summary><span data-ttu-id="c1553-207">Notifica a las aplicaciones cliente de accesibilidad los objetos <see cref="T:System.Windows.Forms.AccessibleEvents" /> especificados del control secundario especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-207">Notifies the accessibility client applications of the specified <see cref="T:System.Windows.Forms.AccessibleEvents" /> for the specified child control .</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Windows.Forms.Control.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-208">Obtiene <see cref="T:System.Windows.Forms.AccessibleObject" /> asignado al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-208">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></summary>
        <value><span data-ttu-id="c1553-209"><see cref="T:System.Windows.Forms.AccessibleObject" /> asignado al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-209">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-210">Para controlar la instancia devuelta por este método, reemplace el <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-210">To control the instance returned from this method, override the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.</span></span>  
  
 <span data-ttu-id="c1553-211">Si no hay ningún <xref:System.Windows.Forms.AccessibleObject> asignado al control en la actualidad, se crea una nueva instancia de uno.</span><span class="sxs-lookup"><span data-stu-id="c1553-211">If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-212">Para obtener o establecer el <xref:System.Windows.Forms.Control.AccessibilityObject%2A> propiedad, debe agregar una referencia a la `Accessibility` ensamblado instalado con el[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c1553-212">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="c1553-213">Para obtener más información sobre los objetos accesibles, vea [Active Accessibility](https://msdn.microsoft.com/library/windows/desktop/dd373592.aspx).</span><span class="sxs-lookup"><span data-stu-id="c1553-213">For more information about accessible objects, see [Active Accessibility](https://msdn.microsoft.com/library/windows/desktop/dd373592.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
        <altmember cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDefaultActionDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDefaultActionDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDefaultActionDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDefaultActionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDefaultActionDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDefaultActionDescription : string with get, set" Usage="System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-214">Obtiene o establece la descripción de la acción predeterminada del control que usan las aplicaciones cliente de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-214">Gets or sets the default action description of the control for use by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="c1553-215">Descripción de la acción predeterminada del control que usan las aplicaciones cliente de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-215">The default action description of the control for use by accessibility client applications.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-216">Un objeto <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> propiedad describe el método del objeto principal de manipulación de punto de vista del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-216">An object's <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> property describes the object's primary method of manipulation from the user's viewpoint.</span></span> <span data-ttu-id="c1553-217">Esta propiedad debe ser un verbo o una frase corta.</span><span class="sxs-lookup"><span data-stu-id="c1553-217">This property should be a verb or a short verb phrase.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-218">No todos los objetos tienen acciones predeterminadas y algunos pueden tener una acción predeterminada que está relacionado con su <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> propiedad, como se muestra en los ejemplos siguientes:</span><span class="sxs-lookup"><span data-stu-id="c1553-218">Not all objects have default actions, and some objects might have a default action that is related to its <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=nameWithType> property, such as in the following examples:</span></span>  
  
-   <span data-ttu-id="c1553-219">Una casilla activada tiene una acción predeterminada de "Desactivar" y un valor de "Activado".</span><span class="sxs-lookup"><span data-stu-id="c1553-219">A selected check box has a default action of "Uncheck" and a value of "Checked."</span></span>  
  
-   <span data-ttu-id="c1553-220">Una casilla desactivada tiene una acción predeterminada "Check" y un valor de "Desactivado".</span><span class="sxs-lookup"><span data-stu-id="c1553-220">A cleared check box has a default action of "Check" and a value of "Unchecked."</span></span>  
  
-   <span data-ttu-id="c1553-221">Un botón con la etiqueta "Imprimir" tiene una acción predeterminada "Press", sin ningún valor.</span><span class="sxs-lookup"><span data-stu-id="c1553-221">A button labeled "Print" has a default action of "Press," with no value.</span></span>  
  
-   <span data-ttu-id="c1553-222">Una etiqueta o un control de cuadro de texto que muestra "Printer" no tiene ninguna acción predeterminada, pero tendría un valor de "Impresora".</span><span class="sxs-lookup"><span data-stu-id="c1553-222">A label or a text box control that shows "Printer" has no default action, but would have a value of "Printer."</span></span>  
  
 <span data-ttu-id="c1553-223">Para obtener más información acerca de las propiedades de los objetos accesibles, vea [contenido de propiedades descriptivas](https://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span><span class="sxs-lookup"><span data-stu-id="c1553-223">For more information about properties of accessible objects, see [Content of Descriptive Properties](https://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.DefaultAction" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleDescription">
      <MemberSignature Language="C#" Value="public string AccessibleDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleDescription" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleDescription" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleDescription : string with get, set" Usage="System.Windows.Forms.Control.AccessibleDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-224">Obtiene o establece la descripción del control que las aplicaciones cliente de accesibilidad utilizan.</span><span class="sxs-lookup"><span data-stu-id="c1553-224">Gets or sets the description of the control used by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="c1553-225">Descripción del control que las aplicaciones cliente de accesibilidad utilizan.</span><span class="sxs-lookup"><span data-stu-id="c1553-225">The description of the control used by accessibility client applications.</span></span> <span data-ttu-id="c1553-226">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-226">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-227">Un objeto <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propiedad proporciona una descripción textual acerca de la apariencia de un objeto.</span><span class="sxs-lookup"><span data-stu-id="c1553-227">An object's <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property provides a textual description about an object's visual appearance.</span></span> <span data-ttu-id="c1553-228">La descripción se utiliza principalmente para proporcionar más contexto para los usuarios ciegos o con deficiencia visual, pero también se puede usar para búsqueda de contexto u otras aplicaciones.</span><span class="sxs-lookup"><span data-stu-id="c1553-228">The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.</span></span>  
  
 <span data-ttu-id="c1553-229">El <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propiedad es necesaria si la descripción no es obvia, o si es redundante en función del objeto <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, y <xref:System.Windows.Forms.AccessibleObject.Value%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c1553-229">The <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property is needed if the description is not obvious, or if it is redundant based on the object's <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, and <xref:System.Windows.Forms.AccessibleObject.Value%2A> properties.</span></span> <span data-ttu-id="c1553-230">Por ejemplo, un botón "Aceptar" no necesita información adicional, pero un botón que muestra una imagen de un cactus.</span><span class="sxs-lookup"><span data-stu-id="c1553-230">For example, a button with "OK" would not need additional information, but a button that shows a picture of a cactus would.</span></span> <span data-ttu-id="c1553-231">El <xref:System.Windows.Forms.Control.AccessibleName%2A>, y <xref:System.Windows.Forms.Control.AccessibleRole%2A> (y quizás <xref:System.Windows.Forms.AccessibleObject.Help%2A>) las propiedades del botón de cactus podrían describir su finalidad, pero la <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propiedad transmitiría información menos tangible, como "Botón que muestra una imagen de un cactus."</span><span class="sxs-lookup"><span data-stu-id="c1553-231">The <xref:System.Windows.Forms.Control.AccessibleName%2A>, and <xref:System.Windows.Forms.Control.AccessibleRole%2A> (and perhaps <xref:System.Windows.Forms.AccessibleObject.Help%2A>) properties for the cactus button would describe its purpose, but the <xref:System.Windows.Forms.Control.AccessibleDescription%2A> property would convey information that is less tangible, such as "A button that shows a picture of a cactus."</span></span>  
  
 <span data-ttu-id="c1553-232">Para obtener más información acerca de las propiedades de los objetos accesibles, vea [contenido de propiedades descriptivas](https://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span><span class="sxs-lookup"><span data-stu-id="c1553-232">For more information about properties of accessible objects, see [Content of Descriptive Properties](https://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-233">En el ejemplo de código siguiente se crea una instancia de un <xref:System.Windows.Forms.CheckBox> clase derivada, `MyCheckBox`, le asigna un <xref:System.Drawing.Image> a su <xref:System.Windows.Forms.ButtonBase.Image%2A> propiedad y los conjuntos de la <xref:System.Windows.Forms.Control.AccessibleName%2A> y <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propiedades, porque el <xref:System.Windows.Forms.Control.Text%2A> propiedad es `null`.</span><span class="sxs-lookup"><span data-stu-id="c1553-233">The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties, because the <xref:System.Windows.Forms.Control.Text%2A> property is `null`.</span></span> <span data-ttu-id="c1553-234">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> denominado `MyForm`.</span><span class="sxs-lookup"><span data-stu-id="c1553-234">This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]
 [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]
 [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Description" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleName">
      <MemberSignature Language="C#" Value="public string AccessibleName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibleName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleName" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibleName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleName : string with get, set" Usage="System.Windows.Forms.Control.AccessibleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-235">Obtiene o establece el nombre del control que las aplicaciones cliente de accesibilidad utilizan.</span><span class="sxs-lookup"><span data-stu-id="c1553-235">Gets or sets the name of the control used by accessibility client applications.</span></span></summary>
        <value><span data-ttu-id="c1553-236">Nombre del control que las aplicaciones cliente de accesibilidad utilizan.</span><span class="sxs-lookup"><span data-stu-id="c1553-236">The name of the control used by accessibility client applications.</span></span> <span data-ttu-id="c1553-237">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-237">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-238">El <xref:System.Windows.Forms.Control.AccessibleName%2A> propiedad es una etiqueta que describe brevemente e identifica el objeto dentro de su contenedor, como el texto de un <xref:System.Windows.Forms.Button>, el nombre de un <xref:System.Windows.Forms.MenuItem>, o una etiqueta que se muestra junto a un <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-238">The <xref:System.Windows.Forms.Control.AccessibleName%2A> property is a label that briefly describes and identifies the object within its container, such as the text in a <xref:System.Windows.Forms.Button>, the name of a <xref:System.Windows.Forms.MenuItem>, or a label displayed next to a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 <span data-ttu-id="c1553-239">Para obtener más información acerca de las propiedades de los objetos accesibles, vea el "[contenido de propiedades descriptivas](https://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span><span class="sxs-lookup"><span data-stu-id="c1553-239">For more information about properties of accessible objects, see the "[Content of Descriptive Properties](https://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-240">En el ejemplo de código siguiente se crea una instancia de un <xref:System.Windows.Forms.CheckBox> clase derivada, `MyCheckBox`, le asigna un <xref:System.Drawing.Image> a su <xref:System.Windows.Forms.ButtonBase.Image%2A> propiedad y los conjuntos de la <xref:System.Windows.Forms.Control.AccessibleName%2A> y <xref:System.Windows.Forms.Control.AccessibleDescription%2A> propiedades desde el <xref:System.Windows.Forms.Control.Text%2A> propiedad es `null`.</span><span class="sxs-lookup"><span data-stu-id="c1553-240">The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties since the <xref:System.Windows.Forms.Control.Text%2A> property is `null`.</span></span> <span data-ttu-id="c1553-241">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> denominado `MyForm`.</span><span class="sxs-lookup"><span data-stu-id="c1553-241">This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CPP/controlaccessibility.cpp#2)]
 [!code-csharp[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/CS/controlaccessibility.cs#2)]
 [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.ControlAccessibleObject/VB/controlaccessibility.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Name" />
      </Docs>
    </Member>
    <Member MemberName="AccessibleRole">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AccessibleRole AccessibleRole" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AccessibleRole" />
      <MemberSignature Language="VB.NET" Value="Public Property AccessibleRole As AccessibleRole" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::AccessibleRole AccessibleRole { System::Windows::Forms::AccessibleRole get(); void set(System::Windows::Forms::AccessibleRole value); };" />
      <MemberSignature Language="F#" Value="member this.AccessibleRole : System.Windows.Forms.AccessibleRole with get, set" Usage="System.Windows.Forms.Control.AccessibleRole" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleRole</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-242">Obtiene o establece el rol accesible del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-242">Gets or sets the accessible role of the control</span></span></summary>
        <value><span data-ttu-id="c1553-243">Uno de los valores de <see cref="T:System.Windows.Forms.AccessibleRole" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-243">One of the values of <see cref="T:System.Windows.Forms.AccessibleRole" />.</span></span> <span data-ttu-id="c1553-244">De manera predeterminada, es <see langword="Default" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-244">The default is <see langword="Default" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-245">La propiedad <xref:System.Windows.Forms.Control.AccessibleRole%2A> describe qué tipo de elemento de la interfaz de usuario es un objeto.</span><span class="sxs-lookup"><span data-stu-id="c1553-245">The <xref:System.Windows.Forms.Control.AccessibleRole%2A> property describes what kind of user interface element an object is.</span></span> <span data-ttu-id="c1553-246">Si no se puede determinar la función del control, la propiedad <xref:System.Windows.Forms.Control.AccessibleRole%2A> se establece en `Default`.</span><span class="sxs-lookup"><span data-stu-id="c1553-246">If the control's role cannot be determined, the <xref:System.Windows.Forms.Control.AccessibleRole%2A> property is set to `Default`.</span></span>  
  
 <span data-ttu-id="c1553-247">Para obtener más información acerca de las propiedades de los objetos accesibles, vea [contenido de propiedades descriptivas](https://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span><span class="sxs-lookup"><span data-stu-id="c1553-247">For more information about properties of accessible objects, see [Content of Descriptive Properties](https://msdn.microsoft.com/library/windows/desktop/dd318025.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c1553-248">El valor asignado no es uno de los valores de <see cref="T:System.Windows.Forms.AccessibleRole" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-248">The value assigned is not one of the <see cref="T:System.Windows.Forms.AccessibleRole" /> values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.AccessibleRole" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDescription" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleName" />
        <altmember cref="P:System.Windows.Forms.Control.AccessibleDefaultActionDescription" />
        <altmember cref="P:System.Windows.Forms.AccessibleObject.Role" />
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public virtual bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.Forms.Control.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-249">Obtiene o establece un valor que indica si el control puede aceptar los datos que el usuario arrastra al mismo.</span><span class="sxs-lookup"><span data-stu-id="c1553-249">Gets or sets a value indicating whether the control can accept data that the user drags onto it.</span></span></summary>
        <value><span data-ttu-id="c1553-250"><see langword="true" /> si están permitidas las operaciones de arrastrar y colocar en el control; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-250"><see langword="true" /> if drag-and-drop operations are allowed in the control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1553-251">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-251">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-252">Habilita de ejemplo de código siguiente se quita al usuario arrastrar una imagen o un archivo de imagen del formulario y se muestra en el punto.</span><span class="sxs-lookup"><span data-stu-id="c1553-252">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="c1553-253">El <xref:System.Windows.Forms.Control.OnPaint%2A> se invalida el método para volver a dibujar la imagen cada vez que se pinta el formulario; en caso contrario, la imagen sólo se conserva hasta la siguiente operación de dibujo.</span><span class="sxs-lookup"><span data-stu-id="c1553-253">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="c1553-254">El <xref:System.Windows.Forms.Control.DragEnter> método de control de eventos determina el tipo de datos que se arrastran al formulario y proporciona la información apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-254">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="c1553-255">El <xref:System.Windows.Forms.Control.DragDrop> método de control de eventos muestra la imagen en el formulario, si un <xref:System.Drawing.Image> pueden crearse a partir de los datos.</span><span class="sxs-lookup"><span data-stu-id="c1553-255">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="c1553-256">Dado que el <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> los valores son las coordenadas de pantalla, el ejemplo se usa el <xref:System.Windows.Forms.Control.PointToClient%2A> método convertirlos a coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-256">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-257">para el acceso sin restricciones de Portapapeles establecer esta propiedad en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-257">for unrestricted Clipboard access to set this property to <see langword="true" />.</span></span> <span data-ttu-id="c1553-258">Enumeración asociada: el <see langword="AllClipboard" /> valor de <see cref="T:System.Security.Permissions.UIPermissionClipboard" /></span><span class="sxs-lookup"><span data-stu-id="c1553-258">Associated enumeration: the <see langword="AllClipboard" /> value of <see cref="T:System.Security.Permissions.UIPermissionClipboard" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-259">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.AllowDrop" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.AllowDrop" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-259">When overriding the <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-260">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-260">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-261">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.AllowDrop" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-261">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.AllowDrop" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DragEventArgs" />
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      </Docs>
    </Member>
    <Member MemberName="Anchor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AnchorStyles Anchor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.AnchorStyles Anchor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Anchor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Anchor As AnchorStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AnchorStyles Anchor { System::Windows::Forms::AnchorStyles get(); void set(System::Windows::Forms::AnchorStyles value); };" />
      <MemberSignature Language="F#" Value="member this.Anchor : System.Windows.Forms.AnchorStyles with get, set" Usage="System.Windows.Forms.Control.Anchor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AnchorStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-262">Obtiene o establece los bordes del contenedor al que está enlazado un control y determina cómo se cambia el tamaño de un control con su elemento primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-262">Gets or sets the edges of the container to which a control is bound and determines how a control is resized with its parent.</span></span></summary>
        <value><span data-ttu-id="c1553-263">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.AnchorStyles" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-263">A bitwise combination of the <see cref="T:System.Windows.Forms.AnchorStyles" /> values.</span></span> <span data-ttu-id="c1553-264">Los valores predeterminados son <see langword="Top" /> y <see langword="Left" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-264">The default is <see langword="Top" /> and <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-265">Use el <xref:System.Windows.Forms.Control.Anchor%2A> propiedad para definir cómo se cambia automáticamente el tamaño de un control cuando se cambia el tamaño de su control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-265">Use the <xref:System.Windows.Forms.Control.Anchor%2A> property to define how a control is automatically resized as its parent control is resized.</span></span> <span data-ttu-id="c1553-266">Delimitación de un control a su control principal, se garantiza que los bordes delimitados permanecen en la misma posición relativa a los bordes del control primario cuando se cambia el tamaño del control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-266">Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</span></span>  
  
 <span data-ttu-id="c1553-267">Puede anclar un control para uno o más bordes de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-267">You can anchor a control to one or more edges of its container.</span></span> <span data-ttu-id="c1553-268">Por ejemplo, si tiene un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Button> cuyo <xref:System.Windows.Forms.Control.Anchor%2A> el valor de propiedad se establece en `Top` y `Bottom`, el <xref:System.Windows.Forms.Button> se ajusta para mantener la distancia con respecto a los bordes superior e inferior de la <xref:System.Windows.Forms.Form>como el <xref:System.Windows.Forms.Control.Height%2A> de la <xref:System.Windows.Forms.Form> aumenta.</span><span class="sxs-lookup"><span data-stu-id="c1553-268">For example, if you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> whose <xref:System.Windows.Forms.Control.Anchor%2A> property value is set to `Top` and `Bottom`, the <xref:System.Windows.Forms.Button> is stretched to maintain the anchored distance to the top and bottom edges of the <xref:System.Windows.Forms.Form> as the <xref:System.Windows.Forms.Control.Height%2A> of the <xref:System.Windows.Forms.Form> is increased.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-269">El <xref:System.Windows.Forms.Control.Anchor%2A> y <xref:System.Windows.Forms.Control.Dock%2A> propiedades son mutuamente excluyentes.</span><span class="sxs-lookup"><span data-stu-id="c1553-269">The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive.</span></span> <span data-ttu-id="c1553-270">Solo una puede establecerse en un momento, y el último conjunto tiene prioridad.</span><span class="sxs-lookup"><span data-stu-id="c1553-270">Only one can be set at a time, and the last one set takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-271">En el ejemplo de código siguiente se agrega un <xref:System.Windows.Forms.Button> a un formulario y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-271">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="c1553-272">En el ejemplo se ancla el botón a la esquina inferior derecha del formulario, por lo que mantiene su posición relativa, como el tamaño del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-272">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="c1553-273">A continuación establece el <xref:System.Windows.Forms.Control.BackgroundImage%2A> y cambia el tamaño del botón en el mismo tamaño que el <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="c1553-273">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="c1553-274">En el ejemplo, a continuación, Establece el <xref:System.Windows.Forms.Control.TabStop%2A> a `true` y establece el <xref:System.Windows.Forms.Control.TabIndex%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-274">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="c1553-275">Por último, agrega un controlador de eventos para controlar la <xref:System.Windows.Forms.Control.Click> eventos del botón.</span><span class="sxs-lookup"><span data-stu-id="c1553-275">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="c1553-276">En este ejemplo requiere que haya un <xref:System.Windows.Forms.ImageList> denominado `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="c1553-276">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-277">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.Anchor" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.Anchor" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-277">When overriding the <see cref="P:System.Windows.Forms.Control.Anchor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Anchor" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-278">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-278">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-279">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.Anchor" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-279">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Anchor" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.AnchorStyles" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="AutoScrollOffset">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Point AutoScrollOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point AutoScrollOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AutoScrollOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoScrollOffset As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point AutoScrollOffset { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.AutoScrollOffset : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Control.AutoScrollOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Point), "0, 0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-280">Obtiene o establece a dónde se desplaza este control en <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-280">Gets or sets where this control is scrolled to in <see cref="M:System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)" />.</span></span></summary>
        <value><span data-ttu-id="c1553-281"><see cref="T:System.Drawing.Point" /> que especifica la ubicación de desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-281">A <see cref="T:System.Drawing.Point" /> specifying the scroll location.</span></span> <span data-ttu-id="c1553-282">El valor predeterminado es la esquina superior izquierda del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-282">The default is the upper-left corner of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public virtual bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.Control.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-283">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-283">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="c1553-284"><see langword="true" /> si está habilitado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-284"><see langword="true" /> if enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-285">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-285">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-286">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-286">This event is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-287">Este evento no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-287">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Control.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-501)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-288">Obtiene o establece el color de fondo del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-288">Gets or sets the background color for the control.</span></span></summary>
        <value><span data-ttu-id="c1553-289">Objeto <see cref="T:System.Drawing.Color" /> que representa el color de fondo del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-289">A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.</span></span> <span data-ttu-id="c1553-290">El valor predeterminado es el valor de la propiedad <see cref="P:System.Windows.Forms.Control.DefaultBackColor" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-290">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-291">El <xref:System.Windows.Forms.Control.BackColor%2A> propiedad no admite colores transparentes a menos que el `SupportsTransparentBackColor` valor <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-291">The <xref:System.Windows.Forms.Control.BackColor%2A> property does not support transparent colors unless the `SupportsTransparentBackColor` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> is set to `true`.</span></span>  
  
 <span data-ttu-id="c1553-292">El <xref:System.Windows.Forms.Control.BackColor%2A> es una propiedad de ambiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-292">The <xref:System.Windows.Forms.Control.BackColor%2A> property is an ambient property.</span></span> <span data-ttu-id="c1553-293">Una propiedad de ambiente es una propiedad de control que, si no establece, se recupera desde el control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-293">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="c1553-294">Por ejemplo, un <xref:System.Windows.Forms.Button> tendrá el mismo <xref:System.Windows.Forms.Control.BackColor%2A> como su elemento primario <xref:System.Windows.Forms.Form> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-294">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="c1553-295">Para obtener más información acerca de las propiedades de ambiente, vea la <xref:System.Windows.Forms.AmbientProperties> clase o el <xref:System.Windows.Forms.Control> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="c1553-295">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-296">El siguiente ejemplo de código establece la <xref:System.Windows.Forms.Control.BackColor%2A> y <xref:System.Windows.Forms.Control.ForeColor%2A> de los controles a los colores del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-296">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="c1553-297">El código de forma recursiva llama a sí mismo si el control tiene todos los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-297">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="c1553-298">Este ejemplo de código requiere que haya un <xref:System.Windows.Forms.Form> con control de al menos un elemento secundario; sin embargo, un contenedor secundario controlar, como un <xref:System.Windows.Forms.Panel> o <xref:System.Windows.Forms.GroupBox>, con su propio elemento secundario controles mejor demostraría la recursividad.</span><span class="sxs-lookup"><span data-stu-id="c1553-298">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-299">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.BackColor" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.BackColor" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-299">When overriding the <see cref="P:System.Windows.Forms.Control.BackColor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BackColor" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-300">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-300">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-301">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.BackColor" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-301">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.AmbientProperties" />
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="BackColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackColorChanged;" />
      <MemberSignature Language="F#" Value="member this.BackColorChanged : EventHandler " Usage="member this.BackColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-302">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.BackColor" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-302">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-303">Este evento se desencadena si el <xref:System.Windows.Forms.Control.BackColor%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-303">This event is raised if the <xref:System.Windows.Forms.Control.BackColor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-304">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-304">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-305">El ejemplo de código siguiente es un controlador de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-305">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-306">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre *PropertyName* `Changed` que se genera cuando correspondiente *PropertyName* cambia el valor ( *PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-306">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-307">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda.</span><span class="sxs-lookup"><span data-stu-id="c1553-307">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="c1553-308">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-308">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-309">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-309">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImage">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Image BackgroundImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image BackgroundImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackgroundImage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImage As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Image ^ BackgroundImage { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImage : System.Drawing.Image with get, set" Usage="System.Windows.Forms.Control.BackgroundImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-310">Obtiene o establece la imagen de fondo que se muestra en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-310">Gets or sets the background image displayed in the control.</span></span></summary>
        <value><span data-ttu-id="c1553-311"><see cref="T:System.Drawing.Image" /> que representa la imagen que se va a mostrar en el fondo del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-311">An <see cref="T:System.Drawing.Image" /> that represents the image to display in the background of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="c1553-312">Use el <xref:System.Windows.Forms.Control.BackgroundImage%2A> propiedad que se va a colocar una imagen gráfica en un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-312">Use the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property to place a graphic image onto a control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-313">Controles de formularios Windows Forms no admiten las imágenes con colores translúcidos o transparentes como imágenes de fondo.</span><span class="sxs-lookup"><span data-stu-id="c1553-313">Images with translucent or transparent colors are not supported by Windows Forms controls as background images.</span></span>  
>   
>  <span data-ttu-id="c1553-314">Esta propiedad no se admite en los controles secundarios cuya <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-314">This property is not supported on child controls whose <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-315">En el ejemplo de código siguiente se agrega un <xref:System.Windows.Forms.Button> a un formulario y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-315">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="c1553-316">En el ejemplo se ancla el botón a la esquina inferior derecha del formulario, por lo que mantiene su posición relativa, como el tamaño del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-316">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="c1553-317">A continuación establece el <xref:System.Windows.Forms.Control.BackgroundImage%2A> y cambia el tamaño del botón en el mismo tamaño que el <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="c1553-317">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="c1553-318">En el ejemplo, a continuación, Establece el <xref:System.Windows.Forms.Control.TabStop%2A> a `true` y establece el <xref:System.Windows.Forms.Control.TabIndex%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-318">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="c1553-319">Por último, agrega un controlador de eventos para controlar la <xref:System.Windows.Forms.Control.Click> eventos del botón.</span><span class="sxs-lookup"><span data-stu-id="c1553-319">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="c1553-320">En este ejemplo requiere que haya un <xref:System.Windows.Forms.ImageList> denominado `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="c1553-320">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-321">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-321">When overriding the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-322">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-322">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-323">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-323">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackgroundImageChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageChanged : EventHandler " Usage="member this.BackgroundImageChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-324">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.BackgroundImage" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-324">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-325">Este evento se desencadena si el <xref:System.Windows.Forms.Control.BackgroundImage%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-325">This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-326">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-326">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-327">El ejemplo de código siguiente es un controlador de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-327">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-328">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre *PropertyName* `Changed` que se genera cuando correspondiente *PropertyName* cambia el valor ( *PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-328">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-329">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda.</span><span class="sxs-lookup"><span data-stu-id="c1553-329">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="c1553-330">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-330">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-331">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-331">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Image" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayout">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImageLayout BackgroundImageLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundImageLayout As ImageLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ImageLayout BackgroundImageLayout { System::Windows::Forms::ImageLayout get(); void set(System::Windows::Forms::ImageLayout value); };" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayout : System.Windows.Forms.ImageLayout with get, set" Usage="System.Windows.Forms.Control.BackgroundImageLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-332">Obtiene o establece el diseño de imagen de fondo como se define en la enumeración <see cref="T:System.Windows.Forms.ImageLayout" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-332">Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.</span></span></summary>
        <value><span data-ttu-id="c1553-333">Uno de los valores de <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" />, <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" /> o <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />).</span><span class="sxs-lookup"><span data-stu-id="c1553-333">One of the values of <see cref="T:System.Windows.Forms.ImageLayout" /> (<see cref="F:System.Windows.Forms.ImageLayout.Center" /> , <see cref="F:System.Windows.Forms.ImageLayout.None" />, <see cref="F:System.Windows.Forms.ImageLayout.Stretch" />, <see cref="F:System.Windows.Forms.ImageLayout.Tile" />, or <see cref="F:System.Windows.Forms.ImageLayout.Zoom" />).</span></span> <span data-ttu-id="c1553-334">El valor predeterminado es <see cref="F:System.Windows.Forms.ImageLayout.Tile" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-334"><see cref="F:System.Windows.Forms.ImageLayout.Tile" /> is the default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-335">Use el <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> propiedad para especificar la posición y el comportamiento de una imagen colocada en un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-335">Use the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property to specify the position and behavior of an image you have placed onto a control.</span></span> <span data-ttu-id="c1553-336"><xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> solo tiene efecto si la <xref:System.Windows.Forms.Control.BackgroundImage%2A> se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-336"><xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> takes effect only if the <xref:System.Windows.Forms.Control.BackgroundImage%2A> property is set.</span></span>  
  
 <span data-ttu-id="c1553-337">Puede aumentar el rendimiento para las imágenes grandes si establece <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> a algo distinto <xref:System.Windows.Forms.ImageLayout.Tile>.</span><span class="sxs-lookup"><span data-stu-id="c1553-337">You can increase performance for large images if you set <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> to something other than <xref:System.Windows.Forms.ImageLayout.Tile>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c1553-338">El valor de enumeración especificado no existe.</span><span class="sxs-lookup"><span data-stu-id="c1553-338">The specified enumeration value does not exist.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BackgroundImageLayoutChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BackgroundImageLayoutChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BackgroundImageLayoutChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BackgroundImageLayoutChanged;" />
      <MemberSignature Language="F#" Value="member this.BackgroundImageLayoutChanged : EventHandler " Usage="member this.BackgroundImageLayoutChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-339">Se produce cuando cambia la propiedad <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-339">Occurs when the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-340">Este evento se desencadena si el <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> cambia la propiedad mediante programación o mediante la interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-340">This event is raised if the <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A> property changes either programmatically or by user interaction.</span></span>  
  
 <span data-ttu-id="c1553-341">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-341">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-342">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-342">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-343">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-343">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.</span></span> <span data-ttu-id="c1553-344">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-344">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-345">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-345">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-346">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-346">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-347">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-347">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.BackgroundImageLayoutChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#9)]
 [!code-vb[System.Windows.Forms.EventExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginInvoke">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-348">Ejecuta un delegado de forma asincrónica en el subproceso donde se creó el identificador subyacente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-348">Executes a delegate asynchronously on the thread that the control's underlying handle was created on.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginInvoke(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginInvoke(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : Delegate -&gt; IAsyncResult" Usage="control.BeginInvoke method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c1553-349">Delegado de un método que no toma parámetros.</span><span class="sxs-lookup"><span data-stu-id="c1553-349">A delegate to a method that takes no parameters.</span></span></param>
        <summary><span data-ttu-id="c1553-350">Ejecuta el delegado especificado de forma asincrónica en el subproceso donde se creó el identificador subyacente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-350">Executes the specified delegate asynchronously on the thread that the control's underlying handle was created on.</span></span></summary>
        <returns><span data-ttu-id="c1553-351">Una <see cref="T:System.IAsyncResult" /> que representa el resultado de la operación <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-351">An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-352">Se llama al delegado de forma asincrónica, y este método vuelve inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-352">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="c1553-353">Puede llamar a este método desde cualquier subproceso, incluso el subproceso que posee el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-353">You can call this method from any thread, even the thread that owns the control's handle.</span></span> <span data-ttu-id="c1553-354">Si el identificador del control no existe aún, este método buscará la cadena del control primario hasta que encuentra un control o formulario que tiene un identificador de ventana.</span><span class="sxs-lookup"><span data-stu-id="c1553-354">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="c1553-355">Si no se encuentra ningún identificador adecuado, <xref:System.Windows.Forms.Control.BeginInvoke%2A> generará una excepción.</span><span class="sxs-lookup"><span data-stu-id="c1553-355">If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception.</span></span> <span data-ttu-id="c1553-356">Las excepciones dentro del método delegado se consideran no interceptadas y se enviarán al controlador de excepciones sin capturar de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c1553-356">Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</span></span>  
  
 <span data-ttu-id="c1553-357">Puede llamar a <xref:System.Windows.Forms.Control.EndInvoke%2A> para recuperar el valor devuelto del delegado, si es necesario, aunque esto no es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-357">You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required.</span></span> <span data-ttu-id="c1553-358"><xref:System.Windows.Forms.Control.EndInvoke%2A> se bloqueará hasta que se puede recuperar el valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="c1553-358"><xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-359">Mayoría de los métodos en un control sólo puede llamar desde el subproceso donde se creó el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-359">Most methods on a control can only be called from the thread where the control was created.</span></span> <span data-ttu-id="c1553-360">Además el <xref:System.Windows.Forms.Control.InvokeRequired%2A> propiedad, hay cuatro métodos en un control que son seguros para subprocesos: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, y <xref:System.Windows.Forms.Control.CreateGraphics%2A> si ya se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-360">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="c1553-361">Una llamada a <xref:System.Windows.Forms.Control.CreateGraphics%2A> antes de que se ha creado el identificador del control en un subproceso en segundo plano puede provocar no válidas entre las llamadas de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-361">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="c1553-362">Para todas las demás llamadas de método, debe usar uno de los métodos de invocación para calcular las referencias de la llamada al subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-362">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span> <span data-ttu-id="c1553-363">Los métodos de invocación siempre invocan sus devoluciones de llamada en el subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-363">The invoke methods always invoke their callbacks on the control's thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-364">Es posible que se produce una excepción si el subproceso que se va a procesar el mensaje ya no está activo.</span><span class="sxs-lookup"><span data-stu-id="c1553-364">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-365">En el ejemplo de código siguiente se muestra un uso de la <xref:System.Windows.Forms.Control.BeginInvoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-365">The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.</span></span>  
  
 [!code-cpp[Control_BeginInvoke#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#2)]
 [!code-csharp[Control_BeginInvoke#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#2)]
 [!code-vb[Control_BeginInvoke#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1553-366">No se puede encontrar ningún identificador de ventana adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-366">No appropriate window handle can be found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1553-367">para que el llamador inmediato llamar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="c1553-367">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="c1553-368">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c1553-368">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.CreateGraphics" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginInvoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInvoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginInvoke (method As Delegate, ParamArray args As Object()) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginInvoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member BeginInvoke : Delegate * obj[] -&gt; IAsyncResult&#xA;override this.BeginInvoke : Delegate * obj[] -&gt; IAsyncResult" Usage="control.BeginInvoke (method, args)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISynchronizeInvoke.BeginInvoke(System.Delegate,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c1553-369">Delegado de un método que obtiene los parámetros del mismo número y tipo que los incluidos en el parámetro <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-369">A delegate to a method that takes parameters of the same number and type that are contained in the <paramref name="args" /> parameter.</span></span></param>
        <param name="args"><span data-ttu-id="c1553-370">Matriz de objetos cuyos valores se pasan como argumentos al método especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-370">An array of objects to pass as arguments to the given method.</span></span> <span data-ttu-id="c1553-371">Puede ser <see langword="null" /> si no se necesita ningún argumento.</span><span class="sxs-lookup"><span data-stu-id="c1553-371">This can be <see langword="null" /> if no arguments are needed.</span></span></param>
        <summary><span data-ttu-id="c1553-372">Ejecuta el delegado especificado de forma asincrónica con los argumentos especificados en el subproceso donde se creó el identificador subyacente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-372">Executes the specified delegate asynchronously with the specified arguments, on the thread that the control's underlying handle was created on.</span></span></summary>
        <returns><span data-ttu-id="c1553-373">Una <see cref="T:System.IAsyncResult" /> que representa el resultado de la operación <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-373">An <see cref="T:System.IAsyncResult" /> that represents the result of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-374">Se llama al delegado de forma asincrónica, y este método vuelve inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-374">The delegate is called asynchronously, and this method returns immediately.</span></span> <span data-ttu-id="c1553-375">Puede llamar a este método desde cualquier subproceso, incluso el subproceso que posee el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-375">You can call this method from any thread, even the thread that owns the control's handle.</span></span> <span data-ttu-id="c1553-376">Si el identificador del control no existe aún, este método buscará la cadena del control primario hasta que encuentra un control o formulario que tiene un identificador de ventana.</span><span class="sxs-lookup"><span data-stu-id="c1553-376">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="c1553-377">Si no se encuentra ningún identificador adecuado, <xref:System.Windows.Forms.Control.BeginInvoke%2A> generará una excepción.</span><span class="sxs-lookup"><span data-stu-id="c1553-377">If no appropriate handle can be found, <xref:System.Windows.Forms.Control.BeginInvoke%2A> will throw an exception.</span></span> <span data-ttu-id="c1553-378">Las excepciones dentro del método delegado se consideran no interceptadas y se enviarán al controlador de excepciones sin capturar de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c1553-378">Exceptions within the delegate method are considered untrapped and will be sent to the application's untrapped exception handler.</span></span>  
  
 <span data-ttu-id="c1553-379">Puede llamar a <xref:System.Windows.Forms.Control.EndInvoke%2A> para recuperar el valor devuelto del delegado, si es necesario, aunque esto no es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-379">You can call <xref:System.Windows.Forms.Control.EndInvoke%2A> to retrieve the return value from the delegate, if neccesary, but this is not required.</span></span> <span data-ttu-id="c1553-380"><xref:System.Windows.Forms.Control.EndInvoke%2A> se bloqueará hasta que se puede recuperar el valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="c1553-380"><xref:System.Windows.Forms.Control.EndInvoke%2A> will block until the return value can be retrieved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-381">Mayoría de los métodos en un control sólo puede llamar desde el subproceso donde se creó el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-381">Most methods on a control can only be called from the thread where the control was created.</span></span> <span data-ttu-id="c1553-382">Además el <xref:System.Windows.Forms.Control.InvokeRequired%2A> propiedad, hay cuatro métodos en un control que son seguros para subprocesos: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, y <xref:System.Windows.Forms.Control.CreateGraphics%2A> si ya se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-382">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="c1553-383">Una llamada a <xref:System.Windows.Forms.Control.CreateGraphics%2A> antes de que se ha creado el identificador del control en un subproceso en segundo plano puede provocar no válidas entre las llamadas de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-383">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="c1553-384">Para todas las demás llamadas de método, debe usar uno de los métodos de invocación para calcular las referencias de la llamada al subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-384">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span> <span data-ttu-id="c1553-385">Los métodos de invocación siempre invocan sus devoluciones de llamada en el subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-385">The invoke methods always invoke their callbacks on the control's thread.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-386">Es posible que se produce una excepción si el subproceso que se va a procesar el mensaje ya no está activo.</span><span class="sxs-lookup"><span data-stu-id="c1553-386">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-387">En el ejemplo de código siguiente se muestra un uso de la <xref:System.Windows.Forms.Control.BeginInvoke%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-387">The following code example demonstrates a use of the <xref:System.Windows.Forms.Control.BeginInvoke%2A> method.</span></span>  
  
 [!code-cpp[Control_BeginInvoke#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_BeginInvoke/CPP/control_begininvoke.cpp#1)]
 [!code-csharp[Control_BeginInvoke#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_BeginInvoke/CS/control_begininvoke.cs#1)]
 [!code-vb[Control_BeginInvoke#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_BeginInvoke/VB/control_begininvoke.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1553-388">No se puede encontrar ningún identificador de ventana adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-388">No appropriate window handle can be found.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
        <altmember cref="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.CreateGraphics" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="BindingContext">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.BindingContext BindingContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.BindingContext BindingContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.BindingContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BindingContext As BindingContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::BindingContext ^ BindingContext { System::Windows::Forms::BindingContext ^ get(); void set(System::Windows::Forms::BindingContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingContext : System.Windows.Forms.BindingContext with get, set" Usage="System.Windows.Forms.Control.BindingContext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IBindableComponent.BindingContext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.BindingContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-389">Obtiene o establece la plantilla <see cref="T:System.Windows.Forms.BindingContext" /> para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-389">Gets or sets the <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</span></span></summary>
        <value><span data-ttu-id="c1553-390"><see cref="T:System.Windows.Forms.BindingContext" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-390">A <see cref="T:System.Windows.Forms.BindingContext" /> for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-391">El <xref:System.Windows.Forms.BindingContext> de un <xref:System.Windows.Forms.Control> se usa para devolver un único <xref:System.Windows.Forms.BindingManagerBase> para todos los controles enlazados a datos que contiene el <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="c1553-391">The <xref:System.Windows.Forms.BindingContext> of a <xref:System.Windows.Forms.Control> is used to return a single <xref:System.Windows.Forms.BindingManagerBase> for all data-bound controls contained by the <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="c1553-392">El <xref:System.Windows.Forms.BindingManagerBase> mantiene todos los controles que están enlazados al mismo origen de datos sincronizado.</span><span class="sxs-lookup"><span data-stu-id="c1553-392">The <xref:System.Windows.Forms.BindingManagerBase> keeps all controls that are bound to the same data source synchronized.</span></span> <span data-ttu-id="c1553-393">Por ejemplo, si se establece la <xref:System.Windows.Forms.BindingManagerBase.Position%2A> propiedad de la <xref:System.Windows.Forms.BindingManagerBase> especifica el elemento en la lista subyacente que seleccione todos los controles enlazados a datos.</span><span class="sxs-lookup"><span data-stu-id="c1553-393">For example, setting the <xref:System.Windows.Forms.BindingManagerBase.Position%2A> property of the <xref:System.Windows.Forms.BindingManagerBase> specifies the item in the underlying list that all data-bound controls point to.</span></span>  
  
 <span data-ttu-id="c1553-394">Para obtener más información acerca de cómo crear un nuevo <xref:System.Windows.Forms.BindingContext> y asignarlo a la <xref:System.Windows.Forms.Control.BindingContext%2A> propiedad, vea el <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-394">For more information about creating a new <xref:System.Windows.Forms.BindingContext> and assigning it to the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-395">El ejemplo de código siguiente crea cuatro <xref:System.Windows.Forms.Binding> objetos que se va a enlazar controles de cinco, un <xref:System.Windows.Forms.DateTimePicker> y cuatro <xref:System.Windows.Forms.TextBox> controles a varios orígenes de datos.</span><span class="sxs-lookup"><span data-stu-id="c1553-395">The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls, a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls, to several data sources.</span></span> <span data-ttu-id="c1553-396">El <xref:System.Windows.Forms.BindingContext> , a continuación, se utiliza para obtener el <xref:System.Windows.Forms.BindingManagerBase> para cada origen de datos.</span><span class="sxs-lookup"><span data-stu-id="c1553-396">The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.</span></span>  
  
 [!code-cpp[Classic BindingContext Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic BindingContext Example/CPP/source.cpp#1)]
 [!code-csharp[Classic BindingContext Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic BindingContext Example/CS/source.cs#1)]
 [!code-vb[Classic BindingContext Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic BindingContext Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-397">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.BindingContext" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.BindingContext" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-397">When overriding the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.BindingContext" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-398">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-398">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-399">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.BindingContext" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-399">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="BindingContextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler BindingContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler BindingContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.BindingContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event BindingContextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ BindingContextChanged;" />
      <MemberSignature Language="F#" Value="member this.BindingContextChanged : EventHandler " Usage="member this.BindingContextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-400">Se produce cuando cambia el valor de la propiedad <see cref="T:System.Windows.Forms.BindingContext" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-400">Occurs when the value of the <see cref="T:System.Windows.Forms.BindingContext" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-401">Para agregar un nuevo <xref:System.Windows.Forms.BindingContext> a la <xref:System.Windows.Forms.Control> a través de la <xref:System.Windows.Forms.Control.BindingContext%2A> propiedad, vea el <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="c1553-401">To add a new <xref:System.Windows.Forms.BindingContext> to the <xref:System.Windows.Forms.Control> through the <xref:System.Windows.Forms.Control.BindingContext%2A> property, see the <xref:System.Windows.Forms.BindingContext.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="c1553-402">Este evento se desencadena si el <xref:System.Windows.Forms.Control.BindingContext%2A> se cambia la propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-402">This event is raised if the <xref:System.Windows.Forms.Control.BindingContext%2A> property is changed is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-403">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-403">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-404">En el ejemplo de código siguiente se agrega un <xref:System.EventHandler> delegar en el <xref:System.Windows.Forms.Control.BindingContextChanged> eventos de un <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-404">The following code example adds an <xref:System.EventHandler> delegate to the <xref:System.Windows.Forms.Control.BindingContextChanged> event of a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.BindingContextChanged Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/CS/source.cs#1)]
 [!code-vb[Classic Control.BindingContextChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.BindingContextChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
        <altmember cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public int Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Bottom { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Bottom : int" Usage="System.Windows.Forms.Control.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-405">Obtiene la distancia, en píxeles, que existe entre el borde inferior del control y el borde superior del área cliente de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-405">Gets the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="c1553-406"><see cref="T:System.Int32" /> que representa la distancia, en píxeles, que existe entre el borde inferior del control y el borde superior del área cliente de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-406">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-407">El valor de esta propiedad es igual a la suma de los <xref:System.Windows.Forms.Control.Top%2A> valor de propiedad y el <xref:System.Windows.Forms.Control.Height%2A> valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-407">The value of this property is equal to the sum of the <xref:System.Windows.Forms.Control.Top%2A> property value, and the <xref:System.Windows.Forms.Control.Height%2A> property value.</span></span>  
  
 <span data-ttu-id="c1553-408">El <xref:System.Windows.Forms.Control.Bottom%2A> propiedad es una propiedad de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c1553-408">The <xref:System.Windows.Forms.Control.Bottom%2A> property is a read-only property.</span></span> <span data-ttu-id="c1553-409">Puede manipular el valor de esta propiedad si cambia el valor de la <xref:System.Windows.Forms.Control.Top%2A> o <xref:System.Windows.Forms.Control.Height%2A> propiedades o llamar a la <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, o <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-409">You can manipulate this property value by changing the value of the <xref:System.Windows.Forms.Control.Top%2A> or <xref:System.Windows.Forms.Control.Height%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-410">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.Bottom%2A> propiedad para definir el límite inferior de un <xref:System.Windows.Forms.TextBox> control en relación con el área cliente del contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-410">The following code example uses the <xref:System.Windows.Forms.Control.Bottom%2A> property to define the lower limit of a <xref:System.Windows.Forms.TextBox> control relative to the client area of the container.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Top" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle Bounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle Bounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Bounds" />
      <MemberSignature Language="VB.NET" Value="Public Property Bounds As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle Bounds { System::Drawing::Rectangle get(); void set(System::Drawing::Rectangle value); };" />
      <MemberSignature Language="F#" Value="member this.Bounds : System.Drawing.Rectangle with get, set" Usage="System.Windows.Forms.Control.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-411">Obtiene o establece el tamaño y la ubicación del control incluyendo sus elementos no cliente, en píxeles, con respecto al control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-411">Gets or sets the size and location of the control including its nonclient elements, in pixels, relative to the parent control.</span></span></summary>
        <value><span data-ttu-id="c1553-412"><see cref="T:System.Drawing.Rectangle" /> en píxeles con respecto al control primario que representa el tamaño y la ubicación del control, incluyendo sus elementos no cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-412">A <see cref="T:System.Drawing.Rectangle" /> in pixels relative to the parent control that represents the size and location of the control including its nonclient elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-413">Los límites del control incluyen los elementos no cliente, como los bordes, las barras de título, los menús y barras de desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-413">The bounds of the control include the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span> <span data-ttu-id="c1553-414">El <xref:System.Windows.Forms.Control.SetBoundsCore%2A> método se llama para establecer el <xref:System.Windows.Forms.Control.Bounds%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-414">The <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method is called to set the <xref:System.Windows.Forms.Control.Bounds%2A> property.</span></span> <span data-ttu-id="c1553-415">El <xref:System.Windows.Forms.Control.Bounds%2A> propiedad no siempre se cambia a través de su `set` método por lo que se debe reemplazar el <xref:System.Windows.Forms.Control.SetBoundsCore%2A> método para asegurarse de que el código se ejecuta cuando el <xref:System.Windows.Forms.Control.Bounds%2A> se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-415">The <xref:System.Windows.Forms.Control.Bounds%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.Bounds%2A> property is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-416">El ejemplo de código siguiente crea tres <xref:System.Windows.Forms.Button> controles de formularios y establece su tamaño y la ubicación mediante el uso de las diversas propiedades relacionadas con la ubicación y tamaño.</span><span class="sxs-lookup"><span data-stu-id="c1553-416">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="c1553-417">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que tiene un ancho y alto de al menos 300 píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-417">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Top" />
        <altmember cref="P:System.Windows.Forms.Control.Left" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="C#" Value="public void BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringToFront() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.BringToFront" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringToFront ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringToFront();" />
      <MemberSignature Language="F#" Value="member this.BringToFront : unit -&gt; unit" Usage="control.BringToFront " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-418">Coloca el control al principio del orden Z.</span><span class="sxs-lookup"><span data-stu-id="c1553-418">Brings the control to the front of the z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-419">El control se mueve al frente del orden z.</span><span class="sxs-lookup"><span data-stu-id="c1553-419">The control is moved to the front of the z-order.</span></span> <span data-ttu-id="c1553-420">Si el control es un elemento secundario de otro control, el control secundario se mueve al frente del orden z.</span><span class="sxs-lookup"><span data-stu-id="c1553-420">If the control is a child of another control, the child control is moved to the front of the z-order.</span></span> <span data-ttu-id="c1553-421"><xref:System.Windows.Forms.Control.BringToFront%2A> hace realiza un control de un control de nivel superior y no provoca la <xref:System.Windows.Forms.Control.Paint> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-421"><xref:System.Windows.Forms.Control.BringToFront%2A> does not make a control a top-level control, and it does not raise the <xref:System.Windows.Forms.Control.Paint> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-422">El siguiente ejemplo de código que garantiza una <xref:System.Windows.Forms.Label> está visible mediante una llamada a su <xref:System.Windows.Forms.Control.BringToFront%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-422">The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method.</span></span> <span data-ttu-id="c1553-423">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Panel> denominado `panel1`y un <xref:System.Windows.Forms.Label> denominado `label1`.</span><span class="sxs-lookup"><span data-stu-id="c1553-423">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]
 [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SendToBack" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
      </Docs>
    </Member>
    <Member MemberName="CanEnableIme">
      <MemberSignature Language="C#" Value="protected virtual bool CanEnableIme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEnableIme" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanEnableIme" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CanEnableIme As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanEnableIme { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanEnableIme : bool" Usage="System.Windows.Forms.Control.CanEnableIme" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-424">Obtiene un valor que indica si la propiedad <see cref="P:System.Windows.Forms.Control.ImeMode" /> puede establecerse en un valor activo para habilitar la compatibilidad con el IME.</span><span class="sxs-lookup"><span data-stu-id="c1553-424">Gets a value indicating whether the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property can be set to an active value, to enable IME support.</span></span></summary>
        <value><span data-ttu-id="c1553-425"><see langword="true" /> en todos los casos.</span><span class="sxs-lookup"><span data-stu-id="c1553-425"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-426">Las clases derivadas pueden invalidar esta propiedad para devolver `false` si no se admite el IME.</span><span class="sxs-lookup"><span data-stu-id="c1553-426">Derived classes can override this property to return `false` if IME is not supported.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFocus">
      <MemberSignature Language="C#" Value="public bool CanFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFocus : bool" Usage="System.Windows.Forms.Control.CanFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-427">Obtiene un valor que indica si el control puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-427">Gets a value indicating whether the control can receive focus.</span></span></summary>
        <value><span data-ttu-id="c1553-428">Es <see langword="true" /> si el control puede recibir el foco; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-428"><see langword="true" /> if the control can receive focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-429">En el orden de un control recibir el foco de entrada, el control debe tener un identificador asignado a él y el <xref:System.Windows.Forms.Control.Visible%2A> y <xref:System.Windows.Forms.Control.Enabled%2A> propiedades deben establecerse ambas como `true` para el control y todos sus controles principales tanto el control deben ser un formulario o la elemento primario exterior del control debe ser un formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-429">In order for a control to receive input focus, the control must have a handle assigned to it, and the <xref:System.Windows.Forms.Control.Visible%2A> and <xref:System.Windows.Forms.Control.Enabled%2A> properties must both be set to `true` for both the control and all its parent controls, and the control must be a form or the control's outermost parent must be a form.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-430">El ejemplo de código siguiente establece el foco en especificado <xref:System.Windows.Forms.Control>, si puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-430">The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]
 [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]
 [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
      </Docs>
    </Member>
    <Member MemberName="CanRaiseEvents">
      <MemberSignature Language="C#" Value="protected override bool CanRaiseEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRaiseEvents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanRaiseEvents" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CanRaiseEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CanRaiseEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRaiseEvents : bool" Usage="System.Windows.Forms.Control.CanRaiseEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-431">Determina si se pueden producir eventos en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-431">Determines if events can be raised on the control.</span></span></summary>
        <value><span data-ttu-id="c1553-432"><see langword="true" /> si el control está hospedado como un control ActiveX cuyos eventos no están inmovilizados; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-432"><see langword="true" /> if the control is hosted as an ActiveX control whose events are not frozen; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-433">Si este control se hospeda como un control ActiveX, esta propiedad devolverá `false` si el control ActiveX tiene sus eventos bloqueados.</span><span class="sxs-lookup"><span data-stu-id="c1553-433">If this control is being hosted as an ActiveX control, this property will return `false` if the ActiveX control has its events frozen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanSelect">
      <MemberSignature Language="C#" Value="public bool CanSelect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSelect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CanSelect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanSelect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanSelect { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSelect : bool" Usage="System.Windows.Forms.Control.CanSelect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-434">Obtiene un valor que indica si el control se puede seleccionar.</span><span class="sxs-lookup"><span data-stu-id="c1553-434">Gets a value indicating whether the control can be selected.</span></span></summary>
        <value><span data-ttu-id="c1553-435">Es <see langword="true" /> si el control se puede seleccionar; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-435"><see langword="true" /> if the control can be selected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-436">Esta propiedad devuelve `true` si el `Selectable` valor <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> está establecido en `true`, está contenido en otro control, el propio control está habilitado y visible y todos sus controles principales son visibles y están habilitados.</span><span class="sxs-lookup"><span data-stu-id="c1553-436">This property returns `true` if the `Selectable` value of <xref:System.Windows.Forms.ControlStyles?displayProperty=nameWithType> is set to `true`, is contained in another control, the control itself is visible and enabled, and all its parent controls are visible and enabled.</span></span>  
  
 <span data-ttu-id="c1553-437">Los controles de Windows Forms en la lista siguiente no se pueden seleccionables y devolverá un valor de `false` para el <xref:System.Windows.Forms.Control.CanSelect%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-437">The Windows Forms controls in the following list are not selectable and will return a value of `false` for the <xref:System.Windows.Forms.Control.CanSelect%2A> property.</span></span> <span data-ttu-id="c1553-438">Controles derivados de estos controles también no son seleccionables.</span><span class="sxs-lookup"><span data-stu-id="c1553-438">Controls derived from these controls are also not selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <span data-ttu-id="c1553-439"><xref:System.Windows.Forms.LinkLabel> (cuando no hay ningún vínculo en el control)</span><span class="sxs-lookup"><span data-stu-id="c1553-439"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-440">En el ejemplo de código siguiente se selecciona especificado <xref:System.Windows.Forms.Control>, si puede seleccionarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-440">The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]
 [!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]
 [!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Capture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Capture" />
      <MemberSignature Language="VB.NET" Value="Public Property Capture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Capture { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Capture : bool with get, set" Usage="System.Windows.Forms.Control.Capture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-441">Obtiene o establece un valor que indica si el control ha capturado el mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-441">Gets or sets a value indicating whether the control has captured the mouse.</span></span></summary>
        <value><span data-ttu-id="c1553-442"><see langword="true" /> si el control ha capturado el mouse; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-442"><see langword="true" /> if the control has captured the mouse; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-443">Cuando un control ha capturado el mouse, recibe la entrada del mouse si el cursor se encuentra dentro de sus bordes.</span><span class="sxs-lookup"><span data-stu-id="c1553-443">When a control has captured the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="c1553-444">Normalmente, el mouse solo se captura durante las operaciones de arrastre.</span><span class="sxs-lookup"><span data-stu-id="c1553-444">The mouse is typically only captured during drag operations.</span></span>  
  
 <span data-ttu-id="c1553-445">Ventana de primer plano puede capturar el mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-445">Only the foreground window can capture the mouse.</span></span> <span data-ttu-id="c1553-446">Cuando una ventana en segundo plano intenta hacerlo, la ventana recibe los mensajes solo para los eventos del mouse que se producen cuando el cursor del mouse está dentro de la parte visible de la ventana.</span><span class="sxs-lookup"><span data-stu-id="c1553-446">When a background window attempts to do so, the window receives messages only for mouse events that occur when the mouse cursor is within the visible portion of the window.</span></span> <span data-ttu-id="c1553-447">Además, incluso si la ventana de primer plano ha capturado el mouse, el usuario puede hacer clic en otra ventana, llevándola a primer plano.</span><span class="sxs-lookup"><span data-stu-id="c1553-447">Also, even if the foreground window has captured the mouse, the user can still click another window, bringing it to the foreground.</span></span>  
  
 <span data-ttu-id="c1553-448">Cuando se captura el mouse, teclas de método abreviado no funcionará.</span><span class="sxs-lookup"><span data-stu-id="c1553-448">When the mouse is captured, shortcut keys should not work.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-449">En el ejemplo de código siguiente se muestra el <xref:System.Windows.Forms.Control.Capture%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-449">The following code example demonstrates the <xref:System.Windows.Forms.Control.Capture%2A> property.</span></span> <span data-ttu-id="c1553-450">Para ejecutar este ejemplo pegue el siguiente código en un formulario que contenga un <xref:System.Windows.Forms.Label> denominado label1 y dos <xref:System.Windows.Forms.ListBox> controles denominados listbox1 y listbox2.</span><span class="sxs-lookup"><span data-stu-id="c1553-450">To run this example paste the following code in a form containing a <xref:System.Windows.Forms.Label> named label1 and two <xref:System.Windows.Forms.ListBox> controls named listbox1 and listbox2.</span></span> <span data-ttu-id="c1553-451">Asegúrese del formulario y los controles <xref:System.Windows.Forms.Control.MouseDown> evento está asociado con el método en este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c1553-451">Ensure the form and controls' <xref:System.Windows.Forms.Control.MouseDown> event is associated with the method in this example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlCapture#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlCapture#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlCapture/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-452">para todas las ventanas establecer este valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-452">for all windows to set this property value.</span></span> <span data-ttu-id="c1553-453">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="c1553-453">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Windows.Forms.Control.CausesValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-454">Obtiene o establece un valor que indica si el control hace que se realice una validación de todos los controles que requieren validación cuando reciben el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-454">Gets or sets a value indicating whether the control causes validation to be performed on any controls that require validation when it receives focus.</span></span></summary>
        <value><span data-ttu-id="c1553-455">Es <see langword="true" /> si el control hace que se validen los controles que requieren validación cuando reciben el foco; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-455"><see langword="true" /> if the control causes validation to be performed on any controls requiring validation when it receives focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1553-456">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-456">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-457">Si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad está establecida en `false`, <xref:System.Windows.Forms.Control.Validating> y <xref:System.Windows.Forms.Control.Validated> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-457">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="c1553-458">El <xref:System.Windows.Forms.Control.CausesValidation%2A> normalmente se establece el valor de propiedad en `false` para controles como un botón de ayuda.</span><span class="sxs-lookup"><span data-stu-id="c1553-458">The <xref:System.Windows.Forms.Control.CausesValidation%2A> property value is typically set to `false` for controls such as a Help button.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-459">En el ejemplo de código siguiente se utiliza la clase derivada <xref:System.Windows.Forms.TextBox> y valida una dirección de correo electrónico que el usuario escribe.</span><span class="sxs-lookup"><span data-stu-id="c1553-459">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="c1553-460">Si la dirección de correo electrónico no está en el formato estándar (que contiene "@" and "."), se produce un error en la validación, un <xref:System.Windows.Forms.ErrorProvider> icono se muestra y se cancela el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-460">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="c1553-461">Uno de los botones en el formulario tiene su <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-461">One of the buttons on the form has its <xref:System.Windows.Forms.Control.CausesValidation%2A> property set to `false`.</span></span> <span data-ttu-id="c1553-462">Al hacer clic en o establecer el foco en este botón no activa la validación.</span><span class="sxs-lookup"><span data-stu-id="c1553-462">Clicking or setting focus to this button does not trigger validation.</span></span> <span data-ttu-id="c1553-463">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox>, un <xref:System.Windows.Forms.ErrorProvider> control y un <xref:System.Windows.Forms.Button> se han creado en un formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-463">This example requires that a <xref:System.Windows.Forms.TextBox>, an <xref:System.Windows.Forms.ErrorProvider> control, and a <xref:System.Windows.Forms.Button> have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#2)]
 [!code-csharp[Control.Validating#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#2)]
 [!code-vb[Control.Validating#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="CausesValidationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CausesValidationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CausesValidationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.CausesValidationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CausesValidationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CausesValidationChanged;" />
      <MemberSignature Language="F#" Value="member this.CausesValidationChanged : EventHandler " Usage="member this.CausesValidationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-464">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.CausesValidation" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-464">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-465">Este evento se desencadena si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-465">This event is raised if the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-466">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-466">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="ChangeUICues">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.UICuesEventHandler ChangeUICues;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.UICuesEventHandler ChangeUICues" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ChangeUICues" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ChangeUICues As UICuesEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::UICuesEventHandler ^ ChangeUICues;" />
      <MemberSignature Language="F#" Value="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " Usage="member this.ChangeUICues : System.Windows.Forms.UICuesEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UICuesEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-467">Se produce cuando cambian las guías de la interfaz de usuario para el foco o el teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-467">Occurs when the focus or keyboard user interface (UI) cues change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-468">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-468">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-469">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-469">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-470">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.ChangeUICues> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-470">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ChangeUICues> event.</span></span> <span data-ttu-id="c1553-471">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-471">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-472">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-472">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-473">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-473">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-474">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.ChangeUICues> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-474">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ChangeUICues> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#67](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#67)]
 [!code-vb[System.Windows.Forms.EventExamples#67](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#67)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CheckForIllegalCrossThreadCalls">
      <MemberSignature Language="C#" Value="public static bool CheckForIllegalCrossThreadCalls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CheckForIllegalCrossThreadCalls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CheckForIllegalCrossThreadCalls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CheckForIllegalCrossThreadCalls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckForIllegalCrossThreadCalls : bool with get, set" Usage="System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-475">Obtiene o establece un valor que indica si se detectarán las llamadas en el subproceso equivocado que tiene acceso a la propiedad <see cref="P:System.Windows.Forms.Control.Handle" /> de un control cuando se está depurando una aplicación.</span><span class="sxs-lookup"><span data-stu-id="c1553-475">Gets or sets a value indicating whether to catch calls on the wrong thread that access a control's <see cref="P:System.Windows.Forms.Control.Handle" /> property when an application is being debugged.</span></span></summary>
        <value><span data-ttu-id="c1553-476"><see langword="true" /> si se detectan las llamadas en el subproceso equivocado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-476"><see langword="true" /> if calls on the wrong thread are caught; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-477">Cuando un subproceso distinto del subproceso de creación de un control intenta tener acceso a uno de los métodos o propiedades de ese control, suelen producirse resultados imprevisibles.</span><span class="sxs-lookup"><span data-stu-id="c1553-477">When a thread other than the creating thread of a control tries to access one of that control's methods or properties, it often leads to unpredictable results.</span></span> <span data-ttu-id="c1553-478">Una actividad de subproceso no válido común es una llamada en el subproceso equivocado que tiene acceso al control <xref:System.Windows.Forms.Control.Handle%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-478">A common invalid thread activity is a call on the wrong thread that accesses the control's <xref:System.Windows.Forms.Control.Handle%2A> property.</span></span> <span data-ttu-id="c1553-479">Establecer <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> a `true` para buscar y diagnosticar más fácilmente esta actividad de subproceso durante la depuración.</span><span class="sxs-lookup"><span data-stu-id="c1553-479">Set <xref:System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls%2A> to `true` to find and diagnose this thread activity more easily while debugging.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-480">Se produce cuando se hace clic en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-480">Occurs when the control is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-481">El <xref:System.Windows.Forms.Control.Click> evento pasa una <xref:System.EventArgs> a su controlador de eventos, por lo tanto, sólo indica que se ha producido un clic.</span><span class="sxs-lookup"><span data-stu-id="c1553-481">The <xref:System.Windows.Forms.Control.Click> event passes an <xref:System.EventArgs> to its event handler, so it only indicates that a click has occurred.</span></span> <span data-ttu-id="c1553-482">Si necesita información más específica de mouse (botón, número de clics, rotación de la rueda o ubicación), use el <xref:System.Windows.Forms.Control.MouseClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-482">If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span> <span data-ttu-id="c1553-483">Sin embargo, el <xref:System.Windows.Forms.Control.MouseClick> evento no se genera si se debe hacer clic en acción distinto del mouse, como presionar la tecla ENTRAR.</span><span class="sxs-lookup"><span data-stu-id="c1553-483">However, the <xref:System.Windows.Forms.Control.MouseClick> event will not be raised if the click is caused by action other than that of the mouse, such as pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="c1553-484">Un doble clic viene determinada por la configuración del mouse del sistema operativo del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-484">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="c1553-485">El usuario puede establecer el tiempo entre los clics de un botón del mouse que debe considerarse como un doble clic y no como dos clics.</span><span class="sxs-lookup"><span data-stu-id="c1553-485">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span> <span data-ttu-id="c1553-486">El <xref:System.Windows.Forms.Control.Click> evento se desencadena cada vez que se hace doble clic en un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-486">The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked.</span></span> <span data-ttu-id="c1553-487">Por ejemplo, si tiene controladores de eventos para el <xref:System.Windows.Forms.Control.Click> y <xref:System.Windows.Forms.Control.DoubleClick> eventos de un <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Control.Click> y <xref:System.Windows.Forms.Control.DoubleClick> se generan eventos cuando se hace doble clic en el formulario y se llama a ambos métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-487">For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called.</span></span> <span data-ttu-id="c1553-488">Si se hace doble clic en un control y que el control no admite la <xref:System.Windows.Forms.Control.DoubleClick> eventos, el <xref:System.Windows.Forms.Control.Click> evento podría generarse dos veces.</span><span class="sxs-lookup"><span data-stu-id="c1553-488">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.</span></span>  
  
 <span data-ttu-id="c1553-489">Debe establecer el `StandardClick` valor <xref:System.Windows.Forms.ControlStyles> a `true` para que se genere este evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-489">You must set the `StandardClick` value of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-490">Los siguientes eventos no se generan para el <xref:System.Windows.Forms.TabControl> a menos que haya al menos una de las clases <xref:System.Windows.Forms.TabPage> en el <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> colección: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> y <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="c1553-490">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="c1553-491">Si hay al menos un <xref:System.Windows.Forms.TabPage> en la colección, y el usuario interactúa con el encabezado del control de ficha (donde el <xref:System.Windows.Forms.TabPage> aparecen nombres), el <xref:System.Windows.Forms.TabControl> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-491">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="c1553-492">Sin embargo, si la interacción del usuario está dentro del área de cliente de la página de ficha, el <xref:System.Windows.Forms.TabPage> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-492">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="c1553-493">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-493">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
## <a name="notes-to-inheritors"></a><span data-ttu-id="c1553-494">Notas para los herederos</span><span class="sxs-lookup"><span data-stu-id="c1553-494">Notes to inheritors</span></span>

<span data-ttu-id="c1553-495">Heredar de un control de Windows Forms estándar y cambiar el `StandardClick` o `StandardDoubleClick` valores de <xref:System.Windows.Forms.ControlStyles> a `true` puede provocar un comportamiento inesperado o no tienen ningún efecto en absoluto si el control no admite el <xref:System.Windows.Forms.Control.Click> o <xref:System.Windows.Forms.Control.DoubleClick>eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-495">Inheriting from a standard Windows Forms control and changing the `StandardClick` or `StandardDoubleClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` can cause unexpected behavior or have no effect at all if the control does not support the <xref:System.Windows.Forms.Control.Click> or <xref:System.Windows.Forms.Control.DoubleClick> events.</span></span>
  
<span data-ttu-id="c1553-496">En la tabla siguiente se enumera los controles de formularios Windows Forms y qué evento (<xref:System.Windows.Forms.Control.Click> o <xref:System.Windows.Forms.Control.DoubleClick>) se produce en respuesta a la acción del mouse especificada.</span><span class="sxs-lookup"><span data-stu-id="c1553-496">The following table lists Windows Forms controls and which event (<xref:System.Windows.Forms.Control.Click> or <xref:System.Windows.Forms.Control.DoubleClick>) is raised in response to the mouse action specified.</span></span>

| <span data-ttu-id="c1553-497">Control</span><span class="sxs-lookup"><span data-stu-id="c1553-497">Control</span></span> | <span data-ttu-id="c1553-498">Clic del Mouse izquierdo</span><span class="sxs-lookup"><span data-stu-id="c1553-498">Left Mouse Click</span></span> | <span data-ttu-id="c1553-499">Haga doble clic en el primario del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-499">Left Mouse Double Click</span></span> | <span data-ttu-id="c1553-500">Haga clic derecho del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-500">Right Mouse Click</span></span> | <span data-ttu-id="c1553-501">Haga doble clic en el secundario del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-501">Right Mouse Double Click</span></span> | <span data-ttu-id="c1553-502">Haga clic central del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-502">Middle Mouse Click</span></span> | <span data-ttu-id="c1553-503">Haga doble clic en la central del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-503">Middle Mouse Double Click</span></span> | <span data-ttu-id="c1553-504">Haga clic en de XButton1 del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-504">XButton1 Mouse Click</span></span> | <span data-ttu-id="c1553-505">XButton1 del Mouse haga doble clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-505">XButton1 Mouse Double-Click</span></span> | <span data-ttu-id="c1553-506">Haga clic en de XButton2 del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-506">XButton2 Mouse Click</span></span> | <span data-ttu-id="c1553-507">XButton2 del Mouse haga doble clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-507">XButton2 Mouse Double-Click</span></span> | 
| ------- | ---------------- | ----------------------- | ----------------- | ------------------------ | ------------------ | ------------------------- | -------------------- | --------------------------- | -------------------- | --------------------------- |
| <span data-ttu-id="c1553-508"><xref:System.Windows.Forms.MonthCalendar>, <xref:System.Windows.Forms.DateTimePicker>, <xref:System.Windows.Forms.HScrollBar>, <xref:System.Windows.Forms.VScrollBar></span><span class="sxs-lookup"><span data-stu-id="c1553-508"><xref:System.Windows.Forms.MonthCalendar>, <xref:System.Windows.Forms.DateTimePicker>, <xref:System.Windows.Forms.HScrollBar>, <xref:System.Windows.Forms.VScrollBar></span></span> | <span data-ttu-id="c1553-509">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-509">none</span></span> | <span data-ttu-id="c1553-510">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-510">none</span></span> | <span data-ttu-id="c1553-511">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-511">none</span></span> | <span data-ttu-id="c1553-512">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-512">none</span></span> | <span data-ttu-id="c1553-513">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-513">none</span></span> | <span data-ttu-id="c1553-514">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-514">none</span></span> | <span data-ttu-id="c1553-515">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-515">none</span></span> | <span data-ttu-id="c1553-516">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-516">none</span></span> | <span data-ttu-id="c1553-517">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-517">none</span></span> | <span data-ttu-id="c1553-518">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-518">none</span></span> |
| <span data-ttu-id="c1553-519"><xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.RichTextBox>, <xref:System.Windows.Forms.RadioButton></span><span class="sxs-lookup"><span data-stu-id="c1553-519"><xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, <xref:System.Windows.Forms.RichTextBox>, <xref:System.Windows.Forms.RadioButton></span></span> | <span data-ttu-id="c1553-520">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-520">Click</span></span> | <span data-ttu-id="c1553-521">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-521">Click, Click</span></span> | <span data-ttu-id="c1553-522">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-522">none</span></span> | <span data-ttu-id="c1553-523">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-523">none</span></span> | <span data-ttu-id="c1553-524">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-524">none</span></span> | <span data-ttu-id="c1553-525">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-525">none</span></span> | <span data-ttu-id="c1553-526">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-526">none</span></span> | <span data-ttu-id="c1553-527">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-527">none</span></span> | <span data-ttu-id="c1553-528">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-528">none</span></span> | <span data-ttu-id="c1553-529">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-529">none</span></span> |
| <span data-ttu-id="c1553-530"><xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.CheckedListBox>, <xref:System.Windows.Forms.ComboBox></span><span class="sxs-lookup"><span data-stu-id="c1553-530"><xref:System.Windows.Forms.ListBox>, <xref:System.Windows.Forms.CheckedListBox>, <xref:System.Windows.Forms.ComboBox></span></span> | <span data-ttu-id="c1553-531">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-531">Click</span></span> | <span data-ttu-id="c1553-532">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-532">Click, DoubleClick</span></span> | <span data-ttu-id="c1553-533">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-533">none</span></span> | <span data-ttu-id="c1553-534">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-534">none</span></span> | <span data-ttu-id="c1553-535">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-535">none</span></span> | <span data-ttu-id="c1553-536">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-536">none</span></span> | <span data-ttu-id="c1553-537">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-537">none</span></span> | <span data-ttu-id="c1553-538">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-538">none</span></span> | <span data-ttu-id="c1553-539">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-539">none</span></span> | <span data-ttu-id="c1553-540">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-540">none</span></span> |
| <span data-ttu-id="c1553-541"><xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.DomainUpDown>, <xref:System.Windows.Forms.NumericUpDown></span><span class="sxs-lookup"><span data-stu-id="c1553-541"><xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.DomainUpDown>, <xref:System.Windows.Forms.NumericUpDown></span></span> | <span data-ttu-id="c1553-542">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-542">Click</span></span> | <span data-ttu-id="c1553-543">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-543">Click, DoubleClick</span></span> | <span data-ttu-id="c1553-544">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-544">none</span></span> | <span data-ttu-id="c1553-545">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-545">none</span></span> | <span data-ttu-id="c1553-546">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-546">none</span></span> | <span data-ttu-id="c1553-547">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-547">none</span></span> | <span data-ttu-id="c1553-548">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-548">none</span></span> | <span data-ttu-id="c1553-549">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-549">none</span></span> | <span data-ttu-id="c1553-550">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-550">none</span></span> | <span data-ttu-id="c1553-551">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-551">none</span></span> |
| <span data-ttu-id="c1553-552">\* <xref:System.Windows.Forms.TreeView>, \* <xref:System.Windows.Forms.ListView></span><span class="sxs-lookup"><span data-stu-id="c1553-552">\* <xref:System.Windows.Forms.TreeView>, \* <xref:System.Windows.Forms.ListView></span></span> | <span data-ttu-id="c1553-553">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-553">Click</span></span> | <span data-ttu-id="c1553-554">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-554">Click, DoubleClick</span></span> | <span data-ttu-id="c1553-555">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-555">Click</span></span> | <span data-ttu-id="c1553-556">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-556">Click, DoubleClick</span></span> | <span data-ttu-id="c1553-557">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-557">none</span></span> | <span data-ttu-id="c1553-558">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-558">none</span></span> | <span data-ttu-id="c1553-559">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-559">none</span></span> | <span data-ttu-id="c1553-560">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-560">none</span></span> | <span data-ttu-id="c1553-561">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-561">none</span></span> | <span data-ttu-id="c1553-562">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-562">none</span></span> |
| <span data-ttu-id="c1553-563"><xref:System.Windows.Forms.ProgressBar>, <xref:System.Windows.Forms.TrackBar></span><span class="sxs-lookup"><span data-stu-id="c1553-563"><xref:System.Windows.Forms.ProgressBar>, <xref:System.Windows.Forms.TrackBar></span></span> | <span data-ttu-id="c1553-564">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-564">Click</span></span> | <span data-ttu-id="c1553-565">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-565">Click, Click</span></span> | <span data-ttu-id="c1553-566">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-566">Click</span></span> | <span data-ttu-id="c1553-567">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-567">Click, Click</span></span> | <span data-ttu-id="c1553-568">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-568">Click</span></span> | <span data-ttu-id="c1553-569">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-569">Click, Click</span></span> | <span data-ttu-id="c1553-570">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-570">Click</span></span> | <span data-ttu-id="c1553-571">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-571">Click, Click</span></span> | <span data-ttu-id="c1553-572">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-572">Click</span></span> | <span data-ttu-id="c1553-573">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-573">Click, Click</span></span> |
| <span data-ttu-id="c1553-574"><xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.DataGrid>, <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.LinkLabel>, <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.PictureBox>, <xref:System.Windows.Forms.Splitter>, <xref:System.Windows.Forms.StatusBar>, <xref:System.Windows.Forms.ToolBar>, <xref:System.Windows.Forms.TabPage>, \*\* <xref:System.Windows.Forms.TabControl></span><span class="sxs-lookup"><span data-stu-id="c1553-574"><xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.DataGrid>, <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.LinkLabel>, <xref:System.Windows.Forms.Panel>, <xref:System.Windows.Forms.GroupBox>, <xref:System.Windows.Forms.PictureBox>, <xref:System.Windows.Forms.Splitter>, <xref:System.Windows.Forms.StatusBar>, <xref:System.Windows.Forms.ToolBar>, <xref:System.Windows.Forms.TabPage>, \*\* <xref:System.Windows.Forms.TabControl></span></span> | <span data-ttu-id="c1553-575">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-575">Click</span></span> | <span data-ttu-id="c1553-576">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-576">Click, DoubleClick</span></span> | <span data-ttu-id="c1553-577">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-577">Click</span></span> | <span data-ttu-id="c1553-578">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-578">Click, DoubleClick</span></span> | <span data-ttu-id="c1553-579">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-579">Click</span></span> | <span data-ttu-id="c1553-580">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-580">Click, DoubleClick</span></span> | <span data-ttu-id="c1553-581">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-581">Click</span></span> | <span data-ttu-id="c1553-582">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-582">Click, DoubleClick</span></span> | <span data-ttu-id="c1553-583">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-583">Click</span></span> | <span data-ttu-id="c1553-584">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-584">Click, DoubleClick</span></span> |

<span data-ttu-id="c1553-585">\* Debe ser el puntero del mouse sobre un objeto secundario (<xref:System.Windows.Forms.TreeNode> o <xref:System.Windows.Forms.ListViewItem>).</span><span class="sxs-lookup"><span data-stu-id="c1553-585">\* The mouse pointer must be over a child object (<xref:System.Windows.Forms.TreeNode> or <xref:System.Windows.Forms.ListViewItem>).</span></span>  
  
 <span data-ttu-id="c1553-586">\*\* Los <xref:System.Windows.Forms.TabControl> debe tener al menos un <xref:System.Windows.Forms.TabPage> en su <xref:System.Windows.Forms.TabControl.TabPages> colección.</span><span class="sxs-lookup"><span data-stu-id="c1553-586">\*\* The <xref:System.Windows.Forms.TabControl> must have at least one <xref:System.Windows.Forms.TabPage> in its <xref:System.Windows.Forms.TabControl.TabPages> collection.</span></span>

## Examples  
 <span data-ttu-id="c1553-587">El siguiente ejemplo de código muestra la <xref:System.Windows.Forms.Control.Click> eventos en un controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-587">The following code example shows the <xref:System.Windows.Forms.Control.Click> event in an event handler.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="ClientRectangle">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle ClientRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ClientRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ClientRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Rectangle ClientRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.Control.ClientRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-588">Obtiene el rectángulo que representa el área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-588">Gets the rectangle that represents the client area of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-589"><see cref="T:System.Drawing.Rectangle" /> que representa el área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-589">A <see cref="T:System.Drawing.Rectangle" /> that represents the client area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-590">El área cliente de un control es los límites del control, menos los elementos no cliente, como los bordes, las barras de título, los menús y barras de desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-590">The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span>  
  
 <span data-ttu-id="c1553-591">Dado que las coordenadas de cliente son relativas a la esquina superior izquierda del área cliente del control, las coordenadas de la esquina superior izquierda del rectángulo devuelto por esta propiedad son (0,0).</span><span class="sxs-lookup"><span data-stu-id="c1553-591">Because client coordinates are relative to the upper-left corner of the client area of the control, the coordinates of the upper-left corner of the rectangle returned by this property are (0,0).</span></span> <span data-ttu-id="c1553-592">Puede utilizar esta propiedad para obtener el tamaño y las coordenadas del área cliente del control para realizar tareas como dibujar en la superficie del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-592">You can use this property to obtain the size and coordinates of the client area of the control for tasks such as drawing on the surface of the control.</span></span>  
  
 <span data-ttu-id="c1553-593">Para obtener más información sobre el dibujo de controles, vea [representar un Control de Windows Forms](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-593">For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-594">En el ejemplo de código siguiente se habilita el desplazamiento automático para un formulario, cambia el tamaño del formulario y garantiza que un botón permanece visible después de que se cambia el tamaño del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-594">The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized.</span></span> <span data-ttu-id="c1553-595">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Button> denominado `button2` en él.</span><span class="sxs-lookup"><span data-stu-id="c1553-595">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `button2` on it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#2)]
 [!code-csharp[Windows.Forms.Control Member5#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#2)]
 [!code-vb[Windows.Forms.Control Member5#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
        <altmember cref="T:System.Windows.Forms.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size ClientSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size ClientSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ClientSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size ClientSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.ClientSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.ClientSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-596">Obtiene o establece el alto y el ancho del área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-596">Gets or sets the height and width of the client area of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-597"><see cref="T:System.Drawing.Size" /> que representa las dimensiones del área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-597">A <see cref="T:System.Drawing.Size" /> that represents the dimensions of the client area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-598">El área cliente de un control es los límites del control, menos los elementos no cliente, como los bordes, las barras de título, los menús y barras de desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-598">The client area of a control is the bounds of the control, minus the nonclient elements such as scroll bars, borders, title bars, and menus.</span></span> <span data-ttu-id="c1553-599">El <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> método se llama para establecer el <xref:System.Windows.Forms.Control.ClientSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-599">The <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method is called to set the <xref:System.Windows.Forms.Control.ClientSize%2A> property.</span></span> <span data-ttu-id="c1553-600">El <xref:System.Windows.Forms.Control.ClientSize%2A> propiedad no siempre se cambia a través de su `set` método por lo que se debe reemplazar el <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> método para asegurarse de que el código se ejecuta cuando el <xref:System.Windows.Forms.Control.ClientSize%2A> se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-600">The <xref:System.Windows.Forms.Control.ClientSize%2A> property is not always changed through its `set` method so you should override the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that your code is executed when the <xref:System.Windows.Forms.Control.ClientSize%2A> property is set.</span></span>  
  
 <span data-ttu-id="c1553-601">El <xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType> y <xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType> propiedades representan el ancho y alto del área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-601">The <xref:System.Drawing.Size.Width%2A?displayProperty=nameWithType> and <xref:System.Drawing.Size.Height%2A?displayProperty=nameWithType> properties represent the width and height of the client area of the control.</span></span> <span data-ttu-id="c1553-602">Puede utilizar esta propiedad para obtener el tamaño del área cliente del control para realizar tareas como dibujar en la superficie del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-602">You can use this property to obtain the size of the client area of the control for tasks such as drawing on the surface of the control.</span></span>  
  
 <span data-ttu-id="c1553-603">Para obtener más información sobre el dibujo de controles, vea [representar un Control de Windows Forms](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-603">For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-604">No se puede enlazar la configuración de la aplicación para esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-604">You cannot bind application settings to this property.</span></span> <span data-ttu-id="c1553-605">Para obtener más información sobre la configuración de la aplicación, consulte [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-605">For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-606">En el ejemplo de código siguiente se cambia el tamaño del control especificado para que el control alojará el texto con formato.</span><span class="sxs-lookup"><span data-stu-id="c1553-606">The following code example resizes the specified control so the control will accommodate its formatted text.</span></span> <span data-ttu-id="c1553-607">El texto con formato es el <xref:System.Windows.Forms.Control.Text%2A> asignado de propiedad con el control del <xref:System.Windows.Forms.Control.Font%2A> aplicado al texto.</span><span class="sxs-lookup"><span data-stu-id="c1553-607">The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text.</span></span> <span data-ttu-id="c1553-608">El `AutoSizeControl` método en este ejemplo también tiene un `textPadding` parámetro que representa el relleno que se aplican a todos los bordes del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-608">The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control.</span></span> <span data-ttu-id="c1553-609">Para que el relleno parecen iguales, se alinea el texto con el <xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType> valor, si el control lo permite.</span><span class="sxs-lookup"><span data-stu-id="c1553-609">To make the padding appear equal, align the text with the <xref:System.Drawing.ContentAlignment.MiddleCenter?displayProperty=nameWithType> value, if your control supports it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]
 [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]
 [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="T:System.Windows.Forms.DrawMode" />
      </Docs>
    </Member>
    <Member MemberName="ClientSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ClientSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ClientSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ClientSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ClientSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ClientSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.ClientSizeChanged : EventHandler " Usage="member this.ClientSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-610">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.ClientSize" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-610">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-611">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-611">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-612">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-612">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-613">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.ClientSizeChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-613">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.</span></span> <span data-ttu-id="c1553-614">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-614">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-615">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-615">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-616">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-616">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-617">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.ClientSizeChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-617">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ClientSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#12)]
 [!code-vb[System.Windows.Forms.EventExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompanyName">
      <MemberSignature Language="C#" Value="public string CompanyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompanyName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CompanyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompanyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CompanyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompanyName : string" Usage="System.Windows.Forms.Control.CompanyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("ControlCompanyNameDescr")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-618">Obtiene el nombre de la compañía o del creador de la aplicación que contiene el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-618">Gets the name of the company or creator of the application containing the control.</span></span></summary>
        <value><span data-ttu-id="c1553-619">Nombre de la compañía o del creador de la aplicación que contiene el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-619">The company name or creator of the application containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-620">El <xref:System.Windows.Forms.Control.CompanyName%2A> propiedad es una propiedad de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c1553-620">The <xref:System.Windows.Forms.Control.CompanyName%2A> property is a read-only property.</span></span> <span data-ttu-id="c1553-621">Para cambiar el valor de esta propiedad, establezca el <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> valor de propiedad de la <xref:System.Reflection.AssemblyCompanyAttribute>.</span><span class="sxs-lookup"><span data-stu-id="c1553-621">To change the value of this property, set the <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> property value of the <xref:System.Reflection.AssemblyCompanyAttribute>.</span></span> <span data-ttu-id="c1553-622">La siguiente línea de conjuntos de código de C# del <xref:System.Windows.Forms.Control.CompanyName%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-622">The following line of C# code sets the <xref:System.Windows.Forms.Control.CompanyName%2A> property.</span></span>  
  
```csharp  
[assembly: AssemblyCompany("Microsoft")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="c1553-623">Se recomienda encarecidamente proporcionar el nombre de la compañía, nombre de producto y versión del producto para la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c1553-623">It is strongly recommended that you provide the company name, product name, and product version for your app.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-624">En el ejemplo de código siguiente se muestra información acerca de la aplicación en un <xref:System.Windows.Forms.Label> contenidos en un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-624">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-625">Este ejemplo requiere que el <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> y <xref:System.Windows.Forms.Control.ProductVersion%2A> se han establecido.</span><span class="sxs-lookup"><span data-stu-id="c1553-625">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyCompanyAttribute.Company" />
        <altmember cref="P:System.Diagnostics.FileVersionInfo.CompanyName" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.Control ctl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.Control ctl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (ctl As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::Control ^ ctl);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Windows.Forms.Control -&gt; bool" Usage="control.Contains ctl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="c1553-626"><see cref="T:System.Windows.Forms.Control" /> que se va a evaluar.</span><span class="sxs-lookup"><span data-stu-id="c1553-626">The <see cref="T:System.Windows.Forms.Control" /> to evaluate.</span></span></param>
        <summary><span data-ttu-id="c1553-627">Obtiene un valor que indica si el control especificado es un control secundario del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-627">Retrieves a value indicating whether the specified control is a child of the control.</span></span></summary>
        <returns><span data-ttu-id="c1553-628"><see langword="true" /> si el control especificado es un control secundario del control; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-628"><see langword="true" /> if the specified control is a child of the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-629">El siguiente ejemplo de código que garantiza una <xref:System.Windows.Forms.Label> está visible mediante una llamada a su <xref:System.Windows.Forms.Control.BringToFront%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-629">The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method.</span></span> <span data-ttu-id="c1553-630">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.Panel> denominado `panel1`y un <xref:System.Windows.Forms.Label> denominado `label1`.</span><span class="sxs-lookup"><span data-stu-id="c1553-630">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members4#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#1)]
 [!code-vb[Windows.Forms.Control Members4#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ControlCollection.Contains(System.Windows.Forms.Control)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFocus">
      <MemberSignature Language="C#" Value="public bool ContainsFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContainsFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContainsFocus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainsFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ContainsFocus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainsFocus : bool" Usage="System.Windows.Forms.Control.ContainsFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-631">Obtiene un valor que indica si el control, o uno de sus controles secundarios, tiene el foco de entrada en la actualidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-631">Gets a value indicating whether the control, or one of its child controls, currently has the input focus.</span></span></summary>
        <value><span data-ttu-id="c1553-632"><see langword="true" /> si el control o uno de sus controles secundarios tiene el foco de entrada en la actualidad; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-632"><see langword="true" /> if the control or one of its child controls currently has the input focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-633">Puede utilizar esta propiedad para determinar si un control o cualquiera de los controles contenidos en la misma tiene el foco de entrada.</span><span class="sxs-lookup"><span data-stu-id="c1553-633">You can use this property to determine whether a control or any of the controls contained within it has the input focus.</span></span> <span data-ttu-id="c1553-634">Para determinar si el control tiene foco, independientemente de si alguno de sus controles secundarios tiene el foco, utilice el <xref:System.Windows.Forms.Control.Focused%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-634">To determine whether the control has focus, regardless of whether any of its child controls have focus, use the <xref:System.Windows.Forms.Control.Focused%2A> property.</span></span> <span data-ttu-id="c1553-635">Para dar el foco de entrada de un control, utilice el <xref:System.Windows.Forms.Control.Focus%2A> o <xref:System.Windows.Forms.Control.Select%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-635">To give a control the input focus, use the <xref:System.Windows.Forms.Control.Focus%2A> or <xref:System.Windows.Forms.Control.Select%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenu ^ ContextMenu { System::Windows::Forms::ContextMenu ^ get(); void set(System::Windows::Forms::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Forms.ContextMenu with get, set" Usage="System.Windows.Forms.Control.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-636">Obtiene o establece el menú contextual asociado al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-636">Gets or sets the shortcut menu associated with the control.</span></span></summary>
        <value><span data-ttu-id="c1553-637"><see cref="T:System.Windows.Forms.ContextMenu" /> que representa el menú contextual asociado al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-637">A <see cref="T:System.Windows.Forms.ContextMenu" /> that represents the shortcut menu associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-638">Use los menús contextuales para ofrecer a los usuarios opciones de menú específicas del contexto cuando haga doble clic en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-638">Use a shortcut menus to give context-specific menu options to users when they right-click on the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-639">El siguiente código de ejemplo se muestra el <xref:System.Windows.Forms.ContextMenu> asignado a un <xref:System.Windows.Forms.TreeView> cuando se hace clic y libera el botón secundario del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-639">The following code example displays the <xref:System.Windows.Forms.ContextMenu> assigned to a <xref:System.Windows.Forms.TreeView> when the right mouse button is clicked and released.</span></span> <span data-ttu-id="c1553-640">Este código requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TreeView> en él.</span><span class="sxs-lookup"><span data-stu-id="c1553-640">This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> on it.</span></span> <span data-ttu-id="c1553-641">También es necesario que el <xref:System.Windows.Forms.TreeView> tiene un <xref:System.Windows.Forms.ContextMenu> asignado a su <xref:System.Windows.Forms.Control.ContextMenu%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-641">It is also required that the <xref:System.Windows.Forms.TreeView> has a <xref:System.Windows.Forms.ContextMenu> assigned to its <xref:System.Windows.Forms.Control.ContextMenu%2A> property.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#5)]
 [!code-csharp[Windows.Forms.Control Properties2#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#5)]
 [!code-vb[Windows.Forms.Control Properties2#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-642">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.ContextMenu" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.ContextMenu" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-642">When overriding the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-643">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-643">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-644">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.ContextMenu" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-644">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ContextMenuChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuChanged : EventHandler " Usage="member this.ContextMenuChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-645">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-645">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-646">Este evento se desencadena si el <xref:System.Windows.Forms.Control.ContextMenu%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-646">This event is raised if the <xref:System.Windows.Forms.Control.ContextMenu%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-647">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-647">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-648">En el ejemplo de código siguiente se muestra un mensaje cuando se produce un cambio en el menú contextual.</span><span class="sxs-lookup"><span data-stu-id="c1553-648">The following code example displays a message when a change occurs to the shortcut menu.</span></span>  
  
 [!code-cpp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CPP/control_contextmenu_creategraphics.cpp#2)]
 [!code-csharp[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/CS/control_contextmenu_creategraphics.cs#2)]
 [!code-vb[Control_ContextMenu_CreateGraphics#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_ContextMenu_CreateGraphics/VB/control_contextmenu_creategraphics.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStrip">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ContextMenuStrip ContextMenuStrip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ContextMenuStrip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextMenuStrip As ContextMenuStrip" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ContextMenuStrip ^ ContextMenuStrip { System::Windows::Forms::ContextMenuStrip ^ get(); void set(System::Windows::Forms::ContextMenuStrip ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStrip : System.Windows.Forms.ContextMenuStrip with get, set" Usage="System.Windows.Forms.Control.ContextMenuStrip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ContextMenuStrip</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-649">Obtiene o establece el <see cref="T:System.Windows.Forms.ContextMenuStrip" /> asociado a este control.</span><span class="sxs-lookup"><span data-stu-id="c1553-649">Gets or sets the <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with this control.</span></span></summary>
        <value><span data-ttu-id="c1553-650">El <see cref="T:System.Windows.Forms.ContextMenuStrip" /> para este control o <see langword="null" /> si no hay ningún <see cref="T:System.Windows.Forms.ContextMenuStrip" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-650">The <see cref="T:System.Windows.Forms.ContextMenuStrip" /> for this control, or <see langword="null" /> if there is no <see cref="T:System.Windows.Forms.ContextMenuStrip" />.</span></span> <span data-ttu-id="c1553-651">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-651">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-652">Si un <xref:System.Windows.Forms.ContextMenu> también está asignado al control, el <xref:System.Windows.Forms.ContextMenu> tiene prioridad sobre la <xref:System.Windows.Forms.ContextMenuStrip>.</span><span class="sxs-lookup"><span data-stu-id="c1553-652">If a <xref:System.Windows.Forms.ContextMenu> has also been assigned to the control, the <xref:System.Windows.Forms.ContextMenu> takes precedence over the <xref:System.Windows.Forms.ContextMenuStrip>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-653">En el ejemplo de código siguiente se muestra cómo agregar tres <xref:System.Windows.Forms.ToolStripMenuItem> objetos a un <xref:System.Windows.Forms.ContextMenuStrip>.</span><span class="sxs-lookup"><span data-stu-id="c1553-653">The following code example demonstrates how to add three <xref:System.Windows.Forms.ToolStripMenuItem> objects to a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="c1553-654">Además se muestra cómo establecer el <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> propiedad del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-654">In addition it demonstrates setting the <xref:System.Windows.Forms.Control.ContextMenuStrip%2A> property of the form.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.ContextMenuStrip#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.ContextMenuStrip/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuStripChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ContextMenuStripChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContextMenuStripChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ContextMenuStripChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuStripChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContextMenuStripChanged;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuStripChanged : EventHandler " Usage="member this.ContextMenuStripChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-655">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-655">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-656">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-656">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-657">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-657">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-658">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.ContextMenuStripChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-658">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.</span></span> <span data-ttu-id="c1553-659">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-659">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-660">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-660">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-661">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-661">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-662">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.ContextMenuStripChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-662">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.ContextMenuStripChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#14)]
 [!code-vb[System.Windows.Forms.EventExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlAdded">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlAdded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlAdded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ControlAdded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlAdded As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlAdded;" />
      <MemberSignature Language="F#" Value="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlAdded : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-663">Se produce cuando se agrega un nuevo control a <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-663">Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-664">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-664">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-665">El siguiente ejemplo de código usa <xref:System.Windows.Forms.Control.ControlAdded> para agregar un control a un formulario y muestra el nombre del control se ha agregado en un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-665">The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ControlRemoved">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ControlEventHandler ControlRemoved;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ControlEventHandler ControlRemoved" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ControlRemoved" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ControlRemoved As ControlEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ControlEventHandler ^ ControlRemoved;" />
      <MemberSignature Language="F#" Value="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " Usage="member this.ControlRemoved : System.Windows.Forms.ControlEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-666">Se produce cuando se quita un control de <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-666">Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-667">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-667">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-668">El siguiente ejemplo de código usa <xref:System.Windows.Forms.Control.ControlRemoved> para quitar un control de un formulario y muestra el nombre del control eliminado en un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-668">The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control/ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Controls" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Controls As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control::ControlCollection ^ Controls { System::Windows::Forms::Control::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Windows.Forms.Control.ControlCollection" Usage="System.Windows.Forms.Control.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-669">Obtiene la colección de controles que contiene el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-669">Gets the collection of controls contained within the control.</span></span></summary>
        <value><span data-ttu-id="c1553-670"><see cref="T:System.Windows.Forms.Control.ControlCollection" /> que representa la colección de controles incluidos en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-670">A <see cref="T:System.Windows.Forms.Control.ControlCollection" /> representing the collection of controls contained within the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-671">Un <xref:System.Windows.Forms.Control> puede actuar como primario de una colección de controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-671">A <xref:System.Windows.Forms.Control> can act as a parent to a collection of controls.</span></span> <span data-ttu-id="c1553-672">Por ejemplo, cuando se agregan varios controles a un <xref:System.Windows.Forms.Form>, cada uno de los controles es un miembro de la <xref:System.Windows.Forms.Control.ControlCollection> asignado a la <xref:System.Windows.Forms.Control.Controls%2A> propiedad del formulario, que se deriva el <xref:System.Windows.Forms.Control> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-672">For example, when several controls are added to a <xref:System.Windows.Forms.Form>, each of the controls is a member of the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property of the form, which is derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 <span data-ttu-id="c1553-673">Puede manipular los controles en el <xref:System.Windows.Forms.Control.ControlCollection> asignado a la <xref:System.Windows.Forms.Control.Controls%2A> propiedad mediante el uso de los métodos disponibles en la <xref:System.Windows.Forms.Control.ControlCollection> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-673">You can manipulate the controls in the <xref:System.Windows.Forms.Control.ControlCollection> assigned to the <xref:System.Windows.Forms.Control.Controls%2A> property by using the methods available in the <xref:System.Windows.Forms.Control.ControlCollection> class.</span></span>  
  
 <span data-ttu-id="c1553-674">Al agregar varios controles a un control principal, se recomienda que llame el <xref:System.Windows.Forms.Control.SuspendLayout%2A> método antes de inicializar los controles que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="c1553-674">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="c1553-675">Después de agregar los controles al control primario, llame a la <xref:System.Windows.Forms.Control.ResumeLayout%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-675">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="c1553-676">Si lo hace, aumentará el rendimiento de aplicaciones con muchos controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-676">Doing so will increase the performance of applications with many controls.</span></span>  
  
 <span data-ttu-id="c1553-677">Use el <xref:System.Windows.Forms.Control.Controls%2A> propiedad para recorrer en iteración todos los controles de un formulario, incluidos los controles anidados.</span><span class="sxs-lookup"><span data-stu-id="c1553-677">Use the <xref:System.Windows.Forms.Control.Controls%2A> property to iterate through all controls of a form, including nested controls.</span></span> <span data-ttu-id="c1553-678">Use el <xref:System.Windows.Forms.Control.GetNextControl%2A> método para recuperar el control secundario anterior o siguiente en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-678">Use the <xref:System.Windows.Forms.Control.GetNextControl%2A> method to retrieve the previous or next child control in the tab order.</span></span> <span data-ttu-id="c1553-679">Use el <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> propiedad va a obtener o establecer el control activo de un control contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-679">Use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property to get or set the active control of a container control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-680">El código siguiente en el ejemplo se quita un <xref:System.Windows.Forms.Control> desde el <xref:System.Windows.Forms.Control.ControlCollection> de la clase derivada <xref:System.Windows.Forms.Panel> si es un miembro de la colección.</span><span class="sxs-lookup"><span data-stu-id="c1553-680">The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection.</span></span> <span data-ttu-id="c1553-681">El ejemplo requiere que se haya creado un <xref:System.Windows.Forms.Panel>, un <xref:System.Windows.Forms.Button>y al menos un <xref:System.Windows.Forms.RadioButton> control en un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-681">The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-682">El <xref:System.Windows.Forms.RadioButton> controles se agregan a la <xref:System.Windows.Forms.Panel> control y el <xref:System.Windows.Forms.Panel> control agregado al <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-682">The <xref:System.Windows.Forms.RadioButton> control(s) are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-683">Cuando se hace clic en el botón, el botón de radio denominado `removeButton` se quita de la <xref:System.Windows.Forms.Control.ControlCollection>.</span><span class="sxs-lookup"><span data-stu-id="c1553-683">When the button is clicked, the radio button named `removeButton` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.</span></span>  
  
 [!code-cpp[ControlCollection#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlCollection/CPP/controlcollection.cpp#4)]
 [!code-csharp[ControlCollection#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlCollection/CS/controlcollection.cs#4)]
 [!code-vb[ControlCollection#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlCollection/VB/controlcollection.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControlsInstance" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="control.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-684">Crea un nuevo objeto de accesibilidad para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-684">Creates a new accessibility object for the control.</span></span></summary>
        <returns><span data-ttu-id="c1553-685">Nuevo <see cref="T:System.Windows.Forms.AccessibleObject" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-685">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-686">Si no se llama de forma explícita al método <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>, se llamará a este método al hacer referencia a la propiedad <xref:System.Windows.Forms.Control.AccessibilityObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-686">If you do not explicitly call the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method, it will be called when the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property is referenced.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-687">Para obtener o establecer el <xref:System.Windows.Forms.Control.AccessibilityObject%2A> propiedad, debe agregar una referencia a la `Accessibility` ensamblado instalado con el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="c1553-687">To get or set the <xref:System.Windows.Forms.Control.AccessibilityObject%2A> property, you must add a reference to the `Accessibility` assembly installed with the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-688">En el ejemplo de código siguiente se muestra la creación de un gráfico de accesibilidad para controlar, mediante el <xref:System.Windows.Forms.AccessibleObject> y <xref:System.Windows.Forms.Control.ControlAccessibleObject> clases para exponer información accesible.</span><span class="sxs-lookup"><span data-stu-id="c1553-688">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c1553-689">El control traza dos curvas junto con una leyenda.</span><span class="sxs-lookup"><span data-stu-id="c1553-689">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c1553-690">El `ChartControlAccessibleObject` (clase), que se deriva de `ControlAccessibleObject`, se usa en el <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> método para proporcionar información personalizada accesible para el control chart.</span><span class="sxs-lookup"><span data-stu-id="c1553-690">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c1553-691">Dado que la leyenda del gráfico no es un real <xref:System.Windows.Forms.Control> -control basado en, pero en su lugar se dibuja mediante el control chart, lo hace no ninguna información accesible.</span><span class="sxs-lookup"><span data-stu-id="c1553-691">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="c1553-692">Por este motivo, el `ChartControlAccessibleObject` clase invalida el <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> método para devolver el `CurveLegendAccessibleObject` que representa la información accesible de cada parte de la leyenda.</span><span class="sxs-lookup"><span data-stu-id="c1553-692">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c1553-693">Cuando una aplicación accesible para usa este control, el control puede proporcionar la información de acceso necesaria.</span><span class="sxs-lookup"><span data-stu-id="c1553-693">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c1553-694">Este fragmento de código se muestra cómo reemplazar el <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-694">This code excerpt demonstrates overriding the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method.</span></span> <span data-ttu-id="c1553-695">Consulte la <xref:System.Windows.Forms.AccessibleObject> información general de clases para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-695">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#2)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#2)]
 [!code-vb[System.Windows.Forms.AccessibleObject#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-696">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> en una clase derivada, no llame a la clase base <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-696">When overriding <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> in a derived class, do not call the base class's <see cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" /> method.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Control.ControlAccessibleObject" />
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="CreateControl">
      <MemberSignature Language="C#" Value="public void CreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateControl" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateControl();" />
      <MemberSignature Language="F#" Value="member this.CreateControl : unit -&gt; unit" Usage="control.CreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-697">Fuerza la creación del control visible, incluidos el identificador y los controles secundarios visibles.</span><span class="sxs-lookup"><span data-stu-id="c1553-697">Forces the creation of the visible control, including the creation of the handle and any visible child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-698">El <xref:System.Windows.Forms.Control.CreateControl%2A> método obliga a un identificador que se crearán para el control y sus controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-698">The <xref:System.Windows.Forms.Control.CreateControl%2A> method forces a handle to be created for the control and its child controls.</span></span> <span data-ttu-id="c1553-699">Este método se utiliza cuando se necesita un identificador inmediatamente para la manipulación del control o sus elementos secundarios; basta con llamar el constructor de un control no crea el <xref:System.Windows.Forms.Control.Handle%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-699">This method is used when you need a handle immediately for manipulation of the control or its children; simply calling a control's constructor does not create the <xref:System.Windows.Forms.Control.Handle%2A>.</span></span>  
  
 <span data-ttu-id="c1553-700"><xref:System.Windows.Forms.Control.CreateControl%2A> no crea un identificador de control si el control <xref:System.Windows.Forms.Control.Visible%2A> propiedad es `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-700"><xref:System.Windows.Forms.Control.CreateControl%2A> does not create a control handle if the control's <xref:System.Windows.Forms.Control.Visible%2A> property is `false`.</span></span> <span data-ttu-id="c1553-701">Puede llamar a la <xref:System.Windows.Forms.Control.CreateHandle%2A> método o acceso a la <xref:System.Windows.Forms.Control.Handle%2A> propiedad para crear el control para controlar independientemente la visibilidad del control, pero en este caso, no hay ninguna ventana que se creen los controladores para los elementos secundarios del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-701">You can either call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method or access the <xref:System.Windows.Forms.Control.Handle%2A> property to create the control's handle regardless of the control's visibility, but in this case, no window handles are created for the control's children.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlsInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Control/ControlCollection CreateControlsInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateControlsInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlsInstance () As Control.ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Control::ControlCollection ^ CreateControlsInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection&#xA;override this.CreateControlsInstance : unit -&gt; System.Windows.Forms.Control.ControlCollection" Usage="control.CreateControlsInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control+ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-702">Crea una nueva instancia de la colección de controles para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-702">Creates a new instance of the control collection for the control.</span></span></summary>
        <returns><span data-ttu-id="c1553-703">Nueva instancia de <see cref="T:System.Windows.Forms.Control.ControlCollection" /> que se le asigna al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-703">A new instance of <see cref="T:System.Windows.Forms.Control.ControlCollection" /> assigned to the control.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-704">La versión de la clase base de este método no debe llamarse mediante una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-704">The base class version of this method should not be called by a derived class.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public bool Created { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Created" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Created" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Created As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Created { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Created : bool" Usage="System.Windows.Forms.Control.Created" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-705">Obtiene un valor que indica si se ha creado el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-705">Gets a value indicating whether the control has been created.</span></span></summary>
        <value><span data-ttu-id="c1553-706">Es <see langword="true" /> si se ha creado el control; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-706"><see langword="true" /> if the control has been created; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-707">El <xref:System.Windows.Forms.Control.Created%2A> propiedad devuelve `true` si el <xref:System.Windows.Forms.Control> se creó correctamente, aunque es posible que el identificador del control no se han creado o volver a crear todavía.</span><span class="sxs-lookup"><span data-stu-id="c1553-707">The <xref:System.Windows.Forms.Control.Created%2A> property returns `true` if the <xref:System.Windows.Forms.Control> was successfully created even though the control's handle might not have been created or recreated yet.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.OnCreateControl" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="CreateGraphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics CreateGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Graphics CreateGraphics() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateGraphics" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateGraphics () As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Graphics ^ CreateGraphics();" />
      <MemberSignature Language="F#" Value="member this.CreateGraphics : unit -&gt; System.Drawing.Graphics" Usage="control.CreateGraphics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-708">Crea el <see cref="T:System.Drawing.Graphics" /> para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-708">Creates the <see cref="T:System.Drawing.Graphics" /> for the control.</span></span></summary>
        <returns><span data-ttu-id="c1553-709"><see cref="T:System.Drawing.Graphics" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-709">The <see cref="T:System.Drawing.Graphics" /> for the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-710">El <xref:System.Drawing.Graphics> objeto que se recupera mediante el <xref:System.Windows.Forms.Control.CreateGraphics%2A> método no normalmente deben retenerse una vez procesado el mensaje actual de Windows, ya que nada se pinta con ese objeto se borrarán con el siguiente mensaje WM_PAINT.</span><span class="sxs-lookup"><span data-stu-id="c1553-710">The <xref:System.Drawing.Graphics> object that you retrieve through the <xref:System.Windows.Forms.Control.CreateGraphics%2A> method should not normally be retained after the current Windows message has been processed, because anything painted with that object will be erased with the next WM_PAINT message.</span></span> <span data-ttu-id="c1553-711">Por lo tanto no se puede almacenar en caché el <xref:System.Drawing.Graphics> objeto para su reutilización, excepto para usar métodos no visual, como <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c1553-711">Therefore you cannot cache the <xref:System.Drawing.Graphics> object for reuse, except to use non-visual methods like <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1553-712">En su lugar, debe llamar a <xref:System.Windows.Forms.Control.CreateGraphics%2A> cada vez que se va a usar el <xref:System.Drawing.Graphics> objeto y, a continuación, llame a <xref:System.Drawing.Graphics.Dispose%2A> cuando haya terminado de utilizarlo.</span><span class="sxs-lookup"><span data-stu-id="c1553-712">Instead, you must call <xref:System.Windows.Forms.Control.CreateGraphics%2A> every time that you want to use the <xref:System.Drawing.Graphics> object, and then call <xref:System.Drawing.Graphics.Dispose%2A> when you are finished using it.</span></span> <span data-ttu-id="c1553-713">Para obtener más información acerca de los mensajes de Windows, consulte <xref:System.Windows.Forms.Control.WndProc%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-713">For more information about Windows messages, see <xref:System.Windows.Forms.Control.WndProc%2A>.</span></span>  
  
 <span data-ttu-id="c1553-714">Por diseño, <xref:System.Windows.Forms.Control.CreateGraphics%2A> establece la propiedad en el subproceso de llamada y se produce un error si se llama en otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-714">By design, <xref:System.Windows.Forms.Control.CreateGraphics%2A> sets ownership to the calling thread, and fails if it is called on other threads.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-715">Además el <xref:System.Windows.Forms.Control.InvokeRequired%2A> propiedad, hay cuatro métodos en un control que son seguros para subprocesos: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, y <xref:System.Windows.Forms.Control.CreateGraphics%2A> si ya se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-715">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="c1553-716">Una llamada a <xref:System.Windows.Forms.Control.CreateGraphics%2A> antes de que se ha creado el identificador del control en un subproceso en segundo plano puede provocar no válidas entre las llamadas de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-716">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="c1553-717">Para todas las demás llamadas de método, debe usar uno de los métodos de invocación para calcular las referencias de la llamada al subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-717">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-718">En el ejemplo de código siguiente se cambia el tamaño del control especificado para que el control alojará el texto con formato.</span><span class="sxs-lookup"><span data-stu-id="c1553-718">The following code example resizes the specified control so the control will accommodate its formatted text.</span></span> <span data-ttu-id="c1553-719">El texto con formato es el <xref:System.Windows.Forms.Control.Text%2A> asignado de propiedad con el control del <xref:System.Windows.Forms.Control.Font%2A> aplicado al texto.</span><span class="sxs-lookup"><span data-stu-id="c1553-719">The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text.</span></span> <span data-ttu-id="c1553-720">El `AutoSizeControl` método en este ejemplo también tiene un `textPadding` parámetro que representa el relleno que se aplican a todos los bordes del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-720">The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control.</span></span> <span data-ttu-id="c1553-721">Para que el relleno parecen iguales, se alinea el texto con el `MiddleCenter` valor <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType> si el control lo admite.</span><span class="sxs-lookup"><span data-stu-id="c1553-721">To make the padding appear equal, align the text with the `MiddleCenter` value of <xref:System.Drawing.ContentAlignment?displayProperty=nameWithType> if your control supports it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Member5#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CPP/controlmembers5.cpp#1)]
 [!code-csharp[Windows.Forms.Control Member5#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Member5/CS/controlmembers5.cs#1)]
 [!code-vb[Windows.Forms.Control Member5#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Member5/VB/controlmembers5.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-722">para las ventanas secundarias seguras llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-722">for safe subwindows to call this method.</span></span> <span data-ttu-id="c1553-723">Enumeración asociada: <see langword="SafeSubWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-723">Associated enumeration: <see langword="SafeSubWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="T:System.Drawing.Graphics" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void CreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.CreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateHandle();" />
      <MemberSignature Language="F#" Value="abstract member CreateHandle : unit -&gt; unit&#xA;override this.CreateHandle : unit -&gt; unit" Usage="control.CreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-724">Crea un identificador para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-724">Creates a handle for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-725">Normalmente no se debería llamar el <xref:System.Windows.Forms.Control.CreateHandle%2A> método directamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-725">You typically should not call the <xref:System.Windows.Forms.Control.CreateHandle%2A> method directly.</span></span> <span data-ttu-id="c1553-726">El método preferido es llamar a la <xref:System.Windows.Forms.Control.CreateControl%2A> método, que fuerza un identificador que se crearán para el control y sus controles secundarios cuando se crea el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-726">The preferred method is to call the <xref:System.Windows.Forms.Control.CreateControl%2A> method, which forces a handle to be created for the control and its child controls when the control is created.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="c1553-727">El objeto está en un estado eliminado.</span><span class="sxs-lookup"><span data-stu-id="c1553-727">The object is in a disposed state.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-728">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-728">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-729">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-729">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-730">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.CreateHandle" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.Control.CreateHandle" /> método para asegurarse de que se crea el identificador.</span><span class="sxs-lookup"><span data-stu-id="c1553-730">When overriding <see cref="M:System.Windows.Forms.Control.CreateHandle" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.CreateHandle" /> method to ensure that the handle is created.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.Control.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-731">Obtiene los parámetros de creación necesarios cuando se crea el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-731">Gets the required creation parameters when the control handle is created.</span></span></summary>
        <value><span data-ttu-id="c1553-732"><see cref="T:System.Windows.Forms.CreateParams" /> que contiene los parámetros de creación necesarios cuando se crea el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-732">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-733">El <xref:System.Windows.Forms.Control.CreateParams%2A> propiedad no se debe invalidar y utiliza para ajustar las propiedades del control derivado.</span><span class="sxs-lookup"><span data-stu-id="c1553-733">The <xref:System.Windows.Forms.Control.CreateParams%2A> property should not be overridden and used to adjust the properties of your derived control.</span></span> <span data-ttu-id="c1553-734">Propiedades, como el <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>, y <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> debe establecer las propiedades correspondientes en el control como <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c1553-734">Properties such as the <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> should be set by the corresponding properties in your control such as <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1553-735">El <xref:System.Windows.Forms.CreateParams> sólo debe extenderse cuando se está ajustando una clase de control estándar de Windows o para establecer estilos no proporcionados por el espacio de nombres de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-735">The <xref:System.Windows.Forms.CreateParams> should only be extended when you are wrapping a standard Windows control class or to set styles not provided by the Windows Forms namespace.</span></span> <span data-ttu-id="c1553-736">Para obtener más información acerca de cómo crear parámetros de control, vea el `CreateWindow` y `CreateWindowEx` funciones y la [CREATESTRUCT](https://msdn.microsoft.com/library/windows/desktop/ms632603.aspx) documentación de la estructura.</span><span class="sxs-lookup"><span data-stu-id="c1553-736">For more information about creating control parameters, see the `CreateWindow` and `CreateWindowEx` functions and the [CREATESTRUCT](https://msdn.microsoft.com/library/windows/desktop/ms632603.aspx) structure documentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-737">En el ejemplo de código siguiente se amplía el <xref:System.Windows.Forms.Control.CreateParams%2A> propiedad de un <xref:System.Windows.Forms.Button> clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-737">The following code example extends the <xref:System.Windows.Forms.Control.CreateParams%2A> property of a <xref:System.Windows.Forms.Button> derived class.</span></span> <span data-ttu-id="c1553-738">El <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> propiedad ha cambiado, lo que hace que el botón para mostrar un <xref:System.Drawing.Icon> en lugar de un <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="c1553-738">The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="c1553-739">En este ejemplo requiere que tenga una clase que hereda de la <xref:System.Windows.Forms.Button> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-739">This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.</span></span>  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1553-740">Para que el llamador inmediato llamar a código no administrado al obtener el valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-740">for the immediate caller to call unmanaged code when getting the property value.</span></span> <span data-ttu-id="c1553-741">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c1553-741">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-742">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.CreateParams" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.CreateParams" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-742">When overriding the <see cref="P:System.Windows.Forms.Control.CreateParams" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.CreateParams" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-743">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-743">Otherwise, you must provide all the implementation.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Cursor ^ Cursor { System::Windows::Forms::Cursor ^ get(); void set(System::Windows::Forms::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Forms.Cursor with get, set" Usage="System.Windows.Forms.Control.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-744">Obtiene o establece el cursor que se muestra cuando el puntero del mouse se sitúa sobre el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-744">Gets or sets the cursor that is displayed when the mouse pointer is over the control.</span></span></summary>
        <value><span data-ttu-id="c1553-745">Un <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor que se va a mostrar cuando el puntero del mouse se sitúe sobre el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-745">A <see cref="T:System.Windows.Forms.Cursor" /> that represents the cursor to display when the mouse pointer is over the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-746">Asignar un <xref:System.Windows.Forms.Cursor> a la <xref:System.Windows.Forms.Control.Cursor%2A> propiedad del control para cambiar el cursor que se muestra cuando el puntero del mouse está encima del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-746">Assign a <xref:System.Windows.Forms.Cursor> to the <xref:System.Windows.Forms.Control.Cursor%2A> property of the control to change the cursor displayed when the mouse pointer is over the control.</span></span> <span data-ttu-id="c1553-747">Para cambiar temporalmente el cursor del mouse para todos los controles en el conjunto de aplicaciones el <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-747">To temporarily change the mouse cursor for all controls on your application set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="c1553-748">Normalmente, establecería el <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> propiedad a un cursor de espera al rellenar un <xref:System.Windows.Forms.ComboBox> o guardar o cargar un archivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-748">Typically you would set the <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=nameWithType> property to a wait cursor when populating a <xref:System.Windows.Forms.ComboBox> or saving or loading a file.</span></span>  
  
 <span data-ttu-id="c1553-749">El <xref:System.Windows.Forms.Control.Cursor%2A> es una propiedad de ambiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-749">The <xref:System.Windows.Forms.Control.Cursor%2A> property is an ambient property.</span></span> <span data-ttu-id="c1553-750">Una propiedad de ambiente es una propiedad de control que, si no establece, se recupera desde el control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-750">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="c1553-751">Por ejemplo, un <xref:System.Windows.Forms.Button> tendrá el mismo <xref:System.Windows.Forms.Control.BackColor%2A> como su elemento primario <xref:System.Windows.Forms.Form> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-751">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="c1553-752">Para obtener más información acerca de las propiedades de ambiente, vea la <xref:System.Windows.Forms.AmbientProperties> clase o el <xref:System.Windows.Forms.Control> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="c1553-752">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-753">El siguiente código de ejemplo se llena un <xref:System.Windows.Forms.ComboBox> con unidades lógicas disponibles del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-753">The following code example fills a <xref:System.Windows.Forms.ComboBox> with the user's available logical drives.</span></span> <span data-ttu-id="c1553-754">El ejemplo también establece el cuadro combinado <xref:System.Windows.Forms.Cursor> propiedad por lo que el <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType> cursor se muestra cuando el puntero del mouse está sobre el botón de lista desplegable.</span><span class="sxs-lookup"><span data-stu-id="c1553-754">The example also sets the combo box's <xref:System.Windows.Forms.Cursor> property so the <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=nameWithType> cursor is displayed when the mouse pointer is over the drop-down button.</span></span> <span data-ttu-id="c1553-755">Este código requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.ComboBox> en él.</span><span class="sxs-lookup"><span data-stu-id="c1553-755">This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ComboBox> on it.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-756">para las ventanas secundarias seguras establecer este valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-756">for safe subwindows to set this property value.</span></span> <span data-ttu-id="c1553-757">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span><span class="sxs-lookup"><span data-stu-id="c1553-757">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeSubWindows" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-758">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.Cursor" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.Cursor" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-758">When overriding the <see cref="P:System.Windows.Forms.Control.Cursor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Cursor" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-759">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-759">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-760">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> métodos de la <see cref="P:System.Windows.Forms.Control.Cursor" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-760">You are not required to override both the <see langword="get" /> and <see langword="set" /> methods of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursors" />
      </Docs>
    </Member>
    <Member MemberName="CursorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler CursorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CursorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.CursorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CursorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CursorChanged;" />
      <MemberSignature Language="F#" Value="member this.CursorChanged : EventHandler " Usage="member this.CursorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-761">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Cursor" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-761">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-762">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Cursor%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-762">This event is raised if the <xref:System.Windows.Forms.Control.Cursor%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-763">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-763">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-764">En el ejemplo de código siguiente se muestra cómo cambiar el cursor del mouse mediante el <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> propiedad, el <xref:System.Windows.Forms.Cursor> (clase) y el <xref:System.Windows.Forms.Cursors> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-764">The following code example demonstrates changing the mouse cursor using the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Forms.Cursor> class, and the <xref:System.Windows.Forms.Cursors> class.</span></span> <span data-ttu-id="c1553-765">El ejemplo crea un formulario que contenga un <xref:System.Windows.Forms.ComboBox> (control), un <xref:System.Windows.Forms.Panel> control y un <xref:System.Windows.Forms.ListView> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-765">The example creates a form that contains a <xref:System.Windows.Forms.ComboBox> control, a <xref:System.Windows.Forms.Panel> control, and a <xref:System.Windows.Forms.ListView> control.</span></span> <span data-ttu-id="c1553-766">El <xref:System.Windows.Forms.ComboBox> contiene todos los cursores proporcionados por el <xref:System.Windows.Forms.Cursors> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-766">The <xref:System.Windows.Forms.ComboBox> contains all cursors provided by the <xref:System.Windows.Forms.Cursors> class.</span></span> <span data-ttu-id="c1553-767">Cuando el usuario selecciona un cursor del mouse en el <xref:System.Windows.Forms.ComboBox>, <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> propiedad está establecida en el cursor seleccionado, que actualiza el cursor para el <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="c1553-767">When the user selects a mouse cursor in the <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=nameWithType> property is set to the selected cursor, which updates the cursor for the <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="c1553-768">El <xref:System.Windows.Forms.ListView> se actualiza cada vez que el <xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-768">The <xref:System.Windows.Forms.ListView> is updated every time the <xref:System.Windows.Forms.Control.CursorChanged?displayProperty=nameWithType> event occurs.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Cursors#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CPP/cursorexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.Cursors#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Cursors/CS/cursorexample.cs#1)]
 [!code-vb[System.Windows.Forms.Cursors#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Cursors/VB/cursorexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
        <altmember cref="T:System.Windows.Forms.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ControlBindingsCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As ControlBindingsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ControlBindingsCollection ^ DataBindings { System::Windows::Forms::ControlBindingsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Windows.Forms.ControlBindingsCollection" Usage="System.Windows.Forms.Control.DataBindings" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IBindableComponent.DataBindings</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.All)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlBindingsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-769">Obtiene los enlaces de datos del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-769">Gets the data bindings for the control.</span></span></summary>
        <value><span data-ttu-id="c1553-770"><see cref="T:System.Windows.Forms.ControlBindingsCollection" /> que contiene los objetos <see cref="T:System.Windows.Forms.Binding" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-770">A <see cref="T:System.Windows.Forms.ControlBindingsCollection" /> that contains the <see cref="T:System.Windows.Forms.Binding" /> objects for the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-771">Use la <xref:System.Windows.Forms.Control.DataBindings%2A> propiedad para tener acceso a la <xref:System.Windows.Forms.ControlBindingsCollection>.</span><span class="sxs-lookup"><span data-stu-id="c1553-771">Use the <xref:System.Windows.Forms.Control.DataBindings%2A> property to access the <xref:System.Windows.Forms.ControlBindingsCollection>.</span></span> <span data-ttu-id="c1553-772">Agregando <xref:System.Windows.Forms.Binding> objetos a la colección, puede enlazar cualquier propiedad de un control a la propiedad de un objeto.</span><span class="sxs-lookup"><span data-stu-id="c1553-772">By adding <xref:System.Windows.Forms.Binding> objects to the collection, you can bind any property of a control to the property of an object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-773">El ejemplo de código siguiente agrega <xref:System.Windows.Forms.Binding> objetos a la <xref:System.Windows.Forms.ControlBindingsCollection> de cinco controles: cuatro <xref:System.Windows.Forms.TextBox> controles y un <xref:System.Windows.Forms.DateTimePicker> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-773">The following code example adds <xref:System.Windows.Forms.Binding> objects to the <xref:System.Windows.Forms.ControlBindingsCollection> of five controls: four <xref:System.Windows.Forms.TextBox> controls and a <xref:System.Windows.Forms.DateTimePicker> control.</span></span> <span data-ttu-id="c1553-774">Se obtiene acceso a <xref:System.Windows.Forms.ControlBindingsCollection> mediante la propiedad <xref:System.Windows.Forms.Control.DataBindings%2A> de la clase <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="c1553-774">The <xref:System.Windows.Forms.ControlBindingsCollection> is accessed through the <xref:System.Windows.Forms.Control.DataBindings%2A> property of the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Classic Control.DataBindings Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.DataBindings Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.DataBindings Example/CS/source.cs#1)]
 [!code-vb[Classic Control.DataBindings Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.DataBindings Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.BindingContext" />
        <altmember cref="T:System.Windows.Forms.Binding" />
        <altmember cref="T:System.Windows.Forms.BindingManagerBase" />
      </Docs>
    </Member>
    <Member MemberName="DefaultBackColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DefaultBackColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color DefaultBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color DefaultBackColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultBackColor : System.Drawing.Color" Usage="System.Windows.Forms.Control.DefaultBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-775">Obtiene el color de fondo predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-775">Gets the default background color of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-776"><see cref="T:System.Drawing.Color" /> de fondo predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-776">The default background <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="c1553-777">De manera predeterminada, es <see cref="P:System.Drawing.SystemColors.Control" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-777">The default is <see cref="P:System.Drawing.SystemColors.Control" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-778">Este es el valor predeterminado <xref:System.Windows.Forms.Control.BackColor%2A> valor de propiedad de un control genérico de nivel superior.</span><span class="sxs-lookup"><span data-stu-id="c1553-778">This is the default <xref:System.Windows.Forms.Control.BackColor%2A> property value of a generic top-level control.</span></span> <span data-ttu-id="c1553-779">Las clases derivadas pueden tener distintos valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="c1553-779">Derived classes can have different defaults.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-780">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, y <xref:System.Windows.Forms.Control.DefaultForeColor%2A> miembros.</span><span class="sxs-lookup"><span data-stu-id="c1553-780">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="c1553-781">Para ejecutar el ejemplo, pegue el código siguiente en un formulario que contenga un <xref:System.Windows.Forms.ListBox> denominado ListBox1.</span><span class="sxs-lookup"><span data-stu-id="c1553-781">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="c1553-782">Llame a la `Populate_ListBox` método en el constructor del formulario o <xref:System.Windows.Forms.Form.Load> el método de control de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-782">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCursor">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Cursor DefaultCursor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Cursor DefaultCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Cursor ^ DefaultCursor { System::Windows::Forms::Cursor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCursor : System.Windows.Forms.Cursor" Usage="System.Windows.Forms.Control.DefaultCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-783">Obtiene o establece el cursor predeterminado para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-783">Gets or sets the default cursor for the control.</span></span></summary>
        <value><span data-ttu-id="c1553-784">Un objeto de tipo <see cref="T:System.Windows.Forms.Cursor" /> que representa el cursor predeterminado actual.</span><span class="sxs-lookup"><span data-stu-id="c1553-784">An object of type <see cref="T:System.Windows.Forms.Cursor" /> representing the current default cursor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-785">Invalidar <xref:System.Windows.Forms.Control.DefaultCursor%2A> para configurar un cursor predeterminado para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-785">Override <xref:System.Windows.Forms.Control.DefaultCursor%2A> to configure a default cursor for your control.</span></span> <span data-ttu-id="c1553-786">Esto es más eficaz que establecer el cursor en el constructor del control y proporciona compatibilidad automática para ciertas funciones de diseñador relacionadas con el cursor.</span><span class="sxs-lookup"><span data-stu-id="c1553-786">This is more efficient than setting the cursor in the control's constructor, and gives automatic support for certain cursor-related designer functions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFont">
      <MemberSignature Language="C#" Value="public static System.Drawing.Font DefaultFont { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.Font DefaultFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultFont" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Font ^ DefaultFont { System::Drawing::Font ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFont : System.Drawing.Font" Usage="System.Windows.Forms.Control.DefaultFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-787">Obtiene la fuente predeterminada del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-787">Gets the default font of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-788"><see cref="T:System.Drawing.Font" /> predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-788">The default <see cref="T:System.Drawing.Font" /> of the control.</span></span> <span data-ttu-id="c1553-789">El valor devuelto variará en función de la configuración de referencia cultural local del sistema operativo del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-789">The value returned will vary depending on the user's operating system the local culture setting of their system.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-790">La tabla siguiente describe el valor devuelto por <xref:System.Windows.Forms.Control.DefaultFont%2A> según el sistema operativo y la referencia cultural local.</span><span class="sxs-lookup"><span data-stu-id="c1553-790">The following table describes the value returned by <xref:System.Windows.Forms.Control.DefaultFont%2A> depending on the operating system and local culture.</span></span>  
  
|<span data-ttu-id="c1553-791">Sistema / y o la referencia cultural</span><span class="sxs-lookup"><span data-stu-id="c1553-791">System/and or Culture</span></span>|<span data-ttu-id="c1553-792">Fuente</span><span class="sxs-lookup"><span data-stu-id="c1553-792">Font</span></span>|  
|----------------------------|----------|  
|<span data-ttu-id="c1553-793">Windows NT 4 x, la versión en japonés</span><span class="sxs-lookup"><span data-stu-id="c1553-793">Windows NT 4x, Japanese version</span></span>|<span data-ttu-id="c1553-794">MS UI: gótica, 9 puntos.</span><span class="sxs-lookup"><span data-stu-id="c1553-794">MS UI Gothic, 9 point.</span></span>|  
|<span data-ttu-id="c1553-795">Windows árabe</span><span class="sxs-lookup"><span data-stu-id="c1553-795">Arabic Windows</span></span>|<span data-ttu-id="c1553-796">Tahoma de 8 puntos.</span><span class="sxs-lookup"><span data-stu-id="c1553-796">Tahoma, 8 point.</span></span>|  
|<span data-ttu-id="c1553-797">Otro sistema operativo o la referencia cultural</span><span class="sxs-lookup"><span data-stu-id="c1553-797">Other operating system/culture</span></span>|<span data-ttu-id="c1553-798">Fuente lógica de MS Shell Dlg, normalmente Microsoft Sans Serif de 8 puntos.</span><span class="sxs-lookup"><span data-stu-id="c1553-798">MS Shell Dlg logical font, typically Microsoft San Serif 8 point.</span></span>|  
  
 <span data-ttu-id="c1553-799">MS Shell Dlg se asigna a una fuente establecida en el registro del sistema.</span><span class="sxs-lookup"><span data-stu-id="c1553-799">MS Shell Dlg maps to a font set in the system registry.</span></span>  
  
 <span data-ttu-id="c1553-800">Si no están instaladas las fuentes anteriores, la fuente predeterminada es Tahoma, 8 puntos.</span><span class="sxs-lookup"><span data-stu-id="c1553-800">If the previous fonts are not installed, the default font is Tahoma, 8 point.</span></span> <span data-ttu-id="c1553-801">Si no está instalado Tahoma de 8 puntos, <xref:System.Windows.Forms.Control.DefaultFont%2A> devuelve el valor de la <xref:System.Drawing.FontFamily.GenericSansSerif%2A> propiedad</span><span class="sxs-lookup"><span data-stu-id="c1553-801">If Tahoma, 8 point, is not installed, <xref:System.Windows.Forms.Control.DefaultFont%2A> returns the value of the <xref:System.Drawing.FontFamily.GenericSansSerif%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-802">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, y <xref:System.Windows.Forms.Control.DefaultForeColor%2A> miembros.</span><span class="sxs-lookup"><span data-stu-id="c1553-802">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="c1553-803">Para ejecutar el ejemplo, pegue el código siguiente en un formulario que contenga un <xref:System.Windows.Forms.ListBox> denominado ListBox1.</span><span class="sxs-lookup"><span data-stu-id="c1553-803">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="c1553-804">Llame a la `Populate_ListBox` método en el constructor del formulario o <xref:System.Windows.Forms.Form.Load> el método de control de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-804">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1553-805">La fuente predeterminada o las fuentes alternativas regionales no están instaladas en el equipo cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-805">The default font or the regional alternative fonts are not installed on the client computer.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="DefaultForeColor">
      <MemberSignature Language="C#" Value="public static System.Drawing.Color DefaultForeColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Color DefaultForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Color DefaultForeColor { System::Drawing::Color get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultForeColor : System.Drawing.Color" Usage="System.Windows.Forms.Control.DefaultForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-806">Obtiene el color de primer plano predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-806">Gets the default foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-807"><see cref="T:System.Drawing.Color" /> predeterminado de primer plano del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-807">The default foreground <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="c1553-808">De manera predeterminada, es <see cref="P:System.Drawing.SystemColors.ControlText" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-808">The default is <see cref="P:System.Drawing.SystemColors.ControlText" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-809">Este es el valor predeterminado <xref:System.Windows.Forms.Control.ForeColor%2A> valor de propiedad de un control principal.</span><span class="sxs-lookup"><span data-stu-id="c1553-809">This is the default <xref:System.Windows.Forms.Control.ForeColor%2A> property value of a nonparented control.</span></span> <span data-ttu-id="c1553-810">Las clases derivadas pueden tener distintos valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="c1553-810">Derived classes can have different defaults.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-811">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, y <xref:System.Windows.Forms.Control.DefaultForeColor%2A> miembros.</span><span class="sxs-lookup"><span data-stu-id="c1553-811">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members.</span></span> <span data-ttu-id="c1553-812">Para ejecutar el ejemplo, pegue el código siguiente en un formulario que contenga un <xref:System.Windows.Forms.ListBox> denominado ListBox1.</span><span class="sxs-lookup"><span data-stu-id="c1553-812">To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1.</span></span> <span data-ttu-id="c1553-813">Llame a la `Populate_ListBox` método en el constructor del formulario o <xref:System.Windows.Forms.Form.Load> el método de control de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-813">Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Control.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-814">Obtiene el modo de Editor de métodos de entrada (IME) predeterminado admitido por el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-814">Gets the default Input Method Editor (IME) mode supported by the control.</span></span></summary>
        <value><span data-ttu-id="c1553-815">Uno de los valores de <see cref="T:System.Windows.Forms.ImeMode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-815">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-816">Editor de métodos de entrada (IME) es un programa que permite a los usuarios escribir caracteres y símbolos, como los caracteres Kanji del japonés, complejos mediante un teclado estándar.</span><span class="sxs-lookup"><span data-stu-id="c1553-816">An Input Method Editor (IME) is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.</span></span>  
  
 <span data-ttu-id="c1553-817">Como se implementa en el <xref:System.Windows.Forms.Control> clase, esta propiedad siempre devuelve el <xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType> valor.</span><span class="sxs-lookup"><span data-stu-id="c1553-817">As implemented in the <xref:System.Windows.Forms.Control> class, this property always returns the <xref:System.Windows.Forms.ImeMode.Inherit?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="c1553-818">El <xref:System.Windows.Forms.ImeMode.Inherit> valor especifica que se hereda el modo IME del control principal.</span><span class="sxs-lookup"><span data-stu-id="c1553-818">The <xref:System.Windows.Forms.ImeMode.Inherit> value specifies that the IME mode is inherited from the parent control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-819">El siguiente código de ejemplo invalida el <xref:System.Windows.Forms.Control.DefaultImeMode%2A> propiedad que se va a desactivar el Editor de métodos de entrada.</span><span class="sxs-lookup"><span data-stu-id="c1553-819">The following code example overrides the <xref:System.Windows.Forms.Control.DefaultImeMode%2A> property to turn off the Input Method Editor.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#4)]
 [!code-csharp[Windows.Forms.Control Properties2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#4)]
 [!code-vb[Windows.Forms.Control Properties2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-820">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-820">When overriding the <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.DefaultImeMode" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-821">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-821">Otherwise, you must provide all the implementation.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMargin">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultMargin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultMargin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMargin" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMargin As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultMargin { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMargin : System.Windows.Forms.Padding" Usage="System.Windows.Forms.Control.DefaultMargin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-822">Obtiene el espacio, en píxeles, que se especifica de manera predeterminada entre los controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-822">Gets the space, in pixels, that is specified by default between controls.</span></span></summary>
        <value><span data-ttu-id="c1553-823"><see cref="T:System.Windows.Forms.Padding" /> que representa el espacio predeterminado entre los controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-823">A <see cref="T:System.Windows.Forms.Padding" /> that represents the default space between controls.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMaximumSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultMaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultMaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMaximumSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultMaximumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMaximumSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultMaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-824">Obtiene la longitud y el alto, en píxeles, que se especifica como el tamaño máximo predeterminado de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-824">Gets the length and height, in pixels, that is specified as the default maximum size of a control.</span></span></summary>
        <value><span data-ttu-id="c1553-825"><see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> que representa el tamaño del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-825">A <see cref="M:System.Drawing.Point.#ctor(System.Drawing.Size)" /> representing the size of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultMinimumSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultMinimumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultMinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultMinimumSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultMinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultMinimumSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMinimumSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultMinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-826">Obtiene la longitud y el alto, en píxeles, que se especifica como el tamaño mínimo predeterminado de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-826">Gets the length and height, in pixels, that is specified as the default minimum size of a control.</span></span></summary>
        <value><span data-ttu-id="c1553-827"><see cref="T:System.Drawing.Size" /> que representa el tamaño del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-827">A <see cref="T:System.Drawing.Size" /> representing the size of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultPadding">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Padding DefaultPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding DefaultPadding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultPadding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultPadding As Padding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::Padding DefaultPadding { System::Windows::Forms::Padding get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultPadding : System.Windows.Forms.Padding" Usage="System.Windows.Forms.Control.DefaultPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-828">Obtiene el espaciado interno, en píxeles, del contenido de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-828">Gets the internal spacing, in pixels, of the contents of a control.</span></span></summary>
        <value><span data-ttu-id="c1553-829"><see cref="T:System.Windows.Forms.Padding" /> que representa el espaciado interno del contenido de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-829">A <see cref="T:System.Windows.Forms.Padding" /> that represents the internal spacing of the contents of a control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-830">Obtiene el tamaño predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-830">Gets the default size of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-831"><see cref="T:System.Drawing.Size" /> predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-831">The default <see cref="T:System.Drawing.Size" /> of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-832">El <xref:System.Windows.Forms.Control.DefaultSize%2A> propiedad representa el <xref:System.Drawing.Size> del control cuando se crea inicialmente.</span><span class="sxs-lookup"><span data-stu-id="c1553-832">The <xref:System.Windows.Forms.Control.DefaultSize%2A> property represents the <xref:System.Drawing.Size> of the control when it is initially created.</span></span> <span data-ttu-id="c1553-833">Puede ajustar el tamaño del control estableciendo su <xref:System.Windows.Forms.Control.Size%2A> valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-833">You can adjust the size of the control by setting its <xref:System.Windows.Forms.Control.Size%2A> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-834">Para mantener un rendimiento óptimo, no establezca la <xref:System.Drawing.Size> de un control en su constructor.</span><span class="sxs-lookup"><span data-stu-id="c1553-834">To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="c1553-835">El método preferido es invalidar el <xref:System.Windows.Forms.Control.DefaultSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-835">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-836">En los sistemas Windows Server 2003, el tamaño de un <xref:System.Windows.Forms.Form> está restringido por el ancho de píxel máximo y el alto del monitor.</span><span class="sxs-lookup"><span data-stu-id="c1553-836">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-837">El siguiente código de ejemplo invalida el <xref:System.Windows.Forms.Control.DefaultSize%2A> propiedad y hace que el tamaño predeterminado de los píxeles del formulario 500 cuadrados.</span><span class="sxs-lookup"><span data-stu-id="c1553-837">The following code example overrides the <xref:System.Windows.Forms.Control.DefaultSize%2A> property, and makes the default size of the form 500 pixels square.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CPP/misccontrolproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties2/CS/misccontrolproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties2/VB/misccontrolproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-838">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.DefaultSize" /> propiedad en una clase derivada, es preferible devolver un <see cref="T:System.Drawing.Size" /> con las dimensiones deseadas en lugar de reemplazar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-838">When overriding the <see cref="P:System.Windows.Forms.Control.DefaultSize" /> property in a derived class, it is preferable to return a <see cref="T:System.Drawing.Size" /> with the desired dimensions rather than to override all the implementation.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="T:System.Drawing.Size" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected virtual void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member DefWndProc :  -&gt; unit&#xA;override this.DefWndProc :  -&gt; unit" Usage="control.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="c1553-839"><see cref="T:System.Windows.Forms.Message" /> de Windows que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-839">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="c1553-840">Envía el mensaje especificado al procedimiento de ventana predeterminado.</span><span class="sxs-lookup"><span data-stu-id="c1553-840">Sends the specified message to the default window procedure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-841">Para obtener más información acerca de cómo procesar mensajes de Windows, consulte el [función WindowProc](https://go.microsoft.com/fwlink/?LinkId=181565).</span><span class="sxs-lookup"><span data-stu-id="c1553-841">For more information about processing Windows messages, see the [WindowProc function](https://go.microsoft.com/fwlink/?LinkId=181565).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1553-842">para que el llamador inmediato llamar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="c1553-842">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="c1553-843">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-843">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="protected virtual void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DestroyHandle();" />
      <MemberSignature Language="F#" Value="abstract member DestroyHandle : unit -&gt; unit&#xA;override this.DestroyHandle : unit -&gt; unit" Usage="control.DestroyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-844">Destruye el identificador asociado a este control.</span><span class="sxs-lookup"><span data-stu-id="c1553-844">Destroys the handle associated with the control.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1553-845">para que el llamador inmediato llamar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="c1553-845">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="c1553-846">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-846">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-847">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> método para asegurarse de que se destruye el identificador.</span><span class="sxs-lookup"><span data-stu-id="c1553-847">When overriding <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.DestroyHandle" /> method to ensure that the handle is destroyed.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="DeviceDpi">
      <MemberSignature Language="C#" Value="public int DeviceDpi { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DeviceDpi" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DeviceDpi" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeviceDpi As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DeviceDpi { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DeviceDpi : int" Usage="System.Windows.Forms.Control.DeviceDpi" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-848">Obtiene el valor de PPP de la pantalla donde se muestra actualmente el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-848">Gets the DPI value for the display device where the control is currently being displayed.</span></span></summary>
        <value><span data-ttu-id="c1553-849">El valor de PPP de la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-849">The DPI value of the display device.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayRectangle">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Rectangle DisplayRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle DisplayRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DisplayRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Rectangle DisplayRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayRectangle : System.Drawing.Rectangle" Usage="System.Windows.Forms.Control.DisplayRectangle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.Layout.IArrangedElement.DisplayRectangle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-850">Obtiene el rectángulo que representa el área de presentación del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-850">Gets the rectangle that represents the display area of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-851"><see cref="T:System.Drawing.Rectangle" /> que representa el área de visualización del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-851">A <see cref="T:System.Drawing.Rectangle" /> that represents the display area of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-852">El <xref:System.Windows.Forms.Control.DisplayRectangle%2A> propiedad devuelve el rectángulo cliente del área de presentación del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-852">The <xref:System.Windows.Forms.Control.DisplayRectangle%2A> property returns the client rectangle of the display area of the control.</span></span> <span data-ttu-id="c1553-853">Para la clase base control, esto es igual al rectángulo cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-853">For the base control class, this is equal to the client rectangle.</span></span> <span data-ttu-id="c1553-854">Sin embargo, los controles heredados es posible que desee cambiar esto si difiere de su área cliente de su área de presentación.</span><span class="sxs-lookup"><span data-stu-id="c1553-854">However, inheriting controls might want to change this if their client area differs from their display area.</span></span> <span data-ttu-id="c1553-855">El rectángulo de presentación es el más pequeño <xref:System.Drawing.Rectangle> que rodea un control y se utiliza para diseñar controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-855">The display rectangle is the smallest <xref:System.Drawing.Rectangle> that encloses a control and is used to lay out controls.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-856">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-856">When overriding the <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.DisplayRectangle" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-857">Como alternativa, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-857">Alternatively, you must provide all the implementation.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="control.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="c1553-858">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="c1553-858"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c1553-859">Libera los recursos no administrados que usan <see cref="T:System.Windows.Forms.Control" /> y sus controles secundarios, además de liberar los recursos administrados de forma opcional.</span><span class="sxs-lookup"><span data-stu-id="c1553-859">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Control" /> and its child controls and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-860">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.`Dispose()`</span><span class="sxs-lookup"><span data-stu-id="c1553-860">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.`Dispose()`</span></span> <span data-ttu-id="c1553-861">invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-861">invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c1553-862"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-862"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="c1553-863">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Windows.Forms.Control> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="c1553-863">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Control> references.</span></span> <span data-ttu-id="c1553-864">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="c1553-864">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-865">
            <see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="c1553-865">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="c1553-866">Cuando se reemplaza <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-866">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="c1553-867">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-867">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="c1553-868">Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="c1553-868">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Disposing">
      <MemberSignature Language="C#" Value="public bool Disposing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Disposing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Disposing" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Disposing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Disposing { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Disposing : bool" Usage="System.Windows.Forms.Control.Disposing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-869">Obtiene un valor que indica si la clase base <see cref="T:System.Windows.Forms.Control" /> está en el proceso de eliminación.</span><span class="sxs-lookup"><span data-stu-id="c1553-869">Gets a value indicating whether the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing.</span></span></summary>
        <value><span data-ttu-id="c1553-870"><see langword="true" /> si la clase base <see cref="T:System.Windows.Forms.Control" /> está en el proceso de eliminación; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-870"><see langword="true" /> if the base <see cref="T:System.Windows.Forms.Control" /> class is in the process of disposing; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-871">Cuando esta propiedad devuelve `true`, la base de <xref:System.Windows.Forms.Control> clase está en proceso de eliminación.</span><span class="sxs-lookup"><span data-stu-id="c1553-871">When this property returns `true`, the base <xref:System.Windows.Forms.Control> class is in the process of disposing.</span></span> <span data-ttu-id="c1553-872">Después de eliminar el control, ya no pueden hacer referencia como un control de Windows válido.</span><span class="sxs-lookup"><span data-stu-id="c1553-872">After the control is disposed of, it can no longer be referenced as a valid Windows control.</span></span> <span data-ttu-id="c1553-873">Aunque se elimine la instancia de un control de, todavía se mantiene en memoria hasta que se quita de la memoria a través de la recolección de elementos.</span><span class="sxs-lookup"><span data-stu-id="c1553-873">Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</span></span> <span data-ttu-id="c1553-874">Cuando se elimina un control, no puede llamar a su <xref:System.Windows.Forms.Control.RecreateHandle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-874">When a control is disposed of, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <altmember cref="T:System.GC" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="Dock">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.DockStyle Dock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DockStyle Dock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Dock" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Dock As DockStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DockStyle Dock { System::Windows::Forms::DockStyle get(); void set(System::Windows::Forms::DockStyle value); };" />
      <MemberSignature Language="F#" Value="member this.Dock : System.Windows.Forms.DockStyle with get, set" Usage="System.Windows.Forms.Control.Dock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties(System.ComponentModel.RefreshProperties.Repaint)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DockStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-875">Obtiene o establece que los bordes del control se acoplarán a su control primario y determina cómo se cambia el tamaño de un control con su elemento primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-875">Gets or sets which control borders are docked to its parent control and determines how a control is resized with its parent.</span></span></summary>
        <value><span data-ttu-id="c1553-876">Uno de los valores de <see cref="T:System.Windows.Forms.DockStyle" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-876">One of the <see cref="T:System.Windows.Forms.DockStyle" /> values.</span></span> <span data-ttu-id="c1553-877">De manera predeterminada, es <see cref="F:System.Windows.Forms.DockStyle.None" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-877">The default is <see cref="F:System.Windows.Forms.DockStyle.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-878">Use el <xref:System.Windows.Forms.Control.Dock%2A> propiedad para definir cómo se cambia automáticamente el tamaño de un control cuando se cambia el tamaño de su control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-878">Use the <xref:System.Windows.Forms.Control.Dock%2A> property to define how a control is automatically resized as its parent control is resized.</span></span> <span data-ttu-id="c1553-879">Por ejemplo, si se establece <xref:System.Windows.Forms.Control.Dock%2A> a <xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType> hace que el control para alinearse con los bordes izquierdos de su control primario y cambia de tamaño cuando se cambia el tamaño del control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-879">For example, setting <xref:System.Windows.Forms.Control.Dock%2A> to <xref:System.Windows.Forms.DockStyle.Left?displayProperty=nameWithType> causes the control to align itself with the left edges of its parent control and to resize as the parent control is resized.</span></span> <span data-ttu-id="c1553-880">Los controles se acoplan en su orden Z, que es el diseño visual de los controles en un formulario a lo largo del eje z del formulario (profundidad).</span><span class="sxs-lookup"><span data-stu-id="c1553-880">Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).</span></span>  
  
 <span data-ttu-id="c1553-881">Un control se puede acoplar a uno de los bordes de su contenedor primario o se puede acoplar a todos los bordes y rellene el contenedor primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-881">A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</span></span>  
  
 <span data-ttu-id="c1553-882">Establecer el <xref:System.Windows.Forms.Control.Margin%2A> propiedad en un control acoplado no tiene ningún efecto en la distancia del control de los bordes de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-882">Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the edges of its container.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-883">El <xref:System.Windows.Forms.Control.Anchor%2A> y <xref:System.Windows.Forms.Control.Dock%2A> propiedades son mutuamente excluyentes.</span><span class="sxs-lookup"><span data-stu-id="c1553-883">The <xref:System.Windows.Forms.Control.Anchor%2A> and <xref:System.Windows.Forms.Control.Dock%2A> properties are mutually exclusive.</span></span> <span data-ttu-id="c1553-884">Solo una puede establecerse en un momento, y el último conjunto tiene prioridad.</span><span class="sxs-lookup"><span data-stu-id="c1553-884">Only one can be set at a time, and the last one set takes precedence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-885">En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.GroupBox> y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-885">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="c1553-886">El ejemplo se crea un <xref:System.Windows.Forms.TextBox> y establece su <xref:System.Windows.Forms.Control.Location%2A> dentro del cuadro de grupo.</span><span class="sxs-lookup"><span data-stu-id="c1553-886">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="c1553-887">A continuación, Establece la <xref:System.Windows.Forms.Control.Text%2A> propiedad del cuadro de grupo y lo acopla el grupo de cuadro a la parte superior del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-887">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="c1553-888">Por último, deshabilita el cuadro de grupo estableciendo el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad `false`, lo que hace que todos los controles contenidos en el cuadro de grupo va a deshabilitar.</span><span class="sxs-lookup"><span data-stu-id="c1553-888">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c1553-889">El valor asignado no es uno de los valores de <see cref="T:System.Windows.Forms.DockStyle" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-889">The value assigned is not one of the <see cref="T:System.Windows.Forms.DockStyle" /> values.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-890">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.Dock" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.Dock" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-890">When overriding the <see cref="P:System.Windows.Forms.Control.Dock" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Dock" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-891">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-891">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-892">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> métodos de la <see cref="P:System.Windows.Forms.Control.Dock" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-892">You are not required to override both the <see langword="get" /> and <see langword="set" /> methods of the <see cref="P:System.Windows.Forms.Control.Dock" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.DockStyle" />
        <altmember cref="P:System.Windows.Forms.Control.Anchor" />
        <altmember cref="T:System.Windows.Forms.ScrollableControl.DockPaddingEdges" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="DockChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DockChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DockChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DockChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DockChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DockChanged;" />
      <MemberSignature Language="F#" Value="member this.DockChanged : EventHandler " Usage="member this.DockChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-893">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Dock" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-893">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-894">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Dock%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-894">This event is raised if the <xref:System.Windows.Forms.Control.Dock%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-895">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-895">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-896">El ejemplo de código siguiente es un controlador de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-896">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-897">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre *PropertyName* `Changed` que se genera cuando correspondiente *PropertyName* cambia el valor ( *PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-897">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes(*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-898">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda.</span><span class="sxs-lookup"><span data-stu-id="c1553-898">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="c1553-899">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-899">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-900">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-900">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="T:System.Windows.Forms.DockStyle" />
      </Docs>
    </Member>
    <Member MemberName="DoDragDrop">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.DragDropEffects DoDragDrop(object data, valuetype System.Windows.Forms.DragDropEffects allowedEffects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
      <MemberSignature Language="VB.NET" Value="Public Function DoDragDrop (data As Object, allowedEffects As DragDropEffects) As DragDropEffects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::DragDropEffects DoDragDrop(System::Object ^ data, System::Windows::Forms::DragDropEffects allowedEffects);" />
      <MemberSignature Language="F#" Value="member this.DoDragDrop : obj * System.Windows.Forms.DragDropEffects -&gt; System.Windows.Forms.DragDropEffects" Usage="control.DoDragDrop (data, allowedEffects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragDropEffects</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="allowedEffects" Type="System.Windows.Forms.DragDropEffects" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="c1553-901">Datos que se van a arrastrar.</span><span class="sxs-lookup"><span data-stu-id="c1553-901">The data to drag.</span></span></param>
        <param name="allowedEffects"><span data-ttu-id="c1553-902">Uno de los valores de <see cref="T:System.Windows.Forms.DragDropEffects" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-902">One of the <see cref="T:System.Windows.Forms.DragDropEffects" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-903">Inicia una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-903">Begins a drag-and-drop operation.</span></span></summary>
        <returns><span data-ttu-id="c1553-904">Valor de la enumeración <see cref="T:System.Windows.Forms.DragDropEffects" /> que representa el efecto final obtenido durante la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-904">A value from the <see cref="T:System.Windows.Forms.DragDropEffects" /> enumeration that represents the final effect that was performed during the drag-and-drop operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-905">El `allowedEffects` parámetro determina qué pueden realizar operaciones de arrastre.</span><span class="sxs-lookup"><span data-stu-id="c1553-905">The `allowedEffects` parameter determines which drag operations can occur.</span></span> <span data-ttu-id="c1553-906">Si la operación de arrastrar debe interoperar con aplicaciones en otro proceso, datos deben ser una clase base administrada (<xref:System.String>, <xref:System.Drawing.Bitmap>, o <xref:System.Drawing.Imaging.Metafile>), o un objeto que implementa <xref:System.Runtime.Serialization.ISerializable> o <xref:System.Windows.Forms.IDataObject>.</span><span class="sxs-lookup"><span data-stu-id="c1553-906">If the drag operation needs to interoperate with applications in another process, data should either be a base managed class (<xref:System.String>, <xref:System.Drawing.Bitmap>, or <xref:System.Drawing.Imaging.Metafile>), or an object that implements <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Windows.Forms.IDataObject>.</span></span>  
  
 <span data-ttu-id="c1553-907">A continuación, se describe cómo y cuándo se generan eventos relacionados con operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-907">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="c1553-908">El <xref:System.Windows.Forms.Control.DoDragDrop%2A> método determina el control en la ubicación actual del cursor.</span><span class="sxs-lookup"><span data-stu-id="c1553-908">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="c1553-909">A continuación, comprueba si el control es un destino de colocación válido.</span><span class="sxs-lookup"><span data-stu-id="c1553-909">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="c1553-910">Si el control es un destino válido, el <xref:System.Windows.Forms.Control.GiveFeedback> se provoca el evento con el efecto de arrastrar y colocar especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-910">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="c1553-911">Para obtener una lista de efectos de arrastrar y colocar, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-911">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="c1553-912">Se realiza el seguimiento de la posición del cursor del mouse, del estado del teclado y del estado de los botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-912">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="c1553-913">Si el usuario desplaza el mouse fuera de una ventana, se genera el evento <xref:System.Windows.Forms.Control.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="c1553-913">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="c1553-914">Si el mouse entra en otro control, se genera el evento <xref:System.Windows.Forms.Control.DragEnter> para ese control.</span><span class="sxs-lookup"><span data-stu-id="c1553-914">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="c1553-915">Si se mueve el mouse dentro del mismo control, se genera el evento <xref:System.Windows.Forms.Control.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="c1553-915">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-916">Si hay un cambio en el estado del botón teclado o mouse, el <xref:System.Windows.Forms.Control.QueryContinueDrag> se provoca el evento y determina si debe continuar la operación de arrastrar, colocar los datos, o cancelar la operación en función del valor de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propiedad del evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c1553-916">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="c1553-917">Si el valor de <xref:System.Windows.Forms.DragAction> es `Continue`, <xref:System.Windows.Forms.Control.DragOver> evento se provoca para continuar con la operación y el <xref:System.Windows.Forms.Control.GiveFeedback> evento se genera con el nuevo efecto, por lo que se puede establecer la información visual apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-917">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="c1553-918">Para obtener una lista de efectos de colocar válidos, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-918">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c1553-919">El <xref:System.Windows.Forms.Control.DragOver> y <xref:System.Windows.Forms.Control.GiveFeedback> eventos están emparejados de forma que cuando el mouse se desplace por el destino de colocación, el usuario reciba la información más actualizada sobre la posición del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-919">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="c1553-920">Si el valor de <xref:System.Windows.Forms.DragAction> es `Drop`, el valor del efecto de colocar se devuelve al origen, para que la aplicación de origen pueda realizar la operación apropiada en los datos de origen; por ejemplo, cortar los datos si la operación es un movimiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-920">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="c1553-921">Si el valor de <xref:System.Windows.Forms.DragAction> es `Cancel`, el <xref:System.Windows.Forms.Control.DragLeave> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-921">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-922">El <xref:System.Windows.Forms.Control.DoDragDrop%2A> detecta todas las excepciones de método y vuelve a iniciar solo la siguiente seguridad o las excepciones críticas:</span><span class="sxs-lookup"><span data-stu-id="c1553-922">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method catches all exceptions and rethrows only the following security or critical exceptions:</span></span>  
  
-   <span data-ttu-id="c1553-923">SecurityException</span><span class="sxs-lookup"><span data-stu-id="c1553-923">SecurityException</span></span>  
  
-   <span data-ttu-id="c1553-924">NullReferenceException</span><span class="sxs-lookup"><span data-stu-id="c1553-924">NullReferenceException</span></span>  
  
-   <span data-ttu-id="c1553-925">StackOverflowException</span><span class="sxs-lookup"><span data-stu-id="c1553-925">StackOverflowException</span></span>  
  
-   <span data-ttu-id="c1553-926">OutOfMemoryException</span><span class="sxs-lookup"><span data-stu-id="c1553-926">OutOfMemoryException</span></span>  
  
-   <span data-ttu-id="c1553-927">ThreadAbortException</span><span class="sxs-lookup"><span data-stu-id="c1553-927">ThreadAbortException</span></span>  
  
-   <span data-ttu-id="c1553-928">ExecutionEngineException</span><span class="sxs-lookup"><span data-stu-id="c1553-928">ExecutionEngineException</span></span>  
  
-   <span data-ttu-id="c1553-929">IndexOutOfRangeException</span><span class="sxs-lookup"><span data-stu-id="c1553-929">IndexOutOfRangeException</span></span>  
  
-   <span data-ttu-id="c1553-930">AccessViolationException</span><span class="sxs-lookup"><span data-stu-id="c1553-930">AccessViolationException</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-931">En el ejemplo de código siguiente se muestra una operación de arrastrar y colocar entre dos <xref:System.Windows.Forms.ListBox> controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-931">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="c1553-932">El ejemplo llama a la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método cuando se inicia la acción de arrastrar.</span><span class="sxs-lookup"><span data-stu-id="c1553-932">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="c1553-933">La acción de arrastrar se inicia si se ha movido el mouse más de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> desde la ubicación del mouse durante el <xref:System.Windows.Forms.Control.MouseDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-933">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="c1553-934">El <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> método se utiliza para determinar el índice del elemento que se va a arrastrar durante el `MouseDown` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-934">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="c1553-935">El ejemplo también muestra cómo utilizar cursores personalizados para la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-935">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="c1553-936">El ejemplo requiere que dos archivos de cursor `3dwarro.cur` y `3dwno.cur`, existe en el directorio de aplicación para la operación de arrastre personalizado y no colocar cursores, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-936">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="c1553-937">Los cursores personalizados que se usará si el `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> está activada.</span><span class="sxs-lookup"><span data-stu-id="c1553-937">The custom cursors will be used if the `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="c1553-938">Los cursores personalizados se establecen el <xref:System.Windows.Forms.Control.GiveFeedback> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-938">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="c1553-939">El estado del teclado se evalúa en el <xref:System.Windows.Forms.Control.DragOver> controlador de eventos para el derecho `ListBox`, para determinar cuál será la operación de arrastre según el estado de las teclas MAYÚS, CTRL, ALT o CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="c1553-939">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="c1553-940">La ubicación en la `ListBox` donde se produciría la operación de colocar también se determina durante el `DragOver` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-940">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="c1553-941">Si los datos que se va a quitar no están un `String`, el <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> está establecido en `None` en <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-941">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="c1553-942">Por último, se muestra el estado de la operación de colocar en el `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="c1553-942">Finally, the status of the drop is displayed in the `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="c1553-943">Los datos que se va a quitar de la derecha `ListBox` viene determinada en el <xref:System.Windows.Forms.Control.DragDrop> controlador de eventos y el `String` valor se agrega en el lugar adecuado en el `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="c1553-943">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="c1553-944">Si la operación de arrastre sobrepasa los límites del formulario y, después, se cancela la operación de arrastrar y colocar en el <xref:System.Windows.Forms.Control.QueryContinueDrag> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-944">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#1)]  
  
 <span data-ttu-id="c1553-945">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Windows.Forms.DragDropEffects> enumeración para especificar cómo se deben transferir los datos entre los controles implicados en una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-945">The following code example shows how to use the <xref:System.Windows.Forms.DragDropEffects> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation.</span></span> <span data-ttu-id="c1553-946">Este ejemplo requiere que el formulario incluye un <xref:System.Windows.Forms.RichTextBox> control y un <xref:System.Windows.Forms.ListBox> control y que el <xref:System.Windows.Forms.ListBox> control se rellena con una lista de nombres de archivo válidos.</span><span class="sxs-lookup"><span data-stu-id="c1553-946">This example requires that your form includes a <xref:System.Windows.Forms.RichTextBox> control and a <xref:System.Windows.Forms.ListBox> control and that the <xref:System.Windows.Forms.ListBox> control is populated with a list of valid file names.</span></span> <span data-ttu-id="c1553-947">Cuando el usuario arrastra un nombre de archivo en el <xref:System.Windows.Forms.RichTextBox> (control), el control <xref:System.Windows.Forms.Control.DragEnter> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-947">When the user drags a file name onto the <xref:System.Windows.Forms.RichTextBox> control, the control's <xref:System.Windows.Forms.Control.DragEnter> event is raised.</span></span> <span data-ttu-id="c1553-948">En el controlador de eventos, el <xref:System.Windows.Forms.DragEventArgs.Effect%2A> propiedad de la <xref:System.Windows.Forms.DragEventArgs> se inicializa en <xref:System.Windows.Forms.DragDropEffects> para indicar que se deben copiar los datos al que hace referencia la ruta de acceso a la <xref:System.Windows.Forms.RichTextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-948">Within the event handler, the <xref:System.Windows.Forms.DragEventArgs.Effect%2A> property of the <xref:System.Windows.Forms.DragEventArgs> is initialized to <xref:System.Windows.Forms.DragDropEffects> to indicate that the data referenced by the file path should be copied to the <xref:System.Windows.Forms.RichTextBox> control.</span></span>  
  
 [!code-cpp[RichTextDragDrop#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RichTextDragDrop/CPP/form1.cpp#1)]
 [!code-csharp[RichTextDragDrop#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RichTextDragDrop/CS/form1.cs#1)]
 [!code-vb[RichTextDragDrop#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RichTextDragDrop/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.AllowDrop" />
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffered">
      <MemberSignature Language="C#" Value="protected virtual bool DoubleBuffered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DoubleBuffered" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.DoubleBuffered" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property DoubleBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DoubleBuffered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DoubleBuffered : bool with get, set" Usage="System.Windows.Forms.Control.DoubleBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-949">Obtiene o establece un valor que indica si este control debe volver a dibujar su superficie mediante un búfer secundario para reducir o evitar el parpadeo.</span><span class="sxs-lookup"><span data-stu-id="c1553-949">Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</span></span></summary>
        <value><span data-ttu-id="c1553-950"><see langword="true" /> si la superficie del control debe dibujarse utilizando el búfer doble; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-950"><see langword="true" /> if the surface of the control should be drawn using double buffering; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-951">Gráficos almacenados en búfer pueden reducir o eliminar el parpadeo que se produce al volver a dibujar progresiva de partes de una superficie mostrada.</span><span class="sxs-lookup"><span data-stu-id="c1553-951">Buffered graphics can reduce or eliminate flicker that is caused by progressive redrawing of parts of a displayed surface.</span></span> <span data-ttu-id="c1553-952">Gráficos almacenados en búfer requieren que los datos de gráficos actualizados se escriben primero en un búfer.</span><span class="sxs-lookup"><span data-stu-id="c1553-952">Buffered graphics require that the updated graphics data is first written to a buffer.</span></span> <span data-ttu-id="c1553-953">Los datos en el búfer de gráficos, a continuación, se escriben rápidamente en memoria de la superficie mostrada.</span><span class="sxs-lookup"><span data-stu-id="c1553-953">The data in the graphics buffer is then quickly written to displayed surface memory.</span></span> <span data-ttu-id="c1553-954">El modificador relativamente rápido de la memoria de gráficos mostrados suele reduce el parpadeo que puede producirse en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="c1553-954">The relatively quick switch of the displayed graphics memory typically reduces the flicker that can otherwise occur.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-955"><xref:System.Windows.Forms.Control.DoubleBuffered%2A> no es una propiedad enlazable.</span><span class="sxs-lookup"><span data-stu-id="c1553-955"><xref:System.Windows.Forms.Control.DoubleBuffered%2A> is not a bindable property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.BufferedGraphicsContext" />
        <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      </Docs>
    </Member>
    <Member MemberName="DoubleClick">
      <MemberSignature Language="C#" Value="public event EventHandler DoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DoubleClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DoubleClick;" />
      <MemberSignature Language="F#" Value="member this.DoubleClick : EventHandler " Usage="member this.DoubleClick : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-956">Se produce cuando se hace doble clic en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-956">Occurs when the control is double-clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-957">Un doble clic viene determinada por la configuración del mouse del sistema operativo del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-957">A double-click is determined by the mouse settings of the user's operating system.</span></span> <span data-ttu-id="c1553-958">El usuario puede establecer el tiempo entre los clics de un botón del mouse que debe considerarse como un doble clic y no como dos clics.</span><span class="sxs-lookup"><span data-stu-id="c1553-958">The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</span></span> <span data-ttu-id="c1553-959">El <xref:System.Windows.Forms.Control.Click> evento se desencadena cada vez que se hace doble clic en un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-959">The <xref:System.Windows.Forms.Control.Click> event is raised every time a control is double-clicked.</span></span> <span data-ttu-id="c1553-960">Por ejemplo, si tiene controladores de eventos para el <xref:System.Windows.Forms.Control.Click> y <xref:System.Windows.Forms.Control.DoubleClick> eventos de un <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Control.Click> y <xref:System.Windows.Forms.Control.DoubleClick> se generan eventos cuando se hace doble clic en el formulario y se llama a ambos métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-960">For example, if you have event handlers for the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events of a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Click> and <xref:System.Windows.Forms.Control.DoubleClick> events are raised when the form is double-clicked and both methods are called.</span></span> <span data-ttu-id="c1553-961">Si se hace doble clic en un control y que el control no admite la <xref:System.Windows.Forms.Control.DoubleClick> eventos, el <xref:System.Windows.Forms.Control.Click> evento podría generarse dos veces.</span><span class="sxs-lookup"><span data-stu-id="c1553-961">If a control is double-clicked and that control does not support the <xref:System.Windows.Forms.Control.DoubleClick> event, the <xref:System.Windows.Forms.Control.Click> event might be raised twice.</span></span>  
  
 <span data-ttu-id="c1553-962">Debe establecer el `StandardDoubleClick` y `StandardClick` valores de <xref:System.Windows.Forms.ControlStyles> a `true` para que se genere este evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-962">You must set the `StandardDoubleClick` and `StandardClick` values of <xref:System.Windows.Forms.ControlStyles> to `true` for this event to be raised.</span></span> <span data-ttu-id="c1553-963">Ya se pueden establecer estos valores en `true` si se hereda de existente controles Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-963">These values might already be set to `true` if you are inheriting from existing Windows Forms controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-964">Los siguientes eventos no se generan para el <xref:System.Windows.Forms.TabControl> a menos que haya al menos una de las clases <xref:System.Windows.Forms.TabPage> en el <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> colección: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> y <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="c1553-964">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="c1553-965">Si hay al menos un <xref:System.Windows.Forms.TabPage> en la colección, y el usuario interactúa con el encabezado del control de ficha (donde el <xref:System.Windows.Forms.TabPage> aparecen nombres), el <xref:System.Windows.Forms.TabControl> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-965">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="c1553-966">Sin embargo, si la interacción del usuario está dentro del área de cliente de la página de ficha, el <xref:System.Windows.Forms.TabPage> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-966">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="c1553-967">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-967">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-968">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.DoubleClick> eventos de un <xref:System.Windows.Forms.ListBox> para cargar los archivos de texto que aparece en el <xref:System.Windows.Forms.ListBox> en un <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-968">The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]
 [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]
 [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-969">Heredar de un control de Windows Forms estándar y cambiar el <see langword="StandardClick" /> o <see langword="StandardDoubleClick" /> valores de <see cref="T:System.Windows.Forms.ControlStyles" /> a <see langword="true" /> puede provocar un comportamiento inesperado o no tienen ningún efecto en absoluto si el control no admite el <see cref="E:System.Windows.Forms.Control.Click" /> o <see cref="E:System.Windows.Forms.Control.DoubleClick" />eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-969">Inheriting from a standard Windows Forms control and changing the <see langword="StandardClick" /> or <see langword="StandardDoubleClick" /> values of <see cref="T:System.Windows.Forms.ControlStyles" /> to <see langword="true" /> can cause unexpected behavior or have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span></span>  
  
<span data-ttu-id="c1553-970">En la tabla siguiente se enumera los controles de formularios Windows Forms y qué evento (<see cref="E:System.Windows.Forms.Control.Click" /> o <see cref="E:System.Windows.Forms.Control.DoubleClick" />) se produce en respuesta a la acción del mouse especificada.</span><span class="sxs-lookup"><span data-stu-id="c1553-970">The following table lists Windows Forms controls and which event (<see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" />) is raised in response to the mouse action specified.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="c1553-971">Control</span><span class="sxs-lookup"><span data-stu-id="c1553-971">Control</span></span> 
 </term><description> <span data-ttu-id="c1553-972">Clic del Mouse izquierdo</span><span class="sxs-lookup"><span data-stu-id="c1553-972">Left Mouse Click</span></span> 
 </description><description> <span data-ttu-id="c1553-973">Haga doble clic en el primario del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-973">Left Mouse Double Click</span></span> 
 </description><description> <span data-ttu-id="c1553-974">Haga clic derecho del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-974">Right Mouse Click</span></span> 
 </description><description> <span data-ttu-id="c1553-975">Haga doble clic en el secundario del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-975">Right Mouse Double Click</span></span> 
 </description><description> <span data-ttu-id="c1553-976">Haga clic central del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-976">Middle Mouse Click</span></span> 
 </description><description> <span data-ttu-id="c1553-977">Haga doble clic en la central del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-977">Middle Mouse Double Click</span></span> 
 </description><description> <span data-ttu-id="c1553-978">Haga clic en de XButton1 del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-978">XButton1 Mouse Click</span></span> 
 </description><description> <span data-ttu-id="c1553-979">XButton1 del Mouse haga doble clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-979">XButton1 Mouse Double-Click</span></span> 
 </description><description> <span data-ttu-id="c1553-980">Haga clic en de XButton2 del Mouse</span><span class="sxs-lookup"><span data-stu-id="c1553-980">XButton2 Mouse Click</span></span> 
 </description><description> <span data-ttu-id="c1553-981">XButton2 del Mouse haga doble clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-981">XButton2 Mouse Double-Click</span></span> 
 </description></listheader><item><term><span data-ttu-id="c1553-982"><see cref="T:System.Windows.Forms.MonthCalendar" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-982"><see cref="T:System.Windows.Forms.MonthCalendar" />,</span></span> 
 <span data-ttu-id="c1553-983"><see cref="T:System.Windows.Forms.DateTimePicker" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-983"><see cref="T:System.Windows.Forms.DateTimePicker" />,</span></span> 
 <span data-ttu-id="c1553-984"><see cref="T:System.Windows.Forms.RichTextBox" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-984"><see cref="T:System.Windows.Forms.RichTextBox" />,</span></span> 
 <span data-ttu-id="c1553-985"><see cref="T:System.Windows.Forms.HScrollBar" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-985"><see cref="T:System.Windows.Forms.HScrollBar" />,</span></span> 
 <see cref="T:System.Windows.Forms.VScrollBar" /></term><description> <span data-ttu-id="c1553-986">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-986">none</span></span> 
 </description><description> <span data-ttu-id="c1553-987">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-987">none</span></span> 
 </description><description> <span data-ttu-id="c1553-988">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-988">none</span></span> 
 </description><description> <span data-ttu-id="c1553-989">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-989">none</span></span> 
 </description><description> <span data-ttu-id="c1553-990">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-990">none</span></span> 
 </description><description> <span data-ttu-id="c1553-991">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-991">none</span></span> 
 </description><description> <span data-ttu-id="c1553-992">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-992">none</span></span> 
 </description><description> <span data-ttu-id="c1553-993">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-993">none</span></span> 
 </description><description> <span data-ttu-id="c1553-994">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-994">none</span></span> 
 </description><description> <span data-ttu-id="c1553-995">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-995">none</span></span> 
 </description></item><item><term><span data-ttu-id="c1553-996"><see cref="T:System.Windows.Forms.Button" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-996"><see cref="T:System.Windows.Forms.Button" />,</span></span> 
 <span data-ttu-id="c1553-997"><see cref="T:System.Windows.Forms.CheckBox" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-997"><see cref="T:System.Windows.Forms.CheckBox" />,</span></span> 
 <see cref="T:System.Windows.Forms.RadioButton" /></term><description> <span data-ttu-id="c1553-998">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-998">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-999">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-999">Click, Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1000">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1000">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1001">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1001">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1002">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1002">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1003">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1003">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1004">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1004">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1005">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1005">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1006">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1006">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1007">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1007">none</span></span> 
 </description></item><item><term><span data-ttu-id="c1553-1008"><see cref="T:System.Windows.Forms.ListBox" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1008"><see cref="T:System.Windows.Forms.ListBox" />,</span></span> 
 <span data-ttu-id="c1553-1009"><see cref="T:System.Windows.Forms.CheckedListBox" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1009"><see cref="T:System.Windows.Forms.CheckedListBox" />,</span></span> 
 <see cref="T:System.Windows.Forms.ComboBox" /></term><description> <span data-ttu-id="c1553-1010">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1010">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1011">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1011">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="c1553-1012">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1012">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1013">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1013">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1014">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1014">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1015">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1015">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1016">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1016">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1017">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1017">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1018">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1018">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1019">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1019">none</span></span> 
 </description></item><item><term><span data-ttu-id="c1553-1020"><see cref="T:System.Windows.Forms.TextBox" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1020"><see cref="T:System.Windows.Forms.TextBox" />,</span></span> 
 <span data-ttu-id="c1553-1021"><see cref="T:System.Windows.Forms.DomainUpDown" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1021"><see cref="T:System.Windows.Forms.DomainUpDown" />,</span></span> 
 <see cref="T:System.Windows.Forms.NumericUpDown" /></term><description> <span data-ttu-id="c1553-1022">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1022">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1023">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1023">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="c1553-1024">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1024">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1025">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1025">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1026">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1026">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1027">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1027">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1028">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1028">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1029">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1029">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1030">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1030">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1031">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1031">none</span></span> 
 </description></item><item><term> <span data-ttu-id="c1553-1032">\* <see cref="T:System.Windows.Forms.TreeView" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1032">\* <see cref="T:System.Windows.Forms.TreeView" />,</span></span> 
<span data-ttu-id="c1553-1033">\* <see cref="T:System.Windows.Forms.ListView" /></span><span class="sxs-lookup"><span data-stu-id="c1553-1033">\* <see cref="T:System.Windows.Forms.ListView" /></span></span></term><description> <span data-ttu-id="c1553-1034">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1034">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1035">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1035">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="c1553-1036">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1036">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1037">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1037">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="c1553-1038">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1038">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1039">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1039">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1040">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1040">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1041">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1041">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1042">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1042">none</span></span> 
 </description><description> <span data-ttu-id="c1553-1043">ninguna</span><span class="sxs-lookup"><span data-stu-id="c1553-1043">none</span></span> 
 </description></item><item><term><span data-ttu-id="c1553-1044"><see cref="T:System.Windows.Forms.ProgressBar" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1044"><see cref="T:System.Windows.Forms.ProgressBar" />,</span></span> 
 <see cref="T:System.Windows.Forms.TrackBar" /></term><description> <span data-ttu-id="c1553-1045">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1045">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1046">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-1046">Click, Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1047">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1047">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1048">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-1048">Click, Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1049">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1049">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1050">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-1050">Click, Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1051">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1051">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1052">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-1052">Click, Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1053">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1053">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1054">Haga clic en, haga clic en</span><span class="sxs-lookup"><span data-stu-id="c1553-1054">Click, Click</span></span> 
 </description></item><item><term><span data-ttu-id="c1553-1055"><see cref="T:System.Windows.Forms.Form" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1055"><see cref="T:System.Windows.Forms.Form" />,</span></span> 
 <span data-ttu-id="c1553-1056"><see cref="T:System.Windows.Forms.DataGrid" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1056"><see cref="T:System.Windows.Forms.DataGrid" />,</span></span> 
 <span data-ttu-id="c1553-1057"><see cref="T:System.Windows.Forms.Label" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1057"><see cref="T:System.Windows.Forms.Label" />,</span></span> 
 <span data-ttu-id="c1553-1058"><see cref="T:System.Windows.Forms.LinkLabel" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1058"><see cref="T:System.Windows.Forms.LinkLabel" />,</span></span> 
 <span data-ttu-id="c1553-1059"><see cref="T:System.Windows.Forms.Panel" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1059"><see cref="T:System.Windows.Forms.Panel" />,</span></span> 
 <span data-ttu-id="c1553-1060"><see cref="T:System.Windows.Forms.GroupBox" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1060"><see cref="T:System.Windows.Forms.GroupBox" />,</span></span> 
 <span data-ttu-id="c1553-1061"><see cref="T:System.Windows.Forms.PictureBox" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1061"><see cref="T:System.Windows.Forms.PictureBox" />,</span></span> 
 <span data-ttu-id="c1553-1062"><see cref="T:System.Windows.Forms.Splitter" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1062"><see cref="T:System.Windows.Forms.Splitter" />,</span></span> 
 <span data-ttu-id="c1553-1063"><see cref="T:System.Windows.Forms.StatusBar" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1063"><see cref="T:System.Windows.Forms.StatusBar" />,</span></span> 
 <span data-ttu-id="c1553-1064"><see cref="T:System.Windows.Forms.ToolBar" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1064"><see cref="T:System.Windows.Forms.ToolBar" />,</span></span> 
 <span data-ttu-id="c1553-1065"><see cref="T:System.Windows.Forms.TabPage" />,</span><span class="sxs-lookup"><span data-stu-id="c1553-1065"><see cref="T:System.Windows.Forms.TabPage" />,</span></span> 
 ** <see cref="T:System.Windows.Forms.TabControl" /></term><description> <span data-ttu-id="c1553-1066">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1066">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1067">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1067">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="c1553-1068">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1068">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1069">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1069">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="c1553-1070">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1070">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1071">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1071">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="c1553-1072">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1072">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1073">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1073">Click, DoubleClick</span></span> 
 </description><description> <span data-ttu-id="c1553-1074">Haga clic</span><span class="sxs-lookup"><span data-stu-id="c1553-1074">Click</span></span> 
 </description><description> <span data-ttu-id="c1553-1075">Click, DoubleClick</span><span class="sxs-lookup"><span data-stu-id="c1553-1075">Click, DoubleClick</span></span> 
 </description></item></list>  

 <span data-ttu-id="c1553-1076">\* Debe ser el puntero del mouse sobre un objeto secundario (<see cref="T:System.Windows.Forms.TreeNode" /> o <see cref="T:System.Windows.Forms.ListViewItem" />).</span><span class="sxs-lookup"><span data-stu-id="c1553-1076">\* The mouse pointer must be over a child object (<see cref="T:System.Windows.Forms.TreeNode" /> or <see cref="T:System.Windows.Forms.ListViewItem" />).</span></span>  
  
<span data-ttu-id="c1553-1077">\*\* Los <see cref="T:System.Windows.Forms.TabControl" /> debe tener al menos un <see cref="T:System.Windows.Forms.TabPage" /> en su <see cref="P:System.Windows.Forms.TabControl.TabPages" /> colección.</span><span class="sxs-lookup"><span data-stu-id="c1553-1077">\*\* The <see cref="T:System.Windows.Forms.TabControl" /> must have at least one <see cref="T:System.Windows.Forms.TabPage" /> in its <see cref="P:System.Windows.Forms.TabControl.TabPages" /> collection.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardClick" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="DpiChangedAfterParent">
      <MemberSignature Language="C#" Value="public event EventHandler DpiChangedAfterParent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DpiChangedAfterParent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DpiChangedAfterParent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChangedAfterParent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DpiChangedAfterParent;" />
      <MemberSignature Language="F#" Value="member this.DpiChangedAfterParent : EventHandler " Usage="member this.DpiChangedAfterParent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1078">Se produce al cambiar mediante programación la configuración de PPP para un control después de que haya cambiado el valor de PPP para su control o formulario principal.</span><span class="sxs-lookup"><span data-stu-id="c1553-1078">Occurs when the DPI setting for a control is changed programmatically after the DPI of its parent control or form has changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedBeforeParent">
      <MemberSignature Language="C#" Value="public event EventHandler DpiChangedBeforeParent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DpiChangedBeforeParent" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChangedBeforeParent As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DpiChangedBeforeParent;" />
      <MemberSignature Language="F#" Value="member this.DpiChangedBeforeParent : EventHandler " Usage="member this.DpiChangedBeforeParent : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1079">Se produce al cambiar mediante programación la configuración de PPP para un control antes de que tenga lugar un evento de cambio de PPP para su control o formulario principal.</span><span class="sxs-lookup"><span data-stu-id="c1553-1079">Occurs when the DPI setting for a control is changed programmatically before a DPI change event for its parent control or form has occurred.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragDrop;" />
      <MemberSignature Language="F#" Value="member this.DragDrop : System.Windows.Forms.DragEventHandler " Usage="member this.DragDrop : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1080">Se produce cuando se completa una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1080">Occurs when a drag-and-drop operation is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1081">El <xref:System.Windows.Forms.DragEventArgs.X%2A> y <xref:System.Windows.Forms.DragEventArgs.Y%2A> propiedades de la <xref:System.Windows.Forms.DragEventArgs> están en coordenadas de pantalla, no las coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1081">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="c1553-1082">La siguiente línea de código de Visual C# convierte las propiedades en un cliente <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1082">The following line of Visual C# code converts the properties to a client <xref:System.Drawing.Point>.</span></span>  
  
```  
Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  
```  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1083">En versiones anteriores a [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], si coloca un <xref:System.Windows.Forms.UserControl> con <xref:System.Windows.Forms.Control.DragEnter> y <xref:System.Windows.Forms.Control.DragDrop> eventos en un formulario de Windows y arrastrar y colocar algo en el <xref:System.Windows.Forms.UserControl> en tiempo de diseño, el `DropDrop` y `DropEnter` son eventos se genera.</span><span class="sxs-lookup"><span data-stu-id="c1553-1083">In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised.</span></span> <span data-ttu-id="c1553-1084">Sin embargo, cuando cierre y vuelva a abrir la solución, el <xref:System.Windows.Forms.Control.DragEnter> y <xref:System.Windows.Forms.Control.DragDrop> eventos no se vuelve a generar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1084">However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.</span></span>  
  
 <span data-ttu-id="c1553-1085">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1085">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1086">Este fragmento de código muestra cómo utilizar el <xref:System.Windows.Forms.Control.DragDrop> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1086">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragDrop> event.</span></span> <span data-ttu-id="c1553-1087">Consulte la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1087">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#5)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#5)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
        <altmember cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />
        <altmember cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.Forms.DragEventHandler " Usage="member this.DragEnter : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1088">Se produce cuando se arrastra un objeto dentro de los límites del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1088">Occurs when an object is dragged into the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1089">El <xref:System.Windows.Forms.Control.DragEnter> evento se produce cuando el usuario arrastra primero el cursor del mouse sobre el control durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1089">The <xref:System.Windows.Forms.Control.DragEnter> event is raised when the user first drags the mouse cursor over the control during a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1090">En versiones anteriores a [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], si coloca un <xref:System.Windows.Forms.UserControl> con <xref:System.Windows.Forms.Control.DragEnter> y <xref:System.Windows.Forms.Control.DragDrop> eventos en un formulario de Windows y arrastrar y colocar algo en el <xref:System.Windows.Forms.UserControl> en tiempo de diseño, el `DropDrop` y `DropEnter` son eventos se genera.</span><span class="sxs-lookup"><span data-stu-id="c1553-1090">In versions earlier than [!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)], if you put a <xref:System.Windows.Forms.UserControl> with <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events on a Windows Form and drag and drop something onto the <xref:System.Windows.Forms.UserControl> at design time, the `DropDrop` and `DropEnter` events are raised.</span></span> <span data-ttu-id="c1553-1091">Sin embargo, cuando cierre y vuelva a abrir la solución, el <xref:System.Windows.Forms.Control.DragEnter> y <xref:System.Windows.Forms.Control.DragDrop> eventos no se vuelve a generar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1091">However, when you close and reopen the solution, the <xref:System.Windows.Forms.Control.DragEnter> and <xref:System.Windows.Forms.Control.DragDrop> events are not raised again.</span></span>  
  
 <span data-ttu-id="c1553-1092">A continuación, se describe cómo y cuándo se generan eventos relacionados con operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1092">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="c1553-1093">El <xref:System.Windows.Forms.Control.DoDragDrop%2A> método determina el control en la ubicación actual del cursor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1093">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="c1553-1094">A continuación, comprueba si el control es un destino de colocación válido.</span><span class="sxs-lookup"><span data-stu-id="c1553-1094">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="c1553-1095">Si el control es un destino válido, el <xref:System.Windows.Forms.Control.GiveFeedback> se provoca el evento con el efecto de arrastrar y colocar especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1095">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="c1553-1096">Para obtener una lista de efectos de arrastrar y colocar, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1096">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="c1553-1097">Se realiza el seguimiento de la posición del cursor del mouse, del estado del teclado y del estado de los botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1097">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="c1553-1098">Si el usuario desplaza el mouse fuera de una ventana, se genera el evento <xref:System.Windows.Forms.Control.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1098">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="c1553-1099">Si el mouse entra en otro control, se genera el evento <xref:System.Windows.Forms.Control.DragEnter> para ese control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1099">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="c1553-1100">Si se mueve el mouse dentro del mismo control, se genera el evento <xref:System.Windows.Forms.Control.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1100">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-1101">Si hay un cambio en el estado del botón teclado o mouse, el <xref:System.Windows.Forms.Control.QueryContinueDrag> se provoca el evento y determina si debe continuar la operación de arrastrar, colocar los datos, o cancelar la operación en función del valor de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propiedad del evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1101">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="c1553-1102">Si el valor de <xref:System.Windows.Forms.DragAction> es `Continue`, <xref:System.Windows.Forms.Control.DragOver> evento se provoca para continuar con la operación y el <xref:System.Windows.Forms.Control.GiveFeedback> evento se genera con el nuevo efecto, por lo que se puede establecer la información visual apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1102">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="c1553-1103">Para obtener una lista de efectos de colocar válidos, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1103">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c1553-1104">El <xref:System.Windows.Forms.Control.DragOver> y <xref:System.Windows.Forms.Control.GiveFeedback> eventos están emparejados de forma que cuando el mouse se desplace por el destino de colocación, el usuario reciba la información más actualizada sobre la posición del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1104">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="c1553-1105">Si el valor de <xref:System.Windows.Forms.DragAction> es `Drop`, el valor del efecto de colocar se devuelve al origen, para que la aplicación de origen pueda realizar la operación apropiada en los datos de origen; por ejemplo, cortar los datos si la operación es un movimiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1105">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="c1553-1106">Si el valor de <xref:System.Windows.Forms.DragAction> es `Cancel`, el <xref:System.Windows.Forms.Control.DragLeave> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1106">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c1553-1107">El <xref:System.Windows.Forms.DragEventArgs.X%2A> y <xref:System.Windows.Forms.DragEventArgs.Y%2A> propiedades de la <xref:System.Windows.Forms.DragEventArgs> están en coordenadas de pantalla, no las coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1107">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="c1553-1108">La siguiente línea de código de Visual C# convierte las propiedades en un cliente <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1108">The following line of Visual C# code converts the properties to a client <xref:System.Drawing.Point>.</span></span>  
  
    ```  
    Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));  
    ```  
  
 <span data-ttu-id="c1553-1109">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1109">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1110">En el ejemplo de código siguiente se muestra una operación de arrastrar y colocar entre dos <xref:System.Windows.Forms.ListBox> controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1110">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="c1553-1111">El ejemplo llama a la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método cuando se inicia la acción de arrastrar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1111">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="c1553-1112">La acción de arrastrar se inicia si se ha movido el mouse más de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> desde la ubicación del mouse durante el <xref:System.Windows.Forms.Control.MouseDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1112">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="c1553-1113">El <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> método se utiliza para determinar el índice del elemento que se va a arrastrar durante el `MouseDown` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1113">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="c1553-1114">El ejemplo también muestra cómo utilizar cursores personalizados para la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1114">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="c1553-1115">El ejemplo requiere que dos archivos de cursor `3dwarro.cur` y `3dwno.cur`, existe en el directorio de aplicación para la operación de arrastre personalizado y no colocar cursores, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1115">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="c1553-1116">Los cursores personalizados que se usará si el `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> está activada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1116">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="c1553-1117">Los cursores personalizados se establecen el <xref:System.Windows.Forms.Control.GiveFeedback> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1117">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="c1553-1118">El estado del teclado se evalúa en el <xref:System.Windows.Forms.Control.DragOver> controlador de eventos para el derecho `ListBox`, para determinar cuál será la operación de arrastre según el estado de las teclas MAYÚS, CTRL, ALT o CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="c1553-1118">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="c1553-1119">La ubicación en la `ListBox` donde se produciría la operación de colocar también se determina durante el `DragOver` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1119">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="c1553-1120">Si los datos que se va a quitar no están un `String`, el <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> está establecido en `None` en <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1120">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="c1553-1121">Por último, se muestra el estado de la operación de colocar en el `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1121">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="c1553-1122">Los datos que se va a quitar de la derecha `ListBox` viene determinada en el <xref:System.Windows.Forms.Control.DragDrop> controlador de eventos y el `String` valor se agrega en el lugar adecuado en el `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1122">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="c1553-1123">Si la operación de arrastre sobrepasa los límites del formulario y, después, se cancela la operación de arrastrar y colocar en el <xref:System.Windows.Forms.Control.QueryContinueDrag> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1123">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="c1553-1124">Este fragmento de código muestra cómo utilizar el <xref:System.Windows.Forms.Control.DragEnter> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1124">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragEnter> event.</span></span> <span data-ttu-id="c1553-1125">Consulte la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1125">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#7)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#7)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event EventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : EventHandler " Usage="member this.DragLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1126">Se produce cuando se arrastra un objeto fuera de los límites del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1126">Occurs when an object is dragged out of the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1127">El <xref:System.Windows.Forms.Control.DragLeave> evento se produce cuando el usuario arrastra el cursor fuera del control o el usuario cancela la operación de arrastrar y colocar actual.</span><span class="sxs-lookup"><span data-stu-id="c1553-1127">The <xref:System.Windows.Forms.Control.DragLeave> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="c1553-1128">A continuación, se describe cómo y cuándo se generan eventos relacionados con operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1128">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="c1553-1129">El <xref:System.Windows.Forms.Control.DoDragDrop%2A> método determina el control en la ubicación actual del cursor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1129">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="c1553-1130">A continuación, comprueba si el control es un destino de colocación válido.</span><span class="sxs-lookup"><span data-stu-id="c1553-1130">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="c1553-1131">Si el control es un destino válido, el <xref:System.Windows.Forms.Control.GiveFeedback> se provoca el evento con el efecto de arrastrar y colocar especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1131">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="c1553-1132">Para obtener una lista de efectos de arrastrar y colocar, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1132">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="c1553-1133">Se realiza el seguimiento de la posición del cursor del mouse, del estado del teclado y del estado de los botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1133">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="c1553-1134">Si el usuario desplaza el mouse fuera de una ventana, se genera el evento <xref:System.Windows.Forms.Control.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1134">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="c1553-1135">Si el mouse entra en otro control, se genera el evento <xref:System.Windows.Forms.Control.DragEnter> para ese control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1135">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="c1553-1136">Si se mueve el mouse dentro del mismo control, se genera el evento <xref:System.Windows.Forms.Control.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1136">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-1137">Si hay un cambio en el estado del botón teclado o mouse, el <xref:System.Windows.Forms.Control.QueryContinueDrag> se provoca el evento y determina si debe continuar la operación de arrastrar, colocar los datos, o cancelar la operación en función del valor de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propiedad del evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1137">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="c1553-1138">Si el valor de <xref:System.Windows.Forms.DragAction> es `Continue`, <xref:System.Windows.Forms.Control.DragOver> evento se provoca para continuar con la operación y el <xref:System.Windows.Forms.Control.GiveFeedback> evento se genera con el nuevo efecto, por lo que se puede establecer la información visual apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1138">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="c1553-1139">Para obtener una lista de efectos de colocar válidos, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1139">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c1553-1140">El <xref:System.Windows.Forms.Control.DragOver> y <xref:System.Windows.Forms.Control.GiveFeedback> eventos están emparejados de forma que cuando el mouse se desplace por el destino de colocación, el usuario reciba la información más actualizada sobre la posición del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1140">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="c1553-1141">Si el valor de <xref:System.Windows.Forms.DragAction> es `Drop`, el valor del efecto de colocar se devuelve al origen, para que la aplicación de origen pueda realizar la operación apropiada en los datos de origen; por ejemplo, cortar los datos si la operación es un movimiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1141">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="c1553-1142">Si el valor de <xref:System.Windows.Forms.DragAction> es `Cancel`, el <xref:System.Windows.Forms.Control.DragLeave> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1142">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-1143">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1143">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1144">En el ejemplo de código siguiente se muestra una operación de arrastrar y colocar entre dos <xref:System.Windows.Forms.ListBox> controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1144">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="c1553-1145">El ejemplo llama a la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método cuando se inicia la acción de arrastrar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1145">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="c1553-1146">La acción de arrastrar se inicia si se ha movido el mouse más de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> desde la ubicación del mouse durante el <xref:System.Windows.Forms.Control.MouseDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1146">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="c1553-1147">El <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> método se utiliza para determinar el índice del elemento que se va a arrastrar durante el `MouseDown` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1147">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="c1553-1148">El ejemplo también muestra cómo utilizar cursores personalizados para la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1148">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="c1553-1149">El ejemplo requiere que dos archivos de cursor `3dwarro.cur` y `3dwno.cur`, existe en el directorio de aplicación para la operación de arrastre personalizado y no colocar cursores, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1149">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="c1553-1150">Los cursores personalizados que se usará si el `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> está activada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1150">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="c1553-1151">Los cursores personalizados se establecen el <xref:System.Windows.Forms.Control.GiveFeedback> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1151">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="c1553-1152">El estado del teclado se evalúa en el <xref:System.Windows.Forms.Control.DragOver> controlador de eventos para el derecho `ListBox`, para determinar cuál será la operación de arrastre según el estado de las teclas MAYÚS, CTRL, ALT o CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="c1553-1152">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="c1553-1153">La ubicación en la `ListBox` donde se produciría la operación de colocar también se determina durante el `DragOver` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1153">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="c1553-1154">Si los datos que se va a quitar no están un `String`, el <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> está establecido en `None` en <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1154">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="c1553-1155">Por último, se muestra el estado de la operación de colocar en el `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1155">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="c1553-1156">Los datos que se va a quitar de la derecha `ListBox` viene determinada en el <xref:System.Windows.Forms.Control.DragDrop> controlador de eventos y el `String` valor se agrega en el lugar adecuado en el `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1156">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="c1553-1157">Si la operación de arrastre sobrepasa los límites del formulario y, después, se cancela la operación de arrastrar y colocar en el <xref:System.Windows.Forms.Control.QueryContinueDrag> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1157">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="c1553-1158">Este fragmento de código muestra cómo utilizar el <xref:System.Windows.Forms.Control.DragLeave> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1158">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragLeave> event.</span></span> <span data-ttu-id="c1553-1159">Consulte la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1159">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#8)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#8)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.Forms.DragEventHandler " Usage="member this.DragOver : System.Windows.Forms.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1160">Se produce cuando se arrastra un objeto sobre los límites del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1160">Occurs when an object is dragged over the control's bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1161">El <xref:System.Windows.Forms.Control.DragOver> evento se produce cuando el cursor del mouse se mueve dentro de los límites del control durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1161">The <xref:System.Windows.Forms.Control.DragOver> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="c1553-1162">A continuación, se describe cómo y cuándo se generan eventos relacionados con operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1162">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="c1553-1163">El <xref:System.Windows.Forms.Control.DoDragDrop%2A> método determina el control en la ubicación actual del cursor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1163">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="c1553-1164">A continuación, comprueba si el control es un destino de colocación válido.</span><span class="sxs-lookup"><span data-stu-id="c1553-1164">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="c1553-1165">Si el control es un destino válido, el <xref:System.Windows.Forms.Control.GiveFeedback> se provoca el evento con el efecto de arrastrar y colocar especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1165">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="c1553-1166">Para obtener una lista de efectos de arrastrar y colocar, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1166">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="c1553-1167">Se realiza el seguimiento de la posición del cursor del mouse, del estado del teclado y del estado de los botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1167">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="c1553-1168">Si el usuario desplaza el mouse fuera de una ventana, se genera el evento <xref:System.Windows.Forms.Control.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1168">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="c1553-1169">Si el mouse entra en otro control, se genera el evento <xref:System.Windows.Forms.Control.DragEnter> para ese control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1169">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="c1553-1170">Si se mueve el mouse dentro del mismo control, se genera el evento <xref:System.Windows.Forms.Control.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1170">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-1171">Si hay un cambio en el estado del botón teclado o mouse, el <xref:System.Windows.Forms.Control.QueryContinueDrag> se provoca el evento y determina si debe continuar la operación de arrastrar, colocar los datos, o cancelar la operación en función del valor de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propiedad del evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1171">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="c1553-1172">Si el valor de <xref:System.Windows.Forms.DragAction> valor es `Continue`, <xref:System.Windows.Forms.Control.DragOver> evento se provoca para continuar con la operación y el <xref:System.Windows.Forms.Control.GiveFeedback> evento se genera con el nuevo efecto, por lo que se puede establecer la información visual apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1172">If the value of <xref:System.Windows.Forms.DragAction> value is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="c1553-1173">Para obtener una lista de efectos de colocar válidos, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1173">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c1553-1174">El <xref:System.Windows.Forms.Control.DragOver> y <xref:System.Windows.Forms.Control.GiveFeedback> eventos están emparejados de forma que cuando el mouse se desplace por el destino de colocación, el usuario reciba la información más actualizada sobre la posición del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1174">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="c1553-1175">Si el valor de <xref:System.Windows.Forms.DragAction> es `Drop`, el valor del efecto de colocar se devuelve al origen, para que la aplicación de origen pueda realizar la operación apropiada en los datos de origen; por ejemplo, cortar los datos si la operación es un movimiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1175">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="c1553-1176">Si el valor de <xref:System.Windows.Forms.DragAction> es `Cancel`, el <xref:System.Windows.Forms.Control.DragLeave> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1176">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c1553-1177">El <xref:System.Windows.Forms.DragEventArgs.X%2A> y <xref:System.Windows.Forms.DragEventArgs.Y%2A> propiedades de la <xref:System.Windows.Forms.DragEventArgs> están en coordenadas de pantalla, no las coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1177">The <xref:System.Windows.Forms.DragEventArgs.X%2A> and <xref:System.Windows.Forms.DragEventArgs.Y%2A> properties of the <xref:System.Windows.Forms.DragEventArgs> are in screen coordinates, not client coordinates.</span></span> <span data-ttu-id="c1553-1178">La siguiente línea de código de C# convierte las propiedades en un cliente <xref:System.Drawing.Point>:</span><span class="sxs-lookup"><span data-stu-id="c1553-1178">The following line of C# code converts the properties to a client <xref:System.Drawing.Point>:</span></span>  
    >   
    >  <span data-ttu-id="c1553-1179">Punto clientPoint = targetControl.PointToClient (nuevo punto (de. X, de. Y));</span><span class="sxs-lookup"><span data-stu-id="c1553-1179">Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));</span></span>  
  
 <span data-ttu-id="c1553-1180">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1180">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1181">En el ejemplo de código siguiente se muestra una operación de arrastrar y colocar entre dos <xref:System.Windows.Forms.ListBox> controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1181">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="c1553-1182">El ejemplo llama a la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método cuando se inicia la acción de arrastrar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1182">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="c1553-1183">La acción de arrastrar se inicia si se ha movido el mouse más de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> desde la ubicación del mouse durante el <xref:System.Windows.Forms.Control.MouseDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1183">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="c1553-1184">El <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> método se utiliza para determinar el índice del elemento que se va a arrastrar durante el `MouseDown` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1184">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="c1553-1185">El ejemplo también muestra cómo utilizar cursores personalizados para la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1185">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="c1553-1186">El ejemplo requiere que dos archivos de cursor `3dwarro.cur` y `3dwno.cur`, existe en el directorio de aplicación para la operación de arrastre personalizado y no colocar cursores, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1186">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="c1553-1187">Los cursores personalizados que se usará si el `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> está activada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1187">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="c1553-1188">Los cursores personalizados se establecen el <xref:System.Windows.Forms.Control.GiveFeedback> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1188">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="c1553-1189">El estado del teclado se evalúa en el <xref:System.Windows.Forms.Control.DragOver> controlador de eventos para el derecho `ListBox`, para determinar cuál será la operación de arrastre según el estado de las teclas MAYÚS, CTRL, ALT o CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="c1553-1189">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="c1553-1190">La ubicación en la `ListBox` donde se produciría la operación de colocar también se determina durante el `DragOver` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1190">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="c1553-1191">Si los datos que se va a quitar no están un `String`, el <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> está establecido en `None` en <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1191">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="c1553-1192">Por último, se muestra el estado de la operación de colocar en el `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1192">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="c1553-1193">Los datos que se va a quitar de la derecha `ListBox` viene determinada en el <xref:System.Windows.Forms.Control.DragDrop> controlador de eventos y el `String` valor se agrega en el lugar adecuado en el `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1193">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="c1553-1194">Si la operación de arrastre sobrepasa los límites del formulario y, después, se cancela la operación de arrastrar y colocar en el <xref:System.Windows.Forms.Control.QueryContinueDrag> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1194">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="c1553-1195">Este fragmento de código muestra cómo utilizar el <xref:System.Windows.Forms.Control.DragOver> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1195">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.DragOver> event.</span></span> <span data-ttu-id="c1553-1196">Consulte la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1196">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#4)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#4)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DrawToBitmap">
      <MemberSignature Language="C#" Value="public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DrawToBitmap(class System.Drawing.Bitmap bitmap, valuetype System.Drawing.Rectangle targetBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DrawToBitmap(System::Drawing::Bitmap ^ bitmap, System::Drawing::Rectangle targetBounds);" />
      <MemberSignature Language="F#" Value="member this.DrawToBitmap : System.Drawing.Bitmap * System.Drawing.Rectangle -&gt; unit" Usage="control.DrawToBitmap (bitmap, targetBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="System.Drawing.Bitmap" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetBounds" Type="System.Drawing.Rectangle" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="bitmap"><span data-ttu-id="c1553-1197">Mapa de bits que se va a dibujar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1197">The bitmap to be drawn to.</span></span></param>
        <param name="targetBounds"><span data-ttu-id="c1553-1198">Los límites dentro de los cuales se representa el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1198">The bounds within which the control is rendered.</span></span></param>
        <summary><span data-ttu-id="c1553-1199">Permite la representación del mapa de bits especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1199">Supports rendering to the specified bitmap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1200">El <xref:System.Windows.Forms.Control.DrawToBitmap%2A> método no se admite para los controles ActiveX.</span><span class="sxs-lookup"><span data-stu-id="c1553-1200">The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method is not supported for ActiveX controls.</span></span> <span data-ttu-id="c1553-1201">Puede invalidar el <xref:System.Windows.Forms.Control.OnPrint%2A> eventos y proporcionar la lógica de impresión personalizada si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1201">You can override the <xref:System.Windows.Forms.Control.OnPrint%2A> event and provide custom printing logic if required.</span></span>  
  
 <span data-ttu-id="c1553-1202">El <xref:System.Windows.Forms.Control.DrawToBitmap%2A> método tiene las siguientes limitaciones:</span><span class="sxs-lookup"><span data-stu-id="c1553-1202">The <xref:System.Windows.Forms.Control.DrawToBitmap%2A> method has the following limitations:</span></span>  
  
-   <span data-ttu-id="c1553-1203">Un <xref:System.ArgumentException> que podría producirse para mapas de bits grandes.</span><span class="sxs-lookup"><span data-stu-id="c1553-1203">An <xref:System.ArgumentException> might be thrown for large bitmaps.</span></span> <span data-ttu-id="c1553-1204">El tamaño máximo permitido varía según el equipo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1204">The maximum allowable size varies by machine.</span></span>  
  
-   <span data-ttu-id="c1553-1205"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> no admite la `Ink` controles para el sistema operativo de Windows XP Tablet PC Edition 2005.</span><span class="sxs-lookup"><span data-stu-id="c1553-1205"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not support the `Ink` controls for the Windows XP Tablet PC Edition 2005 operating system.</span></span>  
  
-   <span data-ttu-id="c1553-1206"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> dibujar un elemento secundario no <xref:System.Windows.Forms.TextBox> si el <xref:System.Windows.Forms.Control.Visible%2A> propiedad de la <xref:System.Windows.Forms.TextBox> está establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1206"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> does not draw a child <xref:System.Windows.Forms.TextBox> if the <xref:System.Windows.Forms.Control.Visible%2A> property of the <xref:System.Windows.Forms.TextBox> is set to `false`.</span></span>  
  
-   <span data-ttu-id="c1553-1207">Los controles dentro de contenedores se procesan en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="c1553-1207">Controls inside containers are rendered in reverse order.</span></span>  
  
-   <span data-ttu-id="c1553-1208"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> no es totalmente funcional para el <xref:System.Windows.Forms.RichTextBox>; sólo se dibuja el borde de un mapa de bits.</span><span class="sxs-lookup"><span data-stu-id="c1553-1208"><xref:System.Windows.Forms.Control.DrawToBitmap%2A> is not fully functional for the <xref:System.Windows.Forms.RichTextBox>; only the border of a bitmap is drawn.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.Control.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-514)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1209">Obtiene o establece un valor que indica si el control puede responder a la interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1209">Gets or sets a value indicating whether the control can respond to user interaction.</span></span></summary>
        <value><span data-ttu-id="c1553-1210">Es <see langword="true" /> si el control puede responder a la interacción del usuario; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1210"><see langword="true" /> if the control can respond to user interaction; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1553-1211">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1211">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1212">Con el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad, puede habilitar o deshabilitar controles en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c1553-1212">With the <xref:System.Windows.Forms.Control.Enabled%2A> property, you can enable or disable controls at run time.</span></span> <span data-ttu-id="c1553-1213">Por ejemplo, puede deshabilitar los controles que no se aplican al estado actual de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1213">For example, you can disable controls that do not apply to the current state of the application.</span></span> <span data-ttu-id="c1553-1214">También puede deshabilitar un control para restringir su uso.</span><span class="sxs-lookup"><span data-stu-id="c1553-1214">You can also disable a control to restrict its use.</span></span> <span data-ttu-id="c1553-1215">Por ejemplo, un botón puede deshabilitarse para evitar que el usuario haga clic en él.</span><span class="sxs-lookup"><span data-stu-id="c1553-1215">For example, a button can be disabled to prevent the user from clicking it.</span></span> <span data-ttu-id="c1553-1216">Si un control está deshabilitado, no puede seleccionarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1216">If a control is disabled, it cannot be selected.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1553-1217">Establecer el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad `false` no deshabilita el cuadro de control de la aplicación o evitar que la ventana de la aplicación recibe el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1217">Setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` does not disable the application's control box or prevent the application window from receiving the focus.</span></span>  
  
 <span data-ttu-id="c1553-1218">Cuando un control contenedor tiene su propiedad enabled establecido en `false`, se deshabilitan todos sus controles independientes, también.</span><span class="sxs-lookup"><span data-stu-id="c1553-1218">When a container control has its enabled property set to `false`, all its contained controls are disabled, as well.</span></span> <span data-ttu-id="c1553-1219">Por ejemplo, si el usuario hace clic en cualquiera de los controles contenidos en deshabilitado <xref:System.Windows.Forms.GroupBox> control, se genera ningún evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1219">For example, if the user clicks on any of the controls contained in a disabled <xref:System.Windows.Forms.GroupBox> control, no events are raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1220">Cuando se deshabilita un control desplazable, también se deshabilitan las barras de desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1220">When a scrollable control is disabled, the scroll bars are also disabled.</span></span> <span data-ttu-id="c1553-1221">Por ejemplo, un cuadro de texto multilínea deshabilitado no puede desplazarse para mostrar todas las líneas de texto.</span><span class="sxs-lookup"><span data-stu-id="c1553-1221">For example, a disabled multiline textbox is unable to scroll to display all the lines of text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1222">En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.GroupBox> y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-1222">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="c1553-1223">El ejemplo se crea un <xref:System.Windows.Forms.TextBox> y establece su <xref:System.Windows.Forms.Control.Location%2A> dentro del cuadro de grupo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1223">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="c1553-1224">A continuación, Establece la <xref:System.Windows.Forms.Control.Text%2A> propiedad del cuadro de grupo y lo acopla el grupo de cuadro a la parte superior del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1224">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="c1553-1225">Por último, deshabilita el cuadro de grupo estableciendo el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad `false`, lo que hace que todos los controles contenidos en el cuadro de grupo va a deshabilitar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1225">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ScrollableControl" />
      </Docs>
    </Member>
    <Member MemberName="EnabledChanged">
      <MemberSignature Language="C#" Value="public event EventHandler EnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler EnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.EnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EnabledChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ EnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.EnabledChanged : EventHandler " Usage="member this.EnabledChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1226">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Enabled" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1226">Occurs when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1227">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1227">This event is raised if the <xref:System.Windows.Forms.Control.Enabled%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-1228">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1228">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1229">El ejemplo de código siguiente utiliza dos <xref:System.Windows.Forms.RadioButton> controles para mostrar el <xref:System.Windows.Forms.Control.EnabledChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1229">The following code example uses two <xref:System.Windows.Forms.RadioButton> controls to demonstrate the <xref:System.Windows.Forms.Control.EnabledChanged> event.</span></span> <span data-ttu-id="c1553-1230">Al hacer clic en un botón cambia el valor de la <xref:System.Windows.Forms.Control.Enabled%2A> propiedad del botón en `false` y muestra un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1230">Clicking one button changes the value of the <xref:System.Windows.Forms.Control.Enabled%2A> property of the other button to `false` and displays a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.EnabledChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.EnabledChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="public object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="abstract member EndInvoke : IAsyncResult -&gt; obj&#xA;override this.EndInvoke : IAsyncResult -&gt; obj" Usage="control.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISynchronizeInvoke.EndInvoke(System.IAsyncResult)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="c1553-1231"><see cref="T:System.IAsyncResult" /> que representa una operación asincrónica de invocación específica; se devuelve al llamar a <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1231">The <see cref="T:System.IAsyncResult" /> that represents a specific invoke asynchronous operation, returned when calling <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />.</span></span></param>
        <summary><span data-ttu-id="c1553-1232">Recupera el valor devuelto por la operación asincrónica representada por la interfaz <see cref="T:System.IAsyncResult" /> que se pasa.</span><span class="sxs-lookup"><span data-stu-id="c1553-1232">Retrieves the return value of the asynchronous operation represented by the <see cref="T:System.IAsyncResult" /> passed.</span></span></summary>
        <returns><span data-ttu-id="c1553-1233"><see cref="T:System.Object" /> generado por la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="c1553-1233">The <see cref="T:System.Object" /> generated by the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1234">Si no se ha completado la operación asincrónica, esta función se bloqueará hasta que el resultado está disponible.</span><span class="sxs-lookup"><span data-stu-id="c1553-1234">If the asynchronous operation has not been completed, this function will block until the result is available.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1235">Además el <xref:System.Windows.Forms.Control.InvokeRequired%2A> propiedad, hay cuatro métodos en un control que son seguros para subprocesos: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, y <xref:System.Windows.Forms.Control.CreateGraphics%2A> si ya se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1235">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="c1553-1236">Una llamada a <xref:System.Windows.Forms.Control.CreateGraphics%2A> antes de que se ha creado el identificador del control en un subproceso en segundo plano puede provocar no válidas entre las llamadas de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1236">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="c1553-1237">Para todas las demás llamadas de método, debe usar uno de los métodos de invocación para calcular las referencias de la llamada al subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1237">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1553-1238">El <paramref name="asyncResult" /> es el valor del parámetro <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1238">The <paramref name="asyncResult" /> parameter value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c1553-1239">El <paramref name="asyncResult" /> objeto no se creó mediante una llamada anterior de la <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> método desde el mismo control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1239">The <paramref name="asyncResult" /> object was not created by a preceding call of the <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" /> method from the same control.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate)" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="Enter">
      <MemberSignature Language="C#" Value="public event EventHandler Enter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Enter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Enter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Enter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Enter;" />
      <MemberSignature Language="F#" Value="member this.Enter : EventHandler " Usage="member this.Enter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1240">Se produce cuando se entra en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1240">Occurs when the control is entered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1241">Al cambiar el foco mediante el teclado (ficha, MAYÚS+TAB etc.), mediante una llamada a la <xref:System.Windows.Forms.Control.Select%2A> o <xref:System.Windows.Forms.Control.SelectNextControl%2A> métodos, o estableciendo la <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propiedad al formulario actual, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1241">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="c1553-1242">Al cambiar el foco mediante el mouse o mediante una llamada a la <xref:System.Windows.Forms.Control.Focus%2A> método, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1242">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="c1553-1243">Si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad está establecida en `false`, <xref:System.Windows.Forms.Control.Validating> y <xref:System.Windows.Forms.Control.Validated> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1243">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1244">El <xref:System.Windows.Forms.Control.Enter> y <xref:System.Windows.Forms.Control.Leave> eventos se han suprimido por el <xref:System.Windows.Forms.Form> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1244">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class.</span></span> <span data-ttu-id="c1553-1245">Los eventos equivalentes en el <xref:System.Windows.Forms.Form> clase son el <xref:System.Windows.Forms.Form.Activated> y <xref:System.Windows.Forms.Form.Deactivate> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1245">The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="c1553-1246">El <xref:System.Windows.Forms.Control.Enter> y <xref:System.Windows.Forms.Control.Leave> eventos son jerárquicos y se realizará en cascada arriba y abajo de la cadena primaria hasta que se alcance el control adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1246">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</span></span> <span data-ttu-id="c1553-1247">Por ejemplo, suponga que tiene un <xref:System.Windows.Forms.Form> con dos <xref:System.Windows.Forms.GroupBox> controles y cada <xref:System.Windows.Forms.GroupBox> control tiene uno <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1247">For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="c1553-1248">Cuando se mueve el símbolo de intercalación de una <xref:System.Windows.Forms.TextBox> a otro, el <xref:System.Windows.Forms.Control.Leave> evento se desencadena para el <xref:System.Windows.Forms.TextBox> y <xref:System.Windows.Forms.GroupBox>y el <xref:System.Windows.Forms.Control.Enter> evento se desencadena para los demás <xref:System.Windows.Forms.GroupBox> y <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1248">When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c1553-1249">No intente establecer el foco desde el <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, o <xref:System.Windows.Forms.Control.Validated> controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1249">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="c1553-1250">Si lo hace, puede provocar la aplicación o el sistema operativo deja de responder.</span><span class="sxs-lookup"><span data-stu-id="c1553-1250">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="c1553-1251">Para obtener más información, consulte el `WM_KILLFOCUS` tema en la sección "Referencia de la entrada de teclado" y la sección "Mensaje interbloqueos" de la [acerca de los mensajes y las colas de mensajes](https://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx) tema.</span><span class="sxs-lookup"><span data-stu-id="c1553-1251">For more information, see the `WM_KILLFOCUS` topic in the "Keyboard Input Reference" section and the "Message Deadlocks" section of the [About Messages and Message Queues](https://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="c1553-1252">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1252">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1253">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.Enter> eventos para cambiar los colores de primer plano y fondo un <xref:System.Windows.Forms.TextBox> bajo ciertas condiciones.</span><span class="sxs-lookup"><span data-stu-id="c1553-1253">The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FindForm">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Form FindForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Form FindForm() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FindForm" />
      <MemberSignature Language="VB.NET" Value="Public Function FindForm () As Form" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Form ^ FindForm();" />
      <MemberSignature Language="F#" Value="member this.FindForm : unit -&gt; System.Windows.Forms.Form" Usage="control.FindForm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Form</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-1254">Recupera el formulario en el que se encuentra el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1254">Retrieves the form that the control is on.</span></span></summary>
        <returns><span data-ttu-id="c1553-1255"><see cref="T:System.Windows.Forms.Form" /> en el que se encuentra el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1255">The <see cref="T:System.Windows.Forms.Form" /> that the control is on.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1256">El control <xref:System.Windows.Forms.Control.Parent%2A> valor de propiedad no puede ser el mismo que el <xref:System.Windows.Forms.Form> devuelto por <xref:System.Windows.Forms.Control.FindForm%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1256">The control's <xref:System.Windows.Forms.Control.Parent%2A> property value might not be the same as the <xref:System.Windows.Forms.Form> returned by <xref:System.Windows.Forms.Control.FindForm%2A> method.</span></span> <span data-ttu-id="c1553-1257">Por ejemplo, si un <xref:System.Windows.Forms.RadioButton> control está dentro de un <xref:System.Windows.Forms.GroupBox> control y el <xref:System.Windows.Forms.GroupBox> se encuentra en un <xref:System.Windows.Forms.Form>, el <xref:System.Windows.Forms.RadioButton> del control <xref:System.Windows.Forms.Control.Parent%2A> es el <xref:System.Windows.Forms.GroupBox> y el <xref:System.Windows.Forms.GroupBox> control <xref:System.Windows.Forms.Control.Parent%2A>es el <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1257">For example, if a <xref:System.Windows.Forms.RadioButton> control is contained within a <xref:System.Windows.Forms.GroupBox> control, and the <xref:System.Windows.Forms.GroupBox> is on a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.RadioButton> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.GroupBox> and the <xref:System.Windows.Forms.GroupBox> control's <xref:System.Windows.Forms.Control.Parent%2A> is the <xref:System.Windows.Forms.Form>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1258">En el ejemplo de código siguiente se busca el formulario que contiene el botón especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1258">The following code example finds the form that contains the specified button.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1259">para todas las ventanas llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1259">for all windows to call this method.</span></span> <span data-ttu-id="c1553-1260">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1260">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.GetTopLevel" />
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Focus();" />
      <MemberSignature Language="F#" Value="member this.Focus : unit -&gt; bool" Usage="control.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-1261">Establece el foco de entrada en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1261">Sets input focus to the control.</span></span></summary>
        <returns><span data-ttu-id="c1553-1262">Es <see langword="true" /> si la solicitud del foco de entrada se realizó correctamente; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1262"><see langword="true" /> if the input focus request was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1263">El <xref:System.Windows.Forms.Control.Focus%2A> devuelve del método `true` si el control recibió correctamente el foco de entrada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1263">The <xref:System.Windows.Forms.Control.Focus%2A> method returns `true` if the control successfully received input focus.</span></span> <span data-ttu-id="c1553-1264">El control puede tener el foco de entrada mientras no se están mostrando las indicaciones visuales de tener el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1264">The control can have the input focus while not displaying any visual cues of having the focus.</span></span> <span data-ttu-id="c1553-1265">Este comportamiento se observa principalmente por los controles no seleccionable que se enumeran a continuación, o los controles derivados de ellos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1265">This behavior is primarily observed by the nonselectable controls listed below, or any controls derived from them.</span></span>  
  
 <span data-ttu-id="c1553-1266">Un control pueden seleccionarse y recibir el foco de entrada si se cumple lo siguiente: el `Selectable` valor <xref:System.Windows.Forms.ControlStyles> está establecido en `true`, que está contenida en otro control y todos sus controles principales son visibles y están habilitados.</span><span class="sxs-lookup"><span data-stu-id="c1553-1266">A control can be selected and receive input focus if all the following are true: the `Selectable` value of <xref:System.Windows.Forms.ControlStyles> is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="c1553-1267">Los controles de Windows Forms en la lista siguiente no son seleccionables.</span><span class="sxs-lookup"><span data-stu-id="c1553-1267">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="c1553-1268">Controles derivados de estos controles también no son seleccionables.</span><span class="sxs-lookup"><span data-stu-id="c1553-1268">Controls derived from these controls are also not selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <span data-ttu-id="c1553-1269"><xref:System.Windows.Forms.LinkLabel> (cuando no hay ningún vínculo en el control)</span><span class="sxs-lookup"><span data-stu-id="c1553-1269"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1270"><xref:System.Windows.Forms.Control.Focus%2A> es un método de bajo nivel pensado principalmente para los autores de controles personalizados.</span><span class="sxs-lookup"><span data-stu-id="c1553-1270"><xref:System.Windows.Forms.Control.Focus%2A> is a low-level method intended primarily for custom control authors.</span></span> <span data-ttu-id="c1553-1271">En su lugar, deben usar los programadores de aplicaciones el <xref:System.Windows.Forms.Control.Select%2A> método o la <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> propiedad para los controles secundarios, o el <xref:System.Windows.Forms.Form.Activate%2A> método para formularios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1271">Instead, application programmers should use the <xref:System.Windows.Forms.Control.Select%2A> method or the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property for child controls, or the <xref:System.Windows.Forms.Form.Activate%2A> method for forms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1272">El ejemplo de código siguiente establece el foco en especificado <xref:System.Windows.Forms.Control>, si puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1272">The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#1)]
 [!code-csharp[Windows.Forms.ControlMembers6#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#1)]
 [!code-vb[Windows.Forms.ControlMembers6#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1273">para todas las ventanas llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1273">for all windows to call this method.</span></span> <span data-ttu-id="c1553-1274">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1274">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="P:System.Windows.Forms.Control.ContainsFocus" />
        <altmember cref="P:System.Windows.Forms.Control.Focused" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="P:System.Windows.Forms.ContainerControl.ActiveControl" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
      </Docs>
    </Member>
    <Member MemberName="Focused">
      <MemberSignature Language="C#" Value="public virtual bool Focused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Focused" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Focused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Focused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Focused : bool" Usage="System.Windows.Forms.Control.Focused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1275">Obtiene un valor que indica si el control tiene el foco de entrada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1275">Gets a value indicating whether the control has input focus.</span></span></summary>
        <value><span data-ttu-id="c1553-1276"><see langword="true" /> si el control tiene foco; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1276"><see langword="true" /> if the control has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-1277">El siguiente código de ejemplo se deshabilita un <xref:System.Windows.Forms.MenuItem> si un <xref:System.Windows.Forms.TextBox> no tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1277">The following code example disables a <xref:System.Windows.Forms.MenuItem> if a <xref:System.Windows.Forms.TextBox> does not have focus.</span></span> <span data-ttu-id="c1553-1278">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con un <xref:System.Windows.Forms.TextBox> denominado `textBox1` y dos <xref:System.Windows.Forms.MenuItem> objetos denominados `menuItemEdit` y `menuItemEditInsertCustomerInfo`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1278">This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TextBox> named `textBox1` and two <xref:System.Windows.Forms.MenuItem> objects named `menuItemEdit` and `menuItemEditInsertCustomerInfo`.</span></span>  
  
 [!code-cpp[Windows.FOrms.Control Members2#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#4)]
 [!code-csharp[Windows.FOrms.Control Members2#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#4)]
 [!code-vb[Windows.FOrms.Control Members2#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-1279">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.Focused" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.Focused" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-1279">When overriding the <see cref="P:System.Windows.Forms.Control.Focused" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Focused" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-1280">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1280">Otherwise, you must provide all the implementation.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="P:System.Windows.Forms.Control.CanSelect" />
        <altmember cref="P:System.Windows.Forms.Control.ContainsFocus" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.Control.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-512)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1281">Obtiene o establece la fuente del texto que muestra el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1281">Gets or sets the font of the text displayed by the control.</span></span></summary>
        <value><span data-ttu-id="c1553-1282"><see cref="T:System.Drawing.Font" /> que se va a aplicar al texto que muestra el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1282">The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.</span></span> <span data-ttu-id="c1553-1283">El valor predeterminado es el valor de la propiedad <see cref="P:System.Windows.Forms.Control.DefaultFont" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1283">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultFont" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1284">El <xref:System.Windows.Forms.Control.Font%2A> es una propiedad de ambiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1284">The <xref:System.Windows.Forms.Control.Font%2A> property is an ambient property.</span></span> <span data-ttu-id="c1553-1285">Una propiedad de ambiente es una propiedad de control que, si no establece, se recupera desde el control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1285">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="c1553-1286">Por ejemplo, un <xref:System.Windows.Forms.Button> tendrá el mismo <xref:System.Windows.Forms.Control.BackColor%2A> como su elemento primario <xref:System.Windows.Forms.Form> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1286">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="c1553-1287">Para obtener más información acerca de las propiedades de ambiente, vea la <xref:System.Windows.Forms.AmbientProperties> clase o el <xref:System.Windows.Forms.Control> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="c1553-1287">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
 <span data-ttu-id="c1553-1288">Dado que el <xref:System.Drawing.Font> es inmutable (es decir, que no se puede ajustar en cualquiera de sus propiedades), solo se puede asignar el <xref:System.Windows.Forms.Control.Font%2A> propiedad un nuevo <xref:System.Drawing.Font>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1288">Because the <xref:System.Drawing.Font> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <xref:System.Windows.Forms.Control.Font%2A> property a new <xref:System.Drawing.Font>.</span></span> <span data-ttu-id="c1553-1289">Sin embargo, puede basar la nueva fuente en la fuente existente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1289">However, you can base the new font on the existing font.</span></span>  
  
 <span data-ttu-id="c1553-1290">[Visual Basic, C#]</span><span class="sxs-lookup"><span data-stu-id="c1553-1290">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="c1553-1291">El siguiente es un ejemplo de cómo ajustar la fuente existente para convertirla en negrita:</span><span class="sxs-lookup"><span data-stu-id="c1553-1291">The following is an example of how to adjust the existing font to make it bold:</span></span>  
  
```csharp  
myControl.Font = new Font(myControl.Font,   
    myControl.Font.Style | FontStyle.Bold);  
```  
  
```vb  
MyControl.Font = New Font(MyControl.Font, _   
    MyControl.Font.Style Or FontStyle.Bold)  
```  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1292">El siguiente código de ejemplo se muestra un <xref:System.Windows.Forms.FontDialog> para el usuario y los cambios del <xref:System.Drawing.Font> de un <xref:System.Windows.Forms.DateTimePicker> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1292">The following code example displays a <xref:System.Windows.Forms.FontDialog> to the user and changes the <xref:System.Drawing.Font> of a <xref:System.Windows.Forms.DateTimePicker> control.</span></span> <span data-ttu-id="c1553-1293">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> con <xref:System.Windows.Forms.Button> y un <xref:System.Windows.Forms.DateTimePicker> en él.</span><span class="sxs-lookup"><span data-stu-id="c1553-1293">This example requires that you have a <xref:System.Windows.Forms.Form> with <xref:System.Windows.Forms.Button> and a <xref:System.Windows.Forms.DateTimePicker> on it.</span></span>  
  
 [!code-cpp[Control_Font#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Font/CPP/control_font.cpp#1)]
 [!code-csharp[Control_Font#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Font/CS/control_font.cs#1)]
 [!code-vb[Control_Font#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Font/VB/control_font.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-1294">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.Font" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.Font" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-1294">When overriding the <see cref="P:System.Windows.Forms.Control.Font" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Font" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-1295">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1295">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-1296">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.Font" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1296">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Font" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontChanged">
      <MemberSignature Language="C#" Value="public event EventHandler FontChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler FontChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.FontChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FontChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ FontChanged;" />
      <MemberSignature Language="F#" Value="member this.FontChanged : EventHandler " Usage="member this.FontChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1297">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Font" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1297">Occurs when the <see cref="P:System.Windows.Forms.Control.Font" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1298">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Font%2A> se cambia la propiedad mediante programación o a través de la interacción.</span><span class="sxs-lookup"><span data-stu-id="c1553-1298">This event is raised if the <xref:System.Windows.Forms.Control.Font%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="c1553-1299">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1299">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1300">En el ejemplo de código siguiente se muestra el <xref:System.Windows.Forms.Control.FontChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1300">The following code example demonstrates the <xref:System.Windows.Forms.Control.FontChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.FontChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.FontChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Font" />
        <altmember cref="T:System.Drawing.Font" />
      </Docs>
    </Member>
    <Member MemberName="FontHeight">
      <MemberSignature Language="C#" Value="protected int FontHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FontHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.FontHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Property FontHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int FontHeight { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.FontHeight : int with get, set" Usage="System.Windows.Forms.Control.FontHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1301">Obtiene o establece el alto de la fuente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1301">Gets or sets the height of the font of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-1302">Alto de <see cref="T:System.Drawing.Font" /> del control, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1302">The height of the <see cref="T:System.Drawing.Font" /> of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1303">El <xref:System.Windows.Forms.Control.FontHeight%2A> propiedad no debe establecerse en cualquier valor distinto del control <xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType> valor, o -1.</span><span class="sxs-lookup"><span data-stu-id="c1553-1303">The <xref:System.Windows.Forms.Control.FontHeight%2A> property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=nameWithType> value, or -1.</span></span> <span data-ttu-id="c1553-1304">Establecer <xref:System.Windows.Forms.Control.FontHeight%2A> en -1 tiene el efecto de borrar el valor de alto almacenado en caché y el valor se vuelve a calcular la próxima vez que se hace referencia a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1304">Setting <xref:System.Windows.Forms.Control.FontHeight%2A> to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Font.Height" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.Control.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-513)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1305">Obtiene o establece el color de primer plano del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1305">Gets or sets the foreground color of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-1306"><see cref="T:System.Drawing.Color" /> de primer plano del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1306">The foreground <see cref="T:System.Drawing.Color" /> of the control.</span></span> <span data-ttu-id="c1553-1307">El valor predeterminado es el valor de la propiedad <see cref="P:System.Windows.Forms.Control.DefaultForeColor" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1307">The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1308">El <xref:System.Windows.Forms.Control.ForeColor%2A> es una propiedad de ambiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1308">The <xref:System.Windows.Forms.Control.ForeColor%2A> property is an ambient property.</span></span> <span data-ttu-id="c1553-1309">Una propiedad de ambiente es una propiedad de control que, si no establece, se recupera desde el control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1309">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="c1553-1310">Por ejemplo, un <xref:System.Windows.Forms.Button> tendrá el mismo <xref:System.Windows.Forms.Control.BackColor%2A> como su elemento primario <xref:System.Windows.Forms.Form> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1310">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="c1553-1311">Para obtener más información acerca de las propiedades de ambiente, vea la <xref:System.Windows.Forms.AmbientProperties> clase o el <xref:System.Windows.Forms.Control> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="c1553-1311">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1312">El siguiente ejemplo de código establece la <xref:System.Windows.Forms.Control.BackColor%2A> y <xref:System.Windows.Forms.Control.ForeColor%2A> de los controles a los colores del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1312">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="c1553-1313">El código de forma recursiva llama a sí mismo si el control tiene todos los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1313">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="c1553-1314">Este ejemplo de código requiere que haya un <xref:System.Windows.Forms.Form> con control de al menos un elemento secundario; sin embargo, un contenedor secundario controlar, como un <xref:System.Windows.Forms.Panel> o <xref:System.Windows.Forms.GroupBox>, con su propio elemento secundario controles mejor demostraría la recursividad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1314">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-1315">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.ForeColor" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.ForeColor" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-1315">When overriding the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-1316">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1316">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-1317">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.ForeColor" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1317">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
        <altmember cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="ForeColorChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ForeColorChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ForeColorChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ForeColorChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ForeColorChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ForeColorChanged;" />
      <MemberSignature Language="F#" Value="member this.ForeColorChanged : EventHandler " Usage="member this.ForeColorChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1318">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.ForeColor" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1318">Occurs when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1319">Este evento se desencadena si el <xref:System.Windows.Forms.Control.ForeColor%2A> se cambia la propiedad mediante programación o a través de la interacción.</span><span class="sxs-lookup"><span data-stu-id="c1553-1319">This event is raised if the <xref:System.Windows.Forms.Control.ForeColor%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="c1553-1320">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1320">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1321">El ejemplo de código siguiente es un controlador de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1321">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-1322">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre *PropertyName* `Changed` que se genera cuando correspondiente *PropertyName* cambia el valor ( *PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-1322">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-1323">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda.</span><span class="sxs-lookup"><span data-stu-id="c1553-1323">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="c1553-1324">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1324">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-1325">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1325">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ForeColor" />
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="FromChildHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control FromChildHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.Control FromChildHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FromChildHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromChildHandle (handle As IntPtr) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ FromChildHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromChildHandle : nativeint -&gt; System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.FromChildHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="c1553-1326">Identificador de ventana (<see langword="HWND" />) que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1326">The window handle (<see langword="HWND" />) to search for.</span></span></param>
        <summary><span data-ttu-id="c1553-1327">Recupera el control que contiene el identificador especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1327">Retrieves the control that contains the specified handle.</span></span></summary>
        <returns><span data-ttu-id="c1553-1328"><see cref="T:System.Windows.Forms.Control" /> que representa al control asociado al identificador especificado; devuelve <see langword="null" /> si no se encuentra un control con el identificador especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1328">The <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns <see langword="null" /> if no control with the specified handle is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1329">Este método busca la cadena principal del identificador de ventana hasta que encuentra un identificador que está asociado a un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1329">This method searches up the window handle parent chain until it finds a handle that is associated with a control.</span></span> <span data-ttu-id="c1553-1330">Este método es más confiable que la <xref:System.Windows.Forms.Control.FromHandle%2A> método, porque devuelve correctamente los controles que tienen más de un identificador.</span><span class="sxs-lookup"><span data-stu-id="c1553-1330">This method is more reliable than the <xref:System.Windows.Forms.Control.FromHandle%2A> method, because it correctly returns controls that own more than one handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1331">para todas las ventanas llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1331">for all windows to call this method.</span></span> <span data-ttu-id="c1553-1332">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1332">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Control FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.Control FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::Control ^ FromHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="c1553-1333">Identificador de ventana (<see langword="HWND" />) que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1333">The window handle (<see langword="HWND" />) to search for.</span></span></param>
        <summary><span data-ttu-id="c1553-1334">Devuelve el control actualmente asociado al identificador especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1334">Returns the control that is currently associated with the specified handle.</span></span></summary>
        <returns><span data-ttu-id="c1553-1335"><see cref="T:System.Windows.Forms.Control" /> que representa al control asociado al identificador especificado; devuelve <see langword="null" /> si no se encuentra un control con el identificador especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1335">A <see cref="T:System.Windows.Forms.Control" /> that represents the control associated with the specified handle; returns <see langword="null" /> if no control with the specified handle is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1336">Use el <xref:System.Windows.Forms.Control.FromChildHandle%2A> si necesita devolver controles que tienen más de un identificador de método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1336">Use the <xref:System.Windows.Forms.Control.FromChildHandle%2A> method if you need to return controls that own more than one handle.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1337">para todas las ventanas llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1337">for all windows to call this method.</span></span> <span data-ttu-id="c1553-1338">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1338">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityObjectById">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.AccessibleObject GetAccessibilityObjectById(int32 objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetAccessibilityObjectById (objectId As Integer) As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::AccessibleObject ^ GetAccessibilityObjectById(int objectId);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject&#xA;override this.GetAccessibilityObjectById : int -&gt; System.Windows.Forms.AccessibleObject" Usage="control.GetAccessibilityObjectById objectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectId" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="objectId"><span data-ttu-id="c1553-1339"><see langword="Int32" /> que identifica el <see cref="T:System.Windows.Forms.AccessibleObject" /> que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1339">An <see langword="Int32" /> that identifies the <see cref="T:System.Windows.Forms.AccessibleObject" /> to retrieve.</span></span></param>
        <summary><span data-ttu-id="c1553-1340">Recupera el <see cref="T:System.Windows.Forms.AccessibleObject" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1340">Retrieves the specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></summary>
        <returns><span data-ttu-id="c1553-1341">Objeto <see cref="T:System.Windows.Forms.AccessibleObject" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1341">The specified <see cref="T:System.Windows.Forms.AccessibleObject" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="GetAutoSizeMode">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AutoSizeMode GetAutoSizeMode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.AutoSizeMode GetAutoSizeMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetAutoSizeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAutoSizeMode () As AutoSizeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::AutoSizeMode GetAutoSizeMode();" />
      <MemberSignature Language="F#" Value="member this.GetAutoSizeMode : unit -&gt; System.Windows.Forms.AutoSizeMode" Usage="control.GetAutoSizeMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AutoSizeMode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-1342">Recupera un valor que indica cómo se comportará un control cuando su propiedad <see cref="P:System.Windows.Forms.Control.AutoSize" /> esté habilitada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1342">Retrieves a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</span></span></summary>
        <returns><span data-ttu-id="c1553-1343">Uno de los valores de <see cref="T:System.Windows.Forms.AutoSizeMode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1343">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildAtPoint">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-1344">Recupera el control secundario en una ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1344">Retrieves the child control at a specified location.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt);" />
      <MemberSignature Language="F#" Value="member this.GetChildAtPoint : System.Drawing.Point -&gt; System.Windows.Forms.Control" Usage="control.GetChildAtPoint pt" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="c1553-1345"><see cref="T:System.Drawing.Point" /> que contiene las coordenadas donde se desea buscar un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1345">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control.</span></span> <span data-ttu-id="c1553-1346">Las coordenadas se expresan con relación a la esquina superior izquierda del área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1346">Coordinates are expressed relative to the upper-left corner of the control's client area.</span></span></param>
        <summary><span data-ttu-id="c1553-1347">Recupera el control secundario ubicado en las coordenadas especificadas.</span><span class="sxs-lookup"><span data-stu-id="c1553-1347">Retrieves the child control that is located at the specified coordinates.</span></span></summary>
        <returns><span data-ttu-id="c1553-1348"><see cref="T:System.Windows.Forms.Control" /> que representa al control ubicado en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1348">A <see cref="T:System.Windows.Forms.Control" /> that represents the control that is located at the specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1349">Si no hay ningún control secundario en el punto especificado, el <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> devuelve del método `null`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1349">If there is no child control at the specified point, the <xref:System.Windows.Forms.Control.GetChildAtPoint%2A> method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1350">para que todas las ventanas llamar a este método si el control devuelto no es un elemento secundario del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1350">for all windows to call this method if the control returned is not a child of the control.</span></span> <span data-ttu-id="c1553-1351">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1351">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetChildAtPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetChildAtPoint(valuetype System.Drawing.Point pt, valuetype System.Windows.Forms.GetChildAtPointSkip skipValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildAtPoint (pt As Point, skipValue As GetChildAtPointSkip) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetChildAtPoint(System::Drawing::Point pt, System::Windows::Forms::GetChildAtPointSkip skipValue);" />
      <MemberSignature Language="F#" Value="member this.GetChildAtPoint : System.Drawing.Point * System.Windows.Forms.GetChildAtPointSkip -&gt; System.Windows.Forms.Control" Usage="control.GetChildAtPoint (pt, skipValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="skipValue" Type="System.Windows.Forms.GetChildAtPointSkip" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="pt"><span data-ttu-id="c1553-1352"><see cref="T:System.Drawing.Point" /> que contiene las coordenadas donde se desea buscar un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1352">A <see cref="T:System.Drawing.Point" /> that contains the coordinates where you want to look for a control.</span></span> <span data-ttu-id="c1553-1353">Las coordenadas se expresan con relación a la esquina superior izquierda del área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1353">Coordinates are expressed relative to the upper-left corner of the control's client area.</span></span></param>
        <param name="skipValue"><span data-ttu-id="c1553-1354">Uno de los valores de <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />, que determina si se omitirán determinados tipos de controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1354">One of the values of <see cref="T:System.Windows.Forms.GetChildAtPointSkip" />, determining whether to ignore child controls of a certain type.</span></span></param>
        <summary><span data-ttu-id="c1553-1355">Recupera el control secundario que se encuentra en las coordenadas especificadas, especificando si se omitirán determinados tipos de controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1355">Retrieves the child control that is located at the specified coordinates, specifying whether to ignore child controls of a certain type.</span></span></summary>
        <returns><span data-ttu-id="c1553-1356"><see cref="T:System.Windows.Forms.Control" /> secundario que se encuentra en las coordenadas especificadas.</span><span class="sxs-lookup"><span data-stu-id="c1553-1356">The child <see cref="T:System.Windows.Forms.Control" /> at the specified coordinates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IContainerControl GetContainerControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.IContainerControl GetContainerControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetContainerControl" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContainerControl () As IContainerControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::IContainerControl ^ GetContainerControl();" />
      <MemberSignature Language="F#" Value="member this.GetContainerControl : unit -&gt; System.Windows.Forms.IContainerControl" Usage="control.GetContainerControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IContainerControl</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-1357">Devuelve el siguiente <see cref="T:System.Windows.Forms.ContainerControl" /> (en sentido ascendente) de la cadena de controles primarios del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1357">Returns the next <see cref="T:System.Windows.Forms.ContainerControl" /> up the control's chain of parent controls.</span></span></summary>
        <returns><span data-ttu-id="c1553-1358"><see cref="T:System.Windows.Forms.IContainerControl" /> que representa el elemento primario de <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1358">An <see cref="T:System.Windows.Forms.IContainerControl" />, that represents the parent of the <see cref="T:System.Windows.Forms.Control" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1359">para todas las ventanas llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1359">for all windows to call this method.</span></span> <span data-ttu-id="c1553-1360">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1360">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="T:System.Windows.Forms.IContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="GetNextControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control GetNextControl (System.Windows.Forms.Control ctl, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.Control GetNextControl(class System.Windows.Forms.Control ctl, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextControl (ctl As Control, forward As Boolean) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::Control ^ GetNextControl(System::Windows::Forms::Control ^ ctl, bool forward);" />
      <MemberSignature Language="F#" Value="member this.GetNextControl : System.Windows.Forms.Control * bool -&gt; System.Windows.Forms.Control" Usage="control.GetNextControl (ctl, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="c1553-1361"><see cref="T:System.Windows.Forms.Control" /> donde va a comenzar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="c1553-1361">The <see cref="T:System.Windows.Forms.Control" /> to start the search with.</span></span></param>
        <param name="forward"><span data-ttu-id="c1553-1362">Es <see langword="true" /> para buscar hacia delante en el orden de tabulación; es <see langword="false" /> para buscar hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="c1553-1362"><see langword="true" /> to search forward in the tab order; <see langword="false" /> to search backward.</span></span></param>
        <summary><span data-ttu-id="c1553-1363">Recupera el siguiente control, hacia delante o hacia atrás, en el orden de tabulación de controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1363">Retrieves the next control forward or back in the tab order of child controls.</span></span></summary>
        <returns><span data-ttu-id="c1553-1364">Siguiente <see cref="T:System.Windows.Forms.Control" /> en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1364">The next <see cref="T:System.Windows.Forms.Control" /> in the tab order.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1365">El <xref:System.Windows.Forms.Control.GetNextControl%2A> método depende del orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1365">The <xref:System.Windows.Forms.Control.GetNextControl%2A> method is dependent on tab order.</span></span> <span data-ttu-id="c1553-1366">Para recorrer en iteración todos los controles de un formulario, incluidos los controles anidados, utilice el <xref:System.Windows.Forms.Control.Controls%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1366">To iterate through all controls of a form, including nested controls, use the <xref:System.Windows.Forms.Control.Controls%2A> property.</span></span> <span data-ttu-id="c1553-1367">Para obtener o establecer el control activo de un control contenedor, utilice el <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1367">To get or set the active control of a container control, use the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredSize (proposedSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Drawing::Size GetPreferredSize(System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.GetPreferredSize proposedSize" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.Layout.IArrangedElement.GetPreferredSize(System.Drawing.Size)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedSize" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="proposedSize"><span data-ttu-id="c1553-1368">Área de tamaño personalizado de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1368">The custom-sized area for a control.</span></span></param>
        <summary><span data-ttu-id="c1553-1369">Recupera el tamaño de un área rectangular en la que se puede encajar un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1369">Retrieves the size of a rectangular area into which a control can be fitted.</span></span></summary>
        <returns><span data-ttu-id="c1553-1370">Un par ordenado de tipo <see cref="T:System.Drawing.Size" /> que representa el ancho y el alto de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1370">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1371">El comportamiento de <xref:System.Windows.Forms.Control.GetPreferredSize%2A> difiere según el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1371">The behavior of <xref:System.Windows.Forms.Control.GetPreferredSize%2A> differs by control.</span></span> <span data-ttu-id="c1553-1372">El <xref:System.Windows.Forms.Control.LayoutEngine%2A> podría ser no se puede asignar el tamaño devuelto al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1372">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control.</span></span> <span data-ttu-id="c1553-1373">Puede devolver un tamaño mayor que las restricciones indicadas en la `proposedSize` parámetro, pero `proposedSize` debe disminuir a medida que disminuye la restricción.</span><span class="sxs-lookup"><span data-stu-id="c1553-1373">You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases.</span></span> <span data-ttu-id="c1553-1374">Por ejemplo, `GetPreferredSize(new Size(100, 0))` no debe ser mayor que `GetPreferredSize(new Size(200, 0))`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1374">For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`.</span></span> <span data-ttu-id="c1553-1375">La excepción es un `proposedSize` 0 o `Size.Empty`, que se definen como sin restricciones.</span><span class="sxs-lookup"><span data-stu-id="c1553-1375">The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScaledBounds">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Rectangle GetScaledBounds(valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetScaledBounds (bounds As Rectangle, factor As SizeF, specified As BoundsSpecified) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Rectangle GetScaledBounds(System::Drawing::Rectangle bounds, System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle&#xA;override this.GetScaledBounds : System.Drawing.Rectangle * System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; System.Drawing.Rectangle" Usage="control.GetScaledBounds (bounds, factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="2" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="bounds"><span data-ttu-id="c1553-1376"><see cref="T:System.Drawing.Rectangle" /> que especifica el área para la que se deben recuperar los límites de pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-1376">A <see cref="T:System.Drawing.Rectangle" /> that specifies the area for which to retrieve the display bounds.</span></span></param>
        <param name="factor"><span data-ttu-id="c1553-1377">El alto y el ancho de los límites del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1377">The height and width of the control's bounds.</span></span></param>
        <param name="specified"><span data-ttu-id="c1553-1378">Uno de los valores de <see cref="T:System.Windows.Forms.BoundsSpecified" /> que especifica los límites del control que se usarán al definir su tamaño y posición.</span><span class="sxs-lookup"><span data-stu-id="c1553-1378">One of the values of <see cref="T:System.Windows.Forms.BoundsSpecified" /> that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="c1553-1379">Recupera los límites dentro de los cuales se escala el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1379">Retrieves the bounds within which the control is scaled.</span></span></summary>
        <returns><span data-ttu-id="c1553-1380"><see cref="T:System.Drawing.Rectangle" /> que representa los límites dentro de los cuales se escala el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1380">A <see cref="T:System.Drawing.Rectangle" /> representing the bounds within which the control is scaled.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1381">Se trata de un método auxiliar que llama a <xref:System.Windows.Forms.Control.ScaleControl%2A> para recuperar los límites dentro del cual se escala el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1381">This is a helper method that is called by <xref:System.Windows.Forms.Control.ScaleControl%2A> to retrieve the bounds within which the control is scaled.</span></span> <span data-ttu-id="c1553-1382">Puede invalidar este método para reutilizar el <xref:System.Windows.Forms.Control.ScaleControl%2A> escalado lógica, pero debe proporcionar sus propios límites.</span><span class="sxs-lookup"><span data-stu-id="c1553-1382">You can override this method to reuse the <xref:System.Windows.Forms.Control.ScaleControl%2A> scaling logic, but you must supply your own bounds.</span></span> <span data-ttu-id="c1553-1383">La implementación predeterminada devuelve límites escalados que tienen en cuenta la `specified` los límites indicados, si el control es de nivel superior, si el control se ha corregido ancho o tamaño automático y cualquier elemento gráfico podría tener el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1383">The default implementation returns scaled bounds that take into account the `specified` bounds, whether the control is top level, whether the control is fixed width or auto size, and any adornments the control might have.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <altmember cref="P:System.Windows.Forms.Control.ScaleChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetStyle">
      <MemberSignature Language="C#" Value="protected bool GetStyle (System.Windows.Forms.ControlStyles flag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool GetStyle(valuetype System.Windows.Forms.ControlStyles flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyle (flag As ControlStyles) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool GetStyle(System::Windows::Forms::ControlStyles flag);" />
      <MemberSignature Language="F#" Value="member this.GetStyle : System.Windows.Forms.ControlStyles -&gt; bool" Usage="control.GetStyle flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Windows.Forms.ControlStyles" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="c1553-1384">Bit <see cref="T:System.Windows.Forms.ControlStyles" /> a partir del que se va a devolver el valor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1384">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to return the value from.</span></span></param>
        <summary><span data-ttu-id="c1553-1385">Recupera el valor del bit de estilo de control especificado para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1385">Retrieves the value of the specified control style bit for the control.</span></span></summary>
        <returns><span data-ttu-id="c1553-1386"><see langword="true" /> si el bit de estilo de control especificado se establece en <see langword="true" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1386"><see langword="true" /> if the specified control style bit is set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1387">Marcas de bit de estilo de control se usan para categorizar el comportamiento compatible.</span><span class="sxs-lookup"><span data-stu-id="c1553-1387">Control style bit flags are used to categorize supported behavior.</span></span> <span data-ttu-id="c1553-1388">Un control puede habilitar un estilo mediante una llamada a la <xref:System.Windows.Forms.Control.SetStyle%2A> método y pasando adecuado <xref:System.Windows.Forms.ControlStyles> bits y el valor booleano para establecer el bit.</span><span class="sxs-lookup"><span data-stu-id="c1553-1388">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit and the Boolean value to set the bit to.</span></span> <span data-ttu-id="c1553-1389">Para determinar el valor asignado a un determinado <xref:System.Windows.Forms.ControlStyles> de bits, utilice el <xref:System.Windows.Forms.Control.GetStyle%2A> método y pase el <xref:System.Windows.Forms.ControlStyles> miembro para evaluar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1389">To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1390">El ejemplo de código siguiente devuelve el valor del estilo relacionado doble búfer bits para un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1390">The following code example returns the value of the double-buffering related style bits for a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-1391">Este ejemplo devuelve `true` solo si todos los bits de estilo se establece en `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1391">This example returns `true` only if all the style bits are set to `true`.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#4)]
 [!code-csharp[Windows.Forms.ControlMembers6#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#4)]
 [!code-vb[Windows.Forms.ControlMembers6#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevel">
      <MemberSignature Language="C#" Value="protected bool GetTopLevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool GetTopLevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.GetTopLevel" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTopLevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool GetTopLevel();" />
      <MemberSignature Language="F#" Value="member this.GetTopLevel : unit -&gt; bool" Usage="control.GetTopLevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-1392">Determina si el control es de nivel superior.</span><span class="sxs-lookup"><span data-stu-id="c1553-1392">Determines if the control is a top-level control.</span></span></summary>
        <returns><span data-ttu-id="c1553-1393"><see langword="true" /> si el control es de nivel superior; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1393"><see langword="true" /> if the control is a top-level control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.Forms.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1394">Se produce durante una operación de arrastre.</span><span class="sxs-lookup"><span data-stu-id="c1553-1394">Occurs during a drag operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1395">El <xref:System.Windows.Forms.Control.GiveFeedback> evento se desencadena cuando se inicia una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1395">The <xref:System.Windows.Forms.Control.GiveFeedback> event is raised when a drag-and-drop operation is started.</span></span> <span data-ttu-id="c1553-1396">Con el <xref:System.Windows.Forms.Control.GiveFeedback> eventos, el origen de un evento de arrastre puede modificar la apariencia del puntero del mouse con el fin de proporcionar información visual al usuario durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1396">With the <xref:System.Windows.Forms.Control.GiveFeedback> event, the source of a drag event can modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="c1553-1397">A continuación, se describe cómo y cuándo se generan eventos relacionados con operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1397">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="c1553-1398">El <xref:System.Windows.Forms.Control.DoDragDrop%2A> método determina el control en la ubicación actual del cursor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1398">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="c1553-1399">A continuación, comprueba si el control es un destino de colocación válido.</span><span class="sxs-lookup"><span data-stu-id="c1553-1399">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="c1553-1400">Si el control es un destino válido, el <xref:System.Windows.Forms.Control.GiveFeedback> se provoca el evento con el efecto de arrastrar y colocar especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1400">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="c1553-1401">Para obtener una lista de efectos de arrastrar y colocar, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1401">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="c1553-1402">Se realiza el seguimiento de la posición del cursor del mouse, del estado del teclado y del estado de los botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1402">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="c1553-1403">Si el usuario desplaza el mouse fuera de una ventana, se genera el evento <xref:System.Windows.Forms.Control.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1403">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="c1553-1404">Si el mouse entra en otro control, se genera el evento <xref:System.Windows.Forms.Control.DragEnter> para ese control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1404">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="c1553-1405">Si se mueve el mouse dentro del mismo control, se genera el evento <xref:System.Windows.Forms.Control.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1405">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-1406">Si hay un cambio en el estado del botón teclado o mouse, el <xref:System.Windows.Forms.Control.QueryContinueDrag> se provoca el evento y determina si debe continuar la operación de arrastrar, colocar los datos, o cancelar la operación en función del valor de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propiedad del evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1406">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="c1553-1407">Si el valor de <xref:System.Windows.Forms.DragAction> es `Continue`, <xref:System.Windows.Forms.Control.DragOver> evento se provoca para continuar con la operación y el <xref:System.Windows.Forms.Control.GiveFeedback> evento se genera con el nuevo efecto, por lo que se puede establecer la información visual apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1407">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="c1553-1408">Para obtener una lista de efectos de colocar válidos, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1408">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c1553-1409">El <xref:System.Windows.Forms.Control.DragOver> y <xref:System.Windows.Forms.Control.GiveFeedback> eventos están emparejados de forma que cuando el mouse se desplace por el destino de colocación, el usuario reciba la información más actualizada sobre la posición del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1409">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="c1553-1410">Si el valor de <xref:System.Windows.Forms.DragAction> es `Drop`, el valor del efecto de colocar se devuelve al origen, para que la aplicación de origen pueda realizar la operación apropiada en los datos de origen; por ejemplo, cortar los datos si la operación es un movimiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1410">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="c1553-1411">Si el valor de <xref:System.Windows.Forms.DragAction> es `Cancel`, el <xref:System.Windows.Forms.Control.DragLeave> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1411">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-1412">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1412">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1413">En el ejemplo de código siguiente se muestra una operación de arrastrar y colocar entre dos <xref:System.Windows.Forms.ListBox> controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1413">The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls.</span></span> <span data-ttu-id="c1553-1414">El ejemplo llama a la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método cuando se inicia la acción de arrastrar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1414">The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts.</span></span> <span data-ttu-id="c1553-1415">La acción de arrastrar se inicia si se ha movido el mouse más de <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> desde la ubicación del mouse durante el <xref:System.Windows.Forms.Control.MouseDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1415">The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=nameWithType> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event.</span></span> <span data-ttu-id="c1553-1416">El <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> método se utiliza para determinar el índice del elemento que se va a arrastrar durante el `MouseDown` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1416">The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.</span></span>  
  
 <span data-ttu-id="c1553-1417">El ejemplo también muestra cómo utilizar cursores personalizados para la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1417">The example also demonstrates using custom cursors for the drag-and-drop operation.</span></span> <span data-ttu-id="c1553-1418">El ejemplo requiere que dos archivos de cursor `3dwarro.cur` y `3dwno.cur`, existe en el directorio de aplicación para la operación de arrastre personalizado y no colocar cursores, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1418">The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively.</span></span> <span data-ttu-id="c1553-1419">Los cursores personalizados que se usará si el `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> está activada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1419">The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked.</span></span> <span data-ttu-id="c1553-1420">Los cursores personalizados se establecen el <xref:System.Windows.Forms.Control.GiveFeedback> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1420">The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.</span></span>  
  
 <span data-ttu-id="c1553-1421">El estado del teclado se evalúa en el <xref:System.Windows.Forms.Control.DragOver> controlador de eventos para el derecho `ListBox`, para determinar cuál será la operación de arrastre según el estado de las teclas MAYÚS, CTRL, ALT o CTRL + ALT.</span><span class="sxs-lookup"><span data-stu-id="c1553-1421">The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys.</span></span> <span data-ttu-id="c1553-1422">La ubicación en la `ListBox` donde se produciría la operación de colocar también se determina durante el `DragOver` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1422">The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event.</span></span> <span data-ttu-id="c1553-1423">Si los datos que se va a quitar no están un `String`, el <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> está establecido en `None` en <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1423">If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=nameWithType> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>.</span></span> <span data-ttu-id="c1553-1424">Por último, se muestra el estado de la operación de colocar en el `DropLocationLabel` <xref:System.Windows.Forms.Label>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1424">Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.</span></span>  
  
 <span data-ttu-id="c1553-1425">Los datos que se va a quitar de la derecha `ListBox` viene determinada en el <xref:System.Windows.Forms.Control.DragDrop> controlador de eventos y el `String` valor se agrega en el lugar adecuado en el `ListBox`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1425">The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`.</span></span> <span data-ttu-id="c1553-1426">Si la operación de arrastre sobrepasa los límites del formulario y, después, se cancela la operación de arrastrar y colocar en el <xref:System.Windows.Forms.Control.QueryContinueDrag> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1426">If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.</span></span>  
  
 <span data-ttu-id="c1553-1427">Este fragmento de código muestra cómo utilizar el <xref:System.Windows.Forms.Control.GiveFeedback> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1427">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.GiveFeedback> event.</span></span> <span data-ttu-id="c1553-1428">Consulte la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1428">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#3)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#3)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event EventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : EventHandler " Usage="member this.GotFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1429">Se produce cuando el control recibe el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1429">Occurs when the control receives focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1430">Al cambiar el foco mediante el teclado (ficha, MAYÚS+TAB etc.), mediante una llamada a la <xref:System.Windows.Forms.Control.Select%2A> o <xref:System.Windows.Forms.Control.SelectNextControl%2A> métodos, o estableciendo la <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propiedad al formulario actual, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1430">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="c1553-1431">Al cambiar el foco mediante el mouse o mediante una llamada a la <xref:System.Windows.Forms.Control.Focus%2A> método, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1431">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="c1553-1432">Si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad está establecida en `false`, <xref:System.Windows.Forms.Control.Validating> y <xref:System.Windows.Forms.Control.Validated> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1432">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="c1553-1433">**Tenga en cuenta** el <xref:System.Windows.Forms.Control.GotFocus> y <xref:System.Windows.Forms.Control.LostFocus> son eventos de foco de bajo nivel que están vinculados a los mensajes de WM_KILLFOCUS y WM_SETFOCUS Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-1433">**Note** The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</span></span> <span data-ttu-id="c1553-1434">Normalmente, el <xref:System.Windows.Forms.Control.GotFocus> y <xref:System.Windows.Forms.Control.LostFocus> eventos solo se usan al actualizar <xref:System.Windows.Forms.UICues> o al escribir controles personalizados.</span><span class="sxs-lookup"><span data-stu-id="c1553-1434">Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls.</span></span> <span data-ttu-id="c1553-1435">En su lugar el <xref:System.Windows.Forms.Control.Enter> y <xref:System.Windows.Forms.Control.Leave> eventos deben utilizarse para todos los controles, excepto el <xref:System.Windows.Forms.Form> clase, que usa el <xref:System.Windows.Forms.Form.Activated> y <xref:System.Windows.Forms.Form.Deactivate> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1435">Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="c1553-1436">Para obtener más información sobre la <xref:System.Windows.Forms.Control.GotFocus> y <xref:System.Windows.Forms.Control.LostFocus> los eventos, vea el [WM_SETFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx) y [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) temas.</span><span class="sxs-lookup"><span data-stu-id="c1553-1436">For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646283\(v=vs.85\).aspx) and [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topics.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c1553-1437">No intente establecer el foco desde el <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, o <xref:System.Windows.Forms.Control.Validated> controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1437">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="c1553-1438">Si lo hace, puede provocar la aplicación o el sistema operativo deja de responder.</span><span class="sxs-lookup"><span data-stu-id="c1553-1438">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="c1553-1439">Para obtener más información, consulte el [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) tema.</span><span class="sxs-lookup"><span data-stu-id="c1553-1439">For more information, see the [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="c1553-1440">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1440">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1441">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1441">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-1442">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.GotFocus> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1442">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.GotFocus> event.</span></span> <span data-ttu-id="c1553-1443">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1443">This report helps you to learn when the event occurs and can assist you in debugging.</span></span>  
  
 <span data-ttu-id="c1553-1444">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1444">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-1445">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.GotFocus> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1445">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.GotFocus> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#47](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#47)]
 [!code-vb[System.Windows.Forms.EventExamples#47](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#47)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
        <altmember cref="E:System.Windows.Forms.Form.Activated" />
        <altmember cref="M:System.Windows.Forms.Form.Activate" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.Control.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-515)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1446">Obtiene el identificador de ventana al que está enlazado el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1446">Gets the window handle that the control is bound to.</span></span></summary>
        <value><span data-ttu-id="c1553-1447"><see cref="T:System.IntPtr" /> que contiene el identificador de ventana (<see langword="HWND" />) del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1447">An <see cref="T:System.IntPtr" /> that contains the window handle (<see langword="HWND" />) of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1448">El valor de la <xref:System.Windows.Forms.Control.Handle%2A> propiedad es un Windows `HWND`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1448">The value of the <xref:System.Windows.Forms.Control.Handle%2A> property is a Windows `HWND`.</span></span> <span data-ttu-id="c1553-1449">Si aún no se ha creado el identificador, que hacen referencia a esta propiedad se fuerza la creación de identificador.</span><span class="sxs-lookup"><span data-stu-id="c1553-1449">If the handle has not yet been created, referencing this property will force the handle to be created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1450">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.Control.Handle%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1450">The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=nameWithType> and the <xref:System.Windows.Forms.Control.Handle%2A> property.</span></span> <span data-ttu-id="c1553-1451">Para ejecutar el ejemplo, pegue el código siguiente en un formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1451">To run the example paste the following code in a form.</span></span> <span data-ttu-id="c1553-1452">Agregue dos botones denominados `Button1` y `Button2` al formulario y asegúrese de que todos los eventos están conectados a sus controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1452">Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlPaint1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlPaint1/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HandleCreated">
      <MemberSignature Language="C#" Value="public event EventHandler HandleCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandleCreated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HandleCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandleCreated;" />
      <MemberSignature Language="F#" Value="member this.HandleCreated : EventHandler " Usage="member this.HandleCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1453">Se produce cuando se crea un identificador para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1453">Occurs when a handle is created for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1454">Se crea un identificador cuando el <xref:System.Windows.Forms.Control> se muestra por primera vez.</span><span class="sxs-lookup"><span data-stu-id="c1553-1454">A handle is created when the <xref:System.Windows.Forms.Control> is displayed for the first time.</span></span> <span data-ttu-id="c1553-1455">Por ejemplo, si un <xref:System.Windows.Forms.Control> se crea que tiene <xref:System.Windows.Forms.Control.Visible%2A> establecido en `false`, el <xref:System.Windows.Forms.Control.HandleCreated> no se producirá el evento hasta <xref:System.Windows.Forms.Control.Visible%2A> está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1455">For example, if a <xref:System.Windows.Forms.Control> is created that has <xref:System.Windows.Forms.Control.Visible%2A> set to `false`, the <xref:System.Windows.Forms.Control.HandleCreated> event will not be raised until <xref:System.Windows.Forms.Control.Visible%2A> is set to `true`.</span></span>  
  
 <span data-ttu-id="c1553-1456">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1456">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1457">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1457">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-1458">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.HandleCreated> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1458">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleCreated> event.</span></span> <span data-ttu-id="c1553-1459">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1459">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-1460">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1460">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-1461">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1461">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-1462">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.HandleCreated> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1462">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleCreated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#37](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#37)]
 [!code-vb[System.Windows.Forms.EventExamples#37](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#37)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HandleDestroyed">
      <MemberSignature Language="C#" Value="public event EventHandler HandleDestroyed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler HandleDestroyed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HandleDestroyed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HandleDestroyed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ HandleDestroyed;" />
      <MemberSignature Language="F#" Value="member this.HandleDestroyed : EventHandler " Usage="member this.HandleDestroyed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1463">Se produce cuando el identificador del control está en proceso de eliminación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1463">Occurs when the control's handle is in the process of being destroyed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1464">Durante la <xref:System.Windows.Forms.Control.HandleDestroyed> eventos, el control sigue siendo un control de Windows válido y el <xref:System.Windows.Forms.Control.Handle%2A> puede crearse mediante una llamada a la <xref:System.Windows.Forms.Control.RecreateHandle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1464">During the <xref:System.Windows.Forms.Control.HandleDestroyed> event, the control is still a valid Windows control and the <xref:System.Windows.Forms.Control.Handle%2A> can be recreated by calling the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 <span data-ttu-id="c1553-1465">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1465">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1466">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1466">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-1467">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.HandleDestroyed> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1467">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.HandleDestroyed> event.</span></span> <span data-ttu-id="c1553-1468">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1468">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-1469">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1469">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-1470">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1470">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-1471">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.HandleDestroyed> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1471">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.HandleDestroyed> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#38](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#38)]
 [!code-vb[System.Windows.Forms.EventExamples#38](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#38)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Windows.Forms.Control.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1472">Obtiene un valor que indica si el control contiene uno o más controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1472">Gets a value indicating whether the control contains one or more child controls.</span></span></summary>
        <value><span data-ttu-id="c1553-1473"><see langword="true" /> si el control contiene uno o más controles secundarios; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1473"><see langword="true" /> if the control contains one or more child controls; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1474">Si el <xref:System.Windows.Forms.Control.Controls%2A> colección tiene un <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> mayor que cero, el <xref:System.Windows.Forms.Control.HasChildren%2A> propiedad devolverá `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1474">If the <xref:System.Windows.Forms.Control.Controls%2A> collection has a <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> greater than zero, the <xref:System.Windows.Forms.Control.HasChildren%2A> property will return `true`.</span></span> <span data-ttu-id="c1553-1475">Obtener acceso a la <xref:System.Windows.Forms.Control.HasChildren%2A> propiedad no fuerza la creación de un <xref:System.Windows.Forms.Control.ControlCollection> si el control no tiene elementos secundarios, por lo que hace referencia a esta propiedad puede proporcionar una mejora del rendimiento al recorrer un árbol de controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1475">Accessing the <xref:System.Windows.Forms.Control.HasChildren%2A> property does not force the creation of a <xref:System.Windows.Forms.Control.ControlCollection> if the control has no children, so referencing this property can provide a performance benefit when walking a tree of controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1476">El siguiente ejemplo de código establece la <xref:System.Windows.Forms.Control.BackColor%2A> y <xref:System.Windows.Forms.Control.ForeColor%2A> de los controles a los colores del sistema de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1476">The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors.</span></span> <span data-ttu-id="c1553-1477">El código de forma recursiva llama a sí mismo si el control tiene todos los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1477">The code recursively calls itself if the control has any child controls.</span></span> <span data-ttu-id="c1553-1478">Este ejemplo de código requiere que haya un <xref:System.Windows.Forms.Form> con control de al menos un elemento secundario; sin embargo, un contenedor secundario controlar, como un <xref:System.Windows.Forms.Panel> o <xref:System.Windows.Forms.GroupBox>, con su propio elemento secundario controles mejor demostraría la recursividad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1478">This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#1)]
 [!code-vb[Windows.Forms.Control Properties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Forms.Control.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1479">Obtiene o establece el alto del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1479">Gets or sets the height of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-1480">Alto del control, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1480">The height of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1481">Los cambios realizados en el <xref:System.Windows.Forms.Control.Height%2A> y <xref:System.Windows.Forms.Control.Top%2A> causa de los valores de propiedad el <xref:System.Windows.Forms.Control.Bottom%2A> valor de propiedad del control que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1481">Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1482">El alto mínimo del control derivado <xref:System.Windows.Forms.Splitter> es de un píxel.</span><span class="sxs-lookup"><span data-stu-id="c1553-1482">The minimum height for the derived control <xref:System.Windows.Forms.Splitter> is one pixel.</span></span> <span data-ttu-id="c1553-1483">El alto predeterminado para el <xref:System.Windows.Forms.Splitter> control es tres píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1483">The default height for the <xref:System.Windows.Forms.Splitter> control is three pixels.</span></span> <span data-ttu-id="c1553-1484">Si se establece el alto de la <xref:System.Windows.Forms.Splitter> el control a un valor menor que uno restablecerá el valor de propiedad en el alto predeterminado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1484">Setting the height of the <xref:System.Windows.Forms.Splitter> control to a value less than one will reset the property value to the default height.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1485">El ejemplo de código siguiente crea tres <xref:System.Windows.Forms.Button> controles de formularios y establece su tamaño y la ubicación mediante el uso de las diversas propiedades relacionadas con la ubicación y tamaño.</span><span class="sxs-lookup"><span data-stu-id="c1553-1485">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="c1553-1486">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que tiene un ancho y alto de al menos 300 píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1486">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="P:System.Windows.Forms.Control.Width" />
        <altmember cref="P:System.Drawing.Size.Height" />
      </Docs>
    </Member>
    <Member MemberName="HelpRequested">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.HelpEventHandler HelpRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.HelpEventHandler HelpRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.HelpRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event HelpRequested As HelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::HelpEventHandler ^ HelpRequested;" />
      <MemberSignature Language="F#" Value="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " Usage="member this.HelpRequested : System.Windows.Forms.HelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1487">Se produce cuando el usuario solicita ayuda para un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1487">Occurs when the user requests help for a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1488">El <xref:System.Windows.Forms.Control.HelpRequested> evento normalmente se produce cuando el usuario presiona la tecla F1 se hace clic en un botón de ayuda contextual asociado o la tecla.</span><span class="sxs-lookup"><span data-stu-id="c1553-1488">The <xref:System.Windows.Forms.Control.HelpRequested> event is commonly raised when the user presses the F1 key or an associated context-sensitive help button is clicked.</span></span>  
  
 <span data-ttu-id="c1553-1489">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1489">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1490">En el ejemplo de código siguiente se muestra cómo tratar el <xref:System.Windows.Forms.Control.HelpRequested> eventos para mostrar el contenido de ayuda personalizado en un formulario que contiene cuatro campos de dirección.</span><span class="sxs-lookup"><span data-stu-id="c1553-1490">The following code example demonstrates handling the <xref:System.Windows.Forms.Control.HelpRequested> event to display custom Help content on a form containing four address fields.</span></span> <span data-ttu-id="c1553-1491">El <xref:System.Windows.Forms.Control.HelpRequested> se provoca el evento presionando la tecla F1 con el foco en un campo de dirección o el mediante el botón de ayuda contextual y haga clic en el cursor de ayuda sobre un campo de dirección.</span><span class="sxs-lookup"><span data-stu-id="c1553-1491">The <xref:System.Windows.Forms.Control.HelpRequested> event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field.</span></span> <span data-ttu-id="c1553-1492">El <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> propiedad está establecida en true para indicar que el `HelpRequested` controla el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1492">The <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> property is set to true to indicate that the `HelpRequested` event is handled.</span></span> <span data-ttu-id="c1553-1493">El ejemplo también se muestra cómo almacenar el texto de ayuda en la <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1493">The example also demonstrates storing the Help text in the <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CPP/helpevent.cpp#1)]
 [!code-csharp[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/CS/helpevent.cs#1)]
 [!code-vb[System.Windows.Forms.HelpEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.HelpEventHandler/VB/helpevent.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
        <altmember cref="T:System.Windows.Forms.HelpProvider" />
        <altmember cref="T:System.Windows.Forms.Help" />
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="control.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-1494">Oculta el control al usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1494">Conceals the control from the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1495">Ocultar el control es equivalente a establecer el <xref:System.Windows.Forms.Control.Visible%2A> propiedad `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1495">Hiding the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `false`.</span></span> <span data-ttu-id="c1553-1496">Después de la <xref:System.Windows.Forms.Control.Hide%2A> se invoca el <xref:System.Windows.Forms.Control.Visible%2A> propiedad devuelve un valor de `false` hasta que el <xref:System.Windows.Forms.Control.Show%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1496">After the <xref:System.Windows.Forms.Control.Hide%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `false` until the <xref:System.Windows.Forms.Control.Show%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1497">El siguiente ejemplo de código oculta un botón si se presiona la tecla CTRL cuando se hace clic en el botón.</span><span class="sxs-lookup"><span data-stu-id="c1553-1497">The following code example hides a button if the CTRL key is pressed when the button is clicked.</span></span> <span data-ttu-id="c1553-1498">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Button> denominado `button1` en un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1498">This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]
 [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Show" />
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImeMode ImeMode { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeMode : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Control.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1499">Obtiene o establece el modo de Editor de métodos de entrada (IME) del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1499">Gets or sets the Input Method Editor (IME) mode of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-1500">Uno de los valores de <see cref="T:System.Windows.Forms.ImeMode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1500">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span></span> <span data-ttu-id="c1553-1501">De manera predeterminada, es <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1501">The default is <see cref="F:System.Windows.Forms.ImeMode.Inherit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1502">Un IME es un programa que permite a los usuarios escribir caracteres complejos y símbolos, como los caracteres Kanji del japonés, usar un teclado estándar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1502">An IME is a program that enables users to enter complex characters and symbols, such as Japanese Kanji characters, using a standard keyboard.</span></span> <span data-ttu-id="c1553-1503">El <xref:System.Windows.Forms.Control.ImeMode%2A> propiedad se establece normalmente en <xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType> para un <xref:System.Windows.Forms.TextBox> control que está pensado para que escriba sólo valores numéricos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1503">The <xref:System.Windows.Forms.Control.ImeMode%2A> property is typically set to <xref:System.Windows.Forms.ImeMode.Off?displayProperty=nameWithType> for a <xref:System.Windows.Forms.TextBox> control that is intended to only enter numeric values.</span></span> <span data-ttu-id="c1553-1504">El <xref:System.Windows.Forms.Control.ImeMode%2A> el valor de propiedad se establece en <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> para el <xref:System.Windows.Forms.Form> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1504">The <xref:System.Windows.Forms.Control.ImeMode%2A> property value is set to <xref:System.Windows.Forms.ImeMode.NoControl?displayProperty=nameWithType> for the <xref:System.Windows.Forms.Form> class.</span></span>  
  
 <span data-ttu-id="c1553-1505">La mayoría de las clases que directamente no admite editores de métodos de entrada o permitir la entrada directa de un IME, establecerá el valor de esta propiedad en <xref:System.Windows.Forms.ImeMode.NoControl>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1505">Most classes that do not directly support Input Method Editors, or allow direct input from an IME, will set the value of this property to <xref:System.Windows.Forms.ImeMode.NoControl>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1553-1506">El usuario puede cambiar de forma interactiva el <xref:System.Windows.Forms.Control.ImeMode%2A> a menos que se ha establecido mediante programación en <xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1506">The user can interactively change the <xref:System.Windows.Forms.Control.ImeMode%2A> unless it has been programmatically set to <xref:System.Windows.Forms.ImeMode.Disable?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1553-1507">En este caso, el usuario no podrá usar el IME.</span><span class="sxs-lookup"><span data-stu-id="c1553-1507">In this case, the user will not be able to use the IME.</span></span>  
>   
>  <span data-ttu-id="c1553-1508">El <xref:System.Windows.Forms.Control.ImeMode%2A> propiedad se omite en Windows 8 cuando el modo de entrada global está en vigor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1508">The <xref:System.Windows.Forms.Control.ImeMode%2A> property is ignored on Windows 8 when the global input mode is in effect.</span></span> <span data-ttu-id="c1553-1509">Para obtener más información, consulte [conmutador texto entrada cambió de cada subproceso a cada usuario](https://go.microsoft.com/fwlink/?LinkID=256509).</span><span class="sxs-lookup"><span data-stu-id="c1553-1509">For more info, see [Switch Text Input Changed from Per-Thread to Per-User](https://go.microsoft.com/fwlink/?LinkID=256509).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c1553-1510">El valor asignado no es uno de los <see cref="T:System.Windows.Forms.ImeMode" /> valores de enumeración.</span><span class="sxs-lookup"><span data-stu-id="c1553-1510">The assigned value is not one of the <see cref="T:System.Windows.Forms.ImeMode" /> enumeration values.</span></span></exception>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.Control.DefaultImeMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeBase">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.ImeMode ImeModeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeModeBase" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ImeModeBase" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Property ImeModeBase As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode ImeModeBase { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeModeBase : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.Control.ImeModeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1511">Obtiene o establece el modo IME de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1511">Gets or sets the IME mode of a control.</span></span></summary>
        <value><span data-ttu-id="c1553-1512">Modo IME del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1512">The IME mode of the control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ImeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ImeModeChanged : EventHandler " Usage="member this.ImeModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1513">Se produce cuando ha cambiado la propiedad <see cref="P:System.Windows.Forms.Control.ImeMode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1513">Occurs when the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1514">Este evento se desencadena si el <xref:System.Windows.Forms.Control.ImeMode%2A> se cambia la propiedad mediante programación o a través de la interacción.</span><span class="sxs-lookup"><span data-stu-id="c1553-1514">This event is raised if the <xref:System.Windows.Forms.Control.ImeMode%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="c1553-1515">Los controles que no admiten administradores del método de entrada, nunca producen este evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1515">Controls that do not support Input Method Managers will never raise this event.</span></span>  
  
 <span data-ttu-id="c1553-1516">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1516">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1517">El ejemplo de código siguiente es un controlador de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1517">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-1518">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre *PropertyName* `Changed` que se genera cuando correspondiente *PropertyName* cambia el valor ( *PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-1518">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-1519">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda.</span><span class="sxs-lookup"><span data-stu-id="c1553-1519">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="c1553-1520">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1520">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-1521">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1521">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="protected virtual void InitLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InitLayout" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitLayout ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitLayout();" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : unit -&gt; unit&#xA;override this.InitLayout : unit -&gt; unit" Usage="control.InitLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-1522">Se llama a este método cuando el control se ha agregado a otro contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1522">Called after the control has been added to another container.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1523">El <xref:System.Windows.Forms.Control.InitLayout%2A> se llama al método inmediatamente después de agregar un control a un contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1523">The <xref:System.Windows.Forms.Control.InitLayout%2A> method is called immediately after adding a control to a container.</span></span> <span data-ttu-id="c1553-1524">El <xref:System.Windows.Forms.Control.InitLayout%2A> método permite a un control inicializar el estado de diseño en función de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1524">The <xref:System.Windows.Forms.Control.InitLayout%2A> method enables a control to initialize its layout state based on its container.</span></span> <span data-ttu-id="c1553-1525">Por ejemplo, normalmente se aplicaría delimitar y acoplar en el control en el <xref:System.Windows.Forms.Control.InitLayout%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1525">For example, you would typically apply anchoring and docking to the control in the <xref:System.Windows.Forms.Control.InitLayout%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-1526">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.InitLayout" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.Control.InitLayout" /> método para que el control se muestre correctamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1526">When overriding <see cref="M:System.Windows.Forms.Control.InitLayout" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.InitLayout" /> method so that the control is displayed correctly.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Anchor" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-1527">Invalida una región específica del control y hace que se envíe un mensaje de dibujo al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1527">Invalidates a specific region of the control and causes a paint message to be sent to the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="control.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-1528">Invalida toda la superficie del control y hace que se vuelva a dibujar el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1528">Invalidates the entire surface of the control and causes the control to be redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1529">Una llamada a la <xref:System.Windows.Forms.Control.Invalidate%2A> método no fuerza una operación de dibujo sincrónica; para forzar una operación de dibujo sincrónica, llame a la <xref:System.Windows.Forms.Control.Update%2A> método después de llamar a la <xref:System.Windows.Forms.Control.Invalidate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1529">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="c1553-1530">Cuando este método se llama sin parámetros, toda el área cliente se agrega a la región de actualización.</span><span class="sxs-lookup"><span data-stu-id="c1553-1530">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1531">Habilita de ejemplo de código siguiente se quita al usuario arrastrar una imagen o un archivo de imagen del formulario y se muestra en el punto.</span><span class="sxs-lookup"><span data-stu-id="c1553-1531">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="c1553-1532">El <xref:System.Windows.Forms.Control.OnPaint%2A> se invalida el método para volver a dibujar la imagen cada vez que se pinta el formulario; en caso contrario, la imagen sólo se conserva hasta la siguiente operación de dibujo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1532">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="c1553-1533">El <xref:System.Windows.Forms.Control.DragEnter> método de control de eventos determina el tipo de datos que se arrastran al formulario y proporciona la información apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1533">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="c1553-1534">El <xref:System.Windows.Forms.Control.DragDrop> método de control de eventos muestra la imagen en el formulario, si un <xref:System.Drawing.Image> pueden crearse a partir de los datos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1534">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="c1553-1535">Dado que el <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> los valores son las coordenadas de pantalla, el ejemplo se usa el <xref:System.Windows.Forms.Control.PointToClient%2A> método convertirlos a coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1535">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : bool -&gt; unit" Usage="control.Invalidate invalidateChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="invalidateChildren"><span data-ttu-id="c1553-1536">Es <see langword="true" /> para invalidar los controles secundarios del control; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1536"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1553-1537">Invalida una región específica del control y hace que se envíe un mensaje de dibujo al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1537">Invalidates a specific region of the control and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="c1553-1538">También puede invalidar los controles secundarios asignados al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1538">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1539">Una llamada a la <xref:System.Windows.Forms.Control.Invalidate%2A> método no fuerza una operación de dibujo sincrónica; para forzar una operación de dibujo sincrónica, llame a la <xref:System.Windows.Forms.Control.Update%2A> método después de llamar a la <xref:System.Windows.Forms.Control.Invalidate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1539">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="c1553-1540">Cuando este método se llama sin parámetros, toda el área cliente se agrega a la región de actualización.</span><span class="sxs-lookup"><span data-stu-id="c1553-1540">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (rc As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rc);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle -&gt; unit" Usage="control.Invalidate rc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rc"><span data-ttu-id="c1553-1541"><see cref="T:System.Drawing.Rectangle" /> que representa la región que se va a invalidar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1541">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate.</span></span></param>
        <summary><span data-ttu-id="c1553-1542">Invalida la región especificada del control (agrega esta región a la región de actualización del control, que es el área que volverá a pintarse en la siguiente operación de dibujo) y hace que se envíe un mensaje de dibujo al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1542">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1543">Una llamada a la <xref:System.Windows.Forms.Control.Invalidate%2A> método no fuerza una operación de dibujo sincrónica; para forzar una operación de dibujo sincrónica, llame a la <xref:System.Windows.Forms.Control.Update%2A> método después de llamar a la <xref:System.Windows.Forms.Control.Invalidate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1543">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="c1553-1544">Cuando este método se llama sin parámetros, toda el área cliente se agrega a la región de actualización.</span><span class="sxs-lookup"><span data-stu-id="c1553-1544">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region -&gt; unit" Usage="control.Invalidate region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="c1553-1545"><see cref="T:System.Drawing.Region" /> que se va a invalidar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1545">The <see cref="T:System.Drawing.Region" /> to invalidate.</span></span></param>
        <summary><span data-ttu-id="c1553-1546">Invalida la región especificada del control (agrega esta región a la región de actualización del control, que es el área que volverá a pintarse en la siguiente operación de dibujo) y hace que se envíe un mensaje de dibujo al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1546">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1547">Una llamada a la <xref:System.Windows.Forms.Control.Invalidate%2A> método no fuerza una operación de dibujo sincrónica; para forzar una operación de dibujo sincrónica, llame a la <xref:System.Windows.Forms.Control.Update%2A> método después de llamar a la <xref:System.Windows.Forms.Control.Invalidate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1547">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="c1553-1548">Cuando este método se llama sin parámetros, toda el área cliente se agrega a la región de actualización.</span><span class="sxs-lookup"><span data-stu-id="c1553-1548">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rc, bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rc, bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate (rc As Rectangle, invalidateChildren As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rc, bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Rectangle * bool -&gt; unit" Usage="control.Invalidate (rc, invalidateChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rc" Type="System.Drawing.Rectangle" />
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rc"><span data-ttu-id="c1553-1549"><see cref="T:System.Drawing.Rectangle" /> que representa la región que se va a invalidar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1549">A <see cref="T:System.Drawing.Rectangle" /> that represents the region to invalidate.</span></span></param>
        <param name="invalidateChildren"><span data-ttu-id="c1553-1550">Es <see langword="true" /> para invalidar los controles secundarios del control; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1550"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1553-1551">Invalida la región especificada del control (agrega esta región a la región de actualización del control, que es el área que volverá a pintarse en la siguiente operación de dibujo) y hace que se envíe un mensaje de dibujo al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1551">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="c1553-1552">También puede invalidar los controles secundarios asignados al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1552">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1553">Una llamada a la <xref:System.Windows.Forms.Control.Invalidate%2A> método no fuerza una operación de dibujo sincrónica; para forzar una operación de dibujo sincrónica, llame a la <xref:System.Windows.Forms.Control.Update%2A> método después de llamar a la <xref:System.Windows.Forms.Control.Invalidate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1553">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="c1553-1554">Cuando este método se llama sin parámetros, toda el área cliente se agrega a la región de actualización.</span><span class="sxs-lookup"><span data-stu-id="c1553-1554">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Region region, bool invalidateChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(class System.Drawing.Region region, bool invalidateChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Region ^ region, bool invalidateChildren);" />
      <MemberSignature Language="F#" Value="member this.Invalidate : System.Drawing.Region * bool -&gt; unit" Usage="control.Invalidate (region, invalidateChildren)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="invalidateChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="region"><span data-ttu-id="c1553-1555"><see cref="T:System.Drawing.Region" /> que se va a invalidar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1555">The <see cref="T:System.Drawing.Region" /> to invalidate.</span></span></param>
        <param name="invalidateChildren"><span data-ttu-id="c1553-1556">Es <see langword="true" /> para invalidar los controles secundarios del control; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1556"><see langword="true" /> to invalidate the control's child controls; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1553-1557">Invalida la región especificada del control (agrega esta región a la región de actualización del control, que es el área que volverá a pintarse en la siguiente operación de dibujo) y hace que se envíe un mensaje de dibujo al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1557">Invalidates the specified region of the control (adds it to the control's update region, which is the area that will be repainted at the next paint operation), and causes a paint message to be sent to the control.</span></span> <span data-ttu-id="c1553-1558">También puede invalidar los controles secundarios asignados al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1558">Optionally, invalidates the child controls assigned to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1559">Una llamada a la <xref:System.Windows.Forms.Control.Invalidate%2A> método no fuerza una operación de dibujo sincrónica; para forzar una operación de dibujo sincrónica, llame a la <xref:System.Windows.Forms.Control.Update%2A> método después de llamar a la <xref:System.Windows.Forms.Control.Invalidate%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1559">Calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method does not force a synchronous paint; to force a synchronous paint, call the <xref:System.Windows.Forms.Control.Update%2A> method after calling the <xref:System.Windows.Forms.Control.Invalidate%2A> method.</span></span> <span data-ttu-id="c1553-1560">Cuando este método se llama sin parámetros, toda el área cliente se agrega a la región de actualización.</span><span class="sxs-lookup"><span data-stu-id="c1553-1560">When this method is called with no parameters, the entire client area is added to the update region.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Refresh" />
        <altmember cref="M:System.Windows.Forms.Control.Update" />
      </Docs>
    </Member>
    <Member MemberName="Invalidated">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.InvalidateEventHandler Invalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.InvalidateEventHandler Invalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Invalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Invalidated As InvalidateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::InvalidateEventHandler ^ Invalidated;" />
      <MemberSignature Language="F#" Value="member this.Invalidated : System.Windows.Forms.InvalidateEventHandler " Usage="member this.Invalidated : System.Windows.Forms.InvalidateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.InvalidateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1561">Se produce cuando es necesario volver a dibujar un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1561">Occurs when a control's display requires redrawing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1562">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1562">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1563">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1563">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-1564">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.Invalidated> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1564">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.Invalidated> event.</span></span> <span data-ttu-id="c1553-1565">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1565">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-1566">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1566">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-1567">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1567">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-1568">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.Invalidated> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1568">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.Invalidated> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#40](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#40)]
 [!code-vb[System.Windows.Forms.EventExamples#40](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#40)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-1569">Ejecuta un delegado en el subproceso que posee el identificador de ventana subyacente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1569">Executes a delegate on the thread that owns the control's underlying window handle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Invoke(class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Invoke(Delegate ^ method);" />
      <MemberSignature Language="F#" Value="member this.Invoke : Delegate -&gt; obj" Usage="control.Invoke method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c1553-1570">Delegado que contiene un método al que se va a llamar en el contexto del subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1570">A delegate that contains a method to be called in the control's thread context.</span></span></param>
        <summary><span data-ttu-id="c1553-1571">Ejecuta el delegado especificado en el subproceso que posee el identificador de ventana subyacente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1571">Executes the specified delegate on the thread that owns the control's underlying window handle.</span></span></summary>
        <returns><span data-ttu-id="c1553-1572">Valor devuelto desde el delegado al que se ha invocado o <see langword="null" /> si el delegado no devuelve ningún valor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1572">The return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1573">Los delegados son similares a los punteros de función en los lenguajes C o C++.</span><span class="sxs-lookup"><span data-stu-id="c1553-1573">Delegates are similar to function pointers in C or C++ languages.</span></span> <span data-ttu-id="c1553-1574">Los delegados encapsular una referencia a un método dentro de un objeto de delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1574">Delegates encapsulate a reference to a method inside a delegate object.</span></span> <span data-ttu-id="c1553-1575">A continuación, se puede pasar el objeto de delegado al código que llama al método que se hace referencia y que se invoque el método puede ser desconocido en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1575">The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</span></span> <span data-ttu-id="c1553-1576">A diferencia de los punteros de función en C o C++, los delegados son orientada a objetos, seguridad de tipos y más seguro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1576">Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</span></span>  
  
 <span data-ttu-id="c1553-1577">El <xref:System.Windows.Forms.Control.Invoke%2A> búsquedas de los métodos de la cadena del control primario hasta que encuentra un control o formulario que tiene una ventana de controlan si el identificador de ventana subyacente del control actual aún no existe.</span><span class="sxs-lookup"><span data-stu-id="c1553-1577">The <xref:System.Windows.Forms.Control.Invoke%2A> method searches up the control's parent chain until it finds a control or form that has a window handle if the current control's underlying window handle does not exist yet.</span></span> <span data-ttu-id="c1553-1578">Si no se encuentra ningún identificador adecuado, el <xref:System.Windows.Forms.Control.Invoke%2A> método producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="c1553-1578">If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.Invoke%2A> method will throw an exception.</span></span> <span data-ttu-id="c1553-1579">Las excepciones que se producen durante la llamada se propagará de vuelta al llamador.</span><span class="sxs-lookup"><span data-stu-id="c1553-1579">Exceptions that are raised during the call will be propagated back to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1580">Además el <xref:System.Windows.Forms.Control.InvokeRequired%2A> propiedad, hay cuatro métodos en un control que son seguros para subprocesos: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, y <xref:System.Windows.Forms.Control.CreateGraphics%2A> si ya se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1580">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="c1553-1581">Una llamada a <xref:System.Windows.Forms.Control.CreateGraphics%2A> antes de que se ha creado el identificador del control en un subproceso en segundo plano puede provocar no válidas entre las llamadas de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1581">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="c1553-1582">Para todas las demás llamadas de método, debe usar uno de los métodos de invocación para calcular las referencias de la llamada al subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1582">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 <span data-ttu-id="c1553-1583">El delegado puede ser una instancia de <xref:System.EventHandler>, en cuyo caso el parámetro remitente contendrá este control y el parámetro de evento contendrá <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1583">The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1553-1584">El delegado también puede ser una instancia de <xref:System.Windows.Forms.MethodInvoker>, o cualquier otro delegado que toma una lista de parámetros void.</span><span class="sxs-lookup"><span data-stu-id="c1553-1584">The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list.</span></span> <span data-ttu-id="c1553-1585">Una llamada a un <xref:System.EventHandler> o <xref:System.Windows.Forms.MethodInvoker> delegado será más rápido que una llamada a otro tipo de delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1585">A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1586">Es posible que se produce una excepción si el subproceso que se va a procesar el mensaje ya no está activo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1586">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1587">El ejemplo de código siguiente muestra los controles que contienen a un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1587">The following code example shows controls that contain a delegate.</span></span> <span data-ttu-id="c1553-1588">El delegado encapsula un método que agrega elementos al cuadro de lista, y este método se ejecuta en el subproceso que posee el identificador subyacente del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1588">The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form.</span></span> <span data-ttu-id="c1553-1589">Cuando el usuario hace clic en el botón, `Invoke` se ejecuta el delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1589">When the user clicks on the button, `Invoke` runs the delegate.</span></span>  
  
 [!code-cpp[Control_Invoke2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke2/CPP/control_invoke2.cpp#1)]
 [!code-csharp[Control_Invoke2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke2/CS/control_invoke2.cs#1)]
 [!code-vb[Control_Invoke2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke2/VB/control_invoke2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MethodInvoker" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public object Invoke (Delegate method, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Invoke(class System.Delegate method, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Invoke (method As Delegate, ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Invoke(Delegate ^ method, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Invoke : Delegate * obj[] -&gt; obj&#xA;override this.Invoke : Delegate * obj[] -&gt; obj" Usage="control.Invoke (method, args)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISynchronizeInvoke.Invoke(System.Delegate,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Delegate" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netcore-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="c1553-1590">Delegado de un método que obtiene los parámetros del mismo número y tipo que los incluidos en el parámetro <paramref name="args" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1590">A delegate to a method that takes parameters of the same number and type that are contained in the <paramref name="args" /> parameter.</span></span></param>
        <param name="args"><span data-ttu-id="c1553-1591">Matriz de objetos cuyos valores se pasan como argumentos al método especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1591">An array of objects to pass as arguments to the specified method.</span></span> <span data-ttu-id="c1553-1592">Este parámetro puede ser <see langword="null" /> si el método no toma ningún argumento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1592">This parameter can be <see langword="null" /> if the method takes no arguments.</span></span></param>
        <summary><span data-ttu-id="c1553-1593">Ejecuta el delegado especificado en el subproceso que posee el identificador de la ventana subyacente del control, con la lista de argumentos especificada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1593">Executes the specified delegate, on the thread that owns the control's underlying window handle, with the specified list of arguments.</span></span></summary>
        <returns><span data-ttu-id="c1553-1594"><see cref="T:System.Object" /> que contiene el valor devuelto por el delegado al que se ha invocado, o <see langword="null" /> si el delegado no devuelve ningún valor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1594">An <see cref="T:System.Object" /> that contains the return value from the delegate being invoked, or <see langword="null" /> if the delegate has no return value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1595">Los delegados son similares a los punteros de función en los lenguajes C o C++.</span><span class="sxs-lookup"><span data-stu-id="c1553-1595">Delegates are similar to function pointers in C or C++ languages.</span></span> <span data-ttu-id="c1553-1596">Los delegados encapsular una referencia a un método dentro de un objeto de delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1596">Delegates encapsulate a reference to a method inside a delegate object.</span></span> <span data-ttu-id="c1553-1597">A continuación, se puede pasar el objeto de delegado al código que llama al método que se hace referencia y que se invoque el método puede ser desconocido en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1597">The delegate object can then be passed to code that calls the referenced method, and the method to be invoked can be unknown at compile time.</span></span> <span data-ttu-id="c1553-1598">A diferencia de los punteros de función en C o C++, los delegados son orientada a objetos, seguridad de tipos y más seguro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1598">Unlike function pointers in C or C++, delegates are object-oriented, type-safe, and more secure.</span></span>  
  
 <span data-ttu-id="c1553-1599">Si el identificador del control no existe aún, este método buscará la cadena del control primario hasta que encuentra un control o formulario que tiene un identificador de ventana.</span><span class="sxs-lookup"><span data-stu-id="c1553-1599">If the control's handle does not exist yet, this method searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="c1553-1600">Si no se encuentra ningún identificador apropiado, este método produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c1553-1600">If no appropriate handle can be found, this method throws an exception.</span></span> <span data-ttu-id="c1553-1601">Las excepciones que se producen durante la llamada se propagará de vuelta al llamador.</span><span class="sxs-lookup"><span data-stu-id="c1553-1601">Exceptions that are raised during the call will be propagated back to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1602">Además el <xref:System.Windows.Forms.Control.InvokeRequired%2A> propiedad, hay cuatro métodos en un control que son seguros para subprocesos: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, y <xref:System.Windows.Forms.Control.CreateGraphics%2A> si ya se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1602">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="c1553-1603">Una llamada a <xref:System.Windows.Forms.Control.CreateGraphics%2A> antes de que se ha creado el identificador del control en un subproceso en segundo plano puede provocar no válidas entre las llamadas de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1603">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="c1553-1604">Para todas las demás llamadas de método, debe usar uno de los métodos de invocación para calcular las referencias de la llamada al subproceso del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1604">For all other method calls, you should use one of the invoke methods to marshal the call to the control's thread.</span></span>  
  
 <span data-ttu-id="c1553-1605">El delegado puede ser una instancia de <xref:System.EventHandler>, en cuyo caso el parámetro remitente contendrá este control y el parámetro de evento contendrá <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1605">The delegate can be an instance of <xref:System.EventHandler>, in which case the sender parameter will contain this control, and the event parameter will contain <xref:System.EventArgs.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="c1553-1606">El delegado también puede ser una instancia de <xref:System.Windows.Forms.MethodInvoker>, o cualquier otro delegado que toma una lista de parámetros void.</span><span class="sxs-lookup"><span data-stu-id="c1553-1606">The delegate can also be an instance of <xref:System.Windows.Forms.MethodInvoker>, or any other delegate that takes a void parameter list.</span></span> <span data-ttu-id="c1553-1607">Una llamada a un <xref:System.EventHandler> o <xref:System.Windows.Forms.MethodInvoker> delegado será más rápido que una llamada a otro tipo de delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1607">A call to an <xref:System.EventHandler> or <xref:System.Windows.Forms.MethodInvoker> delegate will be faster than a call to another type of delegate.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1608">Es posible que se produce una excepción si el subproceso que se va a procesar el mensaje ya no está activo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1608">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1609">El ejemplo de código siguiente muestra los controles que contienen a un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1609">The following code example shows controls that contain a delegate.</span></span> <span data-ttu-id="c1553-1610">El delegado encapsula un método que agrega elementos al cuadro de lista, y este método se ejecuta en el subproceso que posee el identificador subyacente del formulario, utilizando los argumentos especificados.</span><span class="sxs-lookup"><span data-stu-id="c1553-1610">The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments.</span></span> <span data-ttu-id="c1553-1611">Cuando el usuario hace clic en el botón, `Invoke` se ejecuta el delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1611">When the user clicks on the button, `Invoke` runs the delegate.</span></span>  
  
 [!code-cpp[Control_Invoke1#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Invoke1/CPP/control_invoke1.cpp#1)]
 [!code-csharp[Control_Invoke1#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Invoke1/CS/control_invoke1.cs#1)]
 [!code-vb[Control_Invoke1#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Invoke1/VB/control_invoke1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MethodInvoker" />
        <altmember cref="P:System.Windows.Forms.Control.InvokeRequired" />
      </Docs>
    </Member>
    <Member MemberName="InvokeGotFocus">
      <MemberSignature Language="C#" Value="protected void InvokeGotFocus (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeGotFocus(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeGotFocus (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeGotFocus(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeGotFocus : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeGotFocus (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="c1553-1612"><see cref="T:System.Windows.Forms.Control" /> al que se va a asignar el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1612">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-1613">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1613">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-1614">Genera el evento <see cref="E:System.Windows.Forms.Control.GotFocus" /> para el control especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1614">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeLostFocus">
      <MemberSignature Language="C#" Value="protected void InvokeLostFocus (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeLostFocus(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeLostFocus (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeLostFocus(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeLostFocus : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeLostFocus (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="c1553-1615"><see cref="T:System.Windows.Forms.Control" /> al que se va a asignar el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1615">The <see cref="T:System.Windows.Forms.Control" /> to assign the event to.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-1616">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1616">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-1617">Genera el evento <see cref="E:System.Windows.Forms.Control.LostFocus" /> para el control especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1617">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOnClick">
      <MemberSignature Language="C#" Value="protected void InvokeOnClick (System.Windows.Forms.Control toInvoke, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeOnClick(class System.Windows.Forms.Control toInvoke, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeOnClick (toInvoke As Control, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeOnClick(System::Windows::Forms::Control ^ toInvoke, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokeOnClick : System.Windows.Forms.Control * EventArgs -&gt; unit" Usage="control.InvokeOnClick (toInvoke, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toInvoke" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="toInvoke"><span data-ttu-id="c1553-1618"><see cref="T:System.Windows.Forms.Control" /> al que se va a asignar el evento <see cref="E:System.Windows.Forms.Control.Click" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1618">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Click" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-1619">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1619">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-1620">Genera el evento <see cref="E:System.Windows.Forms.Control.Click" /> para el control especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1620">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokePaint">
      <MemberSignature Language="C#" Value="protected void InvokePaint (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokePaint(class System.Windows.Forms.Control c, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokePaint (c As Control, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokePaint(System::Windows::Forms::Control ^ c, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokePaint : System.Windows.Forms.Control * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.InvokePaint (c, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c1553-1621"><see cref="T:System.Windows.Forms.Control" /> al que se va a asignar el evento <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1621">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-1622">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1622">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-1623">Genera el evento <see cref="E:System.Windows.Forms.Control.Paint" /> para el control especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1623">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="InvokePaintBackground">
      <MemberSignature Language="C#" Value="protected void InvokePaintBackground (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokePaintBackground(class System.Windows.Forms.Control c, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokePaintBackground (c As Control, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokePaintBackground(System::Windows::Forms::Control ^ c, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.InvokePaintBackground : System.Windows.Forms.Control * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.InvokePaintBackground (c, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Windows.Forms.Control" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="c1553-1624"><see cref="T:System.Windows.Forms.Control" /> al que se va a asignar el evento <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1624">The <see cref="T:System.Windows.Forms.Control" /> to assign the <see cref="E:System.Windows.Forms.Control.Paint" /> event to.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-1625">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1625">An <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-1626">Genera el evento <see langword="PaintBackground" /> para el control especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1626">Raises the <see langword="PaintBackground" /> event for the specified control.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InvokeRequired">
      <MemberSignature Language="C#" Value="public bool InvokeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeRequired" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.InvokeRequired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InvokeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeRequired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.InvokeRequired : bool" Usage="System.Windows.Forms.Control.InvokeRequired" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.ISynchronizeInvoke.InvokeRequired</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1627">Obtiene un valor que indica si el llamador debe llamar a un método de invocación cuando realiza llamadas a métodos del control porque el llamador se encuentra en un subproceso distinto al del control donde se creó.</span><span class="sxs-lookup"><span data-stu-id="c1553-1627">Gets a value indicating whether the caller must call an invoke method when making method calls to the control because the caller is on a different thread than the one the control was created on.</span></span></summary>
        <value><span data-ttu-id="c1553-1628"><see langword="true" /> si <see cref="P:System.Windows.Forms.Control.Handle" /> del control se creó en un subproceso distinto al subproceso que realiza la llamada (lo que indica que debe realizar llamadas al control mediante un método de invocación); en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1628"><see langword="true" /> if the control's <see cref="P:System.Windows.Forms.Control.Handle" /> was created on a different thread than the calling thread (indicating that you must make calls to the control through an invoke method); otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1629">Los controles de Windows Forms están enlazados a un subproceso específico y no son seguros para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1629">Controls in Windows Forms are bound to a specific thread and are not thread safe.</span></span> <span data-ttu-id="c1553-1630">Por lo tanto, si se llama a un método de control desde un subproceso diferente, debe usar uno del control invocara métodos para serializar la llamada al subproceso adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1630">Therefore, if you are calling a control's method from a different thread, you must use one of the control's invoke methods to marshal the call to the proper thread.</span></span> <span data-ttu-id="c1553-1631">Esta propiedad puede utilizarse para determinar si debe llamarse a un método de invocación, que puede ser útil si no sabe qué subproceso posee un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1631">This property can be used to determine if you must call an invoke method, which can be useful if you do not know what thread owns a control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1632">Además el <xref:System.Windows.Forms.Control.InvokeRequired%2A> propiedad, hay cuatro métodos en un control que es seguro para subprocesos llamar a: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> y <xref:System.Windows.Forms.Control.CreateGraphics%2A> si ya se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1632">In addition to the <xref:System.Windows.Forms.Control.InvokeRequired%2A> property, there are four methods on a control that are thread safe to call: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A> and <xref:System.Windows.Forms.Control.CreateGraphics%2A> if the handle for the control has already been created.</span></span> <span data-ttu-id="c1553-1633">Una llamada a <xref:System.Windows.Forms.Control.CreateGraphics%2A> antes de que se ha creado el identificador del control en un subproceso en segundo plano puede provocar no válidas entre las llamadas de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1633">Calling <xref:System.Windows.Forms.Control.CreateGraphics%2A> before the control's handle has been created on a background thread can cause illegal cross thread calls.</span></span> <span data-ttu-id="c1553-1634">Todas las demás llamadas de método, debe usar uno de estos métodos de invocación cuando una llamada desde un subproceso diferente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1634">For all other method calls, you should use one of these invoke methods when calling from a different thread.</span></span>  
  
 <span data-ttu-id="c1553-1635">Si el identificador del control no existe todavía, <xref:System.Windows.Forms.Control.InvokeRequired%2A> búsquedas de seguridad de la cadena del control primario hasta que encuentra un control o formulario que tiene un identificador de ventana.</span><span class="sxs-lookup"><span data-stu-id="c1553-1635">If the control's handle does not yet exist, <xref:System.Windows.Forms.Control.InvokeRequired%2A> searches up the control's parent chain until it finds a control or form that does have a window handle.</span></span> <span data-ttu-id="c1553-1636">Si no se encuentra ningún identificador adecuado, el <xref:System.Windows.Forms.Control.InvokeRequired%2A> devuelve del método `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1636">If no appropriate handle can be found, the <xref:System.Windows.Forms.Control.InvokeRequired%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="c1553-1637">Esto significa que <xref:System.Windows.Forms.Control.InvokeRequired%2A> puede devolver `false` si <xref:System.Windows.Forms.Control.Invoke%2A> no es necesario (la llamada se produce en el mismo subproceso), o si se creó el control en un subproceso diferente, pero aún no se ha creado el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1637">This means that <xref:System.Windows.Forms.Control.InvokeRequired%2A> can return `false` if <xref:System.Windows.Forms.Control.Invoke%2A> is not required (the call occurs on the same thread), or if the control was created on a different thread but the control's handle has not yet been created.</span></span>  
  
 <span data-ttu-id="c1553-1638">En el caso donde el identificador del control ha no se han creado, debe no basta con llamar a propiedades, métodos o eventos en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1638">In the case where the control's handle has not yet been created, you should not simply call properties, methods, or events on the control.</span></span> <span data-ttu-id="c1553-1639">Esto puede provocar que el identificador del control que se crearán en el subproceso en segundo plano, aislar el control en un subproceso sin un bombeo de mensajes y hacer que la aplicación inestable.</span><span class="sxs-lookup"><span data-stu-id="c1553-1639">This might cause the control's handle to be created on the background thread, isolating the control on a thread without a message pump and making the application unstable.</span></span>  
  
 <span data-ttu-id="c1553-1640">Puede proteger con respecto a este caso, compruebe también el valor de <xref:System.Windows.Forms.Control.IsHandleCreated%2A> cuando <xref:System.Windows.Forms.Control.InvokeRequired%2A> devuelve `false` en un subproceso en segundo plano.</span><span class="sxs-lookup"><span data-stu-id="c1553-1640">You can protect against this case by also checking the value of <xref:System.Windows.Forms.Control.IsHandleCreated%2A> when <xref:System.Windows.Forms.Control.InvokeRequired%2A> returns `false` on a background thread.</span></span> <span data-ttu-id="c1553-1641">Si aún no se ha creado el identificador de control, debe esperar hasta que se ha creado antes de llamar a <xref:System.Windows.Forms.Control.Invoke%2A> o <xref:System.Windows.Forms.Control.BeginInvoke%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1641">If the control handle has not yet been created, you must wait until it has been created before calling <xref:System.Windows.Forms.Control.Invoke%2A> or <xref:System.Windows.Forms.Control.BeginInvoke%2A>.</span></span> <span data-ttu-id="c1553-1642">Normalmente, esto solo sucede si se crea un subproceso en segundo plano en el constructor del formulario principal de la aplicación (como en `Application.Run(new MainForm())`, antes de que haya demostrado el formulario o `Application.Run` se ha llamado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1642">Typically, this happens only if a background thread is created in the constructor of the primary form for the application (as in `Application.Run(new MainForm())`, before the form has been shown or `Application.Run` has been called.</span></span>  
  
 <span data-ttu-id="c1553-1643">Una solución es esperar hasta que se ha creado el identificador del formulario antes de iniciar el subproceso en segundo plano.</span><span class="sxs-lookup"><span data-stu-id="c1553-1643">One solution is to wait until the form's handle has been created before starting the background thread.</span></span> <span data-ttu-id="c1553-1644">Ya sea forzar la creación de identificador mediante una llamada a la <xref:System.Windows.Forms.Control.Handle%2A> propiedad o espere a que el <xref:System.Windows.Forms.Form.Load> evento para iniciar el proceso en segundo plano.</span><span class="sxs-lookup"><span data-stu-id="c1553-1644">Either force handle creation by calling the <xref:System.Windows.Forms.Control.Handle%2A> property, or wait until the <xref:System.Windows.Forms.Form.Load> event to start the background process.</span></span>  
  
 <span data-ttu-id="c1553-1645">Una solución aún mejor es usar el `SynchronizationContext` devuelto por <xref:System.Threading.SynchronizationContext> en lugar de un control para la serialización entre subprocesos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1645">An even better solution is to use the `SynchronizationContext` returned by <xref:System.Threading.SynchronizationContext> rather than a control for cross-thread marshaling.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1646">Es posible que se produce una excepción si el subproceso que se va a procesar el mensaje ya no está activo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1646">An exception might be thrown if the thread that should process the message is no longer active.</span></span>  
  
 <span data-ttu-id="c1553-1647">Para obtener más información acerca de los controles de Windows Forms multiproceso, vea [Cómo: Usar un subproceso en segundo plano para buscar archivos](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md) y [Cómo: Realizar llamadas seguras para subprocesos a controles de formularios Windows Forms](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1647">For more information about multithreaded Windows Forms controls, see [How to: Use a Background Thread to Search for Files](~/docs/framework/winforms/controls/how-to-use-a-background-thread-to-search-for-files.md) and [How to: Make Thread-Safe Calls to Windows Forms Controls](~/docs/framework/winforms/controls/how-to-make-thread-safe-calls-to-windows-forms-controls.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Invoke(System.Delegate)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="IsAccessible">
      <MemberSignature Language="C#" Value="public bool IsAccessible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAccessible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsAccessible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAccessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAccessible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsAccessible : bool with get, set" Usage="System.Windows.Forms.Control.IsAccessible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1648">Obtiene o establece un valor que indica si el control es visible para las aplicaciones de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1648">Gets or sets a value indicating whether the control is visible to accessibility applications.</span></span></summary>
        <value><span data-ttu-id="c1553-1649"><see langword="true" /> si el control es visible para las aplicaciones de accesibilidad; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1649"><see langword="true" /> if the control is visible to accessibility applications; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Forms.Control.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1650">Obtiene un valor que indica si el control se ha eliminado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1650">Gets a value indicating whether the control has been disposed of.</span></span></summary>
        <value><span data-ttu-id="c1553-1651"><see langword="true" /> si control se ha eliminado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1651"><see langword="true" /> if the control has been disposed of; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1652">Cuando esta propiedad devuelve `true`, el control se elimina y ya no se puede hacer referencia como un control de Windows válido.</span><span class="sxs-lookup"><span data-stu-id="c1553-1652">When this property returns `true`, the control is disposed of and can no longer be referenced as a valid Windows control.</span></span> <span data-ttu-id="c1553-1653">Aunque se elimine la instancia de un control de, todavía se mantiene en memoria hasta que se quita de la memoria a través de la recolección de elementos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1653">Even though the instance of a control is disposed of, it is still maintained in memory until it is removed from memory through garbage collection.</span></span> <span data-ttu-id="c1553-1654">Cuando se elimina un control, no puede llamar a su <xref:System.Windows.Forms.Control.RecreateHandle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1654">When a control is disposed, you cannot call its <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)" />
        <altmember cref="T:System.GC" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
      </Docs>
    </Member>
    <Member MemberName="IsHandleCreated">
      <MemberSignature Language="C#" Value="public bool IsHandleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHandleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsHandleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHandleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHandleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHandleCreated : bool" Usage="System.Windows.Forms.Control.IsHandleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1655">Obtiene un valor que indica si el control tiene un identificador asociado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1655">Gets a value indicating whether the control has a handle associated with it.</span></span></summary>
        <value><span data-ttu-id="c1553-1656"><see langword="true" /> si se ha asignado un identificador al control; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1656"><see langword="true" /> if a handle has been assigned to the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1657">Use la <xref:System.Windows.Forms.Control.IsHandleCreated%2A> propiedad para determinar si <xref:System.Windows.Forms.Control.CreateHandle%2A> se ha llamado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1657">Use the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property to determine whether <xref:System.Windows.Forms.Control.CreateHandle%2A> has been called.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="IsInputChar">
      <MemberSignature Language="C#" Value="protected virtual bool IsInputChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsInputChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsInputChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsInputChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member IsInputChar : char -&gt; bool&#xA;override this.IsInputChar : char -&gt; bool" Usage="control.IsInputChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="c1553-1658">Carácter que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1658">The character to test.</span></span></param>
        <summary><span data-ttu-id="c1553-1659">Determina si un carácter es un carácter de entrada que el control reconoce.</span><span class="sxs-lookup"><span data-stu-id="c1553-1659">Determines if a character is an input character that the control recognizes.</span></span></summary>
        <returns><span data-ttu-id="c1553-1660"><see langword="true" /> si el carácter debe enviarse directamente al control sin preprocesamiento; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1660"><see langword="true" /> if the character should be sent directly to the control and not preprocessed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1661">Llame a la <xref:System.Windows.Forms.Control.IsInputChar%2A> método para determinar si el carácter especificado por el `charCode` parámetro es un carácter de entrada que solicita el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1661">Call the <xref:System.Windows.Forms.Control.IsInputChar%2A> method to determine whether the character specified by the `charCode` parameter is an input character that the control wants.</span></span> <span data-ttu-id="c1553-1662">Este método se llama durante el preprocesamiento de mensajes de ventana para determinar si el carácter de entrada especificado debe preprocesarse o enviarse directamente al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1662">This method is called during window message preprocessing to determine whether the specified input character should be preprocessed or sent directly to the control.</span></span> <span data-ttu-id="c1553-1663">Si <xref:System.Windows.Forms.Control.IsInputChar%2A> devuelve `true`, el carácter especificado se envía directamente al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1663">If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `true`, the specified character is sent directly to the control.</span></span> <span data-ttu-id="c1553-1664">Si <xref:System.Windows.Forms.Control.IsInputChar%2A> devuelve `false`, el carácter especificado se preprocesa y sólo se envía al control si no se consume en la fase de preprocesamiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1664">If <xref:System.Windows.Forms.Control.IsInputChar%2A> returns `false`, the specified character is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</span></span> <span data-ttu-id="c1553-1665">El preprocesamiento de un carácter incluye la comprobación de si el carácter es una tecla de acceso de otro control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1665">The preprocessing of a character includes checking whether the character is a mnemonic of another control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1666">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1666">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-1667">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1667">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
      </Docs>
    </Member>
    <Member MemberName="IsInputKey">
      <MemberSignature Language="C#" Value="protected virtual bool IsInputKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsInputKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsInputKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsInputKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member IsInputKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.IsInputKey : System.Windows.Forms.Keys -&gt; bool" Usage="control.IsInputKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="c1553-1668">Uno de los valores de <see cref="T:System.Windows.Forms.Keys" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1668">One of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-1669">Determina si la tecla especificada es una tecla de entrada normal o una tecla especial que requiere preprocesamiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1669">Determines whether the specified key is a regular input key or a special key that requires preprocessing.</span></span></summary>
        <returns><span data-ttu-id="c1553-1670"><see langword="true" /> si la tecla especificada es una tecla de entrada normal; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1670"><see langword="true" /> if the specified key is a regular input key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1671">Llame a la <xref:System.Windows.Forms.Control.IsInputKey%2A> método para determinar si la clave especificada por el `keyData` parámetro es una tecla de entrada que solicita el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1671">Call the <xref:System.Windows.Forms.Control.IsInputKey%2A> method to determine whether the key specified by the `keyData` parameter is an input key that the control wants.</span></span> <span data-ttu-id="c1553-1672">Este método se llama durante el preprocesamiento de mensajes de ventana para determinar si la clave de entrada especificada debe preprocesarse o enviarse directamente al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1672">This method is called during window message preprocessing to determine whether the specified input key should be preprocessed or sent directly to the control.</span></span> <span data-ttu-id="c1553-1673">Si <xref:System.Windows.Forms.Control.IsInputKey%2A> devuelve `true`, la clave especificada se envía directamente al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1673">If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `true`, the specified key is sent directly to the control.</span></span> <span data-ttu-id="c1553-1674">Si <xref:System.Windows.Forms.Control.IsInputKey%2A> devuelve `false`, la clave especificada se preprocesa y sólo se envía al control si no se consume en la fase de preprocesamiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1674">If <xref:System.Windows.Forms.Control.IsInputKey%2A> returns `false`, the specified key is preprocessed and only sent to the control if it is not consumed by the preprocessing phase.</span></span> <span data-ttu-id="c1553-1675">Las claves que previamente incluyen la ficha, si la devolución, ESC y las teclas de flecha arriba, flecha abajo, flecha izquierda y flecha derecha.</span><span class="sxs-lookup"><span data-stu-id="c1553-1675">Keys that are preprocessed include the TAB, RETURN, ESC, and the UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW keys.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1676">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Windows.Forms.Control.IsInputKey%2A> método para un <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1676">The following code example shows you how to override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method for a <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="c1553-1677">En este ejemplo, el `TabTextBox` clase controla la tecla TAB.</span><span class="sxs-lookup"><span data-stu-id="c1553-1677">In this example, the `TabTextBox` class handles the TAB key.</span></span> <span data-ttu-id="c1553-1678">Cuando el `TabTextBox` tiene el foco y el usuario presiona la tecla TAB se agregan cuatro espacios en el punto de inserción de texto, reemplazando el texto seleccionado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1678">When the `TabTextBox` has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text.</span></span> <span data-ttu-id="c1553-1679">De forma predeterminada, el <xref:System.Windows.Forms.TextBox> control administra la tecla TAB al mover el foco de entrada al siguiente control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1679">By default, the <xref:System.Windows.Forms.TextBox> control handles the TAB key by moving the input focus to the next control.</span></span> <span data-ttu-id="c1553-1680">En este caso, nunca alcanza el keypress el <xref:System.Windows.Forms.Control.OnKeyDown%2A> invalidación del método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1680">In this case, the keypress never reaches the <xref:System.Windows.Forms.Control.OnKeyDown%2A> method override.</span></span> <span data-ttu-id="c1553-1681">Para evitar este comportamiento predeterminado, el <xref:System.Windows.Forms.Control.IsInputKey%2A> método invalidar devuelve `true` cuando el usuario presiona la tecla TAB.</span><span class="sxs-lookup"><span data-stu-id="c1553-1681">To prevent this default behavior, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns `true` when the user presses the TAB key.</span></span> <span data-ttu-id="c1553-1682">Para todos los demás de pulsaciones de teclas, el <xref:System.Windows.Forms.Control.IsInputKey%2A> invalidación del método devuelve el resultado de llamar a la versión de la clase base del método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1682">For all other keypresses, the <xref:System.Windows.Forms.Control.IsInputKey%2A> method override returns the result of calling the base-class version of the method.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/cs/form1.cs#0)]
 [!code-vb[System.Windows.Forms.Control.IsInputKey#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.IsInputKey/vb/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1683">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1683">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-1684">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1684">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="T:System.Windows.Forms.Keys" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <altmember cref="P:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyLocked">
      <MemberSignature Language="C#" Value="public static bool IsKeyLocked (System.Windows.Forms.Keys keyVal);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyLocked(valuetype System.Windows.Forms.Keys keyVal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyLocked (keyVal As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyLocked(System::Windows::Forms::Keys keyVal);" />
      <MemberSignature Language="F#" Value="static member IsKeyLocked : System.Windows.Forms.Keys -&gt; bool" Usage="System.Windows.Forms.Control.IsKeyLocked keyVal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyVal" Type="System.Windows.Forms.Keys" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyVal"><span data-ttu-id="c1553-1685">El miembro BLOQ MAYÚS, BLOQ NUM o BLOQ DESPL de la enumeración <see cref="T:System.Windows.Forms.Keys" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1685">The CAPS LOCK, NUM LOCK, or SCROLL LOCK member of the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="c1553-1686">Determina si la tecla BLOQ MAYÚS, BLOQ NUM o BLOQ DESPL está en vigor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1686">Determines whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK key is in effect.</span></span></summary>
        <returns><span data-ttu-id="c1553-1687">Es <see langword="true" /> si la tecla o las teclas especificadas están en vigor; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1687"><see langword="true" /> if the specified key or keys are in effect; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1688">Use el <xref:System.Windows.Forms.Control.IsKeyLocked%2A> propiedad para determinar si las teclas BLOQ MAYÚS, BLOQ NUM o BLOQ DESPL están en, ya sea individualmente o en combinación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1688">Use the <xref:System.Windows.Forms.Control.IsKeyLocked%2A> property to determine whether the CAPS LOCK, NUM LOCK, or SCROLL LOCK keys are on, whether individually or in combination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1689">En el ejemplo de código siguiente se muestra un cuadro de mensaje que indica si la clave especificada (la tecla BLOQ en este caso) está en vigor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1689">The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.</span></span>  
  
 [!code-cpp[ControlIsKeyLocked#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlIsKeyLocked/CPP/controliskeylocked.cpp#1)]
 [!code-csharp[ControlIsKeyLocked#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlIsKeyLocked/CS/controliskeylocked.cs#1)]
 [!code-vb[ControlIsKeyLocked#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlIsKeyLocked/VB/controliskeylocked.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c1553-1690">El <paramref name="keyVal" /> parámetro hace referencia a una clave distinta de la tecla BLOQ MAYÚS, BLOQ NUM o Bloq Despl.</span><span class="sxs-lookup"><span data-stu-id="c1553-1690">The <paramref name="keyVal" /> parameter refers to a key other than the CAPS LOCK, NUM LOCK, or SCROLL LOCK key.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsMirrored">
      <MemberSignature Language="C#" Value="public bool IsMirrored { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMirrored" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.IsMirrored" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMirrored As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMirrored { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMirrored : bool" Usage="System.Windows.Forms.Control.IsMirrored" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1691">Obtiene un valor que indica si el control está reflejado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1691">Gets a value indicating whether the control is mirrored.</span></span></summary>
        <value><span data-ttu-id="c1553-1692"><see langword="true" /> si el control está reflejado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1692"><see langword="true" /> if the control is mirrored; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1693">Un control reflejado muestra tanto el diseño y el texto de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-1693">A mirrored control displays both layout and text from right to left.</span></span> <span data-ttu-id="c1553-1694">Para obtener más información, vea [Cómo: Crear reflejados de Windows Forms y controles](https://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1).</span><span class="sxs-lookup"><span data-stu-id="c1553-1694">For more information, see [How to: Create Mirrored Windows Forms and Controls](https://msdn.microsoft.com/library/7c5c4ecc-9bfb-4508-8383-753e306719b1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMnemonic">
      <MemberSignature Language="C#" Value="public static bool IsMnemonic (char charCode, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMnemonic(char charCode, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMnemonic (charCode As Char, text As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMnemonic(char charCode, System::String ^ text);" />
      <MemberSignature Language="F#" Value="static member IsMnemonic : char * string -&gt; bool" Usage="System.Windows.Forms.Control.IsMnemonic (charCode, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="c1553-1695">Carácter que se va a probar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1695">The character to test.</span></span></param>
        <param name="text"><span data-ttu-id="c1553-1696">Cadena en la que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1696">The string to search.</span></span></param>
        <summary><span data-ttu-id="c1553-1697">Determina si el carácter especificado es una tecla de acceso asignada al control en la cadena especificada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1697">Determines if the specified character is the mnemonic character assigned to the control in the specified string.</span></span></summary>
        <returns><span data-ttu-id="c1553-1698"><see langword="true" /> si el carácter <paramref name="charCode" /> es la tecla de acceso asignada al control; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1698"><see langword="true" /> if the <paramref name="charCode" /> character is the mnemonic character assigned to the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1699">El carácter de tecla de acceso es el carácter inmediatamente posterior a la primera instancia de "&" en un <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1699">The mnemonic character is the character immediately following the first instance of "&" in a <xref:System.String>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1700">En el ejemplo de código siguiente se muestra una extensión de la clase de botón que reemplaza el <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> método para presentar un comportamiento personalizado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1700">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="c1553-1701">El ejemplo también muestra el uso de la <xref:System.Windows.Forms.Control.CanSelect%2A> y <xref:System.Windows.Forms.Control.IsMnemonic%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c1553-1701">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="c1553-1702">Para ejecutar este ejemplo, pegue el código siguiente después de una clase de formulario, en el mismo archivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1702">To run this example paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="c1553-1703">Agregue un botón de tipo `MnemonicButton` al formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1703">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-1704">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-1704">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-1705">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1705">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1706">Se produce cuando se presiona una tecla mientras el control tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1706">Occurs when a key is pressed while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1707">Se producen eventos claves en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1707">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="c1553-1708">Para controlar los eventos de teclado sólo en el nivel de formulario y no permitir que otros controles recibir eventos de teclado, establezca el <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> propiedad en el formulario <xref:System.Windows.Forms.Control.KeyPress> método de control de eventos para `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1708">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span> <span data-ttu-id="c1553-1709">Determinadas teclas, como las teclas TAB, retorno, ESC y flecha se controlan automáticamente por los controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1709">Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</span></span> <span data-ttu-id="c1553-1710">Para que estas teclas provoquen el <xref:System.Windows.Forms.Control.KeyDown> eventos, debe invalidar el <xref:System.Windows.Forms.Control.IsInputKey%2A> método en cada control en el formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1710">To have these keys raise the <xref:System.Windows.Forms.Control.KeyDown> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form.</span></span> <span data-ttu-id="c1553-1711">El código de la invalidación de la <xref:System.Windows.Forms.Control.IsInputKey%2A> necesitaría determinar si se presiona una de las teclas especiales y devolver un valor de `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1711">The code for the override of the <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.</span></span> <span data-ttu-id="c1553-1712">En lugar de reemplazar el <xref:System.Windows.Forms.Control.IsInputKey%2A> método, puede controlar la <xref:System.Windows.Forms.Control.PreviewKeyDown> evento y establecer el <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1712">Instead of overriding the <xref:System.Windows.Forms.Control.IsInputKey%2A> method, you can handle the <xref:System.Windows.Forms.Control.PreviewKeyDown> event and set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`.</span></span> <span data-ttu-id="c1553-1713">Para obtener un ejemplo de código, vea el <xref:System.Windows.Forms.Control.PreviewKeyDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1713">For a code example, see the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.</span></span>  
  
 <span data-ttu-id="c1553-1714">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1714">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1715">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.KeyDown> evento para determinar el tipo de carácter especificado en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1715">The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
 
 
 <span data-ttu-id="c1553-1716">En el ejemplo de código siguiente se muestra el orden de elevar el <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp>, <xref:System.Windows.Forms.Control.KeyPress> eventos y cómo registrar los controladores de eventos en ellos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1716">The following code example demonstrates the order of raising the <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp>, <xref:System.Windows.Forms.Control.KeyPress> events, and how to register event handlers on them.</span></span>  
 
 [!code-csharp[Control.KeyDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form2.cs#1)]
 [!code-vb[Control.KeyDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/Form2.vb#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
        <altmember cref="T:System.Windows.Forms.KeyEventHandler" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyPressEventHandler KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyPressEventHandler KeyPress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As KeyPressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyPressEventHandler ^ KeyPress;" />
      <MemberSignature Language="F#" Value="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " Usage="member this.KeyPress : System.Windows.Forms.KeyPressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyPressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1717">Se produce cuando se presiona</span><span class="sxs-lookup"><span data-stu-id="c1553-1717">Occurs when a character.</span></span> <span data-ttu-id="c1553-1718">una tecla de espacio o retroceso mientras el control tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1718">space or backspace key is pressed while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1719">Se producen eventos claves en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1719">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="c1553-1720">El <xref:System.Windows.Forms.Control.KeyPress> claves no son de caracteres que no sea espacio y retroceso no provoca eventos; sin embargo, las teclas de carácter que no es activan el <xref:System.Windows.Forms.Control.KeyDown> y <xref:System.Windows.Forms.Control.KeyUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1720">The <xref:System.Windows.Forms.Control.KeyPress> event is not raised by non-character keys other than space and backspace; however, the non-character keys do raise the <xref:System.Windows.Forms.Control.KeyDown> and <xref:System.Windows.Forms.Control.KeyUp> events.</span></span>  
  
 <span data-ttu-id="c1553-1721">Use el <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> propiedad pulsaciones de teclas de ejemplo en tiempo de ejecución así como para consumir o modificar un subconjunto de pulsaciones de teclas comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-1721">Use the <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> property to sample keystrokes at run time and to consume or modify a subset of common keystrokes.</span></span>  
  
 <span data-ttu-id="c1553-1722">Para controlar los eventos de teclado sólo en el nivel de formulario y no permitir que otros controles recibir eventos de teclado, establezca el <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> propiedad en el formulario <xref:System.Windows.Forms.Control.KeyPress> método de control de eventos para `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1722">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span>  
  
 <span data-ttu-id="c1553-1723">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1723">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1724">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.KeyPress> eventos para evitar que los caracteres de escritura del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1724">The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
 
 
  <span data-ttu-id="c1553-1725">En el ejemplo de código siguiente se muestra el orden de las crecientes el <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp> y <xref:System.Windows.Forms.Control.KeyPress> eventos, también cómo registrar los controladores de eventos en ellos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1725">The following code example demonstrates the order of rising the <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp> and <xref:System.Windows.Forms.Control.KeyPress> events, also how to register event handlers on them.</span></span>  
 
 [!code-csharp[Control.KeyPress#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form2.cs#1)]
 [!code-vb[Control.KeyPress#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/Form2.vb#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
        <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Forms.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Forms.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1726">Se produce cuando se suelta una tecla mientras el control tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1726">Occurs when a key is released while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1727">Se producen eventos claves en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1727">Key events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.KeyDown>  
  
2.  <xref:System.Windows.Forms.Control.KeyPress>  
  
3.  <xref:System.Windows.Forms.Control.KeyUp>  
  
 <span data-ttu-id="c1553-1728">Para controlar los eventos de teclado sólo en el nivel de formulario y no permitir que otros controles recibir eventos de teclado, establezca el <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> propiedad en el formulario <xref:System.Windows.Forms.Control.KeyPress> método de control de eventos para `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1728">To handle keyboard events only at the form level and not enable other controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=nameWithType> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event-handling method to `true`.</span></span> <span data-ttu-id="c1553-1729">Determinadas teclas, como las teclas TAB, retorno, ESC y flecha se controlan automáticamente por los controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1729">Certain keys, such as the TAB, RETURN, ESC, and arrow keys are handled by controls automatically.</span></span> <span data-ttu-id="c1553-1730">Para que estas teclas provoquen el <xref:System.Windows.Forms.Control.KeyUp> eventos, debe invalidar el <xref:System.Windows.Forms.Control.IsInputKey%2A> método en cada control en el formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1730">To have these keys raise the <xref:System.Windows.Forms.Control.KeyUp> event, you must override the <xref:System.Windows.Forms.Control.IsInputKey%2A> method in each control on your form.</span></span> <span data-ttu-id="c1553-1731">El código de la invalidación de <xref:System.Windows.Forms.Control.IsInputKey%2A> necesitaría determinar si se presiona una de las teclas especiales y devolver un valor de `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1731">The code for the override of <xref:System.Windows.Forms.Control.IsInputKey%2A> would need to determine if one of the special keys is pressed and return a value of `true`.</span></span>  
  
 <span data-ttu-id="c1553-1732">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1732">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1733">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.KeyUp> evento con el <xref:System.Windows.Forms.Help> clase para mostrar la Ayuda de estilo emergente al usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1733">The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
 
 
  <span data-ttu-id="c1553-1734">En el ejemplo de código siguiente se muestra el orden de las crecientes el <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp> y <xref:System.Windows.Forms.Control.KeyPress> eventos, también cómo registrar los controladores de eventos en ellos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1734">The following code example demonstrates the order of rising the <xref:System.Windows.Forms.Control.KeyDown>, <xref:System.Windows.Forms.Control.KeyUp> and <xref:System.Windows.Forms.Control.KeyPress> events, also how to register event handlers on them.</span></span>  
 
 [!code-csharp[Control.KeyUp#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form2.cs#1)]
 [!code-vb[Control.KeyUp#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/Form2.vb#1)]
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.LayoutEventHandler Layout;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.LayoutEventHandler Layout" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Layout As LayoutEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::LayoutEventHandler ^ Layout;" />
      <MemberSignature Language="F#" Value="member this.Layout : System.Windows.Forms.LayoutEventHandler " Usage="member this.Layout : System.Windows.Forms.LayoutEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LayoutEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1735">Se produce cuando un control debe volver a colocar sus controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1735">Occurs when a control should reposition its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1736">El <xref:System.Windows.Forms.Control.Layout> evento tiene lugar cuando se agregan o se quitan, cuando los límites del control cambia, o cuando producen otros cambios que pueden afectar al diseño del control de los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1736">The <xref:System.Windows.Forms.Control.Layout> event occurs when child controls are added or removed, when the bounds of the control changes, and when other changes occur that can affect the layout of the control.</span></span> <span data-ttu-id="c1553-1737">El evento de diseño se puede suprimir con el <xref:System.Windows.Forms.Control.SuspendLayout%2A> y <xref:System.Windows.Forms.Control.ResumeLayout%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1737">The layout event can be suppressed using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span> <span data-ttu-id="c1553-1738">La suspensión del diseño le permite realizar varias acciones en un control sin tener que realizar un diseño para cada cambio.</span><span class="sxs-lookup"><span data-stu-id="c1553-1738">Suspending layout enables you to perform multiple actions on a control without having to perform a layout for each change.</span></span> <span data-ttu-id="c1553-1739">Por ejemplo, si el cambio de tamaño y mover un control, cada operación provocará un <xref:System.Windows.Forms.Control.Layout> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1739">For example, if you resize and move a control, each operation would raise a <xref:System.Windows.Forms.Control.Layout> event.</span></span>  
  
 <span data-ttu-id="c1553-1740">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1740">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1741">El siguiente código de ejemplo centros un <xref:System.Windows.Forms.Form> en la pantalla en la <xref:System.Windows.Forms.Control.Layout> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1741">The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event.</span></span> <span data-ttu-id="c1553-1742">Esto mantendrá el formulario centrado cuando el usuario lo modifica.</span><span class="sxs-lookup"><span data-stu-id="c1553-1742">This will keep the form centered as the user resizes it.</span></span> <span data-ttu-id="c1553-1743">En este ejemplo requiere que se haya creado un <xref:System.Windows.Forms.Form> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1743">This example requires that you have created a <xref:System.Windows.Forms.Form> control.</span></span>  
  
 [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]
 [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]
 [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
      </Docs>
    </Member>
    <Member MemberName="LayoutEngine">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Layout.LayoutEngine LayoutEngine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.LayoutEngine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LayoutEngine As LayoutEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Layout::LayoutEngine ^ LayoutEngine { System::Windows::Forms::Layout::LayoutEngine ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LayoutEngine : System.Windows.Forms.Layout.LayoutEngine" Usage="System.Windows.Forms.Control.LayoutEngine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Layout.LayoutEngine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1744">Obtiene una instancia almacenada en memoria caché del motor de diseño del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1744">Gets a cached instance of the control's layout engine.</span></span></summary>
        <value><span data-ttu-id="c1553-1745"><see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> para el contenido del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1745">The <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> for the control's contents.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1746">El <xref:System.Windows.Forms.Control.LayoutEngine%2A> propiedad obtiene el motor de diseño para los elementos secundarios del control, en lugar de para el propio control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1746">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> property gets the layout engine for the control's children rather than for the control itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Layout.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="Leave">
      <MemberSignature Language="C#" Value="public event EventHandler Leave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Leave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Leave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Leave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Leave;" />
      <MemberSignature Language="F#" Value="member this.Leave : EventHandler " Usage="member this.Leave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1747">Se produce cuando el foco de entrada deja el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1747">Occurs when the input focus leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1748">Al cambiar el foco mediante el teclado (ficha, MAYÚS+TAB etc.), mediante una llamada a la <xref:System.Windows.Forms.Control.Select%2A> o <xref:System.Windows.Forms.Control.SelectNextControl%2A> métodos, o estableciendo la <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propiedad al formulario actual, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1748">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="c1553-1749">Al cambiar el foco mediante el mouse o mediante una llamada a la <xref:System.Windows.Forms.Control.Focus%2A> método, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1749">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="c1553-1750">Si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad está establecida en `false`, <xref:System.Windows.Forms.Control.Validating> y <xref:System.Windows.Forms.Control.Validated> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1750">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1751">El <xref:System.Windows.Forms.Control.Enter> y <xref:System.Windows.Forms.Control.Leave> eventos se han suprimido por el <xref:System.Windows.Forms.Form> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1751">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class.</span></span> <span data-ttu-id="c1553-1752">Los eventos equivalentes en el <xref:System.Windows.Forms.Form> clase son el <xref:System.Windows.Forms.Form.Activated> y <xref:System.Windows.Forms.Form.Deactivate> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1752">The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="c1553-1753">El <xref:System.Windows.Forms.Control.Enter> y <xref:System.Windows.Forms.Control.Leave> eventos son jerárquicos y se realizará en cascada arriba y abajo de la cadena primaria hasta que se alcance el control adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1753">The <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached.</span></span> <span data-ttu-id="c1553-1754">Por ejemplo, suponga que tiene un <xref:System.Windows.Forms.Form> con dos <xref:System.Windows.Forms.GroupBox> controles y cada <xref:System.Windows.Forms.GroupBox> control tiene uno <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1754">For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control.</span></span> <span data-ttu-id="c1553-1755">Cuando se mueve el símbolo de intercalación de una <xref:System.Windows.Forms.TextBox> a otro, el <xref:System.Windows.Forms.Control.Leave> evento se desencadena para el <xref:System.Windows.Forms.TextBox> y <xref:System.Windows.Forms.GroupBox>y el <xref:System.Windows.Forms.Control.Enter> evento se desencadena para los demás <xref:System.Windows.Forms.GroupBox> y <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1755">When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c1553-1756">No intente establecer el foco desde el <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, o <xref:System.Windows.Forms.Control.Validated> controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1756">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="c1553-1757">Si lo hace, puede provocar la aplicación o el sistema operativo deja de responder.</span><span class="sxs-lookup"><span data-stu-id="c1553-1757">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="c1553-1758">Para obtener más información, consulte el [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) tema.</span><span class="sxs-lookup"><span data-stu-id="c1553-1758">For more information, see the [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="c1553-1759">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1759">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1760">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.Leave> eventos para restablecer un control a su estado anterior.</span><span class="sxs-lookup"><span data-stu-id="c1553-1760">The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Left { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Left : int with get, set" Usage="System.Windows.Forms.Control.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1761">Obtiene o establece la distancia, en píxeles, que existe entre el borde izquierdo del control y el borde izquierdo del área cliente de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1761">Gets or sets the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="c1553-1762"><see cref="T:System.Int32" /> que representa la distancia, en píxeles, que existe entre el borde izquierdo del control y el borde izquierdo del área cliente de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1762">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the left edge of the control and the left edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1763">El <xref:System.Windows.Forms.Control.Left%2A> valor de propiedad es equivalente a la <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> propiedad de la <xref:System.Windows.Forms.Control.Location%2A> valor de propiedad del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1763">The <xref:System.Windows.Forms.Control.Left%2A> property value is equivalent to the <xref:System.Drawing.Point.X%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.</span></span>  
  
 <span data-ttu-id="c1553-1764">Los cambios realizados en el <xref:System.Windows.Forms.Control.Width%2A> y <xref:System.Windows.Forms.Control.Left%2A> causa de los valores de propiedad el <xref:System.Windows.Forms.Control.Right%2A> valor de propiedad del control que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1764">Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1765">El ejemplo de código siguiente crea tres <xref:System.Windows.Forms.Button> controles de formularios y establece su tamaño y la ubicación mediante el uso de las diversas propiedades relacionadas con la ubicación y tamaño.</span><span class="sxs-lookup"><span data-stu-id="c1553-1765">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="c1553-1766">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que tiene un ancho y alto de al menos 300 píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1766">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Point.X" />
        <altmember cref="P:System.Windows.Forms.Control.Right" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Windows.Forms.Control.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1767">Obtiene o establece las coordenadas de la esquina superior izquierda del control en relación con la esquina superior izquierda de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1767">Gets or sets the coordinates of the upper-left corner of the control relative to the upper-left corner of its container.</span></span></summary>
        <value><span data-ttu-id="c1553-1768"><see cref="T:System.Drawing.Point" /> que representa la esquina superior izquierda del control en relación con la esquina superior izquierda de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1768">The <see cref="T:System.Drawing.Point" /> that represents the upper-left corner of the control relative to the upper-left corner of its container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1769">Dado que el <xref:System.Drawing.Point> clase es un tipo de valor (`Structure` en Visual Basic, `struct` en Visual C#), se devuelve por valor, lo que significa que el acceso a la propiedad devuelve una copia del punto superior izquierdo del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1769">Because the <xref:System.Drawing.Point> class is a value type (`Structure` in Visual Basic, `struct` in Visual C#), it is returned by value, meaning accessing the property returns a copy of the upper-left point of the control.</span></span> <span data-ttu-id="c1553-1770">Por lo tanto, ajustar el <xref:System.Drawing.Point.X%2A> o <xref:System.Drawing.Point.Y%2A> propiedades de la <xref:System.Drawing.Point> devuelto de esta propiedad no tendrá ningún efecto el <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, o <xref:System.Windows.Forms.Control.Bottom%2A> los valores de propiedad del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1770">So, adjusting the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from this property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the control.</span></span> <span data-ttu-id="c1553-1771">Para ajustar estas propiedades, establecer cada valor de propiedad individualmente, o establecer el <xref:System.Windows.Forms.Control.Location%2A> propiedad con un nuevo <xref:System.Drawing.Point>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1771">To adjust these properties set each property value individually, or set the <xref:System.Windows.Forms.Control.Location%2A> property with a new <xref:System.Drawing.Point>.</span></span>  
  
 <span data-ttu-id="c1553-1772">Si el <xref:System.Windows.Forms.Control> es un <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Control.Location%2A> valor de propiedad representa la esquina superior izquierda de la <xref:System.Windows.Forms.Form> en coordenadas de pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-1772">If the <xref:System.Windows.Forms.Control> is a <xref:System.Windows.Forms.Form>, the <xref:System.Windows.Forms.Control.Location%2A> property value represents the upper-left corner of the <xref:System.Windows.Forms.Form> in screen coordinates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1773">En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.GroupBox> y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-1773">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="c1553-1774">El ejemplo se crea un <xref:System.Windows.Forms.TextBox> y establece su <xref:System.Windows.Forms.Control.Location%2A> dentro del cuadro de grupo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1774">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="c1553-1775">A continuación, Establece la <xref:System.Windows.Forms.Control.Text%2A> propiedad del cuadro de grupo y lo acopla el grupo de cuadro a la parte superior del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1775">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="c1553-1776">Por último, deshabilita el cuadro de grupo estableciendo el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad `false`, lo que hace que todos los controles contenidos en el cuadro de grupo va a deshabilitar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1776">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Form" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1777">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Location" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1777">Occurs when the <see cref="P:System.Windows.Forms.Control.Location" /> property value has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1778">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Location%2A> se cambia la propiedad mediante programación o a través de la interacción.</span><span class="sxs-lookup"><span data-stu-id="c1553-1778">This event is raised if the <xref:System.Windows.Forms.Control.Location%2A> property is changed by either a programmatic modification or through interaction.</span></span>  
  
 <span data-ttu-id="c1553-1779">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1779">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1780">El siguiente código de ejemplo genera el <xref:System.Windows.Forms.Control.LocationChanged> eventos en un <xref:System.Windows.Forms.StatusStrip> cuando se cambia el tamaño del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1780">The following code example raises the <xref:System.Windows.Forms.Control.LocationChanged> event on a <xref:System.Windows.Forms.StatusStrip> when the form is resized.</span></span>  
  
 [!code-csharp[System.Windows.Forms.LocationChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.LocationChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LocationChanged/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="LogicalToDeviceUnits">
      <MemberSignature Language="C#" Value="public System.Drawing.Size LogicalToDeviceUnits (System.Drawing.Size value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Size LogicalToDeviceUnits(valuetype System.Drawing.Size value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalToDeviceUnits (value As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Size LogicalToDeviceUnits(System::Drawing::Size value);" />
      <MemberSignature Language="F#" Value="member this.LogicalToDeviceUnits : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.LogicalToDeviceUnits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c1553-1781">Tamaño que debe escalarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1781">The size to be scaled.</span></span></param>
        <summary><span data-ttu-id="c1553-1782">Convierte un formato de unidades lógicas a unidades de dispositivo escalándolo para el valor de PPP actual y redondeándolo al valor entero más próximo para la anchura y la altura.</span><span class="sxs-lookup"><span data-stu-id="c1553-1782">Transforms a size from logical to device units by scaling it for the current DPI and rounding down to the nearest integer value for width and height.</span></span></summary>
        <returns><span data-ttu-id="c1553-1783">Tamaño escalado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1783">The scaled size.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalToDeviceUnits">
      <MemberSignature Language="C#" Value="public int LogicalToDeviceUnits (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LogicalToDeviceUnits(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LogicalToDeviceUnits (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LogicalToDeviceUnits(int value);" />
      <MemberSignature Language="F#" Value="member this.LogicalToDeviceUnits : int -&gt; int" Usage="control.LogicalToDeviceUnits value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c1553-1784">Valor lógico que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="c1553-1784">The Logical value to convert.</span></span></param>
        <summary><span data-ttu-id="c1553-1785">Convierte un valor de PPP lógico a su valor de PPP DeviceUnit equivalente.</span><span class="sxs-lookup"><span data-stu-id="c1553-1785">Converts a Logical DPI value to its equivalent DeviceUnit DPI value.</span></span></summary>
        <returns><span data-ttu-id="c1553-1786">El valor DeviceUnit resultante.</span><span class="sxs-lookup"><span data-stu-id="c1553-1786">The resulting DeviceUnit value.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event EventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : EventHandler " Usage="member this.LostFocus : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1787">Se produce cuando el control pierde el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1787">Occurs when the control loses focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1788">Al cambiar el foco mediante el teclado (ficha, MAYÚS+TAB etc.), mediante una llamada a la <xref:System.Windows.Forms.Control.Select%2A> o <xref:System.Windows.Forms.Control.SelectNextControl%2A> métodos, o estableciendo la <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propiedad al formulario actual, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1788">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="c1553-1789">Al cambiar el foco mediante el mouse o mediante una llamada a la <xref:System.Windows.Forms.Control.Focus%2A> método, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-1789">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="c1553-1790">Si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad está establecida en `false`, <xref:System.Windows.Forms.Control.Validating> y <xref:System.Windows.Forms.Control.Validated> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1790">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="c1553-1791">Si el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.ComponentModel.CancelEventArgs> está establecido en `true` en el <xref:System.Windows.Forms.Control.Validating> delegado de eventos, todos los eventos que se producirían generalmente después el <xref:System.Windows.Forms.Control.Validating> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1791">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1792">El <xref:System.Windows.Forms.Control.GotFocus> y <xref:System.Windows.Forms.Control.LostFocus> son eventos de foco de bajo nivel que están vinculados a los mensajes de WM_KILLFOCUS y WM_SETFOCUS Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-1792">The <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages.</span></span> <span data-ttu-id="c1553-1793">Normalmente, el <xref:System.Windows.Forms.Control.GotFocus> y <xref:System.Windows.Forms.Control.LostFocus> eventos solo se usan al actualizar <xref:System.Windows.Forms.UICues> o al escribir controles personalizados.</span><span class="sxs-lookup"><span data-stu-id="c1553-1793">Typically, the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls.</span></span> <span data-ttu-id="c1553-1794">En su lugar el <xref:System.Windows.Forms.Control.Enter> y <xref:System.Windows.Forms.Control.Leave> eventos deben utilizarse para todos los controles, excepto el <xref:System.Windows.Forms.Form> clase, que usa el <xref:System.Windows.Forms.Form.Activated> y <xref:System.Windows.Forms.Form.Deactivate> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1794">Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events.</span></span> <span data-ttu-id="c1553-1795">Para obtener más información sobre la <xref:System.Windows.Forms.Control.GotFocus> y <xref:System.Windows.Forms.Control.LostFocus> los eventos, vea el [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) y [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) temas.</span><span class="sxs-lookup"><span data-stu-id="c1553-1795">For more information about the <xref:System.Windows.Forms.Control.GotFocus> and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) and [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topics.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c1553-1796">No intente establecer el foco desde el <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, o <xref:System.Windows.Forms.Control.Validated> controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1796">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="c1553-1797">Si lo hace, puede provocar la aplicación o el sistema operativo deja de responder.</span><span class="sxs-lookup"><span data-stu-id="c1553-1797">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="c1553-1798">Para obtener más información, consulte el [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) tema.</span><span class="sxs-lookup"><span data-stu-id="c1553-1798">For more information, see the [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms646282\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="c1553-1799">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1799">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1800">En el ejemplo de código siguiente se muestra cómo validar el texto de TextBox1.</span><span class="sxs-lookup"><span data-stu-id="c1553-1800">The following code example demonstrates validating the text for TextBox1.</span></span> <span data-ttu-id="c1553-1801">También muestra cómo tratar el <xref:System.Windows.Forms.Control.LostFocus> eventos estableciendo la <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType> propiedad en el texto de TextBox1.</span><span class="sxs-lookup"><span data-stu-id="c1553-1801">It also demonstrates handling the <xref:System.Windows.Forms.Control.LostFocus> event by setting the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=nameWithType> property to the text in TextBox1.</span></span> <span data-ttu-id="c1553-1802">El ejemplo de código usa el <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType> método para comprobar si hay un error antes de abrir el cuadro de diálogo de archivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1802">The code example used the <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=nameWithType> method to check for an error before opening the file dialog box.</span></span> <span data-ttu-id="c1553-1803">Para ejecutar este ejemplo, pegue el código siguiente en un formulario que contenga un <xref:System.Windows.Forms.TextBox> denominado `TextBox1`, un <xref:System.Windows.Forms.OpenFileDialog> denominado `OpenFileDialog1`, un <xref:System.Windows.Forms.Button> denominado `Button1`y un <xref:System.Windows.Forms.ErrorProvider> denominado `ErrorProvider1`.</span><span class="sxs-lookup"><span data-stu-id="c1553-1803">To run this example, paste the following code into a form containing a <xref:System.Windows.Forms.TextBox> named `TextBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, a <xref:System.Windows.Forms.Button> named `Button1`, and an <xref:System.Windows.Forms.ErrorProvider> named `ErrorProvider1`.</span></span> <span data-ttu-id="c1553-1804">Asegúrese de que todos los eventos están asociados con sus controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1804">Ensure all events are associated with their event handlers.</span></span>  
  
 [!code-cpp[System.Windows.Forms.FileDialog#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CPP/filedialogform.cpp#2)]
 [!code-csharp[System.Windows.Forms.FileDialog#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/CS/filedialogform.cs#2)]
 [!code-vb[System.Windows.Forms.FileDialog#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FileDialog/VB/filedialogform.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
        <altmember cref="E:System.Windows.Forms.Form.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Margin { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Control.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1805">Obtiene o establece el espacio entre controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1805">Gets or sets the space between controls.</span></span></summary>
        <value><span data-ttu-id="c1553-1806"><see cref="T:System.Windows.Forms.Padding" /> que representa el espacio entre los controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1806">A <see cref="T:System.Windows.Forms.Padding" /> representing the space between controls.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1807">Los valores predeterminados para los controles reciben <xref:System.Windows.Forms.Control.Margin%2A> que están bastante cerca de directrices de interfaz de usuario de Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-1807">Controls receive default values for <xref:System.Windows.Forms.Control.Margin%2A> that are reasonably close to Windows user interface guidelines.</span></span> <span data-ttu-id="c1553-1808">Pueden que algunos ajustes que sea necesarios para aplicaciones concretas.</span><span class="sxs-lookup"><span data-stu-id="c1553-1808">Some adjustments might still be necessary for particular applications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1809">Establecer el <xref:System.Windows.Forms.Control.Margin%2A> propiedad en un control acoplado no tiene ningún efecto en la distancia del control de los bordes de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-1809">Setting the <xref:System.Windows.Forms.Control.Margin%2A> property on a docked control has no effect on the distance of the control from the edges of its container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarginChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MarginChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MarginChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MarginChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarginChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MarginChanged;" />
      <MemberSignature Language="F#" Value="member this.MarginChanged : EventHandler " Usage="member this.MarginChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1810">Se produce cuando cambia el margen del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1810">Occurs when the control's margin changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1811">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1811">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1812">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1812">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-1813">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.MarginChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1813">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MarginChanged> event.</span></span> <span data-ttu-id="c1553-1814">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1814">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-1815">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1815">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-1816">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1816">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-1817">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.MarginChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1817">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MarginChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#21)]
 [!code-vb[System.Windows.Forms.EventExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MaximumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MaximumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MaximumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.MaximumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.AmbientValue(typeof(System.Drawing.Size), "0, 0")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1818">Obtiene o establece el tamaño que es el límite superior que <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> puede especificar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1818">Gets or sets the size that is the upper limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</span></span></summary>
        <value><span data-ttu-id="c1553-1819">Un par ordenado de tipo <see cref="T:System.Drawing.Size" /> que representa el ancho y el alto de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1819">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumSize">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Size MinimumSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MinimumSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MinimumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MinimumSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Size MinimumSize { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MinimumSize : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.MinimumSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1820">Obtiene o establece el tamaño que es el límite inferior que <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> puede especificar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1820">Gets or sets the size that is the lower limit that <see cref="M:System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)" /> can specify.</span></span></summary>
        <value><span data-ttu-id="c1553-1821">Un par ordenado de tipo <see cref="T:System.Drawing.Size" /> que representa el ancho y el alto de un rectángulo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1821">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModifierKeys">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.Keys ModifierKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.Keys ModifierKeys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ModifierKeys" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ModifierKeys As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::Keys ModifierKeys { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.ModifierKeys : System.Windows.Forms.Keys" Usage="System.Windows.Forms.Control.ModifierKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1822">Obtiene un valor que indica cuál de las teclas modificadoras (MAYÚS, CTRL y ALT) está presionada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1822">Gets a value indicating which of the modifier keys (SHIFT, CTRL, and ALT) is in a pressed state.</span></span></summary>
        <value><span data-ttu-id="c1553-1823">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.Keys" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1823">A bitwise combination of the <see cref="T:System.Windows.Forms.Keys" /> values.</span></span> <span data-ttu-id="c1553-1824">De manera predeterminada, es <see cref="F:System.Windows.Forms.Keys.None" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1824">The default is <see cref="F:System.Windows.Forms.Keys.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-1825">El siguiente ejemplo de código oculta un botón cuando se presiona la tecla CTRL mientras hace clic con el botón.</span><span class="sxs-lookup"><span data-stu-id="c1553-1825">The following code example hides a button when the CTRL key is pressed while the button is clicked.</span></span> <span data-ttu-id="c1553-1826">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Button> denominado `button1` en un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1826">This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members4#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#2)]
 [!code-vb[Windows.Forms.Control Members4#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Keys" />
      </Docs>
    </Member>
    <Member MemberName="MouseButtons">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.MouseButtons MouseButtons { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.MouseButtons MouseButtons" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MouseButtons" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MouseButtons As MouseButtons" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Forms::MouseButtons MouseButtons { System::Windows::Forms::MouseButtons get(); };" />
      <MemberSignature Language="F#" Value="member this.MouseButtons : System.Windows.Forms.MouseButtons" Usage="System.Windows.Forms.Control.MouseButtons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseButtons</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1827">Obtiene un valor que indica cuál de los botones del mouse está presionado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1827">Gets a value indicating which of the mouse buttons is in a pressed state.</span></span></summary>
        <value><span data-ttu-id="c1553-1828">Una combinación bit a bit de los valores de la enumeración <see cref="T:System.Windows.Forms.MouseButtons" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1828">A bitwise combination of the <see cref="T:System.Windows.Forms.MouseButtons" /> enumeration values.</span></span> <span data-ttu-id="c1553-1829">De manera predeterminada, es <see cref="F:System.Windows.Forms.MouseButtons.None" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-1829">The default is <see cref="F:System.Windows.Forms.MouseButtons.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-1830">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, y <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> miembros.</span><span class="sxs-lookup"><span data-stu-id="c1553-1830">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="c1553-1831">Para ejecutar el ejemplo, pegue el código siguiente en un formulario denominado Form1 que contiene varios controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-1831">To run the example, paste the following code in a form called Form1 containing several controls.</span></span> <span data-ttu-id="c1553-1832">Este ejemplo requiere que el <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, y <xref:System.Windows.Forms.Control.MouseUp> eventos están conectados a los controladores de eventos definidos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1832">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MouseButtons" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseCaptureChanged">
      <MemberSignature Language="C#" Value="public event EventHandler MouseCaptureChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseCaptureChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseCaptureChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseCaptureChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseCaptureChanged;" />
      <MemberSignature Language="F#" Value="member this.MouseCaptureChanged : EventHandler " Usage="member this.MouseCaptureChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1833">Aparece cuando el control pierde la captura del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1833">Occurs when the control loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1834">En casos poco frecuentes, es posible que deberá detectar entrada inesperada.</span><span class="sxs-lookup"><span data-stu-id="c1553-1834">In rare scenarios, you might need to detect unexpected input.</span></span> <span data-ttu-id="c1553-1835">Por ejemplo, considere los siguientes escenarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-1835">For example, consider the following scenarios.</span></span>  
  
-   <span data-ttu-id="c1553-1836">Durante una operación del mouse, el usuario abre el menú Inicio, presione la tecla de Windows o CTRL + ESC.</span><span class="sxs-lookup"><span data-stu-id="c1553-1836">During a mouse operation, the user opens the Start menu by pressing the Windows key or CTRL+ESC.</span></span>  
  
-   <span data-ttu-id="c1553-1837">Durante una operación del mouse, el usuario cambia a otro programa presionando ALT+TAB.</span><span class="sxs-lookup"><span data-stu-id="c1553-1837">During a mouse operation, the user switches to another program by pressing ALT+TAB.</span></span>  
  
-   <span data-ttu-id="c1553-1838">Durante una operación del mouse, otro programa muestra una ventana o un cuadro de mensaje que toma el foco fuera de la aplicación actual.</span><span class="sxs-lookup"><span data-stu-id="c1553-1838">During a mouse operation, another program displays a window or a message box that takes focus away from the current application.</span></span>  
  
 <span data-ttu-id="c1553-1839">Pueden incluir operaciones del mouse haciendo clic y mantenga el mouse en un formulario o un control, o realizar un mouse de la operación de arrastrar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1839">Mouse operations can include clicking and holding the mouse on a form or a control, or performing a mouse drag operation.</span></span> <span data-ttu-id="c1553-1840">Si tiene que detectar cuándo un formulario o un control pierde la captura del mouse para estos y escenarios inesperados relacionados, puede usar el <xref:System.Windows.Forms.Control.MouseCaptureChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1840">If you have to detect when a form or a control loses mouse capture for these and related unexpected scenarios, you can use the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1841">En el ejemplo de código siguiente se muestra el <xref:System.Windows.Forms.Control.MouseCaptureChanged> eventos para un <xref:System.Windows.Forms.Button> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1841">The following code example demonstrates the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event for a <xref:System.Windows.Forms.Button> control.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.MouseCaptureChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.mousecapturechanged/vb/form1.vb#1)]  
  
 <span data-ttu-id="c1553-1842">Para probar este ejemplo, ejecútelo en el depurador presionando F5.</span><span class="sxs-lookup"><span data-stu-id="c1553-1842">To test this example, run it in the debugger by pressing F5.</span></span> <span data-ttu-id="c1553-1843">Abra el **salida** ventana de Visual Studio para que puedan ver cuando se generan eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1843">Open the **Output** window in Visual Studio so that you can see when events are raised.</span></span> <span data-ttu-id="c1553-1844">Haga clic en el <xref:System.Windows.Forms.Button> y observe el siguiente resultado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1844">Click the <xref:System.Windows.Forms.Button> and notice the following output.</span></span>  
  
 `button1_MouseDown`  
  
 `button1_MouseUp`  
  
 `button1_MouseCaptureChanged`  
  
 <span data-ttu-id="c1553-1845">Ahora, haga clic y mantenga presionado el botón primario del mouse el <xref:System.Windows.Forms.Button> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1845">Now, click and hold the left mouse button on the <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="c1553-1846">Mientras sigue haciendo clic en el mouse, presione ALT + TAB para cambiar a otro programa.</span><span class="sxs-lookup"><span data-stu-id="c1553-1846">While still clicking the mouse, press ALT+TAB to switch to another program.</span></span> <span data-ttu-id="c1553-1847">Tenga en cuenta que el <xref:System.Windows.Forms.Control.MouseCaptureChanged> evento se produce lo que le permite controlar potencialmente este escenario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1847">Notice that the <xref:System.Windows.Forms.Control.MouseCaptureChanged> event is raised enabling you to potentially handle this scenario.</span></span> <span data-ttu-id="c1553-1848">Dependiendo de sus acciones, el <xref:System.Windows.Forms.Control.MouseUp> no es posible que se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1848">Depending on your actions, the <xref:System.Windows.Forms.Control.MouseUp> event might not be raised.</span></span> <span data-ttu-id="c1553-1849">También puede probar esta prueba con la clave de Windows o CTRL + ESC.</span><span class="sxs-lookup"><span data-stu-id="c1553-1849">You can also try this test with the Windows key or CTRL+ESC.</span></span>  
  
 `button1_MouseDown`  
  
 `button1_MouseCaptureChanged`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberSignature Language="F#" Value="member this.MouseClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1850">Se produce cuando se hace clic con el mouse en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1850">Occurs when the control is clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1851">Deprimente un botón del mouse cuando el cursor está sobre un control normalmente genera la siguiente serie de eventos del control:</span><span class="sxs-lookup"><span data-stu-id="c1553-1851">Depressing a mouse button when the cursor is over a control typically raises the following series of events from the control:</span></span>  
  
1.  <span data-ttu-id="c1553-1852">Evento<xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1852"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
2.  <span data-ttu-id="c1553-1853">Evento<xref:System.Windows.Forms.Control.Click> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1853"><xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
3.  <span data-ttu-id="c1553-1854">Evento<xref:System.Windows.Forms.Control.MouseClick> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1854"><xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
4.  <span data-ttu-id="c1553-1855">Evento<xref:System.Windows.Forms.Control.MouseUp> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1855"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
 <span data-ttu-id="c1553-1856">Para que esto, no se puede deshabilitar los distintos eventos en la clase del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1856">For this to occur, the various events cannot be disabled in the control's class.</span></span>  
  
 <span data-ttu-id="c1553-1857">Dos simples clics que se producen en el tiempo, según lo determinado por la configuración del mouse del sistema operativo del usuario, se generará un <xref:System.Windows.Forms.Control.MouseDoubleClick> eventos en lugar de la segunda <xref:System.Windows.Forms.Control.MouseClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1857">Two single clicks that occur close enough in time, as determined by the mouse settings of the user's operating system, will generate a <xref:System.Windows.Forms.Control.MouseDoubleClick> event instead of the second <xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1553-1858"><xref:System.Windows.Forms.Control.Click> los eventos son eventos lógicos de nivel superior de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1858"><xref:System.Windows.Forms.Control.Click> events are logically higher-level events of a control.</span></span> <span data-ttu-id="c1553-1859">A menudo se generan por otras acciones, como presionar la tecla ENTRAR cuando el control tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1859">They are often raised by other actions, such as pressing the ENTER key when the control has focus.</span></span>  
  
 <span data-ttu-id="c1553-1860">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1860">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1861">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1861">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-1862">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.MouseClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1862">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span> <span data-ttu-id="c1553-1863">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1863">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-1864">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1864">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-1865">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1865">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-1866">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.MouseClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1866">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#54](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#54)]
 [!code-vb[System.Windows.Forms.EventExamples#54](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#54)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDoubleClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDoubleClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseDoubleClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDoubleClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDoubleClick;" />
      <MemberSignature Language="F#" Value="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDoubleClick : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1867">Se produce cuando se hace doble clic con el mouse en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1867">Occurs when the control is double clicked by the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1868">El <xref:System.Windows.Forms.Control.MouseDoubleClick> evento tiene lugar cuando el usuario presiona un botón del mouse dos veces en rápida sucesión cuando el cursor está sobre el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1868">The <xref:System.Windows.Forms.Control.MouseDoubleClick> event occurs when the user depresses a mouse button twice in quick succession when the cursor is over the control.</span></span> <span data-ttu-id="c1553-1869">El intervalo de tiempo que separa dos clics únicos de un doble clic viene determinada por la configuración del mouse del sistema operativo del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1869">The time interval that separates two single clicks from a double-click is determined by the mouse settings of the user's operating system.</span></span>  
  
 <span data-ttu-id="c1553-1870">La siguiente serie de eventos es provocada por el control cuando realiza una acción del usuario tal:</span><span class="sxs-lookup"><span data-stu-id="c1553-1870">The following series of events is raised by the control when such a user action takes place:</span></span>  
  
1.  <span data-ttu-id="c1553-1871">Evento<xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1871"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
2.  <span data-ttu-id="c1553-1872">Evento<xref:System.Windows.Forms.Control.Click> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1872"><xref:System.Windows.Forms.Control.Click> event.</span></span>  
  
3.  <span data-ttu-id="c1553-1873">Evento<xref:System.Windows.Forms.Control.MouseClick> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1873"><xref:System.Windows.Forms.Control.MouseClick> event.</span></span>  
  
4.  <span data-ttu-id="c1553-1874">Evento<xref:System.Windows.Forms.Control.MouseUp> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1874"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
5.  <span data-ttu-id="c1553-1875">Evento<xref:System.Windows.Forms.Control.MouseDown> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1875"><xref:System.Windows.Forms.Control.MouseDown> event.</span></span>  
  
6.  <span data-ttu-id="c1553-1876">Evento<xref:System.Windows.Forms.Control.DoubleClick> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1876"><xref:System.Windows.Forms.Control.DoubleClick> event.</span></span>  
  
7.  <span data-ttu-id="c1553-1877">Evento<xref:System.Windows.Forms.Control.MouseDoubleClick> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1877"><xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span>  
  
8.  <span data-ttu-id="c1553-1878">Evento<xref:System.Windows.Forms.Control.MouseUp> .</span><span class="sxs-lookup"><span data-stu-id="c1553-1878"><xref:System.Windows.Forms.Control.MouseUp> event.</span></span>  
  
 <span data-ttu-id="c1553-1879">Para que esto, no se puede deshabilitar los distintos eventos en la clase del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1879">For this to occur, the various events cannot be disabled in the control's class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c1553-1880"><xref:System.Windows.Forms.Control.DoubleClick> los eventos son eventos lógicos de nivel superior de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1880"><xref:System.Windows.Forms.Control.DoubleClick> events are logically higher-level events of a control.</span></span> <span data-ttu-id="c1553-1881">Se pueden producir por otras acciones del usuario, como combinaciones de teclas de método abreviado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1881">They may be raised by other user actions, such as shortcut key combinations.</span></span>  
  
 <span data-ttu-id="c1553-1882">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1882">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1883">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-1883">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-1884">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.MouseDoubleClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1884">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span> <span data-ttu-id="c1553-1885">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1885">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-1886">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1886">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-1887">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1887">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-1888">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.MouseDoubleClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1888">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.MouseDoubleClick> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#55](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#55)]
 [!code-vb[System.Windows.Forms.EventExamples#55](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#55)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
        <altmember cref="E:System.Windows.Forms.Control.Click" />
        <altmember cref="E:System.Windows.Forms.Control.MouseDoubleClick" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseDown : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1889">Se produce cuando el puntero del mouse se encuentra sobre el control y se presiona un botón del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1889">Occurs when the mouse pointer is over the control and a mouse button is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1890">Los eventos del mouse se producen en el siguiente orden:</span><span class="sxs-lookup"><span data-stu-id="c1553-1890">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1891">Los siguientes eventos no se generan para el <xref:System.Windows.Forms.TabControl> a menos que haya al menos una de las clases <xref:System.Windows.Forms.TabPage> en el <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> colección: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> y <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1891">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="c1553-1892">Si hay al menos un <xref:System.Windows.Forms.TabPage> en la colección, y el usuario interactúa con el encabezado del control de ficha (donde el <xref:System.Windows.Forms.TabPage> aparecen nombres), el <xref:System.Windows.Forms.TabControl> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1892">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="c1553-1893">Sin embargo, si la interacción del usuario está dentro del área de cliente de la página de ficha, el <xref:System.Windows.Forms.TabPage> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1893">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="c1553-1894">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1894">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1895">En el ejemplo de código siguiente se muestra cómo utilizar distintos eventos de mouse para dibujar la ruta de acceso del puntero del mouse en un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1895">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="c1553-1896">Un segmento de línea se agrega a la <xref:System.Drawing.Drawing2D.GraphicsPath> para cada <xref:System.Windows.Forms.Control.MouseMove> y <xref:System.Windows.Forms.Control.MouseDown> eventos que se producen.</span><span class="sxs-lookup"><span data-stu-id="c1553-1896">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="c1553-1897">Para actualizar los gráficos, el <xref:System.Windows.Forms.Control.Invalidate%2A> se llama al método para el <xref:System.Windows.Forms.Panel> en cada `MouseDown` y `MouseUp` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1897">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="c1553-1898">Además, la ruta de gráfico se desplaza hacia arriba o hacia abajo cuando la <xref:System.Windows.Forms.Control.MouseWheel> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1898">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="c1553-1899">Al igual que otros eventos de mouse, <xref:System.Windows.Forms.Control.MouseHover>, se identifican en pantalla también.</span><span class="sxs-lookup"><span data-stu-id="c1553-1899">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="c1553-1900">También se muestra en la pantalla es información adicional sobre el mouse desde el <xref:System.Windows.Forms.SystemInformation> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1900">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseClick" />
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event EventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : EventHandler " Usage="member this.MouseEnter : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1901">Se produce cuando el puntero del mouse entra en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1901">Occurs when the mouse pointer enters the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1902">Los eventos del mouse se producen en el siguiente orden:</span><span class="sxs-lookup"><span data-stu-id="c1553-1902">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1903">Los siguientes eventos no se generan para el <xref:System.Windows.Forms.TabControl> a menos que haya al menos una de las clases <xref:System.Windows.Forms.TabPage> en el <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> colección: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> y <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1903">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="c1553-1904">Si hay al menos un <xref:System.Windows.Forms.TabPage> en la colección, y el usuario interactúa con el encabezado del control de ficha (donde el <xref:System.Windows.Forms.TabPage> aparecen nombres), el <xref:System.Windows.Forms.TabControl> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1904">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="c1553-1905">Sin embargo, si la interacción del usuario está dentro del área de cliente de la página de ficha, el <xref:System.Windows.Forms.TabPage> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1905">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="c1553-1906">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1906">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1907">En el ejemplo de código siguiente se muestra cómo utilizar distintos eventos de mouse para dibujar la ruta de acceso del puntero del mouse en un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1907">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="c1553-1908">Un segmento de línea se agrega a la <xref:System.Drawing.Drawing2D.GraphicsPath> para cada <xref:System.Windows.Forms.Control.MouseMove> y <xref:System.Windows.Forms.Control.MouseDown> eventos que se producen.</span><span class="sxs-lookup"><span data-stu-id="c1553-1908">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="c1553-1909">Para actualizar los gráficos, el <xref:System.Windows.Forms.Control.Invalidate%2A> se llama al método para el <xref:System.Windows.Forms.Panel> en cada `MouseDown` y `MouseUp` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1909">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="c1553-1910">Además, la ruta de gráfico se desplaza hacia arriba o hacia abajo cuando la <xref:System.Windows.Forms.Control.MouseWheel> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1910">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="c1553-1911">Al igual que otros eventos de mouse, <xref:System.Windows.Forms.Control.MouseHover>, se identifican en pantalla también.</span><span class="sxs-lookup"><span data-stu-id="c1553-1911">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="c1553-1912">También se muestra en la pantalla es información adicional sobre el mouse desde el <xref:System.Windows.Forms.SystemInformation> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1912">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseHover">
      <MemberSignature Language="C#" Value="public event EventHandler MouseHover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseHover" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseHover" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseHover As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseHover;" />
      <MemberSignature Language="F#" Value="member this.MouseHover : EventHandler " Usage="member this.MouseHover : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1913">Se produce cuando el puntero del mouse se sitúa sobre el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1913">Occurs when the mouse pointer rests on the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1914">Un uso típico de <xref:System.Windows.Forms.Control.MouseHover> consiste en mostrar una información sobre herramientas cuando el mouse se detenga sobre un control dentro de un área especificada alrededor del control (el "rectángulo").</span><span class="sxs-lookup"><span data-stu-id="c1553-1914">A typical use of <xref:System.Windows.Forms.Control.MouseHover> is to display a tool tip when the mouse pauses on a control within a specified area around the control (the "hover rectangle").</span></span> <span data-ttu-id="c1553-1915">La pausa necesaria para que se genere este evento se especifica en milisegundos por la <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1915">The pause required for this event to be raised is specified in milliseconds by the <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> property.</span></span>  
  
 <span data-ttu-id="c1553-1916">El <xref:System.Windows.Forms.Control.MouseHover> evento se define y se ha detectado la conexión con el <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> y <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c1553-1916">The <xref:System.Windows.Forms.Control.MouseHover> event is defined and detected in connection with the <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A> and <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> properties.</span></span>  
  
 <span data-ttu-id="c1553-1917">Los eventos del mouse se producen en el siguiente orden:</span><span class="sxs-lookup"><span data-stu-id="c1553-1917">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1918">Los siguientes eventos no se generan para el <xref:System.Windows.Forms.TabControl> a menos que haya al menos una de las clases <xref:System.Windows.Forms.TabPage> en el <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> colección: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> y <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1918">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="c1553-1919">Si hay al menos un <xref:System.Windows.Forms.TabPage> en la colección, y el usuario interactúa con el encabezado del control de ficha (donde el <xref:System.Windows.Forms.TabPage> aparecen nombres), el <xref:System.Windows.Forms.TabControl> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1919">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="c1553-1920">Sin embargo, si la interacción del usuario está dentro del área de cliente de la página de ficha, el <xref:System.Windows.Forms.TabPage> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1920">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="c1553-1921">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1921">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1922">En el ejemplo de código siguiente se muestra cómo utilizar distintos eventos de mouse para dibujar la ruta de acceso del puntero del mouse en un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1922">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="c1553-1923">Un segmento de línea se agrega a la <xref:System.Drawing.Drawing2D.GraphicsPath> para cada <xref:System.Windows.Forms.Control.MouseMove> y <xref:System.Windows.Forms.Control.MouseDown> eventos que se producen.</span><span class="sxs-lookup"><span data-stu-id="c1553-1923">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="c1553-1924">Para actualizar los gráficos, el <xref:System.Windows.Forms.Control.Invalidate%2A> se llama al método para el <xref:System.Windows.Forms.Panel> en cada `MouseDown` y `MouseUp` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1924">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="c1553-1925">Además, la ruta de gráfico se desplaza hacia arriba o hacia abajo cuando la <xref:System.Windows.Forms.Control.MouseWheel> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1925">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="c1553-1926">Al igual que otros eventos de mouse, <xref:System.Windows.Forms.Control.MouseHover>, se identifican en pantalla también.</span><span class="sxs-lookup"><span data-stu-id="c1553-1926">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="c1553-1927">También se muestra en la pantalla es información adicional sobre el mouse desde el <xref:System.Windows.Forms.SystemInformation> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1927">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.SystemInformation.MouseHoverTime" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event EventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : EventHandler " Usage="member this.MouseLeave : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1928">Se produce cuando el puntero del mouse deja el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1928">Occurs when the mouse pointer leaves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1929">Los eventos del mouse se producen en el siguiente orden:</span><span class="sxs-lookup"><span data-stu-id="c1553-1929">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1930">Los siguientes eventos no se generan para el <xref:System.Windows.Forms.TabControl> a menos que haya al menos una de las clases <xref:System.Windows.Forms.TabPage> en el <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> colección: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> y <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1930">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="c1553-1931">Si hay al menos un <xref:System.Windows.Forms.TabPage> en la colección, y el usuario interactúa con el encabezado del control de ficha (donde el <xref:System.Windows.Forms.TabPage> aparecen nombres), el <xref:System.Windows.Forms.TabControl> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1931">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="c1553-1932">Sin embargo, si la interacción del usuario está dentro del área de cliente de la página de ficha, el <xref:System.Windows.Forms.TabPage> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1932">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="c1553-1933">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1933">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1934">En el ejemplo de código siguiente se muestra cómo utilizar distintos eventos de mouse para dibujar la ruta de acceso del puntero del mouse en un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1934">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="c1553-1935">Un segmento de línea se agrega a la <xref:System.Drawing.Drawing2D.GraphicsPath> para cada <xref:System.Windows.Forms.Control.MouseMove> y <xref:System.Windows.Forms.Control.MouseDown> eventos que se producen.</span><span class="sxs-lookup"><span data-stu-id="c1553-1935">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="c1553-1936">Para actualizar los gráficos, el <xref:System.Windows.Forms.Control.Invalidate%2A> se llama al método para el <xref:System.Windows.Forms.Panel> en cada `MouseDown` y `MouseUp` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1936">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="c1553-1937">Además, la ruta de gráfico se desplaza hacia arriba o hacia abajo cuando la <xref:System.Windows.Forms.Control.MouseWheel> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1937">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="c1553-1938">Al igual que otros eventos de mouse, <xref:System.Windows.Forms.Control.MouseHover>, se identifican en pantalla también.</span><span class="sxs-lookup"><span data-stu-id="c1553-1938">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="c1553-1939">También se muestra en la pantalla es información adicional sobre el mouse desde el <xref:System.Windows.Forms.SystemInformation> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1939">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1940">Se produce cuando el puntero del mouse se mueve sobre el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1940">Occurs when the mouse pointer is moved over the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1941">Los usos típicos de <xref:System.Windows.Forms.Control.MouseMove> son para cambiar el color del control o para pintar un rectángulo elevado alrededor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1941">Typical uses of <xref:System.Windows.Forms.Control.MouseMove> are to change the control's color or to paint a raised rectangle around the control.</span></span>  
  
 <span data-ttu-id="c1553-1942">Los eventos del mouse se producen en el siguiente orden:</span><span class="sxs-lookup"><span data-stu-id="c1553-1942">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1943">Los siguientes eventos no se generan para el <xref:System.Windows.Forms.TabControl> a menos que haya al menos una de las clases <xref:System.Windows.Forms.TabPage> en el <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> colección: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> y <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1943">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="c1553-1944">Si hay al menos un <xref:System.Windows.Forms.TabPage> en la colección, y el usuario interactúa con el encabezado del control de ficha (donde el <xref:System.Windows.Forms.TabPage> aparecen nombres), el <xref:System.Windows.Forms.TabControl> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1944">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="c1553-1945">Sin embargo, si la interacción del usuario está dentro del área de cliente de la página de ficha, el <xref:System.Windows.Forms.TabPage> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1945">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="c1553-1946">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1946">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1947">En el ejemplo de código siguiente se muestra cómo utilizar distintos eventos de mouse para dibujar la ruta de acceso del puntero del mouse en un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1947">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="c1553-1948">Un segmento de línea se agrega a la <xref:System.Drawing.Drawing2D.GraphicsPath> para cada <xref:System.Windows.Forms.Control.MouseMove> y <xref:System.Windows.Forms.Control.MouseDown> eventos que se producen.</span><span class="sxs-lookup"><span data-stu-id="c1553-1948">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="c1553-1949">Para actualizar los gráficos, el <xref:System.Windows.Forms.Control.Invalidate%2A> se llama al método para el <xref:System.Windows.Forms.Panel> en cada `MouseDown` y `MouseUp` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1949">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="c1553-1950">Además, la ruta de gráfico se desplaza hacia arriba o hacia abajo cuando la <xref:System.Windows.Forms.Control.MouseWheel> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1950">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="c1553-1951">Al igual que otros eventos de mouse, <xref:System.Windows.Forms.Control.MouseHover>, se identifican en pantalla también.</span><span class="sxs-lookup"><span data-stu-id="c1553-1951">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="c1553-1952">También se muestra en la pantalla es información adicional sobre el mouse desde el <xref:System.Windows.Forms.SystemInformation> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1952">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MousePosition">
      <MemberSignature Language="C#" Value="public static System.Drawing.Point MousePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Drawing.Point MousePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.MousePosition" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MousePosition As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::Point MousePosition { System::Drawing::Point get(); };" />
      <MemberSignature Language="F#" Value="member this.MousePosition : System.Drawing.Point" Usage="System.Windows.Forms.Control.MousePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1953">Obtiene la posición del cursor del mouse en coordenadas de pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-1953">Gets the position of the mouse cursor in screen coordinates.</span></span></summary>
        <value><span data-ttu-id="c1553-1954"><see cref="T:System.Drawing.Point" /> que contiene las coordenadas del cursor del mouse con relación a la esquina superior izquierda de la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-1954">A <see cref="T:System.Drawing.Point" /> that contains the coordinates of the mouse cursor relative to the upper-left corner of the screen.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1955">El <xref:System.Windows.Forms.Control.MousePosition%2A> propiedad devuelve un <xref:System.Drawing.Point> que representa la posición del cursor del mouse en el momento en que se hace referencia a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1955">The <xref:System.Windows.Forms.Control.MousePosition%2A> property returns a <xref:System.Drawing.Point> that represents the mouse cursor position at the time the property was referenced.</span></span> <span data-ttu-id="c1553-1956">Las coordenadas indican la posición en la pantalla, no en relación con el control y se devuelven independientemente de si se coloca el cursor sobre el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1956">The coordinates indicate the position on the screen, not relative to the control, and are returned regardless of whether the cursor is positioned over the control.</span></span> <span data-ttu-id="c1553-1957">Las coordenadas de la esquina superior izquierda de la pantalla son 0,0.</span><span class="sxs-lookup"><span data-stu-id="c1553-1957">The coordinates of the upper-left corner of the screen are 0,0.</span></span>  
  
 <span data-ttu-id="c1553-1958">El <xref:System.Windows.Forms.Control.MousePosition%2A> propiedad es idéntica a la <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-1958">The <xref:System.Windows.Forms.Control.MousePosition%2A> property is identical to the <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1959">El siguiente código en el ejemplo se coloca un <xref:System.Windows.Forms.TreeNode> etiqueta en un estado modificable cuando el usuario presiona ALT + E mientras el cursor del mouse está sobre el nodo de árbol.</span><span class="sxs-lookup"><span data-stu-id="c1553-1959">The following code example puts a <xref:System.Windows.Forms.TreeNode> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node.</span></span> <span data-ttu-id="c1553-1960">Una vez realizado el usuario edita la etiqueta, las etiquetas no se puede editar otra vez hasta que se presione la combinación de teclas ALT + E de nuevo.</span><span class="sxs-lookup"><span data-stu-id="c1553-1960">After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again.</span></span> <span data-ttu-id="c1553-1961">En este ejemplo requiere que haya un <xref:System.Windows.Forms.TreeView> en un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1961">This example requires that you have a <xref:System.Windows.Forms.TreeView> on a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-1962">La vista de árbol debe tener al menos un <xref:System.Windows.Forms.TreeNode> en su <xref:System.Windows.Forms.TreeView.Nodes%2A> colección.</span><span class="sxs-lookup"><span data-stu-id="c1553-1962">The tree view should also have at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeView.Nodes%2A> collection.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseUp : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1963">Se produce cuando el puntero del mouse se encuentra sobre el control y se suelta un botón del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1963">Occurs when the mouse pointer is over the control and a mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1964">Los eventos del mouse se producen en el siguiente orden:</span><span class="sxs-lookup"><span data-stu-id="c1553-1964">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-1965">Los siguientes eventos no se generan para el <xref:System.Windows.Forms.TabControl> a menos que haya al menos una de las clases <xref:System.Windows.Forms.TabPage> en el <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> colección: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> y <xref:System.Windows.Forms.Control.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1965">The following events are not raised for the <xref:System.Windows.Forms.TabControl> class unless there is at least one <xref:System.Windows.Forms.TabPage> in the <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=nameWithType> collection: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave> and <xref:System.Windows.Forms.Control.MouseMove>.</span></span> <span data-ttu-id="c1553-1966">Si hay al menos un <xref:System.Windows.Forms.TabPage> en la colección, y el usuario interactúa con el encabezado del control de ficha (donde el <xref:System.Windows.Forms.TabPage> aparecen nombres), el <xref:System.Windows.Forms.TabControl> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1966">If there is at least one <xref:System.Windows.Forms.TabPage> in the collection, and the user interacts with the tab control's header (where the <xref:System.Windows.Forms.TabPage> names appear), the <xref:System.Windows.Forms.TabControl> raises the appropriate event.</span></span> <span data-ttu-id="c1553-1967">Sin embargo, si la interacción del usuario está dentro del área de cliente de la página de ficha, el <xref:System.Windows.Forms.TabPage> provoca el evento adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-1967">However, if the user interaction is within the client area of the tab page, the <xref:System.Windows.Forms.TabPage> raises the appropriate event.</span></span>  
  
 <span data-ttu-id="c1553-1968">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1968">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1969">En el ejemplo de código siguiente se muestra cómo utilizar distintos eventos de mouse para dibujar la ruta de acceso del puntero del mouse en un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1969">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="c1553-1970">Un segmento de línea se agrega a la <xref:System.Drawing.Drawing2D.GraphicsPath> para cada <xref:System.Windows.Forms.Control.MouseMove> y <xref:System.Windows.Forms.Control.MouseDown> eventos que se producen.</span><span class="sxs-lookup"><span data-stu-id="c1553-1970">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="c1553-1971">Para actualizar los gráficos, el <xref:System.Windows.Forms.Control.Invalidate%2A> se llama al método para el <xref:System.Windows.Forms.Panel> en cada `MouseDown` y `MouseUp` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1971">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="c1553-1972">Además, la ruta de gráfico se desplaza hacia arriba o hacia abajo cuando la <xref:System.Windows.Forms.Control.MouseWheel> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1972">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="c1553-1973">Al igual que otros eventos de mouse, <xref:System.Windows.Forms.Control.MouseHover>, se identifican en pantalla también.</span><span class="sxs-lookup"><span data-stu-id="c1553-1973">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="c1553-1974">También se muestra en la pantalla es información adicional sobre el mouse desde el <xref:System.Windows.Forms.SystemInformation> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1974">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Forms.MouseEventHandler " Usage="member this.MouseWheel : System.Windows.Forms.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1975">Se produce cuando la rueda del mouse se mueve mientras el control tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-1975">Occurs when the mouse wheel moves while the control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1976">Al controlar la <xref:System.Windows.Forms.Control.MouseWheel> eventos es importante seguir los estándares de interfaz (IU) del usuario asociados con la rueda del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1976">When handling the <xref:System.Windows.Forms.Control.MouseWheel> event it is important to follow the user interface (UI) standards associated with the mouse wheel.</span></span> <span data-ttu-id="c1553-1977">El <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType> valor de propiedad indica que se ha movido la rueda del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-1977">The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=nameWithType> property value indicates the amount the mouse wheel has been moved.</span></span> <span data-ttu-id="c1553-1978">La interfaz de usuario debe desplazarse cuando el incremento acumulado es más o menos 120.</span><span class="sxs-lookup"><span data-stu-id="c1553-1978">The UI should scroll when the accumulated delta is plus or minus 120.</span></span> <span data-ttu-id="c1553-1979">La interfaz de usuario debe desplazar el número de líneas lógicas devuelto por la <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> alcanza la propiedad para cada valor de incremento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1979">The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> property for every delta value reached.</span></span> <span data-ttu-id="c1553-1980">También puede desplazarse más fácilmente en más pequeños incrementos de esa 120 unidad, la proporción debe permanecer constante, es decir <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> líneas desplazadas por cada 120 unidades de movimiento de la rueda.</span><span class="sxs-lookup"><span data-stu-id="c1553-1980">You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=nameWithType> lines scrolled per 120 delta units of wheel movement.</span></span>  
  
 <span data-ttu-id="c1553-1981">Para obtener más información sobre el control de mensajes que la rueda del mouse, consulte la [WM_MOUSEWHEEL](https://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx) tema.</span><span class="sxs-lookup"><span data-stu-id="c1553-1981">For more information about handling mouse wheel messages, see the [WM_MOUSEWHEEL](https://msdn.microsoft.com/library/windows/desktop/ms645617\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="c1553-1982">Los eventos del mouse se producen en el siguiente orden:</span><span class="sxs-lookup"><span data-stu-id="c1553-1982">Mouse events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.MouseEnter>  
  
2.  <xref:System.Windows.Forms.Control.MouseMove>  
  
3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>  
  
4.  <xref:System.Windows.Forms.Control.MouseUp>  
  
5.  <xref:System.Windows.Forms.Control.MouseLeave>  
  
 <span data-ttu-id="c1553-1983">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1983">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1984">En el ejemplo de código siguiente se muestra cómo utilizar distintos eventos de mouse para dibujar la ruta de acceso del puntero del mouse en un <xref:System.Windows.Forms.Panel>.</span><span class="sxs-lookup"><span data-stu-id="c1553-1984">The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>.</span></span> <span data-ttu-id="c1553-1985">Un segmento de línea se agrega a la <xref:System.Drawing.Drawing2D.GraphicsPath> para cada <xref:System.Windows.Forms.Control.MouseMove> y <xref:System.Windows.Forms.Control.MouseDown> eventos que se producen.</span><span class="sxs-lookup"><span data-stu-id="c1553-1985">A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur.</span></span> <span data-ttu-id="c1553-1986">Para actualizar los gráficos, el <xref:System.Windows.Forms.Control.Invalidate%2A> se llama al método para el <xref:System.Windows.Forms.Panel> en cada `MouseDown` y `MouseUp` eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-1986">To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event.</span></span> <span data-ttu-id="c1553-1987">Además, la ruta de gráfico se desplaza hacia arriba o hacia abajo cuando la <xref:System.Windows.Forms.Control.MouseWheel> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-1987">In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs.</span></span> <span data-ttu-id="c1553-1988">Al igual que otros eventos de mouse, <xref:System.Windows.Forms.Control.MouseHover>, se identifican en pantalla también.</span><span class="sxs-lookup"><span data-stu-id="c1553-1988">Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well.</span></span> <span data-ttu-id="c1553-1989">También se muestra en la pantalla es información adicional sobre el mouse desde el <xref:System.Windows.Forms.SystemInformation> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-1989">Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CPP/mouseeventexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.MouseEvent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/CS/mouseeventexample.cs#1)]
 [!code-vb[System.Windows.Forms.MouseEvent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MouseEvent/VB/mouseeventexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public event EventHandler Move;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Move" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Move" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Move As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Move;" />
      <MemberSignature Language="F#" Value="member this.Move : EventHandler " Usage="member this.Move : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1990">Se produce cuando se mueve el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1990">Occurs when the control is moved.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1991">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-1991">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1992">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.Move> eventos para mostrar la ubicación del formulario en coordenadas de pantalla en la barra de título del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1992">The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.</span></span>  
  
 [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]
 [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]
 [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.Control.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-1993">Obtiene o establece el nombre del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1993">Gets or sets the name of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-1994">Nombre del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-1994">The name of the control.</span></span> <span data-ttu-id="c1553-1995">El valor predeterminado es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="c1553-1995">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-1996">El <xref:System.Windows.Forms.Control.Name%2A> propiedad se puede utilizar en tiempo de ejecución para evaluar el objeto por nombre en lugar de tipo y nombre de programación.</span><span class="sxs-lookup"><span data-stu-id="c1553-1996">The <xref:System.Windows.Forms.Control.Name%2A> property can be used at run time to evaluate the object by name rather than type and programmatic name.</span></span> <span data-ttu-id="c1553-1997">Dado que el <xref:System.Windows.Forms.Control.Name%2A> propiedad devuelve un <xref:System.String> tipo, se puede evaluar en instrucciones lógicas (`Select` instrucción en Visual Basic, `switch` instrucción en Visual C# y [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).</span><span class="sxs-lookup"><span data-stu-id="c1553-1997">Because the <xref:System.Windows.Forms.Control.Name%2A> property returns a <xref:System.String> type, it can be evaluated in case-style logic statements (`Select` statement in Visual Basic, `switch` statement in Visual C# and [!INCLUDE[vcprvc](~/includes/vcprvc-md.md)]).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-1998">El siguiente código de ejemplo se muestra el <xref:System.Windows.Forms.Control.Name%2A> de un control en un <xref:System.Windows.Forms.MessageBox> cuando el control se agrega o quita de un formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-1998">The following code example displays the <xref:System.Windows.Forms.Control.Name%2A> of a control in a <xref:System.Windows.Forms.MessageBox> when the control is added or removed from a form.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ComponentModel.ISite.Name" />
      </Docs>
    </Member>
    <Member MemberName="NotifyInvalidate">
      <MemberSignature Language="C#" Value="protected virtual void NotifyInvalidate (System.Drawing.Rectangle invalidatedArea);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NotifyInvalidate(valuetype System.Drawing.Rectangle invalidatedArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub NotifyInvalidate (invalidatedArea As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void NotifyInvalidate(System::Drawing::Rectangle invalidatedArea);" />
      <MemberSignature Language="F#" Value="abstract member NotifyInvalidate : System.Drawing.Rectangle -&gt; unit&#xA;override this.NotifyInvalidate : System.Drawing.Rectangle -&gt; unit" Usage="control.NotifyInvalidate invalidatedArea" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invalidatedArea" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="invalidatedArea"><span data-ttu-id="c1553-1999"><see cref="T:System.Drawing.Rectangle" /> que representa el área que se va a invalidar.</span><span class="sxs-lookup"><span data-stu-id="c1553-1999">A <see cref="T:System.Drawing.Rectangle" /> representing the area to invalidate.</span></span></param>
        <summary><span data-ttu-id="c1553-2000">Genera el evento <see cref="E:System.Windows.Forms.Control.Invalidated" /> con una región especificada del control para invalidar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2000">Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event with a specified region of the control to invalidate.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnAutoSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAutoSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAutoSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAutoSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAutoSizeChanged : EventArgs -&gt; unit&#xA;override this.OnAutoSizeChanged : EventArgs -&gt; unit" Usage="control.OnAutoSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2001">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2001">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2002">Genera el evento <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2002">Raises the <see cref="E:System.Windows.Forms.Control.AutoSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2003">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2003">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2004">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2004">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2005">El método <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2005">The <xref:System.Windows.Forms.Control.OnAutoSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2006">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2006">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2007">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2007">When overriding <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnBackColorChanged : EventArgs -&gt; unit" Usage="control.OnBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2008">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2008">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2009">Genera el evento <see cref="E:System.Windows.Forms.Control.BackColorChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2009">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2010">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2010">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2011">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2011">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2012">El método <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2012">The <xref:System.Windows.Forms.Control.OnBackColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2013">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2013">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2014">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2014">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2015">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2015">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2016">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2016">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2017">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2017">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2018">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2018">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2019">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2019">When overriding <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackColor" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundImageChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundImageChanged : EventArgs -&gt; unit" Usage="control.OnBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2020">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2020">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2021">Genera el evento <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2021">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2022">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2022">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2023">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2023">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2024">El método <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2024">The <xref:System.Windows.Forms.Control.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2025">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2025">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2026">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2026">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2027">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2027">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2028">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2028">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2029">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2029">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2030">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2030">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2031">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2031">When overriding <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImage" />
      </Docs>
    </Member>
    <Member MemberName="OnBackgroundImageLayoutChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBackgroundImageLayoutChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBackgroundImageLayoutChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBackgroundImageLayoutChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBackgroundImageLayoutChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBackgroundImageLayoutChanged : EventArgs -&gt; unit&#xA;override this.OnBackgroundImageLayoutChanged : EventArgs -&gt; unit" Usage="control.OnBackgroundImageLayoutChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2032">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2032">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2033">Genera el evento <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2033">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2034">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2034">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2035">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2035">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2036">El método <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2036">The <xref:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2037">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2037">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2038">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2038">When overriding <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageLayoutChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingContextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnBindingContextChanged : EventArgs -&gt; unit&#xA;override this.OnBindingContextChanged : EventArgs -&gt; unit" Usage="control.OnBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2039">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2039">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2040">Genera el evento <see cref="E:System.Windows.Forms.Control.BindingContextChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2040">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2041">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2041">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2042">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2042">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2043">El método <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2043">The <xref:System.Windows.Forms.Control.OnBindingContextChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2044">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2044">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2045">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2045">When overriding <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
        <altmember cref="P:System.Windows.Forms.Control.BindingContext" />
      </Docs>
    </Member>
    <Member MemberName="OnCausesValidationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCausesValidationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCausesValidationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCausesValidationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCausesValidationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCausesValidationChanged : EventArgs -&gt; unit&#xA;override this.OnCausesValidationChanged : EventArgs -&gt; unit" Usage="control.OnCausesValidationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2046">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2046">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2047">Genera el evento <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2047">Raises the <see cref="E:System.Windows.Forms.Control.CausesValidationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2048">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2048">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2049">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2049">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2050">El método <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2050">The <xref:System.Windows.Forms.Control.OnCausesValidationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2051">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2051">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2052">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2052">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2053">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2053">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2054">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2054">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2055">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2055">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2056">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2056">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2057">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2057">When overriding <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.CausesValidationChanged" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
      </Docs>
    </Member>
    <Member MemberName="OnChangeUICues">
      <MemberSignature Language="C#" Value="protected virtual void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChangeUICues(class System.Windows.Forms.UICuesEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChangeUICues (e As UICuesEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChangeUICues(System::Windows::Forms::UICuesEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit&#xA;override this.OnChangeUICues : System.Windows.Forms.UICuesEventArgs -&gt; unit" Usage="control.OnChangeUICues e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.UICuesEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2058">Objeto <see cref="T:System.Windows.Forms.UICuesEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2058">A <see cref="T:System.Windows.Forms.UICuesEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2059">Genera el evento <see cref="E:System.Windows.Forms.Control.ChangeUICues" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2059">Raises the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2060">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2060">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2061">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2061">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2062">El método <xref:System.Windows.Forms.Control.OnChangeUICues%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2062">The <xref:System.Windows.Forms.Control.OnChangeUICues%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2063">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2063">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2064">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2064">When overriding <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
        <altmember cref="T:System.Windows.Forms.UICues" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="control.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2065">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2065">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2066">Genera el evento <see cref="E:System.Windows.Forms.Control.Click" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2066">Raises the <see cref="E:System.Windows.Forms.Control.Click" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2067">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2067">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2068">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2068">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2069">El método <xref:System.Windows.Forms.Control.OnClick%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2069">The <xref:System.Windows.Forms.Control.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2070">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2070">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2071">El ejemplo de código siguiente se muestra cómo reemplazar el <xref:System.Windows.Forms.Control.OnClick%2A> método en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2071">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.OnClick%2A> method in a derived class.</span></span> <span data-ttu-id="c1553-2072">Para ejecutar el ejemplo, pegue el código siguiente después de una clase de formulario, en el mismo archivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2072">To run the example, paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="c1553-2073">Agregar un cuadro de texto de tipo `SingleClickTextBox` al formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2073">Add a textbox of type `SingleClickTextBox` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ControlOnClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlOnClick/VB/form1.vb#1)]  
  
 <span data-ttu-id="c1553-2074">El ejemplo de código siguiente muestra uno de los muchos usos de la <xref:System.Windows.Forms.Control.Click> evento y controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2074">The following code example shows one of the many uses of the <xref:System.Windows.Forms.Control.Click> event and event handler.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2075">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2075">When overriding <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnClientSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnClientSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClientSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClientSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClientSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClientSizeChanged : EventArgs -&gt; unit&#xA;override this.OnClientSizeChanged : EventArgs -&gt; unit" Usage="control.OnClientSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2076">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2076">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2077">Genera el evento <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2077">Raises the <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2078">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2078">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2079">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2079">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2080">El método <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2080">The <xref:System.Windows.Forms.Control.OnClientSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2081">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2081">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2082">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2082">When overriding <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuChanged : EventArgs -&gt; unit&#xA;override this.OnContextMenuChanged : EventArgs -&gt; unit" Usage="control.OnContextMenuChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2083">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2083">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2084">Genera el evento <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2084">Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2085">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2085">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2086">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2086">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2087">El método <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2087">The <xref:System.Windows.Forms.Control.OnContextMenuChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2088">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2088">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2089">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2089">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2090">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2090">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2091">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2091">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2092">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2092">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2093">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2093">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2094">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2094">When overriding <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ContextMenuChanged" />
        <altmember cref="P:System.Windows.Forms.Control.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuStripChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuStripChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuStripChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuStripChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuStripChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuStripChanged : EventArgs -&gt; unit&#xA;override this.OnContextMenuStripChanged : EventArgs -&gt; unit" Usage="control.OnContextMenuStripChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2095">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2095">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2096">Genera el evento <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2096">Raises the <see cref="E:System.Windows.Forms.Control.ContextMenuStripChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2097">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2097">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2098">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2098">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2099">El método <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2099">The <xref:System.Windows.Forms.Control.OnContextMenuStripChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2100">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2100">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2101">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2101">When overriding <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnControlAdded">
      <MemberSignature Language="C#" Value="protected virtual void OnControlAdded (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlAdded(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlAdded (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlAdded(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit&#xA;override this.OnControlAdded : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="control.OnControlAdded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2102">Objeto <see cref="T:System.Windows.Forms.ControlEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2102">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2103">Genera el evento <see cref="E:System.Windows.Forms.Control.ControlAdded" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2103">Raises the <see cref="E:System.Windows.Forms.Control.ControlAdded" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2104">Se llama cuando se agrega un control secundario para el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2104">Called when a child control is added to the control.</span></span>  
  
 <span data-ttu-id="c1553-2105">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2105">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2106">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2106">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2107">El método <xref:System.Windows.Forms.Control.OnControlAdded%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2107">The <xref:System.Windows.Forms.Control.OnControlAdded%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2108">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2108">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2109">El siguiente ejemplo de código usa <xref:System.Windows.Forms.Control.ControlAdded> para agregar un control a un formulario y muestra el nombre del control se ha agregado en un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2109">The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2110">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2110">When overriding <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ControlAdded" />
      </Docs>
    </Member>
    <Member MemberName="OnControlRemoved">
      <MemberSignature Language="C#" Value="protected virtual void OnControlRemoved (System.Windows.Forms.ControlEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlRemoved(class System.Windows.Forms.ControlEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlRemoved (e As ControlEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlRemoved(System::Windows::Forms::ControlEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnControlRemoved : System.Windows.Forms.ControlEventArgs -&gt; unit&#xA;override this.OnControlRemoved : System.Windows.Forms.ControlEventArgs -&gt; unit" Usage="control.OnControlRemoved e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.ControlEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2111">Objeto <see cref="T:System.Windows.Forms.ControlEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2111">A <see cref="T:System.Windows.Forms.ControlEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2112">Genera el evento <see cref="E:System.Windows.Forms.Control.ControlRemoved" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2112">Raises the <see cref="E:System.Windows.Forms.Control.ControlRemoved" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2113">Se llama cuando se quita un control secundario del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2113">Called when a child control is removed from the control.</span></span>  
  
 <span data-ttu-id="c1553-2114">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2114">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2115">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2115">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2116">El método <xref:System.Windows.Forms.Control.OnControlRemoved%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2116">The <xref:System.Windows.Forms.Control.OnControlRemoved%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2117">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2117">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2118">El siguiente ejemplo de código usa <xref:System.Windows.Forms.Control.ControlRemoved> para quitar un control de un formulario y muestra el nombre del control eliminado en un <xref:System.Windows.Forms.MessageBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2118">The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.</span></span>  
  
 [!code-cpp[Control.ControlRemoved#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.ControlRemoved/CPP/form1.cpp#1)]
 [!code-csharp[Control.ControlRemoved#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.ControlRemoved/CS/form1.cs#1)]
 [!code-vb[Control.ControlRemoved#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.ControlRemoved/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2119">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2119">When overriding <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ControlRemoved" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateControl">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCreateControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateControl ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateControl();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateControl : unit -&gt; unit&#xA;override this.OnCreateControl : unit -&gt; unit" Usage="control.OnCreateControl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-2120">Provoca el método <see cref="M:System.Windows.Forms.Control.CreateControl" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2120">Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2121">El <xref:System.Windows.Forms.Control.OnCreateControl%2A> método se llama cuando el control se crea por primera vez.</span><span class="sxs-lookup"><span data-stu-id="c1553-2121">The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method is called when the control is first created.</span></span>  
  
 <span data-ttu-id="c1553-2122">El método <xref:System.Windows.Forms.Control.OnCreateControl%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2122">The <xref:System.Windows.Forms.Control.OnCreateControl%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2123">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2123">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2124">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2124">When overriding <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCreateControl" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
      </Docs>
    </Member>
    <Member MemberName="OnCursorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCursorChanged : EventArgs -&gt; unit&#xA;override this.OnCursorChanged : EventArgs -&gt; unit" Usage="control.OnCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2125">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2125">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2126">Genera el evento <see cref="E:System.Windows.Forms.Control.CursorChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2126">Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2127">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2127">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2128">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2128">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2129">El método <xref:System.Windows.Forms.Control.OnCursorChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2129">The <xref:System.Windows.Forms.Control.OnCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2130">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2130">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2131">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2131">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2132">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2132">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2133">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2133">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2134">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2134">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2135">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2135">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2136">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2136">When overriding <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.CursorChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="OnDockChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDockChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDockChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDockChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDockChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDockChanged : EventArgs -&gt; unit&#xA;override this.OnDockChanged : EventArgs -&gt; unit" Usage="control.OnDockChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2137">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2137">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2138">Genera el evento <see cref="E:System.Windows.Forms.Control.DockChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2138">Raises the <see cref="E:System.Windows.Forms.Control.DockChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2139">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2139">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2140">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2140">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2141">El método <xref:System.Windows.Forms.Control.OnDockChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2141">The <xref:System.Windows.Forms.Control.OnDockChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2142">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2142">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2143">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2143">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2144">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2144">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2145">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2145">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2146">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2146">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2147">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2147">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2148">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2148">When overriding <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDockChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DockChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Dock" />
      </Docs>
    </Member>
    <Member MemberName="OnDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnDoubleClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDoubleClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDoubleClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDoubleClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDoubleClick : EventArgs -&gt; unit&#xA;override this.OnDoubleClick : EventArgs -&gt; unit" Usage="control.OnDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2149">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2149">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2150">Genera el evento <see cref="E:System.Windows.Forms.Control.DoubleClick" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2150">Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2151">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2151">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2152">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2152">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2153">El método <xref:System.Windows.Forms.Control.OnDoubleClick%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2153">The <xref:System.Windows.Forms.Control.OnDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2154">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2154">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2155">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.DoubleClick> eventos de un <xref:System.Windows.Forms.ListBox> para cargar los archivos de texto que aparece en el <xref:System.Windows.Forms.ListBox> en un <xref:System.Windows.Forms.TextBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2155">The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.</span></span>  
  
 [!code-cpp[Control.DoubleClick#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.DoubleClick/CPP/form1.cpp#1)]
 [!code-csharp[Control.DoubleClick#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.DoubleClick/CS/form1.cs#1)]
 [!code-vb[Control.DoubleClick#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.DoubleClick/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2156">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2156">When overriding <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DoubleClick" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChangedAfterParent">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChangedAfterParent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChangedAfterParent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChangedAfterParent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChangedAfterParent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChangedAfterParent : EventArgs -&gt; unit&#xA;override this.OnDpiChangedAfterParent : EventArgs -&gt; unit" Usage="control.OnDpiChangedAfterParent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2157">Objeto <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2157">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2158">Genera el evento <see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2158">Raises the <see cref="E:System.Windows.Forms.Control.DpiChangedAfterParent" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDpiChangedBeforeParent">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChangedBeforeParent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChangedBeforeParent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChangedBeforeParent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChangedBeforeParent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChangedBeforeParent : EventArgs -&gt; unit&#xA;override this.OnDpiChangedBeforeParent : EventArgs -&gt; unit" Usage="control.OnDpiChangedBeforeParent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2159">Objeto <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2159">An <see cref="T:System.Windows.Forms.DpiChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2160">Genera el evento <see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2160">Raises the <see cref="E:System.Windows.Forms.Control.DpiChangedBeforeParent" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragDrop : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragDrop drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="c1553-2161">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2161">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2162">Genera el evento <see cref="E:System.Windows.Forms.Control.DragDrop" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2162">Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2163">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2163">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2164">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2164">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2165">El método <xref:System.Windows.Forms.Control.OnDragDrop%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2165">The <xref:System.Windows.Forms.Control.OnDragDrop%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2166">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2166">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2167">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2167">When overriding <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DragDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragEnter drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="c1553-2168">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2168">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2169">Genera el evento <see cref="E:System.Windows.Forms.Control.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2169">Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2170">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2170">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2171">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2171">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2172">El método <xref:System.Windows.Forms.Control.OnDragEnter%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2172">The <xref:System.Windows.Forms.Control.OnDragEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2173">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2173">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2174">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2174">When overriding <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : EventArgs -&gt; unit&#xA;override this.OnDragLeave : EventArgs -&gt; unit" Usage="control.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2175">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2175">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2176">Genera el evento <see cref="E:System.Windows.Forms.Control.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2176">Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2177">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2177">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2178">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2178">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2179">El método <xref:System.Windows.Forms.Control.OnDragLeave%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2179">The <xref:System.Windows.Forms.Control.OnDragLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2180">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2180">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2181">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2181">When overriding <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs drgevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs drgevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (drgevent As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ drgevent);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.OnDragOver drgevent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgevent" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="drgevent"><span data-ttu-id="c1553-2182">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2182">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2183">Genera el evento <see cref="E:System.Windows.Forms.Control.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2183">Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2184">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2184">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2185">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2185">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2186">El método <xref:System.Windows.Forms.Control.OnDragOver%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2186">The <xref:System.Windows.Forms.Control.OnDragOver%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2187">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2187">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2188">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2188">When overriding <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="control.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2189">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2189">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2190">Genera el evento <see cref="E:System.Windows.Forms.Control.EnabledChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2190">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2191">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2191">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2192">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2192">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2193">El método <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2193">The <xref:System.Windows.Forms.Control.OnEnabledChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2194">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2194">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2195">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2195">When overriding <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.EnabledChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
      </Docs>
    </Member>
    <Member MemberName="OnEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEnter : EventArgs -&gt; unit&#xA;override this.OnEnter : EventArgs -&gt; unit" Usage="control.OnEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2196">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2196">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2197">Genera el evento <see cref="E:System.Windows.Forms.Control.Enter" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2197">Raises the <see cref="E:System.Windows.Forms.Control.Enter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2198">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2198">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2199">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2199">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2200">El método <xref:System.Windows.Forms.Control.OnEnter%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2200">The <xref:System.Windows.Forms.Control.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2201">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2201">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2202">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.Enter> eventos para cambiar los colores de primer plano y fondo un <xref:System.Windows.Forms.TextBox> bajo ciertas condiciones.</span><span class="sxs-lookup"><span data-stu-id="c1553-2202">The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2203">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2203">When overriding <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Enter" />
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFontChanged : EventArgs -&gt; unit&#xA;override this.OnFontChanged : EventArgs -&gt; unit" Usage="control.OnFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2204">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2204">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2205">Genera el evento <see cref="E:System.Windows.Forms.Control.FontChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2205">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2206">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2206">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2207">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2207">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2208">El método <xref:System.Windows.Forms.Control.OnFontChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2208">The <xref:System.Windows.Forms.Control.OnFontChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2209">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2209">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2210">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2210">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2211">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2211">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2212">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2212">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2213">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2213">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2214">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2214">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2215">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2215">When overriding <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnForeColorChanged : EventArgs -&gt; unit" Usage="control.OnForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2216">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2216">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2217">Genera el evento <see cref="E:System.Windows.Forms.Control.ForeColorChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2217">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2218">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2218">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2219">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2219">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2220">El método <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2220">The <xref:System.Windows.Forms.Control.OnForeColorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2221">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2221">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2222">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2222">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2223">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2223">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2224">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2224">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2225">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2225">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2226">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2226">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2227">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2227">When overriding <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs gfbevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (gfbevent As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ gfbevent);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.Forms.GiveFeedbackEventArgs -&gt; unit" Usage="control.OnGiveFeedback gfbevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gfbevent" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="gfbevent"><span data-ttu-id="c1553-2228">Objeto <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2228">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2229">Genera el evento <see cref="E:System.Windows.Forms.Control.GiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2229">Raises the <see cref="E:System.Windows.Forms.Control.GiveFeedback" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2230">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2230">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2231">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2231">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2232">El método <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2232">The <xref:System.Windows.Forms.Control.OnGiveFeedback%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2233">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2233">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2234">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2234">When overriding <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : EventArgs -&gt; unit&#xA;override this.OnGotFocus : EventArgs -&gt; unit" Usage="control.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2235">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2235">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2236">Genera el evento <see cref="E:System.Windows.Forms.Control.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2236">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2237">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2237">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2238">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2238">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2239">El método <xref:System.Windows.Forms.Control.OnGotFocus%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2239">The <xref:System.Windows.Forms.Control.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2240">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2240">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2241">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2241">When overriding <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHandleCreated : EventArgs -&gt; unit&#xA;override this.OnHandleCreated : EventArgs -&gt; unit" Usage="control.OnHandleCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2242">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2242">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2243">Genera el evento <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2243">Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2244">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2244">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2245">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2245">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2246">El método <xref:System.Windows.Forms.Control.OnHandleCreated%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2246">The <xref:System.Windows.Forms.Control.OnHandleCreated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2247">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2247">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2248">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2248">When overriding <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.HandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleDestroyed">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleDestroyed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleDestroyed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleDestroyed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleDestroyed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnHandleDestroyed : EventArgs -&gt; unit&#xA;override this.OnHandleDestroyed : EventArgs -&gt; unit" Usage="control.OnHandleDestroyed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2249">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2249">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2250">Genera el evento <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2250">Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2251">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2251">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2252">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2252">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2253">El método <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2253">The <xref:System.Windows.Forms.Control.OnHandleDestroyed%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2254">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2254">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2255">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2255">When overriding <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.HandleDestroyed" />
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnHelpRequested">
      <MemberSignature Language="C#" Value="protected virtual void OnHelpRequested (System.Windows.Forms.HelpEventArgs hevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHelpRequested(class System.Windows.Forms.HelpEventArgs hevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHelpRequested (hevent As HelpEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHelpRequested(System::Windows::Forms::HelpEventArgs ^ hevent);" />
      <MemberSignature Language="F#" Value="abstract member OnHelpRequested : System.Windows.Forms.HelpEventArgs -&gt; unit&#xA;override this.OnHelpRequested : System.Windows.Forms.HelpEventArgs -&gt; unit" Usage="control.OnHelpRequested hevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hevent" Type="System.Windows.Forms.HelpEventArgs" />
      </Parameters>
      <Docs>
        <param name="hevent"><span data-ttu-id="c1553-2256">Objeto <see cref="T:System.Windows.Forms.HelpEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2256">A <see cref="T:System.Windows.Forms.HelpEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2257">Genera el evento <see cref="E:System.Windows.Forms.Control.HelpRequested" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2257">Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2258">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2258">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2259">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2259">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2260">El método <xref:System.Windows.Forms.Control.OnHelpRequested%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2260">The <xref:System.Windows.Forms.Control.OnHelpRequested%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2261">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2261">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2262">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2262">When overriding <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.HelpRequested" />
      </Docs>
    </Member>
    <Member MemberName="OnImeModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnImeModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnImeModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnImeModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnImeModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnImeModeChanged : EventArgs -&gt; unit&#xA;override this.OnImeModeChanged : EventArgs -&gt; unit" Usage="control.OnImeModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2263">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2263">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2264">Genera el evento <see cref="E:System.Windows.Forms.Control.ImeModeChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2264">Raises the <see cref="E:System.Windows.Forms.Control.ImeModeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2265">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2265">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2266">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2266">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2267">El método <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2267">The <xref:System.Windows.Forms.Control.OnImeModeChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2268">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2268">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2269">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2269">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2270">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2270">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2271">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2271">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2272">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2272">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2273">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2273">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2274">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2274">When overriding <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ImeModeChanged" />
        <altmember cref="P:System.Windows.Forms.Control.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="OnInvalidated">
      <MemberSignature Language="C#" Value="protected virtual void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInvalidated(class System.Windows.Forms.InvalidateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInvalidated (e As InvalidateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInvalidated(System::Windows::Forms::InvalidateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit&#xA;override this.OnInvalidated : System.Windows.Forms.InvalidateEventArgs -&gt; unit" Usage="control.OnInvalidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.InvalidateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2275">Objeto <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2275">An <see cref="T:System.Windows.Forms.InvalidateEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2276">Genera el evento <see cref="E:System.Windows.Forms.Control.Invalidated" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2276">Raises the <see cref="E:System.Windows.Forms.Control.Invalidated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2277">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2277">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2278">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2278">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2279">El método <xref:System.Windows.Forms.Control.OnInvalidated%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2279">The <xref:System.Windows.Forms.Control.OnInvalidated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2280">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2280">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2281">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2281">When overriding <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Invalidated" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2282">Objeto <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2282">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2283">Genera el evento <see cref="E:System.Windows.Forms.Control.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2283">Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2284">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2284">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2285">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2285">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2286">El método <xref:System.Windows.Forms.Control.OnKeyDown%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2286">The <xref:System.Windows.Forms.Control.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2287">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2287">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2288">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.KeyDown> evento para determinar el tipo de carácter especificado en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2288">The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2289">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2289">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit&#xA;override this.OnKeyPress : System.Windows.Forms.KeyPressEventArgs -&gt; unit" Usage="control.OnKeyPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2290">Objeto <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2290">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2291">Genera el evento <see cref="E:System.Windows.Forms.Control.KeyPress" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2291">Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2292">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2292">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2293">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2293">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2294">El método <xref:System.Windows.Forms.Control.OnKeyPress%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2294">The <xref:System.Windows.Forms.Control.OnKeyPress%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2295">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2295">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2296">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.KeyPress> eventos para evitar que los caracteres de escritura del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2296">The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2297">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2297">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2298">Objeto <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2298">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2299">Genera el evento <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2299">Raises the <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2300">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2300">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2301">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2301">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2302">El método <xref:System.Windows.Forms.Control.OnKeyUp%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2302">The <xref:System.Windows.Forms.Control.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2303">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2303">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2304">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.KeyUp> evento con el <xref:System.Windows.Forms.Help> clase para mostrar la Ayuda de estilo emergente al usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2304">The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.</span></span>  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2305">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2305">When overriding <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="C#" Value="protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs levent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayout(class System.Windows.Forms.LayoutEventArgs levent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayout (levent As LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayout(System::Windows::Forms::LayoutEventArgs ^ levent);" />
      <MemberSignature Language="F#" Value="abstract member OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit&#xA;override this.OnLayout : System.Windows.Forms.LayoutEventArgs -&gt; unit" Usage="control.OnLayout levent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levent" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="levent"><span data-ttu-id="c1553-2306">Objeto <see cref="T:System.Windows.Forms.LayoutEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2306">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2307">Genera el evento <see cref="E:System.Windows.Forms.Control.Layout" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2307">Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2308">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2308">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2309">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2309">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2310">El método <xref:System.Windows.Forms.Control.OnLayout%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2310">The <xref:System.Windows.Forms.Control.OnLayout%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2311">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2311">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2312">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> método para que los delegados registrados reciban el evento y para típico de acoplamiento y delimitación de funciones para trabajar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2312">When overriding <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)" /> method so that registered delegates receive the event and for typical docking and anchoring functions to work.</span></span> <span data-ttu-id="c1553-2313">Las clases derivadas deben invalidar este método para realizar cualquier lógica de diseño personalizado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2313">Derived classes should override this method to do any custom layout logic.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="OnLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLeave : EventArgs -&gt; unit&#xA;override this.OnLeave : EventArgs -&gt; unit" Usage="control.OnLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2314">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2314">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2315">Genera el evento <see cref="E:System.Windows.Forms.Control.Leave" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2315">Raises the <see cref="E:System.Windows.Forms.Control.Leave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2316">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2316">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2317">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2317">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2318">El método <xref:System.Windows.Forms.Control.OnLeave%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2318">The <xref:System.Windows.Forms.Control.OnLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2319">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2319">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2320">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.Leave> eventos para restablecer un control a su estado anterior.</span><span class="sxs-lookup"><span data-stu-id="c1553-2320">The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.</span></span>  
  
 [!code-cpp[Control.Enter#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Enter/CPP/form1.cpp#1)]
 [!code-csharp[Control.Enter#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Enter/CS/form1.cs#1)]
 [!code-vb[Control.Enter#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Enter/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2321">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2321">When overriding <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Leave" />
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="control.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2322">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2322">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2323">Genera el evento <see cref="E:System.Windows.Forms.Control.LocationChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2323">Raises the <see cref="E:System.Windows.Forms.Control.LocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2324">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2324">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2325">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2325">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2326">El método <xref:System.Windows.Forms.Control.OnLocationChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2326">The <xref:System.Windows.Forms.Control.OnLocationChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2327">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2327">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2328">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2328">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2329">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2329">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName* `Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2330">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2330">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2331">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2331">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2332">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2332">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2333">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2333">When overriding <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.LocationChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : EventArgs -&gt; unit&#xA;override this.OnLostFocus : EventArgs -&gt; unit" Usage="control.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2334">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2334">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2335">Genera el evento <see cref="E:System.Windows.Forms.Control.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2335">Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2336">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2336">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2337">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2337">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2338">El método <xref:System.Windows.Forms.Control.OnLostFocus%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2338">The <xref:System.Windows.Forms.Control.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2339">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2339">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2340">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2340">When overriding <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnMarginChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMarginChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMarginChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMarginChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMarginChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMarginChanged : EventArgs -&gt; unit&#xA;override this.OnMarginChanged : EventArgs -&gt; unit" Usage="control.OnMarginChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2341">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2341">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2342">Genera el evento <see cref="E:System.Windows.Forms.Control.MarginChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2342">Raises the <see cref="E:System.Windows.Forms.Control.MarginChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2343">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2343">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2344">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2344">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2345">El método <xref:System.Windows.Forms.Control.OnMarginChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2345">The <xref:System.Windows.Forms.Control.OnMarginChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2346">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2346">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2347">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2347">When overriding <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseCaptureChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseCaptureChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseCaptureChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseCaptureChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseCaptureChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseCaptureChanged : EventArgs -&gt; unit&#xA;override this.OnMouseCaptureChanged : EventArgs -&gt; unit" Usage="control.OnMouseCaptureChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2348">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2348">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2349">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2349">Raises the <see cref="E:System.Windows.Forms.Control.MouseCaptureChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2350">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2350">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2351">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2351">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2352">El método <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2352">The <xref:System.Windows.Forms.Control.OnMouseCaptureChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2353">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2353">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2354">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2354">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2355">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2355">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2356">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseClick" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2356">Raises the <see cref="E:System.Windows.Forms.Control.MouseClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2357">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2357">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2358">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2358">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2359">El método <xref:System.Windows.Forms.Control.OnMouseClick%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2359">The <xref:System.Windows.Forms.Control.OnMouseClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2360">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2360">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2361">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2361">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDoubleClick">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDoubleClick(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDoubleClick (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDoubleClick(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDoubleClick : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseDoubleClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2362">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2362">An <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2363">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2363">Raises the <see cref="E:System.Windows.Forms.Control.MouseDoubleClick" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2364">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2364">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2365">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2365">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2366">El método <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2366">The <xref:System.Windows.Forms.Control.OnMouseDoubleClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2367">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2367">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2368">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2368">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2369">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2369">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2370">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2370">Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2371">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2371">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2372">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2372">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2373">El método <xref:System.Windows.Forms.Control.OnMouseDown%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2373">The <xref:System.Windows.Forms.Control.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2374">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2374">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2375">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2375">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseDown" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : EventArgs -&gt; unit&#xA;override this.OnMouseEnter : EventArgs -&gt; unit" Usage="control.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2376">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2376">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2377">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2377">Raises the <see cref="E:System.Windows.Forms.Control.MouseEnter" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2378">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2378">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2379">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2379">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2380">El método <xref:System.Windows.Forms.Control.OnMouseEnter%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2380">The <xref:System.Windows.Forms.Control.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2381">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2381">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2382">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2382">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseEnter" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseHover : EventArgs -&gt; unit&#xA;override this.OnMouseHover : EventArgs -&gt; unit" Usage="control.OnMouseHover e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2383">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2383">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2384">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseHover" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2384">Raises the <see cref="E:System.Windows.Forms.Control.MouseHover" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2385">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2385">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2386">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2386">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2387">El método <xref:System.Windows.Forms.Control.OnMouseHover%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2387">The <xref:System.Windows.Forms.Control.OnMouseHover%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2388">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2388">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2389">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Windows.Forms.Control.OnMouseHover%2A> y <xref:System.Windows.Forms.Control.OnMouseMove%2A> métodos en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2389">The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class.</span></span> <span data-ttu-id="c1553-2390">Para ejecutar el ejemplo, pegue el código siguiente en un formulario nuevo y pegue esta clase, que forman el mismo archivo, después del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2390">To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</span></span> <span data-ttu-id="c1553-2391">Agregue un botón de tipo `FunButton` al formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2391">Add a button of type `FunButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2392">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2392">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseHover(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseHover" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : EventArgs -&gt; unit&#xA;override this.OnMouseLeave : EventArgs -&gt; unit" Usage="control.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2393">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2393">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2394">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2394">Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2395">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2395">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2396">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2396">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2397">El método <xref:System.Windows.Forms.Control.OnMouseLeave%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2397">The <xref:System.Windows.Forms.Control.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2398">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2398">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2399">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2399">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseLeave" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2400">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2400">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2401">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2401">Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2402">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2402">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2403">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2403">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2404">El método <xref:System.Windows.Forms.Control.OnMouseMove%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2404">The <xref:System.Windows.Forms.Control.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2405">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2405">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2406">En el ejemplo de código siguiente se muestra cómo invalidar el <xref:System.Windows.Forms.Control.OnMouseHover%2A> y <xref:System.Windows.Forms.Control.OnMouseMove%2A> métodos en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2406">The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class.</span></span> <span data-ttu-id="c1553-2407">Para ejecutar el ejemplo, pegue el código siguiente en un formulario nuevo y pegue esta clase, que forman el mismo archivo, después del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2407">To run the example, paste the following code in a new form and paste this class, forming the same file, after the form.</span></span> <span data-ttu-id="c1553-2408">Agregue un botón de tipo `FunButton` al formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2408">Add a button of type `FunButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ControlDefaultProperties/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2409">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2409">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseMove" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2410">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2410">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2411">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2411">Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2412">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2412">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2413">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2413">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2414">El método <xref:System.Windows.Forms.Control.OnMouseUp%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2414">The <xref:System.Windows.Forms.Control.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2415">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2415">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2416">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2416">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseUp" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2417">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2417">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2418">Genera el evento <see cref="E:System.Windows.Forms.Control.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2418">Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2419">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2419">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2420">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2420">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2421">El método <xref:System.Windows.Forms.Control.OnMouseWheel%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2421">The <xref:System.Windows.Forms.Control.OnMouseWheel%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2422">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2422">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2423">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2423">When overriding <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.MouseWheel" />
        <altmember cref="T:System.Windows.Forms.MouseEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMove (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMove(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMove (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMove(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMove : EventArgs -&gt; unit&#xA;override this.OnMove : EventArgs -&gt; unit" Usage="control.OnMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2424">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2424">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2425">Genera el evento <see cref="E:System.Windows.Forms.Control.Move" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2425">Raises the <see cref="E:System.Windows.Forms.Control.Move" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2426">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2426">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2427">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2427">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2428">El método <xref:System.Windows.Forms.Control.OnMove%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2428">The <xref:System.Windows.Forms.Control.OnMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2429">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2429">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2430">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.Move> eventos para mostrar la ubicación del formulario en coordenadas de pantalla en la barra de título del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2430">The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.</span></span>  
  
 [!code-cpp[Control.Move#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Move/CPP/form1.cpp#1)]
 [!code-csharp[Control.Move#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Move/CS/form1.cs#1)]
 [!code-vb[Control.Move#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Move/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2431">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2431">When overriding <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnMove(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Move" />
      </Docs>
    </Member>
    <Member MemberName="OnNotifyMessage">
      <MemberSignature Language="C#" Value="protected virtual void OnNotifyMessage (System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNotifyMessage(valuetype System.Windows.Forms.Message m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNotifyMessage (m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNotifyMessage(System::Windows::Forms::Message m);" />
      <MemberSignature Language="F#" Value="abstract member OnNotifyMessage : System.Windows.Forms.Message -&gt; unit&#xA;override this.OnNotifyMessage : System.Windows.Forms.Message -&gt; unit" Usage="control.OnNotifyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="c1553-2432"><see cref="T:System.Windows.Forms.Message" /> que representa el mensaje de Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-2432">A <see cref="T:System.Windows.Forms.Message" /> that represents the Windows message.</span></span></param>
        <summary><span data-ttu-id="c1553-2433">Notifica al control los mensajes de Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-2433">Notifies the control of Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2434">El <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> se llama al método si el control `EnableNotifyMessage` bit de estilo se establece <xref:System.Windows.Forms.ControlStyles>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2434">The <xref:System.Windows.Forms.Control.OnNotifyMessage%2A> method is called if the control's `EnableNotifyMessage` style bit is set in <xref:System.Windows.Forms.ControlStyles>.</span></span> <span data-ttu-id="c1553-2435">El `EnableNotifyMessage` aplicar un estilo en <xref:System.Windows.Forms.ControlStyles> habilita el control que se le notifique cuando el <xref:System.Windows.Forms.Control.WndProc%2A> método recibe un mensaje de Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-2435">The `EnableNotifyMessage` style in <xref:System.Windows.Forms.ControlStyles> enables the control to be notified when the <xref:System.Windows.Forms.Control.WndProc%2A> method receives a Windows message.</span></span> <span data-ttu-id="c1553-2436">Con este método, los controles de confianza parcial pueden escuchar mensajes de Windows sin lo que les permite modificar el mensaje.</span><span class="sxs-lookup"><span data-stu-id="c1553-2436">With this method, semi-trusted controls can listen for Windows messages without enabling them to modify the message.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2437">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> en una clase derivada, una llamada a la clase base <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> método no es necesario porque no hay ninguna implementación inicial.</span><span class="sxs-lookup"><span data-stu-id="c1553-2437">When overriding <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> in a derived class, calling the base class's <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is not necessary because there is no initial implementation.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaddingChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPaddingChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaddingChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaddingChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaddingChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaddingChanged : EventArgs -&gt; unit&#xA;override this.OnPaddingChanged : EventArgs -&gt; unit" Usage="control.OnPaddingChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2438">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2438">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2439">Genera el evento <see cref="E:System.Windows.Forms.Control.PaddingChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2439">Raises the <see cref="E:System.Windows.Forms.Control.PaddingChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2440">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2440">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2441">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2441">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2442">El método <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2442">The <xref:System.Windows.Forms.Control.OnPaddingChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2443">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2443">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2444">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2444">When overriding <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2445">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2445">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2446">Genera el evento <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2446">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2447">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2447">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2448">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2448">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2449">El <xref:System.Windows.Forms.Control.OnPaint%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2449">The <xref:System.Windows.Forms.Control.OnPaint%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2450">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2450">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2451">El ejemplo de código siguiente permite al usuario arrastrar una imagen o un archivo de imagen del formulario y se muestran en el punto en el que se quita.</span><span class="sxs-lookup"><span data-stu-id="c1553-2451">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped.</span></span> <span data-ttu-id="c1553-2452">El <xref:System.Windows.Forms.Control.OnPaint%2A> se invalida el método para volver a dibujar la imagen cada vez que se pinta el formulario; en caso contrario, la imagen sólo se conserva hasta la siguiente operación de dibujo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2452">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="c1553-2453">El <xref:System.Windows.Forms.Control.DragEnter> método de control de eventos determina el tipo de datos que se arrastran al formulario y proporciona la información apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2453">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="c1553-2454">El <xref:System.Windows.Forms.Control.DragDrop> método de control de eventos muestra la imagen en el formulario, si un <xref:System.Drawing.Image> pueden crearse a partir de los datos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2454">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="c1553-2455">Dado que el <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> los valores son las coordenadas de pantalla, el ejemplo se usa el <xref:System.Windows.Forms.Control.PointToClient%2A> método convertirlos a coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2455">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2456">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2456">When overriding <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Paint" />
      </Docs>
    </Member>
    <Member MemberName="OnPaintBackground">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintBackground(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintBackground (pevent As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintBackground(System::Windows::Forms::PaintEventArgs ^ pevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPaintBackground : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPaintBackground pevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent"><span data-ttu-id="c1553-2457"><see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene información sobre el control que se va a pintar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2457">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains information about the control to paint.</span></span></param>
        <summary><span data-ttu-id="c1553-2458">Pinta el fondo del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2458">Paints the background of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2459">El <xref:System.Windows.Forms.Control.OnPaintBackground%2A> método permite que las clases derivadas controlen en segundo plano de Windows borrar las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="c1553-2459">The <xref:System.Windows.Forms.Control.OnPaintBackground%2A> method enables derived classes to handle Windows background erase requests.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2460">Las clases herederas deben invalidar este método para controlar la solicitud de borrado en segundo plano de windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-2460">Inheriting classes should override this method to handle the erase background request from windows.</span></span> <span data-ttu-id="c1553-2461">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> en una clase derivada no es necesario llamar a la clase base <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2461">When overriding <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" /> in a derived class it is not necessary to call the base class's <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBackColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackColorChanged : EventArgs -&gt; unit" Usage="control.OnParentBackColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2462">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2462">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2463">Provoca el evento <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.BackColor" /> del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2463">Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackColor" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2464">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2464">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2465">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2465">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2466">El <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2466">The <xref:System.Windows.Forms.Control.OnParentBackColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2467">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2467">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2468">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2468">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2469">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2469">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2470">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2470">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2471">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2471">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2472">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2472">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2473">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2473">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BackColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBackgroundImageChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBackgroundImageChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBackgroundImageChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBackgroundImageChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBackgroundImageChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBackgroundImageChanged : EventArgs -&gt; unit&#xA;override this.OnParentBackgroundImageChanged : EventArgs -&gt; unit" Usage="control.OnParentBackgroundImageChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2474">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2474">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2475">Provoca el evento <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2475">Raises the <see cref="E:System.Windows.Forms.Control.BackgroundImageChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2476">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2476">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2477">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2477">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2478">El <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2478">The <xref:System.Windows.Forms.Control.OnParentBackgroundImageChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2479">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2479">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2480">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2480">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2481">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2481">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2482">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2482">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2483">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2483">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2484">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2484">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2485">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2485">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BackgroundImageChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentBindingContextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentBindingContextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentBindingContextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentBindingContextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentBindingContextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentBindingContextChanged : EventArgs -&gt; unit&#xA;override this.OnParentBindingContextChanged : EventArgs -&gt; unit" Usage="control.OnParentBindingContextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2486">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2486">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2487">Provoca el evento <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.BindingContext" /> del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2487">Raises the <see cref="E:System.Windows.Forms.Control.BindingContextChanged" /> event when the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2488">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2488">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2489">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2489">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2490">El <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2490">The <xref:System.Windows.Forms.Control.OnParentBindingContextChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2491">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2491">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2492">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2492">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2493">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2493">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2494">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2494">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2495">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2495">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2496">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2496">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2497">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2497">When overriding <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.BindingContextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentChanged : EventArgs -&gt; unit&#xA;override this.OnParentChanged : EventArgs -&gt; unit" Usage="control.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2498">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2498">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2499">Genera el evento <see cref="E:System.Windows.Forms.Control.ParentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2499">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2500">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2500">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2501">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2501">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2502">El <xref:System.Windows.Forms.Control.OnParentChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2502">The <xref:System.Windows.Forms.Control.OnParentChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2503">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2503">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2504">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2504">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2505">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2505">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2506">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2506">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2507">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2507">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2508">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2508">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2509">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2509">When overriding <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ParentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentCursorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentCursorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentCursorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentCursorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentCursorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentCursorChanged : EventArgs -&gt; unit&#xA;override this.OnParentCursorChanged : EventArgs -&gt; unit" Usage="control.OnParentCursorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2510">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2510">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2511">Genera el evento <see cref="E:System.Windows.Forms.Control.CursorChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2511">Raises the <see cref="E:System.Windows.Forms.Control.CursorChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2512">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2512">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2513">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2513">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2514">El método <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2514">The <xref:System.Windows.Forms.Control.OnParentCursorChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2515">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2515">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2516">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2516">When overriding <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnParentEnabledChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentEnabledChanged : EventArgs -&gt; unit&#xA;override this.OnParentEnabledChanged : EventArgs -&gt; unit" Usage="control.OnParentEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2517">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2517">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2518">Provoca el evento <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Enabled" /> del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2518">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Enabled" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2519">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2519">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2520">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2520">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2521">El <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2521">The <xref:System.Windows.Forms.Control.OnParentEnabledChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2522">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2522">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2523">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2523">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2524">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2524">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2525">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2525">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2526">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2526">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2527">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2527">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2528">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2528">When overriding <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.EnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentFontChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentFontChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentFontChanged : EventArgs -&gt; unit&#xA;override this.OnParentFontChanged : EventArgs -&gt; unit" Usage="control.OnParentFontChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2529">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2529">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2530">Provoca el evento <see cref="E:System.Windows.Forms.Control.FontChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Font" /> del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2530">Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Font" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2531">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2531">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2532">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2532">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2533">El <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2533">The <xref:System.Windows.Forms.Control.OnParentFontChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2534">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2534">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2535">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2535">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2536">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2536">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2537">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2537">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2538">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2538">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2539">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2539">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2540">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2540">When overriding <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.FontChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentForeColorChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentForeColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentForeColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentForeColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentForeColorChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentForeColorChanged : EventArgs -&gt; unit&#xA;override this.OnParentForeColorChanged : EventArgs -&gt; unit" Usage="control.OnParentForeColorChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2541">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2541">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2542">Provoca el evento <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.ForeColor" /> del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2542">Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged" /> event when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2543">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2543">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2544">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2544">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2545">El <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2545">The <xref:System.Windows.Forms.Control.OnParentForeColorChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2546">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2546">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2547">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2547">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2548">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2548">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2549">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2549">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2550">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2550">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2551">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2551">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2552">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2552">When overriding <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.ForeColorChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnParentRightToLeftChanged : EventArgs -&gt; unit" Usage="control.OnParentRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2553">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2553">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2554">Provoca el evento <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.RightToLeft" /> del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2554">Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2555">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2555">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2556">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2556">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2557">El <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2557">The <xref:System.Windows.Forms.Control.OnParentRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2558">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2558">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2559">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2559">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2560">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2560">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2561">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2561">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2562">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2562">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2563">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2563">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2564">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2564">When overriding <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnParentVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnParentVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnParentVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnParentVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnParentVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnParentVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnParentVisibleChanged : EventArgs -&gt; unit" Usage="control.OnParentVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2565">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2565">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2566">Provoca el evento <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Visible" /> del contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2566">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value of the control's container changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2567">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2567">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2568">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2568">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2569">El <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2569">The <xref:System.Windows.Forms.Control.OnParentVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2570">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2570">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2571">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2571">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2572">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2572">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2573">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2573">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2574">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2574">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2575">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2575">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2576">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2576">When overriding <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Forms.PreviewKeyDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Forms.PreviewKeyDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As PreviewKeyDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Forms::PreviewKeyDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventArgs -&gt; unit" Usage="control.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PreviewKeyDownEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2577">Objeto <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2577">A <see cref="T:System.Windows.Forms.PreviewKeyDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2578">Genera el evento <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2578">Raises the <see cref="E:System.Windows.Forms.Control.PreviewKeyDown" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2579">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2579">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2580">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2580">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2581">El método <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2581">The <xref:System.Windows.Forms.Control.OnPreviewKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2582">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2582">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2583">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2583">When overriding <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnPrint">
      <MemberSignature Language="C#" Value="protected virtual void OnPrint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPrint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPrint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPrint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPrint : System.Windows.Forms.PaintEventArgs -&gt; unit&#xA;override this.OnPrint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.OnPrint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2584">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2584">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2585">Genera el evento <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2585">Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2586">Si el `UserPaint` de bits de la <xref:System.Windows.Forms.ControlStyles> está establecido, se puede reemplazar <xref:System.Windows.Forms.Control.OnPrint%2A> hacer dibujar en capas.</span><span class="sxs-lookup"><span data-stu-id="c1553-2586">If the `UserPaint` bit of the <xref:System.Windows.Forms.ControlStyles> is set, you can override <xref:System.Windows.Forms.Control.OnPrint%2A> to do layered painting.</span></span> <span data-ttu-id="c1553-2587">Vea <xref:System.Windows.Forms.Control.SetStyle%2A> para obtener más información.</span><span class="sxs-lookup"><span data-stu-id="c1553-2587">See <xref:System.Windows.Forms.Control.SetStyle%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1553-2588">El parámetro <paramref name="e" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2588">The <paramref name="e" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.Forms.QueryContinueDragEventArgs qcdevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (qcdevent As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::Forms::QueryContinueDragEventArgs ^ qcdevent);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.Forms.QueryContinueDragEventArgs -&gt; unit" Usage="control.OnQueryContinueDrag qcdevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qcdevent" Type="System.Windows.Forms.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="qcdevent"><span data-ttu-id="c1553-2589">Objeto <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2589">A <see cref="T:System.Windows.Forms.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2590">Genera el evento <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2590">Raises the <see cref="E:System.Windows.Forms.Control.QueryContinueDrag" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2591">Una vez iniciada la operación de arrastre, este método se llama varias veces en el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] hasta que se cancela o finaliza la operación de arrastre.</span><span class="sxs-lookup"><span data-stu-id="c1553-2591">After dragging has begun, this method is called repeatedly by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] until the drag operation is either canceled or completed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-2592">Invalide este método si desea cambiar el punto en que se cancela el arrastre o en que se produce una colocación.</span><span class="sxs-lookup"><span data-stu-id="c1553-2592">Override this method if you want to change the point at which dragging is canceled or at which a drop occurs.</span></span>  
  
 <span data-ttu-id="c1553-2593">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2593">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2594">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2594">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2595">El <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2595">The <xref:System.Windows.Forms.Control.OnQueryContinueDrag%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2596">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2596">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2597">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2597">When overriding <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnRegionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRegionChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRegionChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRegionChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRegionChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRegionChanged : EventArgs -&gt; unit&#xA;override this.OnRegionChanged : EventArgs -&gt; unit" Usage="control.OnRegionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2598">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2598">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2599">Genera el evento <see cref="E:System.Windows.Forms.Control.RegionChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2599">Raises the <see cref="E:System.Windows.Forms.Control.RegionChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2600">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2600">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2601">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2601">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2602">El método <xref:System.Windows.Forms.Control.OnRegionChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2602">The <xref:System.Windows.Forms.Control.OnRegionChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2603">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2603">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2604">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2604">When overriding <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnResize">
      <MemberSignature Language="C#" Value="protected virtual void OnResize (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnResize(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnResize (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnResize(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnResize : EventArgs -&gt; unit&#xA;override this.OnResize : EventArgs -&gt; unit" Usage="control.OnResize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2605">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2605">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2606">Genera el evento <see cref="E:System.Windows.Forms.Control.Resize" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2606">Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2607">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2607">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2608">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2608">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2609">El <xref:System.Windows.Forms.Control.OnResize%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2609">The <xref:System.Windows.Forms.Control.OnResize%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2610">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2610">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2611">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2611">When overriding <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method so that registered delegates receive the event.</span></span> <span data-ttu-id="c1553-2612">El <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> método se puede llamar durante la construcción, por lo que si se reemplaza <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> puede llamarse antes de que se llama al constructor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2612">The <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> method can be called during construction, so if you override <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" /> it can be called before the control constructor is called.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="OnRightToLeftChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRightToLeftChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRightToLeftChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRightToLeftChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRightToLeftChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRightToLeftChanged : EventArgs -&gt; unit&#xA;override this.OnRightToLeftChanged : EventArgs -&gt; unit" Usage="control.OnRightToLeftChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2613">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2613">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2614">Genera el evento <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2614">Raises the <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2615">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2615">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2616">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2616">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2617">El <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2617">The <xref:System.Windows.Forms.Control.OnRightToLeftChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2618">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2618">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2619">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2619">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2620">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2620">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2621">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2621">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2622">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2622">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2623">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2623">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2624">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2624">When overriding <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.RightToLeftChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSizeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSizeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSizeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSizeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSizeChanged : EventArgs -&gt; unit&#xA;override this.OnSizeChanged : EventArgs -&gt; unit" Usage="control.OnSizeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2625">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2625">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2626">Genera el evento <see cref="E:System.Windows.Forms.Control.SizeChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2626">Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2627">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2627">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2628">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2628">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2629">El <xref:System.Windows.Forms.Control.OnSizeChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2629">The <xref:System.Windows.Forms.Control.OnSizeChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2630">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2630">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2631">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2631">When overriding <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.SizeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStyleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStyleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStyleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStyleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleChanged : EventArgs -&gt; unit&#xA;override this.OnStyleChanged : EventArgs -&gt; unit" Usage="control.OnStyleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2632">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2632">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2633">Genera el evento <see cref="E:System.Windows.Forms.Control.StyleChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2633">Raises the <see cref="E:System.Windows.Forms.Control.StyleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2634">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2634">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2635">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2635">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2636">El <xref:System.Windows.Forms.Control.OnStyleChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2636">The <xref:System.Windows.Forms.Control.OnStyleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2637">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2637">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2638">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2638">When overriding <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.StyleChanged" />
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="OnSystemColorsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSystemColorsChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSystemColorsChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSystemColorsChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSystemColorsChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSystemColorsChanged : EventArgs -&gt; unit&#xA;override this.OnSystemColorsChanged : EventArgs -&gt; unit" Usage="control.OnSystemColorsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2639">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2639">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2640">Genera el evento <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2640">Raises the <see cref="E:System.Windows.Forms.Control.SystemColorsChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2641">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2641">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2642">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2642">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2643">El <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2643">The <xref:System.Windows.Forms.Control.OnSystemColorsChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2644">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2644">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2645">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2645">When overriding <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.SystemColorsChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTabIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTabIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTabIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTabIndexChanged : EventArgs -&gt; unit&#xA;override this.OnTabIndexChanged : EventArgs -&gt; unit" Usage="control.OnTabIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2646">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2646">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2647">Genera el evento <see cref="E:System.Windows.Forms.Control.TabIndexChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2647">Raises the <see cref="E:System.Windows.Forms.Control.TabIndexChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2648">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2648">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2649">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2649">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2650">El <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2650">The <xref:System.Windows.Forms.Control.OnTabIndexChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2651">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2651">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2652">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2652">When overriding <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.TabIndexChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTabStopChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTabStopChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTabStopChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTabStopChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTabStopChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTabStopChanged : EventArgs -&gt; unit&#xA;override this.OnTabStopChanged : EventArgs -&gt; unit" Usage="control.OnTabStopChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2653">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2653">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2654">Genera el evento <see cref="E:System.Windows.Forms.Control.TabStopChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2654">Raises the <see cref="E:System.Windows.Forms.Control.TabStopChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2655">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2655">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2656">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2656">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2657">El <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2657">The <xref:System.Windows.Forms.Control.OnTabStopChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2658">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2658">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2659">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2659">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2660">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2660">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2661">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2661">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2662">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2662">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2663">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2663">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2664">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2664">When overriding <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.TabStopChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : EventArgs -&gt; unit&#xA;override this.OnTextChanged : EventArgs -&gt; unit" Usage="control.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2665">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2665">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2666">Genera el evento <see cref="E:System.Windows.Forms.Control.TextChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2666">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2667">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2667">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2668">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2668">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2669">El <xref:System.Windows.Forms.Control.OnTextChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2669">The <xref:System.Windows.Forms.Control.OnTextChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2670">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2670">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2671">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2671">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2672">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2672">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2673">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2673">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2674">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2674">When overriding <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnValidated">
      <MemberSignature Language="C#" Value="protected virtual void OnValidated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidated : EventArgs -&gt; unit&#xA;override this.OnValidated : EventArgs -&gt; unit" Usage="control.OnValidated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2675">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2675">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2676">Genera el evento <see cref="E:System.Windows.Forms.Control.Validated" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2676">Raises the <see cref="E:System.Windows.Forms.Control.Validated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2677">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2677">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2678">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2678">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2679">El <xref:System.Windows.Forms.Control.OnValidated%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2679">The <xref:System.Windows.Forms.Control.OnValidated%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2680">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2680">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2681">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2681">When overriding <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="OnValidating">
      <MemberSignature Language="C#" Value="protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidating(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidating (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidating(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnValidating : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="control.OnValidating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2682">Objeto <see cref="T:System.ComponentModel.CancelEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2682">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2683">Genera el evento <see cref="E:System.Windows.Forms.Control.Validating" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2683">Raises the <see cref="E:System.Windows.Forms.Control.Validating" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2684">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2684">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2685">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2685">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2686">El <xref:System.Windows.Forms.Control.OnValidating%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2686">The <xref:System.Windows.Forms.Control.OnValidating%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2687">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2687">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2688">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2688">When overriding <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnVisibleChanged : EventArgs -&gt; unit&#xA;override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="control.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-2689">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2689">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2690">Genera el evento <see cref="E:System.Windows.Forms.Control.VisibleChanged" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2690">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2691">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2691">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="c1553-2692">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2692">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="c1553-2693">El <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> método también permite que las clases derivadas controlen el evento sin asociar un delegado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2693">The <xref:System.Windows.Forms.Control.OnVisibleChanged%2A> method also enables derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="c1553-2694">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2694">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2695">El siguiente ejemplo de código es un método de generación de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2695">The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-2696">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre `On` *PropertyName* `Changed` que genere las correspondientes *PropertyName* `Changed` eventos cuando el *PropertyName* cambia el valor (*PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-2696">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-2697">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda de clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2697">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data.</span></span> <span data-ttu-id="c1553-2698">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2698">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-2699">En este ejemplo requiere que tenga una clase que deriva la <xref:System.Windows.Forms.TextBox> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-2699">This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CPP/onpropertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/CS/onpropertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_OnPropertyChangedEvents/VB/onpropertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2700">Al reemplazar <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> en una clase derivada, asegúrese de llamar al método <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> de la clase base para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2700">When overriding <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Show" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Windows.Forms.Padding with get, set" Usage="System.Windows.Forms.Control.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2701">Obtiene o establece el relleno dentro del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2701">Gets or sets padding within the control.</span></span></summary>
        <value><span data-ttu-id="c1553-2702"><see cref="T:System.Windows.Forms.Padding" /> que representa las características del espaciado interno del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2702">A <see cref="T:System.Windows.Forms.Padding" /> representing the control's internal spacing characteristics.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2703">Para contenedores como <xref:System.Windows.Forms.GroupBox> y <xref:System.Windows.Forms.TabControl>, <xref:System.Windows.Forms.Control.Padding%2A> propiedad obtiene o establece sus respectivas <xref:System.Windows.Forms.Control.DisplayRectangle%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c1553-2703">For containers such as <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TabControl>, the <xref:System.Windows.Forms.Control.Padding%2A> property gets or sets their respective <xref:System.Windows.Forms.Control.DisplayRectangle%2A> properties.</span></span> <span data-ttu-id="c1553-2704">El <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType> propiedad es igual a su <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2704">The <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=nameWithType> property is equal to its <xref:System.Windows.Forms.Control.Padding%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c1553-2705">Los valores predeterminados para los controles reciben <xref:System.Windows.Forms.Control.Padding%2A> que están bastante cerca de directrices de interfaz de usuario de Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-2705">Controls receive default values for <xref:System.Windows.Forms.Control.Padding%2A> that are reasonably close to Windows user interface guidelines.</span></span> <span data-ttu-id="c1553-2706">Pueden que algunos ajustes que sea necesarios para aplicaciones concretas.</span><span class="sxs-lookup"><span data-stu-id="c1553-2706">Some adjustments might still be necessary for particular applications.</span></span>  
  
 <span data-ttu-id="c1553-2707">Todos los controles que implementan <xref:System.Windows.Forms.Control.GetPreferredSize%2A> se amplía en la cantidad de <xref:System.Windows.Forms.Control.Padding%2A> cuando <xref:System.Windows.Forms.Control.AutoSize%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-2707">All controls that implement <xref:System.Windows.Forms.Control.GetPreferredSize%2A> are enlarged by the amount in <xref:System.Windows.Forms.Control.Padding%2A> when <xref:System.Windows.Forms.Control.AutoSize%2A> is `true`.</span></span>  
  
 <span data-ttu-id="c1553-2708">No use los siguientes controles <xref:System.Windows.Forms.Control.Padding%2A>:</span><span class="sxs-lookup"><span data-stu-id="c1553-2708">The following controls do not use <xref:System.Windows.Forms.Control.Padding%2A>:</span></span>  
  
-   <span data-ttu-id="c1553-2709">Los controles que no implementan <xref:System.Windows.Forms.Control.AutoSize%2A> a través de <xref:System.Windows.Forms.Control.GetPreferredSize%2A></span><span class="sxs-lookup"><span data-stu-id="c1553-2709">Controls that do not implement <xref:System.Windows.Forms.Control.AutoSize%2A> through <xref:System.Windows.Forms.Control.GetPreferredSize%2A></span></span>  
  
-   <span data-ttu-id="c1553-2710">Controles personalizados que heredan directamente de <xref:System.Windows.Forms.Control></span><span class="sxs-lookup"><span data-stu-id="c1553-2710">Custom controls that directly inherit from <xref:System.Windows.Forms.Control></span></span>  
  
-   <xref:System.Windows.Forms.AxHost>  
  
-   <xref:System.Windows.Forms.ComboBox>  
  
-   <xref:System.Windows.Forms.DataGridView>  
  
-   <xref:System.Windows.Forms.DateTimePicker>  
  
-   <xref:System.Windows.Forms.HScrollBar>  
  
-   <xref:System.Windows.Forms.ListView>  
  
-   <xref:System.Windows.Forms.MaskedTextBox>  
  
-   <xref:System.Windows.Forms.MonthCalendar>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.PropertyGrid>  
  
-   <xref:System.Windows.Forms.RichTextBox>  
  
-   <xref:System.Windows.Forms.SplitContainer>  
  
-   <xref:System.Windows.Forms.TextBox>  
  
-   <xref:System.Windows.Forms.TextBoxBase>  
  
-   <xref:System.Windows.Forms.TreeView>  
  
-   <xref:System.Windows.Forms.VScrollBar>  
  
-   <xref:System.Windows.Forms.WebBrowser>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaddingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PaddingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PaddingChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.PaddingChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PaddingChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PaddingChanged;" />
      <MemberSignature Language="F#" Value="member this.PaddingChanged : EventHandler " Usage="member this.PaddingChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2711">Se produce cuando cambia el relleno del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2711">Occurs when the control's padding changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2712">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2712">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2713">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-2713">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-2714">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.PaddingChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2714">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.PaddingChanged> event.</span></span> <span data-ttu-id="c1553-2715">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2715">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-2716">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2716">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-2717">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2717">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-2718">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.PaddingChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2718">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.PaddingChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#41](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#41)]
 [!code-vb[System.Windows.Forms.EventExamples#41](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#41)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PaintEventHandler Paint;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PaintEventHandler Paint" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Paint" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Paint As PaintEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PaintEventHandler ^ Paint;" />
      <MemberSignature Language="F#" Value="member this.Paint : System.Windows.Forms.PaintEventHandler " Usage="member this.Paint : System.Windows.Forms.PaintEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PaintEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2719">Se produce cuando vuelve a dibujarse el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2719">Occurs when the control is redrawn.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2720">El <xref:System.Windows.Forms.Control.Paint> evento se produce cuando se vuelve a dibujar el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2720">The <xref:System.Windows.Forms.Control.Paint> event is raised when the control is redrawn.</span></span> <span data-ttu-id="c1553-2721">Pasa una instancia de <xref:System.Windows.Forms.PaintEventArgs> a los métodos que controla la <xref:System.Windows.Forms.Control.Paint> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2721">It passes an instance of <xref:System.Windows.Forms.PaintEventArgs> to the method(s) that handles the <xref:System.Windows.Forms.Control.Paint> event.</span></span>  
  
 <span data-ttu-id="c1553-2722">Al crear un nuevo control personalizado o un control heredado con una apariencia visual diferente, debe proporcionar código para representar el control invalidando el <xref:System.Windows.Forms.Control.OnPaint%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2722">When creating a new custom control or an inherited control with a different visual appearance, you must provide code to render the control by overriding the <xref:System.Windows.Forms.Control.OnPaint%2A> method.</span></span> <span data-ttu-id="c1553-2723">Para obtener más información, consulte [reemplazar el método OnPaint](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) y [Custom Control Painting and Rendering](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2723">For more information, see [Overriding the OnPaint Method](~/docs/framework/winforms/controls/overriding-the-onpaint-method.md) and [Custom Control Painting and Rendering](~/docs/framework/winforms/controls/custom-control-painting-and-rendering.md).</span></span>  
  
 <span data-ttu-id="c1553-2724">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2724">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2725">En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.PictureBox> control en el formulario y usa el <xref:System.Windows.Forms.Control.Paint> eventos para dibujarlo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2725">The following code example creates a <xref:System.Windows.Forms.PictureBox> control on the form and uses the <xref:System.Windows.Forms.Control.Paint> event to draw to it.</span></span>  
  
 [!code-cpp[Control.Paint#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Paint/CPP/form1.cpp#1)]
 [!code-csharp[Control.Paint#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Paint/CS/form1.cs#1)]
 [!code-vb[Control.Paint#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Paint/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Parent" />
      <MemberSignature Language="VB.NET" Value="Public Property Parent As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ Parent { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.Control.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2726">Obtiene o establece el contenedor primario del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2726">Gets or sets the parent container of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-2727"><see cref="T:System.Windows.Forms.Control" /> que representa el control primario o el control contenedor del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2727">A <see cref="T:System.Windows.Forms.Control" /> that represents the parent or container control of the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2728">Establecer el <xref:System.Windows.Forms.Control.Parent%2A> valor de propiedad `null` quita el control de la <xref:System.Windows.Forms.Control.ControlCollection> de su control primario actual.</span><span class="sxs-lookup"><span data-stu-id="c1553-2728">Setting the <xref:System.Windows.Forms.Control.Parent%2A> property value to `null` removes the control from the <xref:System.Windows.Forms.Control.ControlCollection> of its current parent control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2729">El siguiente ejemplo de código utiliza el <xref:System.Windows.Forms.Control.Parent%2A> propiedad y el <xref:System.Windows.Forms.Control.FindForm%2A> método para establecer propiedades en el control primario de un botón y su formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2729">The following code example uses the <xref:System.Windows.Forms.Control.Parent%2A> property and the <xref:System.Windows.Forms.Control.FindForm%2A> method to set properties on the parent control of a button and its form.</span></span>  
  
 [!code-cpp[Control.FindForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.FindForm/CPP/form1.cpp#1)]
 [!code-csharp[Control.FindForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.FindForm/CS/form1.cs#1)]
 [!code-vb[Control.FindForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.FindForm/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-2730">para todas las ventanas obtener este valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2730">for all windows to get this property value.</span></span> <span data-ttu-id="c1553-2731">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="c1553-2731">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.Controls" />
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="ParentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ParentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ParentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.ParentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ParentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ParentChanged;" />
      <MemberSignature Language="F#" Value="member this.ParentChanged : EventHandler " Usage="member this.ParentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2732">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Parent" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2732">Occurs when the <see cref="P:System.Windows.Forms.Control.Parent" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2733">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Parent%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2733">This event is raised if the <xref:System.Windows.Forms.Control.Parent%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-2734">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2734">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Parent" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PerformLayout">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-2735">Obliga al control a aplicar la lógica de diseño a los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-2735">Forces the control to apply layout logic to child controls.</span></span></summary>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PerformLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout();" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : unit -&gt; unit" Usage="control.PerformLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-2736">Obliga al control a aplicar la lógica de diseño a todos sus controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-2736">Forces the control to apply layout logic to all its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2737">Si el <xref:System.Windows.Forms.Control.SuspendLayout%2A> se llamó al método antes de llamar a la <xref:System.Windows.Forms.Control.PerformLayout%2A> método, el <xref:System.Windows.Forms.Control.Layout> se suprime el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2737">If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.</span></span>  
  
 <span data-ttu-id="c1553-2738">El <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> y <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> propiedades de la <xref:System.Windows.Forms.LayoutEventArgs> creado están configurados para `null` si se proporcionó ningún valor cuando el <xref:System.Windows.Forms.Control.PerformLayout%2A> se llamó al método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2738">The <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created are set to `null` if no values were provided when the <xref:System.Windows.Forms.Control.PerformLayout%2A> method was called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2739">En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2739">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method.</span></span> <span data-ttu-id="c1553-2740">También muestra las formas en que el <xref:System.Windows.Forms.Control.Layout> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2740">It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span> <span data-ttu-id="c1553-2741">En este ejemplo, el `Click` controlador de eventos para `Button1` llama explícitamente a <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2741">In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="c1553-2742">El `Click` controlador de eventos para `Button2` llama implícitamente a <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2742">The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="c1553-2743"><xref:System.Windows.Forms.Control.PerformLayout%2A> También se llama cuando se carga el formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2743"><xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded.</span></span> <span data-ttu-id="c1553-2744">`Button3` Devuelve el control al estado que estaba cuando se cargó.</span><span class="sxs-lookup"><span data-stu-id="c1553-2744">`Button3` returns the control to the state it was in when loaded.</span></span> <span data-ttu-id="c1553-2745">En cada caso, el <xref:System.Windows.Forms.Control.Layout> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2745">In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-2746">Esto es un ejemplo completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2746">This is a complete example.</span></span> <span data-ttu-id="c1553-2747">Para ejecutar el ejemplo, pegue el código siguiente en un formulario en blanco.</span><span class="sxs-lookup"><span data-stu-id="c1553-2747">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="PerformLayout">
      <MemberSignature Language="C#" Value="public void PerformLayout (System.Windows.Forms.Control affectedControl, string affectedProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PerformLayout(class System.Windows.Forms.Control affectedControl, string affectedProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PerformLayout (affectedControl As Control, affectedProperty As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PerformLayout(System::Windows::Forms::Control ^ affectedControl, System::String ^ affectedProperty);" />
      <MemberSignature Language="F#" Value="member this.PerformLayout : System.Windows.Forms.Control * string -&gt; unit" Usage="control.PerformLayout (affectedControl, affectedProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="affectedControl" Type="System.Windows.Forms.Control" />
        <Parameter Name="affectedProperty" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="affectedControl"><span data-ttu-id="c1553-2748"><see cref="T:System.Windows.Forms.Control" /> que representa al control modificado más recientemente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2748">A <see cref="T:System.Windows.Forms.Control" /> that represents the most recently changed control.</span></span></param>
        <param name="affectedProperty"><span data-ttu-id="c1553-2749">Nombre de propiedad modificada más recientemente en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2749">The name of the most recently changed property on the control.</span></span></param>
        <summary><span data-ttu-id="c1553-2750">Obliga al control a aplicar la lógica de diseño a todos sus controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-2750">Forces the control to apply layout logic to all its child controls.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2751">Si el <xref:System.Windows.Forms.Control.SuspendLayout%2A> se llamó al método antes de llamar a la <xref:System.Windows.Forms.Control.PerformLayout%2A> método, el <xref:System.Windows.Forms.Control.Layout> se suprime el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2751">If the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method was called before calling the <xref:System.Windows.Forms.Control.PerformLayout%2A> method, the <xref:System.Windows.Forms.Control.Layout> event is suppressed.</span></span>  
  
 <span data-ttu-id="c1553-2752">El `affectedControl` y `affectedProperty` parámetros pueden establecerse en ambos casos `null`.</span><span class="sxs-lookup"><span data-stu-id="c1553-2752">The `affectedControl` and `affectedProperty` parameters can both be set to `null`.</span></span> <span data-ttu-id="c1553-2753">Si lo hace el <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> y <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> propiedades de la <xref:System.Windows.Forms.LayoutEventArgs> creado para establecerse en `null`.</span><span class="sxs-lookup"><span data-stu-id="c1553-2753">Doing so causes the <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> and <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> properties of the <xref:System.Windows.Forms.LayoutEventArgs> created to be set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2754">En el ejemplo de código siguiente se muestra cómo utilizar el método <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2754">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method.</span></span> <span data-ttu-id="c1553-2755">También muestra las formas en que el <xref:System.Windows.Forms.Control.Layout> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2755">It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span> <span data-ttu-id="c1553-2756">En este ejemplo, el `Click` controlador de eventos para `Button1` llama explícitamente a <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2756">In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="c1553-2757">El `Click` controlador de eventos para `Button2` llama implícitamente a <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2757">The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>.</span></span> <span data-ttu-id="c1553-2758"><xref:System.Windows.Forms.Control.PerformLayout%2A> También se llama cuando se carga el formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2758"><xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded.</span></span> <span data-ttu-id="c1553-2759">`Button3` Devuelve el control al estado que estaba cuando se cargó.</span><span class="sxs-lookup"><span data-stu-id="c1553-2759">`Button3` returns the control to the state it was in when loaded.</span></span> <span data-ttu-id="c1553-2760">En cada caso, el <xref:System.Windows.Forms.Control.Layout> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2760">In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-2761">Esto es un ejemplo completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2761">This is a complete example.</span></span> <span data-ttu-id="c1553-2762">Para ejecutar el ejemplo, pegue el código siguiente en un formulario en blanco.</span><span class="sxs-lookup"><span data-stu-id="c1553-2762">To run the example, paste the following code in a blank form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.PerformLayout/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
        <altmember cref="P:System.Windows.Forms.Control.BackgroundImageLayout" />
      </Docs>
    </Member>
    <Member MemberName="PointToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Point PointToClient (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point PointToClient(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToClient (p As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point PointToClient(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.PointToClient : System.Drawing.Point -&gt; System.Drawing.Point" Usage="control.PointToClient p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p"><span data-ttu-id="c1553-2763"><see cref="T:System.Drawing.Point" /> en coordenadas de pantalla que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="c1553-2763">The screen coordinate <see cref="T:System.Drawing.Point" /> to convert.</span></span></param>
        <summary><span data-ttu-id="c1553-2764">Calcula la ubicación del punto especificado de la pantalla, en coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2764">Computes the location of the specified screen point into client coordinates.</span></span></summary>
        <returns><span data-ttu-id="c1553-2765"><see cref="T:System.Drawing.Point" /> que representa el <see cref="T:System.Drawing.Point" /> convertido, <paramref name="p" />, en coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2765">A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in client coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-2766">Habilita de ejemplo de código siguiente se quita al usuario arrastrar una imagen o un archivo de imagen del formulario y se muestra en el punto.</span><span class="sxs-lookup"><span data-stu-id="c1553-2766">The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped.</span></span> <span data-ttu-id="c1553-2767">El <xref:System.Windows.Forms.Control.OnPaint%2A> se invalida el método para volver a dibujar la imagen cada vez que se pinta el formulario; en caso contrario, la imagen sólo se conserva hasta la siguiente operación de dibujo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2767">The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting.</span></span> <span data-ttu-id="c1553-2768">El <xref:System.Windows.Forms.Control.DragEnter> método de control de eventos determina el tipo de datos que se arrastran al formulario y proporciona la información apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2768">The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback.</span></span> <span data-ttu-id="c1553-2769">El <xref:System.Windows.Forms.Control.DragDrop> método de control de eventos muestra la imagen en el formulario, si un <xref:System.Drawing.Image> pueden crearse a partir de los datos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2769">The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data.</span></span> <span data-ttu-id="c1553-2770">Dado que el <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> y <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> los valores son las coordenadas de pantalla, el ejemplo se usa el <xref:System.Windows.Forms.Control.PointToClient%2A> método convertirlos a coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2770">Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=nameWithType> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=nameWithType> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.</span></span>  
  
 [!code-cpp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CPP/imagedrag.cpp#1)]
 [!code-csharp[Windows.Forms.Control.DragOperations#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/CS/imagedrag.cs#1)]
 [!code-vb[Windows.Forms.Control.DragOperations#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control.DragOperations/VB/imagedrag.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="PointToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Point PointToScreen (System.Drawing.Point p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Point PointToScreen(valuetype System.Drawing.Point p) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Function PointToScreen (p As Point) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Point PointToScreen(System::Drawing::Point p);" />
      <MemberSignature Language="F#" Value="member this.PointToScreen : System.Drawing.Point -&gt; System.Drawing.Point" Usage="control.PointToScreen p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="p"><span data-ttu-id="c1553-2771"><see cref="T:System.Drawing.Point" /> en coordenadas de cliente que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="c1553-2771">The client coordinate <see cref="T:System.Drawing.Point" /> to convert.</span></span></param>
        <summary><span data-ttu-id="c1553-2772">Calcula la ubicación del punto especificado de cliente en coordenadas de pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-2772">Computes the location of the specified client point into screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="c1553-2773"><see cref="T:System.Drawing.Point" /> que representa el <see cref="T:System.Drawing.Point" /> convertido, <paramref name="p" />, en coordenadas de pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-2773">A <see cref="T:System.Drawing.Point" /> that represents the converted <see cref="T:System.Drawing.Point" />, <paramref name="p" />, in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-2774">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, y <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> miembros.</span><span class="sxs-lookup"><span data-stu-id="c1553-2774">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="c1553-2775">Para ejecutar el ejemplo, pegue el código siguiente en un formulario denominado Form1 que contiene varios controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-2775">To run the example, paste the following code in a form called Form1 containing several controls.</span></span> <span data-ttu-id="c1553-2776">Este ejemplo requiere que el <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, y <xref:System.Windows.Forms.Control.MouseUp> eventos están conectados a los controladores de eventos definidos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2776">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Point" />
        <altmember cref="M:System.Windows.Forms.Control.PointToClient(System.Drawing.Point)" />
      </Docs>
    </Member>
    <Member MemberName="PreferredSize">
      <MemberSignature Language="C#" Value="public System.Drawing.Size PreferredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size PreferredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.PreferredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size PreferredSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.PreferredSize : System.Drawing.Size" Usage="System.Windows.Forms.Control.PreferredSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2777">Obtiene el tamaño de un área rectangular en la que cabe el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2777">Gets the size of a rectangular area into which the control can fit.</span></span></summary>
        <value><span data-ttu-id="c1553-2778"><see cref="T:System.Drawing.Size" /> que contiene el alto y el ancho, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-2778">A <see cref="T:System.Drawing.Size" /> containing the height and width, in pixels.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessControlMessage">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.PreProcessControlState PreProcessControlMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.PreProcessControlState PreProcessControlMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function PreProcessControlMessage (ByRef msg As Message) As PreProcessControlState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::PreProcessControlState PreProcessControlMessage(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="member this.PreProcessControlMessage :  -&gt; System.Windows.Forms.PreProcessControlState" Usage="control.PreProcessControlMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PreProcessControlState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="c1553-2779"><see cref="T:System.Windows.Forms.Message" /> que representa el mensaje que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2779">A <see cref="T:System.Windows.Forms.Message" /> that represents the message to process.</span></span></param>
        <summary><span data-ttu-id="c1553-2780">Preprocesa los mensajes de teclado o de entrada en el bucle de mensajes antes de enviarlos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2780">Preprocesses keyboard or input messages within the message loop before they are dispatched.</span></span></summary>
        <returns><span data-ttu-id="c1553-2781">Uno de los valores de <see cref="T:System.Windows.Forms.PreProcessControlState" />, en función de si <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> es <see langword="true" /> o <see langword="false" /> y si <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> o <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> son <see langword="true" /> o <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2781">One of the <see cref="T:System.Windows.Forms.PreProcessControlState" /> values, depending on whether <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" /> is <see langword="true" /> or <see langword="false" /> and whether <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)" /> or <see cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" /> are <see langword="true" /> or <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreProcessMessage">
      <MemberSignature Language="C#" Value="public virtual bool PreProcessMessage (ref System.Windows.Forms.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PreProcessMessage(valuetype System.Windows.Forms.Message&amp; msg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PreProcessMessage (ByRef msg As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PreProcessMessage(System::Windows::Forms::Message % msg);" />
      <MemberSignature Language="F#" Value="abstract member PreProcessMessage :  -&gt; bool&#xA;override this.PreProcessMessage :  -&gt; bool" Usage="control.PreProcessMessage msg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="c1553-2782"><see cref="T:System.Windows.Forms.Message" /> que se pasa por referencia y que representa el mensaje que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2782">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the message to process.</span></span> <span data-ttu-id="c1553-2783">Los valores posibles son WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR y WM_SYSCHAR.</span><span class="sxs-lookup"><span data-stu-id="c1553-2783">The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</span></span></param>
        <summary><span data-ttu-id="c1553-2784">Preprocesa los mensajes de teclado o de entrada en el bucle de mensajes antes de enviarlos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2784">Preprocesses keyboard or input messages within the message loop before they are dispatched.</span></span></summary>
        <returns><span data-ttu-id="c1553-2785"><see langword="true" /> si el control procesó el mensaje; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2785"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2786"><xref:System.Windows.Forms.Control.PreProcessMessage%2A> se llama al bucle de mensajes de la aplicación para preprocesar los mensajes de entrada antes de enviarlos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2786"><xref:System.Windows.Forms.Control.PreProcessMessage%2A> is called by the application's message loop to preprocess input messages before they are dispatched.</span></span> <span data-ttu-id="c1553-2787">Los valores posibles para el `msg` parámetro son WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR y WM_SYSCHAR.</span><span class="sxs-lookup"><span data-stu-id="c1553-2787">Possible values for the `msg` parameter are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR.</span></span>  
  
 <span data-ttu-id="c1553-2788">Cuando se reemplaza <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, debe devolver un control `true` para indicar que ha procesado el mensaje.</span><span class="sxs-lookup"><span data-stu-id="c1553-2788">When overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>, a control should return `true` to indicate that it has processed the message.</span></span> <span data-ttu-id="c1553-2789">Para los mensajes que no son procesados por el control, el resultado de `base.PreProcessMessage` se deben devolver.</span><span class="sxs-lookup"><span data-stu-id="c1553-2789">For messages that are not processed by the control, the result of `base.PreProcessMessage` should be returned.</span></span> <span data-ttu-id="c1553-2790">Controles reemplazarán normalmente uno de los métodos más especializados como <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, o <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> en lugar de reemplazar <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2790">Controls will typically override one of the more specialized methods such as <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, or <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> instead of overriding <xref:System.Windows.Forms.Control.PreProcessMessage%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-2791">para todas las ventanas para que el llamador inmediato llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2791">for all windows for the immediate caller to call this method.</span></span> <span data-ttu-id="c1553-2792">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2792">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As PreviewKeyDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::PreviewKeyDownEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Forms.PreviewKeyDownEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.PreviewKeyDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2793">Se produce antes que el evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> cuando se presiona una tecla mientras el foco está en este control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2793">Occurs before the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event when a key is pressed while focus is on this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2794">Algunos controles normalmente omite algunas pulsaciones de teclas, por ejemplo, la ficha, si la devolución, ESC y teclas de dirección porque no se consideran presiones de tecla de entrada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2794">Some key presses, such as the TAB, RETURN, ESC, and arrow keys, are typically ignored by some controls because they are not considered input key presses.</span></span> <span data-ttu-id="c1553-2795">Por ejemplo, de forma predeterminada, un <xref:System.Windows.Controls.Button> control ignora las teclas de dirección.</span><span class="sxs-lookup"><span data-stu-id="c1553-2795">For example, by default, a <xref:System.Windows.Controls.Button> control ignores the arrow keys.</span></span> <span data-ttu-id="c1553-2796">Al presionar las teclas de dirección normalmente hace que el foco se desplace al control anterior o siguiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2796">Pressing the arrow keys typically causes the focus to move to the previous or next control.</span></span> <span data-ttu-id="c1553-2797">Las teclas de dirección se consideran teclas de navegación y presionar estas claves normalmente no provocan la <xref:System.Windows.Forms.Control.KeyDown> eventos para un <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2797">The arrow keys are considered navigation keys and pressing these keys typically do not raise the <xref:System.Windows.Forms.Control.KeyDown> event for a <xref:System.Windows.Controls.Button>.</span></span> <span data-ttu-id="c1553-2798">Sin embargo, al presionar la flecha de claves para un <xref:System.Windows.Controls.Button> elevar el <xref:System.Windows.Forms.Control.PreviewKeyDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2798">However, pressing the arrow keys for a <xref:System.Windows.Controls.Button> does raise the <xref:System.Windows.Forms.Control.PreviewKeyDown> event.</span></span> <span data-ttu-id="c1553-2799">Controlando la <xref:System.Windows.Forms.Control.PreviewKeyDown> eventos para un <xref:System.Windows.Controls.Button> y configuración de la <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> propiedad a `true`, puede elevar la <xref:System.Windows.Forms.Control.KeyDown> eventos cuando se presionan las teclas de flecha.</span><span class="sxs-lookup"><span data-stu-id="c1553-2799">By handling the <xref:System.Windows.Forms.Control.PreviewKeyDown> event for a <xref:System.Windows.Controls.Button> and setting the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`, you can raise the <xref:System.Windows.Forms.Control.KeyDown> event when the arrow keys are pressed.</span></span> <span data-ttu-id="c1553-2800">Sin embargo, si administra las teclas de dirección, ya no se moverá el foco al control anterior o siguiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2800">However, if you handle the arrow keys, the focus will no longer move to the previous or next control.</span></span>  
  
 <span data-ttu-id="c1553-2801">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2801">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2802">En el ejemplo de código siguiente se muestra un <xref:System.Windows.Forms.Button> que incluye un <xref:System.Windows.Forms.ContextMenuStrip>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2802">The following code example demonstrates a <xref:System.Windows.Forms.Button> that includes a <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="c1553-2803">Cuando el <xref:System.Windows.Forms.Button> tiene el foco y presione las teclas flecha arriba o flecha abajo, el <xref:System.Windows.Forms.ContextMenuStrip> aparece.</span><span class="sxs-lookup"><span data-stu-id="c1553-2803">When the <xref:System.Windows.Forms.Button> has the focus and you press the UP ARROW or DOWN ARROW keys, the <xref:System.Windows.Forms.ContextMenuStrip> appears.</span></span> <span data-ttu-id="c1553-2804">El <xref:System.Windows.Forms.Control.PreviewKeyDown> controlador de eventos detecta cuando se presionan las teclas flecha arriba o flecha abajo y establece el <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-2804">The <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`.</span></span> <span data-ttu-id="c1553-2805">Esto provoca la <xref:System.Windows.Forms.Control.KeyDown> eventos para que pueda mostrar el <xref:System.Windows.Forms.ContextMenuStrip>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2805">This raises the <xref:System.Windows.Forms.Control.KeyDown> event so that you can display the <xref:System.Windows.Forms.ContextMenuStrip>.</span></span> <span data-ttu-id="c1553-2806">No debe incluir cualquier lógica el <xref:System.Windows.Forms.Control.PreviewKeyDown> controlador de eventos, sí que la configuración de la <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2806">You should not put any logic in the <xref:System.Windows.Forms.Control.PreviewKeyDown> event handler, other than to set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property.</span></span> <span data-ttu-id="c1553-2807">En su lugar, debe colocar la lógica el <xref:System.Windows.Forms.Control.KeyDown> controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2807">Instead, you should put your logic in the <xref:System.Windows.Forms.Control.KeyDown> event handler.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.PreviewKeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.previewkeydown/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessCmdKey (ByRef msg As Message, keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessCmdKey :  * System.Windows.Forms.Keys -&gt; bool" Usage="control.ProcessCmdKey (msg, keyData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="c1553-2808"><see cref="T:System.Windows.Forms.Message" /> que se pasa por referencia y que representa el mensaje de ventana que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2808">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <param name="keyData"><span data-ttu-id="c1553-2809">Uno de los valores de <see cref="T:System.Windows.Forms.Keys" /> que representa la tecla que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2809">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="c1553-2810">Procesa una tecla de comando.</span><span class="sxs-lookup"><span data-stu-id="c1553-2810">Processes a command key.</span></span></summary>
        <returns><span data-ttu-id="c1553-2811"><see langword="true" /> si el control procesó el carácter; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2811"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2812">Este método se llama durante el preprocesamiento de mensajes para controlar las teclas de comando.</span><span class="sxs-lookup"><span data-stu-id="c1553-2812">This method is called during message preprocessing to handle command keys.</span></span> <span data-ttu-id="c1553-2813">Teclas de comando son claves que siempre tienen prioridad sobre las teclas de entrada normales.</span><span class="sxs-lookup"><span data-stu-id="c1553-2813">Command keys are keys that always take precedence over regular input keys.</span></span> <span data-ttu-id="c1553-2814">Algunos ejemplos de las teclas de comando son los aceleradores y accesos directos del menú.</span><span class="sxs-lookup"><span data-stu-id="c1553-2814">Examples of command keys include accelerators and menu shortcuts.</span></span> <span data-ttu-id="c1553-2815">El método debe devolver `true` para indicar que procesó la tecla de comando, o `false` para indicar que la clave no es una tecla de comando.</span><span class="sxs-lookup"><span data-stu-id="c1553-2815">The method must return `true` to indicate that it has processed the command key, or `false` to indicate that the key is not a command key.</span></span> <span data-ttu-id="c1553-2816">Este método solo se llama cuando el control se hospeda en una aplicación de Windows Forms o como un control ActiveX.</span><span class="sxs-lookup"><span data-stu-id="c1553-2816">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 <span data-ttu-id="c1553-2817">El <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> método determina si el control tiene un <xref:System.Windows.Forms.ContextMenu>y si es así, permite la <xref:System.Windows.Forms.ContextMenu> para procesar la tecla de comando.</span><span class="sxs-lookup"><span data-stu-id="c1553-2817">The <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method first determines whether the control has a <xref:System.Windows.Forms.ContextMenu>, and if so, enables the <xref:System.Windows.Forms.ContextMenu> to process the command key.</span></span> <span data-ttu-id="c1553-2818">Si la tecla de comando no es un acceso directo del menú y el control tiene un elemento primario, la clave se pasa a la principal <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2818">If the command key is not a menu shortcut and the control has a parent, the key is passed to the parent's <xref:System.Windows.Forms.Control.ProcessCmdKey%2A> method.</span></span> <span data-ttu-id="c1553-2819">El efecto neto es que ese comando claves hacen una "burbuja" por la jerarquía de controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-2819">The net effect is that command keys are "bubbled" up the control hierarchy.</span></span> <span data-ttu-id="c1553-2820">Además de la clave que el usuario ha presionado, los datos de clave indican también que, si los hay, las teclas modificadoras se presionaron al mismo tiempo que la clave.</span><span class="sxs-lookup"><span data-stu-id="c1553-2820">In addition to the key the user pressed, the key data also indicates which, if any, modifier keys were pressed at the same time as the key.</span></span> <span data-ttu-id="c1553-2821">Teclas modificadoras incluyen las teclas MAYÚS, CTRL y ALT.</span><span class="sxs-lookup"><span data-stu-id="c1553-2821">Modifier keys include the SHIFT, CTRL, and ALT keys.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1553-2822">para el llamador inmediato y las clases herederas llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2822">for the immediate caller and inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-2823">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2823">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2824">Cuando se reemplaza el <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> método en una clase derivada, debe devolver un control <see langword="true" /> para indicar que ha procesado la clave.</span><span class="sxs-lookup"><span data-stu-id="c1553-2824">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="c1553-2825">Para las claves que no son procesadas por el control, el resultado de llamar a la clase base <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> método se debe devolver.</span><span class="sxs-lookup"><span data-stu-id="c1553-2825">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> method should be returned.</span></span> <span data-ttu-id="c1553-2826">Controles rara vez, si alguna vez, debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2826">Controls will seldom, if ever, need to override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogChar">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDialogChar (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDialogChar(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDialogChar (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDialogChar(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogChar : char -&gt; bool&#xA;override this.ProcessDialogChar : char -&gt; bool" Usage="control.ProcessDialogChar charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="c1553-2827">Carácter que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2827">The character to process.</span></span></param>
        <summary><span data-ttu-id="c1553-2828">Procesa un carácter de diálogo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2828">Processes a dialog character.</span></span></summary>
        <returns><span data-ttu-id="c1553-2829"><see langword="true" /> si el control procesó el carácter; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2829"><see langword="true" /> if the character was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2830">Este método se llama durante el preprocesamiento de mensajes para controlar los caracteres del cuadro de diálogo, como teclas de acceso de control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2830">This method is called during message preprocessing to handle dialog characters, such as control mnemonics.</span></span> <span data-ttu-id="c1553-2831">Se llama a este método solo si el <xref:System.Windows.Forms.Control.IsInputChar%2A> método indica que el control no está procesando el carácter.</span><span class="sxs-lookup"><span data-stu-id="c1553-2831">This method is called only if the <xref:System.Windows.Forms.Control.IsInputChar%2A> method indicates that the control is not processing the character.</span></span> <span data-ttu-id="c1553-2832">El <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> método simplemente envía el carácter a la principal <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> método, o se devuelve `false` si el control no tiene ningún elemento primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2832">The <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogChar%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="c1553-2833">La <xref:System.Windows.Forms.Form> clase reemplaza este método para llevar a cabo el procesamiento real de caracteres del cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2833">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog characters.</span></span> <span data-ttu-id="c1553-2834">Este método solo se llama cuando el control se hospeda en una aplicación de Windows Forms o como un control ActiveX.</span><span class="sxs-lookup"><span data-stu-id="c1553-2834">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-2835">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2835">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-2836">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2836">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2837">Cuando se reemplaza el <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> método en una clase derivada, debe devolver un control <see langword="true" /> para indicar que ha procesado el carácter.</span><span class="sxs-lookup"><span data-stu-id="c1553-2837">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the character.</span></span> <span data-ttu-id="c1553-2838">Para los caracteres que no son procesados por el control, el resultado de llamar a la clase base <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> método se debe devolver.</span><span class="sxs-lookup"><span data-stu-id="c1553-2838">For characters that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method should be returned.</span></span> <span data-ttu-id="c1553-2839">Controles rara vez, si alguna vez, debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2839">Controls will seldom, if ever, need to override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessDialogKey">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessDialogKey(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessDialogKey (keyData As Keys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessDialogKey(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="abstract member ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool&#xA;override this.ProcessDialogKey : System.Windows.Forms.Keys -&gt; bool" Usage="control.ProcessDialogKey keyData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="c1553-2840">Uno de los valores de <see cref="T:System.Windows.Forms.Keys" /> que representa la tecla que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2840">One of the <see cref="T:System.Windows.Forms.Keys" /> values that represents the key to process.</span></span></param>
        <summary><span data-ttu-id="c1553-2841">Procesa una tecla de diálogo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2841">Processes a dialog key.</span></span></summary>
        <returns><span data-ttu-id="c1553-2842"><see langword="true" /> si el control procesó la tecla; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2842"><see langword="true" /> if the key was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2843">Este método se llama durante el preprocesamiento de mensajes para controlar los caracteres del cuadro de diálogo, como las teclas de flecha, la devolución, ESC y PESTAÑA.</span><span class="sxs-lookup"><span data-stu-id="c1553-2843">This method is called during message preprocessing to handle dialog characters, such as TAB, RETURN, ESC, and arrow keys.</span></span> <span data-ttu-id="c1553-2844">Se llama a este método solo si el <xref:System.Windows.Forms.Control.IsInputKey%2A> método indica que el control no está procesando la clave.</span><span class="sxs-lookup"><span data-stu-id="c1553-2844">This method is called only if the <xref:System.Windows.Forms.Control.IsInputKey%2A> method indicates that the control is not processing the key.</span></span> <span data-ttu-id="c1553-2845">El <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simplemente envía el carácter a la principal <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> método, o se devuelve `false` si el control no tiene ningún elemento primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2845">The <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessDialogKey%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="c1553-2846">La <xref:System.Windows.Forms.Form> clase reemplaza este método para realizar el procesamiento de las claves del cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2846">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.</span></span> <span data-ttu-id="c1553-2847">Este método solo se llama cuando el control se hospeda en una aplicación de Windows Forms o como un control ActiveX.</span><span class="sxs-lookup"><span data-stu-id="c1553-2847">This method is only called when the control is hosted in a Windows Forms application or as an ActiveX control.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-2848">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2848">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-2849">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2849">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2850">Cuando se reemplaza el <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /> método en una clase derivada, debe devolver un control <see langword="true" /> para indicar que ha procesado la clave.</span><span class="sxs-lookup"><span data-stu-id="c1553-2850">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="c1553-2851">Para las claves que no son procesadas por el control, el resultado de llamar a la clase base <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> método se debe devolver.</span><span class="sxs-lookup"><span data-stu-id="c1553-2851">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" /> method should be returned.</span></span> <span data-ttu-id="c1553-2852">Controles rara vez, si alguna vez, debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2852">Controls will seldom, if ever, need to override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyEventArgs">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessKeyEventArgs(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessKeyEventArgs (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessKeyEventArgs(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyEventArgs :  -&gt; bool&#xA;override this.ProcessKeyEventArgs :  -&gt; bool" Usage="control.ProcessKeyEventArgs m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="c1553-2853"><see cref="T:System.Windows.Forms.Message" /> que se pasa por referencia y que representa el mensaje de ventana que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2853">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="c1553-2854">Procesa un mensaje de tecla y genera los eventos de control correspondientes.</span><span class="sxs-lookup"><span data-stu-id="c1553-2854">Processes a key message and generates the appropriate control events.</span></span></summary>
        <returns><span data-ttu-id="c1553-2855"><see langword="true" /> si el control procesó el mensaje; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2855"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2856">Este método se llama cuando un control recibe un mensaje del teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2856">This method is called when a control receives a keyboard message.</span></span> <span data-ttu-id="c1553-2857">El método es responsable de generar los eventos clave adecuados para el mensaje mediante una llamada a la <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, o <xref:System.Windows.Forms.Control.OnKeyUp%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2857">The method is responsible for generating the appropriate key events for the message by calling the <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, or <xref:System.Windows.Forms.Control.OnKeyUp%2A> methods.</span></span> <span data-ttu-id="c1553-2858">El `m` parámetro contiene el mensaje de ventana que se debe procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2858">The `m` parameter contains the window message that must be processed.</span></span> <span data-ttu-id="c1553-2859">Los valores posibles para el <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> propiedad son WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP y WM_IME_CHAR.</span><span class="sxs-lookup"><span data-stu-id="c1553-2859">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP, and WM_IME_CHAR.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-2860">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2860">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-2861">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2861">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1553-2862">para que el llamador inmediato llamar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2862">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="c1553-2863">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c1553-2863">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2864">Cuando se reemplaza el <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> método en una clase derivada, debe devolver un control <see langword="true" /> para indicar que ha procesado la clave.</span><span class="sxs-lookup"><span data-stu-id="c1553-2864">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="c1553-2865">Para las claves que no son procesadas por el control, el resultado de llamar a la clase base <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> método se debe devolver.</span><span class="sxs-lookup"><span data-stu-id="c1553-2865">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> method should be returned.</span></span> <span data-ttu-id="c1553-2866">Controles rara vez, si alguna vez, debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2866">Controls will seldom, if ever, need to override this method.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyMessage">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessKeyMessage (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessKeyMessage(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessKeyMessage (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessKeyMessage(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyMessage :  -&gt; bool&#xA;override this.ProcessKeyMessage :  -&gt; bool" Usage="control.ProcessKeyMessage m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="c1553-2867"><see cref="T:System.Windows.Forms.Message" /> que se pasa por referencia y que representa el mensaje de ventana que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2867">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="c1553-2868">Procesa un mensaje de teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2868">Processes a keyboard message.</span></span></summary>
        <returns><span data-ttu-id="c1553-2869"><see langword="true" /> si el control procesó el mensaje; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2869"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2870">Este método se llama cuando un control recibe un mensaje del teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2870">This method is called when a control receives a keyboard message.</span></span> <span data-ttu-id="c1553-2871">En primer lugar, el método determina si el control tiene un elemento primario; Si por lo tanto, llama a los padres <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2871">The method first determines whether the control has a parent; if so, it calls the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method.</span></span> <span data-ttu-id="c1553-2872">Si el primario <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> método no procesa el mensaje el <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> se invoca para generar los eventos de teclado correspondiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2872">If the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method does not process the message then the <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> method is called to generate the appropriate keyboard events.</span></span> <span data-ttu-id="c1553-2873">El `m` parámetro contiene el mensaje de ventana que se debe procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2873">The `m` parameter contains the window message that must be processed.</span></span> <span data-ttu-id="c1553-2874">Los valores posibles para el <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> propiedad son WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP y WM_SYSKEYUP.</span><span class="sxs-lookup"><span data-stu-id="c1553-2874">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-2875">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2875">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-2876">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2876">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2877">Cuando se reemplaza el <see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /> método, debe devolver un control <see langword="true" /> para indicar que ha procesado la clave.</span><span class="sxs-lookup"><span data-stu-id="c1553-2877">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)" /> method, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="c1553-2878">Para las claves que no son procesadas por el control, el resultado de la clase base <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> se deben devolver.</span><span class="sxs-lookup"><span data-stu-id="c1553-2878">For keys that are not processed by the control, the result of the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)" /> should be returned.</span></span> <span data-ttu-id="c1553-2879">Controles rara vez, si alguna vez, debe invalidar este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2879">Controls will seldom, if ever, need to override this method.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="ProcessKeyPreview">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessKeyPreview (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessKeyPreview(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ProcessKeyPreview (ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessKeyPreview(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member ProcessKeyPreview :  -&gt; bool&#xA;override this.ProcessKeyPreview :  -&gt; bool" Usage="control.ProcessKeyPreview m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="c1553-2880"><see cref="T:System.Windows.Forms.Message" /> que se pasa por referencia y que representa el mensaje de ventana que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2880">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the window message to process.</span></span></param>
        <summary><span data-ttu-id="c1553-2881">Muestra una vista preliminar de un mensaje del teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2881">Previews a keyboard message.</span></span></summary>
        <returns><span data-ttu-id="c1553-2882"><see langword="true" /> si el control procesó el mensaje; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2882"><see langword="true" /> if the message was processed by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2883">Este método se llama mediante un control secundario cuando el control secundario recibe un mensaje del teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2883">This method is called by a child control when the child control receives a keyboard message.</span></span> <span data-ttu-id="c1553-2884">El control secundario llama a este método antes de generar los eventos de teclado para el mensaje.</span><span class="sxs-lookup"><span data-stu-id="c1553-2884">The child control calls this method before generating any keyboard events for the message.</span></span> <span data-ttu-id="c1553-2885">Si este método devuelve `true`, el control secundario considera que el mensaje procesado y no genera ningún evento de teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2885">If this method returns `true`, the child control considers the message processed and does not generate any keyboard events.</span></span> <span data-ttu-id="c1553-2886">El `m` parámetro contiene el mensaje de ventana para obtener una vista previa.</span><span class="sxs-lookup"><span data-stu-id="c1553-2886">The `m` parameter contains the window message to preview.</span></span> <span data-ttu-id="c1553-2887">Los valores posibles para el <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> propiedad son WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP y WM_SYSKEYUP.</span><span class="sxs-lookup"><span data-stu-id="c1553-2887">Possible values for the <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType> property are WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, and WM_SYSKEYUP.</span></span> <span data-ttu-id="c1553-2888">El <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> método simplemente envía el carácter a la principal <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> método, o se devuelve `false` si el control no tiene ningún elemento primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2888">The <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method simply sends the character to the parent's <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> method, or returns `false` if the control has no parent.</span></span> <span data-ttu-id="c1553-2889">La <xref:System.Windows.Forms.Form> clase reemplaza este método para realizar el procesamiento de las claves del cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2889">The <xref:System.Windows.Forms.Form> class overrides this method to perform actual processing of dialog keys.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-2890">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2890">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-2891">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2891">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1553-2892">para que el llamador inmediato llamar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2892">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="c1553-2893">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="c1553-2893">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-2894">Cuando se reemplaza el <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> método en una clase derivada, debe devolver un control <see langword="true" /> para indicar que ha procesado la clave.</span><span class="sxs-lookup"><span data-stu-id="c1553-2894">When overriding the <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> method in a derived class, a control should return <see langword="true" /> to indicate that it has processed the key.</span></span> <span data-ttu-id="c1553-2895">Para las claves que no son procesadas por el control, el resultado de llamar a la clase base <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> método se debe devolver.</span><span class="sxs-lookup"><span data-stu-id="c1553-2895">For keys that are not processed by the control, the result of calling the base class's <see cref="M:System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)" /> method should be returned.</span></span></para></block>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
        <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="ProcessMnemonic">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessMnemonic (char charCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessMnemonic(char charCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ProcessMnemonic(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ProcessMnemonic (charCode As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessMnemonic(char charCode);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMnemonic : char -&gt; bool&#xA;override this.ProcessMnemonic : char -&gt; bool" Usage="control.ProcessMnemonic charCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charCode" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="charCode"><span data-ttu-id="c1553-2896">Carácter que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2896">The character to process.</span></span></param>
        <summary><span data-ttu-id="c1553-2897">Procesa un carácter de tecla de acceso.</span><span class="sxs-lookup"><span data-stu-id="c1553-2897">Processes a mnemonic character.</span></span></summary>
        <returns><span data-ttu-id="c1553-2898"><see langword="true" /> si el control procesó el carácter como carácter de tecla de acceso; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2898"><see langword="true" /> if the character was processed as a mnemonic by the control; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2899">Este método se llama para dar la oportunidad de procesar un carácter de tecla de acceso a un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2899">This method is called to give a control the opportunity to process a mnemonic character.</span></span> <span data-ttu-id="c1553-2900">El método debe determinar si el control está en un estado de las teclas de acceso del proceso y si si el carácter especificado representa una tecla de acceso.</span><span class="sxs-lookup"><span data-stu-id="c1553-2900">The method should determine whether the control is in a state to process mnemonics and if whether the given character represents a mnemonic.</span></span> <span data-ttu-id="c1553-2901">Si es así, el método debe realizar la acción asociada con la tecla de acceso y devolver `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-2901">If so, the method should perform the action associated with the mnemonic and return `true`.</span></span> <span data-ttu-id="c1553-2902">Si no, el método debe devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-2902">If not, the method should return `false`.</span></span> <span data-ttu-id="c1553-2903">Las implementaciones de este método se utilizan a menudo el <xref:System.Windows.Forms.Control.IsMnemonic%2A> método para determinar si el carácter especificado coincide con una tecla de acceso en el texto del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2903">Implementations of this method often use the <xref:System.Windows.Forms.Control.IsMnemonic%2A> method to determine whether the given character matches a mnemonic in the control's text.</span></span>  
  
 <span data-ttu-id="c1553-2904">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="c1553-2904">For example:</span></span>  
  
```csharp  
if (CanSelect && IsMnemonic(charCode, MyControl.Text) {  
      // Perform action associated with mnemonic.  
       }  
```  
  
 <span data-ttu-id="c1553-2905">Esta implementación predeterminada de la <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> método simplemente devuelve `false` para indicar que el control no tiene ningún carácter de tecla de acceso.</span><span class="sxs-lookup"><span data-stu-id="c1553-2905">This default implementation of the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method simply returns `false` to indicate that the control has no mnemonic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2906">En el ejemplo de código siguiente se muestra una extensión de la clase de botón que reemplaza el <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> método para presentar un comportamiento personalizado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2906">The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior.</span></span> <span data-ttu-id="c1553-2907">El ejemplo también muestra el uso de la <xref:System.Windows.Forms.Control.CanSelect%2A> y <xref:System.Windows.Forms.Control.IsMnemonic%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="c1553-2907">The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties.</span></span> <span data-ttu-id="c1553-2908">Para ejecutar este ejemplo, pegue el código siguiente después de una clase de formulario, en el mismo archivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2908">To run this example paste the following code after a form class, in the same file.</span></span> <span data-ttu-id="c1553-2909">Agregue un botón de tipo `MnemonicButton` al formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2909">Add a button of type `MnemonicButton` to the form.</span></span>  
  
 [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-2910">para todas las ventanas para la herencia de clases para llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-2910">for all windows for inheriting classes to call this method.</span></span> <span data-ttu-id="c1553-2911">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2911">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)" />
        <altmember cref="M:System.Windows.Forms.Control.ProcessDialogChar(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="ProductName">
      <MemberSignature Language="C#" Value="public string ProductName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ProductName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductName : string" Usage="System.Windows.Forms.Control.ProductName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2912">Obtiene el nombre de producto del ensamblado que contiene el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2912">Gets the product name of the assembly containing the control.</span></span></summary>
        <value><span data-ttu-id="c1553-2913">Nombre de producto del ensamblado que contiene el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2913">The product name of the assembly containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2914">El <xref:System.Windows.Forms.Control.ProductName%2A> propiedad es una propiedad de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c1553-2914">The <xref:System.Windows.Forms.Control.ProductName%2A> property is a read-only property.</span></span> <span data-ttu-id="c1553-2915">Para cambiar el valor de esta propiedad, establezca el <xref:System.Reflection.AssemblyProductAttribute.Product%2A> valor de propiedad de la <xref:System.Reflection.AssemblyProductAttribute>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2915">To change the value of this property, set the <xref:System.Reflection.AssemblyProductAttribute.Product%2A> property value of the <xref:System.Reflection.AssemblyProductAttribute>.</span></span> <span data-ttu-id="c1553-2916">La siguiente línea de conjuntos de código de C# del <xref:System.Windows.Forms.Control.ProductName%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2916">The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductName%2A> property.</span></span>  
  
```  
[assembly: AssemblyProduct("MyApplication")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="c1553-2917">Se recomienda encarecidamente que proporcione el nombre de la compañía, nombre de producto y versión del producto.</span><span class="sxs-lookup"><span data-stu-id="c1553-2917">It is strongly recommended that you provide the company name, product name, and product version.</span></span> <span data-ttu-id="c1553-2918">Proporcionar esta información permite el uso de características de Windows Forms como <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> que facilitar la escritura de aplicaciones compatibles con el programa "Certificado para Windows".</span><span class="sxs-lookup"><span data-stu-id="c1553-2918">Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> that make it easier to write applications that comply with the "Certified for Windows" program.</span></span> <span data-ttu-id="c1553-2919">Para obtener más información acerca del programa de certificación para Windows, consulte http://msdn.microsoft.com/certification.</span><span class="sxs-lookup"><span data-stu-id="c1553-2919">For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2920">En el ejemplo de código siguiente se muestra información acerca de la aplicación en un <xref:System.Windows.Forms.Label> contenidos en un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2920">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-2921">Este ejemplo requiere que el <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> y <xref:System.Windows.Forms.Control.ProductVersion%2A> se han establecido.</span><span class="sxs-lookup"><span data-stu-id="c1553-2921">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyProductAttribute.Product" />
      </Docs>
    </Member>
    <Member MemberName="ProductVersion">
      <MemberSignature Language="C#" Value="public string ProductVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProductVersion" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ProductVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProductVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProductVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProductVersion : string" Usage="System.Windows.Forms.Control.ProductVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2922">Obtiene la versión del ensamblado que contiene el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2922">Gets the version of the assembly containing the control.</span></span></summary>
        <value><span data-ttu-id="c1553-2923">Versión de archivo del ensamblado que contiene el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2923">The file version of the assembly containing the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2924">El <xref:System.Windows.Forms.Control.ProductVersion%2A> propiedad es una propiedad de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c1553-2924">The <xref:System.Windows.Forms.Control.ProductVersion%2A> property is a read-only property.</span></span> <span data-ttu-id="c1553-2925">Para cambiar el valor de esta propiedad, establezca el <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> valor de propiedad de la <xref:System.Reflection.AssemblyVersionAttribute>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2925">To change the value of this property, set the <xref:System.Reflection.AssemblyVersionAttribute.Version%2A> property value of the <xref:System.Reflection.AssemblyVersionAttribute>.</span></span> <span data-ttu-id="c1553-2926">La siguiente línea de conjuntos de código de C# del <xref:System.Windows.Forms.Control.ProductVersion%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2926">The following line of C# code sets the <xref:System.Windows.Forms.Control.ProductVersion%2A> property.</span></span>  
  
```  
[assembly: AssemblyVersion("1.0.1")]  
```  
  
> [!NOTE]
>  <span data-ttu-id="c1553-2927">Se recomienda encarecidamente que proporcione el nombre de la compañía, nombre de producto y versión del producto.</span><span class="sxs-lookup"><span data-stu-id="c1553-2927">It is strongly recommended that you provide the company name, product name, and product version.</span></span> <span data-ttu-id="c1553-2928">Proporcionar esta información permite el uso de características de Windows Forms como <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> que facilitar la escritura de aplicaciones compatibles con el programa "Certificado para Windows".</span><span class="sxs-lookup"><span data-stu-id="c1553-2928">Providing this information enables the use of Windows Forms features such as <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=nameWithType> that make it easier to write applications that comply with the "Certified for Windows" program.</span></span> <span data-ttu-id="c1553-2929">Para obtener más información acerca del programa de certificación para Windows, consulte http://msdn.microsoft.com/certification.</span><span class="sxs-lookup"><span data-stu-id="c1553-2929">For more information about the Certified for Windows program, see http://msdn.microsoft.com/certification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2930">En el ejemplo de código siguiente se muestra información acerca de la aplicación en un <xref:System.Windows.Forms.Label> contenidos en un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2930">The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-2931">Este ejemplo requiere que el <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> y <xref:System.Windows.Forms.Control.ProductVersion%2A> se han establecido.</span><span class="sxs-lookup"><span data-stu-id="c1553-2931">This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties3#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CPP/aboutdialog.cpp#1)]
 [!code-csharp[Windows.Forms.Control Properties3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties3/CS/aboutdialog.cs#1)]
 [!code-vb[Windows.Forms.Control Properties3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties3/VB/aboutdialog.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.AssemblyVersionAttribute.Version" />
      </Docs>
    </Member>
    <Member MemberName="PropagatingImeMode">
      <MemberSignature Language="C#" Value="protected static System.Windows.Forms.ImeMode PropagatingImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Forms.ImeMode PropagatingImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.PropagatingImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PropagatingImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Windows::Forms::ImeMode PropagatingImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.PropagatingImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.Control.PropagatingImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2932">Obtiene un objeto que representa un modo IME de propagación.</span><span class="sxs-lookup"><span data-stu-id="c1553-2932">Gets an object that represents a propagating IME mode.</span></span></summary>
        <value><span data-ttu-id="c1553-2933">Objeto que representa un modo IME de propagación.</span><span class="sxs-lookup"><span data-stu-id="c1553-2933">An object that represents a propagating IME mode.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryAccessibilityHelp">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.QueryAccessibilityHelp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryAccessibilityHelp As QueryAccessibilityHelpEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryAccessibilityHelpEventHandler ^ QueryAccessibilityHelp;" />
      <MemberSignature Language="F#" Value="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " Usage="member this.QueryAccessibilityHelp : System.Windows.Forms.QueryAccessibilityHelpEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryAccessibilityHelpEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2934">Se produce cuando <see cref="T:System.Windows.Forms.AccessibleObject" /> proporciona ayuda para aplicaciones de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2934">Occurs when <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing help to accessibility applications.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2935">Debe usar el <xref:System.Windows.Forms.HelpProvider> clase para permitir que los usuarios invocar la Ayuda en el objeto accesible presionando la tecla F1.</span><span class="sxs-lookup"><span data-stu-id="c1553-2935">You should use the <xref:System.Windows.Forms.HelpProvider> class to enable users to invoke help on your accessible object by pressing the F1 key.</span></span> <span data-ttu-id="c1553-2936">Mediante el <xref:System.Windows.Forms.HelpProvider> le proporciona información completa en el <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2936">Using the <xref:System.Windows.Forms.HelpProvider> provides you with complete information in the <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</span></span> <span data-ttu-id="c1553-2937">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2937">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2938">En el ejemplo de código siguiente se muestra la creación de un gráfico de accesibilidad para controlar, mediante el <xref:System.Windows.Forms.AccessibleObject> y <xref:System.Windows.Forms.Control.ControlAccessibleObject> clases para exponer información accesible.</span><span class="sxs-lookup"><span data-stu-id="c1553-2938">The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information.</span></span> <span data-ttu-id="c1553-2939">El control traza dos curvas junto con una leyenda.</span><span class="sxs-lookup"><span data-stu-id="c1553-2939">The control plots two curves along with a legend.</span></span> <span data-ttu-id="c1553-2940">El `ChartControlAccessibleObject` (clase), que se deriva de `ControlAccessibleObject`, se usa en el <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> método para proporcionar información personalizada accesible para el control chart.</span><span class="sxs-lookup"><span data-stu-id="c1553-2940">The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control.</span></span> <span data-ttu-id="c1553-2941">Dado que la leyenda del gráfico no es un real <xref:System.Windows.Forms.Control> -control basado en, pero en su lugar se dibuja mediante el control chart, lo hace no ninguna información accesible.</span><span class="sxs-lookup"><span data-stu-id="c1553-2941">Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information.</span></span> <span data-ttu-id="c1553-2942">Por este motivo, el `ChartControlAccessibleObject` clase invalida el <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> método para devolver el `CurveLegendAccessibleObject` que representa la información accesible de cada parte de la leyenda.</span><span class="sxs-lookup"><span data-stu-id="c1553-2942">Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend.</span></span> <span data-ttu-id="c1553-2943">Cuando una aplicación accesible para usa este control, el control puede proporcionar la información de acceso necesaria.</span><span class="sxs-lookup"><span data-stu-id="c1553-2943">When an accessible-aware application uses this control, the control can provide the necessary accessible information.</span></span>  
  
 <span data-ttu-id="c1553-2944">Este fragmento de código muestra cómo tratar el <xref:System.Windows.Forms.Control.QueryAccessibilityHelp> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-2944">This code excerpt demonstrates handling the <xref:System.Windows.Forms.Control.QueryAccessibilityHelp> event.</span></span> <span data-ttu-id="c1553-2945">Consulte la <xref:System.Windows.Forms.AccessibleObject> información general de clases para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2945">See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CPP/chartcontrol.cpp#3)]
 [!code-csharp[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/CS/chartcontrol.cs#3)]
 [!code-vb[System.Windows.Forms.AccessibleObject#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.AccessibleObject/VB/chartcontrol.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.AccessibleObject.GetHelpTopic(System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.Forms.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2946">Se produce durante una operación de arrastrar y colocar, y permite al origen de arrastre determinar si la operación de arrastrar y colocar tiene que cancelarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2946">Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2947">El <xref:System.Windows.Forms.Control.QueryContinueDrag> evento se desencadena cuando hay un cambio en el estado del teclado o mouse durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2947">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span> <span data-ttu-id="c1553-2948">El <xref:System.Windows.Forms.Control.QueryContinueDrag> eventos permite que el origen de arrastre determinar si la operación de arrastrar y colocar tiene que cancelarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2948">The <xref:System.Windows.Forms.Control.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="c1553-2949">A continuación, se describe cómo y cuándo se generan eventos relacionados con operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2949">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="c1553-2950">El <xref:System.Windows.Forms.Control.DoDragDrop%2A> método determina el control en la ubicación actual del cursor.</span><span class="sxs-lookup"><span data-stu-id="c1553-2950">The <xref:System.Windows.Forms.Control.DoDragDrop%2A> method determines the control under the current cursor location.</span></span> <span data-ttu-id="c1553-2951">A continuación, comprueba si el control es un destino de colocación válido.</span><span class="sxs-lookup"><span data-stu-id="c1553-2951">It then checks to see if the control is a valid drop target.</span></span>  
  
 <span data-ttu-id="c1553-2952">Si el control es un destino válido, el <xref:System.Windows.Forms.Control.GiveFeedback> se provoca el evento con el efecto de arrastrar y colocar especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2952">If the control is a valid drop target, the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="c1553-2953">Para obtener una lista de efectos de arrastrar y colocar, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2953">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
 <span data-ttu-id="c1553-2954">Se realiza el seguimiento de la posición del cursor del mouse, del estado del teclado y del estado de los botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2954">Changes in the mouse cursor position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="c1553-2955">Si el usuario desplaza el mouse fuera de una ventana, se genera el evento <xref:System.Windows.Forms.Control.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2955">If the user moves out of a window, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
-   <span data-ttu-id="c1553-2956">Si el mouse entra en otro control, se genera el evento <xref:System.Windows.Forms.Control.DragEnter> para ese control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2956">If the mouse enters another control, the <xref:System.Windows.Forms.Control.DragEnter> for that control is raised.</span></span>  
  
-   <span data-ttu-id="c1553-2957">Si se mueve el mouse dentro del mismo control, se genera el evento <xref:System.Windows.Forms.Control.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2957">If the mouse moves but stays within the same control, the <xref:System.Windows.Forms.Control.DragOver> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-2958">Si hay un cambio en el estado del botón teclado o mouse, el <xref:System.Windows.Forms.Control.QueryContinueDrag> se provoca el evento y determina si debe continuar la operación de arrastrar, colocar los datos, o cancelar la operación en función del valor de la <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> propiedad del evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2958">If there is a change in the keyboard or mouse button state, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> property of the event's <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
-   <span data-ttu-id="c1553-2959">Si el valor de <xref:System.Windows.Forms.DragAction> es `Continue`, <xref:System.Windows.Forms.Control.DragOver> evento se provoca para continuar con la operación y el <xref:System.Windows.Forms.Control.GiveFeedback> evento se genera con el nuevo efecto, por lo que se puede establecer la información visual apropiada.</span><span class="sxs-lookup"><span data-stu-id="c1553-2959">If the value of <xref:System.Windows.Forms.DragAction> is `Continue`, the <xref:System.Windows.Forms.Control.DragOver> event is raised to continue the operation and the <xref:System.Windows.Forms.Control.GiveFeedback> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="c1553-2960">Para obtener una lista de efectos de colocar válidos, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="c1553-2960">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="c1553-2961">El <xref:System.Windows.Forms.Control.DragOver> y <xref:System.Windows.Forms.Control.GiveFeedback> eventos están emparejados de forma que cuando el mouse se desplace por el destino de colocación, el usuario reciba la información más actualizada sobre la posición del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2961">The <xref:System.Windows.Forms.Control.DragOver> and <xref:System.Windows.Forms.Control.GiveFeedback> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position.</span></span>  
  
-   <span data-ttu-id="c1553-2962">Si el valor de <xref:System.Windows.Forms.DragAction> es `Drop`, el valor del efecto de colocar se devuelve al origen, para que la aplicación de origen pueda realizar la operación apropiada en los datos de origen; por ejemplo, cortar los datos si la operación es un movimiento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2962">If the value of <xref:System.Windows.Forms.DragAction> is `Drop`, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
-   <span data-ttu-id="c1553-2963">Si el valor de <xref:System.Windows.Forms.DragAction> es `Cancel`, el <xref:System.Windows.Forms.Control.DragLeave> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2963">If the value of <xref:System.Windows.Forms.DragAction> is `Cancel`, the <xref:System.Windows.Forms.Control.DragLeave> event is raised.</span></span>  
  
 <span data-ttu-id="c1553-2964">De forma predeterminada, el <xref:System.Windows.Forms.Control.QueryContinueDrag> evento establece <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> a `Cancel` en <xref:System.Windows.Forms.DragAction> si se presionó la tecla ESC y se establece <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> a `Drop` en <xref:System.Windows.Forms.DragAction> si se presiona el botón izquierdo, central o derecho del mouse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2964">By default, the <xref:System.Windows.Forms.Control.QueryContinueDrag> event sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Cancel` in <xref:System.Windows.Forms.DragAction> if the ESC key was pressed and sets <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> to `Drop` in <xref:System.Windows.Forms.DragAction> if the left, middle, or right mouse button is pressed.</span></span>  
  
 <span data-ttu-id="c1553-2965">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-2965">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-2966">Este fragmento de código muestra cómo utilizar el <xref:System.Windows.Forms.Control.QueryContinueDrag> evento para cancelar la operación de arrastrar y colocar, si la operación de arrastre sobrepasa los límites del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-2966">This code excerpt demonstrates using the <xref:System.Windows.Forms.Control.QueryContinueDrag> event to cancel the drag-and-drop operation if the drag operation moves outside the bounds of the form.</span></span> <span data-ttu-id="c1553-2967">Consulte la <xref:System.Windows.Forms.Control.DoDragDrop%2A> método para el ejemplo de código completo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2967">See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CPP/form1.cpp#6)]
 [!code-csharp[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/CS/form1.cs#6)]
 [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.DoDragDrop/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseDragEvent">
      <MemberSignature Language="C#" Value="protected void RaiseDragEvent (object key, System.Windows.Forms.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseDragEvent(object key, class System.Windows.Forms.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseDragEvent (key As Object, e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseDragEvent(System::Object ^ key, System::Windows::Forms::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseDragEvent : obj * System.Windows.Forms.DragEventArgs -&gt; unit" Usage="control.RaiseDragEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c1553-2968">Evento que debe provocarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2968">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-2969">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2969">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2970">Genera el evento de arrastre adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2970">Raises the appropriate drag event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseKeyEvent">
      <MemberSignature Language="C#" Value="protected void RaiseKeyEvent (object key, System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseKeyEvent(object key, class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseKeyEvent (key As Object, e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseKeyEvent(System::Object ^ key, System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseKeyEvent : obj * System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="control.RaiseKeyEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c1553-2971">Evento que debe provocarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2971">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-2972">Objeto <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2972">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2973">Provoca el evento de tecla adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2973">Raises the appropriate key event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaiseMouseEvent">
      <MemberSignature Language="C#" Value="protected void RaiseMouseEvent (object key, System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseMouseEvent(object key, class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseMouseEvent (key As Object, e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseMouseEvent(System::Object ^ key, System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaiseMouseEvent : obj * System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="control.RaiseMouseEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c1553-2974">Evento que debe provocarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2974">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-2975">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2975">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2976">Provoca el evento del mouse adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2976">Raises the appropriate mouse event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePaintEvent">
      <MemberSignature Language="C#" Value="protected void RaisePaintEvent (object key, System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaisePaintEvent(object key, class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaisePaintEvent (key As Object, e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaisePaintEvent(System::Object ^ key, System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.RaisePaintEvent : obj * System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="control.RaisePaintEvent (key, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="c1553-2977">Evento que debe provocarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-2977">The event to raise.</span></span></param>
        <param name="e"><span data-ttu-id="c1553-2978">Objeto <see cref="T:System.Windows.Forms.PaintEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-2978">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-2979">Provoca el evento de dibujo adecuado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2979">Raises the appropriate paint event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RecreateHandle">
      <MemberSignature Language="C#" Value="protected void RecreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RecreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RecreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RecreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RecreateHandle();" />
      <MemberSignature Language="F#" Value="member this.RecreateHandle : unit -&gt; unit" Usage="control.RecreateHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-2980">Obliga a que se vuelva a crear el identificador del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2980">Forces the re-creation of the handle for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2981">El <xref:System.Windows.Forms.Control.RecreateHandle%2A> se llama al método cada vez que se necesitan parámetros para un nuevo control, pero mediante una llamada de <xref:System.Windows.Forms.Control.UpdateStyles%2A> a <xref:System.Windows.Forms.Control.CreateParams%2A> no es suficiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2981">The <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is called whenever parameters are needed for a new control, but using a call from <xref:System.Windows.Forms.Control.UpdateStyles%2A> to <xref:System.Windows.Forms.Control.CreateParams%2A> is insufficient.</span></span> <span data-ttu-id="c1553-2982">Este método también llama <xref:System.Windows.Forms.Control.DestroyHandle%2A> y <xref:System.Windows.Forms.Control.CreateHandle%2A> y establece <xref:System.Windows.Forms.Control.RecreatingHandle%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-2982">This method also calls <xref:System.Windows.Forms.Control.DestroyHandle%2A> and <xref:System.Windows.Forms.Control.CreateHandle%2A> and sets <xref:System.Windows.Forms.Control.RecreatingHandle%2A> to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.RecreatingHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="RecreatingHandle">
      <MemberSignature Language="C#" Value="public bool RecreatingHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RecreatingHandle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RecreatingHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecreatingHandle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RecreatingHandle { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RecreatingHandle : bool" Usage="System.Windows.Forms.Control.RecreatingHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-2983">Obtiene un valor que indica si el control está volviendo a crear su identificador en la actualidad.</span><span class="sxs-lookup"><span data-stu-id="c1553-2983">Gets a value indicating whether the control is currently re-creating its handle.</span></span></summary>
        <value><span data-ttu-id="c1553-2984"><see langword="true" /> si el control está volviendo a crear su identificador en la actualidad; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2984"><see langword="true" /> if the control is currently re-creating its handle; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2985">El <xref:System.Windows.Forms.Control.RecreatingHandle%2A> propiedad devuelve `true` si el <xref:System.Windows.Forms.Control.RecreateHandle%2A> método todavía se está ejecutando en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-2985">The <xref:System.Windows.Forms.Control.RecreatingHandle%2A> property returns `true` if the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method is still running on the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateControl" />
        <altmember cref="M:System.Windows.Forms.Control.CreateHandle" />
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
        <altmember cref="M:System.Windows.Forms.Control.DestroyHandle" />
        <altmember cref="P:System.Windows.Forms.Control.Handle" />
        <altmember cref="P:System.Windows.Forms.Control.IsHandleCreated" />
        <altmember cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.RecreateHandle" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateStyles" />
      </Docs>
    </Member>
    <Member MemberName="RectangleToClient">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RectangleToClient (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle RectangleToClient(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function RectangleToClient (r As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle RectangleToClient(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.RectangleToClient : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="control.RectangleToClient r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="c1553-2986"><see cref="T:System.Drawing.Rectangle" /> en coordenadas de pantalla que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="c1553-2986">The screen coordinate <see cref="T:System.Drawing.Rectangle" /> to convert.</span></span></param>
        <summary><span data-ttu-id="c1553-2987">Calcula el tamaño y la ubicación del rectángulo de pantalla especificado, en coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2987">Computes the size and location of the specified screen rectangle in client coordinates.</span></span></summary>
        <returns><span data-ttu-id="c1553-2988"><see cref="T:System.Drawing.Rectangle" /> que representa el <see cref="T:System.Drawing.Rectangle" /> convertido, <paramref name="r" />, en coordenadas de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-2988">A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="r" />, in client coordinates.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="RectangleToScreen">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle RectangleToScreen(valuetype System.Drawing.Rectangle r) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function RectangleToScreen (r As Rectangle) As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle RectangleToScreen(System::Drawing::Rectangle r);" />
      <MemberSignature Language="F#" Value="member this.RectangleToScreen : System.Drawing.Rectangle -&gt; System.Drawing.Rectangle" Usage="control.RectangleToScreen r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="c1553-2989"><see cref="T:System.Drawing.Rectangle" /> en coordenadas de cliente que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="c1553-2989">The client coordinate <see cref="T:System.Drawing.Rectangle" /> to convert.</span></span></param>
        <summary><span data-ttu-id="c1553-2990">Calcula el tamaño y la ubicación del rectángulo de cliente especificado, en coordenadas de pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-2990">Computes the size and location of the specified client rectangle in screen coordinates.</span></span></summary>
        <returns><span data-ttu-id="c1553-2991"><see cref="T:System.Drawing.Rectangle" /> que representa el <see cref="T:System.Drawing.Rectangle" /> convertido, <paramref name="p" />, en coordenadas de pantalla.</span><span class="sxs-lookup"><span data-stu-id="c1553-2991">A <see cref="T:System.Drawing.Rectangle" /> that represents the converted <see cref="T:System.Drawing.Rectangle" />, <paramref name="p" />, in screen coordinates.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-2992">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, y <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> miembros.</span><span class="sxs-lookup"><span data-stu-id="c1553-2992">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=nameWithType>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=nameWithType> members.</span></span> <span data-ttu-id="c1553-2993">Para ejecutar el ejemplo, pegue el código siguiente en un formulario denominado **Form1** que contiene varios controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-2993">To run the example, paste the following code in a form called **Form1** containing several controls.</span></span> <span data-ttu-id="c1553-2994">Este ejemplo requiere que el <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, y <xref:System.Windows.Forms.Control.MouseUp> eventos están conectados a los controladores de eventos definidos en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c1553-2994">This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.RectangleToScreen/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Rectangle" />
        <altmember cref="M:System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)" />
      </Docs>
    </Member>
    <Member MemberName="ReflectMessage">
      <MemberSignature Language="C#" Value="protected static bool ReflectMessage (IntPtr hWnd, ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool ReflectMessage(native int hWnd, valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function ReflectMessage (hWnd As IntPtr, ByRef m As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool ReflectMessage(IntPtr hWnd, System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="static member ReflectMessage : nativeint *  -&gt; bool" Usage="System.Windows.Forms.Control.ReflectMessage (hWnd, m)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hWnd" Type="System.IntPtr" />
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="hWnd"><span data-ttu-id="c1553-2995"><see cref="T:System.IntPtr" /> que representa el identificador del control donde se va a reflejar el mensaje.</span><span class="sxs-lookup"><span data-stu-id="c1553-2995">An <see cref="T:System.IntPtr" /> representing the handle of the control to reflect the message to.</span></span></param>
        <param name="m"><span data-ttu-id="c1553-2996"><see cref="T:System.Windows.Forms.Message" /> que representa al mensaje de Windows que se va a reflejar.</span><span class="sxs-lookup"><span data-stu-id="c1553-2996">A <see cref="T:System.Windows.Forms.Message" /> representing the Windows message to reflect.</span></span></param>
        <summary><span data-ttu-id="c1553-2997">Refleja el mensaje especificado en el control que está enlazado al identificador especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-2997">Reflects the specified message to the control that is bound to the specified handle.</span></span></summary>
        <returns><span data-ttu-id="c1553-2998"><see langword="true" /> si se ha reflejado el mensaje; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-2998"><see langword="true" /> if the message was reflected; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-2999">El <xref:System.Windows.Forms.Control.ReflectMessage%2A> método es un método de infraestructura y normalmente no debe llamarse desde el código.</span><span class="sxs-lookup"><span data-stu-id="c1553-2999">The <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is an infrastructure method and typically should not be called from your code.</span></span>  
  
 <span data-ttu-id="c1553-3000">Si el `hWnd` parámetro no representa un control válido, el <xref:System.Windows.Forms.Control.ReflectMessage%2A> devuelve del método `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3000">If the `hWnd` parameter does not represent a valid control, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="c1553-3001">Dado que los mensajes de Windows se devuelven a la ventana de nivel superior, el <xref:System.Windows.Forms.Control.ReflectMessage%2A> método se usa para propagar el mensaje devuelto al control que envió el mensaje.</span><span class="sxs-lookup"><span data-stu-id="c1553-3001">Because Windows messages are returned to the top-level window, the <xref:System.Windows.Forms.Control.ReflectMessage%2A> method is used to propagate the return message to the control that sent the message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-3002">para todas las ventanas llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3002">for all windows to call this method.</span></span> <span data-ttu-id="c1553-3003">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3003">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public virtual void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Refresh();" />
      <MemberSignature Language="F#" Value="abstract member Refresh : unit -&gt; unit&#xA;override this.Refresh : unit -&gt; unit" Usage="control.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3004">Obliga al control a invalidar su área cliente y, acto seguido, obliga a que vuelva a dibujarse el control y sus controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3004">Forces the control to invalidate its client area and immediately redraw itself and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-3005">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.Refresh" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.Control.Refresh" /> método por lo que se invaliden y se vuelve a dibujarse el control y sus controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3005">When overriding <see cref="M:System.Windows.Forms.Control.Refresh" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.Refresh" /> method so the control and its child controls are invalidated and redrawn.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.Update" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <Member MemberName="Region">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Region { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Region Region" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Region" />
      <MemberSignature Language="VB.NET" Value="Public Property Region As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Region ^ Region { System::Drawing::Region ^ get(); void set(System::Drawing::Region ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Region : System.Drawing.Region with get, set" Usage="System.Windows.Forms.Control.Region" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3006">Obtiene o establece la región de ventana asociada al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3006">Gets or sets the window region associated with the control.</span></span></summary>
        <value><span data-ttu-id="c1553-3007"><see cref="T:System.Drawing.Region" /> de ventana asociada al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3007">The window <see cref="T:System.Drawing.Region" /> associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3008">La región de ventana es una colección de píxeles dentro de la ventana donde el sistema operativo permite dibujar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3008">The window region is a collection of pixels within the window where the operating system permits drawing.</span></span> <span data-ttu-id="c1553-3009">El sistema operativo no muestra ninguna parte de una ventana que se encuentra fuera de la región de ventana.</span><span class="sxs-lookup"><span data-stu-id="c1553-3009">The operating system does not display any portion of a window that lies outside of the window region.</span></span> <span data-ttu-id="c1553-3010">Las coordenadas de la región de un control son relativas a la esquina superior izquierda del control, no en el área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3010">The coordinates of a control's region are relative to the upper-left corner of the control, not the client area of the control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-3011">La colección de píxeles que contiene la región puede ser no contigua.</span><span class="sxs-lookup"><span data-stu-id="c1553-3011">The collection of pixels contained with the region can be noncontiguous.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3012">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.Region%2A> propiedad mediante la creación de un botón redondo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3012">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.Region%2A> property by creating a round button.</span></span> <span data-ttu-id="c1553-3013">Para ejecutar el ejemplo, pegue el código siguiente en un formulario que contenga un botón denominado `roundButton`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3013">To run the example, paste the following code in a form containing a button called `roundButton`.</span></span> <span data-ttu-id="c1553-3014">Este ejemplo requiere que el <xref:System.Windows.Forms.Control.Paint> evento está conectado al controlador de eventos definido en el ejemplo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3014">This example requires that the <xref:System.Windows.Forms.Control.Paint> event is connected to the event handler defined in the example.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.Region#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.Region#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.Region#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.Region/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-3015">para todas las ventanas establecer este valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3015">for all windows to set this property value.</span></span> <span data-ttu-id="c1553-3016">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="c1553-3016">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="RegionChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RegionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RegionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.RegionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RegionChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RegionChanged;" />
      <MemberSignature Language="F#" Value="member this.RegionChanged : EventHandler " Usage="member this.RegionChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3017">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Region" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3017">Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3018">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3018">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3019">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-3019">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-3020">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.RegionChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3020">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.RegionChanged> event.</span></span> <span data-ttu-id="c1553-3021">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3021">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-3022">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3022">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-3023">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3023">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-3024">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.RegionChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3024">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.RegionChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#22)]
 [!code-vb[System.Windows.Forms.EventExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderRightToLeft">
      <MemberSignature Language="C#" Value="protected internal bool RenderRightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderRightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RenderRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property RenderRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool RenderRightToLeft { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RenderRightToLeft : bool" Usage="System.Windows.Forms.Control.RenderRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("This property has been deprecated. Please use RightToLeft instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3025">Esta propiedad está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="c1553-3025">This property is now obsolete.</span></span></summary>
        <value><span data-ttu-id="c1553-3026"><see langword="true" /> si el control se representa de derecha a izquierda; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3026"><see langword="true" /> if the control is rendered from right to left; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1553-3027">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3027">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RescaleConstantsForDpi">
      <MemberSignature Language="C#" Value="protected virtual void RescaleConstantsForDpi (int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RescaleConstantsForDpi(int32 deviceDpiOld, int32 deviceDpiNew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RescaleConstantsForDpi (deviceDpiOld As Integer, deviceDpiNew As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RescaleConstantsForDpi(int deviceDpiOld, int deviceDpiNew);" />
      <MemberSignature Language="F#" Value="abstract member RescaleConstantsForDpi : int * int -&gt; unit&#xA;override this.RescaleConstantsForDpi : int * int -&gt; unit" Usage="control.RescaleConstantsForDpi (deviceDpiOld, deviceDpiNew)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceDpiOld" Type="System.Int32" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="deviceDpiNew" Type="System.Int32" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="deviceDpiOld"><span data-ttu-id="c1553-3028">Valor de PPP antes del cambio.</span><span class="sxs-lookup"><span data-stu-id="c1553-3028">The DPI value prior to the change.</span></span></param>
        <param name="deviceDpiNew"><span data-ttu-id="c1553-3029">El valor de PPP después del cambio.</span><span class="sxs-lookup"><span data-stu-id="c1553-3029">The DPI value after the change.</span></span></param>
        <summary><span data-ttu-id="c1553-3030">Proporciona constantes para cambiar la escala del control cuando se produce un cambio de PPP.</span><span class="sxs-lookup"><span data-stu-id="c1553-3030">Provides constants for rescaling the control when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBackColor">
      <MemberSignature Language="C#" Value="public virtual void ResetBackColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetBackColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetBackColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetBackColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetBackColor : unit -&gt; unit&#xA;override this.ResetBackColor : unit -&gt; unit" Usage="control.ResetBackColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3031">Restablece el valor predeterminado de la propiedad <see cref="P:System.Windows.Forms.Control.BackColor" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3031">Resets the <see cref="P:System.Windows.Forms.Control.BackColor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3032">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3032">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetBindings">
      <MemberSignature Language="C#" Value="public void ResetBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetBindings" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBindings ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBindings();" />
      <MemberSignature Language="F#" Value="member this.ResetBindings : unit -&gt; unit" Usage="control.ResetBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3033">Hace que un control enlazado a <see cref="T:System.Windows.Forms.BindingSource" /> vuelva a leer todos los elementos de la lista y actualice los valores mostrados.</span><span class="sxs-lookup"><span data-stu-id="c1553-3033">Causes a control bound to the <see cref="T:System.Windows.Forms.BindingSource" /> to reread all the items in the list and refresh their displayed values.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3034">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3034">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.DataBindings" />
      </Docs>
    </Member>
    <Member MemberName="ResetCursor">
      <MemberSignature Language="C#" Value="public virtual void ResetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetCursor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetCursor();" />
      <MemberSignature Language="F#" Value="abstract member ResetCursor : unit -&gt; unit&#xA;override this.ResetCursor : unit -&gt; unit" Usage="control.ResetCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3035">Restablece el valor predeterminado de la propiedad <see cref="P:System.Windows.Forms.Control.Cursor" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3035">Resets the <see cref="P:System.Windows.Forms.Control.Cursor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3036">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3036">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetFont">
      <MemberSignature Language="C#" Value="public virtual void ResetFont ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetFont() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetFont" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetFont ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetFont();" />
      <MemberSignature Language="F#" Value="abstract member ResetFont : unit -&gt; unit&#xA;override this.ResetFont : unit -&gt; unit" Usage="control.ResetFont " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3037">Restablece el valor predeterminado de la propiedad <see cref="P:System.Windows.Forms.Control.Font" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3037">Resets the <see cref="P:System.Windows.Forms.Control.Font" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3038">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3038">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetForeColor">
      <MemberSignature Language="C#" Value="public virtual void ResetForeColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetForeColor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetForeColor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetForeColor();" />
      <MemberSignature Language="F#" Value="abstract member ResetForeColor : unit -&gt; unit&#xA;override this.ResetForeColor : unit -&gt; unit" Usage="control.ResetForeColor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3039">Restablece el valor predeterminado de la propiedad <see cref="P:System.Windows.Forms.Control.ForeColor" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3039">Resets the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3040">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3040">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetImeMode">
      <MemberSignature Language="C#" Value="public void ResetImeMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetImeMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetImeMode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetImeMode();" />
      <MemberSignature Language="F#" Value="member this.ResetImeMode : unit -&gt; unit" Usage="control.ResetImeMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3041">Restablece el valor predeterminado de la propiedad <see cref="P:System.Windows.Forms.Control.ImeMode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3041">Resets the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3042">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3042">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetMouseEventArgs">
      <MemberSignature Language="C#" Value="protected void ResetMouseEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetMouseEventArgs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetMouseEventArgs" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetMouseEventArgs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetMouseEventArgs();" />
      <MemberSignature Language="F#" Value="member this.ResetMouseEventArgs : unit -&gt; unit" Usage="control.ResetMouseEventArgs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3043">Restablece el control para controlar el evento <see cref="E:System.Windows.Forms.Control.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3043">Resets the control to handle the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetRightToLeft">
      <MemberSignature Language="C#" Value="public virtual void ResetRightToLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetRightToLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetRightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetRightToLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetRightToLeft();" />
      <MemberSignature Language="F#" Value="abstract member ResetRightToLeft : unit -&gt; unit&#xA;override this.ResetRightToLeft : unit -&gt; unit" Usage="control.ResetRightToLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3044">Restablece el valor predeterminado de la propiedad <see cref="P:System.Windows.Forms.Control.RightToLeft" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3044">Resets the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to its default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3045">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3045">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetText">
      <MemberSignature Language="C#" Value="public virtual void ResetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResetText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetText ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetText();" />
      <MemberSignature Language="F#" Value="abstract member ResetText : unit -&gt; unit&#xA;override this.ResetText : unit -&gt; unit" Usage="control.ResetText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3046">Restablece el valor predeterminado de la propiedad <see cref="P:System.Windows.Forms.Control.Text" /> (<see cref="F:System.String.Empty" />).</span><span class="sxs-lookup"><span data-stu-id="c1553-3046">Resets the <see cref="P:System.Windows.Forms.Control.Text" /> property to its default value (<see cref="F:System.String.Empty" />).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3047">Normalmente, utilice este método si se está creando un diseñador para el <xref:System.Windows.Forms.Control> o crear su propio control que incorpore el <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3047">You typically use this method if you are either creating a designer for the <xref:System.Windows.Forms.Control> or creating your own control incorporating the <xref:System.Windows.Forms.Control>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public event EventHandler Resize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Resize" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Resize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Resize As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Resize;" />
      <MemberSignature Language="F#" Value="member this.Resize : EventHandler " Usage="member this.Resize : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3048">Se produce cuando se cambia el tamaño del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3048">Occurs when the control is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3049">Para determinar el <xref:System.Windows.Forms.Control.Size%2A> del control cuyo tamaño ha cambiado, puede convertir el `sender` parámetro de registrado <xref:System.Windows.Forms.ControlEventHandler> método a un <xref:System.Windows.Forms.Control> y obtenga su <xref:System.Windows.Forms.Control.Size%2A> propiedad (o <xref:System.Windows.Forms.Control.Height%2A> y <xref:System.Windows.Forms.Control.Width%2A> propiedades individualmente).</span><span class="sxs-lookup"><span data-stu-id="c1553-3049">To determine the <xref:System.Windows.Forms.Control.Size%2A> of the resized control, you can cast the `sender` parameter of the registered <xref:System.Windows.Forms.ControlEventHandler> method  to a <xref:System.Windows.Forms.Control> and get its <xref:System.Windows.Forms.Control.Size%2A> property (or <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually).</span></span>  
  
 <span data-ttu-id="c1553-3050">Para controlar los diseños personalizados, utilice el <xref:System.Windows.Forms.Control.Layout> eventos en lugar del evento de cambio de tamaño.</span><span class="sxs-lookup"><span data-stu-id="c1553-3050">To handle custom layouts, use the <xref:System.Windows.Forms.Control.Layout> event instead of the Resize event.</span></span> <span data-ttu-id="c1553-3051">El <xref:System.Windows.Forms.Control.Layout> evento se genera en respuesta a un <xref:System.Windows.Forms.Control.Resize> eventos, sino también en respuesta a otros cambios que afectan al diseño del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3051">The <xref:System.Windows.Forms.Control.Layout> event is raised in response to a <xref:System.Windows.Forms.Control.Resize> event, but also in response to other changes that affect the layout of the control.</span></span>  
  
 <span data-ttu-id="c1553-3052">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3052">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3053">El siguiente código de ejemplo controla el <xref:System.Windows.Forms.Control.Resize> eventos de un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3053">The following code example handles the <xref:System.Windows.Forms.Control.Resize> event of a <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-3054">Cuando se cambia el tamaño del formulario, el controlador de eventos garantiza que el formulario permanece cuadrado (su <xref:System.Windows.Forms.Control.Height%2A> y <xref:System.Windows.Forms.Control.Width%2A> permanecen igual).</span><span class="sxs-lookup"><span data-stu-id="c1553-3054">When the form is resized, the event handler ensures that the form stays square (its <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> remain equal).</span></span> <span data-ttu-id="c1553-3055">Para ejecutar este ejemplo, asegúrese de que y asociar a este método de control de eventos con el formulario <xref:System.Windows.Forms.Control.Resize> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3055">To run this example, make sure and associate this event-handling method with the form's <xref:System.Windows.Forms.Control.Resize> event.</span></span>  
  
 [!code-cpp[WinForms.Control.Resize#1](~/samples/snippets/cpp/VS_Snippets_Winforms/WinForms.Control.Resize/CPP/form1.cpp#1)]
 [!code-csharp[WinForms.Control.Resize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/WinForms.Control.Resize/CS/form1.cs#1)]
 [!code-vb[WinForms.Control.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/WinForms.Control.Resize/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="protected bool ResizeRedraw { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ResizeRedraw" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResizeRedraw As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool ResizeRedraw { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeRedraw : bool with get, set" Usage="System.Windows.Forms.Control.ResizeRedraw" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3056">Obtiene o establece un valor que indica si el control vuelve a dibujarse automáticamente cuando cambia de tamaño.</span><span class="sxs-lookup"><span data-stu-id="c1553-3056">Gets or sets a value indicating whether the control redraws itself when resized.</span></span></summary>
        <value><span data-ttu-id="c1553-3057"><see langword="true" /> si el control vuelve a dibujarse automáticamente cuando cambia de tamaño; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3057"><see langword="true" /> if the control redraws itself when resized; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3058">El <xref:System.Windows.Forms.Control.ResizeRedraw%2A> valor de propiedad es equivalente al valor devuelto de la <xref:System.Windows.Forms.Control.GetStyle%2A> método cuando se pasan en el <xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType> valor como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="c1553-3058">The <xref:System.Windows.Forms.Control.ResizeRedraw%2A> property value is equivalent to the return value of the <xref:System.Windows.Forms.Control.GetStyle%2A> method when passing in the <xref:System.Windows.Forms.ControlStyles.ResizeRedraw?displayProperty=nameWithType> value as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ResumeLayout">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-3059">Reanuda la lógica de diseño habitual.</span><span class="sxs-lookup"><span data-stu-id="c1553-3059">Resumes the usual layout logic.</span></span></summary>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResumeLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeLayout();" />
      <MemberSignature Language="F#" Value="member this.ResumeLayout : unit -&gt; unit" Usage="control.ResumeLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3060">Reanuda la lógica de diseño habitual.</span><span class="sxs-lookup"><span data-stu-id="c1553-3060">Resumes usual layout logic.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3061">Una llamada a la <xref:System.Windows.Forms.Control.ResumeLayout%2A> método fuerza un diseño inmediato si hay solicitudes de diseño pendientes.</span><span class="sxs-lookup"><span data-stu-id="c1553-3061">Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.</span></span>  
  
 <span data-ttu-id="c1553-3062">El <xref:System.Windows.Forms.Control.SuspendLayout%2A> y <xref:System.Windows.Forms.Control.ResumeLayout%2A> métodos se usan conjuntamente para suprimir varios <xref:System.Windows.Forms.Control.Layout> eventos mientras se ajustan varios atributos del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3062">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="c1553-3063">Por ejemplo, normalmente se llamaría a la <xref:System.Windows.Forms.Control.SuspendLayout%2A> método, a continuación, establezca el <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, o <xref:System.Windows.Forms.Control.Dock%2A> propiedades del control y, a continuación, llame el <xref:System.Windows.Forms.Control.ResumeLayout%2A> método para habilitar los cambios surtan efecto.</span><span class="sxs-lookup"><span data-stu-id="c1553-3063">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="c1553-3064">No debe haber ninguna llamada pendiente a <xref:System.Windows.Forms.Control.SuspendLayout%2A> para <xref:System.Windows.Forms.Control.ResumeLayout%2A> llamará correctamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3064">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3065">El ejemplo de código siguiente agrega dos botones a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3065">The following code example adds two buttons to a form.</span></span> <span data-ttu-id="c1553-3066">Las transacciones de ejemplo la adición de los botones mediante el uso de la <xref:System.Windows.Forms.Control.SuspendLayout%2A> y <xref:System.Windows.Forms.Control.ResumeLayout%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3066">The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]
 [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="ResumeLayout">
      <MemberSignature Language="C#" Value="public void ResumeLayout (bool performLayout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResumeLayout(bool performLayout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ResumeLayout(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResumeLayout (performLayout As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResumeLayout(bool performLayout);" />
      <MemberSignature Language="F#" Value="member this.ResumeLayout : bool -&gt; unit" Usage="control.ResumeLayout performLayout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="performLayout" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="performLayout"><span data-ttu-id="c1553-3067">Es <see langword="true" /> para ejecutar solicitudes de diseño pendientes; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3067"><see langword="true" /> to execute pending layout requests; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1553-3068">Reanuda la lógica de diseño habitual, forzando opcionalmente un diseño inmediato de las solicitudes de diseño pendientes.</span><span class="sxs-lookup"><span data-stu-id="c1553-3068">Resumes usual layout logic, optionally forcing an immediate layout of pending layout requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3069">Una llamada a la <xref:System.Windows.Forms.Control.ResumeLayout%2A> método fuerza un diseño inmediato si hay solicitudes de diseño pendientes.</span><span class="sxs-lookup"><span data-stu-id="c1553-3069">Calling the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method forces an immediate layout if there are any pending layout requests.</span></span> <span data-ttu-id="c1553-3070">Cuando el `performLayout` parámetro se establece en `true`, se produce un diseño inmediato si hay solicitudes de diseño pendientes.</span><span class="sxs-lookup"><span data-stu-id="c1553-3070">When the `performLayout` parameter is set to `true`, an immediate layout occurs if there are any pending layout requests.</span></span>  
  
 <span data-ttu-id="c1553-3071">El <xref:System.Windows.Forms.Control.SuspendLayout%2A> y <xref:System.Windows.Forms.Control.ResumeLayout%2A> métodos se usan conjuntamente para suprimir varios <xref:System.Windows.Forms.Control.Layout> eventos mientras se ajustan varios atributos del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3071">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="c1553-3072">Por ejemplo, normalmente se llamaría a la <xref:System.Windows.Forms.Control.SuspendLayout%2A> método, a continuación, establezca el <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, o <xref:System.Windows.Forms.Control.Dock%2A> propiedades del control y, a continuación, llame el <xref:System.Windows.Forms.Control.ResumeLayout%2A> método para habilitar los cambios surtan efecto.</span><span class="sxs-lookup"><span data-stu-id="c1553-3072">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="c1553-3073">No debe haber ninguna llamada pendiente a <xref:System.Windows.Forms.Control.SuspendLayout%2A> para <xref:System.Windows.Forms.Control.ResumeLayout%2A> llamará correctamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3073">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-3074">Al agregar varios controles a un control principal, se recomienda que llame el <xref:System.Windows.Forms.Control.SuspendLayout%2A> método antes de inicializar los controles que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3074">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="c1553-3075">Después de agregar los controles al control primario, llame a la <xref:System.Windows.Forms.Control.ResumeLayout%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3075">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="c1553-3076">Esto aumentará el rendimiento de aplicaciones con muchos controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3076">This will increase the performance of applications with many controls.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public int Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Right { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Right : int" Usage="System.Windows.Forms.Control.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3077">Obtiene la distancia, en píxeles, que existe entre el borde derecho del control y el borde izquierdo del área cliente de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3077">Gets the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="c1553-3078"><see cref="T:System.Int32" /> que representa la distancia, en píxeles, que existe entre el borde derecho del control y el borde izquierdo del área cliente de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3078">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the right edge of the control and the left edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3079">El valor de la <xref:System.Windows.Forms.Control.Right%2A> propiedad es igual a la suma de los <xref:System.Windows.Forms.Control.Left%2A> valor de propiedad y el <xref:System.Windows.Forms.Control.Width%2A> valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3079">The value of the <xref:System.Windows.Forms.Control.Right%2A> property is equal to the sum of the <xref:System.Windows.Forms.Control.Left%2A> property value and the <xref:System.Windows.Forms.Control.Width%2A> property value.</span></span>  
  
 <span data-ttu-id="c1553-3080">El <xref:System.Windows.Forms.Control.Right%2A> propiedad es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="c1553-3080">The <xref:System.Windows.Forms.Control.Right%2A> property is read-only.</span></span> <span data-ttu-id="c1553-3081">Puede cambiar este valor de propiedad indirectamente cambiando el valor de la <xref:System.Windows.Forms.Control.Left%2A> o <xref:System.Windows.Forms.Control.Width%2A> propiedades o llamar a la <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, o <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3081">You can change this property value indirectly by changing the value of the <xref:System.Windows.Forms.Control.Left%2A> or <xref:System.Windows.Forms.Control.Width%2A> properties or calling the <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, or <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3082">El ejemplo de código siguiente crea tres <xref:System.Windows.Forms.Button> controles de formularios y establece su tamaño y la ubicación mediante el uso de las diversas propiedades relacionadas con la ubicación y tamaño.</span><span class="sxs-lookup"><span data-stu-id="c1553-3082">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="c1553-3083">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que tiene un ancho y alto de al menos 300 píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3083">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 [!code-cpp[Control.KeyUp#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyUp/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyUp#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyUp/CS/form1.cs#1)]
 [!code-vb[Control.KeyUp#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyUp/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Right" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberSignature Language="F#" Value="member this.RightToLeft : System.Windows.Forms.RightToLeft with get, set" Usage="System.Windows.Forms.Control.RightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.AmbientValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3084">Obtiene o establece un valor que indica si los elementos del control se alinean para admitir configuraciones regionales que utilizan fuentes de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3084">Gets or sets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</span></span></summary>
        <value><span data-ttu-id="c1553-3085">Uno de los valores de <see cref="T:System.Windows.Forms.RightToLeft" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3085">One of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span></span> <span data-ttu-id="c1553-3086">De manera predeterminada, es <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3086">The default is <see cref="F:System.Windows.Forms.RightToLeft.Inherit" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3087">El <xref:System.Windows.Forms.Control.RightToLeft%2A> es una propiedad de ambiente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3087">The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is an ambient property.</span></span> <span data-ttu-id="c1553-3088">Una propiedad de ambiente es una propiedad de control que, si no establece, se recupera desde el control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3088">An ambient property is a control property that, if not set, is retrieved from the parent control.</span></span> <span data-ttu-id="c1553-3089">Por ejemplo, un <xref:System.Windows.Forms.Button> tendrá el mismo <xref:System.Windows.Forms.Control.BackColor%2A> como su elemento primario <xref:System.Windows.Forms.Form> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-3089">For example, a <xref:System.Windows.Forms.Button> will have the same <xref:System.Windows.Forms.Control.BackColor%2A> as its parent <xref:System.Windows.Forms.Form> by default.</span></span> <span data-ttu-id="c1553-3090">Para obtener más información acerca de las propiedades de ambiente, vea la <xref:System.Windows.Forms.AmbientProperties> clase o el <xref:System.Windows.Forms.Control> información general de clases.</span><span class="sxs-lookup"><span data-stu-id="c1553-3090">For more information about ambient properties, see the <xref:System.Windows.Forms.AmbientProperties> class or the <xref:System.Windows.Forms.Control> class overview.</span></span>  
  
 <span data-ttu-id="c1553-3091">El <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad se utiliza para aplicaciones internacionales donde el idioma se escribe de derecha a izquierda, como el hebreo o árabe.</span><span class="sxs-lookup"><span data-stu-id="c1553-3091">The <xref:System.Windows.Forms.Control.RightToLeft%2A> property is used for international applications where the language is written from right to left, such as Hebrew or Arabic.</span></span> <span data-ttu-id="c1553-3092">Cuando esta propiedad se establece en <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, elementos de control que incluyen texto se muestran de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3092">When this property is set to <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType>, control elements that include text are displayed from right to left.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-3093">Si el valor de la <xref:System.Windows.Forms.Control.RightToLeft%2A> se cambia una propiedad en tiempo de ejecución, se conserva solo texto sin formato.</span><span class="sxs-lookup"><span data-stu-id="c1553-3093">If the value of the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed at run time, only raw text without formatting is preserved.</span></span>  
  
 <span data-ttu-id="c1553-3094">Los siguientes son algunos ejemplos de cómo los elementos del control se ven afectados por la <xref:System.Windows.Forms.Control.RightToLeft%2A> el valor de propiedad <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> :</span><span class="sxs-lookup"><span data-stu-id="c1553-3094">The following are a few examples of how control elements are affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property value of <xref:System.Windows.Forms.RightToLeft.Yes?displayProperty=nameWithType> :</span></span>  
  
-   <span data-ttu-id="c1553-3095">Se muestran las barras de desplazamiento vertical en el lado izquierdo en lugar de en el lado derecho de los controles desplazables (por ejemplo, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>multilínea <xref:System.Windows.Forms.TextBox>, y <xref:System.Windows.Forms.RichTextBox>).</span><span class="sxs-lookup"><span data-stu-id="c1553-3095">Vertical scroll bars are displayed on the left side rather than right side of scrollable controls (for example, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, multiline <xref:System.Windows.Forms.TextBox>, and <xref:System.Windows.Forms.RichTextBox>).</span></span>  
  
-   <span data-ttu-id="c1553-3096">Las barras de desplazamiento horizontal se inicie con el cuadro de desplazamiento (control) alineado a la derecha.</span><span class="sxs-lookup"><span data-stu-id="c1553-3096">Horizontal scroll bars start with the scroll box (thumb) right-aligned.</span></span>  
  
-   <span data-ttu-id="c1553-3097">La alineación del elemento de casilla de verificación, controlada por el `CheckAlign` , se invierte para <xref:System.Windows.Forms.CheckBox> y <xref:System.Windows.Forms.RadioButton> controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3097">The check box element alignment, controlled by the `CheckAlign` property, is reversed for <xref:System.Windows.Forms.CheckBox> and <xref:System.Windows.Forms.RadioButton> controls.</span></span>  
  
-   <span data-ttu-id="c1553-3098">Elementos de cuadro de lista, cuadro combinado y flechas controles están alineados a la derecha.</span><span class="sxs-lookup"><span data-stu-id="c1553-3098">Items in list box, combo box, and up-down controls are right aligned.</span></span>  
  
-   <span data-ttu-id="c1553-3099">Botones arriba y abajo están alineados a la izquierda en <xref:System.Windows.Forms.NumericUpDown> y <xref:System.Windows.Forms.DomainUpDown> controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3099">Up and down buttons are left-aligned on <xref:System.Windows.Forms.NumericUpDown> and <xref:System.Windows.Forms.DomainUpDown> controls.</span></span>  
  
-   <span data-ttu-id="c1553-3100">Menús (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, y <xref:System.Windows.Forms.ContextMenu>) se muestra alineado a la derecha.</span><span class="sxs-lookup"><span data-stu-id="c1553-3100">Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, and <xref:System.Windows.Forms.ContextMenu>) are displayed right-aligned.</span></span>  
  
-   <span data-ttu-id="c1553-3101">La alineación de los botones de barra de herramientas en un <xref:System.Windows.Forms.ToolBar> control o la alineación del texto en un <xref:System.Windows.Forms.ToolBarButton> no se ve afectado por la <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3101">The alignment of toolbar buttons on a <xref:System.Windows.Forms.ToolBar> control or the alignment of text on a <xref:System.Windows.Forms.ToolBarButton> is not affected by the <xref:System.Windows.Forms.Control.RightToLeft%2A> property.</span></span>  
  
-   <span data-ttu-id="c1553-3102"><xref:System.Windows.Forms.AxHost> admite la alineación de derecha a izquierda; Sin embargo, el efecto en un control ActiveX depende de la extensión a la que el autor del control había implementado la compatibilidad para la presentación de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3102"><xref:System.Windows.Forms.AxHost> supports right-to-left alignment; however, the effect on an ActiveX control depends on the extent to which the control author implemented support for right-to-left display.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="c1553-3103">El valor asignado no es uno de los valores de <see cref="T:System.Windows.Forms.RightToLeft" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3103">The assigned value is not one of the <see cref="T:System.Windows.Forms.RightToLeft" /> values.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-3104">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.RightToLeft" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.RightToLeft" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-3104">When overriding the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-3105">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3105">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-3106">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.RightToLeft" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3106">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RightToLeftChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RightToLeftChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RightToLeftChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.RightToLeftChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RightToLeftChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RightToLeftChanged;" />
      <MemberSignature Language="F#" Value="member this.RightToLeftChanged : EventHandler " Usage="member this.RightToLeftChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3107">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.RightToLeft" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3107">Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3108">Este evento se desencadena si el <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3108">This event is raised if the <xref:System.Windows.Forms.Control.RightToLeft%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-3109">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3109">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3110">El ejemplo de código siguiente es un controlador de eventos que se ejecuta cuando el <xref:System.Windows.Forms.Control.Text%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3110">The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes.</span></span> <span data-ttu-id="c1553-3111">El <xref:System.Windows.Forms.Control> clase tiene varios métodos con el patrón de nombre *PropertyName* `Changed` que se genera cuando correspondiente *PropertyName* cambia el valor ( *PropertyName* representa el nombre de la propiedad correspondiente).</span><span class="sxs-lookup"><span data-stu-id="c1553-3111">The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).</span></span>  
  
 <span data-ttu-id="c1553-3112">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3112">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="c1553-3113">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3113">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-3114">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3114">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RtlTranslateAlignment">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-3115">Convierte la alineación actual en la alineación correspondiente para que admita texto de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3115">Converts the current alignment to the appropriate alignment to support right-to-left text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Drawing.ContentAlignment RtlTranslateAlignment (System.Drawing.ContentAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateAlignment(valuetype System.Drawing.ContentAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As ContentAlignment) As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Drawing::ContentAlignment RtlTranslateAlignment(System::Drawing::ContentAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Drawing.ContentAlignment -&gt; System.Drawing.ContentAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Drawing.ContentAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="c1553-3116">Uno de los valores de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3116">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-3117">Convierte la <see cref="T:System.Drawing.ContentAlignment" /> especificada en la <see cref="T:System.Drawing.ContentAlignment" /> correspondiente para que admita texto de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3117">Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="c1553-3118">Uno de los valores de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3118">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3119">Si el <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad de <xref:System.Windows.Forms.RightToLeft> está establecido en `No`, el valor devuelto es igual que el `align` parámetro pasado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3119">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment (System.Windows.Forms.HorizontalAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment(valuetype System.Windows.Forms.HorizontalAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As HorizontalAlignment) As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::HorizontalAlignment RtlTranslateAlignment(System::Windows::Forms::HorizontalAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.HorizontalAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.HorizontalAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="c1553-3120">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3120">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-3121">Convierte la <see cref="T:System.Windows.Forms.HorizontalAlignment" /> especificada en la <see cref="T:System.Windows.Forms.HorizontalAlignment" /> correspondiente para que admita texto de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3121">Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="c1553-3122">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3122">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3123">Si el <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad de <xref:System.Windows.Forms.RightToLeft> está establecido en `No`, el valor devuelto es igual que el `align` parámetro pasado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3123">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateAlignment">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment (System.Windows.Forms.LeftRightAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment(valuetype System.Windows.Forms.LeftRightAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateAlignment (align As LeftRightAlignment) As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LeftRightAlignment RtlTranslateAlignment(System::Windows::Forms::LeftRightAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateAlignment : System.Windows.Forms.LeftRightAlignment -&gt; System.Windows.Forms.LeftRightAlignment" Usage="control.RtlTranslateAlignment align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="c1553-3124">Uno de los valores de <see cref="T:System.Windows.Forms.LeftRightAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3124">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-3125">Convierte la <see cref="T:System.Windows.Forms.LeftRightAlignment" /> especificada en la <see cref="T:System.Windows.Forms.LeftRightAlignment" /> correspondiente para que admita texto de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3125">Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="c1553-3126">Uno de los valores de <see cref="T:System.Windows.Forms.LeftRightAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3126">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3127">Si el <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad de <xref:System.Windows.Forms.RightToLeft> está establecido en `No`, el valor devuelto es igual que el `align` parámetro pasado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3127">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateContent">
      <MemberSignature Language="C#" Value="protected internal System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Drawing.ContentAlignment RtlTranslateContent(valuetype System.Drawing.ContentAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function RtlTranslateContent (align As ContentAlignment) As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Drawing::ContentAlignment RtlTranslateContent(System::Drawing::ContentAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateContent : System.Drawing.ContentAlignment -&gt; System.Drawing.ContentAlignment" Usage="control.RtlTranslateContent align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Drawing.ContentAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="c1553-3128">Uno de los valores de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3128">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-3129">Convierte la <see cref="T:System.Drawing.ContentAlignment" /> especificada en la <see cref="T:System.Drawing.ContentAlignment" /> correspondiente para que admita texto de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3129">Converts the specified <see cref="T:System.Drawing.ContentAlignment" /> to the appropriate <see cref="T:System.Drawing.ContentAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="c1553-3130">Uno de los valores de <see cref="T:System.Drawing.ContentAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3130">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3131">Si el <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad de <xref:System.Windows.Forms.RightToLeft> está establecido en `No`, el valor devuelto es igual que el `align` parámetro pasado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3131">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Drawing.ContentAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateHorizontal">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal (System.Windows.Forms.HorizontalAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal(valuetype System.Windows.Forms.HorizontalAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateHorizontal (align As HorizontalAlignment) As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::HorizontalAlignment RtlTranslateHorizontal(System::Windows::Forms::HorizontalAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateHorizontal : System.Windows.Forms.HorizontalAlignment -&gt; System.Windows.Forms.HorizontalAlignment" Usage="control.RtlTranslateHorizontal align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.HorizontalAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="c1553-3132">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3132">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-3133">Convierte la <see cref="T:System.Windows.Forms.HorizontalAlignment" /> especificada en la <see cref="T:System.Windows.Forms.HorizontalAlignment" /> correspondiente para que admita texto de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3133">Converts the specified <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.HorizontalAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="c1553-3134">Uno de los valores de <see cref="T:System.Windows.Forms.HorizontalAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3134">One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3135">Si el <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad de <xref:System.Windows.Forms.RightToLeft> está establecido en `No`, el valor devuelto es igual que el `align` parámetro pasado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3135">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.HorizontalAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="RtlTranslateLeftRight">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight (System.Windows.Forms.LeftRightAlignment align);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight(valuetype System.Windows.Forms.LeftRightAlignment align) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RtlTranslateLeftRight (align As LeftRightAlignment) As LeftRightAlignment" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Forms::LeftRightAlignment RtlTranslateLeftRight(System::Windows::Forms::LeftRightAlignment align);" />
      <MemberSignature Language="F#" Value="member this.RtlTranslateLeftRight : System.Windows.Forms.LeftRightAlignment -&gt; System.Windows.Forms.LeftRightAlignment" Usage="control.RtlTranslateLeftRight align" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.LeftRightAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="align" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="align"><span data-ttu-id="c1553-3136">Uno de los valores de <see cref="T:System.Windows.Forms.LeftRightAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3136">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-3137">Convierte la <see cref="T:System.Windows.Forms.LeftRightAlignment" /> especificada en la <see cref="T:System.Windows.Forms.LeftRightAlignment" /> correspondiente para que admita texto de derecha a izquierda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3137">Converts the specified <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to the appropriate <see cref="T:System.Windows.Forms.LeftRightAlignment" /> to support right-to-left text.</span></span></summary>
        <returns><span data-ttu-id="c1553-3138">Uno de los valores de <see cref="T:System.Windows.Forms.LeftRightAlignment" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3138">One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3139">Si el <xref:System.Windows.Forms.Control.RightToLeft%2A> propiedad de <xref:System.Windows.Forms.RightToLeft> está establecido en `No`, el valor devuelto es igual que el `align` parámetro pasado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3139">If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of <xref:System.Windows.Forms.RightToLeft> is set to `No`, the return value is equal to the `align` parameter passed in.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.RightToLeft" />
        <altmember cref="T:System.Windows.Forms.LeftRightAlignment" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)" />
        <altmember cref="M:System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Scale">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-3140">Ajusta la escala del control y de todos los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3140">Scales the control and any child controls.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (System.Drawing.SizeF factor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(valuetype System.Drawing.SizeF factor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Drawing.SizeF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (factor As SizeF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(System::Drawing::SizeF factor);" />
      <MemberSignature Language="F#" Value="member this.Scale : System.Drawing.SizeF -&gt; unit" Usage="control.Scale factor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="c1553-3141"><see cref="T:System.Drawing.SizeF" /> que contiene los factores de escala horizontal y vertical.</span><span class="sxs-lookup"><span data-stu-id="c1553-3141">A <see cref="T:System.Drawing.SizeF" /> containing the horizontal and vertical scaling factors.</span></span></param>
        <summary><span data-ttu-id="c1553-3142">Escala el control y todos los controles secundarios según el factor de escala especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3142">Scales the control and all child controls by the specified scaling factor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3143">El <xref:System.Windows.Forms.Control.Scale%2A> método escala el control mediante el ajuste de escala especificado `factor`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3143">The <xref:System.Windows.Forms.Control.Scale%2A> method scales the control by the specified scaling `factor`.</span></span> <span data-ttu-id="c1553-3144">También recursivamente escala todos los controles secundarios si el <xref:System.Windows.Forms.Control.ScaleChildren%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3144">It also recursively scales all child controls if the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`.</span></span> <span data-ttu-id="c1553-3145">Internamente, este método llama a <xref:System.Windows.Forms.Control.ScaleControl%2A> escalar cada control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3145">Internally, this method calls <xref:System.Windows.Forms.Control.ScaleControl%2A> to scale each control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ScaleChildren" />
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float ratio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 ratio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (ratio As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float ratio);" />
      <MemberSignature Language="F#" Value="member this.Scale : single -&gt; unit" Usage="control.Scale ratio" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ratio" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="ratio"><span data-ttu-id="c1553-3146">La proporción que se debe utilizar para ajustar a escala.</span><span class="sxs-lookup"><span data-stu-id="c1553-3146">The ratio to use for scaling.</span></span></param>
        <summary><span data-ttu-id="c1553-3147">Ajusta la escala del control y de todos los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3147">Scales the control and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Scale(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.Scale : single * single -&gt; unit" Usage="control.Scale (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Use the Scale(SizeF ratio) method instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="c1553-3148">Factor de escala horizontal.</span><span class="sxs-lookup"><span data-stu-id="c1553-3148">The horizontal scaling factor.</span></span></param>
        <param name="dy"><span data-ttu-id="c1553-3149">Factor de escala vertical.</span><span class="sxs-lookup"><span data-stu-id="c1553-3149">The vertical scaling factor.</span></span></param>
        <summary><span data-ttu-id="c1553-3150">Ajusta a escala todo el control y los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3150">Scales the entire control and any child controls.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleBitmapLogicalToDevice">
      <MemberSignature Language="C#" Value="public void ScaleBitmapLogicalToDevice (ref System.Drawing.Bitmap logicalBitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScaleBitmapLogicalToDevice(class System.Drawing.Bitmap&amp; logicalBitmap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScaleBitmapLogicalToDevice (ByRef logicalBitmap As Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScaleBitmapLogicalToDevice(System::Drawing::Bitmap ^ % logicalBitmap);" />
      <MemberSignature Language="F#" Value="member this.ScaleBitmapLogicalToDevice :  -&gt; unit" Usage="control.ScaleBitmapLogicalToDevice logicalBitmap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalBitmap" Type="System.Drawing.Bitmap" RefType="ref" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="logicalBitmap"><span data-ttu-id="c1553-3151">El mapa de bits que se escalará.</span><span class="sxs-lookup"><span data-stu-id="c1553-3151">The bitmap to scale.</span></span></param>
        <summary><span data-ttu-id="c1553-3152">Escala un valor de mapa de bits lógico a su valor DeviceUnit equivalente cuando se produce un cambio de PPP.</span><span class="sxs-lookup"><span data-stu-id="c1553-3152">Scales a logical bitmap value to it's equivalent device unit value when a DPI change occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleChildren">
      <MemberSignature Language="C#" Value="protected virtual bool ScaleChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScaleChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ScaleChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ScaleChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool ScaleChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScaleChildren : bool" Usage="System.Windows.Forms.Control.ScaleChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3153">Obtiene un valor que determina el escalado de los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3153">Gets a value that determines the scaling of child controls.</span></span></summary>
        <value><span data-ttu-id="c1553-3154"><see langword="true" /> si se escalarán los controles secundarios cuando se llame al método <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /> en este control; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3154"><see langword="true" /> if child controls will be scaled when the <see cref="M:System.Windows.Forms.Control.Scale(System.Single)" /> method on this control is called; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1553-3155">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3155">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3156">Si el <xref:System.Windows.Forms.Control.ScaleChildren%2A> propiedad es `true`, el <xref:System.Windows.Forms.Control.Scale%2A> método le llamada de forma recursiva el <xref:System.Windows.Forms.Control.ScaleControl%2A> método de cada uno de sus controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3156">If the <xref:System.Windows.Forms.Control.ScaleChildren%2A> property is `true`, then the <xref:System.Windows.Forms.Control.Scale%2A> method will recursively call the <xref:System.Windows.Forms.Control.ScaleControl%2A> method of each of its child controls.</span></span>  
  
 <span data-ttu-id="c1553-3157">La implementación predeterminada de <xref:System.Windows.Forms.Control.ScaleChildren%2A> siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3157">The default implementation of <xref:System.Windows.Forms.Control.ScaleChildren%2A> always returns `true`.</span></span> <span data-ttu-id="c1553-3158">Las clases derivadas pueden invalidar <xref:System.Windows.Forms.Control.ScaleChildren%2A> para devolver `false` para indicar que el escalado no debería realizarse en sus elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3158">Derived classes can override <xref:System.Windows.Forms.Control.ScaleChildren%2A> to return `false` to indicate that scaling should not be performed on their children.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Scale(System.Single)" />
        <altmember cref="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="M:System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      </Docs>
    </Member>
    <Member MemberName="ScaleControl">
      <MemberSignature Language="C#" Value="protected virtual void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScaleControl(valuetype System.Drawing.SizeF factor, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScaleControl (factor As SizeF, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScaleControl(System::Drawing::SizeF factor, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.ScaleControl : System.Drawing.SizeF * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.ScaleControl (factor, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="factor" Type="System.Drawing.SizeF" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" Index="1" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="factor"><span data-ttu-id="c1553-3159">Factor por el que se escalarán el alto y ancho del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3159">The factor by which the height and width of the control will be scaled.</span></span></param>
        <param name="specified"><span data-ttu-id="c1553-3160">Un valor <see cref="T:System.Windows.Forms.BoundsSpecified" /> que especifica los límites del control que se usarán al definir su tamaño y posición.</span><span class="sxs-lookup"><span data-stu-id="c1553-3160">A <see cref="T:System.Windows.Forms.BoundsSpecified" /> value that specifies the bounds of the control to use when defining its size and position.</span></span></param>
        <summary><span data-ttu-id="c1553-3161">Escala la ubicación, el tamaño, el relleno y el margen de un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3161">Scales a control's location, size, padding and margin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3162">Si el control es de nivel superior, no escalará la ubicación del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3162">If the control is top level, this will not scale the control's location.</span></span> <span data-ttu-id="c1553-3163">No se escala los elementos secundarios o el tamaño de los controles de tamaños automáticamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3163">This does not scale children or the size of automatically sized controls.</span></span> <span data-ttu-id="c1553-3164">Puede omitir el escalado en cualquier dirección cambiando el valor de la `specified` parámetro.</span><span class="sxs-lookup"><span data-stu-id="c1553-3164">You can omit scaling in any direction by changing the value of the `specified` parameter.</span></span>  
  
   
  
## Examples  
 <xref:System.Windows.Forms.BoundsSpecified>  
  
 <xref:System.Windows.Forms.Control.Scale%2A>  
  
 <xref:System.Windows.Forms.Control.GetScaledBounds%2A>  
  
 <xref:System.Windows.Forms.Control.SetBoundsCore%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleCore">
      <MemberSignature Language="C#" Value="protected virtual void ScaleCore (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ScaleCore(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ScaleCore (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ScaleCore(float dx, float dy);" />
      <MemberSignature Language="F#" Value="abstract member ScaleCore : single * single -&gt; unit&#xA;override this.ScaleCore : single * single -&gt; unit" Usage="control.ScaleCore (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx"><span data-ttu-id="c1553-3165">Factor de escala horizontal.</span><span class="sxs-lookup"><span data-stu-id="c1553-3165">The horizontal scaling factor.</span></span></param>
        <param name="dy"><span data-ttu-id="c1553-3166">Factor de escala vertical.</span><span class="sxs-lookup"><span data-stu-id="c1553-3166">The vertical scaling factor.</span></span></param>
        <summary><span data-ttu-id="c1553-3167">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3167">This method is not relevant for this class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3168">Este método no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3168">This method is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-3169">Activa un control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3169">Activates a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="c1553-3170">El <xref:System.Windows.Forms.Control.Select%2A> método activa el control si el control <xref:System.Windows.Forms.ControlStyles.Selectable?displayProperty=nameWithType> bit de estilo se establece en `true`, que está contenida en otro control y todos sus controles principales son visibles y están habilitados.</span><span class="sxs-lookup"><span data-stu-id="c1553-3170">The <xref:System.Windows.Forms.Control.Select%2A> method activates the control if the control's <xref:System.Windows.Forms.ControlStyles.Selectable?displayProperty=nameWithType> style bit is set to `true`, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>

<span data-ttu-id="c1553-3171">Los controles de Windows Forms en la lista siguiente no son seleccionables.</span><span class="sxs-lookup"><span data-stu-id="c1553-3171">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="c1553-3172">Controles derivados de controles en la lista también se pueden seleccionables no.</span><span class="sxs-lookup"><span data-stu-id="c1553-3172">Controls derived from controls in the list will also not be selectable.</span></span>
  
- <xref:System.Windows.Forms.Label>  
- <xref:System.Windows.Forms.Panel>  
- <xref:System.Windows.Forms.GroupBox>
- <xref:System.Windows.Forms.PictureBox>  
- <xref:System.Windows.Forms.ProgressBar>
- <xref:System.Windows.Forms.Splitter>
- <span data-ttu-id="c1553-3173"><xref:System.Windows.Forms.LinkLabel> (cuando no hay ningún vínculo en el control)</span><span class="sxs-lookup"><span data-stu-id="c1553-3173"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="control.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3174">Activa el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3174">Activates the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Examples  

<span data-ttu-id="c1553-3175">En el ejemplo de código siguiente se selecciona especificado <xref:System.Windows.Forms.Control>, si puede seleccionarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-3175">The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.</span></span>
  
[!code-cpp[Windows.Forms.ControlMembers6#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#2)]
[!code-csharp[Windows.Forms.ControlMembers6#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#2)]
[!code-vb[Windows.Forms.ControlMembers6#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
        <altmember cref="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="protected virtual void Select (bool directed, bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Select(bool directed, bool forward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Select (directed As Boolean, forward As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Select(bool directed, bool forward);" />
      <MemberSignature Language="F#" Value="abstract member Select : bool * bool -&gt; unit&#xA;override this.Select : bool * bool -&gt; unit" Usage="control.Select (directed, forward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directed" Type="System.Boolean" />
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="directed"><span data-ttu-id="c1553-3176"><see langword="true" /> para especificar la dirección del control que se va a seleccionar; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3176"><see langword="true" /> to specify the direction of the control to select; otherwise, <see langword="false" />.</span></span></param>
        <param name="forward"><span data-ttu-id="c1553-3177">Es <see langword="true" /> para moverse hacia delante en el orden de tabulación; es <see langword="false" /> para moverse hacia atrás en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3177"><see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span></span></param>
        <summary><span data-ttu-id="c1553-3178">Activa un control secundario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3178">Activates a child control.</span></span> <span data-ttu-id="c1553-3179">Opcionalmente, especifica la dirección en que se seleccionará el control en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3179">Optionally specifies the direction in the tab order to select the control from.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3180">El `directed` y `forward` parámetros se usan controles de estilo contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3180">The `directed` and `forward` parameters are used by container-style controls.</span></span> <span data-ttu-id="c1553-3181">Cuando el `directed` parámetro está establecido en `true`, el `forward` parámetro se evalúa para determinar el control para seleccionar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3181">When the `directed` parameter is set to `true`, the `forward` parameter is evaluated to determine which control to select.</span></span> <span data-ttu-id="c1553-3182">Cuando `forward` está establecido en `true`, se selecciona el siguiente control en el orden de tabulación; cuando `false`, se selecciona el control anterior en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3182">When `forward` is set to `true`, the next control in the tab order is selected; when `false`, the previous control in the tab order is selected.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
        <altmember cref="M:System.Windows.Forms.Control.Select" />
      </Docs>
    </Member>
    <Member MemberName="SelectNextControl">
      <MemberSignature Language="C#" Value="public bool SelectNextControl (System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SelectNextControl(class System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectNextControl (ctl As Control, forward As Boolean, tabStopOnly As Boolean, nested As Boolean, wrap As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SelectNextControl(System::Windows::Forms::Control ^ ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);" />
      <MemberSignature Language="F#" Value="member this.SelectNextControl : System.Windows.Forms.Control * bool * bool * bool * bool -&gt; bool" Usage="control.SelectNextControl (ctl, forward, tabStopOnly, nested, wrap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ctl" Type="System.Windows.Forms.Control" />
        <Parameter Name="forward" Type="System.Boolean" />
        <Parameter Name="tabStopOnly" Type="System.Boolean" />
        <Parameter Name="nested" Type="System.Boolean" />
        <Parameter Name="wrap" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ctl"><span data-ttu-id="c1553-3183"><see cref="T:System.Windows.Forms.Control" /> donde va a comenzar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3183">The <see cref="T:System.Windows.Forms.Control" /> at which to start the search.</span></span></param>
        <param name="forward"><span data-ttu-id="c1553-3184">Es <see langword="true" /> para moverse hacia delante en el orden de tabulación; es <see langword="false" /> para moverse hacia atrás en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3184"><see langword="true" /> to move forward in the tab order; <see langword="false" /> to move backward in the tab order.</span></span></param>
        <param name="tabStopOnly"><span data-ttu-id="c1553-3185">Es <see langword="true" /> para pasar por alto los controles cuya propiedad <see cref="P:System.Windows.Forms.Control.TabStop" /> está establecida en <see langword="false" />; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3185"><see langword="true" /> to ignore the controls with the <see cref="P:System.Windows.Forms.Control.TabStop" /> property set to <see langword="false" />; otherwise, <see langword="false" />.</span></span></param>
        <param name="nested"><span data-ttu-id="c1553-3186">Es <see langword="true" /> para incluir controles secundarios anidados (es decir, controles secundarios de controles secundarios); en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3186"><see langword="true" /> to include nested (children of child controls) child controls; otherwise, <see langword="false" />.</span></span></param>
        <param name="wrap"><span data-ttu-id="c1553-3187">Es <see langword="true" /> para continuar la búsqueda a partir del primer control en el orden de tabulación después de haber llegado hasta el último; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3187"><see langword="true" /> to continue searching from the first control in the tab order after the last control has been reached; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1553-3188">Activa el siguiente control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3188">Activates the next control.</span></span></summary>
        <returns><span data-ttu-id="c1553-3189"><see langword="true" /> si se activó un control; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3189"><see langword="true" /> if a control was activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3190">El <xref:System.Windows.Forms.Control.SelectNextControl%2A> método activa el siguiente control en el orden de tabulación, si el control `Selectable` bit de estilo se establece en `true` en <xref:System.Windows.Forms.ControlStyles>, que está contenida en otro control y todos sus controles principales son visibles y están habilitados.</span><span class="sxs-lookup"><span data-stu-id="c1553-3190">The <xref:System.Windows.Forms.Control.SelectNextControl%2A> method activates the next control in the tab order if the control's `Selectable` style bit is set to `true` in <xref:System.Windows.Forms.ControlStyles>, it is contained in another control, and all its parent controls are both visible and enabled.</span></span>  
  
 <span data-ttu-id="c1553-3191">Los controles de Windows Forms en la lista siguiente no son seleccionables.</span><span class="sxs-lookup"><span data-stu-id="c1553-3191">The Windows Forms controls in the following list are not selectable.</span></span> <span data-ttu-id="c1553-3192">Controles derivados de controles en la lista también se pueden seleccionables no.</span><span class="sxs-lookup"><span data-stu-id="c1553-3192">Controls derived from controls in the list will also not be selectable.</span></span>  
  
-   <xref:System.Windows.Forms.Label>  
  
-   <xref:System.Windows.Forms.Panel>  
  
-   <xref:System.Windows.Forms.GroupBox>  
  
-   <xref:System.Windows.Forms.PictureBox>  
  
-   <xref:System.Windows.Forms.ProgressBar>  
  
-   <xref:System.Windows.Forms.Splitter>  
  
-   <span data-ttu-id="c1553-3193"><xref:System.Windows.Forms.LinkLabel> (cuando no hay ningún vínculo en el control)</span><span class="sxs-lookup"><span data-stu-id="c1553-3193"><xref:System.Windows.Forms.LinkLabel> (when there is no link present in the control)</span></span>  
  
 <span data-ttu-id="c1553-3194">Al cambiar el foco mediante el teclado (ficha, MAYÚS+TAB etc.), mediante una llamada a la <xref:System.Windows.Forms.Control.Select%2A> o <xref:System.Windows.Forms.Control.SelectNextControl%2A> métodos, o estableciendo la <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propiedad al formulario actual, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-3194">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="c1553-3195">Si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad está establecida en `false`, <xref:System.Windows.Forms.Control.Validating> y <xref:System.Windows.Forms.Control.Validated> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3195">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3196">El siguiente código EjemploMuestra el <xref:System.Windows.Forms.Control.SelectNextControl%2A> método que se utiliza en un formulario con algunos controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3196">The following code exampleshows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has some controls.</span></span> <span data-ttu-id="c1553-3197">Cada vez que haga clic en el formulario, se activa el siguiente control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3197">Each time that you click the form, the next control is activated.</span></span> <span data-ttu-id="c1553-3198">El <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> propiedad obtiene el control activo en el control contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3198">The <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property gets the currently active control in the container control.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.SelectNextControl#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#1)]  
  
 <span data-ttu-id="c1553-3199">El siguiente ejemplo de código muestra la <xref:System.Windows.Forms.Control.SelectNextControl%2A> método que se va a utilizar en un formulario que tiene un <xref:System.Windows.Forms.Button> y algunos otros controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3199">The following code example shows the <xref:System.Windows.Forms.Control.SelectNextControl%2A> method being used in a form that has a <xref:System.Windows.Forms.Button> and some other controls.</span></span> <span data-ttu-id="c1553-3200">Al hacer clic en el <xref:System.Windows.Forms.Button>, el siguiente control después de la <xref:System.Windows.Forms.Button> está activado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3200">When you click the <xref:System.Windows.Forms.Button>, the next control after the <xref:System.Windows.Forms.Button> is activated.</span></span> <span data-ttu-id="c1553-3201">Tenga en cuenta que tendrá que obtener el elemento primario de la <xref:System.Windows.Forms.Button> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3201">Notice that you have to get the parent of the <xref:System.Windows.Forms.Button> control.</span></span> <span data-ttu-id="c1553-3202">Puesto que <xref:System.Windows.Forms.Button> no es un contenedor, una llamada a <xref:System.Windows.Forms.Control.SelectNextControl%2A> directamente en el <xref:System.Windows.Forms.Button> no cambiaría la activación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3202">Since <xref:System.Windows.Forms.Button> is not a container, calling <xref:System.Windows.Forms.Control.SelectNextControl%2A> directly on the <xref:System.Windows.Forms.Button> would not change the activation.</span></span>  
  
 [!code-csharp[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/csharp/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/cs/form1.cs#2)]
 [!code-vb[System.Windows.Forms.Control.SelectNextControl#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/system.windows.forms.control.selectnextcontrol/vb/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.Select" />
        <altmember cref="M:System.Windows.Forms.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="SendToBack">
      <MemberSignature Language="C#" Value="public void SendToBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendToBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SendToBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendToBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendToBack();" />
      <MemberSignature Language="F#" Value="member this.SendToBack : unit -&gt; unit" Usage="control.SendToBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3203">Envía el control al final del orden Z.</span><span class="sxs-lookup"><span data-stu-id="c1553-3203">Sends the control to the back of the z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3204">El control se mueve a la parte posterior del orden z.</span><span class="sxs-lookup"><span data-stu-id="c1553-3204">The control is moved to the back of the z-order.</span></span> <span data-ttu-id="c1553-3205">Si el control es un elemento secundario de otro control, el control secundario se mueve a la parte posterior del orden z.</span><span class="sxs-lookup"><span data-stu-id="c1553-3205">If the control is a child of another control, the child control is moved to the back of the z-order.</span></span> <span data-ttu-id="c1553-3206">Si el control es un control de nivel superior, este método no funcionará correctamente a menos que el control está activo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3206">If the control is a top-level control, this method will not work correctly unless the control is active.</span></span> <span data-ttu-id="c1553-3207">Un control de nivel superior es un control, como un <xref:System.Windows.Forms.Form>, que es un elemento secundario de otro control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3207">A top-level control is a control, such as a <xref:System.Windows.Forms.Form>, that is not a child of another control.</span></span> <span data-ttu-id="c1553-3208">Un control activo es un control visible que tiene el foco de entrada.</span><span class="sxs-lookup"><span data-stu-id="c1553-3208">An active control is a visible control that has input focus.</span></span> <span data-ttu-id="c1553-3209">Para usar el <xref:System.Windows.Forms.Control.SendToBack%2A> método con un control inactivo de nivel superior, primero llame a la <xref:System.Windows.Forms.Control.BringToFront%2A> método en el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3209">To use the <xref:System.Windows.Forms.Control.SendToBack%2A> method with an inactive, top-level control, first call the <xref:System.Windows.Forms.Control.BringToFront%2A> method on the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.BringToFront" />
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
      </Docs>
    </Member>
    <Member MemberName="SetAutoSizeMode">
      <MemberSignature Language="C#" Value="protected void SetAutoSizeMode (System.Windows.Forms.AutoSizeMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetAutoSizeMode(valuetype System.Windows.Forms.AutoSizeMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetAutoSizeMode (mode As AutoSizeMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetAutoSizeMode(System::Windows::Forms::AutoSizeMode mode);" />
      <MemberSignature Language="F#" Value="member this.SetAutoSizeMode : System.Windows.Forms.AutoSizeMode -&gt; unit" Usage="control.SetAutoSizeMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Windows.Forms.AutoSizeMode" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="mode"><span data-ttu-id="c1553-3210">Uno de los valores de <see cref="T:System.Windows.Forms.AutoSizeMode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3210">One of the <see cref="T:System.Windows.Forms.AutoSizeMode" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-3211">Establece un valor que indica cómo se comportará un control cuando su propiedad <see cref="P:System.Windows.Forms.Control.AutoSize" /> esté habilitada.</span><span class="sxs-lookup"><span data-stu-id="c1553-3211">Sets a value indicating how a control will behave when its <see cref="P:System.Windows.Forms.Control.AutoSize" /> property is enabled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-3212">Establece los límites del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3212">Sets the bounds of the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public void SetBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetBounds : int * int * int * int -&gt; unit" Usage="control.SetBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c1553-3213">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Left" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3213">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="c1553-3214">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Top" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3214">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="c1553-3215">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Width" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3215">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="c1553-3216">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Height" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3216">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <summary><span data-ttu-id="c1553-3217">Establece los límites del control en la ubicación y en el tamaño especificados.</span><span class="sxs-lookup"><span data-stu-id="c1553-3217">Sets the bounds of the control to the specified location and size.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetBounds">
      <MemberSignature Language="C#" Value="public void SetBounds (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBounds(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBounds (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBounds(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="member this.SetBounds : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.SetBounds (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c1553-3218">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Left" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3218">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="c1553-3219">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Top" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3219">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="c1553-3220">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Width" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3220">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="c1553-3221">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Height" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3221">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="c1553-3222">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.BoundsSpecified" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3222">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span> <span data-ttu-id="c1553-3223">En el caso de que no se especifique un parámetro, se utilizará el valor actual.</span><span class="sxs-lookup"><span data-stu-id="c1553-3223">For any parameter not specified, the current value will be used.</span></span></param>
        <summary><span data-ttu-id="c1553-3224">Establece los límites especificados del control en la ubicación y en el tamaño especificados.</span><span class="sxs-lookup"><span data-stu-id="c1553-3224">Sets the specified bounds of the control to the specified location and size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c1553-3225">El siguiente código de ejemplo centros un <xref:System.Windows.Forms.Form> en la pantalla en la <xref:System.Windows.Forms.Control.Layout> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3225">The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event.</span></span> <span data-ttu-id="c1553-3226">Esto mantendrá el formulario centrado cuando el usuario lo modifica.</span><span class="sxs-lookup"><span data-stu-id="c1553-3226">This will keep the form centered as the user resizes it.</span></span> <span data-ttu-id="c1553-3227">En este ejemplo requiere que se haya creado un <xref:System.Windows.Forms.Form> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3227">This example requires that you have created a <xref:System.Windows.Forms.Form> control.</span></span>  
  
 [!code-cpp[Control.Layout#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Layout/CPP/layout.cpp#1)]
 [!code-csharp[Control.Layout#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Layout/CS/layout.cs#1)]
 [!code-vb[Control.Layout#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Layout/VB/layout.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetBoundsCore">
      <MemberSignature Language="C#" Value="protected virtual void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetBoundsCore(int32 x, int32 y, int32 width, int32 height, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetBoundsCore (x As Integer, y As Integer, width As Integer, height As Integer, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetBoundsCore(int x, int y, int width, int height, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.SetBoundsCore : int * int * int * int * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="control.SetBoundsCore (x, y, width, height, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c1553-3228">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Left" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3228">The new <see cref="P:System.Windows.Forms.Control.Left" /> property value of the control.</span></span></param>
        <param name="y"><span data-ttu-id="c1553-3229">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Top" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3229">The new <see cref="P:System.Windows.Forms.Control.Top" /> property value of the control.</span></span></param>
        <param name="width"><span data-ttu-id="c1553-3230">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Width" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3230">The new <see cref="P:System.Windows.Forms.Control.Width" /> property value of the control.</span></span></param>
        <param name="height"><span data-ttu-id="c1553-3231">Nuevo valor de la propiedad <see cref="P:System.Windows.Forms.Control.Height" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3231">The new <see cref="P:System.Windows.Forms.Control.Height" /> property value of the control.</span></span></param>
        <param name="specified"><span data-ttu-id="c1553-3232">Combinación bit a bit de los valores de <see cref="T:System.Windows.Forms.BoundsSpecified" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3232">A bitwise combination of the <see cref="T:System.Windows.Forms.BoundsSpecified" /> values.</span></span></param>
        <summary><span data-ttu-id="c1553-3233">Realiza la tarea de configurar los límites especificados de este control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3233">Performs the work of setting the specified bounds of this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3234">Normalmente, los parámetros que corresponden a los límites no incluidos en el `specified` parámetros se pasan con sus valores actuales.</span><span class="sxs-lookup"><span data-stu-id="c1553-3234">Typically, the parameters that correspond to the bounds not included in the `specified` parameter are passed in with their current values.</span></span> <span data-ttu-id="c1553-3235">Por ejemplo, el <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, o el <xref:System.Drawing.Point.X%2A> o <xref:System.Drawing.Point.Y%2A> propiedades de la <xref:System.Windows.Forms.Control.Location%2A> propiedad se puede pasar con una referencia a la instancia actual del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3235">For example, the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, or the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Windows.Forms.Control.Location%2A> property can be passed in with a reference to the current instance of the control.</span></span> <span data-ttu-id="c1553-3236">Sin embargo todos los valores pasados son respeta y aplicados al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3236">However all values passed in are honored and applied to the control.</span></span>  
  
 <span data-ttu-id="c1553-3237">El `boundsSpecified` parámetro representa los elementos de los controles <xref:System.Windows.Forms.Control.Bounds%2A> modificados por la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3237">The `boundsSpecified` parameter represents the elements of the controls <xref:System.Windows.Forms.Control.Bounds%2A> changed by your application.</span></span> <span data-ttu-id="c1553-3238">Por ejemplo, si cambia el <xref:System.Windows.Forms.Control.Size%2A> del control, el `boundsSpecified` valor del parámetro es el `Size` valor <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3238">For example, if you change the <xref:System.Windows.Forms.Control.Size%2A> of the control, the `boundsSpecified` parameter value is the `Size` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span> <span data-ttu-id="c1553-3239">Sin embargo, si la <xref:System.Windows.Forms.Control.Size%2A> se ajusta en respuesta a la <xref:System.Windows.Forms.Control.Dock%2A> propiedad que se establece, el `boundsSpecified` valor del parámetro es el `None` valor de <xref:System.Windows.Forms.BoundsSpecified>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3239">However, if the <xref:System.Windows.Forms.Control.Size%2A> is adjusted in response to the <xref:System.Windows.Forms.Control.Dock%2A> property being set, the `boundsSpecified` parameter value is the `None` value of <xref:System.Windows.Forms.BoundsSpecified>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-3240">En los sistemas Windows Server 2003, el tamaño de un <xref:System.Windows.Forms.Form> está restringido por el ancho de píxel máximo y el alto del monitor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3240">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3241">El siguiente código de ejemplo invalida el <xref:System.Windows.Forms.Control.SetBoundsCore%2A> método para asegurarse de que el control mantiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3241">The following code example overrides the <xref:System.Windows.Forms.Control.SetBoundsCore%2A> method to ensure that the control remains a fixed size.</span></span> <span data-ttu-id="c1553-3242">En este ejemplo requiere que tenga una clase que derive directa o indirectamente de la <xref:System.Windows.Forms.Control> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3242">This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_Methods#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#1)]
 [!code-csharp[Windows.Forms.Control_Methods#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#1)]
 [!code-vb[Windows.Forms.Control_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-3243">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> método para forzar los límites del control que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3243">When overriding <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method to force the bounds of the control to change.</span></span> <span data-ttu-id="c1553-3244">Las clases derivadas pueden agregar restricciones de tamaño para el <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3244">Derived classes can add size restrictions to the <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)" /> method.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
      </Docs>
    </Member>
    <Member MemberName="SetClientSizeCore">
      <MemberSignature Language="C#" Value="protected virtual void SetClientSizeCore (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetClientSizeCore(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetClientSizeCore (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetClientSizeCore(int x, int y);" />
      <MemberSignature Language="F#" Value="abstract member SetClientSizeCore : int * int -&gt; unit&#xA;override this.SetClientSizeCore : int * int -&gt; unit" Usage="control.SetClientSizeCore (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c1553-3245">Ancho del área cliente, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3245">The client area width, in pixels.</span></span></param>
        <param name="y"><span data-ttu-id="c1553-3246">Alto del área cliente, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3246">The client area height, in pixels.</span></span></param>
        <summary><span data-ttu-id="c1553-3247">Establece el tamaño del área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3247">Sets the size of the client area of the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3248">El área de cliente se inicia en el (0, 0) ubicación y se extiende a la (`x`, `y`) ubicación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3248">The client area starts at the (0, 0) location and extends to the (`x`, `y`) location.</span></span>  
  
 <span data-ttu-id="c1553-3249">Por lo general, no debe establecer el <xref:System.Windows.Forms.Control.ClientSize%2A> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3249">Typically, you should not set the <xref:System.Windows.Forms.Control.ClientSize%2A> of the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3250">El siguiente código de ejemplo invalida el <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> método para asegurarse de que el control sigue siendo un cuadrado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3250">The following code example overrides the <xref:System.Windows.Forms.Control.SetClientSizeCore%2A> method to ensure that the control remains square.</span></span> <span data-ttu-id="c1553-3251">En este ejemplo requiere que tenga una clase que derive directa o indirectamente de la <xref:System.Windows.Forms.Control> clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3251">This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_Methods#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CPP/controlmethods.cpp#2)]
 [!code-csharp[Windows.Forms.Control_Methods#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_Methods/CS/controlmethods.cs#2)]
 [!code-vb[Windows.Forms.Control_Methods#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_Methods/VB/controlmethods.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-3252">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> método para que el <see cref="P:System.Windows.Forms.Control.ClientSize" /> se ajusta la propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3252">When overriding <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)" /> method so that the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property is adjusted.</span></span>  
  
<span data-ttu-id="c1553-3253">Para obtener más información sobre el dibujo de controles, vea [representar un Control de Windows Forms](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3253">For more information about drawing on controls, see [Rendering a Windows Forms Control](~/docs/framework/winforms/controls/rendering-a-windows-forms-control.md).</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
      </Docs>
    </Member>
    <Member MemberName="SetStyle">
      <MemberSignature Language="C#" Value="protected void SetStyle (System.Windows.Forms.ControlStyles flag, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetStyle(valuetype System.Windows.Forms.ControlStyles flag, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetStyle (flag As ControlStyles, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetStyle(System::Windows::Forms::ControlStyles flag, bool value);" />
      <MemberSignature Language="F#" Value="member this.SetStyle : System.Windows.Forms.ControlStyles * bool -&gt; unit" Usage="control.SetStyle (flag, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Windows.Forms.ControlStyles" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="c1553-3254">Bit <see cref="T:System.Windows.Forms.ControlStyles" /> que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="c1553-3254">The <see cref="T:System.Windows.Forms.ControlStyles" /> bit to set.</span></span></param>
        <param name="value"><span data-ttu-id="c1553-3255">Es <see langword="true" /> para aplicar el estilo especificado al control; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3255"><see langword="true" /> to apply the specified style to the control; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1553-3256">Establece un marcador <see cref="T:System.Windows.Forms.ControlStyles" /> en <see langword="true" /> o <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3256">Sets a specified <see cref="T:System.Windows.Forms.ControlStyles" /> flag to either <see langword="true" /> or <see langword="false" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3257">Marcas de bit de estilo de control se usan para categorizar el comportamiento compatible.</span><span class="sxs-lookup"><span data-stu-id="c1553-3257">Control style bit flags are used to categorize supported behavior.</span></span> <span data-ttu-id="c1553-3258">Un control puede habilitar un estilo mediante una llamada a la <xref:System.Windows.Forms.Control.SetStyle%2A> método y pasando adecuado <xref:System.Windows.Forms.ControlStyles> bits (o bits) y el valor booleano para establecer los bits.</span><span class="sxs-lookup"><span data-stu-id="c1553-3258">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="c1553-3259">Para determinar el valor asignado a un determinado <xref:System.Windows.Forms.ControlStyles> de bits, utilice el <xref:System.Windows.Forms.Control.GetStyle%2A> método y pase el <xref:System.Windows.Forms.ControlStyles> miembro para evaluar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3259">To determine the value assigned to a specified <xref:System.Windows.Forms.ControlStyles> bit, use the <xref:System.Windows.Forms.Control.GetStyle%2A> method and pass in the <xref:System.Windows.Forms.ControlStyles> member to evaluate.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c1553-3260">Establecer el control de bits de estilo puede cambiar sustancialmente el comportamiento del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3260">Setting the control style bits can substantially change the behavior of the control.</span></span> <span data-ttu-id="c1553-3261">Revise el <xref:System.Windows.Forms.ControlStyles> documentación de la enumeración para comprender los efectos de modificar los bits de estilo del control antes de llamar a la <xref:System.Windows.Forms.Control.SetStyle%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3261">Review the <xref:System.Windows.Forms.ControlStyles> enumeration documentation to understand the effects of changing the control style bits before calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3262">En el ejemplo de código siguiente se habilita el búfer doble en un <xref:System.Windows.Forms.Form> y actualiza los estilos para reflejar los cambios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3262">The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]
 [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]
 [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="SetTopLevel">
      <MemberSignature Language="C#" Value="protected void SetTopLevel (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetTopLevel(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetTopLevel(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetTopLevel (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetTopLevel(bool value);" />
      <MemberSignature Language="F#" Value="member this.SetTopLevel : bool -&gt; unit" Usage="control.SetTopLevel value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c1553-3263">Es <see langword="true" /> para establecer el control como el control de nivel superior; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3263"><see langword="true" /> to set the control as the top-level control; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1553-3264">Establece el control como el control de nivel superior.</span><span class="sxs-lookup"><span data-stu-id="c1553-3264">Sets the control as the top-level control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3265">Si se llama a la <xref:System.Windows.Forms.Control.SetTopLevel%2A> método de un <xref:System.Windows.Forms.Form> y pasar un valor de `false`, el formulario no estará visible hasta que llame a <xref:System.Windows.Forms.Control.SetTopLevel%2A> nuevo, pasando un valor de `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3265">If you call the <xref:System.Windows.Forms.Control.SetTopLevel%2A> method of a <xref:System.Windows.Forms.Form> and pass in a value of `false`, the form will not be visible until you call <xref:System.Windows.Forms.Control.SetTopLevel%2A> again, passing in a value of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="c1553-3266">El <paramref name="value" /> parámetro está establecido en <see langword="true" /> y el control es un control ActiveX.</span><span class="sxs-lookup"><span data-stu-id="c1553-3266">The <paramref name="value" /> parameter is set to <see langword="true" /> and the control is an ActiveX control.</span></span></exception>
        <exception cref="T:System.Exception"><span data-ttu-id="c1553-3267">El <see cref="M:System.Windows.Forms.Control.GetTopLevel" /> valor devuelto no es igual a la <paramref name="value" /> parámetro y el <see cref="P:System.Windows.Forms.Control.Parent" /> propiedad no es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3267">The <see cref="M:System.Windows.Forms.Control.GetTopLevel" /> return value is not equal to the <paramref name="value" /> parameter and the <see cref="P:System.Windows.Forms.Control.Parent" /> property is not <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-3268">Para establecer el control como un control de nivel superior si es distinto de cualquier tipo <see cref="T:System.Windows.Forms.Form" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3268">to set the control as a top-level control if it is of any type other than <see cref="T:System.Windows.Forms.Form" />.</span></span> <span data-ttu-id="c1553-3269">Este permiso se solicita únicamente si el <paramref name="value" /> parámetro es <see langword="true" /> y el control no es un control ActiveX.</span><span class="sxs-lookup"><span data-stu-id="c1553-3269">This permission is only demanded if the <paramref name="value" /> parameter is <see langword="true" /> and the control is not an ActiveX control.</span></span> <span data-ttu-id="c1553-3270">Enumeración asociada: <see langword="AllWindows" /> valor <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3270">Associated enumeration: <see langword="AllWindows" /> value of <see cref="T:System.Security.Permissions.UIPermissionWindow" />.</span></span></permission>
        <altmember cref="M:System.Windows.Forms.Control.GetTopLevel" />
      </Docs>
    </Member>
    <Member MemberName="SetVisibleCore">
      <MemberSignature Language="C#" Value="protected virtual void SetVisibleCore (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetVisibleCore(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetVisibleCore (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetVisibleCore(bool value);" />
      <MemberSignature Language="F#" Value="abstract member SetVisibleCore : bool -&gt; unit&#xA;override this.SetVisibleCore : bool -&gt; unit" Usage="control.SetVisibleCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c1553-3271">Es <see langword="true" /> para que el control sea visible; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3271"><see langword="true" /> to make the control visible; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1553-3272">Establece el control en el estado de visibilidad especificado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3272">Sets the control to the specified visible state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3273">Normalmente, debe reemplazar este método para cambiar el comportamiento de visibilidad del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3273">You would typically override this method to change the visibility behavior of the control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-3274">Cuando se reemplaza <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> método para forzar la visibilidad del control que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3274">When overriding <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" /> method to force the visibility of the control to change.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="control.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3275">Muestra el control al usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3275">Displays the control to the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3276">Mostrar el control es equivalente a establecer el <xref:System.Windows.Forms.Control.Visible%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3276">Showing the control is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`.</span></span> <span data-ttu-id="c1553-3277">Después de la <xref:System.Windows.Forms.Control.Show%2A> se invoca el <xref:System.Windows.Forms.Control.Visible%2A> propiedad devuelve un valor de `true` hasta que el <xref:System.Windows.Forms.Control.Hide%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3277">After the <xref:System.Windows.Forms.Control.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3278">El siguiente código de ejemplo se muestra un cuadro de diálogo acerca y se dibuja temporalmente un cuadrado azul en su superficie.</span><span class="sxs-lookup"><span data-stu-id="c1553-3278">The following code example displays an about dialog box and temporarily draws a blue square on its surface.</span></span> <span data-ttu-id="c1553-3279">Este ejemplo requiere que haya definido una clase que derive de <xref:System.Windows.Forms.Form> denominado `AboutDialog`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3279">This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `AboutDialog`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#1)]
 [!code-csharp[Windows.Forms.Control Members2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#1)]
 [!code-vb[Windows.Forms.Control Members2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
      </Docs>
    </Member>
    <Member MemberName="ShowFocusCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowFocusCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFocusCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ShowFocusCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowFocusCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowFocusCues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowFocusCues : bool" Usage="System.Windows.Forms.Control.ShowFocusCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3280">Obtiene un valor que indica si el control debe mostrar rectángulos de foco.</span><span class="sxs-lookup"><span data-stu-id="c1553-3280">Gets a value indicating whether the control should display focus rectangles.</span></span></summary>
        <value><span data-ttu-id="c1553-3281"><see langword="true" /> si el control debe mostrar rectángulos de foco; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3281"><see langword="true" /> if the control should display focus rectangles; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3282">Para obtener más información sobre esta característica, consulte el [WM_CHANGEUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx), [WM_QUERYUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)y el [WM_UPDATEUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx) temas.</span><span class="sxs-lookup"><span data-stu-id="c1553-3282">For more information about this feature, see the [WM_CHANGEUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx), [WM_QUERYUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx), and the [WM_UPDATEUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-3283">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-3283">When overriding the <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.ShowFocusCues" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-3284">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3284">Otherwise, you must provide all the implementation.</span></span></para></block>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
        <altmember cref="P:System.Windows.Forms.Control.ShowKeyboardCues" />
      </Docs>
    </Member>
    <Member MemberName="ShowKeyboardCues">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShowKeyboardCues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowKeyboardCues" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.ShowKeyboardCues" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property ShowKeyboardCues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool ShowKeyboardCues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowKeyboardCues : bool" Usage="System.Windows.Forms.Control.ShowKeyboardCues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3285">Obtiene un valor que indica si la interfaz de usuario está en el estado adecuado para mostrar u ocultar los aceleradores de teclado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3285">Gets a value indicating whether the user interface is in the appropriate state to show or hide keyboard accelerators.</span></span></summary>
        <value><span data-ttu-id="c1553-3286"><see langword="true" /> si los aceleradores de teclado son visibles; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3286"><see langword="true" /> if the keyboard accelerators are visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3287">En los controles creados en el Diseñador de Windows Forms, los aceleradores de teclado son visibles de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="c1553-3287">In controls created in the Windows Forms designer, keyboard accelerators are visible by default.</span></span>  
  
 <span data-ttu-id="c1553-3288">Para obtener más información sobre esta característica, consulte el [WM_CHANGEUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx), [WM_QUERYUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx)y el [WM_UPDATEUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx) temas.</span><span class="sxs-lookup"><span data-stu-id="c1553-3288">For more information about this feature, see the [WM_CHANGEUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646342\(v=vs.85\).aspx), [WM_QUERYUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646355\(v=vs.85\).aspx), and the [WM_UPDATEUISTATE](https://msdn.microsoft.com/library/windows/desktop/ms646361\(v=vs.85\).aspx) topics.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.UICues" />
        <altmember cref="P:System.Windows.Forms.Control.ShowFocusCues" />
        <altmember cref="E:System.Windows.Forms.Control.ChangeUICues" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Windows.Forms.Control.Site" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IComponent.Site</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3289">Obtiene o establece el sitio del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3289">Gets or sets the site of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-3290"><see cref="T:System.ComponentModel.ISite" /> asociado a <see cref="T:System.Windows.Forms.Control" />, en caso de que exista.</span><span class="sxs-lookup"><span data-stu-id="c1553-3290">The <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ISite" />
        <altmember cref="P:System.ComponentModel.IComponent.Site" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Drawing.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size Size { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Drawing.Size with get, set" Usage="System.Windows.Forms.Control.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3291">Obtiene o establece el alto y el ancho del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3291">Gets or sets the height and width of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-3292"><see cref="T:System.Drawing.Size" /> que representa el ancho y el alto del control en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3292">The <see cref="T:System.Drawing.Size" /> that represents the height and width of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3293">Dado que el <xref:System.Drawing.Size> clase es un tipo de valor (`Structure` en Visual Basic, `struct` en Visual C#), se devuelve por valor, lo que significa que el acceso a la propiedad devuelve una copia del tamaño del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3293">Because the <xref:System.Drawing.Size> class is a value type (`Structure` in Visual Basic, `struct` in Visual C#), it is returned by value, meaning accessing the property returns a copy of the size of the control.</span></span> <span data-ttu-id="c1553-3294">Por lo tanto, ajustar el <xref:System.Drawing.Size.Width%2A> o <xref:System.Drawing.Size.Height%2A> propiedades de la <xref:System.Drawing.Size> devuelto de esta propiedad no tendrá ningún efecto el <xref:System.Windows.Forms.Control.Width%2A> o <xref:System.Windows.Forms.Control.Height%2A> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3294">So, adjusting the <xref:System.Drawing.Size.Width%2A> or <xref:System.Drawing.Size.Height%2A> properties of the <xref:System.Drawing.Size> returned from this property will not affect the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control.</span></span> <span data-ttu-id="c1553-3295">Para ajustar el <xref:System.Windows.Forms.Control.Width%2A> o <xref:System.Windows.Forms.Control.Height%2A> del control, debe establecer el control <xref:System.Windows.Forms.Control.Width%2A> o <xref:System.Windows.Forms.Control.Height%2A> o establecer el <xref:System.Windows.Forms.Control.Size%2A> propiedad con un nuevo <xref:System.Drawing.Size>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3295">To adjust the <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> of the control, you must set the control's <xref:System.Windows.Forms.Control.Width%2A> or <xref:System.Windows.Forms.Control.Height%2A> property, or set the <xref:System.Windows.Forms.Control.Size%2A> property with a new <xref:System.Drawing.Size>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-3296">Para mantener un rendimiento óptimo, no establezca la <xref:System.Drawing.Size> de un control en su constructor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3296">To maintain better performance, do not set the <xref:System.Drawing.Size> of a control in its constructor.</span></span> <span data-ttu-id="c1553-3297">El método preferido es invalidar el <xref:System.Windows.Forms.Control.DefaultSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3297">The preferred method is to override the <xref:System.Windows.Forms.Control.DefaultSize%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-3298">En los sistemas Windows Server 2003, el tamaño de un <xref:System.Windows.Forms.Form> está restringido por el ancho de píxel máximo y el alto del monitor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3298">On Windows Server 2003 systems, the size of a <xref:System.Windows.Forms.Form> is restricted by the maximum pixel width and height of the monitor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3299">En el ejemplo de código siguiente se agrega un <xref:System.Windows.Forms.Button> a un formulario y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-3299">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="c1553-3300">En el ejemplo se ancla el botón a la esquina inferior derecha del formulario, por lo que mantiene su posición relativa, como el tamaño del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3300">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="c1553-3301">A continuación establece el <xref:System.Windows.Forms.Control.BackgroundImage%2A> y cambia el tamaño del botón en el mismo tamaño que el <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3301">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="c1553-3302">En el ejemplo, a continuación, Establece el <xref:System.Windows.Forms.Control.TabStop%2A> a `true` y establece el <xref:System.Windows.Forms.Control.TabIndex%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3302">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="c1553-3303">Por último, agrega un controlador de eventos para controlar la <xref:System.Windows.Forms.Control.Click> eventos del botón.</span><span class="sxs-lookup"><span data-stu-id="c1553-3303">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="c1553-3304">En este ejemplo requiere que haya un <xref:System.Windows.Forms.ImageList> denominado `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3304">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.SizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : EventHandler " Usage="member this.SizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3305">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Size" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3305">Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3306">Es preferible usar el <xref:System.Windows.Forms.Control.Layout> eventos para controlar los diseños personalizados.</span><span class="sxs-lookup"><span data-stu-id="c1553-3306">It is preferable to use the <xref:System.Windows.Forms.Control.Layout> event to handle custom layouts.</span></span> <span data-ttu-id="c1553-3307">El <xref:System.Windows.Forms.Control.Layout> evento se genera en respuesta a <xref:System.Windows.Forms.Control.Resize> eventos, sino también en otras condiciones al diseño posible que deba aplicarse.</span><span class="sxs-lookup"><span data-stu-id="c1553-3307">The <xref:System.Windows.Forms.Control.Layout> event is raised in response to <xref:System.Windows.Forms.Control.Resize> events, but also in other conditions when layout might need to be applied.</span></span>  
  
 <span data-ttu-id="c1553-3308">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Size%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3308">This event is raised if the <xref:System.Windows.Forms.Control.Size%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-3309">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3309">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3310">En el ejemplo de código siguiente se muestra el <xref:System.Windows.Forms.Control.SizeChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3310">The following code example demonstrates the <xref:System.Windows.Forms.Control.SizeChanged> event.</span></span> <span data-ttu-id="c1553-3311">Una instancia de un <xref:System.Windows.Forms.Button> control ha sido siempre que se puede escalar horizontal y verticalmente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3311">An instance of a <xref:System.Windows.Forms.Button> control has been provided that can be scaled both horizontally and vertically.</span></span> <span data-ttu-id="c1553-3312">Un <xref:System.Windows.Forms.NumericUpDown> instancia proporciona el valor de escala horizontal y vertical.</span><span class="sxs-lookup"><span data-stu-id="c1553-3312">A <xref:System.Windows.Forms.NumericUpDown> instance provides the horizontal and vertical scale value.</span></span> <span data-ttu-id="c1553-3313">El <xref:System.Windows.Forms.Button> instancia denominada **Aceptar** se usa para establecer los valores de escala para el <xref:System.Windows.Forms.Button> instancia del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3313">The <xref:System.Windows.Forms.Button> instance named **OK** is used to set the scale values for the <xref:System.Windows.Forms.Button> control instance.</span></span> <span data-ttu-id="c1553-3314">Cada vez que cambia el tamaño del control, el controlador de eventos asociado con el <xref:System.Windows.Forms.Control.SizeChanged> se llama al evento del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3314">Whenever the size of the control changes, the event handler associated with the <xref:System.Windows.Forms.Control.SizeChanged> event of the control is called.</span></span> <span data-ttu-id="c1553-3315">Este controlador de eventos muestra un cuadro de mensaje que indica que ha cambiado el tamaño del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3315">This event handler displays a message box indicating that the size of the control has changed.</span></span>  
  
 [!code-cpp[Control_Scale1#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_Scale1/CPP/control_scale1.cpp#2)]
 [!code-csharp[Control_Scale1#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_Scale1/CS/control_scale1.cs#2)]
 [!code-vb[Control_Scale1#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_Scale1/VB/control_scale1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="E:System.Windows.Forms.Control.Resize" />
      </Docs>
    </Member>
    <Member MemberName="SizeFromClientSize">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Size SizeFromClientSize (System.Drawing.Size clientSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Drawing.Size SizeFromClientSize(valuetype System.Drawing.Size clientSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SizeFromClientSize (clientSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Drawing::Size SizeFromClientSize(System::Drawing::Size clientSize);" />
      <MemberSignature Language="F#" Value="abstract member SizeFromClientSize : System.Drawing.Size -&gt; System.Drawing.Size&#xA;override this.SizeFromClientSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="control.SizeFromClientSize clientSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clientSize" Type="System.Drawing.Size" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="clientSize"><span data-ttu-id="c1553-3316">Valor <see cref="T:System.Drawing.Size" /> que representa el alto y el ancho del área cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3316">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the control's client area.</span></span></param>
        <summary><span data-ttu-id="c1553-3317">Determina el tamaño de todo el control a partir del alto y el ancho de su área cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3317">Determines the size of the entire control from the height and width of its client area.</span></span></summary>
        <returns><span data-ttu-id="c1553-3318">Valor <see cref="T:System.Drawing.Size" /> que representa el alto y el ancho de todo el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3318">A <see cref="T:System.Drawing.Size" /> value representing the height and width of the entire control.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StyleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StyleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.StyleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StyleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StyleChanged;" />
      <MemberSignature Language="F#" Value="member this.StyleChanged : EventHandler " Usage="member this.StyleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3319">Se produce cuando cambia el estilo del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3319">Occurs when the control style changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3320">El <xref:System.Windows.Forms.Control.StyleChanged> evento tiene lugar cuando <xref:System.Windows.Forms.ControlStyles> marcas se han agregado o cambiado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3320">The <xref:System.Windows.Forms.Control.StyleChanged> event occurs when <xref:System.Windows.Forms.ControlStyles> flags have been added or changed.</span></span>  
  
 <span data-ttu-id="c1553-3321">Este evento se desencadena si se cambia el estilo de control mediante programación o por la interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3321">This event is raised if the control style is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-3322">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3322">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3323">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-3323">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-3324">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.StyleChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3324">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span> <span data-ttu-id="c1553-3325">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3325">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-3326">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3326">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-3327">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3327">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-3328">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.StyleChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3328">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#68](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#68)]
 [!code-vb[System.Windows.Forms.EventExamples#68](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#68)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)" />
        <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
        <altmember cref="T:System.Windows.Forms.ControlStyles" />
      </Docs>
    </Member>
    <Member MemberName="SuspendLayout">
      <MemberSignature Language="C#" Value="public void SuspendLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.SuspendLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendLayout();" />
      <MemberSignature Language="F#" Value="member this.SuspendLayout : unit -&gt; unit" Usage="control.SuspendLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3329">Suspende temporalmente la lógica de diseño del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3329">Temporarily suspends the layout logic for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3330">La lógica de diseño del control se suspende hasta que el <xref:System.Windows.Forms.Control.ResumeLayout%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3330">The layout logic of the control is suspended until the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method is called.</span></span>  
  
 <span data-ttu-id="c1553-3331">El <xref:System.Windows.Forms.Control.SuspendLayout%2A> y <xref:System.Windows.Forms.Control.ResumeLayout%2A> métodos se usan conjuntamente para suprimir varios <xref:System.Windows.Forms.Control.Layout> eventos mientras se ajustan varios atributos del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3331">The <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods are used in tandem to suppress multiple <xref:System.Windows.Forms.Control.Layout> events while you adjust multiple attributes of the control.</span></span> <span data-ttu-id="c1553-3332">Por ejemplo, normalmente se llamaría a la <xref:System.Windows.Forms.Control.SuspendLayout%2A> método, a continuación, establezca el <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, o <xref:System.Windows.Forms.Control.Dock%2A> propiedades del control y, a continuación, llame el <xref:System.Windows.Forms.Control.ResumeLayout%2A> método para habilitar los cambios surtan efecto.</span><span class="sxs-lookup"><span data-stu-id="c1553-3332">For example, you would typically call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method, then set the <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, or <xref:System.Windows.Forms.Control.Dock%2A> properties of the control, and then call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method to enable the changes to take effect.</span></span>  
  
 <span data-ttu-id="c1553-3333">No debe haber ninguna llamada pendiente a <xref:System.Windows.Forms.Control.SuspendLayout%2A> para <xref:System.Windows.Forms.Control.ResumeLayout%2A> llamará correctamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3333">There must be no pending calls to <xref:System.Windows.Forms.Control.SuspendLayout%2A> for <xref:System.Windows.Forms.Control.ResumeLayout%2A> to be successfully called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c1553-3334">Al agregar varios controles a un control principal, se recomienda que llame el <xref:System.Windows.Forms.Control.SuspendLayout%2A> método antes de inicializar los controles que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3334">When adding several controls to a parent control, it is recommended that you call the <xref:System.Windows.Forms.Control.SuspendLayout%2A> method before initializing the controls to be added.</span></span> <span data-ttu-id="c1553-3335">Después de agregar los controles al control primario, llame a la <xref:System.Windows.Forms.Control.ResumeLayout%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3335">After adding the controls to the parent control, call the <xref:System.Windows.Forms.Control.ResumeLayout%2A> method.</span></span> <span data-ttu-id="c1553-3336">Esto aumentará el rendimiento de aplicaciones con muchos controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3336">This will increase the performance of applications with many controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3337">El ejemplo de código siguiente agrega dos botones a un formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3337">The following code example adds two buttons to a form.</span></span> <span data-ttu-id="c1553-3338">Las transacciones de ejemplo la adición de los botones mediante el uso de la <xref:System.Windows.Forms.Control.SuspendLayout%2A> y <xref:System.Windows.Forms.Control.ResumeLayout%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3338">The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#2)]
 [!code-csharp[Windows.Forms.Control Members2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#2)]
 [!code-vb[Windows.Forms.Control Members2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.ResumeLayout" />
        <altmember cref="P:System.Windows.Forms.Control.LayoutEngine" />
        <altmember cref="E:System.Windows.Forms.Control.Layout" />
        <altmember cref="M:System.Windows.Forms.Control.PerformLayout" />
        <altmember cref="M:System.Windows.Forms.Control.SuspendLayout" />
        <altmember cref="M:System.Windows.Forms.Control.InitLayout" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragDrop">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragDrop(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragDrop (drgEvent As DragEventArgs) Implements IDropTarget.OnDragDrop" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragDrop(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragDrop;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="c1553-3339">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3339">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-3340">Genera el evento <see cref="E:System.Windows.Forms.Control.DragDrop" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3340">Raises the <see cref="E:System.Windows.Forms.Control.DragDrop" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragEnter">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragEnter(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragEnter (drgEvent As DragEventArgs) Implements IDropTarget.OnDragEnter" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragEnter(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragEnter;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="c1553-3341">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3341">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-3342">Genera el evento <see cref="E:System.Windows.Forms.Control.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3342">Raises the <see cref="E:System.Windows.Forms.Control.DragEnter" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragLeave">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragLeave (e As EventArgs) Implements IDropTarget.OnDragLeave" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs ^ e) = System::Windows::Forms::IDropTarget::OnDragLeave;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="c1553-3343">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3343">A <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-3344">Genera el evento <see cref="E:System.Windows.Forms.Control.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3344">Raises the <see cref="E:System.Windows.Forms.Control.DragLeave" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Forms.IDropTarget.OnDragOver">
      <MemberSignature Language="C#" Value="void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs drgEvent);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Forms.IDropTarget.OnDragOver(class System.Windows.Forms.DragEventArgs drgEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDragOver (drgEvent As DragEventArgs) Implements IDropTarget.OnDragOver" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Forms.IDropTarget.OnDragOver(System::Windows::Forms::DragEventArgs ^ drgEvent) = System::Windows::Forms::IDropTarget::OnDragOver;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drgEvent" Type="System.Windows.Forms.DragEventArgs" Index="0" FrameworkAlternate="netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="drgEvent"><span data-ttu-id="c1553-3345">Objeto <see cref="T:System.Windows.Forms.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3345">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="c1553-3346">Genera el evento <see cref="E:System.Windows.Forms.Control.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3346">Raises the <see cref="E:System.Windows.Forms.Control.DragOver" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemColorsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SystemColorsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SystemColorsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.SystemColorsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SystemColorsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SystemColorsChanged;" />
      <MemberSignature Language="F#" Value="member this.SystemColorsChanged : EventHandler " Usage="member this.SystemColorsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3347">Se produce cuando se modifican los colores del sistema.</span><span class="sxs-lookup"><span data-stu-id="c1553-3347">Occurs when the system colors change.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3348">Este evento se desencadena si el <xref:System.Drawing.SystemColors> se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3348">This event is raised if the <xref:System.Drawing.SystemColors> is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-3349">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3349">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3350">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-3350">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-3351">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.SystemColorsChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3351">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.</span></span> <span data-ttu-id="c1553-3352">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3352">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-3353">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3353">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-3354">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3354">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-3355">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.SystemColorsChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3355">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.SystemColorsChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#69](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#69)]
 [!code-vb[System.Windows.Forms.EventExamples#69](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#69)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)" />
        <altmember cref="T:System.Drawing.SystemColors" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public int TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property TabIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TabIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int with get, set" Usage="System.Windows.Forms.Control.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3356">Obtiene o establece el orden de tabulación del control en su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3356">Gets or sets the tab order of the control within its container.</span></span></summary>
        <value><span data-ttu-id="c1553-3357">Valor de índice del control dentro del conjunto de controles dentro de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3357">The index value of the control within the set of controls within its container.</span></span> <span data-ttu-id="c1553-3358">Los controles del contenedor están incluidos en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3358">The controls in the container are included in the tab order.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3359">Un índice de tabulación puede constar de un número entero válido mayor que o igual que cero, los números más bajos que se va a anteriormente en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3359">A tab index can consist of any valid integer greater than or equal to zero, lower numbers being earlier in the tab order.</span></span> <span data-ttu-id="c1553-3360">Si más de un control en el mismo control primario tiene el mismo índice de tabulación, el orden z de los controles determina el orden para desplazarse por los controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3360">If more than one control on the same parent control has the same tab index, the z-order of the controls determines the order to cycle through the controls.</span></span>  
  
 <span data-ttu-id="c1553-3361">Para un control que se incluirán en el orden de tabulación, su <xref:System.Windows.Forms.Control.TabStop%2A> propiedad debe establecerse en `true`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3361">For a control to be included in the tab order, its <xref:System.Windows.Forms.Control.TabStop%2A> property must be set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3362">En el ejemplo de código siguiente se agrega un <xref:System.Windows.Forms.Button> a un formulario y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-3362">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="c1553-3363">En el ejemplo se ancla el botón a la esquina inferior derecha del formulario, por lo que mantiene su posición relativa, como el tamaño del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3363">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="c1553-3364">A continuación establece el <xref:System.Windows.Forms.Control.BackgroundImage%2A> y cambia el tamaño del botón en el mismo tamaño que el <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3364">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="c1553-3365">En el ejemplo, a continuación, Establece el <xref:System.Windows.Forms.Control.TabStop%2A> a `true` y establece el <xref:System.Windows.Forms.Control.TabIndex%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3365">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="c1553-3366">Por último, agrega un controlador de eventos para controlar la <xref:System.Windows.Forms.Control.Click> eventos del botón.</span><span class="sxs-lookup"><span data-stu-id="c1553-3366">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="c1553-3367">En este ejemplo requiere que haya un <xref:System.Windows.Forms.ImageList> denominado `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3367">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.UpdateZOrder" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
      </Docs>
    </Member>
    <Member MemberName="TabIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TabIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.TabIndexChanged : EventHandler " Usage="member this.TabIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3368">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.TabIndex" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3368">Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3369">Este evento se desencadena si el <xref:System.Windows.Forms.Control.TabIndex%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3369">This event is raised if the <xref:System.Windows.Forms.Control.TabIndex%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-3370">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3370">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3371">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-3371">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-3372">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.TabIndexChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3372">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabIndexChanged> event.</span></span> <span data-ttu-id="c1553-3373">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3373">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-3374">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3374">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-3375">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3375">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-3376">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.TabIndexChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3376">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabIndexChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#25)]
 [!code-vb[System.Windows.Forms.EventExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#25)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="TabStop">
      <MemberSignature Language="C#" Value="public bool TabStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TabStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TabStop" />
      <MemberSignature Language="VB.NET" Value="Public Property TabStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TabStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TabStop : bool with get, set" Usage="System.Windows.Forms.Control.TabStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-516)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3377">Obtiene o establece un valor que indica si el usuario puede dar el foco a este control mediante la tecla TAB.</span><span class="sxs-lookup"><span data-stu-id="c1553-3377">Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.</span></span></summary>
        <value><span data-ttu-id="c1553-3378"><see langword="true" /> si el usuario puede dar el foco al control mediante la tecla TAB; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3378"><see langword="true" /> if the user can give the focus to the control using the TAB key; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1553-3379">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3379">The default is <see langword="true" />.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="c1553-3380">Esta propiedad siempre devolverá <see langword="true" /> para una instancia de la clase <see cref="T:System.Windows.Forms.Form" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3380">This property will always return <see langword="true" /> for an instance of the <see cref="T:System.Windows.Forms.Form" /> class.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3381">Cuando el usuario presiona la tecla TAB, el foco de entrada se establece en el siguiente control en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3381">When the user presses the TAB key, the input focus is set to the next control in the tab order.</span></span> <span data-ttu-id="c1553-3382">Los controles con el <xref:System.Windows.Forms.Control.TabStop%2A> el valor de propiedad `false` no se incluyen en la colección de controles en el orden de tabulación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3382">Controls with the <xref:System.Windows.Forms.Control.TabStop%2A> property value of `false` are not included in the collection of controls in the tab order.</span></span> <span data-ttu-id="c1553-3383">El orden de tabulación se puede manipular mediante el establecimiento del control <xref:System.Windows.Forms.Control.TabIndex%2A> valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3383">The tab order can be manipulated by setting the control's <xref:System.Windows.Forms.Control.TabIndex%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3384">En el ejemplo de código siguiente se agrega un <xref:System.Windows.Forms.Button> a un formulario y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-3384">The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties.</span></span> <span data-ttu-id="c1553-3385">En el ejemplo se ancla el botón a la esquina inferior derecha del formulario, por lo que mantiene su posición relativa, como el tamaño del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3385">The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized.</span></span> <span data-ttu-id="c1553-3386">A continuación establece el <xref:System.Windows.Forms.Control.BackgroundImage%2A> y cambia el tamaño del botón en el mismo tamaño que el <xref:System.Drawing.Image>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3386">Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>.</span></span> <span data-ttu-id="c1553-3387">En el ejemplo, a continuación, Establece el <xref:System.Windows.Forms.Control.TabStop%2A> a `true` y establece el <xref:System.Windows.Forms.Control.TabIndex%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3387">The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property.</span></span> <span data-ttu-id="c1553-3388">Por último, agrega un controlador de eventos para controlar la <xref:System.Windows.Forms.Control.Click> eventos del botón.</span><span class="sxs-lookup"><span data-stu-id="c1553-3388">Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button.</span></span> <span data-ttu-id="c1553-3389">En este ejemplo requiere que haya un <xref:System.Windows.Forms.ImageList> denominado `imageList1`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3389">This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#3)]
 [!code-csharp[Windows.Forms.Control Properties#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#3)]
 [!code-vb[Windows.Forms.Control Properties#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.TabIndex" />
      </Docs>
    </Member>
    <Member MemberName="TabStopChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TabStopChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TabStopChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TabStopChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TabStopChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TabStopChanged;" />
      <MemberSignature Language="F#" Value="member this.TabStopChanged : EventHandler " Usage="member this.TabStopChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3390">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.TabStop" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3390">Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3391">Este evento se desencadena si el <xref:System.Windows.Forms.Control.TabStop%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3391">This event is raised if the <xref:System.Windows.Forms.Control.TabStop%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-3392">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3392">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3393">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="c1553-3393">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="c1553-3394">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.TabStopChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3394">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.TabStopChanged> event.</span></span> <span data-ttu-id="c1553-3395">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3395">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="c1553-3396">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3396">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="c1553-3397">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3397">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="c1553-3398">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.TabStopChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3398">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.TabStopChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#26)]
 [!code-vb[System.Windows.Forms.EventExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#26)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.TabStop" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.Forms.Control.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.StringConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3399">Obtiene o establece el objeto que contiene datos sobre el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3399">Gets or sets the object that contains data about the control.</span></span></summary>
        <value><span data-ttu-id="c1553-3400"><see cref="T:System.Object" /> que contiene datos sobre el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3400">An <see cref="T:System.Object" /> that contains data about the control.</span></span> <span data-ttu-id="c1553-3401">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3401">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3402">Cualquier tipo derivado de la <xref:System.Object> clase puede asignarse a esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3402">Any type derived from the <xref:System.Object> class can be assigned to this property.</span></span> <span data-ttu-id="c1553-3403">Si el <xref:System.Windows.Forms.Control.Tag%2A> propiedad se establece mediante el Diseñador de Windows Forms, se puede asignar solo texto.</span><span class="sxs-lookup"><span data-stu-id="c1553-3403">If the <xref:System.Windows.Forms.Control.Tag%2A> property is set through the Windows Forms designer, only text can be assigned.</span></span>  
  
 <span data-ttu-id="c1553-3404">Un uso común para el <xref:System.Windows.Forms.Control.Tag%2A> propiedad consiste en almacenar datos estrechamente relacionados con el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3404">A common use for the <xref:System.Windows.Forms.Control.Tag%2A> property is to store data that is closely associated with the control.</span></span> <span data-ttu-id="c1553-3405">Por ejemplo, si tiene un control que muestra información sobre un cliente, podría almacenar un <xref:System.Data.DataSet> que contiene el historial de pedidos del cliente en ese control <xref:System.Windows.Forms.Control.Tag%2A> propiedad, por lo que pueden obtener acceso a los datos rápidamente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3405">For example, if you have a control that displays information about a customer, you might store a <xref:System.Data.DataSet> that contains the customer's order history in that control's <xref:System.Windows.Forms.Control.Tag%2A> property so the data can be accessed quickly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3406">En el ejemplo de código siguiente se muestra un formulario y almacena una `Customer` en su <xref:System.Windows.Forms.Control.Tag%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3406">The following code example displays a form and stores a `Customer` in its <xref:System.Windows.Forms.Control.Tag%2A> property.</span></span> <span data-ttu-id="c1553-3407">Este ejemplo requiere que haya definido una clase que derive de <xref:System.Windows.Forms.Form> denominado `CustomerForm` y que ha definido un `Customer`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3407">This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `CustomerForm` and that you have defined a `Customer`.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members2#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CPP/controlmembers2.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members2#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members2/CS/controlmembers2.cs#3)]
 [!code-vb[Windows.Forms.Control Members2#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members2/VB/controlmembers2.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.Control.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(-517)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3408">Obtiene o establece el texto asociado al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3408">Gets or sets the text associated with this control.</span></span></summary>
        <value><span data-ttu-id="c1553-3409">Texto asociado al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3409">The text associated with this control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3410">El <xref:System.Windows.Forms.Control.Text%2A> propiedad del control se usa de forma diferente por cada clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c1553-3410">The <xref:System.Windows.Forms.Control.Text%2A> property of the control is used differently by each derived class.</span></span> <span data-ttu-id="c1553-3411">Por ejemplo el <xref:System.Windows.Forms.Control.Text%2A> propiedad de un <xref:System.Windows.Forms.Form> se muestra en la barra de título en la parte superior del formulario, de recuento de caracteres es bastante pequeño y normalmente se muestra el nombre de aplicación o documento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3411">For example the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.Form> is displayed in the title bar at the top of the form, is fairly small in character count, and usually displays the application or document name.</span></span> <span data-ttu-id="c1553-3412">Sin embargo, el <xref:System.Windows.Forms.Control.Text%2A> propiedad de un <xref:System.Windows.Forms.RichTextBox> pueden ser grandes y pueden incluir numerosos caracteres no visuales que se utilizan para dar formato al texto.</span><span class="sxs-lookup"><span data-stu-id="c1553-3412">However, the <xref:System.Windows.Forms.Control.Text%2A> property of a <xref:System.Windows.Forms.RichTextBox> can be large and can include numerous nonvisual characters used to format the text.</span></span> <span data-ttu-id="c1553-3413">Por ejemplo, el texto mostrado en un <xref:System.Windows.Forms.RichTextBox> puede tener el formato ajustando el <xref:System.Drawing.Font> propiedades, o mediante la adición de espacios o caracteres de tabulación para alinear el texto.</span><span class="sxs-lookup"><span data-stu-id="c1553-3413">For example, the text displayed in a <xref:System.Windows.Forms.RichTextBox> can be formatted by adjusting the <xref:System.Drawing.Font> properties, or by the addition of spaces or tab characters to align the text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3414">En el ejemplo de código siguiente se crea un <xref:System.Windows.Forms.GroupBox> y se establecen algunas de sus propiedades comunes.</span><span class="sxs-lookup"><span data-stu-id="c1553-3414">The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties.</span></span> <span data-ttu-id="c1553-3415">El ejemplo se crea un <xref:System.Windows.Forms.TextBox> y establece su <xref:System.Windows.Forms.Control.Location%2A> dentro del cuadro de grupo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3415">The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box.</span></span> <span data-ttu-id="c1553-3416">A continuación, Establece la <xref:System.Windows.Forms.Control.Text%2A> propiedad del cuadro de grupo y lo acopla el grupo de cuadro a la parte superior del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3416">Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form.</span></span> <span data-ttu-id="c1553-3417">Por último, deshabilita el cuadro de grupo estableciendo el <xref:System.Windows.Forms.Control.Enabled%2A> propiedad `false`, lo que hace que todos los controles contenidos en el cuadro de grupo va a deshabilitar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3417">Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Properties#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CPP/controlproperties.cpp#2)]
 [!code-csharp[Windows.Forms.Control Properties#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Properties/CS/controlproperties.cs#2)]
 [!code-vb[Windows.Forms.Control Properties#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Properties/VB/controlproperties.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-3418">Cuando se reemplaza el <see cref="P:System.Windows.Forms.Control.Text" /> propiedad en una clase derivada, utilice la clase base <see cref="P:System.Windows.Forms.Control.Text" /> propiedad para extender la implementación base.</span><span class="sxs-lookup"><span data-stu-id="c1553-3418">When overriding the <see cref="P:System.Windows.Forms.Control.Text" /> property in a derived class, use the base class's <see cref="P:System.Windows.Forms.Control.Text" /> property to extend the base implementation.</span></span> <span data-ttu-id="c1553-3419">En caso contrario, debe proporcionar toda la implementación.</span><span class="sxs-lookup"><span data-stu-id="c1553-3419">Otherwise, you must provide all the implementation.</span></span> <span data-ttu-id="c1553-3420">No es necesario reemplazar ambos el <see langword="get" /> y <see langword="set" /> descriptores de acceso de la <see cref="P:System.Windows.Forms.Control.Text" /> propiedad; se puede reemplazar sólo uno, si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3420">You are not required to override both the <see langword="get" /> and <see langword="set" /> accessors of the <see cref="P:System.Windows.Forms.Control.Text" /> property; you can override only one if needed.</span></span></para></block>
        <altmember cref="P:System.Windows.Forms.TextBoxBase.TextLength" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event EventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : EventHandler " Usage="member this.TextChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3421">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Text" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3421">Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3422">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Text%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3422">This event is raised if the <xref:System.Windows.Forms.Control.Text%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-3423">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3423">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3424">El siguiente código de ejemplo se cambia el <xref:System.Windows.Forms.Control.ForeColor%2A> de un <xref:System.Windows.Forms.TextBox> muestra datos de moneda.</span><span class="sxs-lookup"><span data-stu-id="c1553-3424">The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data.</span></span> <span data-ttu-id="c1553-3425">El ejemplo convierte el texto de un número decimal y los cambios en el <xref:System.Windows.Forms.Control.ForeColor%2A> a <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> si el número es negativo y a <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> si el número es positivo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3425">The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=nameWithType> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=nameWithType> if the number is positive.</span></span> <span data-ttu-id="c1553-3426">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que contiene un <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3426">This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CPP/propertychangedevents.cpp#1)]
 [!code-csharp[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/CS/propertychangedevents.cs#1)]
 [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control_PropertyChangedEvents/VB/propertychangedevents.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Top : int with get, set" Usage="System.Windows.Forms.Control.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3427">Obtiene o establece la distancia, en píxeles, que existe entre el borde superior del control y el borde superior del área cliente de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3427">Gets or sets the distance, in pixels, between the top edge of the control and the top edge of its container's client area.</span></span></summary>
        <value><span data-ttu-id="c1553-3428"><see cref="T:System.Int32" /> que representa la distancia, en píxeles, que existe entre el borde inferior del control y el borde superior del área cliente de su contenedor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3428">An <see cref="T:System.Int32" /> representing the distance, in pixels, between the bottom edge of the control and the top edge of its container's client area.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3429">El <xref:System.Windows.Forms.Control.Top%2A> valor de propiedad es equivalente a la <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> propiedad de la <xref:System.Windows.Forms.Control.Location%2A> valor de propiedad del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3429">The <xref:System.Windows.Forms.Control.Top%2A> property value is equivalent to the <xref:System.Drawing.Point.Y%2A?displayProperty=nameWithType> property of the <xref:System.Windows.Forms.Control.Location%2A> property value of the control.</span></span>  
  
 <span data-ttu-id="c1553-3430">Los cambios realizados en el <xref:System.Windows.Forms.Control.Height%2A> y <xref:System.Windows.Forms.Control.Top%2A> causa de los valores de propiedad el <xref:System.Windows.Forms.Control.Bottom%2A> valor de propiedad del control que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3430">Changes made to the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Top%2A> property values cause the <xref:System.Windows.Forms.Control.Bottom%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3431">El ejemplo de código siguiente crea tres <xref:System.Windows.Forms.Button> controles de formularios y establece su tamaño y la ubicación mediante el uso de las diversas propiedades relacionadas con la ubicación y tamaño.</span><span class="sxs-lookup"><span data-stu-id="c1553-3431">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="c1553-3432">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que tiene un ancho y alto de al menos 300 píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3432">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Drawing.Point.Y" />
        <altmember cref="P:System.Windows.Forms.Control.Bottom" />
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
      </Docs>
    </Member>
    <Member MemberName="TopLevelControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control TopLevelControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control TopLevelControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.TopLevelControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLevelControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ TopLevelControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopLevelControl : System.Windows.Forms.Control" Usage="System.Windows.Forms.Control.TopLevelControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3433">Obtiene el control primario que no es secundario de ningún otro control de formularios Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-3433">Gets the parent control that is not parented by another Windows Forms control.</span></span> <span data-ttu-id="c1553-3434">Normalmente, se trata del <see cref="T:System.Windows.Forms.Form" /> más externo en el que está contenido el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3434">Typically, this is the outermost <see cref="T:System.Windows.Forms.Form" /> that the control is contained in.</span></span></summary>
        <value><span data-ttu-id="c1553-3435"><see cref="T:System.Windows.Forms.Control" /> que representa al control de nivel superior que contiene el control actual.</span><span class="sxs-lookup"><span data-stu-id="c1553-3435">The <see cref="T:System.Windows.Forms.Control" /> that represents the top-level control that contains the current control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3436">El control de nivel superior se define como el control primario que no es secundario de ningún otro control de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c1553-3436">The top-level control is defined as the parent control that is not parented by another Windows Forms control.</span></span> <span data-ttu-id="c1553-3437">Normalmente, se trata del <xref:System.Windows.Forms.Form> más externo en el que está contenido el control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3437">Typically, this is the outermost <xref:System.Windows.Forms.Form> that the control is contained in.</span></span> <span data-ttu-id="c1553-3438">Por ejemplo, si el control está incluido en un formulario MDI secundario <xref:System.Windows.Forms.Form>, entonces el control de nivel superior es el elemento primario de la interfaz de múltiples documentos (MDI) <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3438">For example, if the control is contained on an MDI child <xref:System.Windows.Forms.Form>, then the top-level control is the Multiple Document Interface (MDI) parent <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="c1553-3439">Si el control no tiene un elemento primario en una <xref:System.Windows.Forms.Form>, esta propiedad devolverá `null`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3439">If the control is not parented on a <xref:System.Windows.Forms.Form>, this property will return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="c1553-3440">para todas las ventanas obtener este valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3440">for all windows to get this property value.</span></span> <span data-ttu-id="c1553-3441">Enumeración asociada: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="c1553-3441">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Forms.Form" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="control.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3442">Hace que el control vuelva a dibujar las regiones no válidas en su área de cliente.</span><span class="sxs-lookup"><span data-stu-id="c1553-3442">Causes the control to redraw the invalidated regions within its client area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3443">Ejecuta las solicitudes pendientes para pintar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3443">Executes any pending requests for painting.</span></span>  
  
 <span data-ttu-id="c1553-3444">Hay dos maneras de dibujar un formulario y su contenido:</span><span class="sxs-lookup"><span data-stu-id="c1553-3444">There are two ways to repaint a form and its contents:</span></span>  
  
-   <span data-ttu-id="c1553-3445">Puede usar una de las sobrecargas de los <xref:System.Windows.Forms.Control.Invalidate%2A> método con el <xref:System.Windows.Forms.Control.Update%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3445">You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the <xref:System.Windows.Forms.Control.Update%2A> method.</span></span>  
  
-   <span data-ttu-id="c1553-3446">Puede llamar a la <xref:System.Windows.Forms.Control.Refresh%2A> método, que obliga al control a dibujarse, así como todos sus elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3446">You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children.</span></span> <span data-ttu-id="c1553-3447">Esto es equivalente a establecer el <xref:System.Windows.Forms.Control.Invalidate%2A> método `true` y su uso con <xref:System.Windows.Forms.Control.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3447">This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with <xref:System.Windows.Forms.Control.Update%2A>.</span></span>  
  
 <span data-ttu-id="c1553-3448">El <xref:System.Windows.Forms.Control.Invalidate%2A> método controla lo que se dibuja o vuelva a dibujar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3448">The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted.</span></span> <span data-ttu-id="c1553-3449">El <xref:System.Windows.Forms.Control.Update%2A> rige el método cuando dibuja o cuándo se produce.</span><span class="sxs-lookup"><span data-stu-id="c1553-3449">The <xref:System.Windows.Forms.Control.Update%2A> method governs when the painting or repainting occurs.</span></span> <span data-ttu-id="c1553-3450">Si usas el <xref:System.Windows.Forms.Control.Invalidate%2A> y <xref:System.Windows.Forms.Control.Update%2A> juntas en lugar de llamar a métodos <xref:System.Windows.Forms.Control.Refresh%2A>, lo que se vuelve a dibujar depende de qué sobrecarga de <xref:System.Windows.Forms.Control.Invalidate%2A> utilice.</span><span class="sxs-lookup"><span data-stu-id="c1553-3450">If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and <xref:System.Windows.Forms.Control.Update%2A> methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use.</span></span> <span data-ttu-id="c1553-3451">El <xref:System.Windows.Forms.Control.Update%2A> método obliga a que el control se dibuje inmediatamente, pero la <xref:System.Windows.Forms.Control.Invalidate%2A> método controla lo que se dibuja cuando se llama a la <xref:System.Windows.Forms.Control.Update%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3451">The <xref:System.Windows.Forms.Control.Update%2A> method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the <xref:System.Windows.Forms.Control.Update%2A> method.</span></span>  
  
 <span data-ttu-id="c1553-3452">Para obtener más información, consulte el [WM_PAINT](https://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx) tema.</span><span class="sxs-lookup"><span data-stu-id="c1553-3452">For more information, see the [WM_PAINT](https://msdn.microsoft.com/library/dd145213\(v=vs.85\).aspx) topic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
        <altmember cref="P:System.Windows.Forms.Control.ClientSize" />
        <altmember cref="M:System.Windows.Forms.Control.Invalidate(System.Drawing.Region)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateBounds">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1553-3453">Actualiza los límites del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3453">Updates the bounds of the control.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected internal void UpdateBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void UpdateBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub UpdateBounds ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void UpdateBounds();" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : unit -&gt; unit" Usage="control.UpdateBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3454">Actualiza los límites del control con la ubicación y el tamaño actuales.</span><span class="sxs-lookup"><span data-stu-id="c1553-3454">Updates the bounds of the control with the current size and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3455">Si el nuevo <xref:System.Windows.Forms.Control.Size%2A> del control es diferente del anterior <xref:System.Drawing.Size>, el <xref:System.Windows.Forms.Control.SizeChanged> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3455">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="c1553-3456">Del mismo modo, si la <xref:System.Windows.Forms.Control.Location%2A> del control cambia, el <xref:System.Windows.Forms.Control.LocationChanged> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3456">Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected void UpdateBounds (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : int * int * int * int -&gt; unit" Usage="control.UpdateBounds (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c1553-3457">Coordenada <see cref="P:System.Drawing.Point.X" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3457">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control.</span></span></param>
        <param name="y"><span data-ttu-id="c1553-3458">Coordenada <see cref="P:System.Drawing.Point.Y" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3458">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control.</span></span></param>
        <param name="width"><span data-ttu-id="c1553-3459"><see cref="P:System.Drawing.Size.Width" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3459">The <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="height"><span data-ttu-id="c1553-3460"><see cref="P:System.Drawing.Size.Height" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3460">The <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <summary><span data-ttu-id="c1553-3461">Actualiza los límites del control con la ubicación y el tamaño especificados.</span><span class="sxs-lookup"><span data-stu-id="c1553-3461">Updates the bounds of the control with the specified size and location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3462">Si el nuevo <xref:System.Windows.Forms.Control.Size%2A> del control si es diferente del anterior <xref:System.Drawing.Size>, el <xref:System.Windows.Forms.Control.SizeChanged> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3462">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control if different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="c1553-3463">Del mismo modo, es el <xref:System.Windows.Forms.Control.Location%2A> del control cambia, el <xref:System.Windows.Forms.Control.LocationChanged> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3463">Likewise, is the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
      </Docs>
    </Member>
    <Member MemberName="UpdateBounds">
      <MemberSignature Language="C#" Value="protected void UpdateBounds (int x, int y, int width, int height, int clientWidth, int clientHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateBounds(int32 x, int32 y, int32 width, int32 height, int32 clientWidth, int32 clientHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateBounds (x As Integer, y As Integer, width As Integer, height As Integer, clientWidth As Integer, clientHeight As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateBounds(int x, int y, int width, int height, int clientWidth, int clientHeight);" />
      <MemberSignature Language="F#" Value="member this.UpdateBounds : int * int * int * int * int * int -&gt; unit" Usage="control.UpdateBounds (x, y, width, height, clientWidth, clientHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="clientWidth" Type="System.Int32" />
        <Parameter Name="clientHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="c1553-3464">Coordenada <see cref="P:System.Drawing.Point.X" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3464">The <see cref="P:System.Drawing.Point.X" /> coordinate of the control.</span></span></param>
        <param name="y"><span data-ttu-id="c1553-3465">Coordenada <see cref="P:System.Drawing.Point.Y" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3465">The <see cref="P:System.Drawing.Point.Y" /> coordinate of the control.</span></span></param>
        <param name="width"><span data-ttu-id="c1553-3466"><see cref="P:System.Drawing.Size.Width" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3466">The <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="height"><span data-ttu-id="c1553-3467"><see cref="P:System.Drawing.Size.Height" /> del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3467">The <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <param name="clientWidth"><span data-ttu-id="c1553-3468"><see cref="P:System.Drawing.Size.Width" /> de cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3468">The client <see cref="P:System.Drawing.Size.Width" /> of the control.</span></span></param>
        <param name="clientHeight"><span data-ttu-id="c1553-3469"><see cref="P:System.Drawing.Size.Height" /> de cliente del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3469">The client <see cref="P:System.Drawing.Size.Height" /> of the control.</span></span></param>
        <summary><span data-ttu-id="c1553-3470">Actualiza los límites del control con el tamaño, la ubicación y el tamaño de cliente especificados.</span><span class="sxs-lookup"><span data-stu-id="c1553-3470">Updates the bounds of the control with the specified size, location, and client size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3471">Si el nuevo <xref:System.Windows.Forms.Control.Size%2A> del control es diferente del anterior <xref:System.Drawing.Size>, el <xref:System.Windows.Forms.Control.SizeChanged> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3471">If the new <xref:System.Windows.Forms.Control.Size%2A> of the control is different from the previous <xref:System.Drawing.Size>, the <xref:System.Windows.Forms.Control.SizeChanged> event is raised.</span></span> <span data-ttu-id="c1553-3472">Del mismo modo, si la <xref:System.Windows.Forms.Control.Location%2A> del control cambia, el <xref:System.Windows.Forms.Control.LocationChanged> provoca el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3472">Likewise, if the <xref:System.Windows.Forms.Control.Location%2A> of the control changes, the <xref:System.Windows.Forms.Control.LocationChanged> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Size" />
        <altmember cref="P:System.Windows.Forms.Control.Location" />
        <altmember cref="P:System.Windows.Forms.Control.ClientRectangle" />
      </Docs>
    </Member>
    <Member MemberName="UpdateStyles">
      <MemberSignature Language="C#" Value="protected void UpdateStyles ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateStyles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateStyles" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateStyles ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateStyles();" />
      <MemberSignature Language="F#" Value="member this.UpdateStyles : unit -&gt; unit" Usage="control.UpdateStyles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3473">Obliga a que los estilos asignados vuelvan a aplicarse al control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3473">Forces the assigned styles to be reapplied to the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3474">Este método llama a la <xref:System.Windows.Forms.Control.CreateParams%2A> método para obtener los estilos que se va a aplicar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3474">This method calls the <xref:System.Windows.Forms.Control.CreateParams%2A> method to get the styles to apply.</span></span> <span data-ttu-id="c1553-3475">Los estilos asignados a la <xref:System.Windows.Forms.CreateParams.Style%2A> y <xref:System.Windows.Forms.CreateParams.ExStyle%2A> propiedades de la <xref:System.Windows.Forms.CreateParams> asignado al control <xref:System.Windows.Forms.Control.CreateParams%2A> se vuelven a aplicar la propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3475">The styles assigned to the <xref:System.Windows.Forms.CreateParams.Style%2A> and <xref:System.Windows.Forms.CreateParams.ExStyle%2A> properties of the <xref:System.Windows.Forms.CreateParams> assigned to the control's <xref:System.Windows.Forms.Control.CreateParams%2A> property are reapplied.</span></span> <span data-ttu-id="c1553-3476">El control se actualiza para reflejar los cambios de estilo si es necesario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3476">The control is repainted to reflect the style changes if necessary.</span></span>  
  
 <span data-ttu-id="c1553-3477">El <xref:System.Windows.Forms.Control.UpdateStyles%2A> método no tiene ningún efecto si la <xref:System.Windows.Forms.Control.IsHandleCreated%2A> es el valor de propiedad `false`.</span><span class="sxs-lookup"><span data-stu-id="c1553-3477">The <xref:System.Windows.Forms.Control.UpdateStyles%2A> method has no effect if the <xref:System.Windows.Forms.Control.IsHandleCreated%2A> property value is `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3478">En el ejemplo de código siguiente se habilita el búfer doble en un <xref:System.Windows.Forms.Form> y actualiza los estilos para reflejar los cambios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3478">The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.</span></span>  
  
 [!code-cpp[Windows.Forms.ControlMembers6#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CPP/controlmembers6.cpp#3)]
 [!code-csharp[Windows.Forms.ControlMembers6#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/CS/controlmembers6.cs#3)]
 [!code-vb[Windows.Forms.ControlMembers6#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.ControlMembers6/VB/controlmembers6.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="UpdateZOrder">
      <MemberSignature Language="C#" Value="protected void UpdateZOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UpdateZOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.UpdateZOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UpdateZOrder ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UpdateZOrder();" />
      <MemberSignature Language="F#" Value="member this.UpdateZOrder : unit -&gt; unit" Usage="control.UpdateZOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c1553-3479">Actualiza el control en el orden Z de su control primario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3479">Updates the control in its parent's z-order.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3480">El <xref:System.Windows.Forms.Control.UpdateZOrder%2A> método actualiza la posición del control en el orden z de su control principal.</span><span class="sxs-lookup"><span data-stu-id="c1553-3480">The <xref:System.Windows.Forms.Control.UpdateZOrder%2A> method updates the position of the control in its parent control's z-order.</span></span> <span data-ttu-id="c1553-3481">Por ejemplo, si este control es un control recién creado que se agregó a un <xref:System.Windows.Forms.Control.ControlCollection>, el orden z se actualiza con el nuevo control se agrega a la parte trasera.</span><span class="sxs-lookup"><span data-stu-id="c1553-3481">For example, if this control is a newly created control that was added to a <xref:System.Windows.Forms.Control.ControlCollection>, the z-order is updated with the new control added to the back.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Control.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="UseWaitCursor">
      <MemberSignature Language="C#" Value="public bool UseWaitCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWaitCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.UseWaitCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseWaitCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseWaitCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseWaitCursor : bool with get, set" Usage="System.Windows.Forms.Control.UseWaitCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3482">Obtiene o establece un valor que indica si se utiliza el cursor de espera para el control actual y todos los controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3482">Gets or sets a value indicating whether to use the wait cursor for the current control and all child controls.</span></span></summary>
        <value><span data-ttu-id="c1553-3483">Es <see langword="true" /> para usar el cursor de espera para el control actual y todos los controles secundarios; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3483"><see langword="true" /> to use the wait cursor for the current control and all child controls; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1553-3484">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3484">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3485">Utilice un cursor de espera siempre se realiza una operación que tarda bastante tiempo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3485">Use a wait cursor whenever you perform an operation that takes a noticeable amount of time.</span></span> <span data-ttu-id="c1553-3486">Sin embargo, tenga en cuenta que las operaciones que bloquean el subproceso de interfaz de usuario, también se bloquearán un cambio de cursor.</span><span class="sxs-lookup"><span data-stu-id="c1553-3486">However, note that operations that block the UI thread will also block a cursor change.</span></span> <span data-ttu-id="c1553-3487">Por lo tanto, esta propiedad sólo debe usarse al realizar operaciones que requieren mucho tiempo en otro subproceso.</span><span class="sxs-lookup"><span data-stu-id="c1553-3487">Therefore, this property should only be used when performing time-consuming operations in another thread.</span></span> <span data-ttu-id="c1553-3488">Para cambiar el cursor global e inmediatamente, vea el <xref:System.Windows.Forms.Cursor.Current%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c1553-3488">To change the cursor globally and immediately, see the <xref:System.Windows.Forms.Cursor.Current%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validated">
      <MemberSignature Language="C#" Value="public event EventHandler Validated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Validated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Validated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Validated;" />
      <MemberSignature Language="F#" Value="member this.Validated : EventHandler " Usage="member this.Validated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3489">Se produce cuando finaliza la validación del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3489">Occurs when the control is finished validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3490">Al cambiar el foco mediante el teclado (ficha, MAYÚS+TAB etc.), mediante una llamada a la <xref:System.Windows.Forms.Control.Select%2A> o <xref:System.Windows.Forms.Control.SelectNextControl%2A> métodos, o estableciendo la <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propiedad al formulario actual, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-3490">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="c1553-3491">Al cambiar el foco mediante el mouse o mediante una llamada a la <xref:System.Windows.Forms.Control.Focus%2A> método, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-3491">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="c1553-3492">Si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad está establecida en `false`, <xref:System.Windows.Forms.Control.Validating> y <xref:System.Windows.Forms.Control.Validated> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3492">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="c1553-3493">Si el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.ComponentModel.CancelEventArgs> está establecido en `true` en el <xref:System.Windows.Forms.Control.Validating> delegado de eventos, todos los eventos que se producirían generalmente después el <xref:System.Windows.Forms.Control.Validating> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3493">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c1553-3494">No intente establecer el foco desde el <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, o <xref:System.Windows.Forms.Control.Validated> controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3494">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="c1553-3495">Si lo hace, puede provocar la aplicación o el sistema operativo deja de responder.</span><span class="sxs-lookup"><span data-stu-id="c1553-3495">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="c1553-3496">Para obtener más información, consulte el [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx) tema y la sección "Mensaje interbloqueos" de la [acerca de los mensajes y las colas de mensajes](https://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx) tema.</span><span class="sxs-lookup"><span data-stu-id="c1553-3496">For more information, see the [WM_KILLFOCUS](https://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx) topic, and the "Message Deadlocks" section of the [About Messages and Message Queues](https://msdn.microsoft.com/library/windows/desktop/ms644927\(v=vs.85\).aspx) topic.</span></span>  
  
 <span data-ttu-id="c1553-3497">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3497">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3498">En el ejemplo de código siguiente se utiliza la clase derivada <xref:System.Windows.Forms.TextBox> y valida una dirección de correo electrónico que el usuario escribe.</span><span class="sxs-lookup"><span data-stu-id="c1553-3498">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="c1553-3499">Si la dirección de correo electrónico no está en el formato estándar (que contiene "@" and "."), se produce un error en la validación, un <xref:System.Windows.Forms.ErrorProvider> icono se muestra y se cancela el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3499">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="c1553-3500">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> y <xref:System.Windows.Forms.ErrorProvider> se han creado los controles en un formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3500">This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]
 [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]
 [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnValidated(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
        <altmember cref="E:System.Windows.Forms.Control.Validating" />
      </Docs>
    </Member>
    <Member MemberName="Validating">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Validating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Validating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.Validating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Validating As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Validating;" />
      <MemberSignature Language="F#" Value="member this.Validating : System.ComponentModel.CancelEventHandler " Usage="member this.Validating : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3501">Se produce cuando el control se está validando.</span><span class="sxs-lookup"><span data-stu-id="c1553-3501">Occurs when the control is validating.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3502">Al cambiar el foco mediante el teclado (ficha, MAYÚS+TAB etc.), mediante una llamada a la <xref:System.Windows.Forms.Control.Select%2A> o <xref:System.Windows.Forms.Control.SelectNextControl%2A> métodos, o estableciendo la <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> propiedad al formulario actual, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-3502">When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=nameWithType> property to the current form, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.Leave>  
  
4.  <xref:System.Windows.Forms.Control.Validating>  
  
5.  <xref:System.Windows.Forms.Control.Validated>  
  
6.  <xref:System.Windows.Forms.Control.LostFocus>  
  
 <span data-ttu-id="c1553-3503">Al cambiar el foco mediante el mouse o mediante una llamada a la <xref:System.Windows.Forms.Control.Focus%2A> método, se producen eventos de foco en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="c1553-3503">When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:</span></span>  
  
1.  <xref:System.Windows.Forms.Control.Enter>  
  
2.  <xref:System.Windows.Forms.Control.GotFocus>  
  
3.  <xref:System.Windows.Forms.Control.LostFocus>  
  
4.  <xref:System.Windows.Forms.Control.Leave>  
  
5.  <xref:System.Windows.Forms.Control.Validating>  
  
6.  <xref:System.Windows.Forms.Control.Validated>  
  
 <span data-ttu-id="c1553-3504">Si el <xref:System.Windows.Forms.Control.CausesValidation%2A> propiedad está establecida en `false`, <xref:System.Windows.Forms.Control.Validating> y <xref:System.Windows.Forms.Control.Validated> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3504">If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.</span></span>  
  
 <span data-ttu-id="c1553-3505">Si el <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propiedad de la <xref:System.ComponentModel.CancelEventArgs> está establecido en `true` en el <xref:System.Windows.Forms.Control.Validating> delegado de eventos, todos los eventos que se producirían generalmente después el <xref:System.Windows.Forms.Control.Validating> se suprimen eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3505">If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c1553-3506">No intente establecer el foco desde el <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, o <xref:System.Windows.Forms.Control.Validated> controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="c1553-3506">Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers.</span></span> <span data-ttu-id="c1553-3507">Si lo hace, puede provocar la aplicación o el sistema operativo deja de responder.</span><span class="sxs-lookup"><span data-stu-id="c1553-3507">Doing so can cause your application or the operating system to stop responding.</span></span> <span data-ttu-id="c1553-3508">Para obtener más información, consulte el `WM_KILLFOCUS` tema en la sección "Referencia de la entrada de teclado" y la sección "Mensaje interbloqueos" del tema "Acerca de los mensajes y las colas de mensajes" en MSDN library en http://msdn.microsoft.com/library.</span><span class="sxs-lookup"><span data-stu-id="c1553-3508">For more information, see the `WM_KILLFOCUS` topic in the "Keyboard Input Reference" section, and the "Message Deadlocks" section of the "About Messages and Message Queues" topic in the MSDN library at http://msdn.microsoft.com/library.</span></span>  
  
 <span data-ttu-id="c1553-3509">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3509">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3510">En el ejemplo de código siguiente se utiliza la clase derivada <xref:System.Windows.Forms.TextBox> y valida una dirección de correo electrónico que el usuario escribe.</span><span class="sxs-lookup"><span data-stu-id="c1553-3510">The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an email address that the user enters.</span></span> <span data-ttu-id="c1553-3511">Si la dirección de correo electrónico no está en el formato estándar (que contiene "@" and "."), se produce un error en la validación, un <xref:System.Windows.Forms.ErrorProvider> icono se muestra y se cancela el evento.</span><span class="sxs-lookup"><span data-stu-id="c1553-3511">If the email address is not in the standard format (containing "@" and "."), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled.</span></span> <span data-ttu-id="c1553-3512">Este ejemplo requiere que un <xref:System.Windows.Forms.TextBox> y <xref:System.Windows.Forms.ErrorProvider> se han creado los controles en un formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3512">This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.</span></span>  
  
 [!code-cpp[Control.Validating#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.Validating/CPP/validating.cpp#1)]
 [!code-csharp[Control.Validating#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.Validating/CS/validating.cs#1)]
 [!code-vb[Control.Validating#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.Validating/VB/validating.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.CausesValidation" />
        <altmember cref="E:System.Windows.Forms.Control.Validated" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Windows.Forms.Control.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3513">Obtiene o establece un valor que indica si se muestran el control y todos sus controles secundarios.</span><span class="sxs-lookup"><span data-stu-id="c1553-3513">Gets or sets a value indicating whether the control and all its child controls are displayed.</span></span></summary>
        <value><span data-ttu-id="c1553-3514"><see langword="true" /> si se muestran el control y todos sus controles secundarios; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3514"><see langword="true" /> if the control and all its child controls are displayed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="c1553-3515">De manera predeterminada, es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3515">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3516">Tenga en cuenta que incluso si `Visible` está establecido en `true`, el control podría no ser visible para el usuario si se oculta detrás de otros controles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3516">Note that even if `Visible` is set to `true`, the control might not be visible to the user if it is obscured behind other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3517">El ejemplo de código siguiente utiliza las clases derivadas <xref:System.Windows.Forms.VScrollBar> y <xref:System.Windows.Forms.HScrollBar> y establece su <xref:System.Windows.Forms.Control.Visible%2A> valores de propiedad, según el tamaño de un <xref:System.Drawing.Image> que se muestran en un <xref:System.Windows.Forms.PictureBox> control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3517">The following code example uses the derived classes <xref:System.Windows.Forms.VScrollBar> and <xref:System.Windows.Forms.HScrollBar> and sets their <xref:System.Windows.Forms.Control.Visible%2A> property values, based on the size of an <xref:System.Drawing.Image> being displayed in a <xref:System.Windows.Forms.PictureBox> control.</span></span> <span data-ttu-id="c1553-3518">Este ejemplo requiere que un <xref:System.Windows.Forms.PictureBox> se ha creado en un formulario y que <xref:System.Windows.Forms.HScrollBar> y <xref:System.Windows.Forms.VScrollBar> controles se han creado en el <xref:System.Windows.Forms.PictureBox>.</span><span class="sxs-lookup"><span data-stu-id="c1553-3518">This example requires that a <xref:System.Windows.Forms.PictureBox> has been created on a form and that <xref:System.Windows.Forms.HScrollBar> and <xref:System.Windows.Forms.VScrollBar> controls have been created on the <xref:System.Windows.Forms.PictureBox>.</span></span> <span data-ttu-id="c1553-3519">Este código se debe llamar cuando se carga la imagen en el cuadro de imagen y por la <xref:System.Windows.Forms.Control.Resize> evento del formulario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3519">This code should be called when the image is loaded into the picture box and by the <xref:System.Windows.Forms.Control.Resize> event of the form.</span></span>  
  
 [!code-cpp[Classic Control.Visible Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Control.Visible Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Control.Visible Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Control.Visible Example/CS/source.cs#1)]
 [!code-vb[Classic Control.Visible Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Control.Visible Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Enabled" />
        <altmember cref="P:System.Windows.Forms.Control.CanFocus" />
        <altmember cref="M:System.Windows.Forms.Control.Hide" />
        <altmember cref="M:System.Windows.Forms.Control.SetVisibleCore(System.Boolean)" />
        <altmember cref="E:System.Windows.Forms.Control.VisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="VisibleChanged">
      <MemberSignature Language="C#" Value="public event EventHandler VisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler VisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Control.VisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event VisibleChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ VisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.VisibleChanged : EventHandler " Usage="member this.VisibleChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3520">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.Forms.Control.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3520">Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3521">Este evento se desencadena si el <xref:System.Windows.Forms.Control.Visible%2A> propiedad se modifica mediante programación o interacción del usuario.</span><span class="sxs-lookup"><span data-stu-id="c1553-3521">This event is raised if the <xref:System.Windows.Forms.Control.Visible%2A> property is changed by either a programmatic modification or user interaction.</span></span>  
  
 <span data-ttu-id="c1553-3522">Para obtener más información sobre el manejo de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="c1553-3522">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3523">El siguiente código de ejemplo genera el <xref:System.Windows.Forms.Control.VisibleChanged> eventos cuando el <xref:System.Windows.Forms.Control.Visible%2A> valor de propiedad de la <xref:System.Windows.Forms.Label> control ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3523">The following code example raises the <xref:System.Windows.Forms.Control.VisibleChanged> event when the <xref:System.Windows.Forms.Control.Visible%2A> property value of the <xref:System.Windows.Forms.Label> control has changed.</span></span>  
  
 [!code-cpp[Control_VisibleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_VisibleChanged/CPP/control_visiblechanged.cpp#1)]
 [!code-csharp[Control_VisibleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_VisibleChanged/CS/control_visiblechanged.cs#1)]
 [!code-vb[Control_VisibleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_VisibleChanged/VB/control_visiblechanged.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
        <altmember cref="P:System.Windows.Forms.Control.Visible" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Forms.Control.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3524">Obtiene o establece el ancho del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3524">Gets or sets the width of the control.</span></span></summary>
        <value><span data-ttu-id="c1553-3525">Ancho del control, en píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3525">The width of the control in pixels.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3526">Los cambios realizados en el <xref:System.Windows.Forms.Control.Width%2A> y <xref:System.Windows.Forms.Control.Left%2A> causa de los valores de propiedad el <xref:System.Windows.Forms.Control.Right%2A> valor de propiedad del control que se va a cambiar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3526">Changes made to the <xref:System.Windows.Forms.Control.Width%2A> and <xref:System.Windows.Forms.Control.Left%2A> property values cause the <xref:System.Windows.Forms.Control.Right%2A> property value of the control to change.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3527">El ejemplo de código siguiente crea tres <xref:System.Windows.Forms.Button> controles de formularios y establece su tamaño y la ubicación mediante el uso de las diversas propiedades relacionadas con la ubicación y tamaño.</span><span class="sxs-lookup"><span data-stu-id="c1553-3527">The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties.</span></span> <span data-ttu-id="c1553-3528">En este ejemplo requiere que haya un <xref:System.Windows.Forms.Form> que tiene un ancho y alto de al menos 300 píxeles.</span><span class="sxs-lookup"><span data-stu-id="c1553-3528">This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.</span></span>  
  
 [!code-cpp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CPP/controlsizelocation.cpp#1)]
 [!code-csharp[Windows.Forms.Control SizeLocation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/CS/controlsizelocation.cs#1)]
 [!code-vb[Windows.Forms.Control SizeLocation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control SizeLocation/VB/controlsizelocation.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Control.Bounds" />
        <altmember cref="P:System.Windows.Forms.Control.Height" />
        <altmember cref="P:System.Drawing.Size.Width" />
        <altmember cref="M:System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WindowTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.IWindowTarget WindowTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.IWindowTarget WindowTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Control.WindowTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowTarget As IWindowTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::IWindowTarget ^ WindowTarget { System::Windows::Forms::IWindowTarget ^ get(); void set(System::Windows::Forms::IWindowTarget ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowTarget : System.Windows.Forms.IWindowTarget with get, set" Usage="System.Windows.Forms.Control.WindowTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IWindowTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1553-3529">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3529">This property is not relevant for this class.</span></span></summary>
        <value><span data-ttu-id="c1553-3530">El NativeWindow contenido dentro del control.</span><span class="sxs-lookup"><span data-stu-id="c1553-3530">The NativeWindow contained within the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3531">Esta propiedad no es relevante para esta clase.</span><span class="sxs-lookup"><span data-stu-id="c1553-3531">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc :  -&gt; unit&#xA;override this.WndProc :  -&gt; unit" Usage="control.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="c1553-3532"><see cref="T:System.Windows.Forms.Message" /> de Windows que se va a procesar.</span><span class="sxs-lookup"><span data-stu-id="c1553-3532">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span></span></param>
        <summary><span data-ttu-id="c1553-3533">Procesa los mensajes de Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-3533">Processes Windows messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1553-3534">Todos los mensajes se envían a la <xref:System.Windows.Forms.Control.WndProc%2A> método una vez filtrados a través de la <xref:System.Windows.Forms.Control.PreProcessMessage%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c1553-3534">All messages are sent to the <xref:System.Windows.Forms.Control.WndProc%2A> method after getting filtered through the <xref:System.Windows.Forms.Control.PreProcessMessage%2A> method.</span></span>  
  
 <span data-ttu-id="c1553-3535">El método <xref:System.Windows.Forms.Control.WndProc%2A> corresponde exactamente a la función `WindowProc` de Windows.</span><span class="sxs-lookup"><span data-stu-id="c1553-3535">The <xref:System.Windows.Forms.Control.WndProc%2A> method corresponds exactly to the Windows `WindowProc` function.</span></span> <span data-ttu-id="c1553-3536">Para obtener más información acerca de cómo procesar mensajes de Windows, consulte el [función WindowProc](https://go.microsoft.com/fwlink/?LinkId=181565).</span><span class="sxs-lookup"><span data-stu-id="c1553-3536">For more information about processing Windows messages, see the [WindowProc function](https://go.microsoft.com/fwlink/?LinkId=181565).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1553-3537">El ejemplo de código siguiente se muestra cómo reemplazar el <xref:System.Windows.Forms.Control.WndProc%2A> método para controlar los mensajes de sistema operativo identificados en el <xref:System.Windows.Forms.Message> estructura.</span><span class="sxs-lookup"><span data-stu-id="c1553-3537">The following code example demonstrates overriding the <xref:System.Windows.Forms.Control.WndProc%2A> method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure.</span></span> <span data-ttu-id="c1553-3538">El [WM_ACTIVATEAPP](https://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx) se controla el mensaje del sistema operativo en este ejemplo para saber cuando otra aplicación se está convirtiendo en activo.</span><span class="sxs-lookup"><span data-stu-id="c1553-3538">The [WM_ACTIVATEAPP](https://msdn.microsoft.com/library/windows/desktop/ms632614\(v=vs.85\).aspx) operating system message is handled in this example to know when another application is becoming active.</span></span> <span data-ttu-id="c1553-3539">Vea los temas siguientes para entender el disponibles <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, y <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> valores.</span><span class="sxs-lookup"><span data-stu-id="c1553-3539">See the following topics to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> values.</span></span> <span data-ttu-id="c1553-3540">Los valores constantes reales se pueden encontrar en el archivo de encabezado de Windows.h.</span><span class="sxs-lookup"><span data-stu-id="c1553-3540">Actual constant values can be found in the Windows.h header file.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="c1553-3541">para que el llamador inmediato llamar a código no administrado.</span><span class="sxs-lookup"><span data-stu-id="c1553-3541">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="c1553-3542">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="c1553-3542">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
        <block subset="none" type="overrides"><para><span data-ttu-id="c1553-3543">Los controles heredados deben llamar a la clase base <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> método para procesar los mensajes que no controlan.</span><span class="sxs-lookup"><span data-stu-id="c1553-3543">Inheriting controls should call the base class's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> method to process any messages that they do not handle.</span></span></para></block>
        <altmember cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>
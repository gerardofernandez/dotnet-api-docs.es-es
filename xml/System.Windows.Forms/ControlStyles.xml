<Type Name="ControlStyles" FullName="System.Windows.Forms.ControlStyles">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ebf4dc4929c96302bbfb6f71a406bf4afdce55ba" /><Meta Name="ms.sourcegitcommit" Value="101e237579339f500467ba198ec0d3471dec4e4b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/17/2019" /><Meta Name="ms.locfileid" Value="67149866" /></Metadata><TypeSignature Language="C#" Value="public enum ControlStyles" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ControlStyles extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ControlStyles" />
  <TypeSignature Language="VB.NET" Value="Public Enum ControlStyles" />
  <TypeSignature Language="C++ CLI" Value="public enum class ControlStyles" />
  <TypeSignature Language="F#" Value="type ControlStyles = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e6c13-101">Especifica el estilo y comportamiento de un control.</span><span class="sxs-lookup"><span data-stu-id="e6c13-101">Specifies the style and behavior of a control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e6c13-102">Los controles utilizan esta enumeración en diversos métodos y propiedades para especificar la funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="e6c13-102">Controls use this enumeration in various properties and methods to specify functionality.</span></span> <span data-ttu-id="e6c13-103">Un control puede habilitar un estilo mediante una llamada a la <xref:System.Windows.Forms.Control.SetStyle%2A> método y pasando adecuado <xref:System.Windows.Forms.ControlStyles> bits (o bits) y el valor booleano para establecer los bits.</span><span class="sxs-lookup"><span data-stu-id="e6c13-103">A control can enable a style by calling the <xref:System.Windows.Forms.Control.SetStyle%2A> method and passing in the appropriate <xref:System.Windows.Forms.ControlStyles> bit (or bits) and the Boolean value to set the bit(s) to.</span></span> <span data-ttu-id="e6c13-104">Por ejemplo, la siguiente línea de código de Visual Basic permitiría doble búfer.</span><span class="sxs-lookup"><span data-stu-id="e6c13-104">For example, the following line of Visual Basic code would enable double-buffering.</span></span>  
  
```vb
myControl.SetStyle(UserPaint Or AllPaintingInWmPaint Or DoubleBuffer, True)  
```  
  
 <span data-ttu-id="e6c13-105">Si se establece el bit AllPaintingInWmPaint en `true`, el mensaje de ventana WM_ERASEBKGND se omite y ambos <xref:System.Windows.Forms.Control.OnPaintBackground%2A> y <xref:System.Windows.Forms.Control.OnPaint%2A> métodos se invocan directamente desde el mensaje de ventana WM_PAINT.</span><span class="sxs-lookup"><span data-stu-id="e6c13-105">If the AllPaintingInWmPaint bit is set to `true`, the window message WM_ERASEBKGND is ignored, and both <xref:System.Windows.Forms.Control.OnPaintBackground%2A> and <xref:System.Windows.Forms.Control.OnPaint%2A> methods are called directly from the window message WM_PAINT.</span></span> <span data-ttu-id="e6c13-106">Normalmente, esto reduce el parpadeo, a menos que otros controles de envían el mensaje de ventana WM_ERASEBKGND al control.</span><span class="sxs-lookup"><span data-stu-id="e6c13-106">This generally reduces flicker unless other controls send the window message WM_ERASEBKGND to the control.</span></span> <span data-ttu-id="e6c13-107">Puede enviar el mensaje de ventana WM_ERASEBKGRND para lograr un efecto similar a SupportsTransparentBackColor; Por ejemplo, un <xref:System.Windows.Forms.ToolBar> con apariencia plana para ello.</span><span class="sxs-lookup"><span data-stu-id="e6c13-107">You might send the window message WM_ERASEBKGRND to achieve a pseudo-transparent effect similar to SupportsTransparentBackColor; for example, a <xref:System.Windows.Forms.ToolBar> with flat appearance does this.</span></span>  
  
 <span data-ttu-id="e6c13-108">Para habilitar completamente el búfer doble, puede establecer los bits OptimizedDoubleBuffer y AllPaintingInWmPaint en `true`.</span><span class="sxs-lookup"><span data-stu-id="e6c13-108">To fully enable double-buffering, you can set the OptimizedDoubleBuffer and AllPaintingInWmPaint bits to `true`.</span></span> <span data-ttu-id="e6c13-109">Sin embargo es establecer el método preferido para habilitar el almacenamiento en doble búfer, lo que produce el mismo resultado, la <xref:System.Windows.Forms.Control.DoubleBuffered%2A> propiedad para que el control `true`.</span><span class="sxs-lookup"><span data-stu-id="e6c13-109">However the preferred method for enabling double buffering, which yields the same result, is to set the <xref:System.Windows.Forms.Control.DoubleBuffered%2A> property for the control to `true`.</span></span>  
  
 <span data-ttu-id="e6c13-110">Si se establece el bit SupportsTransparentBackColor en `true`y el <xref:System.Windows.Forms.Control.BackColor%2A> está establecido en un color cuyo componente alfa es menor que 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> simulará la transparencia pidiendo al control primario para pintar el fondo.</span><span class="sxs-lookup"><span data-stu-id="e6c13-110">If the SupportsTransparentBackColor bit is set to `true`, and the <xref:System.Windows.Forms.Control.BackColor%2A> is set to a color whose alpha component is less than 255, <xref:System.Windows.Forms.Control.OnPaintBackground%2A> will simulate transparency by asking its parent control to paint the background.</span></span> <span data-ttu-id="e6c13-111">Esto no es una transparencia real.</span><span class="sxs-lookup"><span data-stu-id="e6c13-111">This is not true transparency.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e6c13-112">Si hay otro control entre el control y su elemento primario, el control actual no mostrará el control en el medio.</span><span class="sxs-lookup"><span data-stu-id="e6c13-112">If there is another control between the control and its parent, the current control will not show the control in the middle.</span></span>  
  
 <span data-ttu-id="e6c13-113">Cuando se establece el bit UserMouse en `true`, se sigue llamando a los métodos siguientes: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, y <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e6c13-113">When the UserMouse bit is set to `true`, the following methods are still called: <xref:System.Windows.Forms.Control.OnMouseDown%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseUp%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseEnter%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseMove%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseHover%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.OnMouseLeave%2A?displayProperty=nameWithType>, and <xref:System.Windows.Forms.Control.OnMouseWheel%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="e6c13-114">Cuando se selecciona el control, si se establece el bit StandardClick en `true` el <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> se llama al método y genera el <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="e6c13-114">When the control is clicked, if the StandardClick bit is set to `true` the <xref:System.Windows.Forms.Control.OnClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="e6c13-115">Cuando se hace doble clic en el control y el StandardClick y StandardDoubleClick bits se establecen en `true`, haga clic en que se pasa a la <xref:System.Windows.Forms.Control.DoubleClick> eventos.</span><span class="sxs-lookup"><span data-stu-id="e6c13-115">When the control is double-clicked, and both the StandardClick and StandardDoubleClick bits are set to `true`, the click is passed on to the <xref:System.Windows.Forms.Control.DoubleClick> event.</span></span> <span data-ttu-id="e6c13-116">El <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> se llama al método y genera el <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="e6c13-116">Then the <xref:System.Windows.Forms.Control.OnDoubleClick%2A?displayProperty=nameWithType> method is called and it raises the <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="e6c13-117">Sin embargo, el control puede llamar a <xref:System.Windows.Forms.Control.OnClick%2A> o <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directamente sin tener en cuenta la StandardClick y StandardDoubleClick valores de bit.</span><span class="sxs-lookup"><span data-stu-id="e6c13-117">However, the control can call <xref:System.Windows.Forms.Control.OnClick%2A> or <xref:System.Windows.Forms.Control.OnDoubleClick%2A> directly regardless of the StandardClick and StandardDoubleClick bit values.</span></span> <span data-ttu-id="e6c13-118">Para obtener más información sobre el control, haga clic en y haga doble clic en los comportamientos, consulte el <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> y <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> temas.</span><span class="sxs-lookup"><span data-stu-id="e6c13-118">For more information on control click and double click behaviors, see the <xref:System.Windows.Forms.Control.Click?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.DoubleClick?displayProperty=nameWithType> topics.</span></span>  
  
 <span data-ttu-id="e6c13-119">Cuando se establece el bit UseTextForAccessibility y hay un valor en el control `Text` propiedad, el valor de ese control `Text` propiedad determina Active Accessibility nombre y el método abreviado de teclado predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="e6c13-119">When the UseTextForAccessibility bit is set and there is a value in the control's `Text` property, the value of that control's `Text` property determines the control's default Active Accessibility name and shortcut key.</span></span> <span data-ttu-id="e6c13-120">En caso contrario, el texto de los anteriores <xref:System.Windows.Forms.Label> control se usará en su lugar.</span><span class="sxs-lookup"><span data-stu-id="e6c13-120">Otherwise, the text of the preceding <xref:System.Windows.Forms.Label> control will be used instead.</span></span> <span data-ttu-id="e6c13-121">Este estilo se establece de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="e6c13-121">This style is set by default.</span></span> <span data-ttu-id="e6c13-122">Tipos de algunos controles integrados, como <xref:System.Windows.Forms.TextBox> y <xref:System.Windows.Forms.ComboBox>, restablecer este estilo para que el `Text` Active Accessibility no usará la propiedad de esos controles.</span><span class="sxs-lookup"><span data-stu-id="e6c13-122">Certain built-in control types, such as <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ComboBox>, reset this style so that the `Text` property of those controls will not be used by Active Accessibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e6c13-123">En el ejemplo siguiente se muestra un uso de <xref:System.Windows.Forms.ControlStyles> con el <xref:System.Windows.Forms.Control.StyleChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="e6c13-123">The following example demonstrates a use of <xref:System.Windows.Forms.ControlStyles> with the <xref:System.Windows.Forms.Control.StyleChanged> event.</span></span>  
  
 [!code-cpp[Control_StyleChanged#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control_StyleChanged/CPP/control_stylechanged.cpp#1)]
 [!code-csharp[Control_StyleChanged#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control_StyleChanged/CS/control_stylechanged.cs#1)]
 [!code-vb[Control_StyleChanged#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control_StyleChanged/VB/control_stylechanged.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="e6c13-124">Heredar de un control de Windows Forms estándar y cambiar el <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> o <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit de valores a <see langword="true" /> puede provocar un comportamiento inesperado o no puede tener ningún efecto en absoluto si el control no admite la <see cref="E:System.Windows.Forms.Control.Click" /> o <see cref="E:System.Windows.Forms.Control.DoubleClick" /> eventos.</span><span class="sxs-lookup"><span data-stu-id="e6c13-124">Inheriting from a standard Windows Forms control and changing the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> or <see cref="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" /> bit values to <see langword="true" /> can cause unexpected behavior or can have no effect at all if the control does not support the <see cref="E:System.Windows.Forms.Control.Click" /> or <see cref="E:System.Windows.Forms.Control.DoubleClick" /> events.</span></span></para></block>
    <altmember cref="M:System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)" />
    <altmember cref="M:System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)" />
  </Docs>
  <Members>
    <Member MemberName="AllPaintingInWmPaint">
      <MemberSignature Language="C#" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles AllPaintingInWmPaint = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberSignature Language="VB.NET" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="C++ CLI" Value="AllPaintingInWmPaint" />
      <MemberSignature Language="F#" Value="AllPaintingInWmPaint = 8192" Usage="System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-125">Si <see langword="true" />, el control ignora el mensaje de ventana WM_ERASEBKGND para reducir el parpadeo.</span><span class="sxs-lookup"><span data-stu-id="e6c13-125">If <see langword="true" />, the control ignores the window message WM_ERASEBKGND to reduce flicker.</span></span> <span data-ttu-id="e6c13-126">Este estilo solo debe aplicarse si el bit <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> se establece en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-126">This style should only be applied if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="CacheText">
      <MemberSignature Language="C#" Value="CacheText" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles CacheText = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.CacheText" />
      <MemberSignature Language="VB.NET" Value="CacheText" />
      <MemberSignature Language="C++ CLI" Value="CacheText" />
      <MemberSignature Language="F#" Value="CacheText = 16384" Usage="System.Windows.Forms.ControlStyles.CacheText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-127">Si <see langword="true" />, el control mantiene una copia del texto en lugar de obtenerlo desde <see cref="P:System.Windows.Forms.Control.Handle" /> cada vez que se necesita.</span><span class="sxs-lookup"><span data-stu-id="e6c13-127">If <see langword="true" />, the control keeps a copy of the text rather than getting it from the <see cref="P:System.Windows.Forms.Control.Handle" /> each time it is needed.</span></span> <span data-ttu-id="e6c13-128">El valor predeterminado de este estilo es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-128">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="e6c13-129">Este comportamiento mejora el rendimiento, pero es difícil mantener el texto sincronizado.</span><span class="sxs-lookup"><span data-stu-id="e6c13-129">This behavior improves performance, but makes it difficult to keep the text synchronized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ContainerControl">
      <MemberSignature Language="C#" Value="ContainerControl" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ContainerControl = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberSignature Language="VB.NET" Value="ContainerControl" />
      <MemberSignature Language="C++ CLI" Value="ContainerControl" />
      <MemberSignature Language="F#" Value="ContainerControl = 1" Usage="System.Windows.Forms.ControlStyles.ContainerControl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-130">Si <see langword="true" />, el control es un control similar a un contenedor.</span><span class="sxs-lookup"><span data-stu-id="e6c13-130">If <see langword="true" />, the control is a container-like control.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DoubleBuffer">
      <MemberSignature Language="C#" Value="DoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles DoubleBuffer = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="DoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="DoubleBuffer" />
      <MemberSignature Language="F#" Value="DoubleBuffer = 65536" Usage="System.Windows.Forms.ControlStyles.DoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-131">Si <see langword="true" />, se realiza el dibujo en un búfer y, después de que finalice, el resultado aparece en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="e6c13-131">If <see langword="true" />, drawing is performed in a buffer, and after it completes, the result is output to the screen.</span></span> <span data-ttu-id="e6c13-132">El doble búfer evita que se produzca un parpadeo como consecuencia de volver a dibujar el control.</span><span class="sxs-lookup"><span data-stu-id="e6c13-132">Double-buffering prevents flicker caused by the redrawing of the control.</span></span> <span data-ttu-id="e6c13-133">Si establece <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> en <see langword="true" />, también debe establecer <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> y <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-133">If you set <see cref="F:System.Windows.Forms.ControlStyles.DoubleBuffer" /> to <see langword="true" />, you should also set <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> and <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="EnableNotifyMessage">
      <MemberSignature Language="C#" Value="EnableNotifyMessage" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles EnableNotifyMessage = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberSignature Language="VB.NET" Value="EnableNotifyMessage" />
      <MemberSignature Language="C++ CLI" Value="EnableNotifyMessage" />
      <MemberSignature Language="F#" Value="EnableNotifyMessage = 32768" Usage="System.Windows.Forms.ControlStyles.EnableNotifyMessage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-134">Si <see langword="true" />, se llama al método <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> para cada mensaje enviado al <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" /> del control.</span><span class="sxs-lookup"><span data-stu-id="e6c13-134">If <see langword="true" />, the <see cref="M:System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)" /> method is called for every message sent to the control's <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</span></span> <span data-ttu-id="e6c13-135">El valor predeterminado de este estilo es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-135">This style defaults to <see langword="false" />.</span></span> <span data-ttu-id="e6c13-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> no funciona en confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="e6c13-136"><see cref="F:System.Windows.Forms.ControlStyles.EnableNotifyMessage" /> does not work in partial trust.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedHeight">
      <MemberSignature Language="C#" Value="FixedHeight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedHeight = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberSignature Language="VB.NET" Value="FixedHeight" />
      <MemberSignature Language="C++ CLI" Value="FixedHeight" />
      <MemberSignature Language="F#" Value="FixedHeight = 64" Usage="System.Windows.Forms.ControlStyles.FixedHeight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-137">Si <see langword="true" />, el control tiene un alto fijo cuando se ajusta la escala automática.</span><span class="sxs-lookup"><span data-stu-id="e6c13-137">If <see langword="true" />, the control has a fixed height when auto-scaled.</span></span> <span data-ttu-id="e6c13-138">Por ejemplo, si una operación de diseño intercambia la escala del control para dar cabida a un nuevo <see cref="T:System.Drawing.Font" />, el <see cref="P:System.Windows.Forms.Control.Height" /> del control permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="e6c13-138">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Height" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FixedWidth">
      <MemberSignature Language="C#" Value="FixedWidth" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles FixedWidth = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberSignature Language="VB.NET" Value="FixedWidth" />
      <MemberSignature Language="C++ CLI" Value="FixedWidth" />
      <MemberSignature Language="F#" Value="FixedWidth = 32" Usage="System.Windows.Forms.ControlStyles.FixedWidth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-139">Si <see langword="true" />, el control tiene un ancho fijo cuando se ajusta la escala automática.</span><span class="sxs-lookup"><span data-stu-id="e6c13-139">If <see langword="true" />, the control has a fixed width when auto-scaled.</span></span> <span data-ttu-id="e6c13-140">Por ejemplo, si una operación de diseño intercambia la escala del control para dar cabida a un nuevo <see cref="T:System.Drawing.Font" />, el <see cref="P:System.Windows.Forms.Control.Width" /> del control permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="e6c13-140">For example, if a layout operation attempts to rescale the control to accommodate a new <see cref="T:System.Drawing.Font" />, the control's <see cref="P:System.Windows.Forms.Control.Width" /> remains unchanged.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="C#" Value="Opaque" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Opaque = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Opaque" />
      <MemberSignature Language="VB.NET" Value="Opaque" />
      <MemberSignature Language="C++ CLI" Value="Opaque" />
      <MemberSignature Language="F#" Value="Opaque = 4" Usage="System.Windows.Forms.ControlStyles.Opaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-141">Si <see langword="true" />, el control se dibuja opaco y no se pinta el fondo.</span><span class="sxs-lookup"><span data-stu-id="e6c13-141">If <see langword="true" />, the control is drawn opaque and the background is not painted.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OptimizedDoubleBuffer">
      <MemberSignature Language="C#" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles OptimizedDoubleBuffer = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberSignature Language="VB.NET" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="C++ CLI" Value="OptimizedDoubleBuffer" />
      <MemberSignature Language="F#" Value="OptimizedDoubleBuffer = 131072" Usage="System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-142">Si <see langword="true" />, el control se dibuja primero en un búfer, en lugar de directamente en la pantalla, lo que puede reducir el parpadeo.</span><span class="sxs-lookup"><span data-stu-id="e6c13-142">If <see langword="true" />, the control is first drawn to a buffer rather than directly to the screen, which can reduce flicker.</span></span> <span data-ttu-id="e6c13-143">Si establece esta propiedad en <see langword="true" />, también debe establecer <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-143">If you set this property to <see langword="true" />, you should also set the <see cref="F:System.Windows.Forms.ControlStyles.AllPaintingInWmPaint" /> to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ResizeRedraw">
      <MemberSignature Language="C#" Value="ResizeRedraw" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles ResizeRedraw = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberSignature Language="VB.NET" Value="ResizeRedraw" />
      <MemberSignature Language="C++ CLI" Value="ResizeRedraw" />
      <MemberSignature Language="F#" Value="ResizeRedraw = 16" Usage="System.Windows.Forms.ControlStyles.ResizeRedraw" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-144">Si <see langword="true" />, el control se vuelve a dibujar cuando se cambia el tamaño.</span><span class="sxs-lookup"><span data-stu-id="e6c13-144">If <see langword="true" />, the control is redrawn when it is resized.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Selectable">
      <MemberSignature Language="C#" Value="Selectable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles Selectable = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.Selectable" />
      <MemberSignature Language="VB.NET" Value="Selectable" />
      <MemberSignature Language="C++ CLI" Value="Selectable" />
      <MemberSignature Language="F#" Value="Selectable = 512" Usage="System.Windows.Forms.ControlStyles.Selectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-145">Si <see langword="true" />, el control puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="e6c13-145">If <see langword="true" />, the control can receive focus.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardClick">
      <MemberSignature Language="C#" Value="StandardClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardClick = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberSignature Language="VB.NET" Value="StandardClick" />
      <MemberSignature Language="C++ CLI" Value="StandardClick" />
      <MemberSignature Language="F#" Value="StandardClick = 256" Usage="System.Windows.Forms.ControlStyles.StandardClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-146">Si <see langword="true" />, el control implementa el comportamiento <see cref="E:System.Windows.Forms.Control.Click" /> estándar.</span><span class="sxs-lookup"><span data-stu-id="e6c13-146">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.Click" /> behavior.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="StandardDoubleClick">
      <MemberSignature Language="C#" Value="StandardDoubleClick" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles StandardDoubleClick = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberSignature Language="VB.NET" Value="StandardDoubleClick" />
      <MemberSignature Language="C++ CLI" Value="StandardDoubleClick" />
      <MemberSignature Language="F#" Value="StandardDoubleClick = 4096" Usage="System.Windows.Forms.ControlStyles.StandardDoubleClick" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-147">Si <see langword="true" />, el control implementa el comportamiento <see cref="E:System.Windows.Forms.Control.DoubleClick" /> estándar.</span><span class="sxs-lookup"><span data-stu-id="e6c13-147">If <see langword="true" />, the control implements the standard <see cref="E:System.Windows.Forms.Control.DoubleClick" /> behavior.</span></span> <span data-ttu-id="e6c13-148">Este estilo se omite si el bit <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> no está establecido en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-148">This style is ignored if the <see cref="F:System.Windows.Forms.ControlStyles.StandardClick" /> bit is not set to <see langword="true" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SupportsTransparentBackColor">
      <MemberSignature Language="C#" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles SupportsTransparentBackColor = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberSignature Language="VB.NET" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="C++ CLI" Value="SupportsTransparentBackColor" />
      <MemberSignature Language="F#" Value="SupportsTransparentBackColor = 2048" Usage="System.Windows.Forms.ControlStyles.SupportsTransparentBackColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-149">Si <see langword="true" />, el control acepta un <see cref="P:System.Windows.Forms.Control.BackColor" /> con un componente alfa menor de 255 para simular una transparencia.</span><span class="sxs-lookup"><span data-stu-id="e6c13-149">If <see langword="true" />, the control accepts a <see cref="P:System.Windows.Forms.Control.BackColor" /> with an alpha component of less than 255 to simulate transparency.</span></span> <span data-ttu-id="e6c13-150">La transparencia solo se simulará si el bit <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> se establece en <see langword="true" /> y el control primario deriva de <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-150">Transparency will be simulated only if the <see cref="F:System.Windows.Forms.ControlStyles.UserPaint" /> bit is set to <see langword="true" /> and the parent control is derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserMouse">
      <MemberSignature Language="C#" Value="UserMouse" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserMouse = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberSignature Language="VB.NET" Value="UserMouse" />
      <MemberSignature Language="C++ CLI" Value="UserMouse" />
      <MemberSignature Language="F#" Value="UserMouse = 1024" Usage="System.Windows.Forms.ControlStyles.UserMouse" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-151">Si <see langword="true" />, el control realiza su propio procesamiento de mouse y el sistema operativo no controla los eventos de mouse.</span><span class="sxs-lookup"><span data-stu-id="e6c13-151">If <see langword="true" />, the control does its own mouse processing, and mouse events are not handled by the operating system.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserPaint">
      <MemberSignature Language="C#" Value="UserPaint" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UserPaint = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberSignature Language="VB.NET" Value="UserPaint" />
      <MemberSignature Language="C++ CLI" Value="UserPaint" />
      <MemberSignature Language="F#" Value="UserPaint = 2" Usage="System.Windows.Forms.ControlStyles.UserPaint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-152">Si <see langword="true" />, el control es el que dibuja en vez de hacerlo el sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="e6c13-152">If <see langword="true" />, the control paints itself rather than the operating system doing so.</span></span> <span data-ttu-id="e6c13-153">Si es <see langword="false" />, no se provoca el evento <see cref="E:System.Windows.Forms.Control.Paint" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-153">If <see langword="false" />, the <see cref="E:System.Windows.Forms.Control.Paint" /> event is not raised.</span></span> <span data-ttu-id="e6c13-154">Este estilo solo se aplica a las clases derivadas de <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="e6c13-154">This style only applies to classes derived from <see cref="T:System.Windows.Forms.Control" />.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UseTextForAccessibility">
      <MemberSignature Language="C#" Value="UseTextForAccessibility" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.ControlStyles UseTextForAccessibility = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberSignature Language="VB.NET" Value="UseTextForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="UseTextForAccessibility" />
      <MemberSignature Language="F#" Value="UseTextForAccessibility = 262144" Usage="System.Windows.Forms.ControlStyles.UseTextForAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ControlStyles</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="e6c13-155">Especifica que el valor de la propiedad <c>Text</c> del control, si se ha establecido, determina el nombre de Active Accessibility y el método abreviado de teclado predeterminado del control.</span><span class="sxs-lookup"><span data-stu-id="e6c13-155">Specifies that the value of the control's <c>Text</c> property, if set, determines the control's default Active Accessibility name and shortcut key.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>

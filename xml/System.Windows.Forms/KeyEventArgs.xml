<Type Name="KeyEventArgs" FullName="System.Windows.Forms.KeyEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1be119e083a16f9c3ecd5d90463e590ed44a3df4" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48668796" /></Metadata><TypeSignature Language="C#" Value="public class KeyEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="86071-101">Proporciona datos para el evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="86071-101">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86071-102">Un <xref:System.Windows.Forms.KeyEventArgs>, que especifica la clave que el usuario presionó y se pasa si las teclas modificadoras (MAYÚS, ALT y CTRL) se presionaron al mismo tiempo, con cada <xref:System.Windows.Forms.Control.KeyDown> o <xref:System.Windows.Forms.Control.KeyUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="86071-102">A <xref:System.Windows.Forms.KeyEventArgs>, which specifies the key the user pressed and whether any modifier keys (CTRL, ALT, and SHIFT) were pressed at the same time, is passed with each <xref:System.Windows.Forms.Control.KeyDown> or <xref:System.Windows.Forms.Control.KeyUp> event.</span></span>  
  
 <span data-ttu-id="86071-103">El <xref:System.Windows.Forms.Control.KeyDown> evento tiene lugar cuando el usuario presiona una tecla.</span><span class="sxs-lookup"><span data-stu-id="86071-103">The <xref:System.Windows.Forms.Control.KeyDown> event occurs when the user presses any key.</span></span> <span data-ttu-id="86071-104">El <xref:System.Windows.Forms.Control.KeyUp> evento tiene lugar cuando el usuario suelta la tecla.</span><span class="sxs-lookup"><span data-stu-id="86071-104">The <xref:System.Windows.Forms.Control.KeyUp> event occurs when the user releases the key.</span></span> <span data-ttu-id="86071-105">Duplicar <xref:System.Windows.Forms.Control.KeyDown> se producen eventos cada vez que se repite la clave, si la clave se mantiene presionada, pero solo un <xref:System.Windows.Forms.Control.KeyUp> evento se genera cuando el usuario suelta la tecla.</span><span class="sxs-lookup"><span data-stu-id="86071-105">Duplicate <xref:System.Windows.Forms.Control.KeyDown> events occur each time the key repeats, if the key is held down, but only one <xref:System.Windows.Forms.Control.KeyUp> event is generated when the user releases the key.</span></span>  
  
 <span data-ttu-id="86071-106">El <xref:System.Windows.Forms.Control.KeyPress> evento también se produce cuando se presiona una tecla.</span><span class="sxs-lookup"><span data-stu-id="86071-106">The <xref:System.Windows.Forms.Control.KeyPress> event also occurs when a key is pressed.</span></span> <span data-ttu-id="86071-107">Un <xref:System.Windows.Forms.KeyPressEventArgs> se pasa con cada <xref:System.Windows.Forms.Control.KeyPress> evento y especifica el carácter que se componía como resultado de cada pulsación de tecla.</span><span class="sxs-lookup"><span data-stu-id="86071-107">A <xref:System.Windows.Forms.KeyPressEventArgs> is passed with each <xref:System.Windows.Forms.Control.KeyPress> event, and specifies the character that was composed as a result of each key press.</span></span>  
  
 <span data-ttu-id="86071-108">Para obtener información sobre el modelo de eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="86071-108">For information about the event model, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86071-109">Ejemplos de código siguientes muestran cómo detectar el estado de presionar una tecla.</span><span class="sxs-lookup"><span data-stu-id="86071-109">The following code examples demonstrate how to detect the state of a key press.</span></span>  
  
 <span data-ttu-id="86071-110">**Ejemplo 1**</span><span class="sxs-lookup"><span data-stu-id="86071-110">**Example 1**</span></span>  
  
 <span data-ttu-id="86071-111">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.KeyDown> evento con el <xref:System.Windows.Forms.Help> clase para mostrar ayuda al usuario de la aplicación de estilo emergente.</span><span class="sxs-lookup"><span data-stu-id="86071-111">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="86071-112">El ejemplo se usa el <xref:System.Windows.Forms.KeyEventArgs> las propiedades que se pasan al método de controlador de eventos para filtrar todas las variaciones de presionar la tecla F1 con una tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="86071-112">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="86071-113">Cuando el usuario presiona cualquier variación de F1 que incluye cualquier modificador de teclado, el <xref:System.Windows.Forms.Help> clase muestra una ventana emergente, similar a un <xref:System.Windows.Forms.ToolTip>, cerca del control.</span><span class="sxs-lookup"><span data-stu-id="86071-113">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="86071-114">Si el usuario presiona ALT + F2, se muestra una ventana emergente de ayuda diferente con información adicional.</span><span class="sxs-lookup"><span data-stu-id="86071-114">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="86071-115">**Ejemplo 2**</span><span class="sxs-lookup"><span data-stu-id="86071-115">**Example 2**</span></span>  
  
 <span data-ttu-id="86071-116">El ejemplo siguiente determina si el usuario presionó ALT+E y, si el puntero del mouse está sobre un <xref:System.Windows.Forms.TreeNode>, permite al usuario editar que <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="86071-116">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="86071-117">**Ejemplo 3**</span><span class="sxs-lookup"><span data-stu-id="86071-117">**Example 3**</span></span>  
  
 <span data-ttu-id="86071-118">El ejemplo siguiente determina si el usuario presionó una tecla no numérico y si es así, se cancela el <xref:System.Windows.Forms.Control.KeyPress> eventos mediante el uso de la <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="86071-118">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Forms.Keys keyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Forms.Keys keyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyEventArgs.#ctor(System.Windows.Forms.Keys)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyData As Keys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Forms::Keys keyData);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyEventArgs : System.Windows.Forms.Keys -&gt; System.Windows.Forms.KeyEventArgs" Usage="new System.Windows.Forms.KeyEventArgs keyData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
      </Parameters>
      <Docs>
        <param name="keyData"><span data-ttu-id="86071-119">Un valor <see cref="T:System.Windows.Forms.Keys" /> que representa la tecla que se presionó, combinada con cualquier marcador modificador que indique qué teclas CTRL, MAYÚS y ALT se presionaron al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="86071-119">A <see cref="T:System.Windows.Forms.Keys" /> representing the key that was pressed, combined with any modifier flags that indicate which CTRL, SHIFT, and ALT keys were pressed at the same time.</span></span> <span data-ttu-id="86071-120">Los valores posibles se obtienen aplicando el operador (|) de la operación OR bit a bit a constantes de la enumeración <see cref="T:System.Windows.Forms.Keys" />.</span><span class="sxs-lookup"><span data-stu-id="86071-120">Possible values are obtained be applying the bitwise OR (|) operator to constants from the <see cref="T:System.Windows.Forms.Keys" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="86071-121">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Forms.KeyEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="86071-121">Initializes a new instance of the <see cref="T:System.Windows.Forms.KeyEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.KeyPressEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Alt">
      <MemberSignature Language="C#" Value="public virtual bool Alt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Alt" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Alt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Alt { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Alt : bool" Usage="System.Windows.Forms.KeyEventArgs.Alt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-122">Obtiene un valor que indica si se presionó la tecla ALT.</span><span class="sxs-lookup"><span data-stu-id="86071-122">Gets a value indicating whether the ALT key was pressed.</span></span></summary>
        <value><span data-ttu-id="86071-123"><see langword="true" /> si se presionó la tecla ALT; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86071-123"><see langword="true" /> if the ALT key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86071-124">**Ejemplo 1**</span><span class="sxs-lookup"><span data-stu-id="86071-124">**Example 1**</span></span>  
  
 <span data-ttu-id="86071-125">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.KeyDown> evento con el <xref:System.Windows.Forms.Help> clase para mostrar ayuda al usuario de la aplicación de estilo emergente.</span><span class="sxs-lookup"><span data-stu-id="86071-125">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="86071-126">El ejemplo se usa el <xref:System.Windows.Forms.KeyEventArgs> las propiedades que se pasan al método de controlador de eventos para filtrar todas las variaciones de presionar la tecla F1 con una tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="86071-126">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="86071-127">Cuando el usuario presiona cualquier variación de F1 que incluye cualquier modificador de teclado, el <xref:System.Windows.Forms.Help> clase muestra una ventana emergente, similar a un <xref:System.Windows.Forms.ToolTip>, cerca del control.</span><span class="sxs-lookup"><span data-stu-id="86071-127">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="86071-128">Si el usuario presiona ALT + F2, se muestra una ventana emergente de ayuda diferente con información adicional.</span><span class="sxs-lookup"><span data-stu-id="86071-128">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="86071-129">**Ejemplo 2**</span><span class="sxs-lookup"><span data-stu-id="86071-129">**Example 2**</span></span>  
  
 <span data-ttu-id="86071-130">El ejemplo siguiente determina si el usuario presionó ALT+E y, si el puntero del mouse está sobre <xref:System.Windows.Forms.TreeNode>, permite al usuario editar que <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="86071-130">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public bool Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Control" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Control As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Control { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Control : bool" Usage="System.Windows.Forms.KeyEventArgs.Control" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-131">Obtiene un valor que indica si se presionó la tecla CTRL.</span><span class="sxs-lookup"><span data-stu-id="86071-131">Gets a value indicating whether the CTRL key was pressed.</span></span></summary>
        <value><span data-ttu-id="86071-132"><see langword="true" /> si se presionó la tecla CTRL; en caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86071-132"><see langword="true" /> if the CTRL key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86071-133">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.KeyDown> evento con el <xref:System.Windows.Forms.Help> clase para mostrar ayuda al usuario de la aplicación de estilo emergente.</span><span class="sxs-lookup"><span data-stu-id="86071-133">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="86071-134">El ejemplo se usa el <xref:System.Windows.Forms.KeyEventArgs> las propiedades que se pasan al método de controlador de eventos para filtrar todas las variaciones de presionar la tecla F1 con una tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="86071-134">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="86071-135">Cuando el usuario presiona cualquier variación de F1 que incluye cualquier modificador de teclado, el <xref:System.Windows.Forms.Help> clase muestra una ventana emergente, similar a un <xref:System.Windows.Forms.ToolTip>, cerca del control.</span><span class="sxs-lookup"><span data-stu-id="86071-135">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="86071-136">Si el usuario presiona ALT + F2, se muestra una ventana emergente de ayuda diferente con información adicional.</span><span class="sxs-lookup"><span data-stu-id="86071-136">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-137">Obtiene o establece un valor que indica si se controló el evento.</span><span class="sxs-lookup"><span data-stu-id="86071-137">Gets or sets a value indicating whether the event was handled.</span></span></summary>
        <value><span data-ttu-id="86071-138"><see langword="true" /> para omitir el control predeterminado del control; de lo contrario, <see langword="false" /> para pasar también el evento por el controlador de control predeterminado.</span><span class="sxs-lookup"><span data-stu-id="86071-138"><see langword="true" /> to bypass the control's default handling; otherwise, <see langword="false" /> to also pass the event along to the default control handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86071-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> se implementa de manera diferente por los distintos controles en formularios de Windows.</span><span class="sxs-lookup"><span data-stu-id="86071-139"><xref:System.Windows.Forms.KeyEventArgs.Handled%2A> is implemented differently by different controls within Windows Forms.</span></span> <span data-ttu-id="86071-140">Para controles como <xref:System.Windows.Forms.TextBox> que son subclase los controles de Win32 nativo, se interpreta de forma que no se debe pasar el mensaje de tecla al control nativo subyacente.</span><span class="sxs-lookup"><span data-stu-id="86071-140">For controls like <xref:System.Windows.Forms.TextBox> which subclass native Win32 controls, it is interpreted to mean that the key message should not be passed to the underlying native control.</span></span> <span data-ttu-id="86071-141">Si establece `Handled` en true en un <xref:System.Windows.Forms.TextBox>, que el control no pasará la pulsación de tecla `events` para el control de cuadro de texto de Win32 subyacente, pero se seguirá mostrando los caracteres escrito por el usuario.</span><span class="sxs-lookup"><span data-stu-id="86071-141">If you set `Handled` to true on a <xref:System.Windows.Forms.TextBox>, that control will not pass the key press `events` to the underlying Win32 text box control, but it will still display the characters that the user typed.</span></span>  
  
 <span data-ttu-id="86071-142">Si desea evitar que el control actual reciba una pulsación de tecla, use el <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="86071-142">If you want to prevent the current control from receiving a key press, use the <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86071-143">El ejemplo siguiente determina si el usuario presionó una tecla no numérico y si es así, se cancela el <xref:System.Windows.Forms.Control.KeyPress> eventos mediante el uso de la <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="86071-143">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyCode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyCode As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyCode { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyCode : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-144">Obtiene el código de teclado para un evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="86071-144">Gets the keyboard code for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="86071-145">Un valor <see cref="T:System.Windows.Forms.Keys" /> que es el código de tecla para el evento.</span><span class="sxs-lookup"><span data-stu-id="86071-145">A <see cref="T:System.Windows.Forms.Keys" /> value that is the key code for the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86071-146">Ejemplos de código siguientes muestran cómo usar el <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> propiedad para determinar qué tecla se presionó.</span><span class="sxs-lookup"><span data-stu-id="86071-146">The following code examples show how to use the <xref:System.Windows.Forms.KeyEventArgs.KeyCode%2A> property to determine which key was pressed.</span></span>  
  
 <span data-ttu-id="86071-147">**Ejemplo 1**</span><span class="sxs-lookup"><span data-stu-id="86071-147">**Example 1**</span></span>  
  
 <span data-ttu-id="86071-148">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Windows.Forms.Control.KeyDown> evento con el <xref:System.Windows.Forms.Help> clase para mostrar ayuda al usuario de la aplicación de estilo emergente.</span><span class="sxs-lookup"><span data-stu-id="86071-148">The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.KeyDown> event with the <xref:System.Windows.Forms.Help> class to display pop-up style Help to the user of the application.</span></span> <span data-ttu-id="86071-149">El ejemplo se usa el <xref:System.Windows.Forms.KeyEventArgs> las propiedades que se pasan al método de controlador de eventos para filtrar todas las variaciones de presionar la tecla F1 con una tecla modificadora.</span><span class="sxs-lookup"><span data-stu-id="86071-149">The example uses the <xref:System.Windows.Forms.KeyEventArgs> properties passed to the event handler method to filter for all variations of pressing the F1 key with a modifier key.</span></span> <span data-ttu-id="86071-150">Cuando el usuario presiona cualquier variación de F1 que incluye cualquier modificador de teclado, el <xref:System.Windows.Forms.Help> clase muestra una ventana emergente, similar a un <xref:System.Windows.Forms.ToolTip>, cerca del control.</span><span class="sxs-lookup"><span data-stu-id="86071-150">When the user presses any variation of F1 that includes any keyboard modifier, the <xref:System.Windows.Forms.Help> class displays a pop-up window, similar to a <xref:System.Windows.Forms.ToolTip>, near the control.</span></span> <span data-ttu-id="86071-151">Si el usuario presiona ALT + F2, se muestra una ventana emergente de ayuda diferente con información adicional.</span><span class="sxs-lookup"><span data-stu-id="86071-151">If the user presses ALT+F2, a different Help pop-up is displayed with additional information.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 <span data-ttu-id="86071-152">**Ejemplo 2**</span><span class="sxs-lookup"><span data-stu-id="86071-152">**Example 2**</span></span>  
  
 <span data-ttu-id="86071-153">El ejemplo siguiente determina si el usuario presionó ALT+E y, si el puntero del mouse está sobre un <xref:System.Windows.Forms.TreeNode>, permite al usuario editar que <xref:System.Windows.Forms.TreeNode>.</span><span class="sxs-lookup"><span data-stu-id="86071-153">The following example determines whether the user pressed ALT+E, and if the mouse pointer is over a <xref:System.Windows.Forms.TreeNode>, allows the user to edit that <xref:System.Windows.Forms.TreeNode>.</span></span>  
  
 [!code-cpp[Windows.Forms.Control Members4#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CPP/controlmembers4.cpp#3)]
 [!code-csharp[Windows.Forms.Control Members4#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Windows.Forms.Control Members4/CS/controlmembers4.cs#3)]
 [!code-vb[Windows.Forms.Control Members4#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Windows.Forms.Control Members4/VB/controlmembers4.vb#3)]  
  
 <span data-ttu-id="86071-154">**Ejemplo 3**</span><span class="sxs-lookup"><span data-stu-id="86071-154">**Example 3**</span></span>  
  
 <span data-ttu-id="86071-155">El ejemplo siguiente determina si el usuario presionó una tecla no numérico y si es así, se cancela el <xref:System.Windows.Forms.Control.KeyPress> eventos mediante el uso de la <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="86071-155">The following example determines whether the user pressed a non-numeric key, and if so, cancels the <xref:System.Windows.Forms.Control.KeyPress> event by using the <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> property.</span></span>  
  
 [!code-cpp[Control.KeyDown#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Control.KeyDown/CPP/form1.cpp#1)]
 [!code-csharp[Control.KeyDown#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Control.KeyDown/CS/form1.cs#1)]
 [!code-vb[Control.KeyDown#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Control.KeyDown/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyData">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys KeyData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys KeyData" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyData As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys KeyData { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyData : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.KeyData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-156">Obtiene los datos de tecla para un evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="86071-156">Gets the key data for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="86071-157">Un valor <see cref="T:System.Windows.Forms.Keys" /> que representa el código de tecla correspondiente a la tecla que se presionó, combinado con cualquier marcador modificador que indique qué combinación de teclas CTRL, MAYÚS y ALT se presionaron al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="86071-157">A <see cref="T:System.Windows.Forms.Keys" /> representing the key code for the key that was pressed, combined with modifier flags that indicate which combination of CTRL, SHIFT, and ALT keys was pressed at the same time.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86071-158">Se pueden utilizar constantes de <xref:System.Windows.Forms.Keys> para extraer información de la <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="86071-158">You can use constants from <xref:System.Windows.Forms.Keys> to extract information from the <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> property.</span></span> <span data-ttu-id="86071-159">Utilice el operador AND bit a bit para comparar los datos devueltos por <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> constantes <xref:System.Windows.Forms.Keys> para obtener información sobre las claves, el usuario presionó.</span><span class="sxs-lookup"><span data-stu-id="86071-159">Use the bitwise AND operator to compare data returned by <xref:System.Windows.Forms.KeyEventArgs.KeyData%2A> with constants in <xref:System.Windows.Forms.Keys> to obtain information about which keys the user pressed.</span></span> <span data-ttu-id="86071-160">Para determinar si se presionó una tecla modificadora específica, use el <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, y <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="86071-160">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86071-161">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="86071-161">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="86071-162">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="86071-162">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="86071-163">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="86071-163">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="86071-164">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="86071-164">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="86071-165">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="86071-165">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="86071-166">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="86071-166">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="public int KeyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeyValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeyValue { int get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyValue : int" Usage="System.Windows.Forms.KeyEventArgs.KeyValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-167">Obtiene el valor de teclado para un evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="86071-167">Gets the keyboard value for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span></summary>
        <value><span data-ttu-id="86071-168">Representación de tipo integer de la propiedad <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />.</span><span class="sxs-lookup"><span data-stu-id="86071-168">The integer representation of the <see cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86071-169">En el ejemplo de código siguiente se muestra el uso de este miembro.</span><span class="sxs-lookup"><span data-stu-id="86071-169">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="86071-170">En el ejemplo, un controlador de eventos informa sobre la aparición de la <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="86071-170">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="86071-171">Este informe le ayuda a saber cuándo el evento se produce y puede ayudarle a depurar.</span><span class="sxs-lookup"><span data-stu-id="86071-171">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="86071-172">Para informar sobre varios eventos o en eventos que se producen con frecuencia, considere reemplazar <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> con <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> o agregar el mensaje a un multilínea <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="86071-172">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="86071-173">Para ejecutar el ejemplo de código, péguelo en un proyecto que contiene una instancia de un tipo que hereda de <xref:System.Windows.Forms.Control>, como un <xref:System.Windows.Forms.Button> o <xref:System.Windows.Forms.ComboBox>.</span><span class="sxs-lookup"><span data-stu-id="86071-173">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>.</span></span> <span data-ttu-id="86071-174">A continuación, asigne a la instancia `Control1` y asegúrese de que está asociado el controlador de eventos con el <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="86071-174">Then name the instance `Control1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.Control.KeyDown?displayProperty=nameWithType> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#48](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#48)]
 [!code-vb[System.Windows.Forms.EventExamples#48](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#48)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyData" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.KeyCode" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Keys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Keys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Keys Modifiers { System::Windows::Forms::Keys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Forms.Keys" Usage="System.Windows.Forms.KeyEventArgs.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Keys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-175">Obtiene los marcadores modificadores para un evento <see cref="E:System.Windows.Forms.Control.KeyDown" /> o <see cref="E:System.Windows.Forms.Control.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="86071-175">Gets the modifier flags for a <see cref="E:System.Windows.Forms.Control.KeyDown" /> or <see cref="E:System.Windows.Forms.Control.KeyUp" /> event.</span></span> <span data-ttu-id="86071-176">Los marcadores indican qué combinación de CTRL, MAYÚS y teclas ALT se presionó.</span><span class="sxs-lookup"><span data-stu-id="86071-176">The flags indicate which combination of CTRL, SHIFT, and ALT keys was pressed.</span></span></summary>
        <value><span data-ttu-id="86071-177">Un valor <see cref="T:System.Windows.Forms.Keys" /> que representa uno o más marcadores modificadores.</span><span class="sxs-lookup"><span data-stu-id="86071-177">A <see cref="T:System.Windows.Forms.Keys" /> value representing one or more modifier flags.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86071-178">Para determinar si se presionó una tecla modificadora específica, use el <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, y <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="86071-178">To determine whether a specific modifier key was pressed, use the <xref:System.Windows.Forms.KeyEventArgs.Control%2A>, <xref:System.Windows.Forms.KeyEventArgs.Shift%2A>, and <xref:System.Windows.Forms.KeyEventArgs.Alt%2A> properties.</span></span> <span data-ttu-id="86071-179">Cualquier marcador modificador que se puede combinar con OR bit a bit.</span><span class="sxs-lookup"><span data-stu-id="86071-179">Modifier flags can be combined with bitwise OR.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86071-180">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> propiedad para determinar las teclas modificadoras que se presionaron junto con la clave principal.</span><span class="sxs-lookup"><span data-stu-id="86071-180">The following code example shows how to use the <xref:System.Windows.Forms.KeyEventArgs.Modifiers%2A> property to determine which modifier keys were pressed along with the primary key.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Shift" />
        <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
      </Docs>
    </Member>
    <Member MemberName="Shift">
      <MemberSignature Language="C#" Value="public virtual bool Shift { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Shift" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Shift As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Shift { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Shift : bool" Usage="System.Windows.Forms.KeyEventArgs.Shift" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-181">Obtiene un valor que indica si se presionó la tecla MAYÚS.</span><span class="sxs-lookup"><span data-stu-id="86071-181">Gets a value indicating whether the SHIFT key was pressed.</span></span></summary>
        <value><span data-ttu-id="86071-182"><see langword="true" /> si se presionó la tecla MAYÚS; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86071-182"><see langword="true" /> if the SHIFT key was pressed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="86071-183">El ejemplo siguiente determina si el usuario presiona la tecla MAYÚS con la tecla F1 y, si es así, muestra la Ayuda.</span><span class="sxs-lookup"><span data-stu-id="86071-183">The following example determines whether the user pressed the Shift key with the F1 key, and if so, displays help.</span></span>  
  
 [!code-cpp[KeyEventArgs.Modifiers#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CPP/form1.cpp#1)]
 [!code-csharp[KeyEventArgs.Modifiers#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyEventArgs.Modifiers/CS/form1.cs#1)]
 [!code-vb[KeyEventArgs.Modifiers#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyEventArgs.Modifiers/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Alt" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Control" />
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="SuppressKeyPress">
      <MemberSignature Language="C#" Value="public bool SuppressKeyPress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SuppressKeyPress" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberSignature Language="VB.NET" Value="Public Property SuppressKeyPress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SuppressKeyPress { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SuppressKeyPress : bool with get, set" Usage="System.Windows.Forms.KeyEventArgs.SuppressKeyPress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="86071-184">Obtiene o establece un valor que indica si el evento de tecla se debería pasar al control subyacente.</span><span class="sxs-lookup"><span data-stu-id="86071-184">Gets or sets a value indicating whether the key event should be passed on to the underlying control.</span></span></summary>
        <value><span data-ttu-id="86071-185"><see langword="true" /> si el evento de tecla no se debería enviar al control; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="86071-185"><see langword="true" /> if the key event should not be sent to the control; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="86071-186">Puede asignar `true` a esta propiedad en un controlador de eventos como <xref:System.Windows.Forms.Control.KeyDown> con el fin de evitar la entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="86071-186">You can assign `true` to this property in an event handler such as <xref:System.Windows.Forms.Control.KeyDown> in order to prevent user input.</span></span>  
  
 <span data-ttu-id="86071-187">Establecer <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> a `true` también establece <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="86071-187">Setting <xref:System.Windows.Forms.KeyEventArgs.SuppressKeyPress%2A> to `true` also sets <xref:System.Windows.Forms.KeyEventArgs.Handled%2A> to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="86071-188">El siguiente ejemplo de código impide que lleguen a las pulsaciones de tecla numéricas el <xref:System.Windows.Forms.TextBox> control denominado `textBox1`.</span><span class="sxs-lookup"><span data-stu-id="86071-188">The following code example prevents numeric keystrokes from reaching the <xref:System.Windows.Forms.TextBox> control named `textBox1`.</span></span>  
  
 [!code-csharp[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/csharp/VS_Snippets_Winforms/keyeventargs.suppresskeypress/cs/form1.cs#1)]
 [!code-vb[KeyEventArgs.SuppressKeyPress#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/keyeventargs.suppresskeypress/vb/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.KeyEventArgs.Handled" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="EncryptedPackageEnvelope" FullName="System.IO.Packaging.EncryptedPackageEnvelope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="03139be139110d634a13c4feea2e86d97d1e4851" /><Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="09/04/2018" /><Meta Name="ms.locfileid" Value="43569309" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedPackageEnvelope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.EncryptedPackageEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedPackageEnvelope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="F#" Value="type EncryptedPackageEnvelope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a840c-101">Representa un archivo compuesto OLE que contiene un paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-101">Represents an OLE compound file that contains an encrypted package.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> no tiene ningún constructor público.</span><span class="sxs-lookup"><span data-stu-id="a840c-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> has no public constructors.</span></span>  <span data-ttu-id="a840c-103">Un <xref:System.IO.Packaging.EncryptedPackageEnvelope> se crea mediante el uso de estático <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, o <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="a840c-103">An <xref:System.IO.Packaging.EncryptedPackageEnvelope> is created by use of the static <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, or <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="encryptedPackageEnvelope.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a840c-104">Cierra el paquete cifrado y el archivo compuesto OLE que lo contiene.</span><span class="sxs-lookup"><span data-stu-id="a840c-104">Closes the encrypted package and the OLE compound file that holds it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a840c-105">El ejemplo siguiente muestra cómo usar este método para cerrar un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="a840c-105">The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Open" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a840c-106">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-106">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(class System.IO.Stream envelopeStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::IO::Stream ^ envelopeStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="a840c-107">Secuencia en la que se va a crear el archivo.</span><span class="sxs-lookup"><span data-stu-id="a840c-107">The stream on which to create the file.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="a840c-108">Licencia de publicación que está incrustada en el archivo compuesto.</span><span class="sxs-lookup"><span data-stu-id="a840c-108">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="a840c-109">Objeto que determina las operaciones que puede realizar el usuario actual en el contenido cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-109">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="a840c-110">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="a840c-110">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> on the specified stream.</span></span></summary>
        <returns><span data-ttu-id="a840c-111">Colección <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> creada recientemente.</span><span class="sxs-lookup"><span data-stu-id="a840c-111">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-112">El usuario actual tiene acceso de lectura y escritura al nuevo archivo.</span><span class="sxs-lookup"><span data-stu-id="a840c-112">The current user has read/write access to the new file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a840c-113"><paramref name="envelopeStream" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-113"><paramref name="envelopeStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a840c-114"><paramref name="envelopeStream" /> no proporciona acceso de lectura ni escritura.</span><span class="sxs-lookup"><span data-stu-id="a840c-114"><paramref name="envelopeStream" /> does not provide read/write access.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(string envelopeFileName, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::String ^ envelopeFileName, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeFileName, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="a840c-115">Nombre del archivo compuesto OLE.</span><span class="sxs-lookup"><span data-stu-id="a840c-115">The name of the OLE compound file.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="a840c-116">Licencia de publicación que está incrustada en el archivo compuesto.</span><span class="sxs-lookup"><span data-stu-id="a840c-116">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="a840c-117">Objeto que determina las operaciones que puede realizar el usuario actual en el contenido cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-117">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="a840c-118">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> y le asigna el nombre de archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="a840c-118">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and gives it the specified file name.</span></span></summary>
        <returns><span data-ttu-id="a840c-119">Colección <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> creada recientemente.</span><span class="sxs-lookup"><span data-stu-id="a840c-119">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-120">Si ya existe un archivo con el nombre especificado, se sobrescribe.</span><span class="sxs-lookup"><span data-stu-id="a840c-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="a840c-121">El usuario actual tiene acceso de lectura y escritura al archivo.</span><span class="sxs-lookup"><span data-stu-id="a840c-121">The current user has read/write access to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a840c-122"><paramref name="envelopeFileName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-122"><paramref name="envelopeFileName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromPackage">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a840c-123">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que utiliza un paquete no cifrado existente como origen de su contenido.</span><span class="sxs-lookup"><span data-stu-id="a840c-123">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses an existing unencrypted package as the source of its content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a840c-124">El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> método para crear instancias de un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="a840c-124">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(class System.IO.Stream envelopeStream, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::IO::Stream ^ envelopeStream, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : System.IO.Stream * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeStream, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="a840c-125">Secuencia en la que se va a crear el archivo.</span><span class="sxs-lookup"><span data-stu-id="a840c-125">The stream on which to create the file.</span></span></param>
        <param name="packageStream"><span data-ttu-id="a840c-126">Secuencia que representa el paquete no cifrado existente.</span><span class="sxs-lookup"><span data-stu-id="a840c-126">The stream representing the existing unencrypted package.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="a840c-127">Licencia de publicación que está incrustada en el archivo compuesto.</span><span class="sxs-lookup"><span data-stu-id="a840c-127">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="a840c-128">Objeto que determina las operaciones que puede realizar el usuario actual en el contenido cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-128">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="a840c-129">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (en la secuencia especificada) que utiliza el paquete no cifrado especificado como su contenido.</span><span class="sxs-lookup"><span data-stu-id="a840c-129">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (on the specified stream) that uses the specified unencrypted package as its content.</span></span></summary>
        <returns><span data-ttu-id="a840c-130">Colección <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> creada recientemente.</span><span class="sxs-lookup"><span data-stu-id="a840c-130">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-131">El usuario actual tiene acceso de lectura y escritura al nuevo archivo.</span><span class="sxs-lookup"><span data-stu-id="a840c-131">The current user has read/write access to the new file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a840c-132">El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> método para crear instancias de un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="a840c-132">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a840c-133">El valor de <paramref name="envelopeStream" /> o <paramref name="packageStream" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-133"><paramref name="envelopeStream" /> or <paramref name="packageStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a840c-134"><paramref name="envelopeStream" /> no proporciona acceso de lectura ni escritura.</span><span class="sxs-lookup"><span data-stu-id="a840c-134"><paramref name="envelopeStream" /> does not provide read/write access.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(string envelopeFileName, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::String ^ envelopeFileName, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : string * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeFileName, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="a840c-135">Nombre del archivo compuesto OLE.</span><span class="sxs-lookup"><span data-stu-id="a840c-135">The name of the OLE compound file.</span></span></param>
        <param name="packageStream"><span data-ttu-id="a840c-136">Secuencia que representa el paquete no cifrado existente.</span><span class="sxs-lookup"><span data-stu-id="a840c-136">The stream representing the existing unencrypted package.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="a840c-137">Licencia de publicación que está incrustada en el archivo compuesto.</span><span class="sxs-lookup"><span data-stu-id="a840c-137">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="a840c-138">Objeto que determina las operaciones que puede realizar el usuario actual en el contenido cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-138">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="a840c-139">Crea y devuelve un objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que utiliza el paquete no cifrado especificado como su contenido y le asigna el nombre de archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="a840c-139">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses the specified unencrypted package as its content, and gives it the specified file name.</span></span></summary>
        <returns><span data-ttu-id="a840c-140">Colección <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> creada recientemente.</span><span class="sxs-lookup"><span data-stu-id="a840c-140">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-141">Si ya existe un archivo con el nombre especificado, se sobrescribe.</span><span class="sxs-lookup"><span data-stu-id="a840c-141">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="a840c-142">El usuario actual tiene acceso de lectura y escritura al archivo.</span><span class="sxs-lookup"><span data-stu-id="a840c-142">The current user has read/write access to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a840c-143">El ejemplo siguiente muestra cómo usar el <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> método para crear instancias de un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="a840c-143">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a840c-144">El valor de <paramref name="envelopeFileName" /> o <paramref name="packageStream" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-144"><paramref name="envelopeFileName" /> or <paramref name="packageStream" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a840c-145">Libera los recursos que usa <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-145">Releases the resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="encryptedPackageEnvelope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a840c-146">Libera todos los recursos que usa <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-146">Releases all resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-147">Llame a <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> cuando haya terminado con un <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="a840c-147">Call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> when finished with a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="a840c-148">El método <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> deja el <xref:System.IO.Packaging.EncryptedPackageEnvelope> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="a840c-148">The <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> method leaves the <xref:System.IO.Packaging.EncryptedPackageEnvelope> in an unusable state.</span></span> <span data-ttu-id="a840c-149">Después de llamar a <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, debe liberar todas las referencias a la <xref:System.IO.Packaging.EncryptedPackageEnvelope> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.IO.Packaging.EncryptedPackageEnvelope> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="a840c-149">After calling <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, you must release all references to the <xref:System.IO.Packaging.EncryptedPackageEnvelope> so the garbage collector can reclaim the memory that the <xref:System.IO.Packaging.EncryptedPackageEnvelope> was occupying.</span></span> <span data-ttu-id="a840c-150">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="a840c-150">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a840c-151">Realice siempre una llamada a <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="a840c-151">Always call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> before you release your last reference to the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="a840c-152">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.IO.Packaging.EncryptedPackageEnvelope> del objeto <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="a840c-152">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Packaging.EncryptedPackageEnvelope> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="encryptedPackageEnvelope.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a840c-153">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="a840c-153"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a840c-154">Libera los recursos no administrados que usa <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="a840c-154">Releases the unmanaged resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-155">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a840c-155">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="a840c-156">`Dispose()` invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="a840c-156">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="a840c-157"><xref:System.Object.Finalize%2A> invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="a840c-157"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="a840c-158">Cuando el `disposing` parámetro es true, este método libera todos los recursos mantenidos por los objetos administrados que este <xref:System.IO.Packaging.EncryptedPackageEnvelope> referencias.</span><span class="sxs-lookup"><span data-stu-id="a840c-158">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.Packaging.EncryptedPackageEnvelope> references.</span></span> <span data-ttu-id="a840c-159">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="a840c-159">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="a840c-160"><para>
            <see langword="Dispose" /> puede llamarse varias veces por otros objetos. Cuando se reemplaza <see langword="Dispose(Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [reemplazar el método Finalize](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></span><span class="sxs-lookup"><span data-stu-id="a840c-160"><para>
            <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</para></span></span></block>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a840c-161">Obtiene un valor que especifica si el archivo se abrió con acceso de lectura, escritura o ambos.</span><span class="sxs-lookup"><span data-stu-id="a840c-161">Gets a value that specifies whether the file was opened with access to read, write, or both.</span></span></summary>
        <value><span data-ttu-id="a840c-162">El valor de <see cref="T:System.IO.FileAccess" /> que se utilizó al abrir el archivo.</span><span class="sxs-lookup"><span data-stu-id="a840c-162">The <see cref="T:System.IO.FileAccess" /> value that was used to open the file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="encryptedPackageEnvelope.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a840c-163">Vacíe la secuencia de <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> y su contenido del paquete.</span><span class="sxs-lookup"><span data-stu-id="a840c-163">Flush the stream for both the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and its package content.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package GetPackage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.Package GetPackage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPackage () As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::Package ^ GetPackage();" />
      <MemberSignature Language="F#" Value="member this.GetPackage : unit -&gt; System.IO.Packaging.Package" Usage="encryptedPackageEnvelope.GetPackage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a840c-164">Obtiene el paquete cifrado incluido en <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-164">Gets the encrypted package inside the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <returns><span data-ttu-id="a840c-165"><see cref="T:System.IO.Packaging.Package" /> del sobre.</span><span class="sxs-lookup"><span data-stu-id="a840c-165">The <see cref="T:System.IO.Packaging.Package" /> in the envelope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEncryptedPackageEnvelope">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a840c-166">Obtiene un valor que especifica si el archivo es un archivo compuesto OLE con una secuencia del paquete cifrada</span><span class="sxs-lookup"><span data-stu-id="a840c-166">Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : System.IO.Stream -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="a840c-167">Secuencia que se prueba.</span><span class="sxs-lookup"><span data-stu-id="a840c-167">The stream that is tested.</span></span></param>
        <summary><span data-ttu-id="a840c-168">Obtiene un valor que especifica si la secuencia indicada es un archivo compuesto OLE con una secuencia del paquete cifrada.</span><span class="sxs-lookup"><span data-stu-id="a840c-168">Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</span></span></summary>
        <returns><span data-ttu-id="a840c-169"><see langword="true" /> si la secuencia especificada es un archivo compuesto OLE con una secuencia del paquete cifrada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-169"><see langword="true" /> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a840c-170"><paramref name="stream" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-170"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : string -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="a840c-171">Archivo que se prueba.</span><span class="sxs-lookup"><span data-stu-id="a840c-171">The file that is tested.</span></span></param>
        <summary><span data-ttu-id="a840c-172">Obtiene un valor que especifica si la el archivo indicado es un archivo compuesto OLE con una secuencia del paquete cifrada.</span><span class="sxs-lookup"><span data-stu-id="a840c-172">Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</span></span></summary>
        <returns><span data-ttu-id="a840c-173"><see langword="true" /> si el archivo especificado es un archivo compuesto OLE con una secuencia del paquete cifrada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-173"><see langword="true" /> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a840c-174">El ejemplo siguiente muestra cómo usar este método para probar el cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-174">The following example shows how to use this method to test for encryption.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a840c-175"><paramref name="fileName" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a840c-175"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a840c-176">Abre el paquete cifrado en un archivo compuesto OLE.</span><span class="sxs-lookup"><span data-stu-id="a840c-176">Opens the encrypted package in an OLE compound file.</span></span></summary>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(class System.IO.Stream envelopeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeStream As Stream) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::IO::Stream ^ envelopeStream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="a840c-177">Secuencia que contiene el paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-177">The stream containing the encrypted package.</span></span></param>
        <summary><span data-ttu-id="a840c-178">Abre el paquete cifrado en la secuencia especificada.</span><span class="sxs-lookup"><span data-stu-id="a840c-178">Open the encrypted package in the specified stream.</span></span></summary>
        <returns><span data-ttu-id="a840c-179">El objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que se abre.</span><span class="sxs-lookup"><span data-stu-id="a840c-179">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-180">La secuencia debe tener un paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-180">The stream must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="a840c-181">Archivo que contiene el paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-181">The file containing the encrypted package.</span></span></param>
        <summary><span data-ttu-id="a840c-182">Abre el paquete cifrado en el archivo especificado como sólo lectura y uso no compartido.</span><span class="sxs-lookup"><span data-stu-id="a840c-182">Open the encrypted package in the specified file as read only and unshared.</span></span></summary>
        <returns><span data-ttu-id="a840c-183">El objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que se abre.</span><span class="sxs-lookup"><span data-stu-id="a840c-183">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-184">El archivo debe tener un paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-184">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="a840c-185">El archivo abierto es de lectura compartidas y única.</span><span class="sxs-lookup"><span data-stu-id="a840c-185">The opened file is read only and unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="a840c-186">Archivo que contiene el paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-186">The file containing the encrypted package.</span></span></param>
        <param name="access"><span data-ttu-id="a840c-187">Tipo de acceso.</span><span class="sxs-lookup"><span data-stu-id="a840c-187">The type of access.</span></span></param>
        <summary><span data-ttu-id="a840c-188">Abre el paquete cifrado en el archivo especificado como de uso no compartido y con el acceso indicado.</span><span class="sxs-lookup"><span data-stu-id="a840c-188">Open the encrypted package in the specified file as unshared and with the specified access.</span></span></summary>
        <returns><span data-ttu-id="a840c-189">El objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que se abre.</span><span class="sxs-lookup"><span data-stu-id="a840c-189">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-190">El archivo debe tener un paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-190">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="a840c-191">No se comparte el archivo abierto.</span><span class="sxs-lookup"><span data-stu-id="a840c-191">The opened file is unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess, sharing As FileShare) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access, System::IO::FileShare sharing);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access, sharing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="sharing" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="a840c-192">Archivo que contiene el paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-192">The file containing the encrypted package.</span></span></param>
        <param name="access"><span data-ttu-id="a840c-193">Tipo de acceso.</span><span class="sxs-lookup"><span data-stu-id="a840c-193">The type of access.</span></span></param>
        <param name="sharing"><span data-ttu-id="a840c-194">Tipo de uso compartido.</span><span class="sxs-lookup"><span data-stu-id="a840c-194">The type of sharing.</span></span></param>
        <summary><span data-ttu-id="a840c-195">Abre el paquete cifrado en el archivo especificado y le asigna el acceso especificado y un uso compartido.</span><span class="sxs-lookup"><span data-stu-id="a840c-195">Open the encrypted package in the specified file and gives it the specified access and sharing.</span></span></summary>
        <returns><span data-ttu-id="a840c-196">El objeto <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> que se abre.</span><span class="sxs-lookup"><span data-stu-id="a840c-196">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-197">El archivo debe tener un paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-197">The file must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a840c-198">Obtiene las propiedades básicas del paquete (como Title y Subject) del documento con derechos administrados.</span><span class="sxs-lookup"><span data-stu-id="a840c-198">Gets the core package properties (such as Title and Subject) of the rights managed document.</span></span></summary>
        <value><span data-ttu-id="a840c-199"><see cref="T:System.IO.Packaging.PackageProperties" /> del paquete.</span><span class="sxs-lookup"><span data-stu-id="a840c-199">The <see cref="T:System.IO.Packaging.PackageProperties" /> for the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a840c-200">Estas propiedades básicas se almacenan en los flujos de propiedad OLE estándar (\005SummaryInformation y \005DocumentSummaryInformation).</span><span class="sxs-lookup"><span data-stu-id="a840c-200">These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</span></span> <span data-ttu-id="a840c-201">Las propiedades básicas también se almacenan en el propio paquete.</span><span class="sxs-lookup"><span data-stu-id="a840c-201">The core properties are also stored in the package itself.</span></span> <span data-ttu-id="a840c-202">Es responsabilidad de la aplicación para mantener los dos conjuntos de propiedades sincronizados.</span><span class="sxs-lookup"><span data-stu-id="a840c-202">It is the responsibility of the application to keep the two sets of properties synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightsManagementInformation">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.RightsManagementInformation RightsManagementInformation" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightsManagementInformation As RightsManagementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::RightsManagementInformation ^ RightsManagementInformation { System::IO::Packaging::RightsManagementInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RightsManagementInformation : System.IO.Packaging.RightsManagementInformation" Usage="System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.RightsManagementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a840c-203">Obtiene la información de administración de derechos almacenada en <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; en concreto, los objetos <see cref="T:System.Security.RightsManagement.PublishLicense" /> y <see cref="T:System.Security.RightsManagement.UseLicense" /> almacenados en el archivo compuesto OLE que contiene el paquete protegido de administración de derechos.</span><span class="sxs-lookup"><span data-stu-id="a840c-203">Gets the rights management information stored in the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; specifically, the <see cref="T:System.Security.RightsManagement.PublishLicense" /> and the <see cref="T:System.Security.RightsManagement.UseLicense" />s stored in the OLE compound file that embodies the rights-management protected package</span></span></summary>
        <value><span data-ttu-id="a840c-204"><see cref="T:System.IO.Packaging.RightsManagementInformation" /> del paquete.</span><span class="sxs-lookup"><span data-stu-id="a840c-204">The <see cref="T:System.IO.Packaging.RightsManagementInformation" /> for the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a840c-205">El ejemplo siguiente muestra cómo obtener <xref:System.IO.Packaging.RightsManagementInformation> para un paquete cifrado mediante el uso del <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a840c-205">The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> property.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageInfo">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.StorageInfo StorageInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.StorageInfo StorageInfo" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageInfo As StorageInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::StorageInfo ^ StorageInfo { System::IO::Packaging::StorageInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageInfo : System.IO.Packaging.StorageInfo" Usage="System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.StorageInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a840c-206">Obtiene un objeto que proporciona acceso a las secuencias del archivo compuesto que están fuera del paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-206">Gets an object that provides access to the compound file streams outside the encrypted package.</span></span></summary>
        <value><span data-ttu-id="a840c-207"><see cref="T:System.IO.Packaging.StorageInfo" /> que representa las secuencias del archivo compuesto de OLE que están fuera del paquete cifrado.</span><span class="sxs-lookup"><span data-stu-id="a840c-207">A <see cref="T:System.IO.Packaging.StorageInfo" /> representing streams in the OLE compound file that are outside the encrypted package.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
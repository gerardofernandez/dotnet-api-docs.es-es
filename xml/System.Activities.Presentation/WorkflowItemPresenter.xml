<Type Name="WorkflowItemPresenter" FullName="System.Activities.Presentation.WorkflowItemPresenter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e7fed7593dd73153491e380465c7e651a0def5e6" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36719869" /></Metadata><TypeSignature Language="C#" Value="public sealed class WorkflowItemPresenter : System.Windows.Controls.ContentControl, System.Activities.Presentation.ICompositeView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WorkflowItemPresenter extends System.Windows.Controls.ContentControl implements class System.Activities.Presentation.ICompositeView" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.WorkflowItemPresenter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WorkflowItemPresenter&#xA;Inherits ContentControl&#xA;Implements ICompositeView" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowItemPresenter sealed : System::Windows::Controls::ContentControl, System::Activities::Presentation::ICompositeView" />
  <TypeSignature Language="F#" Value="type WorkflowItemPresenter = class&#xA;    inherit ContentControl&#xA;    interface ICompositeView" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.ICompositeView</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="99587-101">Proporciona un editor visual para editar objetos <see langword="ModelItem" /> y ofrece una área para que el usuario pueda arrastrar y colocar, o bien, editar elementos compuestos.</span><span class="sxs-lookup"><span data-stu-id="99587-101">Provides a visual editor to edit <see langword="ModelItem" /> objects, and provides an area for the user to drag and drop, and otherwise edit composed elements.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99587-102">Se trata de un Windows Presentation Foundation (WPF) que actúa como un contenedor de edición que muestra la visualización de los datos que está enlazado en el <xref:System.Activities.Presentation.WorkflowItemPresenter.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="99587-102">This is a Windows Presentation Foundation (WPF) control that acts as an editing container that displays the visualization for the data it is bound to in the <xref:System.Activities.Presentation.WorkflowItemPresenter.Item%2A> property.</span></span> <span data-ttu-id="99587-103">El objeto <xref:System.Activities.Presentation.WorkflowItemPresenter> es uno de dos controles (el otro es <xref:System.Activities.Presentation.WorkflowItemsPresenter>) que se puede utilizar para crear un contenedor para visualizar y editar un elemento compuesto.</span><span class="sxs-lookup"><span data-stu-id="99587-103">The <xref:System.Activities.Presentation.WorkflowItemPresenter> is one of two controls (the other being <xref:System.Activities.Presentation.WorkflowItemsPresenter>) that can be used to create a container for visualizing and editing a composed element.</span></span> <span data-ttu-id="99587-104">Es importante tener en cuenta que la visualización del elemento compuesto no la controla el objeto <xref:System.Activities.Presentation.WorkflowItemPresenter>, sino que se representa con la visualización asociada en el almacén de metadatos para un tipo dado.</span><span class="sxs-lookup"><span data-stu-id="99587-104">It is important to note that the visualization of the composed element is not controlled by the <xref:System.Activities.Presentation.WorkflowItemPresenter> but it renders with the visualization associated in the metadata store for a given type.</span></span> <span data-ttu-id="99587-105">El <xref:System.Activities.Presentation.WorkflowItemPresenter> es una subclase especializada de WPF <xref:System.Windows.Controls.ContentControl> que se ha modificado para admitir arrastrar y colocar, copiar y pegar y otras acciones de edición visuales.</span><span class="sxs-lookup"><span data-stu-id="99587-105">The <xref:System.Activities.Presentation.WorkflowItemPresenter> is a specialized subclass of the WPF <xref:System.Windows.Controls.ContentControl> that has been modified to support drag and drop, copy and paste, and other visual editing actions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99587-106">El uso principal de este control será en un diseñador de actividad, tal y como se puede ver en el código de ejemplo siguiente.</span><span class="sxs-lookup"><span data-stu-id="99587-106">The primary use of this control will be in an activity designer, as seen in the sample code below.</span></span> <span data-ttu-id="99587-107">El siguiente código XAML muestra el uso declarativo del control para compilar un diseñador simple para la actividad If.</span><span class="sxs-lookup"><span data-stu-id="99587-107">The XAML below shows the declarative usage of the control to build a simple designer for the If activity.</span></span> <span data-ttu-id="99587-108">La actividad If tiene dos propiedades del tipo Activity, Then y Else, y el elemento (Item) de cada objeto WorkflowItemPresenter está vinculado a esa propiedad respectiva.</span><span class="sxs-lookup"><span data-stu-id="99587-108">The If activity has two properties of type Activity, Then and Else, and the Item for each WorkflowItemPresenter is linked to that respective property.</span></span>  
  
 <span data-ttu-id="99587-109">Para obtener un ejemplo de la <xref:System.Activities.Presentation.WorkflowItemPresenter> en uso, consulte el [compuesto diseñadores personalizados - moderador de elementos de flujo de trabajo](~/docs/framework/windows-workflow-foundation/samples/custom-composite-designers-workflow-item-presenter.md) ejemplo.</span><span class="sxs-lookup"><span data-stu-id="99587-109">For an example of the <xref:System.Activities.Presentation.WorkflowItemPresenter> in use, see the [Custom Composite Designers - Workflow Item Presenter](~/docs/framework/windows-workflow-foundation/samples/custom-composite-designers-workflow-item-presenter.md) sample.</span></span>  
  
```xaml  
<sap:ActivityDesigner x:Class="Microsoft.Documentation.SimpleIfDesigner"  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    xmlns:sap="clr-namespace:System.Activities.Presentation;assembly=System.Activities.Presentation"  
    xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation">  
    <StackPanel>  
        <StackPanel Orientation="Horizontal">  
            <sap:WorkflowItemPresenter Margin="4" HintText="Drop Then Here" Item="{Binding Path=ModelItem.Then, Mode=TwoWay}" />  
            <sap:WorkflowItemPresenter Margin="4" HintText="Drop Else Here" Item="{Binding Path=ModelItem.Else, Mode=TwoWay}" />  
        </StackPanel>  
    </StackPanel>  
</sap:ActivityDesigner>  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowItemPresenter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowItemPresenter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99587-110">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" />.</span><span class="sxs-lookup"><span data-stu-id="99587-110">Initializes a new instance of the <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedItemType">
      <MemberSignature Language="C#" Value="public Type AllowedItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type AllowedItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowItemPresenter.AllowedItemType" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ AllowedItemType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedItemType : Type with get, set" Usage="System.Activities.Presentation.WorkflowItemPresenter.AllowedItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-111">Obtiene o establece el <see langword="AllowedItemType" />.</span><span class="sxs-lookup"><span data-stu-id="99587-111">Gets or sets the <see langword="AllowedItemType" />.</span></span></summary>
        <value><span data-ttu-id="99587-112"><see langword="Type" /> que contiene el elemento permitido.</span><span class="sxs-lookup"><span data-stu-id="99587-112">A <see langword="Type" /> that contains the allowed item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99587-113">Cuando se establece esta propiedad, el <xref:System.Activities.Presentation.WorkflowItemPresenter> impide colocar objetos que no cumplen la `Type`.</span><span class="sxs-lookup"><span data-stu-id="99587-113">When this property is set, the <xref:System.Activities.Presentation.WorkflowItemPresenter> disallows dropping objects that do not conform to the `Type`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedItemTypeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowedItemTypeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowedItemTypeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowItemPresenter.AllowedItemTypeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowedItemTypeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowedItemTypeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowedItemTypeProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowItemPresenter.AllowedItemTypeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-114">Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.AllowedItemType" />.</span><span class="sxs-lookup"><span data-stu-id="99587-114">Identifies the <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.AllowedItemType" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DroppingTypeResolvingOptions">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.View.TypeResolvingOptions DroppingTypeResolvingOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.View.TypeResolvingOptions DroppingTypeResolvingOptions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowItemPresenter.DroppingTypeResolvingOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property DroppingTypeResolvingOptions As TypeResolvingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::View::TypeResolvingOptions ^ DroppingTypeResolvingOptions { System::Activities::Presentation::View::TypeResolvingOptions ^ get(); void set(System::Activities::Presentation::View::TypeResolvingOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DroppingTypeResolvingOptions : System.Activities.Presentation.View.TypeResolvingOptions with get, set" Usage="System.Activities.Presentation.WorkflowItemPresenter.DroppingTypeResolvingOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.TypeResolvingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-115">Obtiene o establece el objeto <see cref="T:System.Activities.Presentation.View.TypeResolvingOptions" /> para <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" />.</span><span class="sxs-lookup"><span data-stu-id="99587-115">Gets or sets the <see cref="T:System.Activities.Presentation.View.TypeResolvingOptions" /> for the <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" />.</span></span></summary>
        <value><span data-ttu-id="99587-116">Devuelve un <see cref="T:System.Activities.Presentation.View.TypeResolvingOptions" />.</span><span class="sxs-lookup"><span data-stu-id="99587-116">Returns a <see cref="T:System.Activities.Presentation.View.TypeResolvingOptions" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DroppingTypeResolvingOptionsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DroppingTypeResolvingOptionsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DroppingTypeResolvingOptionsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowItemPresenter.DroppingTypeResolvingOptionsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DroppingTypeResolvingOptionsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DroppingTypeResolvingOptionsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DroppingTypeResolvingOptionsProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowItemPresenter.DroppingTypeResolvingOptionsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-117">Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.DroppingTypeResolvingOptions" />.</span><span class="sxs-lookup"><span data-stu-id="99587-117">Identifies the <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.DroppingTypeResolvingOptions" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintText">
      <MemberSignature Language="C#" Value="public string HintText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HintText" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowItemPresenter.HintText" />
      <MemberSignature Language="VB.NET" Value="Public Property HintText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HintText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HintText : string with get, set" Usage="System.Activities.Presentation.WorkflowItemPresenter.HintText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-118">Obtiene o establece la cadena que contiene el texto de sugerencia para el control <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" />.</span><span class="sxs-lookup"><span data-stu-id="99587-118">Gets or sets the string that contains the hint text for the <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" /> control.</span></span></summary>
        <value><span data-ttu-id="99587-119">Texto de sugerencia para el control <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" />.</span><span class="sxs-lookup"><span data-stu-id="99587-119">The hint text for the <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" /> control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HintTextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HintTextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HintTextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowItemPresenter.HintTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HintTextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HintTextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HintTextProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowItemPresenter.HintTextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-120">Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.HintText" />.</span><span class="sxs-lookup"><span data-stu-id="99587-120">Identifies the <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.HintText" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultContainer">
      <MemberSignature Language="C#" Value="public bool IsDefaultContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultContainer" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowItemPresenter.IsDefaultContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefaultContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaultContainer { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaultContainer : bool with get, set" Usage="System.Activities.Presentation.WorkflowItemPresenter.IsDefaultContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-121">Obtiene o establece un valor que indica si este es el contenedor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="99587-121">Gets or sets a value that indicates whether this is the default container.</span></span></summary>
        <value><span data-ttu-id="99587-122">Es <see langword="true" /> si es el contenedor predeterminado; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99587-122"><see langword="true" /> if this is the default container; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultContainerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultContainerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultContainerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowItemPresenter.IsDefaultContainerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultContainerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultContainerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDefaultContainerProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowItemPresenter.IsDefaultContainerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-123">Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.IsDefaultContainer" />.</span><span class="sxs-lookup"><span data-stu-id="99587-123">Identifies the <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.IsDefaultContainer" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem Item { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Item" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.WorkflowItemPresenter.Item" />
      <MemberSignature Language="VB.NET" Value="Public Property Item As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::Model::ModelItem ^ Item { System::Activities::Presentation::Model::ModelItem ^ get(); void set(System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.WorkflowItemPresenter.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-124">Obtiene o establece el elemento actual del control <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" />.</span><span class="sxs-lookup"><span data-stu-id="99587-124">Gets or sets the current item of the <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" /> control.</span></span></summary>
        <value><span data-ttu-id="99587-125"><see langword="ModelItem" /> asociado al control <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" />.</span><span class="sxs-lookup"><span data-stu-id="99587-125">The <see langword="ModelItem" /> associated with the <see cref="T:System.Activities.Presentation.WorkflowItemPresenter" /> control.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ItemProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ItemProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.WorkflowItemPresenter.ItemProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ItemProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ItemProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ItemProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.WorkflowItemPresenter.ItemProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99587-126">Identifica la propiedad de dependencia <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.Item" />.</span><span class="sxs-lookup"><span data-stu-id="99587-126">Identifies the <see cref="P:System.Activities.Presentation.WorkflowItemPresenter.Item" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="workflowItemPresenter.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="workflowItemPresenter.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="workflowItemPresenter.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="workflowItemPresenter.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected override void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInitialized : EventArgs -&gt; unit" Usage="workflowItemPresenter.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="workflowItemPresenter.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected override void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberSignature Language="F#" Value="override this.OnRender : System.Windows.Media.DrawingContext -&gt; unit" Usage="workflowItemPresenter.OnRender drawingContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.Presentation.ICompositeView.CanPasteItems">
      <MemberSignature Language="C#" Value="bool ICompositeView.CanPasteItems (System.Collections.Generic.List&lt;object&gt; itemsToPaste);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Activities.Presentation.ICompositeView.CanPasteItems(class System.Collections.Generic.List`1&lt;object&gt; itemsToPaste) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.System#Activities#Presentation#ICompositeView#CanPasteItems(System.Collections.Generic.List{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Function CanPasteItems (itemsToPaste As List(Of Object)) As Boolean Implements ICompositeView.CanPasteItems" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Activities.Presentation.ICompositeView.CanPasteItems(System::Collections::Generic::List&lt;System::Object ^&gt; ^ itemsToPaste) = System::Activities::Presentation::ICompositeView::CanPasteItems;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeView.CanPasteItems(System.Collections.Generic.List{System.Object})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsToPaste" Type="System.Collections.Generic.List&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="itemsToPaste"><span data-ttu-id="99587-127">Lista de elementos que se van a pegar.</span><span class="sxs-lookup"><span data-stu-id="99587-127">A list of items to be pasted.</span></span></param>
        <summary><span data-ttu-id="99587-128">Devuelve un valor que indica si se pueden pegar los objetos especificados.</span><span class="sxs-lookup"><span data-stu-id="99587-128">Returns a value that indicates whether the specified objects can be pasted.</span></span></summary>
        <returns><span data-ttu-id="99587-129">Es <see langword="true" /> si los objetos especificados se pueden pegar; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99587-129"><see langword="true" /> if the specified objects can be pasted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.Presentation.ICompositeView.OnItemMoved">
      <MemberSignature Language="C#" Value="void ICompositeView.OnItemMoved (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.Presentation.ICompositeView.OnItemMoved(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.System#Activities#Presentation#ICompositeView#OnItemMoved(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.Presentation.ICompositeView.OnItemMoved(System::Activities::Presentation::Model::ModelItem ^ modelItem) = System::Activities::Presentation::ICompositeView::OnItemMoved;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeView.OnItemMoved(System.Activities.Presentation.Model.ModelItem)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="99587-130">Elemento que se va a mover.</span><span class="sxs-lookup"><span data-stu-id="99587-130">The item to move.</span></span></param>
        <summary><span data-ttu-id="99587-131">Se invoca después del inicio de una operación de mover para completar el movimiento del elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="99587-131">Invoked after the start of a move operation to complete the moving of the specified item.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.Presentation.ICompositeView.OnItemsCopied">
      <MemberSignature Language="C#" Value="object ICompositeView.OnItemsCopied (System.Collections.Generic.List&lt;System.Activities.Presentation.Model.ModelItem&gt; itemsToCopy);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Activities.Presentation.ICompositeView.OnItemsCopied(class System.Collections.Generic.List`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; itemsToCopy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.System#Activities#Presentation#ICompositeView#OnItemsCopied(System.Collections.Generic.List{System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Function OnItemsCopied (itemsToCopy As List(Of ModelItem)) As Object Implements ICompositeView.OnItemsCopied" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Activities.Presentation.ICompositeView.OnItemsCopied(System::Collections::Generic::List&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ itemsToCopy) = System::Activities::Presentation::ICompositeView::OnItemsCopied;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeView.OnItemsCopied(System.Collections.Generic.List{System.Activities.Presentation.Model.ModelItem})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsToCopy" Type="System.Collections.Generic.List&lt;System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="itemsToCopy"><span data-ttu-id="99587-132">Elementos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="99587-132">The items to copy.</span></span></param>
        <summary><span data-ttu-id="99587-133">Se invoca después del inicio de una operación de copiar para completar la copia de los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="99587-133">Invoked after the start of a copy operation to complete the copying of the specified items.</span></span></summary>
        <returns><span data-ttu-id="99587-134">Elementos clonados a partir de los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="99587-134">The items cloned from the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.Presentation.ICompositeView.OnItemsCut">
      <MemberSignature Language="C#" Value="object ICompositeView.OnItemsCut (System.Collections.Generic.List&lt;System.Activities.Presentation.Model.ModelItem&gt; itemsToCut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Activities.Presentation.ICompositeView.OnItemsCut(class System.Collections.Generic.List`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; itemsToCut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.System#Activities#Presentation#ICompositeView#OnItemsCut(System.Collections.Generic.List{System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Function OnItemsCut (itemsToCut As List(Of ModelItem)) As Object Implements ICompositeView.OnItemsCut" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Activities.Presentation.ICompositeView.OnItemsCut(System::Collections::Generic::List&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ itemsToCut) = System::Activities::Presentation::ICompositeView::OnItemsCut;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeView.OnItemsCut(System.Collections.Generic.List{System.Activities.Presentation.Model.ModelItem})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsToCut" Type="System.Collections.Generic.List&lt;System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="itemsToCut"><span data-ttu-id="99587-135">Elementos que se van a cortar.</span><span class="sxs-lookup"><span data-stu-id="99587-135">The items to cut.</span></span></param>
        <summary><span data-ttu-id="99587-136">Se invoca después del inicio de una operación de cortar para completar el corte de los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="99587-136">Invoked after the start of a cut operation to complete the cutting of the specified items.</span></span></summary>
        <returns><span data-ttu-id="99587-137">Elementos clonados a partir de los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="99587-137">The items cloned from the specified items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.Presentation.ICompositeView.OnItemsDelete">
      <MemberSignature Language="C#" Value="void ICompositeView.OnItemsDelete (System.Collections.Generic.List&lt;System.Activities.Presentation.Model.ModelItem&gt; itemsToDelete);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.Presentation.ICompositeView.OnItemsDelete(class System.Collections.Generic.List`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; itemsToDelete) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.System#Activities#Presentation#ICompositeView#OnItemsDelete(System.Collections.Generic.List{System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Sub OnItemsDelete (itemsToDelete As List(Of ModelItem)) Implements ICompositeView.OnItemsDelete" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.Presentation.ICompositeView.OnItemsDelete(System::Collections::Generic::List&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ itemsToDelete) = System::Activities::Presentation::ICompositeView::OnItemsDelete;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeView.OnItemsDelete(System.Collections.Generic.List{System.Activities.Presentation.Model.ModelItem})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsToDelete" Type="System.Collections.Generic.List&lt;System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="itemsToDelete"><span data-ttu-id="99587-138">Elementos que se van a eliminar.</span><span class="sxs-lookup"><span data-stu-id="99587-138">The items to delete.</span></span></param>
        <summary><span data-ttu-id="99587-139">Se invoca después del inicio de una operación de eliminación para completar la eliminación de los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="99587-139">Invoked after the start of a delete operation to complete the deletion of the specified items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Activities.Presentation.ICompositeView.OnItemsPasted">
      <MemberSignature Language="C#" Value="void ICompositeView.OnItemsPasted (System.Collections.Generic.List&lt;object&gt; itemsToPaste, System.Collections.Generic.List&lt;object&gt; metaData, System.Windows.Point pastePoint, System.Activities.Presentation.WorkflowViewElement pastePointReference);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Activities.Presentation.ICompositeView.OnItemsPasted(class System.Collections.Generic.List`1&lt;object&gt; itemsToPaste, class System.Collections.Generic.List`1&lt;object&gt; metaData, valuetype System.Windows.Point pastePoint, class System.Activities.Presentation.WorkflowViewElement pastePointReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.WorkflowItemPresenter.System#Activities#Presentation#ICompositeView#OnItemsPasted(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Windows.Point,System.Activities.Presentation.WorkflowViewElement)" />
      <MemberSignature Language="VB.NET" Value="Sub OnItemsPasted (itemsToPaste As List(Of Object), metaData As List(Of Object), pastePoint As Point, pastePointReference As WorkflowViewElement) Implements ICompositeView.OnItemsPasted" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Activities.Presentation.ICompositeView.OnItemsPasted(System::Collections::Generic::List&lt;System::Object ^&gt; ^ itemsToPaste, System::Collections::Generic::List&lt;System::Object ^&gt; ^ metaData, System::Windows::Point pastePoint, System::Activities::Presentation::WorkflowViewElement ^ pastePointReference) = System::Activities::Presentation::ICompositeView::OnItemsPasted;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.ICompositeView.OnItemsPasted(System.Collections.Generic.List{System.Object},System.Collections.Generic.List{System.Object},System.Windows.Point,System.Activities.Presentation.WorkflowViewElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemsToPaste" Type="System.Collections.Generic.List&lt;System.Object&gt;" />
        <Parameter Name="metaData" Type="System.Collections.Generic.List&lt;System.Object&gt;" />
        <Parameter Name="pastePoint" Type="System.Windows.Point" />
        <Parameter Name="pastePointReference" Type="System.Activities.Presentation.WorkflowViewElement" />
      </Parameters>
      <Docs>
        <param name="itemsToPaste"><span data-ttu-id="99587-140">Elementos que se van a pegar.</span><span class="sxs-lookup"><span data-stu-id="99587-140">The items to paste.</span></span></param>
        <param name="metaData"><span data-ttu-id="99587-141">Metadatos asociados con los elementos que se van a pegar.</span><span class="sxs-lookup"><span data-stu-id="99587-141">The metadata associated with the items to paste.</span></span></param>
        <param name="pastePoint"><span data-ttu-id="99587-142">La ubicación donde pegar los elementos.</span><span class="sxs-lookup"><span data-stu-id="99587-142">The location where to paste the items.</span></span></param>
        <param name="pastePointReference"><span data-ttu-id="99587-143">Referencia a la ubicación de pegado.</span><span class="sxs-lookup"><span data-stu-id="99587-143">A reference to the paste location.</span></span></param>
        <summary><span data-ttu-id="99587-144">Se invoca después del inicio de una operación de pegar para completar el pegado de los elementos especificados.</span><span class="sxs-lookup"><span data-stu-id="99587-144">Invoked after the start of a paste operation to complete the pasting of the specified items.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="896954d144cb81b939ae9a959a7bff7791d3924e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37658784" /></Metadata><TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <TypeSignature Language="F#" Value="type PropertyValueUIItemInvokeHandler = delegate of ITypeDescriptorContext * PropertyDescriptor * PropertyValueUIItem -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context"><span data-ttu-id="a5f10-101"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> de la propiedad asociada al icono en el que se ha hecho doble clic.</span><span class="sxs-lookup"><span data-stu-id="a5f10-101">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the property associated with the icon that was double-clicked.</span></span></param>
    <param name="descriptor"><span data-ttu-id="a5f10-102">Propiedad asociada al icono en el que se ha hecho doble clic.</span><span class="sxs-lookup"><span data-stu-id="a5f10-102">The property associated with the icon that was double-clicked.</span></span></param>
    <param name="invokedItem"><span data-ttu-id="a5f10-103"><see cref="T:System.Drawing.Design.PropertyValueUIItem" /> asociado al icono en el que se ha hecho doble clic.</span><span class="sxs-lookup"><span data-stu-id="a5f10-103">The <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associated with the icon that was double-clicked.</span></span></param>
    <summary><span data-ttu-id="a5f10-104">Representa el método que controlará el evento <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> de <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span><span class="sxs-lookup"><span data-stu-id="a5f10-104">Represents the method that will handle the <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> event of a <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a5f10-105">Haga doble clic en un icono en la ventana Propiedades, se producirá la <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> eventos de la <xref:System.Drawing.Design.PropertyValueUIItem> que está asociado el icono.</span><span class="sxs-lookup"><span data-stu-id="a5f10-105">Double-clicking an icon in the Properties window will raise the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event of the <xref:System.Drawing.Design.PropertyValueUIItem> that the icon is associated with.</span></span> <span data-ttu-id="a5f10-106">El <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> evento inicia normalmente una interfaz de usuario (UI) para editar el valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="a5f10-106">The <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event typically launches a user interface (UI) to edit the property's value.</span></span> <span data-ttu-id="a5f10-107">Agregar un <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> a la <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> propiedad de un <xref:System.Drawing.Design.PropertyValueUIItem> para asignar un controlador de eventos para realizar el comportamiento adecuado cuando se hace doble clic en el icono que aparece junto al nombre de propiedad.</span><span class="sxs-lookup"><span data-stu-id="a5f10-107">Add a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> to the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> property of a <xref:System.Drawing.Design.PropertyValueUIItem> to assign an event handler to perform the appropriate behavior when the icon displayed next to the property name is double-clicked.</span></span>  
  
 <span data-ttu-id="a5f10-108">Cuando se crea un delegado <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler>, se identifica el método que controlará el evento.</span><span class="sxs-lookup"><span data-stu-id="a5f10-108">When you create a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="a5f10-109">Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento.</span><span class="sxs-lookup"><span data-stu-id="a5f10-109">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="a5f10-110">Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.</span><span class="sxs-lookup"><span data-stu-id="a5f10-110">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="a5f10-111">Para obtener más información sobre los delegados de controlador de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a5f10-111">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a5f10-112">En el ejemplo de código siguiente se proporciona un <xref:System.Drawing.Design.PropertyValueUIItem> objeto para las propiedades del componente denominado `HorizontalMargin` o `VerticalMargin`.</span><span class="sxs-lookup"><span data-stu-id="a5f10-112">The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="a5f10-113">El <xref:System.Drawing.Design.PropertyValueUIItem> para estas propiedades proporciona una imagen, una información sobre herramientas y un controlador de eventos que se muestra un cuadro de mensaje cuando se hace clic en la imagen para la propiedad.</span><span class="sxs-lookup"><span data-stu-id="a5f10-113">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="a5f10-114">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Drawing.Design.IPropertyValueUIService> interfaz.</span><span class="sxs-lookup"><span data-stu-id="a5f10-114">This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>
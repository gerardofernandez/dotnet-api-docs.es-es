<Type Name="CatalogExportProvider" FullName="System.ComponentModel.Composition.Hosting.CatalogExportProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd9bbc19ffdcac25c921764568eb03aea11d1efb" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56769182" /></Metadata><TypeSignature Language="C#" Value="public class CatalogExportProvider : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogExportProvider extends System.ComponentModel.Composition.Hosting.ExportProvider implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogExportProvider&#xA;Inherits ExportProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogExportProvider : System::ComponentModel::Composition::Hosting::ExportProvider, IDisposable" />
  <TypeSignature Language="F#" Value="type CatalogExportProvider = class&#xA;    inherit ExportProvider&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Hosting.ExportProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="1fd7e-101">Recupera exportaciones de un catálogo.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-101">Retrieves exports from a catalog.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="1fd7e-102">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="1fd7e-103">Cuando haya terminado de utilizar el tipo, debe deshacerse de él directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="1fd7e-104">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="1fd7e-105">Para deshacerse de él, indirectamente, usar una construcción de lenguaje, como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1fd7e-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="1fd7e-106">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fd7e-107">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CatalogExportProvider : System.ComponentModel.Composition.Primitives.ComposablePartCatalog -&gt; System.ComponentModel.Composition.Hosting.CatalogExportProvider" Usage="new System.ComponentModel.Composition.Hosting.CatalogExportProvider catalog" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="1fd7e-108">Catálogo que <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> usa para producir objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-108">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <summary><span data-ttu-id="1fd7e-109">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> con el catálogo especificado.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1fd7e-110"><paramref name="catalog" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-110"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, isThreadSafe As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, bool isThreadSafe);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CatalogExportProvider : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * bool -&gt; System.ComponentModel.Composition.Hosting.CatalogExportProvider" Usage="new System.ComponentModel.Composition.Hosting.CatalogExportProvider (catalog, isThreadSafe)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="1fd7e-111">Catálogo que <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> usa para producir objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-111">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="isThreadSafe"><span data-ttu-id="1fd7e-112">Es <see langword="true" /> si este objeto debe ser seguro para subprocesos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-112"><see langword="true" /> if this object must be thread-safe; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="1fd7e-113">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> con el catálogo especificado y, de manera opcional, en modo seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog and optional thread-safe mode.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1fd7e-114"><paramref name="catalog" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-114"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.Composition.Hosting.CatalogExportProvider : System.ComponentModel.Composition.Primitives.ComposablePartCatalog * System.ComponentModel.Composition.Hosting.CompositionOptions -&gt; System.ComponentModel.Composition.Hosting.CatalogExportProvider" Usage="new System.ComponentModel.Composition.Hosting.CatalogExportProvider (catalog, compositionOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="1fd7e-115">Catálogo que <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> usa para producir objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-115">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="compositionOptions"><span data-ttu-id="1fd7e-116">Opciones que determinan el comportamiento de este proveedor.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-116">Options that determine the behavior of this provider.</span></span></param>
        <summary><span data-ttu-id="1fd7e-117">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> con el catálogo y las opciones de composición especificados.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog and composition options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1fd7e-118"><paramref name="catalog" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-118"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Catalog">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Catalog As ComposablePartCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ Catalog { System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Catalog : System.ComponentModel.Composition.Primitives.ComposablePartCatalog" Usage="System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fd7e-119">Obtiene el catálogo que se usa para proporcionar exportaciones.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-119">Gets the catalog that is used to provide exports.</span></span></summary>
        <value><span data-ttu-id="1fd7e-120">Catálogo que <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> usa para producir objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-120">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1fd7e-121">Se ha eliminado <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-121">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1fd7e-122">Libera los recursos que usa <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-122">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="catalogExportProvider.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1fd7e-123">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-123">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd7e-124">Llame a `Dispose` cuando haya terminado de usar <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-124">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span></span> <span data-ttu-id="1fd7e-125">El método `Dispose` deja el <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-125">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> in an unusable state.</span></span> <span data-ttu-id="1fd7e-126">Después de llamar a `Dispose`, debe liberar todas las referencias a la <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-126">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> was occupying.</span></span>  
  
 <span data-ttu-id="1fd7e-127">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="1fd7e-127">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fd7e-128">Realice siempre una llamada a `Dispose` antes de liberar la última referencia al objeto <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-128">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span></span> <span data-ttu-id="1fd7e-129">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-129">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="catalogExportProvider.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="1fd7e-130">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-130"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1fd7e-131">Libera los recursos no administrados que usa <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-131">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="override this.GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="catalogExportProvider.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="1fd7e-132">Condiciones de los objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> que se van a devolver.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-132">The conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to be returned.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="1fd7e-133">Transacción de composición que se va a usar o <see langword="null" /> para deshabilitar la composición transaccional.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-133">The composition transaction to use, or <see langword="null" /> to disable transactional composition.</span></span></param>
        <summary><span data-ttu-id="1fd7e-134">Devuelve todas las exportaciones que coinciden con las condiciones de la importación especificada.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-134">Returns all exports that match the conditions of the specified import.</span></span></summary>
        <returns><span data-ttu-id="1fd7e-135">Colección que contiene todas las exportaciones que cumplen la condición especificada.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-135">A collection that contains all the exports that match the specified condition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd7e-136">Los implementadores no deberían tratar las divergencias relacionadas con la cardinalidad como errores y no deberían producir excepciones para las discrepancias relacionadas con la cardinalidad.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-136">Implementers should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</span></span> <span data-ttu-id="1fd7e-137">Por ejemplo, si la importación solicita exactamente una exportación y el proveedor no tiene ninguna exportación coincidente o más de uno, el <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore%2A> método debe devolver un valor vacío <xref:System.Collections.Generic.IEnumerable%601> colección de <xref:System.ComponentModel.Composition.Primitives.Export> objetos.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-137">For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore%2A> method should return an empty <xref:System.Collections.Generic.IEnumerable%601> collection of <xref:System.ComponentModel.Composition.Primitives.Export> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProvider">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Hosting.ExportProvider SourceProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Hosting.ExportProvider SourceProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceProvider As ExportProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Hosting::ExportProvider ^ SourceProvider { System::ComponentModel::Composition::Hosting::ExportProvider ^ get(); void set(System::ComponentModel::Composition::Hosting::ExportProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceProvider : System.ComponentModel.Composition.Hosting.ExportProvider with get, set" Usage="System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Hosting.ExportProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1fd7e-138">Obtiene o establece el proveedor de exportación que proporciona acceso a exportaciones adicionales.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-138">Gets or sets the export provider that provides access to additional exports.</span></span></summary>
        <value><span data-ttu-id="1fd7e-139">Proveedor de exportación que proporciona a <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> acceso a objetos <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-139">The export provider that provides the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> access to additional <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span> <span data-ttu-id="1fd7e-140">De manera predeterminada, es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-140">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fd7e-141">Debe establecer esta propiedad antes de acceder a los métodos en el <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> objeto.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-141">You must set this property before you access any methods on the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1fd7e-142">Se ha eliminado <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-142">The <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1fd7e-143"><paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-143"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1fd7e-144">Esta propiedad ya se ha establecido.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-144">This property has already been set.</span></span>  
  
<span data-ttu-id="1fd7e-145">O bien</span><span class="sxs-lookup"><span data-stu-id="1fd7e-145">-or-</span></span> 
<span data-ttu-id="1fd7e-146">Ya se ha obtenido acceso a los métodos del objeto <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="1fd7e-146">The methods on the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> object have already been accessed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
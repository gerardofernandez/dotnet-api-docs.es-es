<Type Name="LockingPersistenceProvider" FullName="System.ServiceModel.Persistence.LockingPersistenceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="19b559d5b0423555c24bdb1830acb84cae54d399" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64100608" /></Metadata><TypeSignature Language="C#" Value="public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LockingPersistenceProvider extends System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LockingPersistenceProvider&#xA;Inherits PersistenceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LockingPersistenceProvider abstract : System::ServiceModel::Persistence::PersistenceProvider" />
  <TypeSignature Language="F#" Value="type LockingPersistenceProvider = class&#xA;    inherit PersistenceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2029c-101">Clase base abstracta de la que se derivan todos los proveedores de persistencia de servicio duradero que implementan el bloqueo.</span><span class="sxs-lookup"><span data-stu-id="2029c-101">The abstract base class from which all durable service persistence providers that implement locking are derived.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2029c-102">Además de la persistencia, la clase <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> implementa el bloqueo de los registros de datos de estado del servicio.</span><span class="sxs-lookup"><span data-stu-id="2029c-102">In addition to persistence, the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class implements locking of service state data records.</span></span> <span data-ttu-id="2029c-103">Los métodos que interactúan con datos guardados (como el `Load` método) poseen un parámetro opcional (`lockInstance`) que define si se publicadas o se mantienen bloqueos en los datos en cuestión.</span><span class="sxs-lookup"><span data-stu-id="2029c-103">Methods that interact with persisted data (such as the `Load` method) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LockingPersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LockingPersistenceProvider(Guid id);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.LockingPersistenceProvider : Guid -&gt; System.ServiceModel.Persistence.LockingPersistenceProvider" Usage="new System.ServiceModel.Persistence.LockingPersistenceProvider id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="2029c-104">Identificador único que se asocia con esta instancia de proveedor de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-104">The unique identifier to be associated with this persistence provider instance.</span></span></param>
        <summary><span data-ttu-id="2029c-105">Cuando se implementa en una clase derivada, crea una nueva instancia de la clase <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />, configurada con el valor de identidad especificado.</span><span class="sxs-lookup"><span data-stu-id="2029c-105">When implemented in a derived class, creates a new instance of the <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> class, configured with the specified identity value.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreate">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2029c-106">Comienza una operación asincrónica para crear información de estado de la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-106">Begins an asynchronous operation to create instance state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginCreate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginCreate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2029c-107">Instancia cuya información de estado se guarda en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-107">The instance whose state information is saved into the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="2029c-108">Intervalo en el que debe completarse la operación sin que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-108">The interval in which the operation must be completed without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-109">Delegado que recibe la notificación cuando finaliza la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-109">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-110">Información de estado asociada a la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-110">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2029c-111">Comienza una operación asincrónica para crear información de estado de la instancia en el almacén de persistencia utilizando los parámetros.</span><span class="sxs-lookup"><span data-stu-id="2029c-111">Begins an asynchronous operation to create instance state information in the persistence store using the parameters.</span></span> <span data-ttu-id="2029c-112">Este método no desbloquea la instancia después de guardar la información de estado.</span><span class="sxs-lookup"><span data-stu-id="2029c-112">This method does not unlock the instance after saving the state information.</span></span></summary>
        <returns><span data-ttu-id="2029c-113">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-113">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2029c-114">Este método llama en el método <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A>, que toma un parámetro adicional para determinar si se desbloquea la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-114">This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> method, which takes an additional parameter to determine whether the instance is unlocked.</span></span> <span data-ttu-id="2029c-115">Este método pasa `false` como un valor para este parámetro al método de llamada.</span><span class="sxs-lookup"><span data-stu-id="2029c-115">This method passes `false` as a value for this parameter to the calling method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, unlockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, bool unlockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginCreate : obj * TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginCreate (instance, timeout, unlockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2029c-116">Instancia cuya información de estado se guarda en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-116">The instance whose state information is saved into the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="2029c-117">Intervalo en el que debe completarse la operación sin que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-117">The interval in which the operation must be completed without timing out.</span></span></param>
        <param name="unlockInstance"><span data-ttu-id="2029c-118"><see langword="true" /> si la instancia debe desbloquearse en el almacén de persistencia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-118"><see langword="true" /> if the instance must be unlocked in the persistence store; otherwise <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-119">Delegado que recibe la notificación cuando finaliza la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-119">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-120">Información de estado asociada a la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-120">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2029c-121">Comienza una operación asincrónica para crear información de estado de la instancia en el almacén de persistencia utilizando los parámetros.</span><span class="sxs-lookup"><span data-stu-id="2029c-121">Begins an asynchronous operation to create instance state information in the persistence store using the parameters.</span></span> <span data-ttu-id="2029c-122">Este método desbloquea la instancia después de guardar el estado de la instancia si el valor del parámetro <paramref name="unlockInstance" /> es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-122">This method unlocks the instance after saving the instance state if the value of the <paramref name="unlockInstance" /> parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="2029c-123">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-123">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2029c-124">Comienza una operación asincrónica para cargar una instancia basada en la información de estado del almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-124">Begins an asynchronous operation to load an instance based on state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoad : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoad (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-125">Intervalo en el que debe completarse la operación sin que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-125">The interval in which the operation must be completed without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-126">Delegado que recibe la notificación cuando finaliza la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-126">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-127">Información de estado asociada a la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-127">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2029c-128">Comienza una operación asincrónica para cargar una instancia basada en la información de estado del almacén de persistencia usando los parámetros.</span><span class="sxs-lookup"><span data-stu-id="2029c-128">Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters.</span></span> <span data-ttu-id="2029c-129">Este método no bloquea la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-129">This method does not lock the instance.</span></span></summary>
        <returns><span data-ttu-id="2029c-130">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-130">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2029c-131">Este método llama en <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, que toma un parámetro adicional que especifica si la instancia debe bloquearse en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-131">This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>, which takes an additional parameter that specifies whether the instance must be locked in the persistence store.</span></span> <span data-ttu-id="2029c-132">Este método pasa `false` como un valor para este parámetro al método de llamada.</span><span class="sxs-lookup"><span data-stu-id="2029c-132">This method passes `false` as a value for this parameter to the calling method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, lockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, bool lockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoad : TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoad (timeout, lockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-133">Intervalo en el que debe completarse la operación antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-133">An interval in which the operation must be completed before timing out.</span></span></param>
        <param name="lockInstance"><span data-ttu-id="2029c-134"><see langword="true" /> si se debe bloquear la instancia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-134"><see langword="true" /> if the instance must be locked; otherwise <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-135">Delegado que recibe la notificación cuando finaliza la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-135">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-136">Información de estado asociada a la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-136">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2029c-137">Comienza una operación asincrónica para cargar una instancia basada en la información de estado del almacén de persistencia usando los parámetros.</span><span class="sxs-lookup"><span data-stu-id="2029c-137">Begins an asynchronous operation to load an instance based on state information in the persistence store using the parameters.</span></span> <span data-ttu-id="2029c-138">Este método bloquea la instancia después de cargar el estado de la instancia si el valor del parámetro <paramref name="lockInstance" /> es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-138">This method locks the instance after loading the instance state if the value of the <paramref name="lockInstance" /> parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="2029c-139">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-139">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadIfChanged">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2029c-140">Comienza una operación asincrónica para cargar la información de estado de la instancia desde el almacén de persistencia si la información de estado ha sufrido cambios desde la última vez que el autor de llamada la cargó.</span><span class="sxs-lookup"><span data-stu-id="2029c-140">Begins an asynchronous operation to load the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoadIfChanged (timeout, instanceToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-141">Período de tiempo después del cual el proveedor de persistencia anula esta operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-141">The time period after which the persistence provider aborts this operation.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="2029c-142">El token devuelto por un método <see langword="Create" /> o <see langword="Update" /> anterior, que representa el estado actual que tiene el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="2029c-142">The token returned by a previous <see langword="Create" /> or <see langword="Update" /> method that represents the current state held by the caller.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-143">Método al que se llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-143">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-144">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</span><span class="sxs-lookup"><span data-stu-id="2029c-144">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="2029c-145">Cuando se implementa en una clase derivada, representa el principio de la fase LoadIfChanged.</span><span class="sxs-lookup"><span data-stu-id="2029c-145">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span></span> <span data-ttu-id="2029c-146">La fase LoadIfChanged se produce cuando los datos de estado se cargan en el proveedor de persistencia desde el almacén de persistencia y los datos de estado del almacén de persistencia han sido modificados.</span><span class="sxs-lookup"><span data-stu-id="2029c-146">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed.</span></span> <span data-ttu-id="2029c-147">Esta llamada al método no bloquea la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-147">This method call does not lock the instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="2029c-148">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-148">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, lockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, bool lockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginLoadIfChanged : TimeSpan * obj * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginLoadIfChanged (timeout, instanceToken, lockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-149">Período de tiempo después del cual el proveedor de persistencia anula esta operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-149">The time period after which the persistence provider aborts this operation.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="2029c-150">El token devuelto por un método <see langword="Create" /> o <see langword="Update" /> anterior, que representa el estado actual que tiene el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="2029c-150">The token returned by a previous <see langword="Create" /> or <see langword="Update" /> method that represents the current state held by the caller.</span></span></param>
        <param name="lockInstance"><span data-ttu-id="2029c-151"><see langword="true" /> si la instancia se bloquea en el almacén de persistencia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-151"><see langword="true" /> if the instance is locked in the persistence store; otherwise <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-152">Método al que se llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-152">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-153">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</span><span class="sxs-lookup"><span data-stu-id="2029c-153">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="2029c-154">Cuando se implementa en una clase derivada, representa el principio de la fase LoadIfChanged.</span><span class="sxs-lookup"><span data-stu-id="2029c-154">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span></span> <span data-ttu-id="2029c-155">La fase LoadIfChanged se produce cuando los datos de estado se cargan en el proveedor de persistencia desde el almacén de persistencia y los datos de estado del almacén de persistencia han sido modificados.</span><span class="sxs-lookup"><span data-stu-id="2029c-155">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store and the state data in the persistence store has been changed.</span></span> <span data-ttu-id="2029c-156">Esta llamada al método le permite especificar si desea bloquear la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-156">This method call lets you specify whether you want to lock the instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="2029c-157">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-157">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnlock">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUnlock(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUnlock (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUnlock(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUnlock : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUnlock (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-158">Intervalo en el que debe completarse la operación antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-158">An interval in which the operation must be completed before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-159">Delegado que recibe la notificación cuando finaliza la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-159">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-160">Información de estado asociada a la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-160">The state information associated with the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2029c-161">Comienza una operación asincrónica para desbloquear una instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-161">Begins an asynchronous operation to unlock an instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="2029c-162">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-162">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUpdate">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2029c-163">Comienza una operación asincrónica para actualizar información de estado de la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-163">Begins an asynchronous operation to update instance state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginUpdate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUpdate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2029c-164">Instancia cuya información de estado se está actualizando en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-164">The instance whose state information is being updated in the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="2029c-165">Intervalo en el que debe completarse la operación sin que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-165">The interval in which the operation must complete without timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-166">Delegado que recibe la notificación cuando finaliza la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-166">The delegate that receives the notification when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-167">Información de estado sobre la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-167">The state information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2029c-168">Comienza una operación asincrónica para actualizar información de estado de la instancia en el almacén de persistencia utilizando los parámetros que se han pasado.</span><span class="sxs-lookup"><span data-stu-id="2029c-168">Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed.</span></span> <span data-ttu-id="2029c-169">Esta operación no desbloquea la instancia en el almacén de instancias.</span><span class="sxs-lookup"><span data-stu-id="2029c-169">This operation does not unlock the instance in the instance store.</span></span></summary>
        <returns><span data-ttu-id="2029c-170">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-170">The status of an asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2029c-171">Este método llama a la <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> y pasa un `false` valor para el `unlockInstance` parámetro.</span><span class="sxs-lookup"><span data-stu-id="2029c-171">This method calls into the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A> method and passes a `false` value for the `unlockInstance` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, unlockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, bool unlockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.BeginUpdate : obj * TimeSpan * bool * AsyncCallback * obj -&gt; IAsyncResult" Usage="lockingPersistenceProvider.BeginUpdate (instance, timeout, unlockInstance, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2029c-172">Instancia cuya información de estado se está actualizando en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-172">The instance whose state information is being updated in the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="2029c-173">Intervalo en el que debe completarse la operación sin que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-173">The interval in which the operation must complete without timing out.</span></span></param>
        <param name="unlockInstance"><span data-ttu-id="2029c-174"><see langword="true" /> si se debe bloquear la instancia después de actualizar el estado de la instancia en el almacén de persistencia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-174"><see langword="true" /> if the instance must be locked after the instance state is updated in the persistence store; otherwise <see langword="false" />.</span></span></param>
        <param name="callback"><span data-ttu-id="2029c-175">Delegado que recibe la notificación cuando finaliza la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-175">The delegate that receives the notification when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="2029c-176">Información de estado sobre la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-176">The state information about the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="2029c-177">Comienza una operación asincrónica para actualizar información de estado de la instancia en el almacén de persistencia utilizando los parámetros que se han pasado.</span><span class="sxs-lookup"><span data-stu-id="2029c-177">Begins an asynchronous operation to update instance state information in the persistence store using the parameters passed.</span></span> <span data-ttu-id="2029c-178">Esta operación bloquea la instancia en el almacén de persistencia si el valor del parámetro <paramref name="unlockInstance" /> es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-178">This operation locks the instance in the persistence store if the value of the <paramref name="unlockInstance" /> parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="2029c-179">Estado de una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="2029c-179">The status of an asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2029c-180">Crea información de estado de la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-180">Creates instance state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Create : obj * TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Create (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2029c-181">Objeto de instancia cuya información de estado debe guardarse en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-181">The instance object whose state information must be saved into the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="2029c-182">Intervalo en el que debe completarse la operación antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-182">The interval in which the operation must complete before timing out.</span></span></param>
        <summary><span data-ttu-id="2029c-183">Crea información de estado de la instancia en el almacén de persistencia usando los parámetros pasados en el método.</span><span class="sxs-lookup"><span data-stu-id="2029c-183">Creates instance state information in the persistence store using parameters passed into the method.</span></span> <span data-ttu-id="2029c-184">Este método no desbloquea la instancia en el almacén de persistencia después de guardar el estado de la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-184">This method does not unlock the instance in the persistence store after saving the instance state.</span></span></summary>
        <returns><span data-ttu-id="2029c-185">Información de estado.</span><span class="sxs-lookup"><span data-stu-id="2029c-185">The state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan, unlockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="F#" Value="override this.Create : obj * TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Create (instance, timeout, unlockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2029c-186">Objeto de instancia cuya información de estado se guarda en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-186">The instance object whose state information is saved into the persistence store.</span></span></param>
        <param name="timeout"><span data-ttu-id="2029c-187">Intervalo en el que debe completarse la operación antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="2029c-187">The interval within which the operation must complete before timing out.</span></span></param>
        <param name="unlockInstance"><span data-ttu-id="2029c-188"><see langword="true" /> si la instancia debe desbloquearse en el almacén de persistencia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-188"><see langword="true" /> if the instance must be unlocked in the persistence store; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2029c-189">Este método crea información de estado de la instancia en el almacén de persistencia usando los parámetros pasados en el método.</span><span class="sxs-lookup"><span data-stu-id="2029c-189">This method creates instance state information in the persistence store using parameters passed into the method.</span></span> <span data-ttu-id="2029c-190">El método desbloquea la instancia en el almacén de instancias si el valor del parámetro <paramref name="unlockInstance" /> es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-190">The method unlocks the instance in the instance store if the value of the <paramref name="unlockInstance" /> parameter is <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="2029c-191">Información de estado.</span><span class="sxs-lookup"><span data-stu-id="2029c-191">The state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnlock">
      <MemberSignature Language="C#" Value="public abstract void EndUnlock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUnlock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndUnlock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndUnlock(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUnlock : IAsyncResult -&gt; unit" Usage="lockingPersistenceProvider.EndUnlock result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="2029c-192">Resultado devuelto por la operación de desbloqueo.</span><span class="sxs-lookup"><span data-stu-id="2029c-192">The result returned by the unlock operation.</span></span></param>
        <summary><span data-ttu-id="2029c-193">Finaliza la operación asincrónica para desbloquear una instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-193">Ends the asynchronous operation to unlock an instance in the persistence store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2029c-194">Carga información de estado de la instancia desde el almacén de instancias.</span><span class="sxs-lookup"><span data-stu-id="2029c-194">Loads instance state information from the instance store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Load(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Load : TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Load timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-195">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="2029c-195">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="2029c-196">Carga información de estado del servicio desde el almacén de persistencia sin bloquear la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-196">Loads service state information from the persistence store without locking the instance.</span></span></summary>
        <returns><span data-ttu-id="2029c-197">Información del estado del servicio.</span><span class="sxs-lookup"><span data-stu-id="2029c-197">The service state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2029c-198">Este método invoca el <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> método con `lockInstance` parámetro establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="2029c-198">This method invokes the <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A> method with `lockInstance` parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout, bool lockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout, bool lockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan, lockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout, bool lockInstance);" />
      <MemberSignature Language="F#" Value="override this.Load : TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Load (timeout, lockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-199">Período después del cual el proveedor de persistencia anula esta operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-199">The period after which the persistence provider aborts this operation.</span></span></param>
        <param name="lockInstance"><span data-ttu-id="2029c-200"><see langword="true" /> si se debe bloquear la instancia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-200"><see langword="true" /> if the instance should be locked; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2029c-201">Carga información de estado desde el almacén de persistencia después de bloquear la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-201">Loads state information from the persistence store after locking the instance.</span></span></summary>
        <returns><span data-ttu-id="2029c-202">Información de estado.</span><span class="sxs-lookup"><span data-stu-id="2029c-202">The state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIfChanged">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2029c-203">Carga la información de estado de la instancia desde el almacén de persistencia si la información de estado ha cambiado desde la última vez que el autor de llamada cargó la información.</span><span class="sxs-lookup"><span data-stu-id="2029c-203">Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="override this.LoadIfChanged : TimeSpan * obj *  -&gt; bool" Usage="lockingPersistenceProvider.LoadIfChanged (timeout, instanceToken, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-204">Período de tiempo después del cual el proveedor de persistencia anula esta operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-204">The time period after which the persistence provider aborts this operation.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="2029c-205">El token devuelto por las llamadas al método <see langword="Create" /> o <see langword="Update" /> anterior, que representa el estado actual que tiene el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="2029c-205">The token returned by the previous <see langword="Create" /> or <see langword="Update" /> method calls, which represents the current state held by the caller.</span></span></param>
        <param name="instance"><span data-ttu-id="2029c-206">Información del estado de la instancia real.</span><span class="sxs-lookup"><span data-stu-id="2029c-206">The actual instance state information.</span></span></param>
        <summary><span data-ttu-id="2029c-207">Carga la información de estado de la instancia desde el almacén de persistencia si la información de estado ha cambiado desde la última vez que el autor de llamada cargó la información.</span><span class="sxs-lookup"><span data-stu-id="2029c-207">Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</span></span> <span data-ttu-id="2029c-208">Este método no bloquea la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-208">This method does not lock the instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="2029c-209"><see langword="true" /> si la instancia debe bloquearse en el almacén de persistencia al final de esta operación; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-209"><see langword="true" /> if the instance should be locked in the persistence store at the end of this operation; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, lockInstance As Boolean, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, bool lockInstance, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="override this.LoadIfChanged : TimeSpan * obj * bool *  -&gt; bool" Usage="lockingPersistenceProvider.LoadIfChanged (timeout, instanceToken, lockInstance, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-210">Período de tiempo después del cual el proveedor de persistencia anula esta operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-210">The time period after which the persistence provider aborts this operation.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="2029c-211">El token devuelto por las llamadas al método Create o Update anterior, que representa el estado actual que tiene el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="2029c-211">The token returned by the previous Create or Update method calls, which represents the current state held by the caller.</span></span></param>
        <param name="lockInstance"><span data-ttu-id="2029c-212"><see langword="true" /> si la instancia debe bloquearse en el almacén de persistencia al final de esta operación; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-212"><see langword="true" /> if the instance should be locked in the persistence store at the end of this operation; otherwise <see langword="false" />.</span></span></param>
        <param name="instance"><span data-ttu-id="2029c-213">Información del estado de la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-213">The instance state information.</span></span></param>
        <summary><span data-ttu-id="2029c-214">Carga la información de estado de la instancia desde el almacén de persistencia si la información de estado ha cambiado desde la última vez que el autor de llamada cargó la información.</span><span class="sxs-lookup"><span data-stu-id="2029c-214">Loads the instance state information from the persistence store if the state information has been changed since the last time the information was loaded by the caller.</span></span> <span data-ttu-id="2029c-215">Este método también permite que el autor de llamada especifique si desea bloquear la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-215">This method also lets the caller specify whether to lock the instance in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="2029c-216"><see langword="true" /> si la instancia debe bloquearse en el almacén de persistencia al final de esta operación; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-216"><see langword="true" /> if the instance should be locked in the persistence store at the end of this operation; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public abstract void Unlock (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlock(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unlock (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unlock(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Unlock : TimeSpan -&gt; unit" Usage="lockingPersistenceProvider.Unlock timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="2029c-217">Período de tiempo después del cual el proveedor de persistencia anula la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-217">The time period after which the persistence provider aborts the operation.</span></span></param>
        <summary><span data-ttu-id="2029c-218">Desbloquea la instancia cuyo Id. se especifica al construir el objeto <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-218">Unlocks the instance whose ID is specified when constructing the <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> object in the persistence store.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2029c-219">Actualiza la información de estado de la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-219">Updates the instance state information in the persistence store.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.Update : obj * TimeSpan -&gt; obj" Usage="lockingPersistenceProvider.Update (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2029c-220">Información del estado de la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-220">The instance state information.</span></span></param>
        <param name="timeout"><span data-ttu-id="2029c-221">Período de tiempo después del cual el proveedor de persistencia anula la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-221">The time period after which the persistence provider aborts the operation.</span></span></param>
        <summary><span data-ttu-id="2029c-222">Cuando se implementa en una clase derivada, actualiza la información de estado de la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-222">When implemented in a derived class, updates the instance state information in the persistence store.</span></span> <span data-ttu-id="2029c-223">Este método no desbloquea la instancia después de actualizar la información de estado de la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-223">This method does not unlock the instance after updating the instance state information in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="2029c-224">Información del estado de la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-224">The instance state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan, unlockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="F#" Value="override this.Update : obj * TimeSpan * bool -&gt; obj" Usage="lockingPersistenceProvider.Update (instance, timeout, unlockInstance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="2029c-225">Información del estado de la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-225">The instance state information.</span></span></param>
        <param name="timeout"><span data-ttu-id="2029c-226">Período de tiempo después del cual el proveedor de persistencia anula la operación.</span><span class="sxs-lookup"><span data-stu-id="2029c-226">The time period after which the persistence provider aborts the operation.</span></span></param>
        <param name="unlockInstance"><span data-ttu-id="2029c-227"><see langword="true" /> si se desbloquea la instancia una vez actualizada la información de estado de la instancia; en caso contrario, false <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2029c-227"><see langword="true" /> if the instance is unlocked after the instance state information is updated; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="2029c-228">Cuando se implementa en una clase derivada, actualiza la información de estado de la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-228">When implemented in a derived class, updates the instance state information in the persistence store.</span></span> <span data-ttu-id="2029c-229">Este método no desbloquea la instancia después de actualizar la información de estado de la instancia en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="2029c-229">This method does not unlock the instance after updating the instance state information in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="2029c-230">Información del estado de la instancia.</span><span class="sxs-lookup"><span data-stu-id="2029c-230">The instance state information.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="PersistenceProvider" FullName="System.ServiceModel.Persistence.PersistenceProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cf1e6b705942f473aee226eff7efff2f247a7972" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64031082" /></Metadata><TypeSignature Language="C#" Value="public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceProvider extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceProvider&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceProvider abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type PersistenceProvider = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="16743-101">Clase base abstracta de la que se derivan todos los proveedores de persistencia de servicio duradero.</span><span class="sxs-lookup"><span data-stu-id="16743-101">The abstract base class from which all durable service persistence providers are derived.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16743-102">Los usuarios pueden crear clases derivadas de este tipo para la creación de proveedores de persistencia de servicio duradero que utilizan almacenes de persistencia personalizados, como las bases de datos de otro fabricante, el sistema de archivos, o los sistemas de almacenamiento a los que se obtiene acceso de forma remota.</span><span class="sxs-lookup"><span data-stu-id="16743-102">Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely.</span></span> <span data-ttu-id="16743-103">Para crear una implementación proporcionada por el sistema de este tipo que use Microsoft SQL Server como almacén de persistencia, vea <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span><span class="sxs-lookup"><span data-stu-id="16743-103">To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="16743-104">Al crear implementaciones del proveedor de persistencia, es importante mantener la identidad original del subproceso en los métodos del nuevo proveedor (como por ejemplo <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>).</span><span class="sxs-lookup"><span data-stu-id="16743-104">When creating persistence provider implementations, it is important to maintain the thread's original identity in the new provider's methods (such as <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span></span> <span data-ttu-id="16743-105">De lo contrario, se pueden crear vacíos de seguridad, ya que las operaciones se ejecutarían con la identidad equivocada.</span><span class="sxs-lookup"><span data-stu-id="16743-105">Otherwise, security loopholes could be created, because operations would then run under the wrong identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16743-106">Para una implementación de este tipo que use el sistema de archivos como almacén de persistencia, vea el archivo FilePersistenceProviderFactory.cs en el ejemplo DurableServiceFactory de SDK.</span><span class="sxs-lookup"><span data-stu-id="16743-106">For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceProvider(Guid id);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.PersistenceProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="new System.ServiceModel.Persistence.PersistenceProvider id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="16743-107">Identificador único de los datos de estado del servicio que se están guardando.</span><span class="sxs-lookup"><span data-stu-id="16743-107">The unique identifier of the service state data being saved.</span></span></param>
        <summary><span data-ttu-id="16743-108">Cuando se implementa en una clase derivada, inicializa una instancia nueva de la clase <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span><span class="sxs-lookup"><span data-stu-id="16743-108">When implemented in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-109">El siguiente código muestra cómo utilizar el constructor <xref:System.ServiceModel.Persistence.PersistenceProvider>.</span><span class="sxs-lookup"><span data-stu-id="16743-109">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor.</span></span> <span data-ttu-id="16743-110">Este ejemplo de código forma parte del ejemplo DurableServiceFactory de SDK del archivo FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="16743-110">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="16743-111">Para obtener más información, vea el ejemplo DurableServiceFactory de SDK.</span><span class="sxs-lookup"><span data-stu-id="16743-111">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginCreate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="16743-112">Estado real de la instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-112">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="16743-113">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-113">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="16743-114">Método al que se llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-114">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="16743-115">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</span><span class="sxs-lookup"><span data-stu-id="16743-115">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="16743-116">Cuando se implementa en una clase derivada, representa el principio de la fase Create.</span><span class="sxs-lookup"><span data-stu-id="16743-116">When implemented in a derived class, represents the beginning of the Create phase.</span></span> <span data-ttu-id="16743-117">La fase Create se produce cuando los registros de instancia de servicio se crean primero en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-117">The Create phase occurs when service instance records are first created in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-118">El estado de la llamada de método asincrónico <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="16743-118">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-119">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-119">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#14](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDelete(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginDelete (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginDelete(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDelete : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginDelete (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="16743-120">Estado real de la instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-120">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="16743-121">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-121">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="16743-122">Método al que se llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-122">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="16743-123">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</span><span class="sxs-lookup"><span data-stu-id="16743-123">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="16743-124">Cuando se implementa en una clase derivada, representa el principio de la fase Delete.</span><span class="sxs-lookup"><span data-stu-id="16743-124">When implemented in a derived class, represents the beginning of the Delete phase.</span></span> <span data-ttu-id="16743-125">La fase Delete se produce cuando los datos de estado del servicio se eliminan de manera permanente del almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-125">The Delete phase occurs when service state data is permanently deleted from the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-126">El estado de la llamada de método asincrónico <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="16743-126">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-127">El siguiente ejemplo de código muestra cómo implementar el método `BeginDelete`.</span><span class="sxs-lookup"><span data-stu-id="16743-127">The following code demonstrates how to implement the `BeginDelete` method.</span></span> <span data-ttu-id="16743-128">Este ejemplo de código forma parte del ejemplo DurableServiceFactory de SDK del archivo FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="16743-128">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="16743-129">Para obtener más información, vea el ejemplo DurableServiceFactory de SDK.</span><span class="sxs-lookup"><span data-stu-id="16743-129">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#6](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoad : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoad (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="16743-130">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-130">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="16743-131">Método al que se llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-131">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="16743-132">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</span><span class="sxs-lookup"><span data-stu-id="16743-132">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="16743-133">Cuando se implementa en una clase derivada, representa el principio de la fase Load.</span><span class="sxs-lookup"><span data-stu-id="16743-133">When implemented in a derived class, represents the beginning of the Load phase.</span></span> <span data-ttu-id="16743-134">La fase Load se produce cuando los datos de estado se cargan en el proveedor de persistencia desde el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-134">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-135">El estado de la llamada de método asincrónico <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="16743-135">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-136">El siguiente ejemplo de código muestra cómo implementar el método `BeginLoad`.</span><span class="sxs-lookup"><span data-stu-id="16743-136">The following code demonstrates how to implement the `BeginLoad` method.</span></span> <span data-ttu-id="16743-137">Este ejemplo de código forma parte del ejemplo DurableServiceFactory de SDK del archivo FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="16743-137">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="16743-138">Para obtener más información, vea el ejemplo DurableServiceFactory de SDK.</span><span class="sxs-lookup"><span data-stu-id="16743-138">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#7](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoadIfChanged (timeout, instanceToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="16743-139">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-139">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="16743-140">El token devuelto por un método <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> o <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> anterior, que representa el estado actual que tiene el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="16743-140">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> that represents the current state held by the caller.</span></span></param>
        <param name="callback"><span data-ttu-id="16743-141">Método al que se llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-141">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="16743-142">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</span><span class="sxs-lookup"><span data-stu-id="16743-142">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="16743-143">Cuando se implementa en una clase derivada, representa el principio de la fase LoadIfChanged.</span><span class="sxs-lookup"><span data-stu-id="16743-143">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span></span> <span data-ttu-id="16743-144">La fase LoadIfChanged se produce cuando los datos de estado se cargan en el proveedor de persistencia desde el almacén de persistencia y los datos de estado del almacén de persistencia han sido modificados.</span><span class="sxs-lookup"><span data-stu-id="16743-144">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span></span></summary>
        <returns><span data-ttu-id="16743-145">El estado de la llamada de método asincrónico <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="16743-145">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-146">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-146">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#11](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUpdate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginUpdate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="16743-147">Estado real de la instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-147">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="16743-148">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-148">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="callback"><span data-ttu-id="16743-149">Método al que se llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-149">The method to be called when the operation is completed.</span></span></param>
        <param name="state"><span data-ttu-id="16743-150">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</span><span class="sxs-lookup"><span data-stu-id="16743-150">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span></span></param>
        <summary><span data-ttu-id="16743-151">Cuando se implementa en una clase derivada, representa el principio de la fase Update.</span><span class="sxs-lookup"><span data-stu-id="16743-151">When implemented in a derived class, represents the beginning of the Update phase.</span></span> <span data-ttu-id="16743-152">La fase Update se produce cuando los datos de estado del servicio se actualizan en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-152">The Update phase occurs when service state data is updated in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-153">El estado de la llamada de método asincrónico <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="16743-153">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-154">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-154">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#17](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Create : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Create (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="16743-155">Estado real de la instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-155">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="16743-156">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-156">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="16743-157">Cuando se implementa en una clase derivada, crea un registro del estado del servicio en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-157">When implemented in a derived class, creates a service state record in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-158">Token de la instancia que se corresponde con el estado que se acaba de guardar.</span><span class="sxs-lookup"><span data-stu-id="16743-158">The instance token corresponding to the state just saved.</span></span> <span data-ttu-id="16743-159">Esto puede pasarse a <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar si el estado en el almacén de persistencia difiere del estado cuando se llamó a “Create”.</span><span class="sxs-lookup"><span data-stu-id="16743-159">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-160">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-160">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#15](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (instance As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Delete : obj * TimeSpan -&gt; unit" Usage="persistenceProvider.Delete (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="16743-161">Estado real de la instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-161">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="16743-162">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-162">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="16743-163">Cuando se implementa en una clase derivada, elimina de manera permanente la información de estado del servicio del almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-163">When implemented in a derived class, permanently deletes service state information from the persistence store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-164">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-164">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> method.</span></span> <span data-ttu-id="16743-165">Este ejemplo de código forma parte del ejemplo DurableServiceFactory de SDK del archivo FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="16743-165">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="16743-166">Para obtener más información, vea el ejemplo DurableServiceFactory de SDK.</span><span class="sxs-lookup"><span data-stu-id="16743-166">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#9](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public abstract object EndCreate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndCreate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndCreate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndCreate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCreate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndCreate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="16743-167">Referencia al resultado de la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-167">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="16743-168">Cuando se implementa en una clase derivada, representa el final de la fase Create.</span><span class="sxs-lookup"><span data-stu-id="16743-168">When implemented in a derived class, represents the end of the Create phase.</span></span> <span data-ttu-id="16743-169">La fase Create se produce cuando los registros de estado de servicio se crean primero en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-169">The Create phase occurs when service state records are first created in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-170">Token de la instancia que se corresponde con el estado que se acaba de guardar.</span><span class="sxs-lookup"><span data-stu-id="16743-170">The instance token corresponding to the state just saved.</span></span> <span data-ttu-id="16743-171">Esto puede pasarse a <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar si el estado en el almacén de persistencia difiere del estado cuando se llamó a “Create”.</span><span class="sxs-lookup"><span data-stu-id="16743-171">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-172">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-172">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#16](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDelete">
      <MemberSignature Language="C#" Value="public abstract void EndDelete (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDelete(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndDelete (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndDelete(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDelete : IAsyncResult -&gt; unit" Usage="persistenceProvider.EndDelete result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="16743-173">Referencia al resultado de la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-173">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="16743-174">Cuando se implementa en una clase derivada, representa el final de la fase Delete.</span><span class="sxs-lookup"><span data-stu-id="16743-174">When implemented in a derived class, represents the end of the Delete phase.</span></span> <span data-ttu-id="16743-175">La fase Delete se produce cuando los datos de estado se eliminan de manera permanente del almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-175">The Delete phase occurs when state data is permanently deleted from the persistence store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-176">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-176">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> method.</span></span> <span data-ttu-id="16743-177">Este ejemplo de código forma parte del ejemplo DurableServiceFactory de SDK del archivo FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="16743-177">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="16743-178">Para obtener más información, vea el ejemplo DurableServiceFactory de SDK.</span><span class="sxs-lookup"><span data-stu-id="16743-178">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#5](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public abstract object EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndLoad (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndLoad : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="16743-179">Referencia al resultado de la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-179">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="16743-180">Cuando se implementa en una clase derivada, representa el final de la fase Load.</span><span class="sxs-lookup"><span data-stu-id="16743-180">When implemented in a derived class, represents the end of the Load phase.</span></span> <span data-ttu-id="16743-181">La fase Load se produce cuando los datos de estado se cargan en el proveedor de persistencia desde el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-181">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-182">Información del estado del servicio.</span><span class="sxs-lookup"><span data-stu-id="16743-182">The service state information.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-183">El siguiente código muestra cómo utilizar el método `EndLoad`.</span><span class="sxs-lookup"><span data-stu-id="16743-183">The following code demonstrates how to use the `EndLoad` method.</span></span> <span data-ttu-id="16743-184">Este ejemplo de código forma parte del ejemplo DurableServiceFactory de SDK del archivo FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="16743-184">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="16743-185">Para obtener más información, vea el ejemplo DurableServiceFactory de SDK.</span><span class="sxs-lookup"><span data-stu-id="16743-185">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndLoadIfChanged(class System.IAsyncResult result, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndLoadIfChanged (result As IAsyncResult, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndLoadIfChanged(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member EndLoadIfChanged : IAsyncResult *  -&gt; bool&#xA;override this.EndLoadIfChanged : IAsyncResult *  -&gt; bool" Usage="persistenceProvider.EndLoadIfChanged (result, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="16743-186">Referencia al resultado de la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-186">A reference to the result of the operation.</span></span></param>
        <param name="instance"><span data-ttu-id="16743-187">Estado real de la instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-187">The actual instance state.</span></span></param>
        <summary><span data-ttu-id="16743-188">Cuando se implementa en una clase derivada, representa el final de la fase LoadIfChanged.</span><span class="sxs-lookup"><span data-stu-id="16743-188">When implemented in a derived class, represents the end of the LoadIfChanged phase.</span></span> <span data-ttu-id="16743-189">La fase LoadIfChanged se produce cuando los datos de estado se cargan en el proveedor de persistencia desde el almacén de persistencia y los datos de estado del almacén de persistencia han sido modificados.</span><span class="sxs-lookup"><span data-stu-id="16743-189">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span></span></summary>
        <returns><span data-ttu-id="16743-190"><see langword="true" /> si el parámetro <see langword="out" /> de la instancia se ha establecido con la última copia del almacén de persistencia; <see langword="false" /> si ya se ha actualizado el estado almacenado de manera local en memoria caché.</span><span class="sxs-lookup"><span data-stu-id="16743-190"><see langword="true" /> if the instance <see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up-to-date.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-191">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-191">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#12](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public abstract object EndUpdate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndUpdate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndUpdate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndUpdate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUpdate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndUpdate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="16743-192">Referencia al resultado de la operación.</span><span class="sxs-lookup"><span data-stu-id="16743-192">A reference to the result of the operation.</span></span></param>
        <summary><span data-ttu-id="16743-193">Representa el fin de la fase Update.</span><span class="sxs-lookup"><span data-stu-id="16743-193">Represents the end of the Update phase.</span></span> <span data-ttu-id="16743-194">La fase Update se produce cuando los registros de estado de servicio se actualizan en el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-194">The Update phase occurs when service state records are updated in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-195">Token de la instancia que se corresponde con el estado que se acaba de guardar.</span><span class="sxs-lookup"><span data-stu-id="16743-195">The instance token corresponding to the state just saved.</span></span> <span data-ttu-id="16743-196">Esto puede pasarse a <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar si el estado en el almacén de persistencia difiere del estado cuando se llamó a “Create”.</span><span class="sxs-lookup"><span data-stu-id="16743-196">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-197">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-197">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#19](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="16743-198">Representa el <see cref="T:System.Guid" /> asociado con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-198">Represents the <see cref="T:System.Guid" /> associated with this instance.</span></span></summary>
        <value><span data-ttu-id="16743-199">GUID asociado con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-199">The GUID associated with this instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-200">El siguiente ejemplo de código muestra cómo utilizar la propiedad <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-200">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> property.</span></span>  
  
 [!code-csharp[PersistenceProvider#10](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Load : TimeSpan -&gt; obj" Usage="persistenceProvider.Load timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="16743-201">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-201">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="16743-202">Cuando se implementa en una clase derivada, carga la información de estado del servicio desde el almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-202">When implemented in a derived class, loads service state information from the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-203">Estado de la instancia cargada.</span><span class="sxs-lookup"><span data-stu-id="16743-203">The loaded instance state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="16743-204">Si no se revierten los cambios realizados en el token de seguridad del método <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>, permanecen vigentes durante el resto del procesamiento de ese mensaje.</span><span class="sxs-lookup"><span data-stu-id="16743-204">Changes made to the security token in the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method, if not reverted, stay in effect for the remainder of that message's processing.</span></span> <span data-ttu-id="16743-205">Esto significa que el código de usuario de la operación del servicio, la ruta de acceso del mensaje de respuesta a través del distribuidor, así como cualquier ruta de acceso a errores, se ejecutarán en el contexto de seguridad cambiado.</span><span class="sxs-lookup"><span data-stu-id="16743-205">This means that the service operation's user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="16743-206">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-206">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method.</span></span> <span data-ttu-id="16743-207">Este ejemplo de código forma parte del ejemplo DurableServiceFactory de SDK del archivo FilePersistenceProviderFactory.cs.</span><span class="sxs-lookup"><span data-stu-id="16743-207">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="16743-208">Para obtener más información, vea el ejemplo DurableServiceFactory de SDK.</span><span class="sxs-lookup"><span data-stu-id="16743-208">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#3](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member LoadIfChanged : TimeSpan * obj *  -&gt; bool&#xA;override this.LoadIfChanged : TimeSpan * obj *  -&gt; bool" Usage="persistenceProvider.LoadIfChanged (timeout, instanceToken, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="16743-209">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-209">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <param name="instanceToken"><span data-ttu-id="16743-210">Token devuelto por un <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> o <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> anterior, que representa el estado actual que tiene el autor de la llamada.</span><span class="sxs-lookup"><span data-stu-id="16743-210">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />, which represents the current state held by the caller.</span></span></param>
        <param name="instance"><span data-ttu-id="16743-211">Estado real de la instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-211">The actual instance state.</span></span></param>
        <summary><span data-ttu-id="16743-212">Cuando se implementa en una clase derivada, carga información de estado del servicio desde el almacén de persistencia, si esos datos han cambiado.</span><span class="sxs-lookup"><span data-stu-id="16743-212">When implemented in a derived class, loads service state information from the persistence store if that data has been changed.</span></span></summary>
        <returns><span data-ttu-id="16743-213"><see langword="true" /> si el parámetro <see langword="out" /> de <paramref name="instance" /> se ha establecido con la última copia del almacén de persistencia; <see langword="false" /> si ya se ha actualizado el estado almacenado de manera local en memoria caché.</span><span class="sxs-lookup"><span data-stu-id="16743-213"><see langword="true" /> if the <paramref name="instance" /><see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up to date.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-214">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-214">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#13](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Update : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Update (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="16743-215">Estado real de la instancia.</span><span class="sxs-lookup"><span data-stu-id="16743-215">The actual instance state.</span></span></param>
        <param name="timeout"><span data-ttu-id="16743-216">Período de tiempo después del cual el proveedor de persistencia anula este intento.</span><span class="sxs-lookup"><span data-stu-id="16743-216">The time period after which the persistence provider aborts this attempt.</span></span></param>
        <summary><span data-ttu-id="16743-217">Cuando se implementa en una clase derivada, se actualizan los registros del estado de servicio del almacén de persistencia.</span><span class="sxs-lookup"><span data-stu-id="16743-217">When implemented in a derived class, updates service state records in the persistence store.</span></span></summary>
        <returns><span data-ttu-id="16743-218">Token de la instancia que se corresponde con el estado que se acaba de guardar.</span><span class="sxs-lookup"><span data-stu-id="16743-218">The instance token corresponding to the state just saved.</span></span> <span data-ttu-id="16743-219">Esto puede pasarse a <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> para determinar si el estado en el almacén de persistencia difiere del estado cuando se llamó a “Create”.</span><span class="sxs-lookup"><span data-stu-id="16743-219">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="16743-220">El siguiente ejemplo de código muestra cómo implementar el método <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A>.</span><span class="sxs-lookup"><span data-stu-id="16743-220">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#18](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
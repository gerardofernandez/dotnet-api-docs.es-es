<Type Name="XmlElementAttribute" FullName="System.Xml.Serialization.XmlElementAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b81bf4f813926d6fdb7eefff0e1128cc84f0ab82" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56346972" /></Metadata><TypeSignature Language="C#" Value="public class XmlElementAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlElementAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Serialization.XmlElementAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlElementAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlElementAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type XmlElementAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.Serialization</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fceca-101">Indica que un campo público o una propiedad pública representa un elemento XML, cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa o deserializa el objeto que lo contiene.</span><span class="sxs-lookup"><span data-stu-id="fceca-101">Indicates that a public field or property represents an XML element when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes or deserializes the object that contains it.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-102">El <xref:System.Xml.Serialization.XmlElementAttribute> pertenece a una familia de atributos que controla cómo el <xref:System.Xml.Serialization.XmlSerializer> serializa o deserializa un objeto.</span><span class="sxs-lookup"><span data-stu-id="fceca-102">The <xref:System.Xml.Serialization.XmlElementAttribute> belongs to a family of attributes that controls how the <xref:System.Xml.Serialization.XmlSerializer> serializes or deserializes an object.</span></span> <span data-ttu-id="fceca-103">Para obtener una lista completa de atributos similares, vea [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="fceca-103">For a complete list of similar attributes, see [Attributes That Control XML Serialization](~/docs/standard/serialization/attributes-that-control-xml-serialization.md).</span></span>  
  
 <span data-ttu-id="fceca-104">Normalmente, un documento XML contiene elementos XML, cada uno de los cuales consta de tres partes: una etiqueta de apertura con atributos posibles, una etiqueta de cierre y los datos entre las etiquetas.</span><span class="sxs-lookup"><span data-stu-id="fceca-104">An XML document usually contains XML elements, each of which consists of three parts: an opening tag with possible attributes, a closing tag, and the data between the tags.</span></span> <span data-ttu-id="fceca-105">Etiquetas XML se pueden anidar, que es, los datos entre las etiquetas también pueden ser elementos XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-105">XML tags can be nested--that is, the data between tags can also be XML elements.</span></span> <span data-ttu-id="fceca-106">Esta capacidad de un elemento para incluir otro permite que el documento que contiene las jerarquías de datos.</span><span class="sxs-lookup"><span data-stu-id="fceca-106">This capacity of one element to enclose another allows the document to contain hierarchies of data.</span></span> <span data-ttu-id="fceca-107">Un elemento XML también puede incluir atributos.</span><span class="sxs-lookup"><span data-stu-id="fceca-107">An XML element can also include attributes.</span></span>  
  
 <span data-ttu-id="fceca-108">Aplicar el <xref:System.Xml.Serialization.XmlElementAttribute> a campos públicos o propiedades públicas de lectura/escritura para controlar las características de los elementos XML como el nombre de elemento y espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="fceca-108">Apply the <xref:System.Xml.Serialization.XmlElementAttribute> to public fields or public read/write properties to control characteristics of the XML elements such as the element name and namespace.</span></span>  
  
 <span data-ttu-id="fceca-109">El <xref:System.Xml.Serialization.XmlElementAttribute> se puede aplicar varias veces a un campo que devuelve una matriz de objetos.</span><span class="sxs-lookup"><span data-stu-id="fceca-109">The <xref:System.Xml.Serialization.XmlElementAttribute> can be applied multiple times to a field that returns an array of objects.</span></span> <span data-ttu-id="fceca-110">El propósito de esto es especificar (a través de la <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propiedad) distintos tipos que se pueden insertar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="fceca-110">The purpose of this is to specify (through the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property) different types that can be inserted into the array.</span></span> <span data-ttu-id="fceca-111">Por ejemplo, la matriz en el siguiente código de C# acepta cadenas y enteros.</span><span class="sxs-lookup"><span data-stu-id="fceca-111">For example, the array in the following C# code accepts both strings and integers.</span></span>  
  
```  
public class Things{  
   [XmlElement(Type = typeof(string)),  
   XmlElement(Type = typeof(int))]  
   public object[] StringsAndInts;  
}  
```  
  
 <span data-ttu-id="fceca-112">Esto da como resultado en XML que puede ser similar a lo siguiente.</span><span class="sxs-lookup"><span data-stu-id="fceca-112">This results in XML that might resemble the following.</span></span>  
  
```  
<Things>  
   <string>Hello</string>  
   <int>999</int>  
   <string>World</string>  
</Things>  
```  
  
 <span data-ttu-id="fceca-113">Tenga en cuenta que al aplicar el <xref:System.Xml.Serialization.XmlElementAttribute> varias veces sin especificar un <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> valor de propiedad, los elementos se denominan después del tipo de los objetos aceptables.</span><span class="sxs-lookup"><span data-stu-id="fceca-113">Note that when you apply the <xref:System.Xml.Serialization.XmlElementAttribute> multiple times without specifying an <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property value, the elements are named after the type of the acceptable objects.</span></span>  
  
 <span data-ttu-id="fceca-114">Si aplica el <xref:System.Xml.Serialization.XmlElementAttribute> a un campo o propiedad que devuelve una matriz, los elementos de la matriz se codifican como una secuencia de elementos XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-114">If you apply the <xref:System.Xml.Serialization.XmlElementAttribute> to a field or property that returns an array, the items in the array are encoded as a sequence of XML elements.</span></span>  
  
 <span data-ttu-id="fceca-115">En cambio si un <xref:System.Xml.Serialization.XmlElementAttribute> no se aplica a este campo o propiedad, los elementos de la matriz se codifican como una secuencia de elementos, anidados bajo un elemento con el nombre de campo o propiedad.</span><span class="sxs-lookup"><span data-stu-id="fceca-115">In contrast if an <xref:System.Xml.Serialization.XmlElementAttribute> is not applied to such a field or property, the items in the array are encoded as a sequence of elements, nested under an element named after the field or property.</span></span> <span data-ttu-id="fceca-116">(Use el <xref:System.Xml.Serialization.XmlArrayAttribute> y <xref:System.Xml.Serialization.XmlArrayItemAttribute> atributos para controlar cómo se serializa una matriz.)</span><span class="sxs-lookup"><span data-stu-id="fceca-116">(Use the <xref:System.Xml.Serialization.XmlArrayAttribute> and <xref:System.Xml.Serialization.XmlArrayItemAttribute> attributes to control how an array is serialized.)</span></span>  
  
 <span data-ttu-id="fceca-117">Puede establecer el <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propiedad para especificar un tipo que se deriva el tipo de campo o propiedad--original es decir, campo o propiedad a la que ha aplicado el <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fceca-117">You can set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a type that is derived from the type of the original field or property--that is, the field or property to which you have applied the <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
 <span data-ttu-id="fceca-118">Si un campo o propiedad devuelve un <xref:System.Collections.ArrayList>, puede aplicar varias instancias de la <xref:System.Xml.Serialization.XmlElementAttribute> al miembro.</span><span class="sxs-lookup"><span data-stu-id="fceca-118">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="fceca-119">Para cada instancia, establezca el <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propiedad a un tipo de objeto que se puede insertar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="fceca-119">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
 <span data-ttu-id="fceca-120">Para obtener más información sobre el uso de atributos, vea [atributos](~/docs/standard/attributes/index.md).</span><span class="sxs-lookup"><span data-stu-id="fceca-120">For more information about using attributes, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fceca-121">Puede usar la palabra `XmlElement` en el código en lugar de la forma más larga <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fceca-121">You can use the word `XmlElement` in your code instead of the longer <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fceca-122">El siguiente ejemplo serializa una clase denominada `Group` y se aplica el <xref:System.Xml.Serialization.XmlElementAttribute> a varios de sus miembros.</span><span class="sxs-lookup"><span data-stu-id="fceca-122">The following example serializes a class named `Group` and applies the <xref:System.Xml.Serialization.XmlElementAttribute> to several of its members.</span></span> <span data-ttu-id="fceca-123">El campo denominado `Employees` devuelve una matriz de `Employee` objetos.</span><span class="sxs-lookup"><span data-stu-id="fceca-123">The field named `Employees` returns an array of `Employee` objects.</span></span> <span data-ttu-id="fceca-124">En este caso, el <xref:System.Xml.Serialization.XmlElementAttribute> especifica que el XML resultante no se anidarán (que es el comportamiento predeterminado de los elementos de matriz).</span><span class="sxs-lookup"><span data-stu-id="fceca-124">In this case, the <xref:System.Xml.Serialization.XmlElementAttribute> specifies that the resulting XML will not be nested (which is the default behavior of items in an array).</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Serialization.XmlArrayAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributeOverrides" />
    <altmember cref="T:System.Xml.Serialization.XmlAttributes" />
    <altmember cref="T:System.Xml.Serialization.XmlElementAttributes" />
    <altmember cref="P:System.Xml.Serialization.XmlAttributes.XmlElements" />
    <altmember cref="T:System.Xml.Serialization.XmlRootAttribute" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="~/docs/standard/serialization/introducing-xml-serialization.md"><span data-ttu-id="fceca-125">Introducir la serialización XML</span><span class="sxs-lookup"><span data-stu-id="fceca-125">Introducing XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md"><span data-ttu-id="fceca-126">Cómo: Especificar un nombre de elemento alternativo para una secuencia XML</span><span class="sxs-lookup"><span data-stu-id="fceca-126">How to: Specify an Alternate Element Name for an XML Stream</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/controlling-xml-serialization-using-attributes.md"><span data-ttu-id="fceca-127">Controlar la serialización XML mediante atributos</span><span class="sxs-lookup"><span data-stu-id="fceca-127">Controlling XML Serialization Using Attributes</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/examples-of-xml-serialization.md"><span data-ttu-id="fceca-128">Ejemplos de serialización XML</span><span class="sxs-lookup"><span data-stu-id="fceca-128">Examples of XML Serialization</span></span></related>
    <related type="Article" href="~/docs/standard/serialization/xml-schema-definition-tool-xsd-exe.md"><span data-ttu-id="fceca-129">XML Schema Definition Tool (Xsd.exe)</span><span class="sxs-lookup"><span data-stu-id="fceca-129">XML Schema Definition Tool (Xsd.exe)</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fceca-130">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="fceca-130">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fceca-131">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="fceca-131">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fceca-132">El ejemplo siguiente se aplica el <xref:System.Xml.Serialization.XmlElementAttribute> a una clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-132">The following example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to a class.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (elementName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute elementName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="fceca-133">Nombre de elemento XML del miembro serializado.</span><span class="sxs-lookup"><span data-stu-id="fceca-133">The XML element name of the serialized member.</span></span></param>
        <summary><span data-ttu-id="fceca-134">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-134">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies the name of the XML element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-135">De forma predeterminada, el <xref:System.Xml.Serialization.XmlSerializer> usa el nombre de miembro como el nombre del elemento XML al serializar una instancia de clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-135">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="fceca-136">Por ejemplo, un campo denominado `Vehicle` genera un elemento XML denominado `Vehicle`.</span><span class="sxs-lookup"><span data-stu-id="fceca-136">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="fceca-137">Sin embargo si tiene un elemento diferente, `Cars`, pasarlo en el `elementName` parámetro.</span><span class="sxs-lookup"><span data-stu-id="fceca-137">However if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fceca-138">El ejemplo siguiente muestra una clase simple que contiene un solo campo denominado `Vehicles`.</span><span class="sxs-lookup"><span data-stu-id="fceca-138">The following example shows a simple class that contains a single field named `Vehicles`.</span></span> <span data-ttu-id="fceca-139">El ejemplo se aplica el <xref:System.Xml.Serialization.XmlElementAttribute> al campo e incluye el `elementName` parámetro, mientras se indica a la <xref:System.Xml.Serialization.XmlSerializer> para generar los elementos XML denominados "Automóviles" en lugar de "Vehículos".</span><span class="sxs-lookup"><span data-stu-id="fceca-139">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and includes the `elementName` parameter, thereby instructing the <xref:System.Xml.Serialization.XmlSerializer> to generate XML elements named "Cars" rather than "Vehicles".</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fceca-140"><see cref="T:System.Type" /> de un objeto derivado del tipo de miembro.</span><span class="sxs-lookup"><span data-stu-id="fceca-140">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="fceca-141">Inicializa una nueva instancia de la clase <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica un tipo de miembro al que <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> es aplicado.</span><span class="sxs-lookup"><span data-stu-id="fceca-141">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> class and specifies a type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="fceca-142">Este tipo es utilizado por <see cref="T:System.Xml.Serialization.XmlSerializer" /> al serializar o deserializar el objeto que lo contiene.</span><span class="sxs-lookup"><span data-stu-id="fceca-142">This type is used by the <see cref="T:System.Xml.Serialization.XmlSerializer" /> when serializing or deserializing object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-143">Use el `type` parámetro para especificar un tipo que se deriva de una clase base.</span><span class="sxs-lookup"><span data-stu-id="fceca-143">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="fceca-144">Por ejemplo, supongamos que una propiedad denominada `MyAnimal` devuelve un `Animal` objeto.</span><span class="sxs-lookup"><span data-stu-id="fceca-144">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="fceca-145">Desea mejorar el objeto, por lo que crear una nueva clase denominada `Mammal` que herede de la `Animal` clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-145">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="fceca-146">Para indicar el <xref:System.Xml.Serialization.XmlSerializer> para aceptar el `Mammal` clase cuando serializa el `MyAnimal` propiedad, pase el <xref:System.Type> de la `Mammal` clase al constructor.</span><span class="sxs-lookup"><span data-stu-id="fceca-146">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fceca-147">El siguiente ejemplo serializa una clase denominada `Orchestra` que contiene un solo campo denominado `Instruments`, que devuelve una matriz de `Instrument` objetos.</span><span class="sxs-lookup"><span data-stu-id="fceca-147">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="fceca-148">Una segunda clase denominada `Brass` hereda el `Instrument` clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-148">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="fceca-149">El ejemplo se aplica el <xref:System.Xml.Serialization.XmlElementAttribute> a la `Instruments` campo y especifica el `Brass` escribe, lo que permite el `Instruments` campo puede aceptar `Brass` objetos.</span><span class="sxs-lookup"><span data-stu-id="fceca-149">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="fceca-150">El ejemplo también especifica el nombre del elemento XML estableciendo el <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="fceca-150">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlElementAttribute (string elementName, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string elementName, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Serialization.XmlElementAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlElementAttribute(System::String ^ elementName, Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xml.Serialization.XmlElementAttribute : string * Type -&gt; System.Xml.Serialization.XmlElementAttribute" Usage="new System.Xml.Serialization.XmlElementAttribute (elementName, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="elementName"><span data-ttu-id="fceca-151">Nombre de elemento XML del miembro serializado.</span><span class="sxs-lookup"><span data-stu-id="fceca-151">The XML element name of the serialized member.</span></span></param>
        <param name="type"><span data-ttu-id="fceca-152"><see cref="T:System.Type" /> de un objeto derivado del tipo de miembro.</span><span class="sxs-lookup"><span data-stu-id="fceca-152">The <see cref="T:System.Type" /> of an object derived from the member's type.</span></span></param>
        <summary><span data-ttu-id="fceca-153">Inicializa una nueva instancia de <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> y especifica el nombre del elemento XML así como un tipo derivado del miembro al que se ha aplicado <see cref="T:System.Xml.Serialization.XmlElementAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="fceca-153">Initializes a new instance of the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> and specifies the name of the XML element and a derived type for the member to which the <see cref="T:System.Xml.Serialization.XmlElementAttribute" /> is applied.</span></span> <span data-ttu-id="fceca-154">Este tipo de miembro se utiliza cuando <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializa el objeto que lo contiene.</span><span class="sxs-lookup"><span data-stu-id="fceca-154">This member type is used when the <see cref="T:System.Xml.Serialization.XmlSerializer" /> serializes the object that contains it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-155">De forma predeterminada, el <xref:System.Xml.Serialization.XmlSerializer> usa el nombre de miembro como el nombre del elemento XML al serializar una instancia de clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-155">By default, the <xref:System.Xml.Serialization.XmlSerializer> uses the member name as the XML element name when serializing a class instance.</span></span> <span data-ttu-id="fceca-156">Por ejemplo, un campo denominado `Vehicle` genera un elemento XML denominado `Vehicle`.</span><span class="sxs-lookup"><span data-stu-id="fceca-156">For example, a field named `Vehicle` generates an XML element named `Vehicle`.</span></span> <span data-ttu-id="fceca-157">Sin embargo, si tiene un elemento diferente, `Cars`, pasarlo en el `elementName` parámetro.</span><span class="sxs-lookup"><span data-stu-id="fceca-157">However, if you need a different element, such as `Cars`, pass it in the `elementName` parameter.</span></span>  
  
 <span data-ttu-id="fceca-158">Use el `type` parámetro para especificar un tipo que se deriva de una clase base.</span><span class="sxs-lookup"><span data-stu-id="fceca-158">Use the `type` parameter to specify a type that is derived from a base class.</span></span> <span data-ttu-id="fceca-159">Por ejemplo, supongamos que una propiedad denominada `MyAnimal` devuelve un `Animal` objeto.</span><span class="sxs-lookup"><span data-stu-id="fceca-159">For example, suppose a property named `MyAnimal` returns an `Animal` object.</span></span> <span data-ttu-id="fceca-160">Desea mejorar el objeto, por lo que crear una nueva clase denominada `Mammal` que herede de la `Animal` clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-160">You want to enhance the object, so you create a new class named `Mammal` that inherits from the `Animal` class.</span></span> <span data-ttu-id="fceca-161">Para indicar el <xref:System.Xml.Serialization.XmlSerializer> para aceptar el `Mammal` clase cuando serializa el `MyAnimal` propiedad, pase el <xref:System.Type> de la `Mammal` clase al constructor.</span><span class="sxs-lookup"><span data-stu-id="fceca-161">To instruct the <xref:System.Xml.Serialization.XmlSerializer> to accept the `Mammal` class when it serializes the `MyAnimal` property, pass the <xref:System.Type> of the `Mammal` class to the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fceca-162">El siguiente ejemplo serializa una clase denominada `Orchestra` que contiene un solo campo denominado `Instruments`, que devuelve una matriz de `Instrument` objetos.</span><span class="sxs-lookup"><span data-stu-id="fceca-162">The following example serializes a class named `Orchestra` that contains a single field named `Instruments`, which returns an array of `Instrument` objects.</span></span> <span data-ttu-id="fceca-163">Una segunda clase denominada `Brass` hereda el `Instrument` clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-163">A second class named `Brass` inherits from the `Instrument` class.</span></span> <span data-ttu-id="fceca-164">El ejemplo se aplica el <xref:System.Xml.Serialization.XmlElementAttribute> a la `Instruments` campo y especifica el `Brass` escribe, lo que permite el `Instruments` campo puede aceptar `Brass` objetos.</span><span class="sxs-lookup"><span data-stu-id="fceca-164">The example applies the <xref:System.Xml.Serialization.XmlElementAttribute> to the `Instruments` field, and specifies the `Brass` type, allowing the `Instruments` field to accept `Brass` objects.</span></span> <span data-ttu-id="fceca-165">El ejemplo también especifica el nombre del elemento XML estableciendo el <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="fceca-165">The example also specifies the name of the XML element by setting the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.XmlElementAttribute2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.XmlElementAttribute2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fceca-166">Obtiene o establece el tipo de datos de la definición de esquemas XML (XSD) del elemento XM1 generado por <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="fceca-166">Gets or sets the XML Schema definition (XSD) data type of the XML element generated by the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</span></span></summary>
        <value><span data-ttu-id="fceca-167">Tipo de datos de esquemas XML, tal como se define en el documento del Consorcio WWC (www.w3.org) titulado "XML Schema Part 2: Datatypes".</span><span class="sxs-lookup"><span data-stu-id="fceca-167">An XML Schema data type, as defined by the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-168">En la tabla siguiente se enumera los tipos de datos simple de esquema XML con y equivalentes.</span><span class="sxs-lookup"><span data-stu-id="fceca-168">The following table lists the XML Schema simple data types with their.NET equivalents.</span></span>  
  
 <span data-ttu-id="fceca-169">Para el esquema XML `base64Binary` y `hexBinary` tipos de datos, use una matriz de <xref:System.Byte> estructuras y aplicar un <xref:System.Xml.Serialization.XmlElementAttribute> con el <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> establecida en "base64Binary" o "hexBinary", según corresponda.</span><span class="sxs-lookup"><span data-stu-id="fceca-169">For the XML Schema `base64Binary` and `hexBinary` data types, use an array of <xref:System.Byte> structures, and apply a <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "base64Binary" or "hexBinary", as appropriate.</span></span> <span data-ttu-id="fceca-170">Para el esquema XML `time` y `date` tipos de datos, utilice el <xref:System.DateTime> escriba y aplicar el <xref:System.Xml.Serialization.XmlElementAttribute> con el <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> establecida en "date" o "time".</span><span class="sxs-lookup"><span data-stu-id="fceca-170">For the XML Schema `time` and `date` data types, use the <xref:System.DateTime> type and apply the <xref:System.Xml.Serialization.XmlElementAttribute> with the <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> set to "date" or "time".</span></span>  
  
 <span data-ttu-id="fceca-171">Para cada tipo de esquema XML que se asigna a una cadena, aplique el <xref:System.Xml.Serialization.XmlElementAttribute> con su <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> propiedad establecida en el tipo de esquema XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-171">For every XML Schema type that is mapped to a string, apply the <xref:System.Xml.Serialization.XmlElementAttribute> with its <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> property set to the XML Schema type.</span></span> <span data-ttu-id="fceca-172">Es posible que esto puede cambiar el formato de serialización, no solo el esquema del miembro.</span><span class="sxs-lookup"><span data-stu-id="fceca-172">It is possible that this can change the serialization format, not only the schema for the member.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fceca-173">La propiedad distingue mayúsculas de minúsculas, por lo que debe establecer exactamente a uno de los tipos de datos de esquema XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-173">The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fceca-174">Pasar los datos binarios como un archivo XML del elemento es más eficaz que pasarlo como un atributo de esquema XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-174">Passing binary data as an XML element is more efficient than passing it as an XML Schema attribute.</span></span>  
  
 <span data-ttu-id="fceca-175">Para obtener más información sobre los tipos de datos XML, vea el documento de World Wide Web Consortium (www.w3.org) titulado "esquema XML parte 2: Tipos de datos".</span><span class="sxs-lookup"><span data-stu-id="fceca-175">For more information about XML data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</span></span>  
  
|<span data-ttu-id="fceca-176">Tipo de datos XSD</span><span class="sxs-lookup"><span data-stu-id="fceca-176">XSD data type</span></span>|<span data-ttu-id="fceca-177">Tipo de datos de .NET</span><span class="sxs-lookup"><span data-stu-id="fceca-177">.NET data type</span></span>|  
|-------------------|--------------------|  
|<span data-ttu-id="fceca-178">anyURI</span><span class="sxs-lookup"><span data-stu-id="fceca-178">anyURI</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-179">base64Binary</span><span class="sxs-lookup"><span data-stu-id="fceca-179">base64Binary</span></span>|<span data-ttu-id="fceca-180">Matriz de <xref:System.Byte> objetos</span><span class="sxs-lookup"><span data-stu-id="fceca-180">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="fceca-181">booleano</span><span class="sxs-lookup"><span data-stu-id="fceca-181">boolean</span></span>|<xref:System.Boolean>|  
|<span data-ttu-id="fceca-182">byte</span><span class="sxs-lookup"><span data-stu-id="fceca-182">byte</span></span>|<xref:System.SByte>|  
|<span data-ttu-id="fceca-183">date</span><span class="sxs-lookup"><span data-stu-id="fceca-183">date</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="fceca-184">dateTime</span><span class="sxs-lookup"><span data-stu-id="fceca-184">dateTime</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="fceca-185">decimal</span><span class="sxs-lookup"><span data-stu-id="fceca-185">decimal</span></span>|<xref:System.Decimal>|  
|<span data-ttu-id="fceca-186">double</span><span class="sxs-lookup"><span data-stu-id="fceca-186">double</span></span>|<xref:System.Double>|  
|<span data-ttu-id="fceca-187">ENTITY</span><span class="sxs-lookup"><span data-stu-id="fceca-187">ENTITY</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-188">ENTIDADES</span><span class="sxs-lookup"><span data-stu-id="fceca-188">ENTITIES</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-189">float</span><span class="sxs-lookup"><span data-stu-id="fceca-189">float</span></span>|<xref:System.Single>|  
|<span data-ttu-id="fceca-190">gDay</span><span class="sxs-lookup"><span data-stu-id="fceca-190">gDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-191">gMonth</span><span class="sxs-lookup"><span data-stu-id="fceca-191">gMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-192">gMonthDay</span><span class="sxs-lookup"><span data-stu-id="fceca-192">gMonthDay</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-193">gYear</span><span class="sxs-lookup"><span data-stu-id="fceca-193">gYear</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-194">gYearMonth</span><span class="sxs-lookup"><span data-stu-id="fceca-194">gYearMonth</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-195">hexBinary</span><span class="sxs-lookup"><span data-stu-id="fceca-195">hexBinary</span></span>|<span data-ttu-id="fceca-196">Matriz de <xref:System.Byte> objetos</span><span class="sxs-lookup"><span data-stu-id="fceca-196">Array of <xref:System.Byte> objects</span></span>|  
|<span data-ttu-id="fceca-197">Id.</span><span class="sxs-lookup"><span data-stu-id="fceca-197">ID</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-198">IDREF</span><span class="sxs-lookup"><span data-stu-id="fceca-198">IDREF</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-199">IDREFS</span><span class="sxs-lookup"><span data-stu-id="fceca-199">IDREFS</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-200">int</span><span class="sxs-lookup"><span data-stu-id="fceca-200">int</span></span>|<xref:System.Int32>|  
|<span data-ttu-id="fceca-201">enteros</span><span class="sxs-lookup"><span data-stu-id="fceca-201">integer</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-202">lenguaje</span><span class="sxs-lookup"><span data-stu-id="fceca-202">language</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-203">long</span><span class="sxs-lookup"><span data-stu-id="fceca-203">long</span></span>|<xref:System.Int64>|  
|<span data-ttu-id="fceca-204">nombre</span><span class="sxs-lookup"><span data-stu-id="fceca-204">Name</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-205">NCName</span><span class="sxs-lookup"><span data-stu-id="fceca-205">NCName</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-206">negativeInteger</span><span class="sxs-lookup"><span data-stu-id="fceca-206">negativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-207">NMTOKEN</span><span class="sxs-lookup"><span data-stu-id="fceca-207">NMTOKEN</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-208">NMTOKENS</span><span class="sxs-lookup"><span data-stu-id="fceca-208">NMTOKENS</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-209">normalizedString</span><span class="sxs-lookup"><span data-stu-id="fceca-209">normalizedString</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-210">nonNegativeInteger</span><span class="sxs-lookup"><span data-stu-id="fceca-210">nonNegativeInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-211">nonPositiveInteger</span><span class="sxs-lookup"><span data-stu-id="fceca-211">nonPositiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-212">NOTATION</span><span class="sxs-lookup"><span data-stu-id="fceca-212">NOTATION</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-213">positiveInteger</span><span class="sxs-lookup"><span data-stu-id="fceca-213">positiveInteger</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-214">QName</span><span class="sxs-lookup"><span data-stu-id="fceca-214">QName</span></span>|<xref:System.Xml.XmlQualifiedName>|  
|<span data-ttu-id="fceca-215">duration</span><span class="sxs-lookup"><span data-stu-id="fceca-215">duration</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-216">cadena</span><span class="sxs-lookup"><span data-stu-id="fceca-216">string</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-217">short</span><span class="sxs-lookup"><span data-stu-id="fceca-217">short</span></span>|<xref:System.Int16>|  
|<span data-ttu-id="fceca-218">hora</span><span class="sxs-lookup"><span data-stu-id="fceca-218">time</span></span>|<xref:System.DateTime>|  
|<span data-ttu-id="fceca-219">token</span><span class="sxs-lookup"><span data-stu-id="fceca-219">token</span></span>|<xref:System.String>|  
|<span data-ttu-id="fceca-220">unsignedByte</span><span class="sxs-lookup"><span data-stu-id="fceca-220">unsignedByte</span></span>|<xref:System.Byte>|  
|<span data-ttu-id="fceca-221">unsignedInt</span><span class="sxs-lookup"><span data-stu-id="fceca-221">unsignedInt</span></span>|<xref:System.UInt32>|  
|<span data-ttu-id="fceca-222">unsignedLong</span><span class="sxs-lookup"><span data-stu-id="fceca-222">unsignedLong</span></span>|<xref:System.UInt64>|  
|<span data-ttu-id="fceca-223">unsignedShort</span><span class="sxs-lookup"><span data-stu-id="fceca-223">unsignedShort</span></span>|<xref:System.UInt16>|  
  
   
  
## Examples  
 <span data-ttu-id="fceca-224">El siguiente ejemplo serializa una clase denominada `Group` que contiene un campo denominado `ExtraInfo`, que devuelve un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="fceca-224">The following example serializes a class named `Group` that contains a field named `ExtraInfo`, which returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="fceca-225">El ejemplo aplica a dos instancias de la <xref:System.Xml.Serialization.XmlElementAttribute> al campo y especifica distintas <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> valores para cada instancia.</span><span class="sxs-lookup"><span data-stu-id="fceca-225">The example applies two instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the field and specifies different <xref:System.Xml.Serialization.XmlElementAttribute.DataType%2A> values for each instance.</span></span> <span data-ttu-id="fceca-226">Cada instancia permite la <xref:System.Xml.Serialization.XmlSerializer> para serializar los tipos especificados insertados en la matriz.</span><span class="sxs-lookup"><span data-stu-id="fceca-226">Each instance enables the <xref:System.Xml.Serialization.XmlSerializer> to serialize the specified types inserted into the array.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="fceca-227">El tipo de datos de esquemas XML especificado no se puede asignar al tipo de datos .NET.</span><span class="sxs-lookup"><span data-stu-id="fceca-227">The XML Schema data type you have specified cannot be mapped to the.NET data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ElementName : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.ElementName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fceca-228">Obtiene o establece el nombre del elemento XML generado.</span><span class="sxs-lookup"><span data-stu-id="fceca-228">Gets or sets the name of the generated XML element.</span></span></summary>
        <value><span data-ttu-id="fceca-229">Nombre del elemento XML generado.</span><span class="sxs-lookup"><span data-stu-id="fceca-229">The name of the generated XML element.</span></span> <span data-ttu-id="fceca-230">El valor predeterminado es el identificador de miembros.</span><span class="sxs-lookup"><span data-stu-id="fceca-230">The default is the member identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-231">Especifique un <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> si desea que el nombre del elemento XML generado sea distinto del identificador del miembro.</span><span class="sxs-lookup"><span data-stu-id="fceca-231">Specify an <xref:System.Xml.Serialization.XmlArrayItemAttribute.ElementName%2A> if you want the name of the generated XML element to differ from the member's identifier.</span></span>  
  
 <span data-ttu-id="fceca-232">Puede establecer el mismo <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> valor a más de un miembro de clase si el documento XML generado utiliza espacios de nombres XML para distinguir entre los miembros con el mismo nombre.</span><span class="sxs-lookup"><span data-stu-id="fceca-232">You can set the same <xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A> value to more than one class member if the generated XML document uses XML namespaces to distinguish between the identically named members.</span></span> <span data-ttu-id="fceca-233">Para obtener más información sobre cómo usar los espacios de nombres y nombres con prefijo en el documento XML, vea el <xref:System.Xml.Serialization.XmlSerializerNamespaces> clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-233">For details on how to use namespaces and prefixed names in the XML document, see the <xref:System.Xml.Serialization.XmlSerializerNamespaces> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fceca-234">El ejemplo siguiente se establece la <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> propiedad de un <xref:System.Xml.Serialization.XmlElementAttribute> a un nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="fceca-234">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.ElementName%2A> property of an <xref:System.Xml.Serialization.XmlElementAttribute> to a new value.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.ElementName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.ElementName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Serialization.XmlAttributeAttribute.AttributeName" />
      </Docs>
    </Member>
    <Member MemberName="Form">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaForm Form { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaForm Form" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberSignature Language="VB.NET" Value="Public Property Form As XmlSchemaForm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaForm Form { System::Xml::Schema::XmlSchemaForm get(); void set(System::Xml::Schema::XmlSchemaForm value); };" />
      <MemberSignature Language="F#" Value="member this.Form : System.Xml.Schema.XmlSchemaForm with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Form" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaForm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fceca-235">Obtiene o establece un valor que indica si el elemento está calificado.</span><span class="sxs-lookup"><span data-stu-id="fceca-235">Gets or sets a value that indicates whether the element is qualified.</span></span></summary>
        <value><span data-ttu-id="fceca-236">Uno de los valores de <see cref="T:System.Xml.Schema.XmlSchemaForm" />.</span><span class="sxs-lookup"><span data-stu-id="fceca-236">One of the <see cref="T:System.Xml.Schema.XmlSchemaForm" /> values.</span></span> <span data-ttu-id="fceca-237">De manera predeterminada, es <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span><span class="sxs-lookup"><span data-stu-id="fceca-237">The default is <see cref="F:System.Xml.Schema.XmlSchemaForm.None" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-238">El <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> propiedad determina si un elemento XML está o no calificado.</span><span class="sxs-lookup"><span data-stu-id="fceca-238">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property determines whether an XML element is qualified or unqualified.</span></span> <span data-ttu-id="fceca-239">El <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> propiedad se ajusta a la especificación de World Wide Web Consortium (www.w3.org) de 1999, "Namespaces in XML".</span><span class="sxs-lookup"><span data-stu-id="fceca-239">The <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> property conforms to the World Wide Web Consortium (www.w3.org) 1999 specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="fceca-240">Si el <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> propiedad está establecida en cualquier valor, al intentar establecer la <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> propiedad `XmlSchemaForm.Unqualified` produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="fceca-240">If the <xref:System.Xml.Serialization.XmlAttributeAttribute.Namespace%2A> property is set to any value, attempting to set the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified` throws an exception.</span></span> <span data-ttu-id="fceca-241">La configuración predeterminada, `XmlSchemaForm.None`, indica el <xref:System.Xml.Serialization.XmlSerializer> para comprobar el esquema del documento XML determinar si el espacio de nombres se han calificado.</span><span class="sxs-lookup"><span data-stu-id="fceca-241">The default setting, `XmlSchemaForm.None`, instructs the <xref:System.Xml.Serialization.XmlSerializer> to check the schema for the XML document to determine whether the namespace is qualified.</span></span> <span data-ttu-id="fceca-242">Si el esquema no especifica un valor para un elemento o atributo individual, el <xref:System.Xml.Serialization.XmlSerializer> usa el `elementFormDefault` y `attributeFormDefault` valores para determinar si un elemento o atributo se han calificado.</span><span class="sxs-lookup"><span data-stu-id="fceca-242">If the schema does not specify a value for an individual element or attribute, the <xref:System.Xml.Serialization.XmlSerializer> uses the `elementFormDefault` and `attributeFormDefault` values to determine whether an element or attribute is qualified.</span></span> <span data-ttu-id="fceca-243">El siguiente código XML muestra un esquema:</span><span class="sxs-lookup"><span data-stu-id="fceca-243">The following XML code shows a schema:</span></span>  
  
```  
<schema elementFormDefault="qualified"   
attributeFormDefault="unqualified"... >  
 <element name="Name"/>  
 <attribute name="Number"/>  
</schema>  
```  
  
 <span data-ttu-id="fceca-244">Cuando el <xref:System.Xml.Serialization.XmlSerializer> lee el esquema, el <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> valor tanto para el `Name` y `Number` es `XmlSchemaForm.None`, pero la `Name` elemento está calificado, mientras el `Number` elemento está incompleto.</span><span class="sxs-lookup"><span data-stu-id="fceca-244">When the <xref:System.Xml.Serialization.XmlSerializer> reads the schema, the <xref:System.Xml.Serialization.XmlAttributeAttribute.Form%2A> value for both the `Name` and `Number` is `XmlSchemaForm.None`, but the `Name` element is qualified, while the `Number` element is unqualified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fceca-245">El ejemplo siguiente se establece la <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> propiedad `XmlSchemaForm.Unqualified`.</span><span class="sxs-lookup"><span data-stu-id="fceca-245">The following example sets the <xref:System.Xml.Serialization.XmlElementAttribute.Form%2A> property to `XmlSchemaForm.Unqualified`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Form Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Form Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsNullable : bool with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.IsNullable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fceca-246">Obtiene o establece un valor que indica si <see cref="T:System.Xml.Serialization.XmlSerializer" /> debe serializar un miembro establecido en <see langword="null" /> como una etiqueta vacía con el atributo <see langword="xsi:nil" /> establecido en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fceca-246">Gets or sets a value that indicates whether the <see cref="T:System.Xml.Serialization.XmlSerializer" /> must serialize a member that is set to <see langword="null" /> as an empty tag with the <see langword="xsi:nil" /> attribute set to <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="fceca-247"><see langword="true" /> si <see cref="T:System.Xml.Serialization.XmlSerializer" /> genera el atributo <see langword="xsi:nil" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fceca-247"><see langword="true" /> if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> generates the <see langword="xsi:nil" /> attribute; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-248">Permite que la especificación del esquema XML para las estructuras de un documento XML indicar explícitamente que falta contenido de un elemento.</span><span class="sxs-lookup"><span data-stu-id="fceca-248">The XML schema specification for structures allows an XML document to explicitly signal that an element's content is missing.</span></span> <span data-ttu-id="fceca-249">Este tipo de elemento contiene el atributo `xsi:nil` establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="fceca-249">Such an element contains the attribute `xsi:nil` set to `true`.</span></span> <span data-ttu-id="fceca-250">Para obtener más información, vea la especificación de World Wide Web Consortium (www.w3.org), "XML Schema Part 1: Estructuras".</span><span class="sxs-lookup"><span data-stu-id="fceca-250">For more information, see the World Wide Web Consortium (www.w3.org) specification, "XML Schema Part 1: Structures".</span></span>  
  
 <span data-ttu-id="fceca-251">Si el <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> propiedad está establecida en `true`, `xsi:nil` se genera el atributo para los miembros de clase que se han establecido para `null`.</span><span class="sxs-lookup"><span data-stu-id="fceca-251">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is set to `true`, the `xsi:nil` attribute is generated for class members that have been set to `null`.</span></span> <span data-ttu-id="fceca-252">Por ejemplo, si se establece un campo denominado `MyStringArray` a `null`, el <xref:System.Xml.Serialization.XmlSerializer> genera el siguiente código XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-252">For example if you set a field named `MyStringArray` to `null`, the <xref:System.Xml.Serialization.XmlSerializer> generates the following XML code.</span></span>  
  
```  
<MyStringArray xsi:nil = "true" />  
```  
  
 <span data-ttu-id="fceca-253">Si el <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> propiedad es `false`, se genera ningún elemento XML para los miembros de clase que se han establecido para `null`.</span><span class="sxs-lookup"><span data-stu-id="fceca-253">If the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property is `false`, no XML element is generated for class members that have been set to `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fceca-254">No se puede aplicar el <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> propiedad a un miembro de un tipo como un tipo de valor porque no puede contener un tipo de valor `null`.</span><span class="sxs-lookup"><span data-stu-id="fceca-254">You cannot apply the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property to a member typed as a value type because a value type cannot contain `null`.</span></span> <span data-ttu-id="fceca-255">Además, no se puede establecer esta propiedad `false` para tipos de valor que acepta valores NULL.</span><span class="sxs-lookup"><span data-stu-id="fceca-255">Additionally, you cannot set this property to `false` for nullable value types.</span></span> <span data-ttu-id="fceca-256">Cuando esos tipos son `null`, se serializarán estableciendo `xsi:nil` a `true`.</span><span class="sxs-lookup"><span data-stu-id="fceca-256">When such types are `null`, they will be serialized by setting `xsi:nil` to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fceca-257">El ejemplo siguiente muestra un campo con el <xref:System.Xml.Serialization.XmlElementAttribute> aplicado y el <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> propiedad establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="fceca-257">The following example shows a field with the <xref:System.Xml.Serialization.XmlElementAttribute> applied to it, and the <xref:System.Xml.Serialization.XmlElementAttribute.IsNullable%2A> property set to `false`.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.IsNullable Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.IsNullable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fceca-258">Obtiene o establece el espacio de nombres asignado al elemento XML como resultado de la serialización de la clase.</span><span class="sxs-lookup"><span data-stu-id="fceca-258">Gets or sets the namespace assigned to the XML element that results when the class is serialized.</span></span></summary>
        <value><span data-ttu-id="fceca-259">Espacio de nombres del elemento XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-259">The namespace of the XML element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-260">El <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> propiedad cumple la especificación de World Wide Web Consortium (www.w3.org), "Namespaces in XML".</span><span class="sxs-lookup"><span data-stu-id="fceca-260">The <xref:System.Xml.Serialization.XmlArrayItemAttribute.Namespace%2A> property conforms to the World Wide Web Consortium (www.w3.org) specification, "Namespaces in XML".</span></span>  
  
 <span data-ttu-id="fceca-261">Para crear espacios de nombres que están asociados con un prefijo, primero debe crear un <xref:System.Xml.Serialization.XmlSerializerNamespaces> que contiene los espacios de nombres y prefijos utilizados en el documento XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-261">To create namespaces that are associated with a prefix, you must create an <xref:System.Xml.Serialization.XmlSerializerNamespaces> that contains the namespaces and prefixes used in the XML document.</span></span> <span data-ttu-id="fceca-262">A medida que establezca el espacio de nombres para cada <xref:System.Xml.Serialization.XmlArrayAttribute>, debe coincidir con uno de los espacios de nombres en el <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span><span class="sxs-lookup"><span data-stu-id="fceca-262">As you set the namespace for each <xref:System.Xml.Serialization.XmlArrayAttribute>, it must match one of the namespaces in the <xref:System.Xml.Serialization.XmlSerializerNamespaces>.</span></span> <span data-ttu-id="fceca-263">Cuando se genera el XML, cada matriz es el prefijo correctamente con el prefijo asociado con el espacio de nombres especificado.</span><span class="sxs-lookup"><span data-stu-id="fceca-263">When the XML is generated, each array is correctly prefixed with the prefix associated with the specified namespace.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public int Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Order" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Order { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Order : int with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Order" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fceca-264">Obtiene o establece el orden explícito en el que los elementos son serializados o deserializados.</span><span class="sxs-lookup"><span data-stu-id="fceca-264">Gets or sets the explicit order in which the elements are serialized or deserialized.</span></span></summary>
        <value><span data-ttu-id="fceca-265">Orden de la generación de código.</span><span class="sxs-lookup"><span data-stu-id="fceca-265">The order of the code generation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-266">Use la <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeración para indicar el <xref:System.Web.Services.Description.ServiceDescriptionImporter> para generar el código que establece el <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="fceca-266">Use the <xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder> enumeration to instruct the <xref:System.Web.Services.Description.ServiceDescriptionImporter> to generate code that sets the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fceca-267">Una vez el <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> propiedad se ha usado en una propiedad pública o campo en un tipo, se debe aplicar a todas las propiedades públicas y campos para ese tipo y todos los tipos heredados.</span><span class="sxs-lookup"><span data-stu-id="fceca-267">Once the <xref:System.Xml.Serialization.XmlElementAttribute.Order%2A> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type with get, set" Usage="System.Xml.Serialization.XmlElementAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.XmlSerializer</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.Serialization</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fceca-268">Obtiene o establece el tipo de objeto utilizado para representar el elemento XML.</span><span class="sxs-lookup"><span data-stu-id="fceca-268">Gets or sets the object type used to represent the XML element.</span></span></summary>
        <value><span data-ttu-id="fceca-269"><see cref="T:System.Type" /> del miembro.</span><span class="sxs-lookup"><span data-stu-id="fceca-269">The <see cref="T:System.Type" /> of the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fceca-270">Use el <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propiedad para especificar un tipo derivado de un campo o propiedad.</span><span class="sxs-lookup"><span data-stu-id="fceca-270">Use the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived type for a field or property.</span></span>  
  
 <span data-ttu-id="fceca-271">Si un campo o propiedad devuelve un <xref:System.Collections.ArrayList>, puede aplicar varias instancias de la <xref:System.Xml.Serialization.XmlElementAttribute> al miembro.</span><span class="sxs-lookup"><span data-stu-id="fceca-271">If a field or property returns an <xref:System.Collections.ArrayList>, you can apply multiple instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to the member.</span></span> <span data-ttu-id="fceca-272">Para cada instancia, establezca el <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propiedad a un tipo de objeto que se puede insertar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="fceca-272">For each instance, set the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to a type of object that can be inserted into the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fceca-273">En el ejemplo siguiente se usa el <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> propiedad para especificar un objeto derivado de un <xref:System.Xml.Serialization.XmlElementAttribute>.</span><span class="sxs-lookup"><span data-stu-id="fceca-273">The following example uses the <xref:System.Xml.Serialization.XmlElementAttribute.Type%2A> property to specify a derived object for an <xref:System.Xml.Serialization.XmlElementAttribute>.</span></span> <span data-ttu-id="fceca-274">El ejemplo también aplica a las tres instancias de la <xref:System.Xml.Serialization.XmlElementAttribute> a un campo que devuelve un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="fceca-274">The example also applies three instances of the <xref:System.Xml.Serialization.XmlElementAttribute> to a field that returns an <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="fceca-275">Cada instancia especifica un tipo permitido en el campo.</span><span class="sxs-lookup"><span data-stu-id="fceca-275">Each instance specifies a type allowed in the field.</span></span>  
  
 [!code-cpp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CPP/source.cpp#1)]
 [!code-csharp[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/CS/source.cs#1)]
 [!code-vb[Classic XmlElementAttribute.Type Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic XmlElementAttribute.Type Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ec87b13a560e1c0a80cb426d7ea2d94c9b63f49" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48634359" /></Metadata><TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <TypeSignature Language="F#" Value="type CustomReflectionContext = class&#xA;    inherit ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="932f3-101">Representa un contexto de reflexión personalizable.</span><span class="sxs-lookup"><span data-stu-id="932f3-101">Represents a customizable reflection context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="932f3-102"><xref:System.Reflection.Context.CustomReflectionContext> Proporciona una manera de agregar o quitar los atributos personalizados de los objetos de reflexión o agregar propiedades ficticias a esos objetos, sin necesidad de volver a implementar el modelo de reflexión completa.</span><span class="sxs-lookup"><span data-stu-id="932f3-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="932f3-103">El valor predeterminado <xref:System.Reflection.Context.CustomReflectionContext> simplemente el ajusta reflexión objetos sin realizar ningún cambio, pero por subclases e invalidación de los métodos pertinentes, puede agregar, quitar, o cambiar los atributos que se aplican a cualquier parámetro reflejado o miembro o agregar nuevas propiedades a un tipo reflejado.</span><span class="sxs-lookup"><span data-stu-id="932f3-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="932f3-104">Por ejemplo, suponga que el código sigue la convención de aplicar un atributo concreto a los métodos de fábrica, pero ahora es necesarios para trabajar con código de terceros que no tiene atributos.</span><span class="sxs-lookup"><span data-stu-id="932f3-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="932f3-105">Puede usar <xref:System.Reflection.Context.CustomReflectionContext> para especificar una regla para identificar los objetos que deben tener los atributos y para proporcionar los objetos con esos atributos cuando se ven desde el código.</span><span class="sxs-lookup"><span data-stu-id="932f3-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="932f3-106">Para usar <xref:System.Reflection.Context.CustomReflectionContext> de hecho, el código que usa los objetos reflejados debe admitir la noción de especificar un contexto de reflexión, en lugar de suponer que todos reflejan objetos están asociados con el contexto de reflexión en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="932f3-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="932f3-107">Muchos métodos de reflexión en .NET Framework proporcionan un <xref:System.Reflection.ReflectionContext> parámetro para este propósito.</span><span class="sxs-lookup"><span data-stu-id="932f3-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="932f3-108">Para modificar los atributos que se aplican a un parámetro reflejado o miembro, invalide el <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> o <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> método.</span><span class="sxs-lookup"><span data-stu-id="932f3-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="932f3-109">Estos métodos toman el objeto reflejado y la lista de atributos en el contexto de reflexión actual y devuelven la lista de atributos que debe tener en el contexto de reflexión personalizados.</span><span class="sxs-lookup"><span data-stu-id="932f3-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="932f3-110"><xref:System.Reflection.Context.CustomReflectionContext> métodos no deben acceder a la lista de atributos de un objeto reflejado o el método directamente mediante una llamada a la <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> método proporcionado <xref:System.Reflection.MemberInfo> o <xref:System.Reflection.ParameterInfo> de instancia, pero en su lugar, debe usar el `declaredAttributes` lista, que se pasa como un parámetro para el <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="932f3-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="932f3-111">Para agregar propiedades a un tipo reflejado, reemplazar el <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="932f3-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="932f3-112">El método acepta un parámetro que especifica el tipo reflejado y devuelve una lista de propiedades adicionales.</span><span class="sxs-lookup"><span data-stu-id="932f3-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="932f3-113">Debe usar el <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> método para crear objetos de propiedad para devolver.</span><span class="sxs-lookup"><span data-stu-id="932f3-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="932f3-114">Puede especificar a los delegados al crear la propiedad que servirá como el descriptor de acceso de propiedad y puede omitir uno de los descriptores de acceso para crear una propiedad de solo lectura o solo escritura.</span><span class="sxs-lookup"><span data-stu-id="932f3-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="932f3-115">Tenga en cuenta que estas propiedades ficticias no tienen metadatos ni copia de seguridad de Common Intermediate Language (CIL).</span><span class="sxs-lookup"><span data-stu-id="932f3-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="932f3-116">Tenga cuidado de igualdad entre objetos reflejados cuando se trabaja con contextos de reflexión, dado que los objetos que representan el mismo objeto reflejado en varios contextos.</span><span class="sxs-lookup"><span data-stu-id="932f3-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="932f3-117">Puede usar el <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> método para obtener la versión de un contexto de reflexión determinada de un objeto reflejado.</span><span class="sxs-lookup"><span data-stu-id="932f3-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="932f3-118">Un <xref:System.Reflection.Context.CustomReflectionContext> objeto modifica los atributos devueltos por un objeto de reflexión determinado, como los obtenidos por el <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="932f3-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="932f3-119">No modifica los datos del atributo personalizado devueltos por la <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> método y estas dos listas no coincidirán cuando se usa un contexto de reflexión personalizados.</span><span class="sxs-lookup"><span data-stu-id="932f3-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="932f3-120">En el ejemplo siguiente se muestra cómo crear subclases de <xref:System.Reflection.Context.CustomReflectionContext> para agregar un atributo personalizado a todos los miembros de un tipo determinado cuyos nombres comienzan con "A".</span><span class="sxs-lookup"><span data-stu-id="932f3-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="932f3-121">Para ejecutar este código, péguelo en un proyecto de consola vacía y asegúrese de incluir una referencia a System.Reflection.Context.dll.</span><span class="sxs-lookup"><span data-stu-id="932f3-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="932f3-122">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.Context.CustomReflectionContext" />.</span><span class="sxs-lookup"><span data-stu-id="932f3-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="932f3-123">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.Context.CustomReflectionContext" />.</span><span class="sxs-lookup"><span data-stu-id="932f3-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Context.CustomReflectionContext : System.Reflection.ReflectionContext -&gt; System.Reflection.Context.CustomReflectionContext" Usage="new System.Reflection.Context.CustomReflectionContext source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="932f3-124">El contexto de la reflexión que se va a usar como base.</span><span class="sxs-lookup"><span data-stu-id="932f3-124">The reflection context to use as a base.</span></span></param>
        <summary><span data-ttu-id="932f3-125">Inicializa una nueva instancia de la clase <see cref="T:System.Reflection.Context.CustomReflectionContext" /> con el contexto de reflejo especificado como base.</span><span class="sxs-lookup"><span data-stu-id="932f3-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;&#xA;override this.AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="customReflectionContext.AddProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="932f3-126">Tipo al que agregar propiedades.</span><span class="sxs-lookup"><span data-stu-id="932f3-126">The type to add properties to.</span></span></param>
        <summary><span data-ttu-id="932f3-127">Cuando se reemplaza en una clase derivada, proporciona una colección de propiedades adicionales para el tipo especificado, como se representa en este contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="932f3-128">Colección de propiedades adicionales del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="932f3-128">A collection of additional properties for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="932f3-129">Invalide este método para especificar las propiedades que se deben agregar a un tipo determinado.</span><span class="sxs-lookup"><span data-stu-id="932f3-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="932f3-130">Para crear las propiedades, use el <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> método.</span><span class="sxs-lookup"><span data-stu-id="932f3-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="932f3-131">Crea un objeto que representa una propiedad que se va a agregar a un tipo, tal como especifica el método <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> .</span><span class="sxs-lookup"><span data-stu-id="932f3-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="932f3-132">Tipo de la propiedad que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="932f3-132">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="932f3-133">Nombre de la propiedad que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="932f3-133">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="932f3-134">Objeto que representa el descriptor de acceso <see langword="get" /> de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-134">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="932f3-135">Objeto que representa el descriptor de acceso <see langword="set" /> de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-135">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="932f3-136">Crea un objeto que representa una propiedad que se va a agregar a un tipo y que se va a utilizar con el método <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> .</span><span class="sxs-lookup"><span data-stu-id="932f3-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="932f3-137">Objeto que representa la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-137">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="932f3-138">Los objetos devueltos por este método no están completos <xref:System.Reflection.PropertyInfo> objetos y debe utilizarse únicamente en el contexto de la <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="932f3-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter, propertyCustomAttributes, getterCustomAttributes, setterCustomAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="932f3-139">Tipo de la propiedad que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="932f3-139">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="932f3-140">Nombre de la propiedad que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="932f3-140">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="932f3-141">Objeto que representa el descriptor de acceso <see langword="get" /> de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-141">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="932f3-142">Objeto que representa el descriptor de acceso <see langword="set" /> de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-142">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <param name="propertyCustomAttributes"><span data-ttu-id="932f3-143">Colección de atributos personalizados para aplicar a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-143">A collection of custom attributes to apply to the property.</span></span></param>
        <param name="getterCustomAttributes"><span data-ttu-id="932f3-144">Colección de atributos personalizados para aplicar el descriptor <see langword="get" /> de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setterCustomAttributes"><span data-ttu-id="932f3-145">Colección de atributos personalizados para aplicar el descriptor <see langword="set" /> de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="932f3-146">Crea un objeto que representa una propiedad que se va a agregar a un tipo y que se va a utilizar con el método <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> y utilizando los atributos personalizados especificados.</span><span class="sxs-lookup"><span data-stu-id="932f3-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span></span></summary>
        <returns><span data-ttu-id="932f3-147">Objeto que representa la propiedad.</span><span class="sxs-lookup"><span data-stu-id="932f3-147">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="932f3-148">Los objetos devueltos por este método no están completos <xref:System.Reflection.PropertyInfo> objetos y debe utilizarse únicamente en el contexto de la <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> método.</span><span class="sxs-lookup"><span data-stu-id="932f3-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="932f3-149">Cuando se reemplaza en una clase derivada, proporciona una colección modificada de atributos personalizados para el objeto especificado, como se representa en este contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="932f3-150">Miembro cuyos atributos personalizados se devolverán.</span><span class="sxs-lookup"><span data-stu-id="932f3-150">The member whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="932f3-151">Colección de atributos del miembro en el contexto actual.</span><span class="sxs-lookup"><span data-stu-id="932f3-151">A collection of the member's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="932f3-152">Cuando se reemplaza en una clase derivada, proporciona una lista de atributos personalizados para el miembro especificado, como se representa en este contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="932f3-153">Colección que representa los atributos personalizados del miembro especificado en este contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-153">A collection that represents the custom attributes of the specified member in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="932f3-154">Parámetro cuyos atributos personalizados se devolverán.</span><span class="sxs-lookup"><span data-stu-id="932f3-154">The parameter whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="932f3-155">Colección de atributos del parámetro en el contexto actual.</span><span class="sxs-lookup"><span data-stu-id="932f3-155">A collection of the parameter's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="932f3-156">Cuando se reemplaza en una clase derivada, proporciona una lista de atributos personalizados para el parámetro especificado, como se representa en este contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="932f3-157">Colección que representa los atributos personalizados del parámetro especificado en este contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="override this.MapAssembly : System.Reflection.Assembly -&gt; System.Reflection.Assembly" Usage="customReflectionContext.MapAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="932f3-158">Representación externa del ensamblado que se va a representar en este contexto.</span><span class="sxs-lookup"><span data-stu-id="932f3-158">The external representation of the assembly to represent in this context.</span></span></param>
        <summary><span data-ttu-id="932f3-159">Obtiene la representación, en este contexto de reflexión, de un ensamblado representado por un objeto de otro contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="932f3-160">La representación del ensamblado en este contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-160">The representation of the assembly in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberSignature Language="F#" Value="override this.MapType : System.Reflection.TypeInfo -&gt; System.Reflection.TypeInfo" Usage="customReflectionContext.MapType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="932f3-161">Representación externa del tipo que se va a representar en este contexto.</span><span class="sxs-lookup"><span data-stu-id="932f3-161">The external representation of the type to represent in this context.</span></span></param>
        <summary><span data-ttu-id="932f3-162">Obtiene la representación, en este contexto de reflexión, de un tipo representado por un objeto de otro contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="932f3-163">La representación del tipo en este contexto de reflexión.</span><span class="sxs-lookup"><span data-stu-id="932f3-163">The representation of the type in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
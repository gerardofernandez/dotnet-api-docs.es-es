<Type Name="RibbonControlLength" FullName="System.Windows.Controls.Ribbon.RibbonControlLength">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3543798cf2c4789a95efecb9aea21a5206e2e5c9" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48681185" /></Metadata><TypeSignature Language="C#" Value="public struct RibbonControlLength : IEquatable&lt;System.Windows.Controls.Ribbon.RibbonControlLength&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit RibbonControlLength extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Controls.Ribbon.RibbonControlLength&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonControlLength" />
  <TypeSignature Language="VB.NET" Value="Public Structure RibbonControlLength&#xA;Implements IEquatable(Of RibbonControlLength)" />
  <TypeSignature Language="C++ CLI" Value="public value class RibbonControlLength : IEquatable&lt;System::Windows::Controls::Ribbon::RibbonControlLength&gt;" />
  <TypeSignature Language="F#" Value="type RibbonControlLength = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Controls.Ribbon.RibbonControlLength&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.Ribbon.RibbonControlLengthConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="23cf3-101">Representa los anchos de un objeto <see cref="T:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-101">Represents widths in a <see cref="T:System.Windows.Controls.Ribbon.RibbonControlSizeDefinition" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="23cf3-102">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-102">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonControlLength (double pixels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 pixels) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pixels As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonControlLength(double pixels);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.Ribbon.RibbonControlLength : double -&gt; System.Windows.Controls.Ribbon.RibbonControlLength" Usage="new System.Windows.Controls.Ribbon.RibbonControlLength pixels" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pixels" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="pixels"><span data-ttu-id="23cf3-103">Valor de píxeles absoluto en el que se inicializa la longitud.</span><span class="sxs-lookup"><span data-stu-id="23cf3-103">The absolute pixel value to initialize the length to.</span></span></param>
        <summary><span data-ttu-id="23cf3-104">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> con un valor absoluto en píxeles.</span><span class="sxs-lookup"><span data-stu-id="23cf3-104">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> structure with an absolute value in pixels.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="23cf3-105"><paramref name="pixels" /> es <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-105"><paramref name="pixels" /> is <see cref="F:System.Double.NaN" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonControlLength (double value, System.Windows.Controls.Ribbon.RibbonControlLengthUnitType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value, valuetype System.Windows.Controls.Ribbon.RibbonControlLengthUnitType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControlLength.#ctor(System.Double,System.Windows.Controls.Ribbon.RibbonControlLengthUnitType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double, type As RibbonControlLengthUnitType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonControlLength(double value, System::Windows::Controls::Ribbon::RibbonControlLengthUnitType type);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.Ribbon.RibbonControlLength : double * System.Windows.Controls.Ribbon.RibbonControlLengthUnitType -&gt; System.Windows.Controls.Ribbon.RibbonControlLength" Usage="new System.Windows.Controls.Ribbon.RibbonControlLength (value, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
        <Parameter Name="type" Type="System.Windows.Controls.Ribbon.RibbonControlLengthUnitType" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="23cf3-106">El tamaño solicitado del elemento.</span><span class="sxs-lookup"><span data-stu-id="23cf3-106">The requested size of the element.</span></span></param>
        <param name="type"><span data-ttu-id="23cf3-107">El tipo que se utiliza para determinar cómo se calcula el tamaño del elemento.</span><span class="sxs-lookup"><span data-stu-id="23cf3-107">The type that is used to determine how the size of the element is calculated.</span></span></param>
        <summary><span data-ttu-id="23cf3-108">Inicializa una nueva instancia de la estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> con el valor y la unidad de longitud especificados.</span><span class="sxs-lookup"><span data-stu-id="23cf3-108">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> structure with the specified value and length unit.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="23cf3-109"><paramref name="value" /> es <see cref="F:System.Double.NaN" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-109"><paramref name="value" /> is <see cref="F:System.Double.NaN" />.</span></span>  
  
<span data-ttu-id="23cf3-110">O bien</span><span class="sxs-lookup"><span data-stu-id="23cf3-110">-or-</span></span> 
 <span data-ttu-id="23cf3-111"><paramref name="type" /> es <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /> y <paramref name="value" />es <see cref="F:System.Double.NegativeInfinity" /> o <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-111"><paramref name="type" /> is <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /> and <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" /> or <see cref="F:System.Double.PositiveInfinity" />.</span></span>  
  
<span data-ttu-id="23cf3-112">O bien</span><span class="sxs-lookup"><span data-stu-id="23cf3-112">-or-</span></span> 
 <span data-ttu-id="23cf3-113"><paramref name="type" /> no es <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" />, <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Pixel" />, <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" /> ni <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Item" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-113"><paramref name="type" /> is not <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" />, <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Pixel" />, <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" />, or <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Item" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.Ribbon.RibbonControlLength Auto { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Controls.Ribbon.RibbonControlLength Auto" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControlLength.Auto" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Auto As RibbonControlLength" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::Ribbon::RibbonControlLength Auto { System::Windows::Controls::Ribbon::RibbonControlLength get(); };" />
      <MemberSignature Language="F#" Value="member this.Auto : System.Windows.Controls.Ribbon.RibbonControlLength" Usage="System.Windows.Controls.Ribbon.RibbonControlLength.Auto" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonControlLength</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23cf3-114">Obtiene una estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> que representa el modo de ajuste de tamaño automático estándar.</span><span class="sxs-lookup"><span data-stu-id="23cf3-114">Gets a <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> structure that represents the standard automatic sizing mode.</span></span></summary>
        <value><span data-ttu-id="23cf3-115">Estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> que representa el modo de ajuste de tamaño automático estándar.</span><span class="sxs-lookup"><span data-stu-id="23cf3-115">A <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> structure that represents the standard automatic sizing mode.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="23cf3-116">Determina si un objeto especificado es igual que <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-116">Determines whether an object is equal to the current <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="ribbonControlLength.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="23cf3-117">Objeto que se va a comparar con la actual instancia.</span><span class="sxs-lookup"><span data-stu-id="23cf3-117">The object to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="23cf3-118">Determina si el objeto especificado es igual al objeto <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="23cf3-118">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />.</span></span></summary>
        <returns><span data-ttu-id="23cf3-119"><see langword="true" /> si el objeto especificado es una estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> con el mismo valor y modo de ajuste de tamaño que la estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> actual; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-119"><see langword="true" /> if the specified object is a <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> with the same value and sizing mode as the current <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Controls.Ribbon.RibbonControlLength other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Controls.Ribbon.RibbonControlLength other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControlLength.Equals(System.Windows.Controls.Ribbon.RibbonControlLength)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As RibbonControlLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Controls::Ribbon::RibbonControlLength other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Controls.Ribbon.RibbonControlLength -&gt; bool" Usage="ribbonControlLength.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Windows.Controls.Ribbon.RibbonControlLength" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="23cf3-120"><see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> que se va a comparar con la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="23cf3-120">The <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="23cf3-121">Determina si la estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> especificada es igual que la estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="23cf3-121">Determines whether the specified <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> is equal to the current <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />.</span></span></summary>
        <returns><span data-ttu-id="23cf3-122"><see langword="true" /> si el objeto especificado es una estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> con el mismo valor y modo de ajuste de tamaño que la estructura <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> actual; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-122"><see langword="true" /> if the specified object is a <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> with the same value and sizing mode as the current <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControlLength.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="ribbonControlLength.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23cf3-123">Obtiene un código hash para <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-123">Gets a hash code for the <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />.</span></span></summary>
        <returns><span data-ttu-id="23cf3-124">Código hash para el objeto <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> actual.</span><span class="sxs-lookup"><span data-stu-id="23cf3-124">A hash code for the current <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAbsolute">
      <MemberSignature Language="C#" Value="public bool IsAbsolute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAbsolute" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAbsolute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAbsolute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAbsolute : bool" Usage="System.Windows.Controls.Ribbon.RibbonControlLength.IsAbsolute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23cf3-125">Obtiene un valor que indica si esta instancia dimensiona elementos según un valor de píxel o lógico fijo.</span><span class="sxs-lookup"><span data-stu-id="23cf3-125">Gets a value that indicates whether this instance sizes elements based on a fixed pixel or logical value.</span></span></summary>
        <value><span data-ttu-id="23cf3-126"><see langword="true" /> si la propiedad <see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /> está establecida en <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Pixel" /> o <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Item" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-126"><see langword="true" /> if the <see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /> property is set to <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Pixel" /> or <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Item" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuto">
      <MemberSignature Language="C#" Value="public bool IsAuto { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuto" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuto As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuto { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuto : bool" Usage="System.Windows.Controls.Ribbon.RibbonControlLength.IsAuto" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23cf3-127">Obtiene un valor que indica si esta instancia dimensiona automáticamente elementos.</span><span class="sxs-lookup"><span data-stu-id="23cf3-127">Gets a value that indicates whether this instance automatically sizes elements.</span></span></summary>
        <value><span data-ttu-id="23cf3-128">Es <see langword="true" /> si la propiedad <see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /> está establecida en <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-128"><see langword="true" /> if the <see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /> property is set to <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStar">
      <MemberSignature Language="C#" Value="public bool IsStar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControlLength.IsStar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStar { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStar : bool" Usage="System.Windows.Controls.Ribbon.RibbonControlLength.IsStar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23cf3-129">Obtiene un valor que indica si esta instancia dimensiona automáticamente elementos según una proporción ponderada del espacio disponible.</span><span class="sxs-lookup"><span data-stu-id="23cf3-129">Gets a value that indicates whether this instance automatically sizes elements based on a weighted proportion of available space.</span></span></summary>
        <value><span data-ttu-id="23cf3-130">Es <see langword="true" /> si la propiedad <see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /> está establecida en <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-130"><see langword="true" /> if the <see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /> property is set to <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Star" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.Ribbon.RibbonControlLength length1, System.Windows.Controls.Ribbon.RibbonControlLength length2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.Ribbon.RibbonControlLength length1, valuetype System.Windows.Controls.Ribbon.RibbonControlLength length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Equality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (length1 As RibbonControlLength, length2 As RibbonControlLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::Ribbon::RibbonControlLength length1, System::Windows::Controls::Ribbon::RibbonControlLength length2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Controls.Ribbon.RibbonControlLength * System.Windows.Controls.Ribbon.RibbonControlLength -&gt; bool" Usage="length1 = length2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length1" Type="System.Windows.Controls.Ribbon.RibbonControlLength" />
        <Parameter Name="length2" Type="System.Windows.Controls.Ribbon.RibbonControlLength" />
      </Parameters>
      <Docs>
        <param name="length1"><span data-ttu-id="23cf3-131">Primera instancia de <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="23cf3-131">The first <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> instance to compare.</span></span></param>
        <param name="length2"><span data-ttu-id="23cf3-132">Segunda instancia de <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="23cf3-132">The second <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> instance to compare.</span></span></param>
        <summary><span data-ttu-id="23cf3-133">Compara dos estructuras <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> para determinar si son iguales.</span><span class="sxs-lookup"><span data-stu-id="23cf3-133">Compares two <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> structures for equality.</span></span></summary>
        <returns><span data-ttu-id="23cf3-134"><see langword="true" /> si las dos instancias de <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> tienen el mismo valor o modo de ajuste de tamaño; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-134"><see langword="true" /> if the two <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> instances have the same value and sizing mode; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.Ribbon.RibbonControlLength length1, System.Windows.Controls.Ribbon.RibbonControlLength length2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.Ribbon.RibbonControlLength length1, valuetype System.Windows.Controls.Ribbon.RibbonControlLength length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality(System.Windows.Controls.Ribbon.RibbonControlLength,System.Windows.Controls.Ribbon.RibbonControlLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (length1 As RibbonControlLength, length2 As RibbonControlLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::Ribbon::RibbonControlLength length1, System::Windows::Controls::Ribbon::RibbonControlLength length2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Controls.Ribbon.RibbonControlLength * System.Windows.Controls.Ribbon.RibbonControlLength -&gt; bool" Usage="System.Windows.Controls.Ribbon.RibbonControlLength.op_Inequality (length1, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length1" Type="System.Windows.Controls.Ribbon.RibbonControlLength" />
        <Parameter Name="length2" Type="System.Windows.Controls.Ribbon.RibbonControlLength" />
      </Parameters>
      <Docs>
        <param name="length1"><span data-ttu-id="23cf3-135">Primera instancia de <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="23cf3-135">The first <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> instance to compare.</span></span></param>
        <param name="length2"><span data-ttu-id="23cf3-136">Segunda instancia de <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> que se va a comparar.</span><span class="sxs-lookup"><span data-stu-id="23cf3-136">The second <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> instance to compare.</span></span></param>
        <summary><span data-ttu-id="23cf3-137">Compara dos estructuras <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> para determinar si no son iguales.</span><span class="sxs-lookup"><span data-stu-id="23cf3-137">Compares two <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> structures to determine whether they are not equal.</span></span></summary>
        <returns><span data-ttu-id="23cf3-138"><see langword="true" /> si las dos instancias de <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> no tienen el mismo valor o modo de ajuste de tamaño; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-138"><see langword="true" /> if the two <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> instances do not have the same value or sizing mode; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RibbonControlLengthUnitType">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonControlLengthUnitType RibbonControlLengthUnitType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Ribbon.RibbonControlLengthUnitType RibbonControlLengthUnitType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RibbonControlLengthUnitType As RibbonControlLengthUnitType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonControlLengthUnitType RibbonControlLengthUnitType { System::Windows::Controls::Ribbon::RibbonControlLengthUnitType get(); };" />
      <MemberSignature Language="F#" Value="member this.RibbonControlLengthUnitType : System.Windows.Controls.Ribbon.RibbonControlLengthUnitType" Usage="System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonControlLengthUnitType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23cf3-139">Obtiene el tipo que se utiliza para determinar cómo se calcula el tamaño del elemento.</span><span class="sxs-lookup"><span data-stu-id="23cf3-139">Gets the type that is used to determine how the size of the element is calculated.</span></span></summary>
        <value><span data-ttu-id="23cf3-140">Uno de los valores de enumeración que especifica cómo se calcula el tamaño del elemento.</span><span class="sxs-lookup"><span data-stu-id="23cf3-140">One of the enumeration values that specifies how the size of the element is calculated.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonControlLength.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="ribbonControlLength.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="23cf3-141">Devuelve una cadena que representa el objeto actual.</span><span class="sxs-lookup"><span data-stu-id="23cf3-141">Returns a string that represents the current object.</span></span></summary>
        <returns><span data-ttu-id="23cf3-142">Cadena que representa el objeto actual.</span><span class="sxs-lookup"><span data-stu-id="23cf3-142">A string that represent the current object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public double Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonControlLength.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Value { double get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : double" Usage="System.Windows.Controls.Ribbon.RibbonControlLength.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="23cf3-143">Obtiene el valor absoluto de <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> en píxeles o unidades lógicas.</span><span class="sxs-lookup"><span data-stu-id="23cf3-143">Gets the absolute value of the <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> in pixels or logical units.</span></span></summary>
        <value><span data-ttu-id="23cf3-144">El valor absoluto de <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> en píxeles o unidades lógicas, o 1.0 si la propiedad <see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /> está establecida en <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="23cf3-144">The absolute value of the <see cref="T:System.Windows.Controls.Ribbon.RibbonControlLength" /> in pixels or logical units, or 1.0 if the <see cref="P:System.Windows.Controls.Ribbon.RibbonControlLength.RibbonControlLengthUnitType" /> property is set to <see cref="F:System.Windows.Controls.Ribbon.RibbonControlLengthUnitType.Auto" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
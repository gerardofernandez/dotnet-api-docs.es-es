<Type Name="ModelEditingScope" FullName="System.Activities.Presentation.Model.ModelEditingScope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b62aee9fad2dfb8c0de102f5fc568da1449276c2" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52611361" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ModelEditingScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelEditingScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelEditingScope" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelEditingScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelEditingScope abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type ModelEditingScope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f0e54-101">Representa un grupo de cambios en el almacén de edición.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f0e54-101">Represents a group of changes to the editing store.</span>
      </span>
      <span data-ttu-id="f0e54-102">Los grupos de cambios son transaccionales.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f0e54-102">Change groups are transactional.</span>
      </span>
      <span data-ttu-id="f0e54-103">Los cambios que se llevan a cabo en un ámbito de edición se pueden confirmar o anular como una unidad.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f0e54-103">The changes made under an editing scope can be committed or aborted as a unit.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e54-104">Cuando se confirma un ámbito de edición, el almacén de edición acepta todos los cambios que se hayan producido en él y los aplican al modelo.</span><span class="sxs-lookup"><span data-stu-id="f0e54-104">When an editing scope is committed, the editing store takes all changes that occurred within it and applies them to the model.</span></span> <span data-ttu-id="f0e54-105">Si el ámbito de edición <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> se llama al método o el ámbito de edición se elimina antes <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> se denomina Editar ámbito invertirá los cambios realizados en los objetos subyacentes, volver a aplicar el estado del almacén de edición.</span><span class="sxs-lookup"><span data-stu-id="f0e54-105">If the editing scope's <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> method is called, or the editing scope is disposed of before <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> is called, the editing scope will instead reverse the changes made to the underlying objects, reapplying state from the editing store.</span></span> <span data-ttu-id="f0e54-106">Esto proporciona una base sólida para un mecanismo de deshacer.</span><span class="sxs-lookup"><span data-stu-id="f0e54-106">This provides a solid basis for an undo mechanism.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelEditingScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelEditingScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0e54-107">Crea un nuevo <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-107">Creates a new <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanComplete">
      <MemberSignature Language="C#" Value="protected abstract bool CanComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CanComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.CanComplete" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CanComplete () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool CanComplete();" />
      <MemberSignature Language="F#" Value="abstract member CanComplete : unit -&gt; bool" Usage="modelEditingScope.CanComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0e54-108">Determina si se debería llamar al método <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> o si se debería revertir el cambio en su lugar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-108">Determines whether <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> should be called, or whether the change should instead be reverted.</span>
          </span>
          <span data-ttu-id="f0e54-109">Las razones para revertir el cambio podrían ser que un archivo no se puede desproteger de un sistema de control de código fuente para su modificación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-109">Reasons for reverting might include a file cannot be checked out of a source control system for modification.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0e54-110">
            <see langword="true" /> si se puede completar; <see langword="false" /> si se debería revertir el cambio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-110">
              <see langword="true" /> if completion can occur; <see langword="false" /> if the change should instead revert.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberSignature Language="F#" Value="member this.Complete : unit -&gt; unit" Usage="modelEditingScope.Complete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0e54-111">Completa el ámbito de edición llamando al método <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-111">Completes the editing scope by calling the <see cref="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f0e54-112">El ámbito de edición ya se ha revertido o completado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-112">The editing scope has already been reverted or completed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelEditingScope.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Activities.Presentation.Model.ModelEditingScope.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f0e54-113">Describe el grupo de cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-113">Describes the group of changes.</span>
          </span>
          <span data-ttu-id="f0e54-114">Se puede cambiar en cualquier momento antes de que se confirmen los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-114">It can be changed anytime before the changes are committed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f0e54-115">Devuelve una clase <see cref="T:System.String" /> que describe los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-115">Returnsa <see cref="T:System.String" /> that describes the changes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f0e54-116">Elimina este objeto anulando los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-116">Disposes of this object by aborting changes.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="modelEditingScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0e54-117">Elimina este objeto anulando los cambios a menos que el ámbito de edición ya se haya completado o revertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-117">Disposes of this object by aborting changes unless the editing scope has already been completed or reverted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e54-118">Si el ámbito de edición se ha completado o si se ha revertido previamente, al llamar a este método no se hace nada.</span><span class="sxs-lookup"><span data-stu-id="f0e54-118">If either the editing scope has completed or it has been reverted previously, then calling this method does nothing.</span></span> <span data-ttu-id="f0e54-119">Este método llama a <xref:System.Activities.Presentation.Model.ModelEditingScope.Dispose%2A> con el parámetro de entrada establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="f0e54-119">This method calls <xref:System.Activities.Presentation.Model.ModelEditingScope.Dispose%2A> with the input parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="modelEditingScope.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="f0e54-120">Determina si los cambios se deberían revertir como parte de una operación deshacer o porque el objeto se está finalizando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-120">Determines whether the changes should be reverted as part of an undo operation or because the object is being finalized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0e54-121">Elimina este objeto anulando los cambios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-121">Disposes of this object by aborting changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e54-122">Las llamadas <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> si `disposing` está establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="f0e54-122">Calls <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> if `disposing` is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComplete">
      <MemberSignature Language="C#" Value="protected abstract void OnComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnComplete" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnComplete();" />
      <MemberSignature Language="F#" Value="abstract member OnComplete : unit -&gt; unit" Usage="modelEditingScope.OnComplete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0e54-123">Completa el ámbito de edición.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-123">Performs the actual complete of the editing scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnException">
      <MemberSignature Language="C#" Value="protected abstract bool OnException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnException(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="abstract member OnException : Exception -&gt; bool" Usage="modelEditingScope.OnException exception" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="f0e54-124">Excepción que se va a controlar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-124">The exception to handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0e54-125">Controla una excepción.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-125">Handles an exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f0e54-126">Es <see langword="true" /> si la excepción está controlada; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-126">
              <see langword="true" /> if the exception is handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e54-127">Los métodos <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> y <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> llaman a este método para controlar excepciones.</span><span class="sxs-lookup"><span data-stu-id="f0e54-127">The <xref:System.Activities.Presentation.Model.ModelEditingScope.Complete%2A> and <xref:System.Activities.Presentation.Model.ModelEditingScope.Revert%2A> methods call this method to handle exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRevert">
      <MemberSignature Language="C#" Value="protected abstract void OnRevert (bool finalizing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRevert(bool finalizing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.OnRevert(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnRevert (finalizing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnRevert(bool finalizing);" />
      <MemberSignature Language="F#" Value="abstract member OnRevert : bool -&gt; unit" Usage="modelEditingScope.OnRevert finalizing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalizing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="finalizing">
          <span data-ttu-id="f0e54-128">Determina si la anulación se produce porque se está finalizando el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-128">Determines whether the abort is occurring because the object is being finalized.</span>
          </span>
          <span data-ttu-id="f0e54-129">Algunos sistemas de deshacer pueden intentar la anulación en este caso, mientras que otros podrían abandonar el cambio y registrarlo como una operación de deshacer reactiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-129">Some undo systems might attempt to abort in this case, while others might abandon the change and record it as a reactive undo operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f0e54-130">Revierte el ámbito de edición.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-130">Performs the actual revert of the editing scope.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Revert">
      <MemberSignature Language="C#" Value="public void Revert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Revert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelEditingScope.Revert" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revert ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revert();" />
      <MemberSignature Language="F#" Value="member this.Revert : unit -&gt; unit" Usage="modelEditingScope.Revert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f0e54-131">Abandona los cambios realizados durante el ámbito de edición.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-131">Abandons the changes made during the editing scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f0e54-132">Este método llama a <xref:System.Activities.Presentation.Model.ModelEditingScope.OnRevert%2A> con el parámetro de entrada establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="f0e54-132">This method calls <xref:System.Activities.Presentation.Model.ModelEditingScope.OnRevert%2A> with the input parameter set to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f0e54-133">El grupo de cambios ya se ha confirmado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f0e54-133">The group of changes has already been committed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>
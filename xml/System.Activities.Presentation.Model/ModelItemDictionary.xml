<Type Name="ModelItemDictionary" FullName="System.Activities.Presentation.Model.ModelItemDictionary">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d225c95041e4fffa3986113d8572dfbdcfad975d" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53290513" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelItemDictionary : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;, System.Collections.Generic.IDictionary&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;, System.Collections.IDictionary, System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItemDictionary extends System.Activities.Presentation.Model.ModelItem implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;&gt;, class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable, class System.Collections.Specialized.INotifyCollectionChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItemDictionary" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItemDictionary&#xA;Inherits ModelItem&#xA;Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)), IDictionary, IDictionary(Of ModelItem, ModelItem), IEnumerable(Of KeyValuePair(Of ModelItem, ModelItem)), INotifyCollectionChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItemDictionary abstract : System::Activities::Presentation::Model::ModelItem, System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;, System::Collections::IDictionary, System::Collections::Specialized::INotifyCollectionChanged" />
  <TypeSignature Language="F#" Value="type ModelItemDictionary = class&#xA;    inherit ModelItem&#xA;    interface IDictionary&lt;ModelItem, ModelItem&gt;&#xA;    interface ICollection&lt;KeyValuePair&lt;ModelItem, ModelItem&gt;&gt;&#xA;    interface seq&lt;KeyValuePair&lt;ModelItem, ModelItem&gt;&gt;&#xA;    interface IEnumerable&#xA;    interface IDictionary&#xA;    interface ICollection&#xA;    interface INotifyCollectionChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.Model.ModelItem</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="eae38-101">Deriva de la clase <see cref="T:System.Activities.Presentation.Model.ModelItem" /> e implementa compatibilidad para un diccionario de pares clave-valor.</span><span class="sxs-lookup"><span data-stu-id="eae38-101">Derives from <see cref="T:System.Activities.Presentation.Model.ModelItem" /> and implements support for a dictionary of key/value pairs.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItemDictionary ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItemDictionary();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eae38-102">Crea un nuevo <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-102">Creates a new <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eae38-103">Agrega el valor al diccionario debajo de la clave determinada.</span><span class="sxs-lookup"><span data-stu-id="eae38-103">Adds the value to the dictionary under the given key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract void Add (System.Activities.Presentation.Model.ModelItem key, System.Activities.Presentation.Model.ModelItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Activities.Presentation.Model.ModelItem key, class System.Activities.Presentation.Model.ModelItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Add (key As ModelItem, value As ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Add(System::Activities::Presentation::Model::ModelItem ^ key, System::Activities::Presentation::Model::ModelItem ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Activities.Presentation.Model.ModelItem * System.Activities.Presentation.Model.ModelItem -&gt; unit" Usage="modelItemDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="value" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-104"><see cref="T:System.Activities.Presentation.Model.ModelItem" /> que representa la clave en el par clave-valor que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="eae38-104">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that represents the key in the key/value pair to be added.</span></span></param>
        <param name="value"><span data-ttu-id="eae38-105"><see cref="T:System.Activities.Presentation.Model.ModelItem" /> que representa el valor en el par clave-valor que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="eae38-105">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that represents the value in the key/value pair to be added.</span></span></param>
        <summary><span data-ttu-id="eae38-106">Agrega el valor al diccionario debajo de la clave determinada.</span><span class="sxs-lookup"><span data-stu-id="eae38-106">Adds the value to the dictionary under the given key.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eae38-107">Si el objeto <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eae38-107">If the <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Add (key As Object, value As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ Add(System::Object ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj * obj -&gt; System.Activities.Presentation.Model.ModelItem" Usage="modelItemDictionary.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-108">Clave del par clave-valor que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="eae38-108">The key in the key/value pair to be added.</span></span></param>
        <param name="value"><span data-ttu-id="eae38-109">Valor del par clave-valor que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="eae38-109">The value in the key/value pair to be added.</span></span></param>
        <summary><span data-ttu-id="eae38-110">Agrega el valor al diccionario debajo de la clave determinada.</span><span class="sxs-lookup"><span data-stu-id="eae38-110">Adds the value to the dictionary under the given key.</span></span> <span data-ttu-id="eae38-111">Este método ajusta la clave y el valor de un conjunto de objetos <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-111">This method wraps the key and value in a set of <see cref="T:System.Activities.Presentation.Model.ModelItem" /> objects.</span></span></summary>
        <returns><span data-ttu-id="eae38-112">Devuelve un <see cref="T:System.Activities.Presentation.Model.ModelItem" /> que representa la clave.</span><span class="sxs-lookup"><span data-stu-id="eae38-112">Returns a <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that represents the key.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-113">Si <paramref name="key" /> o <paramref name="value" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-113">If <paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eae38-114">Si el objeto <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eae38-114">If the <see cref="T:System.Activities.Presentation.Model.ModelItemDictionary" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Clear" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="modelItemDictionary.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eae38-115">Borra el contenido del diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-115">Clears the contents of the dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollectionChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event CollectionChanged As NotifyCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Collections::Specialized::NotifyCollectionChangedEventHandler ^ CollectionChanged;" />
      <MemberSignature Language="F#" Value="member this.CollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " Usage="member this.CollectionChanged : System.Collections.Specialized.NotifyCollectionChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NotifyCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-116">Se genera cuando cambia el contenido de esta colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-116">Raised when the contents of this collection change.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="protected virtual bool Contains (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Contains (item As KeyValuePair(Of ModelItem, ModelItem)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt; item);" />
      <MemberSignature Language="F#" Value="abstract member Contains : System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt; -&gt; bool&#xA;override this.Contains : System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt; -&gt; bool" Usage="modelItemDictionary.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="eae38-117">Par clave-valor que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="eae38-117">The key/value pair to find.</span></span></param>
        <summary><span data-ttu-id="eae38-118">Determina si el diccionario contiene el par clave-valor especificado.</span><span class="sxs-lookup"><span data-stu-id="eae38-118">Determines whether the dictionary contains the given key/value pair.</span></span></summary>
        <returns><span data-ttu-id="eae38-119"><see langword="true" /> si el diccionario contiene el par clave-valor proporcionado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-119"><see langword="true" /> if the dictionary contains the given key/value pair; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsKey">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eae38-120">Determina si el diccionario contiene la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-120">Determines whether the dictionary contains the given key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public abstract bool ContainsKey (System.Activities.Presentation.Model.ModelItem key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(class System.Activities.Presentation.Model.ModelItem key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ContainsKey (key As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ContainsKey(System::Activities::Presentation::Model::ModelItem ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : System.Activities.Presentation.Model.ModelItem -&gt; bool" Usage="modelItemDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-121">Clave que se busca.</span><span class="sxs-lookup"><span data-stu-id="eae38-121">The key to find.</span></span></param>
        <summary><span data-ttu-id="eae38-122">Determina si el diccionario contiene la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-122">Determines whether the dictionary contains the given key.</span></span></summary>
        <returns><span data-ttu-id="eae38-123"><see langword="true" /> si el diccionario contiene la clave especificada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-123"><see langword="true" /> if the dictionary contains the given key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-124">Si <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-124">If <paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public abstract bool ContainsKey (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ContainsKey (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ContainsKey(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : obj -&gt; bool" Usage="modelItemDictionary.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-125">Clave que se busca.</span><span class="sxs-lookup"><span data-stu-id="eae38-125">The key to find.</span></span></param>
        <summary><span data-ttu-id="eae38-126">Determina si el diccionario contiene la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-126">Determines whether the dictionary contains the given key.</span></span></summary>
        <returns><span data-ttu-id="eae38-127"><see langword="true" /> si el diccionario contiene la clave especificada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-127"><see langword="true" /> if the dictionary contains the given key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-128">Si <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-128">If <paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="protected virtual void CopyTo (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CopyTo (array As KeyValuePair(Of ModelItem, ModelItem)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt;[] * int -&gt; unit&#xA;override this.CopyTo : System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt;[] * int -&gt; unit" Usage="modelItemDictionary.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eae38-129">La matriz de pares clave-valor que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="eae38-129">The array of key/value pairs to copy.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="eae38-130">Índice de base cero del diccionario en el que comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="eae38-130">The zero-based index in the current dictionary at which copying begins.</span></span></param>
        <summary><span data-ttu-id="eae38-131">Copia una matriz de pares clave-valor en el diccionario determinado.</span><span class="sxs-lookup"><span data-stu-id="eae38-131">Copies an array of key/value pairs into the given dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public abstract int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Count" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-132">Devuelve el número de elementos del diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-132">Returns the count of items in the dictionary.</span></span></summary>
        <value><span data-ttu-id="eae38-133">Devuelva <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-133">Returns <see cref="T:System.Int32" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of ModelItem, ModelItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem, System.Activities.Presentation.Model.ModelItem&gt;&gt;" Usage="modelItemDictionary.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eae38-134">Devuelve un enumerador para los elementos del diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-134">Returns an enumerator for the items in the dictionary.</span></span></summary>
        <returns><span data-ttu-id="eae38-135">Devuelve <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-135">Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="protected virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-136">Determina si el diccionario es de tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="eae38-136">Determines whether the dictionary is a fixed size.</span></span></summary>
        <value><span data-ttu-id="eae38-137">Es <see langword="true" /> si el diccionario tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-137"><see langword="true" /> if the dictionary is a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eae38-138">La implementación predeterminada devuelve <see langword="true" /> si el diccionario es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="eae38-138">The default implementation returns <see langword="true" /> if the dictionary is read-only.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-139">Determina si no se puede modificar el diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-139">Determines whether the dictionary cannot be modified.</span></span></summary>
        <value><span data-ttu-id="eae38-140"><see langword="true" /> si el diccionario no se puede modificar; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-140"><see langword="true" /> if the dictionary cannot be modified; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="protected virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-141">Obtiene un valor que indica si el acceso al diccionario está sincronizado (es seguro para la ejecución de subprocesos).</span><span class="sxs-lookup"><span data-stu-id="eae38-141">Gets a value that indicates whether access to the dictionary is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="eae38-142"><see langword="true" /> si el acceso al diccionario está sincronizado (es seguro para la ejecución de subprocesos); en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-142"><see langword="true" /> if access to the dictionary is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="eae38-143">La implementación predeterminada devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-143">The default implementation returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eae38-144">Obtiene o establece el elemento en la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-144">Gets or sets the item at the specified key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem this[System.Activities.Presentation.Model.ModelItem key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Item(class System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As ModelItem) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ default[System::Activities::Presentation::Model::ModelItem ^] { System::Activities::Presentation::Model::ModelItem ^ get(System::Activities::Presentation::Model::ModelItem ^ key); void set(System::Activities::Presentation::Model::ModelItem ^ key, System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Activities.Presentation.Model.ModelItem) : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-145">Clave especificada del elemento.</span><span class="sxs-lookup"><span data-stu-id="eae38-145">The specified key of the item.</span></span></param>
        <summary><span data-ttu-id="eae38-146">Obtiene o establece el elemento en la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-146">Gets or sets the item at the specified key.</span></span></summary>
        <value><span data-ttu-id="eae38-147">Devuelva <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-147">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae38-148">Si no hay ningún elemento con la clave dada, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="eae38-148">If there is no item for the given key, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-149">Si <paramref name="key" /> o el valor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-149">If <paramref name="key" /> or the value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eae38-150">Si el diccionario es de solo lectura y establece un nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="eae38-150">If the dictionary is read-only and you set a new value.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="eae38-151">Si <paramref name="key" /> no está en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-151">If <paramref name="key" /> is not in the dictionary.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem this[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ default[System::Object ^] { System::Activities::Presentation::Model::ModelItem ^ get(System::Object ^ key); void set(System::Object ^ key, System::Activities::Presentation::Model::ModelItem ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(obj) : System.Activities.Presentation.Model.ModelItem with get, set" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-152">Clave especificada del elemento.</span><span class="sxs-lookup"><span data-stu-id="eae38-152">The specified key of the item.</span></span></param>
        <summary><span data-ttu-id="eae38-153">Obtiene o establece el elemento en la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-153">Gets or sets the item at the specified key.</span></span></summary>
        <value><span data-ttu-id="eae38-154">Devuelva <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-154">Returns <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae38-155">Si no hay ningún elemento con la clave dada, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="eae38-155">If there is no item for the given key, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-156">Si <paramref name="key" /> o el valor es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-156">If <paramref name="key" /> or the value is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eae38-157">Si el diccionario es de solo lectura y establece un nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="eae38-157">If the dictionary is read-only and you set a new value.</span></span></exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException"><span data-ttu-id="eae38-158">Si <paramref name="key" /> no está en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-158">If <paramref name="key" /> is not in the dictionary.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-159"><see langword="DependencyProperty" /> que representa la clave en el par clave-valor que se agrega a todos los elementos del diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-159">The <see langword="DependencyProperty" /> that represents the key in the key/value pair that is added to all items in the dictionary.</span></span> <span data-ttu-id="eae38-160">El tipo de datos de <see langword="KeyProperty" /> es <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-160">The data type of the <see langword="KeyProperty" /> is <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Keys" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Keys As ICollection(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-161">Obtiene las claves de la colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-161">Gets the keys of the collection.</span></span> <span data-ttu-id="eae38-162">Se garantiza que las claves estén en el mismo orden que los valores.</span><span class="sxs-lookup"><span data-stu-id="eae38-162">The keys are guaranteed to be in the same order as the values.</span></span> <span data-ttu-id="eae38-163">La colección resultante es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eae38-163">The resulting collection is read-only.</span></span></summary>
        <value><span data-ttu-id="eae38-164">Devuelva <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-164">Returns <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eae38-165">Quita el elemento del diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-165">Removes the item from the dictionary.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (System.Activities.Presentation.Model.ModelItem key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class System.Activities.Presentation.Model.ModelItem key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Activities::Presentation::Model::ModelItem ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : System.Activities.Presentation.Model.ModelItem -&gt; bool" Usage="modelItemDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-166">Clave del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="eae38-166">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="eae38-167">Quita del diccionario el elemento con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-167">Removes the item with the specified key from the dictionary.</span></span></summary>
        <returns><span data-ttu-id="eae38-168"><see langword="true" /> si existe el elemento; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-168"><see langword="true" /> if the item exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae38-169">Este método no realiza ninguna acción si el elemento no existe en la colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-169">This method does nothing if the item does not exist in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-170">Si <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-170">If the <paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eae38-171">Si el diccionario es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eae38-171">If the dictionary is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract bool Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Remove(System::Object ^ key);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; bool" Usage="modelItemDictionary.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-172">El elemento que se va a quitar utilizando la clave como criterio de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="eae38-172">The item to remove using the key as the search criterion.</span></span></param>
        <summary><span data-ttu-id="eae38-173">Quita el elemento del diccionario.</span><span class="sxs-lookup"><span data-stu-id="eae38-173">Removes the item from the dictionary.</span></span></summary>
        <returns><span data-ttu-id="eae38-174"><see langword="true" /> si existe el elemento; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-174"><see langword="true" /> if the item exists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae38-175">Este método no realiza ninguna acción si el elemento no existe en la colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-175">This method does nothing if the item does not exist in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-176">Si <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-176">If the <paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="eae38-177">Si el diccionario es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eae38-177">If the dictionary is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="protected virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-178">Obtiene un objeto que se puede utilizar para sincronizar el acceso a esta colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-178">Gets an object that can be used to synchronize access to this collection.</span></span></summary>
        <value><span data-ttu-id="eae38-179">Devuelve <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-179">Returns <see cref="T:System.Object" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae38-180">La implementación predeterminada devuelve "this".</span><span class="sxs-lookup"><span data-stu-id="eae38-180">The default implementation returns "this."</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;ModelItem,ModelItem&gt;&gt;.Add (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem&gt;&gt;#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As KeyValuePair(Of ModelItem, ModelItem)) Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Add(System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt; item) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="eae38-181">Elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="eae38-181">The element to add.</span></span></param>
        <summary><span data-ttu-id="eae38-182">Agrega un nuevo elemento al final de la colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-182">Adds a new element to the end of the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;ModelItem,ModelItem&gt;&gt;.Contains (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem&gt;&gt;#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As KeyValuePair(Of ModelItem, ModelItem)) As Boolean Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Contains(System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt; item) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="eae38-183">Par clave-valor que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="eae38-183">The key/value pair to find.</span></span></param>
        <summary><span data-ttu-id="eae38-184">Determina si el diccionario contiene el par clave-valor especificado.</span><span class="sxs-lookup"><span data-stu-id="eae38-184">Determines whether the dictionary contains the given key/value pair.</span></span></summary>
        <returns><span data-ttu-id="eae38-185"><see langword="true" /> si el diccionario contiene el par clave-valor proporcionado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-185"><see langword="true" /> if the dictionary contains the given key/value pair; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection&lt;KeyValuePair&lt;ModelItem,ModelItem&gt;&gt;.CopyTo (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem&gt;&gt;#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As KeyValuePair(Of ModelItem, ModelItem)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)).CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt; ^ array, int arrayIndex) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;::CopyTo;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eae38-186">La matriz de pares clave-valor que se va a copiar.</span><span class="sxs-lookup"><span data-stu-id="eae38-186">The array of key/value pairs to copy.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="eae38-187">Índice de base cero del diccionario en el que comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="eae38-187">The zero-based index in the current dictionary at which copying begins.</span></span></param>
        <summary><span data-ttu-id="eae38-188">Copia una matriz de pares clave-valor en el diccionario determinado.</span><span class="sxs-lookup"><span data-stu-id="eae38-188">Copies an array of key/value pairs into the given dictionary.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;KeyValuePair&lt;ModelItem,ModelItem&gt;&gt;.Remove (System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;class System.Activities.Presentation.Model.ModelItem, class System.Activities.Presentation.Model.ModelItem&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection&lt;System#Collections#Generic#KeyValuePair&lt;System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem&gt;&gt;#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As KeyValuePair(Of ModelItem, ModelItem)) As Boolean Implements ICollection(Of KeyValuePair(Of ModelItem, ModelItem)).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;&gt;.Remove(System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt; item) = System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::Activities::Presentation::Model::ModelItem ^, System::Activities::Presentation::Model::ModelItem ^&gt;&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="eae38-189">Par clave-valor que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="eae38-189">The key/value pair to remove.</span></span></param>
        <summary><span data-ttu-id="eae38-190">Quita del diccionario el par clave-valor especificado.</span><span class="sxs-lookup"><span data-stu-id="eae38-190">Removes the specified key/value pair from the dictionary.</span></span></summary>
        <returns><span data-ttu-id="eae38-191"><see langword="true" /> si el elemento existe y se quita; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-191"><see langword="true" /> if the item exists and is removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="eae38-192">Matriz unidimensional que constituye el destino de los elementos copiados desde <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-192">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />.</span></span> <span data-ttu-id="eae38-193">La matriz debe tener una indización de base cero</span><span class="sxs-lookup"><span data-stu-id="eae38-193">The array must have zero-based indexing</span></span></param>
        <param name="index"><span data-ttu-id="eae38-194">Índice de base cero en la <paramref name="array" /> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="eae38-194">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="eae38-195">Copia los elementos de <see cref="T:System.Collections.ICollection" /> en una matriz, comenzando en un índice concreto de la matriz.</span><span class="sxs-lookup"><span data-stu-id="eae38-195">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System::Collections::ICollection::Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-196">Obtiene el número de elementos incluidos en <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-196">Gets the number of elements contained in the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="eae38-197">Número de elementos contenidos en <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-197">The number of elements contained in the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-198">Obtiene un valor que indica si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="eae38-198">Gets a value that indicates whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe).</span></span></summary>
        <value><span data-ttu-id="eae38-199">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ICollection" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-199"><see langword="true" /> if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-200">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-200">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></summary>
        <value><span data-ttu-id="eae38-201">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ICollection" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-201">An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-202">Objeto que se va a utilizar como clave del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="eae38-202">The object to use as the key of the element to add.</span></span></param>
        <param name="value"><span data-ttu-id="eae38-203">El objeto que se va a usar como valor del elemento que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="eae38-203">The object to use as the value of the element to add.</span></span></param>
        <summary><span data-ttu-id="eae38-204">Agrega un elemento con la clave y el valor proporcionados al objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-204">Adds an element with the provided key and value to the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Clear">
      <MemberSignature Language="C#" Value="void IDictionary.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IDictionary.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Clear() = System::Collections::IDictionary::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eae38-205">Quita todos los elementos del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-205">Removes all elements from the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-206">Clave que se buscará en el objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-206">The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></param>
        <summary><span data-ttu-id="eae38-207">Determina si el objeto <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-207">Determines whether the <see cref="T:System.Collections.IDictionary" /> object contains an element with the specified key.</span></span></summary>
        <returns><span data-ttu-id="eae38-208">Es <see langword="true" /> si <see cref="T:System.Collections.IDictionary" /> contiene un elemento con la clave; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-208"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IDictionaryEnumerator Implements IDictionary.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IDictionaryEnumerator ^ System.Collections.IDictionary.GetEnumerator() = System::Collections::IDictionary::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eae38-209">Devuelve el objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-209">Returns the <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <returns><span data-ttu-id="eae38-210">Objeto <see cref="T:System.Collections.IDictionaryEnumerator" /> para el objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-210">An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-211">Obtiene un valor que indica si el objeto <see cref="T:System.Collections.IDictionary" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="eae38-211">Gets a value that indicates whether the <see cref="T:System.Collections.IDictionary" /> object has a fixed size.</span></span></summary>
        <value><span data-ttu-id="eae38-212">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.IDictionary" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-212"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IDictionary::IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-213">Obtiene un valor que indica si el objeto <see cref="T:System.Collections.IDictionary" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eae38-213">Gets a value that indicates whether the <see cref="T:System.Collections.IDictionary" /> object is read-only.</span></span></summary>
        <value><span data-ttu-id="eae38-214">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.IDictionary" /> es de solo lectura; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-214"><see langword="true" /> if the <see cref="T:System.Collections.IDictionary" /> object is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IDictionary::Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-215">La clave del elemento que se obtiene o establece.</span><span class="sxs-lookup"><span data-stu-id="eae38-215">The key of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="eae38-216">Obtiene o establece el elemento con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-216">Gets or sets the element with the specified key.</span></span></summary>
        <value><span data-ttu-id="eae38-217">El elemento con la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-217">The element with the specified key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-218">Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-218">Gets an <see cref="T:System.Collections.ICollection" /> object that contains the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <value><span data-ttu-id="eae38-219">Un objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-219">An <see cref="T:System.Collections.ICollection" /> object that contains the keys of the <see cref="T:System.Collections.IDictionary" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-220">Clave del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="eae38-220">The key of the element to remove.</span></span></param>
        <summary><span data-ttu-id="eae38-221">Quita el elemento con la clave especificada de <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-221">Removes the element with the specified key from the <see cref="T:System.Collections.IDictionary" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae38-222">Si el objeto <xref:System.Collections.IDictionary> no contiene ningún elemento con la clave especificada, la interfaz <xref:System.Collections.IDictionary> no sufre ningún cambio.</span><span class="sxs-lookup"><span data-stu-id="eae38-222">If the <xref:System.Collections.IDictionary> object does not contain an element with the specified key, the <xref:System.Collections.IDictionary> remains unchanged.</span></span> <span data-ttu-id="eae38-223">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="eae38-223">No exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System::Collections::IDictionary::Values { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-224">Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-224">Gets an <see cref="T:System.Collections.ICollection" /> object that contains the values in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></summary>
        <value><span data-ttu-id="eae38-225">Objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.IDictionary" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-225">An <see cref="T:System.Collections.ICollection" /> object that contains the values in the <see cref="T:System.Collections.IDictionary" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value=" Iterator Overridable NotOverridable Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Presentation.Model.ModelItemDictionary/&lt;System-Collections-IEnumerable-GetEnumerator&gt;d__61))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Activities.Presentation.Model.ModelItemDictionary/&lt;System_Collections_IEnumerable_GetEnumerator&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="eae38-226">Devuelve un enumerador que recorre en iteración una colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-226">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="eae38-227">Objeto <see cref="T:System.Collections.IEnumerator" /> que puede usarse para recorrer en iteración la colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-227">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetValue">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="eae38-228">Recupera el valor de la clave determinada, si es posible.</span><span class="sxs-lookup"><span data-stu-id="eae38-228">Retrieves the value for the given key, if possible.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public abstract bool TryGetValue (System.Activities.Presentation.Model.ModelItem key, out System.Activities.Presentation.Model.ModelItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(class System.Activities.Presentation.Model.ModelItem key, [out] class System.Activities.Presentation.Model.ModelItem&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetValue (key As ModelItem, ByRef value As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetValue(System::Activities::Presentation::Model::ModelItem ^ key, [Runtime::InteropServices::Out] System::Activities::Presentation::Model::ModelItem ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : System.Activities.Presentation.Model.ModelItem *  -&gt; bool" Usage="modelItemDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="value" Type="System.Activities.Presentation.Model.ModelItem" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-229">Clave asociada al valor que se va a obtener o recuperar.</span><span class="sxs-lookup"><span data-stu-id="eae38-229">The key associated with the value to retrieve.</span></span></param>
        <param name="value"><span data-ttu-id="eae38-230">Valor asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-230">The value associated with the specified key.</span></span></param>
        <summary><span data-ttu-id="eae38-231">Recupera el valor de la clave determinada, si es posible.</span><span class="sxs-lookup"><span data-stu-id="eae38-231">Retrieves the value for the given key, if possible.</span></span></summary>
        <returns><span data-ttu-id="eae38-232"><see langword="true" /> si hay un valor para la clave especificada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-232"><see langword="true" /> if there is a value present for the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-233">Si <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-233">If <paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public abstract bool TryGetValue (object key, out System.Activities.Presentation.Model.ModelItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(object key, [out] class System.Activities.Presentation.Model.ModelItem&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function TryGetValue (key As Object, ByRef value As ModelItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool TryGetValue(System::Object ^ key, [Runtime::InteropServices::Out] System::Activities::Presentation::Model::ModelItem ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : obj *  -&gt; bool" Usage="modelItemDictionary.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Activities.Presentation.Model.ModelItem" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="eae38-234">Clave asociada al valor que se va a obtener o recuperar.</span><span class="sxs-lookup"><span data-stu-id="eae38-234">The key associated with the value to retrieve.</span></span></param>
        <param name="value"><span data-ttu-id="eae38-235">Valor asociado a la clave especificada.</span><span class="sxs-lookup"><span data-stu-id="eae38-235">The value associated with the specified key.</span></span></param>
        <summary><span data-ttu-id="eae38-236">Recupera el valor de la clave determinada, si es posible.</span><span class="sxs-lookup"><span data-stu-id="eae38-236">Retrieves the value for the given key, if possible.</span></span></summary>
        <returns><span data-ttu-id="eae38-237"><see langword="true" /> si hay un valor para la clave especificada; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-237"><see langword="true" /> if there is a value present for the specified key; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="eae38-238">Si <paramref name="key" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-238">If <paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItemDictionary.Values" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Values As ICollection(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItemDictionary.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="eae38-239">Obtiene los valores de la colección.</span><span class="sxs-lookup"><span data-stu-id="eae38-239">Gets the values of the collection.</span></span></summary>
        <value><span data-ttu-id="eae38-240">Devuelva <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="eae38-240">Returns <see cref="T:System.Collections.Generic.ICollection`1" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eae38-241">Se garantiza que los valores estén en el mismo orden que las claves.</span><span class="sxs-lookup"><span data-stu-id="eae38-241">The values are guaranteed to be in the same order as the keys.</span></span> <span data-ttu-id="eae38-242">La colección resultante es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="eae38-242">The resulting collection is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
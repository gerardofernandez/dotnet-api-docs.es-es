<Type Name="ModelItem" FullName="System.Activities.Presentation.Model.ModelItem">
  <Metadata><Meta Name="ms.openlocfilehash" Value="527c642dc4c22a12558a59638a168e79f456aafe" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53485466" /></Metadata><TypeSignature Language="C#" Value="public abstract class ModelItem : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItem extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItem&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItem abstract : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ModelItem = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9a417-101">Representa un elemento único en el modelo de edición.</span><span class="sxs-lookup"><span data-stu-id="9a417-101">Represents a single item in the editing model.</span></span> <span data-ttu-id="9a417-102">Un elemento puede ser cualquier cosa, desde una estructura completa de datos hasta un color o un entero.</span><span class="sxs-lookup"><span data-stu-id="9a417-102">An item can be anything from a complex data structure down to a color or integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a417-103">Puede obtener acceso a las propiedades del elemento a través de su <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> colección y realizar cambios en los valores de las propiedades.</span><span class="sxs-lookup"><span data-stu-id="9a417-103">You can access the item's properties through its <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> collection and make changes to the values of the properties.</span></span>  
  
 <span data-ttu-id="9a417-104">Un <xref:System.Activities.Presentation.Model.ModelItem> es un contenedor que incluye el modelo de datos subyacente del diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-104">A <xref:System.Activities.Presentation.Model.ModelItem> is a wrapper around the underlying data model of the designer.</span></span> <span data-ttu-id="9a417-105">Se puede tener acceso al modelo subyacente mediante el método <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a417-105">You can access the underlying model through the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9a417-106">Los cambios que realice en un objeto devuelto desde el método <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> no se reflejarán por la serialización y los sistemas de deshacer del diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-106">Any changes you make to an object returned from the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method will not be reflected by the serialization and undo systems of the designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a417-107">El <xref:System.Activities.Presentation.Model.ModelItem> se puede considerar como un proxy ligero para un objeto al que señala.</span><span class="sxs-lookup"><span data-stu-id="9a417-107">The <xref:System.Activities.Presentation.Model.ModelItem> can be thought of as a thin proxy for an object at which it points.</span></span> <span data-ttu-id="9a417-108">Defina primero un objeto `Animal` simple.</span><span class="sxs-lookup"><span data-stu-id="9a417-108">First define a simple `Animal` object.</span></span>  
  
```csharp  
  
public class Animal  
{  
    // simple property  
    public string Name { get; set; }  
    // complex property   
    public Location Residence { get; set; }   
    // list   
    public List<Animal> CloseRelatives { get; set; }  
    // dictionary  
    public Dictionary<string, object> Features { get; set; }   
}  
  
public class Location  
{  
    public string StreetAddress { get; set; }  
    public string City { get; set; }  
    public string State { get; set; }   
}  
  
```  
  
 <span data-ttu-id="9a417-109">En segundo lugar, cree una instancia de ese `Animal` y un <xref:System.Activities.Presentation.Model.ModelItem> que sea un proxy para él.</span><span class="sxs-lookup"><span data-stu-id="9a417-109">Secondly, create an instance of that `Animal` and a <xref:System.Activities.Presentation.Model.ModelItem> that is a proxy for it.</span></span> <span data-ttu-id="9a417-110">Así se podrá recuperar el objeto llamando al método <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="9a417-110">The object can then be retrieved by calling <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span></span> <span data-ttu-id="9a417-111">El siguiente código también muestra cómo utilizar otras propiedades definidas por <xref:System.Activities.Presentation.Model.ModelItem>.</span><span class="sxs-lookup"><span data-stu-id="9a417-111">The following code also shows how to use other properties defined by <xref:System.Activities.Presentation.Model.ModelItem>.</span></span>  
  
```csharp  
  
EditingContext ec = new EditingContext();  
var companion1 = new Animal { Name = "Houdini the parakeet" };  
var companion2 = new Animal { Name = "Groucho the fish" };  
var animal = new Animal   
   {  
      Name = "Sasha the pug",  
      Residence = new Location   
      {  
         StreetAddress = "123 Main Street",  
         City = "AnyTown",  
         State = "Washington"  
      },  
      Features = new Dictionary<string, object> {   
         {"noise", "snort" },  
         {"MeanTimeUntilNaps", TimeSpan.FromMinutes(15) }  
      },  
      CloseRelatives = new List<Animal> { companion1, companion2 }   
   };  
ModelTreeManager mtm = new ModelTreeManager(ec);  mtm.Load(animal);  
ModelItem mi = mtm.Root;  
  
//Testing other properties of the class  
ModelItem root = mtm.Root;  
Assert.IsTrue(root.GetCurrentValue() == animal, "GetCurrentValue() returns same object");  
Assert.IsTrue(root.ItemType == typeof(Animal),"ItemType describes the item");  
Assert.IsTrue(root.Parent == null,"root parent is null");  
Assert.IsTrue(root.Source == null, "root source is null");  
Assert.IsTrue(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion1,   
   "ComputedValue of prop == actual object");  
Assert.IsFalse(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion2,   
   "ComputedValue of prop == actual object");  
Assert.AreEqual(root.Properties["Residence"].  
   Value.  
   Properties["StreetAddress"].  
   Value.GetCurrentValue(), "123 Main Street", "get actual value back out");  
Assert.AreEqual(root, root.Properties["Residence"].Parent, "property points to owner");  
ModelItem location = root.Properties["Residence"].Value;  
Assert.AreEqual(root.Properties["Residence"], location.Source, "sources point to the right place");  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a417-112">Crea una nueva instancia de la clase <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-112">Creates a new instance of the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-113">Obtiene los atributos declarados en este elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-113">Gets the attributes declared on this item.</span></span></summary>
        <value><span data-ttu-id="9a417-114">Colección que contiene los atributos del elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-114">A collection that contains the attributes of the item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginEdit">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9a417-115">Abre un ámbito de edición para el diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-115">Opens an editing scope for the designer.</span></span></summary>
        <altmember cref="T:System.Activities.Presentation.Model.ModelEditingScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit () As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit();" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : unit -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a417-116">Abre un ámbito de edición para el diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-116">Opens an editing scope for the designer.</span></span> <span data-ttu-id="9a417-117">Después de abrir un ámbito de edición, todos los cambios de todos los objetos se guardarán en el ámbito hasta que se complete o se revierta la transacción.</span><span class="sxs-lookup"><span data-stu-id="9a417-117">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span></span> <span data-ttu-id="9a417-118">Los ámbitos de edición se pueden anidar y se deben confirmar en orden.</span><span class="sxs-lookup"><span data-stu-id="9a417-118">Editing scopes can be nested, but must be committed in order.</span></span></summary>
        <returns><span data-ttu-id="9a417-119"><see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> que se debe completar o revertir.</span><span class="sxs-lookup"><span data-stu-id="9a417-119">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a417-120">Un ámbito de edición permite aplicar varios cambios al modelo como una transacción única.</span><span class="sxs-lookup"><span data-stu-id="9a417-120">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="9a417-121">Todos los cambios realizados dentro del ámbito de edición se pueden revertir en cualquier momento antes de que se complete la transacción.</span><span class="sxs-lookup"><span data-stu-id="9a417-121">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="9a417-122">Los ámbitos de edición son globales para el diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-122">Editing scopes are global to the designer.</span></span> <span data-ttu-id="9a417-123">Se puede crear un ámbito de edición para cualquier elemento del diseñador; no es necesario crear un ámbito de edición para el elemento específico que está cambiando.</span><span class="sxs-lookup"><span data-stu-id="9a417-123">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit shouldApplyChangesImmediately" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shouldApplyChangesImmediately"><span data-ttu-id="9a417-124"><see langword="true" /> para indicar que los cambios se deben aplicar inmediatamente; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-124"><see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9a417-125">Abre un ámbito de edición para el diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-125">Opens an editing scope for the designer.</span></span></summary>
        <returns><span data-ttu-id="9a417-126"><see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> que se debe completar o revertir.</span><span class="sxs-lookup"><span data-stu-id="9a417-126">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit (description As String) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="9a417-127">Una descripción opcional del cambio.</span><span class="sxs-lookup"><span data-stu-id="9a417-127">An optional description of the change.</span></span> <span data-ttu-id="9a417-128">Se establecerá en la propiedad <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> del ámbito de edición.</span><span class="sxs-lookup"><span data-stu-id="9a417-128">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span></span></param>
        <summary><span data-ttu-id="9a417-129">Abre un ámbito de edición para el diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-129">Opens an editing scope for the designer.</span></span> <span data-ttu-id="9a417-130">Después de abrir un ámbito de edición, todos los cambios de todos los objetos se guardarán en el ámbito hasta que se complete o se revierta la transacción.</span><span class="sxs-lookup"><span data-stu-id="9a417-130">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span></span> <span data-ttu-id="9a417-131">Los ámbitos de edición se pueden anidar y se deben confirmar en orden.</span><span class="sxs-lookup"><span data-stu-id="9a417-131">Editing scopes can be nested, but must be committed in order.</span></span></summary>
        <returns><span data-ttu-id="9a417-132"><see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> que se debe completar o revertir.</span><span class="sxs-lookup"><span data-stu-id="9a417-132">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a417-133">Un ámbito de edición permite aplicar varios cambios al modelo como una transacción única.</span><span class="sxs-lookup"><span data-stu-id="9a417-133">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="9a417-134">Todos los cambios realizados dentro del ámbito de edición se pueden revertir en cualquier momento antes de que se complete la transacción.</span><span class="sxs-lookup"><span data-stu-id="9a417-134">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="9a417-135">Los ámbitos de edición son globales para el diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-135">Editing scopes are global to the designer.</span></span> <span data-ttu-id="9a417-136">Se puede crear un ámbito de edición para cualquier elemento del diseñador; no es necesario crear un ámbito de edición para el elemento específico que está cambiando.</span><span class="sxs-lookup"><span data-stu-id="9a417-136">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (description As String, shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit (description, shouldApplyChangesImmediately)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="9a417-137">Una descripción opcional del cambio.</span><span class="sxs-lookup"><span data-stu-id="9a417-137">An optional description of the change.</span></span> <span data-ttu-id="9a417-138">Se establecerá en la propiedad <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> del ámbito de edición.</span><span class="sxs-lookup"><span data-stu-id="9a417-138">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span></span></param>
        <param name="shouldApplyChangesImmediately"><span data-ttu-id="9a417-139"><see langword="true" /> para indicar que los cambios se deben aplicar inmediatamente; si no, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-139"><see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="9a417-140">Abre un ámbito de edición para el diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-140">Opens an editing scope for the designer.</span></span></summary>
        <returns><span data-ttu-id="9a417-141"><see cref="T:System.Activities.Presentation.Model.ModelEditingScope" /> que se debe completar o revertir.</span><span class="sxs-lookup"><span data-stu-id="9a417-141">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Content" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Content As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Content { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-142">Obtiene <see langword="ContentPropertyAttribute" /> del elemento o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-142">Gets the <see langword="ContentPropertyAttribute" /> of the item, or <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="9a417-143"><see langword="ContentPropertyAttribute" /> del elemento como un <see cref="T:System.Activities.Presentation.Model.ModelProperty" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-143">The <see langword="ContentPropertyAttribute" /> of the item as a <see cref="T:System.Activities.Presentation.Model.ModelProperty" />.</span></span> <span data-ttu-id="9a417-144">Si <see langword="ContentPropertyAttribute" /> no está declarado por el <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> de este elemento, <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> devuelve <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-144">If the <see langword="ContentPropertyAttribute" /> is not declared by the <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> of this item, <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> returns <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public abstract object GetCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.GetCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCurrentValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetCurrentValue();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValue : unit -&gt; obj" Usage="modelItem.GetCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a417-145">Devuelve el valor actual del modelo de objetos subyacente que encapsula el objeto <see cref="T:System.Activities.Presentation.Model.ModelItem" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-145">Returns the current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping.</span></span></summary>
        <returns><span data-ttu-id="9a417-146">Devuelve el valor actual del modelo de objetos subyacente que encapsula <see cref="T:System.Activities.Presentation.Model.ModelItem" /> como un <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-146">The current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping as an <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a417-147">Puede inspeccionar este objeto, pero no debería realizar ningún cambio en él.</span><span class="sxs-lookup"><span data-stu-id="9a417-147">You can inspect this object, but you should not make any changes to it.</span></span> <span data-ttu-id="9a417-148">Los cambios realizados en el objeto devuelto no se incorporarán en el diseñador.</span><span class="sxs-lookup"><span data-stu-id="9a417-148">Changes made to the object returned will not be incorporated into the designer.</span></span> <span data-ttu-id="9a417-149">El método <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> puede devolver una instancia existente o clonada del objeto.</span><span class="sxs-lookup"><span data-stu-id="9a417-149">The <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method can return either an existing or new cloned instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-150">Obtiene el tipo de objeto que representa el elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-150">Gets the type of object that the item represents.</span></span></summary>
        <value><span data-ttu-id="9a417-151">Tipo de objeto que representa el elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-151">The type of object that the item represents.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-152">Obtiene o establece el nombre o identificador del elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-152">Gets or sets the name or ID of the item.</span></span></summary>
        <value><span data-ttu-id="9a417-153">Nombre o identificador del elemento como un objeto <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-153">The name or ID of the item as a <see cref="T:System.String" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a417-154">No todos los elementos deben tener nombres, por lo que esto podría devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="9a417-154">Not all items need to have names, so this might return `null`.</span></span> <span data-ttu-id="9a417-155">Dependiendo del tipo de elemento y de dónde se encuentre en la jerarquía, podría ser no siempre válido establecer la propiedad <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> de un elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-155">Depending on the type of item and where it sits in the hierarchy, it might not always be legal to set the <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> on an item.</span></span> <span data-ttu-id="9a417-156">Si el <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> de este elemento declara un `RuntimeNamePropertyAttribute`, el <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> propiedad es una asignación directa a la propiedad dictada por ese atributo.</span><span class="sxs-lookup"><span data-stu-id="9a417-156">If the <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> of this item declares a `RuntimeNamePropertyAttribute`, the  <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> property is a direct mapping to the property dictated by that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Parent" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parent As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Parent { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-157">Obtiene el elemento que es el elemento principal de este elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-157">Gets the item that is the parent of this item.</span></span></summary>
        <value><span data-ttu-id="9a417-158"><see cref="T:System.Activities.Presentation.Model.ModelItem" /> que es el elemento primario de este elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-158">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the parent of this item.</span></span> <span data-ttu-id="9a417-159">Si un elemento está incluido en una colección o diccionario, en su lugar se devuelve la colección o el diccionario.</span><span class="sxs-lookup"><span data-stu-id="9a417-159">If an item is contained in a collection or dictionary, the object that owns the collection or dictionary is returned instead.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parents">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Parents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Parents" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parents As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Parents { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parents : seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-160">Obtiene todos los principales de este elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-160">Gets all parents of this item.</span></span></summary>
        <value><span data-ttu-id="9a417-161">Elementos primarios de este elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-161">The parents of this item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As ModelPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelPropertyCollection ^ Properties { System::Activities::Presentation::Model::ModelPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Activities.Presentation.Model.ModelPropertyCollection" Usage="System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-162">Obtiene las propiedades públicas de este elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-162">Gets the public properties on this item.</span></span></summary>
        <value><span data-ttu-id="9a417-163">Objeto <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> que contiene las propiedades públicas de este elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-163">A <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> that contains the public properties of this item.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a417-164">El conjunto de propiedades devuelto podría cambiar en función de las propiedades adjuntas o de cambios en el ámbito de edición.</span><span class="sxs-lookup"><span data-stu-id="9a417-164">The set of properties returned might change based on attached properties or changes to the editing scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public abstract event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItem.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-165">Implementa <see langword="INotifyPropertyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="9a417-165">Implements <see langword="INotifyPropertyChanged" />.</span></span> <span data-ttu-id="9a417-166">Utilice este evento para escuchar cambios realizados en el modelo.</span><span class="sxs-lookup"><span data-stu-id="9a417-166">Use this event to listen for changes to the model.</span></span> <span data-ttu-id="9a417-167">Esta posibilidad también la utilizan las características de enlace de datos de WPF.</span><span class="sxs-lookup"><span data-stu-id="9a417-167">This is also used by the data binding features of WPF.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a417-168">Desconecte los eventos de los elementos cuando haya terminado de usarlos.</span><span class="sxs-lookup"><span data-stu-id="9a417-168">Disconnect events from items when you are finished with them.</span></span> <span data-ttu-id="9a417-169">De lo contrario, podría evitar que el recolector de elementos no utilizados elimine un elemento que ya no está en uso.</span><span class="sxs-lookup"><span data-stu-id="9a417-169">Otherwise, you might prevent the garbage collector from disposing of an item that is no longer in use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-170">Obtiene el elemento que es la raíz de este árbol.</span><span class="sxs-lookup"><span data-stu-id="9a417-170">Gets the item that is the root of this tree.</span></span></summary>
        <value><span data-ttu-id="9a417-171"><see cref="T:System.Activities.Presentation.Model.ModelItem" /> que es la raíz de este árbol o <see langword="null" /> si el elemento no forma parte de un árbol.</span><span class="sxs-lookup"><span data-stu-id="9a417-171">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the root of this tree, or <see langword="null" /> if this item is not part of a tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Source" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Source { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-172">Obtiene la propiedad que proporcionó este valor.</span><span class="sxs-lookup"><span data-stu-id="9a417-172">Gets the property that provided this value.</span></span></summary>
        <value><span data-ttu-id="9a417-173"><see cref="T:System.Activities.Presentation.Model.ModelProperty" /> que indica el origen de este valor.</span><span class="sxs-lookup"><span data-stu-id="9a417-173">A <see cref="T:System.Activities.Presentation.Model.ModelProperty" /> that indicates the source of this value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a417-174">Si el elemento representa la raíz del gráfico de objetos, esto devolverá `null`.</span><span class="sxs-lookup"><span data-stu-id="9a417-174">If the item represents the root of the object graph, this will return `null`.</span></span> <span data-ttu-id="9a417-175">Si un elemento es miembro de una colección o diccionario, la propiedad devuelta por el origen (Source) será una pseudopropiedad proporcionada por la colección o el diccionario.</span><span class="sxs-lookup"><span data-stu-id="9a417-175">If an item is a member of a collection or dictionary, the property returned from Source will be a pseudo-property provided by the collection or dictionary.</span></span> <span data-ttu-id="9a417-176">Para otros valores, la propiedad Source devuelve la propiedad donde efectivamente se estableció el valor.</span><span class="sxs-lookup"><span data-stu-id="9a417-176">For other values, the Source property returns the property where the value was actually set.</span></span> <span data-ttu-id="9a417-177">Por consiguiente, si se va a heredar un valor, la propiedad Source le permite averiguar quién proporcionó el valor originalmente.</span><span class="sxs-lookup"><span data-stu-id="9a417-177">Therefore, if a value is being inherited, Source allows you to find out who originally provided the value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt; Sources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelProperty&gt; Sources" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Sources As IEnumerable(Of ModelProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ Sources { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sources : seq&lt;System.Activities.Presentation.Model.ModelProperty&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-178">Obtiene todas las propiedades que contienen este valor.</span><span class="sxs-lookup"><span data-stu-id="9a417-178">Gets all the properties that hold this value.</span></span></summary>
        <value><span data-ttu-id="9a417-179">Orígenes de este valor.</span><span class="sxs-lookup"><span data-stu-id="9a417-179">The sources of this value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="modelItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a417-180">Devuelve una representación de cadena del objeto de modelo subyacente contenida en este elemento de modelo.</span><span class="sxs-lookup"><span data-stu-id="9a417-180">Returns a string representation of the underlying model object contained in this model item.</span></span></summary>
        <returns><span data-ttu-id="9a417-181">Una representación de cadena del objeto de modelo subyacente contenida en este elemento de modelo.</span><span class="sxs-lookup"><span data-stu-id="9a417-181">A string representation of the underlying model object contained in this model item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public abstract System.Windows.DependencyObject View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject View" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.View" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property View As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::DependencyObject ^ View { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.DependencyObject" Usage="System.Activities.Presentation.Model.ModelItem.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a417-182">Obtiene un objeto <see cref="T:System.Windows.DependencyObject" /> que represente gráficamente este elemento.</span><span class="sxs-lookup"><span data-stu-id="9a417-182">Gets a <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item.</span></span></summary>
        <value><span data-ttu-id="9a417-183">Objeto <see cref="T:System.Windows.DependencyObject" /> que representa gráficamente este elemento o <see langword="null" /> si no hay ninguna representación.</span><span class="sxs-lookup"><span data-stu-id="9a417-183">A <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item, or <see langword="null" /> if there is no such representation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
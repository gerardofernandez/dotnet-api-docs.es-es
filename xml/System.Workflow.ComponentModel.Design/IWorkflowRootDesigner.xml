<Type Name="IWorkflowRootDesigner" FullName="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="460810a937a257b4c2391266042eb8cf591336ca" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53512360" /></Metadata><TypeSignature Language="C#" Value="public interface IWorkflowRootDesigner : IDisposable, System.ComponentModel.Design.IRootDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWorkflowRootDesigner implements class System.ComponentModel.Design.IDesigner, class System.ComponentModel.Design.IRootDesigner, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWorkflowRootDesigner&#xA;Implements IDisposable, IRootDesigner" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWorkflowRootDesigner : IDisposable, System::ComponentModel::Design::IRootDesigner" />
  <TypeSignature Language="F#" Value="type IWorkflowRootDesigner = interface&#xA;    interface IRootDesigner&#xA;    interface IDesigner&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.IRootDesigner</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b7a2b-101">Define el diseñador invocador y propiedades de filtros de mensajes y el método que determina si una actividad se admite para todos los diseñadores raíz del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-101">Defines the invoking designer and message filters properties and the method that determines whether an activity is supported for all workflow root designers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="b7a2b-102">Todos los diseñadores raíz del flujo de trabajo son del tipo <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> o heredan de él.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-102">All workflow root designers are either of type <xref:System.Workflow.ComponentModel.Design.ActivityDesigner> or inherit from it.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="InvokingDesigner">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.CompositeActivityDesigner InvokingDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner" />
      <MemberSignature Language="VB.NET" Value="Public Property InvokingDesigner As CompositeActivityDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ InvokingDesigner { System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ get(); void set(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InvokingDesigner : System.Workflow.ComponentModel.Design.CompositeActivityDesigner with get, set" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.InvokingDesigner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.CompositeActivityDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7a2b-103">Obtiene o establece <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> que pidió al diseñador raíz del flujo de trabajo que se inicializara.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-103">Gets or sets the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the workflow root designer to be initialized.</span></span></summary>
        <value><span data-ttu-id="b7a2b-104"><see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> que pidió al diseñador raíz del flujo de trabajo que se inicializara.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-104">The <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> that requested the workflow root designer to be initialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7a2b-105">Si el diseñador de actividad actual es el elemento secundario de otro diseñador de actividad, el diseñador primario es a menudo también el diseñador invocador.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-105">If the current activity designer is the child of another activity designer, the parent designer is often also the invoking designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupportedActivityType">
      <MemberSignature Language="C#" Value="public bool IsSupportedActivityType (Type activityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedActivityType(class System.Type activityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.IsSupportedActivityType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSupportedActivityType (activityType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSupportedActivityType(Type ^ activityType);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedActivityType : Type -&gt; bool" Usage="iWorkflowRootDesigner.IsSupportedActivityType activityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="activityType"><span data-ttu-id="b7a2b-106"><see cref="T:System.Type" /> para comprobar el soporte del diseñador.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-106">The <see cref="T:System.Type" /> to check for support on the designer.</span></span></param>
        <summary><span data-ttu-id="b7a2b-107">Devuelve un valor que indica si el tipo especificado se admite en el diseñador de flujo de trabajo actual.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-107">Returns a value that indicates whether the specified type is supported on the current workflow designer.</span></span></summary>
        <returns><span data-ttu-id="b7a2b-108"><see langword="true" /> si <paramref name="type" /> se admite en el diseñador de flujo de trabajo actual; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-108"><see langword="true" /> if <paramref name="type" /> is supported on the current workflow designer; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFilters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt; MessageFilters" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageFilters As ReadOnlyCollection(Of WorkflowDesignerMessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ MessageFilters { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::WorkflowDesignerMessageFilter ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageFilters : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.MessageFilters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.WorkflowDesignerMessageFilter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7a2b-109">Obtiene cualquier filtro de mensajes asociado al diseñador raíz del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-109">Gets any message filters associated with the workflow root designer.</span></span></summary>
        <value><span data-ttu-id="b7a2b-110">Una colección WorkflowDesignerMessageFilter de solo lectura que contiene cualquier filtro de mensajes asociado al diseñador raíz del flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-110">A WorkflowDesignerMessageFilter read-only collection that contains any message filters associated with the workflow root designer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsLayoutPersistence">
      <MemberSignature Language="C#" Value="public bool SupportsLayoutPersistence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsLayoutPersistence" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsLayoutPersistence As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsLayoutPersistence { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsLayoutPersistence : bool" Usage="System.Workflow.ComponentModel.Design.IWorkflowRootDesigner.SupportsLayoutPersistence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7a2b-111">Obtiene el valor que indica si el diseñador raíz del flujo de trabajo actual admite la persistencia del diseño.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-111">Gets the value that indicates whether the actual workflow root designer supports the layout persistence.</span></span></summary>
        <value><span data-ttu-id="b7a2b-112"><see langword="true" /> cuando el diseñador admite la persistencia del diseño; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7a2b-112"><see langword="true" /> when the designer supports layout persistence; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
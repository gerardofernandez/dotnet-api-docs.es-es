<Type Name="CompositeActivityDesigner" FullName="System.Workflow.ComponentModel.Design.CompositeActivityDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b17b149ca1bc680dcc1e3f0c74bb329074ab9b3c" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53514716" /></Metadata><TypeSignature Language="C#" Value="public abstract class CompositeActivityDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositeActivityDesigner extends System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositeActivityDesigner&#xA;Inherits ActivityDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeActivityDesigner abstract : System::Workflow::ComponentModel::Design::ActivityDesigner" />
  <TypeSignature Language="F#" Value="type CompositeActivityDesigner = class&#xA;    inherit ActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.ActivityDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.CompositeDesignerTheme))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1e13-101">Proporciona un diseñador que le permite diseñar visualmente las actividades compuestas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-101">Provides a designer that enables you to visually design composite activities.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="a1e13-102">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> para diseñar visualmente las actividades compuestas, personalizar el diseño, y para administrar el dibujo de <xref:System.Workflow.ComponentModel.CompositeActivity>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-102">Use the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> to visually design composite activities, to customize the layout, and to manage the drawing of the <xref:System.Workflow.ComponentModel.CompositeActivity>.</span></span>  
  
 <span data-ttu-id="a1e13-103"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> también le permite administrar los eventos para los diseñadores de actividad contenidos.</span><span class="sxs-lookup"><span data-stu-id="a1e13-103">The <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> also enables you to manage events for the contained activity designers.</span></span> <span data-ttu-id="a1e13-104">También lo permite personalizar y administrar la posición, tamaño y diseño de los diseñadores de actividad contenidos.</span><span class="sxs-lookup"><span data-stu-id="a1e13-104">It also enables you to customize and manage the position, size, and layout of contained activity designers.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CompositeActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CompositeActivityDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1e13-105">Cuando se implementa en una clase derivada, inicializa una instancia de <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-105">When implemented in a derived class, initializes an instance of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-106">Obtiene <see cref="T:System.Windows.Forms.AccessibleObject" /> que las aplicaciones de accesibilidad utilizan para ajustar la apariencia y funcionamiento de la aplicación para las personas con discapacidades.</span><span class="sxs-lookup"><span data-stu-id="a1e13-106">Gets a <see cref="T:System.Windows.Forms.AccessibleObject" /> that accessibility applications use to adjust the application look and feel for people with disabilities.</span></span></summary>
        <value><span data-ttu-id="a1e13-107">El objeto <see cref="T:System.Windows.Forms.AccessibleObject" /> asociado al control.</span><span class="sxs-lookup"><span data-stu-id="a1e13-107">The <see cref="T:System.Windows.Forms.AccessibleObject" /> associated with the control.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-108">Si no hay ningún <xref:System.Windows.Forms.AccessibleObject> asignado al control en la actualidad, se crea una nueva instancia de uno.</span><span class="sxs-lookup"><span data-stu-id="a1e13-108">If no <xref:System.Windows.Forms.AccessibleObject> is currently assigned to the control, a new instance of one is created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1e13-109">Para obtener o establecer el valor de la propiedad <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject%2A>, se debe agregar una referencia al ensamblado Accesibility instalado con .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a1e13-109">To get or set the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject%2A> property, you must add a reference to the Accessibility assembly installed with the .NET Framework.</span></span>  
  
 <span data-ttu-id="a1e13-110">Para obtener más información sobre los objetos accesibles, vea la sección Active Accessibility de MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="a1e13-110">For more information about accessible objects, see the Active Accessibility section of the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExpandCollapse">
      <MemberSignature Language="C#" Value="public virtual bool CanExpandCollapse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanExpandCollapse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanExpandCollapse : bool" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-111">Obtiene un valor que indica si el objeto <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> se puede contraer.</span><span class="sxs-lookup"><span data-stu-id="a1e13-111">Gets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> can be collapsed.</span></span></summary>
        <value><span data-ttu-id="a1e13-112"><see langword="true" /> si se puede contraer el diseñador de la actividad compuesta especificado; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-112"><see langword="true" /> if the specified composite activity designer can be collapsed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-113">Algunos diseñadores compuestos tendrán varios diseñadores dentro.</span><span class="sxs-lookup"><span data-stu-id="a1e13-113">Some composite designers will have multiple designers within.</span></span> <span data-ttu-id="a1e13-114">Estos diseñadores pueden implementarse expandiéndose o contrayéndose para ahorrar espacio en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="a1e13-114">These designers can implement expanding or collapsing to save room on the screen.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsertActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanInsertActivities (System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsertActivities(class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsertActivities (insertLocation As HitTestInfo, activitiesToInsert As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsertActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert);" />
      <MemberSignature Language="F#" Value="abstract member CanInsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanInsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanInsertActivities (insertLocation, activitiesToInsert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="insertLocation"><span data-ttu-id="a1e13-115">La ubicación para insertar las actividades.</span><span class="sxs-lookup"><span data-stu-id="a1e13-115">The location to insert the activities.</span></span></param>
        <param name="activitiesToInsert"><span data-ttu-id="a1e13-116">Una matriz de solo lectura de <see cref="T:System.Workflow.ComponentModel.Activity" /> para insertar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-116">A read-only array of <see cref="T:System.Workflow.ComponentModel.Activity" /> to insert.</span></span></param>
        <summary><span data-ttu-id="a1e13-117">Devuelve un valor que indica si las actividades se pueden insertar en la actividad compuesta asociada al diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-117">Returns a value that indicates whether activities can be inserted into the composite activity associated with the designer.</span></span></summary>
        <returns><span data-ttu-id="a1e13-118"><see langword="true" /> si las actividades se pueden insertar en la actividad compuesta asociada al diseñador; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-118"><see langword="true" /> if activities can be inserted into the composite activity associated with the designer; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-119">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> para determinar si una lista de actividades se puede insertar en una actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-119">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> to determine if a list of activities can be inserted into a composite activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e13-120">El ejemplo siguiente muestra cómo bloquear <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> no permitiendo la inserción de actividades secundarias.</span><span class="sxs-lookup"><span data-stu-id="a1e13-120">The following example shows how to lock a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> by not allowing the insertion of child activities.</span></span>  
  
 [!code-csharp[WF_Samples#25](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#25)]
 [!code-vb[WF_Samples#25](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMoveActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanMoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanMoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanMoveActivities (moveLocation As HitTestInfo, activitiesToMove As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanMoveActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ moveLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToMove);" />
      <MemberSignature Language="F#" Value="abstract member CanMoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanMoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanMoveActivities (moveLocation, activitiesToMove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation"><span data-ttu-id="a1e13-121">Ubicación desde la que mover las actividades.</span><span class="sxs-lookup"><span data-stu-id="a1e13-121">The location from which to move the activities.</span></span></param>
        <param name="activitiesToMove"><span data-ttu-id="a1e13-122">La matriz de solo lectura de actividades para mover.</span><span class="sxs-lookup"><span data-stu-id="a1e13-122">The read-only array of activities to move.</span></span></param>
        <summary><span data-ttu-id="a1e13-123">Devuelve un valor que indica si las actividades contenidas dentro de la actividad compuesta se pueden mover fuera de la actividad compuesta asociada al diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-123">Returns a value that indicates whether activities contained within the composite activity can be moved out of the composite activity associated with the designer.</span></span></summary>
        <returns><span data-ttu-id="a1e13-124"><see langword="true" /> si las actividades se pueden mover de la actividad compuesta; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-124"><see langword="true" /> if the activities can be moved from the composite activity; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-125">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> para determinar si una lista de actividades se puede mover desde dentro de una actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-125">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> to determine if a list of activities can be moved from within a composite activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e13-126">El ejemplo siguiente muestra cómo invalidar el método <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> para permitir mover actividades secundarias dentro de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-126">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> method to allow the moving of child activities within the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 [!code-csharp[WF_Samples#26](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#26)]
 [!code-vb[WF_Samples#26](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanRemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRemoveActivities (activitiesToRemove As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRemoveActivities(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove);" />
      <MemberSignature Language="F#" Value="abstract member CanRemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanRemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanRemoveActivities activitiesToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove"><span data-ttu-id="a1e13-127">Una matriz de solo lectura de actividades para quitar de la actividad compuesta asociada al diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-127">A read-only array of activities to remove from the composite activity associated with the designer.</span></span></param>
        <summary><span data-ttu-id="a1e13-128">Devuelve un valor que indica si las actividades se pueden quitar de la actividad compuesta asociada al diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-128">Returns a value that indicates if activities can be removed from the composite activity associated with the designer.</span></span></summary>
        <returns><span data-ttu-id="a1e13-129"><see langword="true" /> si las actividades se pueden quitar de la actividad compuesta; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-129"><see langword="true" /> if the activities can be removed from the composite activity; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-130">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> para determinar si una lista de actividades contenidas se puede quitar de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-130">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> to determine if a list of contained activities can be removed from the composite activity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e13-131">El ejemplo siguiente muestra cómo invalidar el método <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> para permitir mover actividades secundarias dentro de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-131">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> method to allow the moving of child activities within the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 [!code-csharp[WF_Samples#27](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#27)]
 [!code-vb[WF_Samples#27](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainedDesigners">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt; ContainedDesigners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesigner&gt; ContainedDesigners" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContainedDesigners As ReadOnlyCollection(Of ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ ContainedDesigners { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainedDesigners : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt;" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-132">Obtiene la matriz de <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> contenida dentro de <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-132">Gets the array of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></summary>
        <value><span data-ttu-id="a1e13-133">La colección de solo lectura de <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-133">The read-only collection of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-134">Utilice el descriptor de acceso <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> para recuperar una colección de solo lectura de los diseñadores contenidos dentro de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-134">Use the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> accessor to retrieve a read-only collection of the designers contained within the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeActivitiesFromDataObject">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Activity[] DeserializeActivitiesFromDataObject (IServiceProvider serviceProvider, System.Windows.Forms.IDataObject dataObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Activity[] DeserializeActivitiesFromDataObject(class System.IServiceProvider serviceProvider, class System.Windows.Forms.IDataObject dataObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.DeserializeActivitiesFromDataObject(System.IServiceProvider,System.Windows.Forms.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeserializeActivitiesFromDataObject (serviceProvider As IServiceProvider, dataObj As IDataObject) As Activity()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ DeserializeActivitiesFromDataObject(IServiceProvider ^ serviceProvider, System::Windows::Forms::IDataObject ^ dataObj);" />
      <MemberSignature Language="F#" Value="static member DeserializeActivitiesFromDataObject : IServiceProvider * System.Windows.Forms.IDataObject -&gt; System.Workflow.ComponentModel.Activity[]" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.DeserializeActivitiesFromDataObject (serviceProvider, dataObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="dataObj" Type="System.Windows.Forms.IDataObject" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="a1e13-135">Servicio de serialización de componente.</span><span class="sxs-lookup"><span data-stu-id="a1e13-135">Component serialization service.</span></span></param>
        <param name="dataObj"><span data-ttu-id="a1e13-136">Objeto que contiene las actividades para deserializar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-136">Object that contains activities to deserialize.</span></span></param>
        <summary><span data-ttu-id="a1e13-137">Deserializa los elementos de un <see cref="T:System.Windows.Forms.IDataObject" /> recibido durante una operación de arrastrar y colocar, o desde el Portapapeles.</span><span class="sxs-lookup"><span data-stu-id="a1e13-137">Deserializes items from an <see cref="T:System.Windows.Forms.IDataObject" /> received during a drag-and-drop operation or from the clipboard.</span></span></summary>
        <returns><span data-ttu-id="a1e13-138">Una matriz de actividades deserializada desde un <see cref="T:System.Windows.Forms.IDataObject" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-138">An array of activities deserialized from an <see cref="T:System.Windows.Forms.IDataObject" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="compositeActivityDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="a1e13-139">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="a1e13-139"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="a1e13-140">Libera los recursos no administrados que usa <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="a1e13-140">Releases the unmanaged resources used by the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisibleContainedDesigner">
      <MemberSignature Language="C#" Value="public virtual void EnsureVisibleContainedDesigner (System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureVisibleContainedDesigner(class System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureVisibleContainedDesigner (containedDesigner As ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnsureVisibleContainedDesigner(System::Workflow::ComponentModel::Design::ActivityDesigner ^ containedDesigner);" />
      <MemberSignature Language="F#" Value="abstract member EnsureVisibleContainedDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit&#xA;override this.EnsureVisibleContainedDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit" Usage="compositeActivityDesigner.EnsureVisibleContainedDesigner containedDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containedDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="containedDesigner"><span data-ttu-id="a1e13-141">El diseñador contenido que debe hacerse visible.</span><span class="sxs-lookup"><span data-stu-id="a1e13-141">The contained designer to make visible.</span></span></param>
        <summary><span data-ttu-id="a1e13-142">Comprueba que el diseñador contenido sea visible.</span><span class="sxs-lookup"><span data-stu-id="a1e13-142">Verifies that the contained designer is visible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-143">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> para asegurarse de que el diseñador contenido sea visible.</span><span class="sxs-lookup"><span data-stu-id="a1e13-143">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> to make sure the contained designer is visible.</span></span> <span data-ttu-id="a1e13-144">En un diseñador personalizado puede utilizar <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> para hacer que sea visible un diseñador situado dentro de un diseñador compuesto contraído.</span><span class="sxs-lookup"><span data-stu-id="a1e13-144">In a custom designer you can use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> to make visible a designer located within a collapsed composite designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandButtonRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle ExpandButtonRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ExpandButtonRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ExpandButtonRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ExpandButtonRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpandButtonRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-145">Obtiene <see cref="T:System.Drawing.Rectangle" /> que contiene el botón de expansión o contracción.</span><span class="sxs-lookup"><span data-stu-id="a1e13-145">Gets the <see cref="T:System.Drawing.Rectangle" /> that contains the expand or collapse button.</span></span></summary>
        <value><span data-ttu-id="a1e13-146"><see cref="T:System.Drawing.Rectangle" /> que adjunta el botón de expansión o contracción.</span><span class="sxs-lookup"><span data-stu-id="a1e13-146">A <see cref="T:System.Drawing.Rectangle" /> that encloses the expand or collapse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-147">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A> para devolver <xref:System.Drawing.Rectangle> que describe el área de la pantalla que adjunta el botón de expansión en <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-147">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A> to return a <xref:System.Drawing.Rectangle> that describes the area of the screen that encloses the expand button on a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span> <span data-ttu-id="a1e13-148">Esto es útil para detectar los eventos del mouse para reaccionar a sus solicitudes para expandir o contraer <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-148">This is useful for detecting mouse events to react to your requests to expand or collapse a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public virtual bool Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Expanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Expanded { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : bool with get, set" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-149">Obtiene o establece un valor que indica si <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> está expandido.</span><span class="sxs-lookup"><span data-stu-id="a1e13-149">Gets or sets a value that indicates whether the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> is expanded.</span></span></summary>
        <value><span data-ttu-id="a1e13-150"><see langword="true" /> si <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> está expandido; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-150"><see langword="true" /> if the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> is expanded; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-151">En combinación con <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown%2A> y <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A>, utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> para determinar la acción apropiada cuando un usuario hace clic en el botón de expansión o contracción en <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-151">In combination with <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown%2A> and <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A>, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> to determine the proper action when a user clicks the expand or collapse button on the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e13-152">El ejemplo de código siguiente muestra cómo puede establecer la propiedad <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> basada en un valor `Boolean` pasado como un argumento a un método.</span><span class="sxs-lookup"><span data-stu-id="a1e13-152">The following code example demonstrates how you can set the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> property based on a `Boolean` value passed as an argument to a method.</span></span>  
  
 <span data-ttu-id="a1e13-153">Este ejemplo de código pertenece al ejemplo SDK del monitor de flujo de trabajo del archivo ViewHost.cs.</span><span class="sxs-lookup"><span data-stu-id="a1e13-153">This code example is part of the Workflow Monitor SDK sample from the ViewHost.cs file.</span></span> <span data-ttu-id="a1e13-154">Para obtener más información, consulte [Monitor de flujo de trabajo](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).</span><span class="sxs-lookup"><span data-stu-id="a1e13-154">For more information, see [Workflow Monitor](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).</span></span>  
  
 [!code-csharp[WF_Samples#135](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#135)]
 [!code-vb[WF_Samples#135](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#135)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)"><span data-ttu-id="a1e13-155">Monitor de flujo de trabajo</span><span class="sxs-lookup"><span data-stu-id="a1e13-155">Workflow Monitor</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FirstSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object FirstSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FirstSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstSelectableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ FirstSelectableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstSelectableObject : obj" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-156">Obtiene el primer objeto seleccionable en el orden de navegación de <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-156">Gets the first selectable object in the navigation order of the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></summary>
        <value><span data-ttu-id="a1e13-157">El primer objeto seleccionable contenido dentro del diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-157">The first selectable object contained within the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-158">Cuando se invalida en una clase derivada, utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject%2A> para devolver el primer objeto seleccionable contenido dentro de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-158">When overridden in a derived class, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject%2A> to return the first selectable object contained within the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntersectingDesigners">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.ActivityDesigner[] GetIntersectingDesigners (System.Workflow.ComponentModel.Design.ActivityDesigner topLevelDesigner, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.ActivityDesigner[] GetIntersectingDesigners(class System.Workflow.ComponentModel.Design.ActivityDesigner topLevelDesigner, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetIntersectingDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ GetIntersectingDesigners(System::Workflow::ComponentModel::Design::ActivityDesigner ^ topLevelDesigner, System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="static member GetIntersectingDesigners : System.Workflow.ComponentModel.Design.ActivityDesigner * System.Drawing.Rectangle -&gt; System.Workflow.ComponentModel.Design.ActivityDesigner[]" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetIntersectingDesigners (topLevelDesigner, rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topLevelDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="topLevelDesigner"><span data-ttu-id="a1e13-159">El diseñador de nivel superior para analizar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-159">The top-level designer to analyze.</span></span></param>
        <param name="rectangle"><span data-ttu-id="a1e13-160">El área dentro del diseñador de nivel superior para analizar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-160">Area within the top-level designer to analyze.</span></span></param>
        <summary><span data-ttu-id="a1e13-161">Recupera diseñadores que pertenecen a la actividad raíz especificada que presentan una intersección con el área especificada.</span><span class="sxs-lookup"><span data-stu-id="a1e13-161">Retrieves designers belonging to the specified root activity that intersect a specified area.</span></span></summary>
        <returns><span data-ttu-id="a1e13-162">Una matriz de los objetos <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> que presentan una intersección con una parte del rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="a1e13-162">An array of <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> objects that intersect a portion of the Rectangle specified.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object GetNextSelectableObject (object current, System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetNextSelectableObject(object current, valuetype System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNextSelectableObject (current As Object, direction As DesignerNavigationDirection) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetNextSelectableObject(System::Object ^ current, System::Workflow::ComponentModel::Design::DesignerNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member GetNextSelectableObject : obj * System.Workflow.ComponentModel.Design.DesignerNavigationDirection -&gt; obj&#xA;override this.GetNextSelectableObject : obj * System.Workflow.ComponentModel.Design.DesignerNavigationDirection -&gt; obj" Usage="compositeActivityDesigner.GetNextSelectableObject (current, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Object" />
        <Parameter Name="direction" Type="System.Workflow.ComponentModel.Design.DesignerNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="a1e13-163">El objeto actual en el orden de navegación.</span><span class="sxs-lookup"><span data-stu-id="a1e13-163">The current object in the navigation order.</span></span></param>
        <param name="direction"><span data-ttu-id="a1e13-164">La dirección para navegar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-164">The direction to navigate.</span></span> <span data-ttu-id="a1e13-165">0 = siguiente; 1 = anterior; 2 = izquierda; 3 = derecha.</span><span class="sxs-lookup"><span data-stu-id="a1e13-165">0 = next; 1 = previous; 2 = left; 3 = right.</span></span></param>
        <summary><span data-ttu-id="a1e13-166">Obtiene el objeto que es el siguiente en el orden de navegación.</span><span class="sxs-lookup"><span data-stu-id="a1e13-166">Gets the object which is next in the order of navigation.</span></span></summary>
        <returns><span data-ttu-id="a1e13-167">El objeto que es el siguiente en el orden de navegación.</span><span class="sxs-lookup"><span data-stu-id="a1e13-167">The object that is next in the order of navigation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-168"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject%2A> provoca que la selección se mueva de la selección actual al objeto seleccionable siguiente en la dirección especificada.</span><span class="sxs-lookup"><span data-stu-id="a1e13-168"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject%2A> causes the selection to move from the current selection to the next selectable object in the direction specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Glyphs As ActivityDesignerGlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ Glyphs { System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Glyphs : System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-169">Obtiene una colección de glifos con los que adornar el diseñador de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-169">Gets a collection of glyphs with which to adorn the composite activity designer.</span></span></summary>
        <value><span data-ttu-id="a1e13-170"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> que contiene los glifos para mostrarse en el diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-170">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> that contains the glyphs to display on the designer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public override System.Workflow.ComponentModel.Design.HitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Workflow.ComponentModel.Design.HitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Workflow::ComponentModel::Design::HitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="override this.HitTest : System.Drawing.Point -&gt; System.Workflow.ComponentModel.Design.HitTestInfo" Usage="compositeActivityDesigner.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="a1e13-171"><see cref="T:System.Drawing.Point" /> que representa una única coordenada x e y.</span><span class="sxs-lookup"><span data-stu-id="a1e13-171">A <see cref="T:System.Drawing.Point" /> that represents a single x and y coordinate.</span></span></param>
        <summary><span data-ttu-id="a1e13-172">Obtiene información sobre <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> en un punto especificado de la pantalla.</span><span class="sxs-lookup"><span data-stu-id="a1e13-172">Gets information about the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> at a specified point on the screen.</span></span></summary>
        <returns><span data-ttu-id="a1e13-173"><see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> que contiene información sobre <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> en un punto especificado.</span><span class="sxs-lookup"><span data-stu-id="a1e13-173">A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> that contains information about the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> at a specified point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-174"><xref:System.Workflow.ComponentModel.Design.HitTestInfo> se utiliza junto con el método <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> del control <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> para determinar en qué parte de un control <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> ha hecho clic.</span><span class="sxs-lookup"><span data-stu-id="a1e13-174">The <xref:System.Workflow.ComponentModel.Design.HitTestInfo>, together with the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> method of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> control is used to determine which part of a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> controls you have clicked.</span></span> <span data-ttu-id="a1e13-175"><xref:System.Workflow.ComponentModel.Design.HitTestInfo> contiene coordenadas lógicas del punto en <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> donde se ha hecho clic con el mouse.</span><span class="sxs-lookup"><span data-stu-id="a1e13-175">The <xref:System.Workflow.ComponentModel.Design.HitTestInfo> contains logical coordinates of the point on the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> where the mouse was clicked.</span></span>  
  
 <span data-ttu-id="a1e13-176">El método <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> recibe <xref:System.Drawing.Point> que contiene una coordenada x e y.</span><span class="sxs-lookup"><span data-stu-id="a1e13-176">The <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> method receives a <xref:System.Drawing.Point> that contains an x and y coordinate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ImageRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ImageRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-177">Obtiene el valor para los límites de la imagen asociados al diseñador en coordenadas lógicas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-177">Gets the value for the enclosing bounds of the image associated with the designer in logical coordinates.</span></span></summary>
        <value><span data-ttu-id="a1e13-178">Un rectángulo que agrega <see cref="T:System.Drawing.Image" /> mostrado para <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-178">A rectangle that encloses the <see cref="T:System.Drawing.Image" /> displayed for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-179">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> para recuperar las coordenadas para el rectángulo que agrega la imagen asociada al diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-179">Use the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> to retrieve the coordinates for the rectangle that encloses the image associated with the designer.</span></span> <span data-ttu-id="a1e13-180">Puede utilizar estas coordenadas para dibujar los conectores o superponer los gráficos.</span><span class="sxs-lookup"><span data-stu-id="a1e13-180">You can use these coordinates for drawing connectors or overlaying graphics.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e13-181">En el ejemplo siguiente se muestra cómo invalidar la propiedad <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-181">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> property.</span></span> <span data-ttu-id="a1e13-182">En este ejemplo, <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> se calcula utilizando los límites de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-182">In this example, the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> is calculated using the Bounds of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span></span>  
  
 [!code-csharp[WF_Samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[WF_Samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="compositeActivityDesigner.Initialize activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><span data-ttu-id="a1e13-183"><see cref="T:System.Workflow.ComponentModel.Activity" /> con el que se debería inicializar el diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-183">The <see cref="T:System.Workflow.ComponentModel.Activity" /> with which the designer should be initialized.</span></span></param>
        <summary><span data-ttu-id="a1e13-184">Inicializa el diseñador con el <see cref="T:System.Workflow.ComponentModel.Activity" /> asociado.</span><span class="sxs-lookup"><span data-stu-id="a1e13-184">Initializes the designer with the associated <see cref="T:System.Workflow.ComponentModel.Activity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-185"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize%2A> carga el diseñador con el <xref:System.Workflow.ComponentModel.Activity> especificado.</span><span class="sxs-lookup"><span data-stu-id="a1e13-185"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize%2A> loads the designer with the specified <xref:System.Workflow.ComponentModel.Activity>.</span></span> <span data-ttu-id="a1e13-186">El diseñador carga el servicio de la actividad, actualiza los verbos asociados a la actividad y asigna el texto predeterminado e imagen al diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-186">The designer loads the activity service, updates the verbs associated with the activity, and assigns the default text and image to the designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertActivities">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1e13-187">Inserta las actividades en el diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-187">Inserts activities into the designer.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertActivities">
      <MemberSignature Language="C#" Value="public virtual void InsertActivities (System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertActivities(class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertActivities (insertLocation As HitTestInfo, activitiesToInsert As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert);" />
      <MemberSignature Language="F#" Value="abstract member InsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.InsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.InsertActivities (insertLocation, activitiesToInsert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="insertLocation"><span data-ttu-id="a1e13-188">La ubicación del diseñador donde insertar las actividades.</span><span class="sxs-lookup"><span data-stu-id="a1e13-188">The location in the designer to insert the activities.</span></span></param>
        <param name="activitiesToInsert"><span data-ttu-id="a1e13-189">La lista de actividades para insertar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-189">The list of activities to insert.</span></span></param>
        <summary><span data-ttu-id="a1e13-190">Inserta las actividades especificadas en el diseñador en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="a1e13-190">Inserts the specified activities in the designer at the specified location.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-191">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> para insertar una lista de actividades en la ubicación especificada.</span><span class="sxs-lookup"><span data-stu-id="a1e13-191">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> to insert a list of activities into the location specified.</span></span>  
  
 <span data-ttu-id="a1e13-192">Antes de llamar a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>, utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> para asegurarse de que se pueden insertar las actividades especificadas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-192">Prior to calling <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> to make sure that the specified activities can be inserted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertActivities">
      <MemberSignature Language="C#" Value="public static void InsertActivities (System.Workflow.ComponentModel.Design.CompositeActivityDesigner compositeActivityDesigner, System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert, string undoTransactionDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertActivities(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner compositeActivityDesigner, class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert, string undoTransactionDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.CompositeActivityDesigner,System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InsertActivities(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ compositeActivityDesigner, System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert, System::String ^ undoTransactionDescription);" />
      <MemberSignature Language="F#" Value="static member InsertActivities : System.Workflow.ComponentModel.Design.CompositeActivityDesigner * System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; * string -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities (compositeActivityDesigner, insertLocation, activitiesToInsert, undoTransactionDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositeActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
        <Parameter Name="undoTransactionDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compositeActivityDesigner"><span data-ttu-id="a1e13-193">El diseñador en el que se insertarán las actividades.</span><span class="sxs-lookup"><span data-stu-id="a1e13-193">The designer into which the activities will be inserted.</span></span></param>
        <param name="insertLocation"><span data-ttu-id="a1e13-194">La ubicación en el diseñador donde se insertarán las actividades.</span><span class="sxs-lookup"><span data-stu-id="a1e13-194">The location in the designer at which the activities will be inserted.</span></span></param>
        <param name="activitiesToInsert"><span data-ttu-id="a1e13-195">La lista de actividades para insertar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-195">The list of activities to insert.</span></span></param>
        <param name="undoTransactionDescription"><span data-ttu-id="a1e13-196">Descripción para la transacción del diseñador creada por la inserción.</span><span class="sxs-lookup"><span data-stu-id="a1e13-196">Description for the designer transaction created by the insertion.</span></span></param>
        <summary><span data-ttu-id="a1e13-197">Inserta las actividades en el diseñador en la ubicación especificada utilizando una transacción.</span><span class="sxs-lookup"><span data-stu-id="a1e13-197">Inserts activities into the designer at the specified location using a transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-198">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> para insertar una lista de actividades en la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-198">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> to insert a list of activities into the composite activity.</span></span>  
  
 <span data-ttu-id="a1e13-199">Antes de llamar a <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>, utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> para asegurarse de que se puede insertar la lista actividades especificada.</span><span class="sxs-lookup"><span data-stu-id="a1e13-199">Prior to calling <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> to make sure the specified list of activities can be inserted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e13-200">El ejemplo siguiente muestra la suma de una nueva bifurcación utilizando un diseñador basado fuera de la clase <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-200">The following example demonstrates the addition of a new branch using a designer based off of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> class.</span></span>  <span data-ttu-id="a1e13-201">Si <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> devuelve verdadero, una nueva bifurcación se crea utilizando el método <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-201">If <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> returns true, a new branch is created using the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> method.</span></span>  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainedDesignerVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsContainedDesignerVisible (System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsContainedDesignerVisible(class System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsContainedDesignerVisible (containedDesigner As ActivityDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsContainedDesignerVisible(System::Workflow::ComponentModel::Design::ActivityDesigner ^ containedDesigner);" />
      <MemberSignature Language="F#" Value="abstract member IsContainedDesignerVisible : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; bool&#xA;override this.IsContainedDesignerVisible : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; bool" Usage="compositeActivityDesigner.IsContainedDesignerVisible containedDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containedDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="containedDesigner"><span data-ttu-id="a1e13-202">El diseñador contenido dentro de CompositeActivityDesigner para comprobar la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="a1e13-202">The designer contained within the CompositeActivityDesigner to test for visibility.</span></span></param>
        <summary><span data-ttu-id="a1e13-203">Obtiene un valor que indica si el diseñador contenido está visible.</span><span class="sxs-lookup"><span data-stu-id="a1e13-203">Gets a value that indicates if the contained designer is visible.</span></span></summary>
        <returns><span data-ttu-id="a1e13-204"><see langword="true" /> si el diseñador contenido está visible; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-204"><see langword="true" /> if the contained designer is visible; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-205">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible%2A> para determinar si el diseñador especificado está visible.</span><span class="sxs-lookup"><span data-stu-id="a1e13-205">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible%2A> to determine if the specified designer is visible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditable : bool" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-206">Obtiene un valor que indica si se puede editar el diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-206">Gets a value that indicates whether the designer can be edited.</span></span></summary>
        <value><span data-ttu-id="a1e13-207"><see langword="true" /> si el diseñador se puede editar; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-207"><see langword="true" /> if the designer can be edited; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-208">Algunas actividades personalizadas quizás no permitan modificar propiedades u otros valores en el entorno de diseño.</span><span class="sxs-lookup"><span data-stu-id="a1e13-208">Some custom activities might not allow you to modify properties or other settings in the design environment.</span></span> <span data-ttu-id="a1e13-209">La propiedad <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable%2A> debería determinar si el diseñador permite edita en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="a1e13-209">The <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable%2A> property should determine whether the designer allows edits at design time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object LastSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LastSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastSelectableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ LastSelectableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSelectableObject : obj" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-210">Obtiene el último objeto seleccionable contenido dentro de <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-210">Gets the last selectable object contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></summary>
        <value><span data-ttu-id="a1e13-211">El último objeto seleccionable contenido dentro de <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-211">The last selectable object contained within the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-212">Si se invalida en una clase derivada, utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject%2A> para devolver el último objeto seleccionable contenido dentro del diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-212">When overridden in a derived class, use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject%2A> to return the last selectable object contained within the designer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : System.IO.BinaryReader -&gt; unit" Usage="compositeActivityDesigner.LoadViewState reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a1e13-213"><see cref="T:System.IO.BinaryReader" /> desde donde cargar el estado de vista.</span><span class="sxs-lookup"><span data-stu-id="a1e13-213">The <see cref="T:System.IO.BinaryReader" /> from which to load the view state.</span></span></param>
        <summary><span data-ttu-id="a1e13-214">Restaura el estado de vista a partir de una secuencia binaria.</span><span class="sxs-lookup"><span data-stu-id="a1e13-214">Restores the view state from a binary stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-215">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A> para restaurar el diseñador a un estado previamente guardado utilizando <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-215">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A> to restore the designer to a state previously saved using <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-216">Obtiene o establece la ubicación del diseñador en coordenadas lógicas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-216">Gets or sets the location of the designer in logical coordinates.</span></span></summary>
        <value><span data-ttu-id="a1e13-217">Ubicación del diseñador en coordenadas lógicas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-217">The location of the designer in logical coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-218">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location%2A> para colocar el diseñador en tiempo de diseño o tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="a1e13-218">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location%2A> to position the designer at design or run time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveActivities">
      <MemberSignature Language="C#" Value="public virtual void MoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveActivities (moveLocation As HitTestInfo, activitiesToMove As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ moveLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToMove);" />
      <MemberSignature Language="F#" Value="abstract member MoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.MoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.MoveActivities (moveLocation, activitiesToMove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation"><span data-ttu-id="a1e13-219"><see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> que describe la ubicación a la que mover las actividades.</span><span class="sxs-lookup"><span data-stu-id="a1e13-219">A <see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> describing the location to which to move the activities.</span></span></param>
        <param name="activitiesToMove"><span data-ttu-id="a1e13-220">La lista de actividades para mover.</span><span class="sxs-lookup"><span data-stu-id="a1e13-220">The list of activities to move.</span></span></param>
        <summary><span data-ttu-id="a1e13-221">Mueve las actividades de un diseñador a otro.</span><span class="sxs-lookup"><span data-stu-id="a1e13-221">Moves activities from one designer to another.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-222">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities%2A> para mover una lista de actividades de una actividad compuesta a otra.</span><span class="sxs-lookup"><span data-stu-id="a1e13-222">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities%2A> to move a list of activities from one composite activity to another.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDesigners">
      <MemberSignature Language="C#" Value="public static void MoveDesigners (System.Workflow.ComponentModel.Design.ActivityDesigner activityDesigner, bool moveBack);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDesigners(class System.Workflow.ComponentModel.Design.ActivityDesigner activityDesigner, bool moveBack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDesigners(System::Workflow::ComponentModel::Design::ActivityDesigner ^ activityDesigner, bool moveBack);" />
      <MemberSignature Language="F#" Value="static member MoveDesigners : System.Workflow.ComponentModel.Design.ActivityDesigner * bool -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners (activityDesigner, moveBack)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="moveBack" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="activityDesigner"><span data-ttu-id="a1e13-223">Diseñador de actividades que se va a mover.</span><span class="sxs-lookup"><span data-stu-id="a1e13-223">The activity designer to move.</span></span></param>
        <param name="moveBack"><span data-ttu-id="a1e13-224"><see langword="true" /> para mover el diseñador hacia atrás; <see langword="false" /> para mover el diseñador hacia delante.</span><span class="sxs-lookup"><span data-stu-id="a1e13-224"><see langword="true" /> to move the designer backwards; <see langword="false" /> to move the designer forward.</span></span></param>
        <summary><span data-ttu-id="a1e13-225">Mueve un diseñador hacia delante o hacia atrás en el índice dentro de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-225">Moves a designer forward or backwards in index within the composite activity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-226">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners%2A> para mover una actividad contenida dentro de la actividad compuesta hacia delante o hacia atrás en el índice de actividades contenidas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-226">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners%2A> to move an activity contained within the composite activity forward or backwards in the index of contained activities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivitiesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivitiesChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivitiesChanged(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivitiesChanged (listChangeArgs As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivitiesChanged(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ listChangeArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivitiesChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnContainedActivitiesChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivitiesChanged listChangeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChangeArgs" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="listChangeArgs"><span data-ttu-id="a1e13-227"><see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> que contiene información sobre el cambio.</span><span class="sxs-lookup"><span data-stu-id="a1e13-227">An <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> containing information about the change.</span></span></param>
        <summary><span data-ttu-id="a1e13-228">Se produce cuando más de una actividad contenida dentro de los diseñadores ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="a1e13-228">Occurs when more than one activities contained within the designers have changed.</span></span> <span data-ttu-id="a1e13-229">Por ejemplo, esto produce cuando se agrega una nueva actividad secundaria o se quita una actividad secundaria existente.</span><span class="sxs-lookup"><span data-stu-id="a1e13-229">This occurs, for example, when a new child activity is added or an existing child activity is removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-230">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged%2A> para responder a los cambios de actividades dentro de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-230">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged%2A> to respond to changes to activities inside the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1e13-231"><paramref name="listChangeArgs" /> contiene una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a1e13-231"><paramref name="listChangeArgs" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivitiesChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivitiesChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivitiesChanging(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivitiesChanging (listChangeArgs As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivitiesChanging(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ listChangeArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivitiesChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnContainedActivitiesChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivitiesChanging listChangeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChangeArgs" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="listChangeArgs"><span data-ttu-id="a1e13-232"><see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> que contiene información sobre el cambio.</span><span class="sxs-lookup"><span data-stu-id="a1e13-232">An <see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> that contains information about the change.</span></span></param>
        <summary><span data-ttu-id="a1e13-233">Se produce cuando una actividad o un grupo de actividades contenida dentro del diseñador se están cambiando.</span><span class="sxs-lookup"><span data-stu-id="a1e13-233">Occurs when an activity or a group of activities contained within the designer are changing.</span></span> <span data-ttu-id="a1e13-234">Por ejemplo, esto produce cuando se agrega una nueva actividad secundaria o se quita una actividad secundaria existente.</span><span class="sxs-lookup"><span data-stu-id="a1e13-234">This occurs, for example, when a new child activity is added or an existing child activity is removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-235">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging%2A> para responder a los cambios que se están produciendo en las actividades contenidas dentro de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-235">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging%2A> to respond to changes that are occurring to the activities contained within the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1e13-236"><paramref name="listChangeArgs" /> contiene una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a1e13-236"><paramref name="listChangeArgs" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivityChanged (System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivityChanged(class System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivityChanged (e As ActivityChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivityChanged(System::Workflow::ComponentModel::Design::ActivityChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit&#xA;override this.OnContainedActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivityChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a1e13-237"><see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> que contiene información sobre el cambio.</span><span class="sxs-lookup"><span data-stu-id="a1e13-237">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> that contains information about the change.</span></span></param>
        <summary><span data-ttu-id="a1e13-238">Se produce cuando una actividad contenida dentro del diseñador ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="a1e13-238">Occurs when an activity contained within the designer has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-239">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged%2A> para responder a los cambios de las actividades contenidas dentro de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-239">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged%2A> to respond to changes in the activities contained within the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1e13-240"><paramref name="e" /> contiene una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a1e13-240"><paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a1e13-241">Objeto <see cref="T:System.Windows.Forms.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="a1e13-241">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a1e13-242">Se llama cuando una tecla se presiona con el diseñador en foco.</span><span class="sxs-lookup"><span data-stu-id="a1e13-242">Called when a key is pressed with the designer in focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected override void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayoutPosition (e As ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayoutPosition(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayoutPosition : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnLayoutPosition e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a1e13-243">Objeto <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="a1e13-243">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a1e13-244">Realiza las tareas de diseño y posicionamiento para las indicaciones visuales contenidas o diseñadores en <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> con el fin de cambiar de posición sus actividades secundarias.</span><span class="sxs-lookup"><span data-stu-id="a1e13-244">Performs layout and positioning tasks for the contained visual cues or designers on the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> to reposition its child activities.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-245"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition%2A> realiza las tareas de diseño para todos los diseñadores de actividad secundarios que <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> contiene.</span><span class="sxs-lookup"><span data-stu-id="a1e13-245"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition%2A> performs layout tasks for all of the child activity designers that the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> contains.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a1e13-246"><paramref name="e" /> contiene una referencia nula (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="a1e13-246"><paramref name="e" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnLayoutSize (e As ActivityDesignerLayoutEventArgs) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size OnLayoutSize(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size" Usage="compositeActivityDesigner.OnLayoutSize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a1e13-247">Objeto <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="a1e13-247">The <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a1e13-248">Se llama para calcular el tamaño requerido para una actividad basada en su estado actual (contraído o expandido) y su lista de actividades secundarias.</span><span class="sxs-lookup"><span data-stu-id="a1e13-248">Called to calculate the size needed for an activity based on its current state (collapsed or expanded) and its list of child activities.</span></span></summary>
        <returns><span data-ttu-id="a1e13-249"><see cref="T:System.Drawing.Size" /> que contiene los nuevos valores de tamaño para <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="a1e13-249">The <see cref="T:System.Drawing.Size" /> that contains the new size settings for the <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-250"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize%2A> realiza tareas de cambio de tamaño para cada diseñador de actividad que el diseñador de la actividad compuesta contiene.</span><span class="sxs-lookup"><span data-stu-id="a1e13-250"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize%2A> performs resizing tasks for each activity designer that the composite activity designer contains.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a1e13-251">Objeto <see cref="T:System.Windows.Forms.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="a1e13-251">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a1e13-252">Llamado cuando se hace clic con el mouse cuando el puntero está en los límites del diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-252">Called when the mouse is clicked when the pointer is in designer bounds.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-253">A continuación, se describe cómo y cuándo se generan eventos relacionados con operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-253">The following describes how and when events related to drag-and-drop operations are raised.</span></span>  
  
 <span data-ttu-id="a1e13-254">Si el diseñador es un destino válido, se genera el evento <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> con el efecto de arrastrar y colocar especificado.</span><span class="sxs-lookup"><span data-stu-id="a1e13-254">If the designer is a valid drop target, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> event is raised with the drag-and-drop effect specified.</span></span> <span data-ttu-id="a1e13-255">Para obtener una lista de efectos de arrastrar y colocar, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-255">For a list of drag-and-drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
-   <span data-ttu-id="a1e13-256">Se hace un seguimiento de los cambios en la posición del puntero, el estado del teclado y el estado de los botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="a1e13-256">Changes in the pointer position, keyboard state, and mouse button state are tracked.</span></span>  
  
-   <span data-ttu-id="a1e13-257">Si el usuario se mueve fuera de los límites del diseñador, se genera el evento <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-257">If the user moves out of the designer bounds, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> event is raised.</span></span>  
  
-   <span data-ttu-id="a1e13-258">Si el mouse entra en otro diseñador, se provoca <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> para ese diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-258">If the mouse enters another designer, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> for that designer is raised.</span></span>  
  
-   <span data-ttu-id="a1e13-259">Si se mueve el mouse pero permanece dentro del mismo diseñador, se genera el evento <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-259">If the mouse moves but stays within the same designer, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> event is raised.</span></span>  
  
-   <span data-ttu-id="a1e13-260">Si hay un cambio en el estado del teclado o del mouse, se genera el evento <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> y se determina si debe continuarse la operación de arrastrar, si se deben colocar los datos, o si se debe cancelar la operación en función del valor de la propiedad `Action` del evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-260">If there is a change in the keyboard or mouse state, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the `Action` property of the event <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</span></span>  
  
 <span data-ttu-id="a1e13-261">Si el valor es `DragAction.Continue`, se genera el evento <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> para continuar con la operación y, con el nuevo efecto, se genera el evento <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A>de forma que se pueda establecer la información visual apropiada.</span><span class="sxs-lookup"><span data-stu-id="a1e13-261">If the value is `DragAction.Continue`, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> event is raised to continue the operation and the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> event is raised with the new effect so appropriate visual feedback can be set.</span></span> <span data-ttu-id="a1e13-262">Para obtener una lista de efectos de colocar válidos, vea la enumeración <xref:System.Windows.Forms.DragDropEffects>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-262">For a list of valid drop effects, see the <xref:System.Windows.Forms.DragDropEffects> enumeration.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a1e13-263">Los eventos <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> y <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> están emparejados de forma que cuando el mouse se desplace por el destino de la colocación, el usuario reciba la información más actualizada sobre la posición del mouse.</span><span class="sxs-lookup"><span data-stu-id="a1e13-263">The <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> and <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> events are paired so that as the mouse moves across the drop target, the user is supplied with the most up-to-date feedback about the mouse position.</span></span>  
  
 <span data-ttu-id="a1e13-264">Si el valor es `DragAction.Drop`, el valor del efecto de colocación se devuelve al origen de modo que la aplicación de origen pueda realizar la operación apropiada en los datos de origen; por ejemplo, cortar los datos si la operación es un movimiento.</span><span class="sxs-lookup"><span data-stu-id="a1e13-264">If the value is `DragAction.Drop`, the drop effect value is returned to the source, so that the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</span></span>  
  
 <span data-ttu-id="a1e13-265">Si el valor es `DragAction.Cancel`, se genera el evento <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-265">If the value is `DragAction.Cancel`, the <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> event is raised.</span></span>  
  
 <span data-ttu-id="a1e13-266">Para obtener más información acerca de cómo controlar eventos, vea [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="a1e13-266">For more information about how to handle events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a1e13-267"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> que contiene los datos del dibujo.</span><span class="sxs-lookup"><span data-stu-id="a1e13-267">An <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> that contains the drawing data.</span></span></param>
        <summary><span data-ttu-id="a1e13-268">Dibuja en tiempo de diseño la representación visual de una actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-268">Draws the visual representation of a composite activity at design time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThemeChange">
      <MemberSignature Language="C#" Value="protected override void OnThemeChange (System.Workflow.ComponentModel.Design.ActivityDesignerTheme designerTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnThemeChange(class System.Workflow.ComponentModel.Design.ActivityDesignerTheme designerTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnThemeChange (designerTheme As ActivityDesignerTheme)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnThemeChange(System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ designerTheme);" />
      <MemberSignature Language="F#" Value="override this.OnThemeChange : System.Workflow.ComponentModel.Design.ActivityDesignerTheme -&gt; unit" Usage="compositeActivityDesigner.OnThemeChange designerTheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerTheme" Type="System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />
      </Parameters>
      <Docs>
        <param name="designerTheme"><span data-ttu-id="a1e13-269">Objeto <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="a1e13-269">A <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="a1e13-270">Notifica al diseñador que su tema asociado ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="a1e13-270">Notifies the designer that the associated theme has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-271"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange%2A> se produce siempre que el tema asociado al diseñador cambie.</span><span class="sxs-lookup"><span data-stu-id="a1e13-271"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange%2A> occurs any time the theme associated with the designer changes.</span></span> <span data-ttu-id="a1e13-272">Cuando el tema cambia, es probable que la apariencia y el funcionamiento del diseñador necesiten cambiar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-272">When the theme changes it is likely that the designer look and feel needs to change.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintContainedDesigners">
      <MemberSignature Language="C#" Value="protected void PaintContainedDesigners (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PaintContainedDesigners(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.PaintContainedDesigners(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PaintContainedDesigners (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PaintContainedDesigners(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.PaintContainedDesigners : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="compositeActivityDesigner.PaintContainedDesigners e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="a1e13-273"><see cref="T:System.EventArgs" /> que se utiliza para pintar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-273"><see cref="T:System.EventArgs" /> to be used for painting.</span></span></param>
        <summary><span data-ttu-id="a1e13-274">Ajusta la región del clip en el objeto gráfico y llama a <see cref="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" /> en todos los diseñadores contenidos.</span><span class="sxs-lookup"><span data-stu-id="a1e13-274">Adjusts the clip region on the graphics object and calls <see cref="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" /> on all contained designers.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveActivities">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1e13-275">Quita todas las actividades del diseñador de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-275">Removes all activities from the composite activity designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-276">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> para quitar las actividades de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-276">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> to remove activities from the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveActivities">
      <MemberSignature Language="C#" Value="public virtual void RemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveActivities (activitiesToRemove As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveActivities(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove);" />
      <MemberSignature Language="F#" Value="abstract member RemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.RemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.RemoveActivities activitiesToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove"><span data-ttu-id="a1e13-277">Una lista de actividades para quitar del diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-277">A list of activities to remove from the designer.</span></span></param>
        <summary><span data-ttu-id="a1e13-278">Quita una lista de actividades del diseñador de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-278">Removes a list of activities from the composite activity designer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-279">Quita la lista de actividades de la actividad compuesta.</span><span class="sxs-lookup"><span data-stu-id="a1e13-279">Removes the list of activities from the composite activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivities">
      <MemberSignature Language="C#" Value="public static void RemoveActivities (IServiceProvider serviceProvider, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove, string transactionDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveActivities(class System.IServiceProvider serviceProvider, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove, string transactionDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.IServiceProvider,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveActivities (serviceProvider As IServiceProvider, activitiesToRemove As ReadOnlyCollection(Of Activity), transactionDescription As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveActivities(IServiceProvider ^ serviceProvider, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove, System::String ^ transactionDescription);" />
      <MemberSignature Language="F#" Value="static member RemoveActivities : IServiceProvider * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; * string -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities (serviceProvider, activitiesToRemove, transactionDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
        <Parameter Name="transactionDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="a1e13-280">El proveedor de servicios asociado al diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-280">The service provider associated with the designer.</span></span></param>
        <param name="activitiesToRemove"><span data-ttu-id="a1e13-281">La lista de actividades para quitar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-281">The list of activities to remove.</span></span></param>
        <param name="transactionDescription"><span data-ttu-id="a1e13-282">La descripción de la transacción creada.</span><span class="sxs-lookup"><span data-stu-id="a1e13-282">The description of the transaction created.</span></span></param>
        <summary><span data-ttu-id="a1e13-283">Quita la lista de actividades del diseñador utilizando una transacción.</span><span class="sxs-lookup"><span data-stu-id="a1e13-283">Removes the list of activities from the designer using a transaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-284">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> para quitar la lista especificada de actividades de la actividad compuesta dentro de la transacción especificada.</span><span class="sxs-lookup"><span data-stu-id="a1e13-284">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> to remove the specified list of activities from the composite activity within the specified transaction.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override void SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SaveViewState (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SaveViewState(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : System.IO.BinaryWriter -&gt; unit" Usage="compositeActivityDesigner.SaveViewState writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a1e13-285"><see cref="T:System.IO.BinaryWriter" /> en el que se almacena el estado de vista.</span><span class="sxs-lookup"><span data-stu-id="a1e13-285">The <see cref="T:System.IO.BinaryWriter" /> into which the view state is stored.</span></span></param>
        <summary><span data-ttu-id="a1e13-286">Guarda el estado de vista en una secuencia binaria.</span><span class="sxs-lookup"><span data-stu-id="a1e13-286">Saves the view state to a binary stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-287">Utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A> para guardar el estado de una actividad compuesta en una secuencia.</span><span class="sxs-lookup"><span data-stu-id="a1e13-287">Use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A> to save the state of a composite activity to a stream.</span></span> <span data-ttu-id="a1e13-288">Para recuperar el estado de vista utilice <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-288">To restore the view state use <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeActivitiesToDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject SerializeActivitiesToDataObject (IServiceProvider serviceProvider, System.Workflow.ComponentModel.Activity[] activities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject SerializeActivitiesToDataObject(class System.IServiceProvider serviceProvider, class System.Workflow.ComponentModel.Activity[] activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SerializeActivitiesToDataObject(System.IServiceProvider,System.Workflow.ComponentModel.Activity[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeActivitiesToDataObject (serviceProvider As IServiceProvider, activities As Activity()) As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ SerializeActivitiesToDataObject(IServiceProvider ^ serviceProvider, cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activities);" />
      <MemberSignature Language="F#" Value="static member SerializeActivitiesToDataObject : IServiceProvider * System.Workflow.ComponentModel.Activity[] -&gt; System.Windows.Forms.IDataObject" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SerializeActivitiesToDataObject (serviceProvider, activities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="activities" Type="System.Workflow.ComponentModel.Activity[]" />
      </Parameters>
      <Docs>
        <param name="serviceProvider"><span data-ttu-id="a1e13-289">Servicio de serialización de componente.</span><span class="sxs-lookup"><span data-stu-id="a1e13-289">Component serialization service.</span></span></param>
        <param name="activities"><span data-ttu-id="a1e13-290">La matriz de actividades para serializar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-290">Array of activities to serialize.</span></span></param>
        <summary><span data-ttu-id="a1e13-291">Serializa una matriz de actividades en <see cref="T:System.Windows.Forms.IDataObject" /> que se puede colocar en el Portapapeles o se puede utilizar al inicializar una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="a1e13-291">Serializes an array of activities to an <see cref="T:System.Windows.Forms.IDataObject" /> that can be placed into the clipboard or used when initializing a drag and drop operation.</span></span></summary>
        <returns><span data-ttu-id="a1e13-292"><see cref="T:System.Windows.Forms.IDataObject" /> que contiene actividades serializadas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-292"><see cref="T:System.Windows.Forms.IDataObject" /> that contains serialized activities.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle TextRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle TextRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TextRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle TextRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.TextRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-293">Obtiene el valor del rectángulo de la descripción en coordenadas lógicas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-293">Gets the value of the description rectangle in logical coordinates.</span></span></summary>
        <value><span data-ttu-id="a1e13-294">Valor del rectángulo de la descripción en coordenadas lógicas.</span><span class="sxs-lookup"><span data-stu-id="a1e13-294">The value of the description rectangle in logical coordinates.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-295">Utilice para determinar la ubicación en el diseñador donde se mostrará la descripción del texto.</span><span class="sxs-lookup"><span data-stu-id="a1e13-295">Use to determine the location on the designer where the text description will be displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a1e13-296">En el ejemplo siguiente se muestra cómo invalidar la propiedad <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-296">The following example shows how to override the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A> property.</span></span> <span data-ttu-id="a1e13-297">En este ejemplo, <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A> se calcula utilizando los límites de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> así como la ubicación y tamaño de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1e13-297">In this example, the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A> is calculated using the Bounds of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> as well as the location and size of the <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A>.</span></span>  
  
 [!code-csharp[WF_Samples#75](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#75)]
 [!code-vb[WF_Samples#75](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleHeight">
      <MemberSignature Language="C#" Value="protected virtual int TitleHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TitleHeight" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TitleHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int TitleHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleHeight : int" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1e13-298">Obtiene el alto del área de título del diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-298">Gets the height of the title area of the designer.</span></span></summary>
        <value><span data-ttu-id="a1e13-299">El alto en píxeles del área de título del diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-299">The height in pixels of the title area of the designer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1e13-300"><xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight%2A> describe el alto del área de título el diseñador.</span><span class="sxs-lookup"><span data-stu-id="a1e13-300">The <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight%2A> describes the height of the title area of the designer.</span></span> <span data-ttu-id="a1e13-301">Normalmente esto puede contener el encabezado, icono, y el botón de expansión o contracción.</span><span class="sxs-lookup"><span data-stu-id="a1e13-301">Typically this can contain the heading, icon, and expand or collapse button.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
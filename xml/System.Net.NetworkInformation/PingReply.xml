<Type Name="PingReply" FullName="System.Net.NetworkInformation.PingReply">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02658955cbcea15b85a8fddda92f34a0084c05ea" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39987625" /></Metadata><TypeSignature Language="C#" Value="public class PingReply" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PingReply extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.NetworkInformation.PingReply" />
  <TypeSignature Language="VB.NET" Value="Public Class PingReply" />
  <TypeSignature Language="C++ CLI" Value="public ref class PingReply" />
  <TypeSignature Language="F#" Value="type PingReply = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Ping</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="42fb4-101">Proporciona información sobre el estado y los datos resultantes de una operación <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> o <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" />.</span><span class="sxs-lookup"><span data-stu-id="42fb4-101">Provides information about the status and data resulting from a <see cref="Overload:System.Net.NetworkInformation.Ping.Send" /> or <see cref="Overload:System.Net.NetworkInformation.Ping.SendAsync" /> operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42fb4-102">La <xref:System.Net.NetworkInformation.Ping> clase intenta enviar una solicitud de eco del protocolo de mensajes de Control de Internet (ICMP) a un equipo remoto y recibir información desde el equipo a través de un mensaje de respuesta de eco ICMP.</span><span class="sxs-lookup"><span data-stu-id="42fb4-102">The <xref:System.Net.NetworkInformation.Ping> class attempts to send an Internet Control Message Protocol (ICMP) echo request to a remote computer and receive information back from the computer via an ICMP echo reply message.</span></span> <span data-ttu-id="42fb4-103">El <xref:System.Net.NetworkInformation.Ping> clase utiliza instancias de la <xref:System.Net.NetworkInformation.PingReply> clase para devolver información sobre la operación, como su estado y el tiempo dedicado a enviar la solicitud y recibir la respuesta.</span><span class="sxs-lookup"><span data-stu-id="42fb4-103">The <xref:System.Net.NetworkInformation.Ping> class uses instances of the <xref:System.Net.NetworkInformation.PingReply> class to return information about the operation, such as its status and the time taken to send the request and receive the reply.</span></span>  
  
 <span data-ttu-id="42fb4-104">El <xref:System.Net.NetworkInformation.Ping.Send%2A> métodos devuelven instancias de la <xref:System.Net.NetworkInformation.PingReply> directamente la clase.</span><span class="sxs-lookup"><span data-stu-id="42fb4-104">The <xref:System.Net.NetworkInformation.Ping.Send%2A> methods return instances of the <xref:System.Net.NetworkInformation.PingReply> class directly.</span></span> <span data-ttu-id="42fb4-105">El <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> métodos devuelven un <xref:System.Net.NetworkInformation.PingReply> en el <xref:System.Net.NetworkInformation.PingCompletedEventHandler> del método <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parámetro.</span><span class="sxs-lookup"><span data-stu-id="42fb4-105">The <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> methods return a <xref:System.Net.NetworkInformation.PingReply> in the <xref:System.Net.NetworkInformation.PingCompletedEventHandler> method's <xref:System.Net.NetworkInformation.PingCompletedEventArgs> parameter.</span></span> <span data-ttu-id="42fb4-106">El <xref:System.Net.NetworkInformation.PingReply> se accede a través del <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="42fb4-106">The <xref:System.Net.NetworkInformation.PingReply> is accessed through the <xref:System.Net.NetworkInformation.PingCompletedEventArgs.Reply%2A> property.</span></span>  
  
 <span data-ttu-id="42fb4-107">Si el valor de <xref:System.Net.NetworkInformation.PingReply.Status%2A> no <xref:System.Net.NetworkInformation.IPStatus.Success>, no debe usar los valores devueltos por la <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="42fb4-107">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="42fb4-108">El <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> propiedad devolverá cero, el <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> propiedad devolverá una matriz vacía y el <xref:System.Net.NetworkInformation.PingReply.Options%2A> propiedad devolverá `null`.</span><span class="sxs-lookup"><span data-stu-id="42fb4-108">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> property will return zero, the <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> property will return an empty array, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42fb4-109">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Net.NetworkInformation.Ping> clase para enviar una solicitud de eco ICMP de forma sincrónica y mostrar la respuesta.</span><span class="sxs-lookup"><span data-stu-id="42fb4-109">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.Net.IPAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As IPAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPAddress ^ Address { System::Net::IPAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.Net.IPAddress" Usage="System.Net.NetworkInformation.PingReply.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42fb4-110">Obtiene la dirección del host que envía el mensaje de respuesta de eco ICPM (Protocolo de mensajes de control de Internet).</span><span class="sxs-lookup"><span data-stu-id="42fb4-110">Gets the address of the host that sends the Internet Control Message Protocol (ICMP) echo reply.</span></span></summary>
        <value><span data-ttu-id="42fb4-111">Un objeto <see cref="T:System.Net.IPAddress" /> que contiene el destino para el mensaje de eco ICMP.</span><span class="sxs-lookup"><span data-stu-id="42fb4-111">An <see cref="T:System.Net.IPAddress" /> containing the destination for the ICMP echo message.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42fb4-112">El <xref:System.Net.NetworkInformation.PingReply.Address%2A> devueltos por cualquiera de los <xref:System.Net.NetworkInformation.Ping.Send%2A> sobrecargas pueden originarse en un equipo remoto malintencionado.</span><span class="sxs-lookup"><span data-stu-id="42fb4-112">The <xref:System.Net.NetworkInformation.PingReply.Address%2A> returned by any of the <xref:System.Net.NetworkInformation.Ping.Send%2A> overloads can originate from a malicious remote computer.</span></span> <span data-ttu-id="42fb4-113">No se conectan al equipo remoto mediante esta dirección.</span><span class="sxs-lookup"><span data-stu-id="42fb4-113">Do not connect to the remote computer using this address.</span></span> <span data-ttu-id="42fb4-114">Usar DNS para determinar la dirección IP de la máquina a la que desea conectarse.</span><span class="sxs-lookup"><span data-stu-id="42fb4-114">Use DNS to determine the IP address of the machine to which you want to connect.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42fb4-115">El siguiente ejemplo de código envía una solicitud de eco ICMP de forma sincrónica y muestra el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="42fb4-115">The following code example sends an ICMP echo request synchronously and displays the value of this property.</span></span>  
  
 [!code-cpp[NclPingSampler#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#2)]
 [!code-csharp[NclPingSampler#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Buffer">
      <MemberSignature Language="C#" Value="public byte[] Buffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Buffer" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Buffer As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Buffer { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Buffer : byte[]" Usage="System.Net.NetworkInformation.PingReply.Buffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42fb4-116">Obtiene el búfer de datos recibidos en un mensaje de respuesta de eco ICMP (Protocolo de mensajes de control de Internet).</span><span class="sxs-lookup"><span data-stu-id="42fb4-116">Gets the buffer of data received in an Internet Control Message Protocol (ICMP) echo reply message.</span></span></summary>
        <value><span data-ttu-id="42fb4-117">Una matriz <see cref="T:System.Byte" /> que contiene los datos recibidos en un mensaje de respuesta de eco ICMP, o una matriz vacía si no se obtiene respuesta.</span><span class="sxs-lookup"><span data-stu-id="42fb4-117">A <see cref="T:System.Byte" /> array containing the data received in an ICMP echo reply message, or an empty array, if no reply was received.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42fb4-118">El búfer de datos que se envían con la solicitud de eco ICMP se devuelve al remitente en la respuesta de eco para que se puede calcular el tiempo de viaje de ida y vuelta para un paquete de un tamaño conocido.</span><span class="sxs-lookup"><span data-stu-id="42fb4-118">The data buffer sent with the ICMP echo request is returned to the sender in the echo reply so the roundtrip travel time for a packet of a known size can be computed.</span></span> <span data-ttu-id="42fb4-119">El búfer de datos, combinado con el <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> opción, se puede usar para detectar la unidad de transmisión máxima para la ruta de acceso de red entre los equipos de origen y destino.</span><span class="sxs-lookup"><span data-stu-id="42fb4-119">The data buffer, combined with the <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> option, can be used to discover the maximum transmission unit for the network path between the source and destination computers.</span></span> <span data-ttu-id="42fb4-120">Para obtener más información, vea "Traceroute" en RFC 1574, sección 3.2, disponible en [ https://www.ietf.org ](https://www.ietf.org).</span><span class="sxs-lookup"><span data-stu-id="42fb4-120">For additional information, see "Traceroute" in RFC 1574, Section 3.2, available at [https://www.ietf.org](https://www.ietf.org).</span></span>  
  
 <span data-ttu-id="42fb4-121">El búfer predeterminado utilizado con <xref:System.Net.NetworkInformation.Ping.Send%2A> y <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contiene 32 bytes de datos.</span><span class="sxs-lookup"><span data-stu-id="42fb4-121">The default buffer used with <xref:System.Net.NetworkInformation.Ping.Send%2A> and <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> contains 32 bytes of data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42fb4-122">El siguiente ejemplo de código envía una solicitud de eco ICMP de forma sincrónica y muestra el tamaño del búfer devuelto por esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="42fb4-122">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.PingOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkInformation.PingOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As PingOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::PingOptions ^ Options { System::Net::NetworkInformation::PingOptions ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Net.NetworkInformation.PingOptions" Usage="System.Net.NetworkInformation.PingReply.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.PingOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42fb4-123">Obtiene las opciones utilizadas para transmitir la respuesta a un mensaje de solicitud de eco ICPM (Protocolo de mensajes de control de Internet).</span><span class="sxs-lookup"><span data-stu-id="42fb4-123">Gets the options used to transmit the reply to an Internet Control Message Protocol (ICMP) echo request.</span></span></summary>
        <value><span data-ttu-id="42fb4-124">Un objeto <see cref="T:System.Net.NetworkInformation.PingOptions" /> que contiene el Período de vida (TTL) y la directiva de fragmentación que se utilizan para transmitir la respuesta si <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> es <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; de lo contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="42fb4-124">A <see cref="T:System.Net.NetworkInformation.PingOptions" /> object that contains the Time to Live (TTL) and the fragmentation directive used for transmitting the reply if <see cref="P:System.Net.NetworkInformation.PingReply.Status" /> is <see cref="F:System.Net.NetworkInformation.IPStatus.Success" />; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42fb4-125">El valor de TTL define el número de veces que los nodos pueden reenviar un paquete que se desplaza entre su origen y destino.</span><span class="sxs-lookup"><span data-stu-id="42fb4-125">The TTL defines the number of times nodes can forward a packet as it travels between its source and destination.</span></span> <span data-ttu-id="42fb4-126">Si el número de reenvíos, también denominados saltos, supera el valor especificado para el TTL, el paquete se considera no entregable y se descarta.</span><span class="sxs-lookup"><span data-stu-id="42fb4-126">If the number of forwards, also known as hops, exceeds the value specified for the TTL, the packet is deemed undeliverable and is discarded.</span></span>  
  
 <span data-ttu-id="42fb4-127">El <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> valor especificado en la fragmentación de paquetes ICMP echo solicitud controles.</span><span class="sxs-lookup"><span data-stu-id="42fb4-127">The <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> value specified in the ICMP echo request controls packet fragmentation.</span></span> <span data-ttu-id="42fb4-128">Si <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> es `true` y el tamaño del paquete supera la unidad de transmisión máxima de la ruta de acceso de red realizada por el paquete, el paquete se descarta y el <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> se devuelve el error.</span><span class="sxs-lookup"><span data-stu-id="42fb4-128">If <xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> is `true` and the packet size exceeds the maximum transmission unit of the network path taken by the packet, the packet is discarded and the <xref:System.Net.NetworkInformation.IPStatus.PacketTooBig> error is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42fb4-129">El siguiente ejemplo de código envía una solicitud de eco ICMP de forma sincrónica y muestra los valores almacenados en el <xref:System.Net.NetworkInformation.PingOptions> objeto devuelto por esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="42fb4-129">The following code example sends an ICMP echo request synchronously and displays the values stored in the <xref:System.Net.NetworkInformation.PingOptions> object returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#3)]
 [!code-csharp[NclPingSampler#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoundtripTime">
      <MemberSignature Language="C#" Value="public long RoundtripTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 RoundtripTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoundtripTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long RoundtripTime { long get(); };" />
      <MemberSignature Language="F#" Value="member this.RoundtripTime : int64" Usage="System.Net.NetworkInformation.PingReply.RoundtripTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42fb4-130">Obtiene el número de milisegundos empleados en enviar una solicitud de eco del Protocolo de mensajes de control de Internet (ICMP) y recibir el mensaje de respuesta de eco ICMP correspondiente.</span><span class="sxs-lookup"><span data-stu-id="42fb4-130">Gets the number of milliseconds taken to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="42fb4-131"><see cref="T:System.Int64" /> que especifica el tiempo de ida y vuelta en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="42fb4-131">An <see cref="T:System.Int64" /> that specifies the round trip time, in milliseconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42fb4-132">Si se produce un error en la solicitud de eco, la <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> tiempo se notifica como 0, que también es un valor válido cuando la solicitud se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="42fb4-132">If the Echo request fails, the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> time is reported as 0, which is also a valid value when the request succeeds.</span></span> <span data-ttu-id="42fb4-133">Debe comprobar el <xref:System.Net.NetworkInformation.PingReply.Status%2A> para determinar si se debe omitir el valor devuelto por esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="42fb4-133">You must check the <xref:System.Net.NetworkInformation.PingReply.Status%2A> to determine whether the value returned by this property should be ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42fb4-134">El siguiente ejemplo de código envía una solicitud de eco ICMP de forma sincrónica y muestra el tamaño del búfer devuelto por esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="42fb4-134">The following code example sends an ICMP echo request synchronously and displays the size of the buffer returned by this property.</span></span>  
  
 [!code-cpp[NclPingSampler#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLPingSampler/CPP/pingtest.cpp#4)]
 [!code-csharp[NclPingSampler#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPingSampler/CS/pingtest.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Status">
      <MemberSignature Language="C#" Value="public System.Net.NetworkInformation.IPStatus Status { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.NetworkInformation.IPStatus Status" />
      <MemberSignature Language="DocId" Value="P:System.Net.NetworkInformation.PingReply.Status" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Status As IPStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkInformation::IPStatus Status { System::Net::NetworkInformation::IPStatus get(); };" />
      <MemberSignature Language="F#" Value="member this.Status : System.Net.NetworkInformation.IPStatus" Usage="System.Net.NetworkInformation.PingReply.Status" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Ping</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.NetworkInformation.IPStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="42fb4-135">Obtiene el estado de un intento de envío de un mensaje de solicitud de eco ICMP (Protocolo de mensajes de control de Internet) y la recepción del mensaje de respuesta de eco ICMP correspondiente.</span><span class="sxs-lookup"><span data-stu-id="42fb4-135">Gets the status of an attempt to send an Internet Control Message Protocol (ICMP) echo request and receive the corresponding ICMP echo reply message.</span></span></summary>
        <value><span data-ttu-id="42fb4-136">Un valor de <see cref="T:System.Net.NetworkInformation.IPStatus" /> que indica el resultado de la solicitud.</span><span class="sxs-lookup"><span data-stu-id="42fb4-136">An <see cref="T:System.Net.NetworkInformation.IPStatus" /> value indicating the result of the request.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="42fb4-137">Si el valor de <xref:System.Net.NetworkInformation.PingReply.Status%2A> no <xref:System.Net.NetworkInformation.IPStatus.Success>, no debe usar los valores devueltos por la <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> o <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="42fb4-137">If the value of <xref:System.Net.NetworkInformation.PingReply.Status%2A> is not <xref:System.Net.NetworkInformation.IPStatus.Success>, you should not use the values returned by the <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A>, <xref:System.Net.NetworkInformation.PingReply.Options%2A> or <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties.</span></span> <span data-ttu-id="42fb4-138">El <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> y <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> propiedades devolverá cero y el <xref:System.Net.NetworkInformation.PingReply.Options%2A> propiedad devolverá `null`.</span><span class="sxs-lookup"><span data-stu-id="42fb4-138">The <xref:System.Net.NetworkInformation.PingReply.RoundtripTime%2A> and <xref:System.Net.NetworkInformation.PingReply.Buffer%2A> properties will return zero, and the <xref:System.Net.NetworkInformation.PingReply.Options%2A> property will return `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="42fb4-139">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Net.NetworkInformation.Ping> clase para enviar una solicitud de eco ICMP de forma sincrónica y mostrar la respuesta.</span><span class="sxs-lookup"><span data-stu-id="42fb4-139">The following code example demonstrates using <xref:System.Net.NetworkInformation.Ping> class to send an ICMP echo request synchronously and display the response.</span></span>  
  
 [!code-cpp[NCLPingSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclPingSync/CPP/syncping.cpp#1)]
 [!code-csharp[NCLPingSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclPingSync/CS/syncping.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
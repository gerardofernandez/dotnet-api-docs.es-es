<Type Name="IChannelListener" FullName="System.ServiceModel.Channels.IChannelListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d661e6ab8c4863a74af37cb544024739e794c9ea" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64108130" /></Metadata><TypeSignature Language="C#" Value="public interface IChannelListener : System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelListener implements class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelListener&#xA;Implements ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IChannelListener : System::ServiceModel::ICommunicationObject" />
  <TypeSignature Language="F#" Value="type IChannelListener = interface&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d945a-101">Define la interfaz que debe ser implementada por un agente de escucha del canal para aceptar los canales.</span><span class="sxs-lookup"><span data-stu-id="d945a-101">Defines the interface that must be implemented by a channel listener to accept channels.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d945a-102">La interfaz <xref:System.ServiceModel.Channels.IChannelListener> representa la interfaz base para los agentes de escucha del canal.</span><span class="sxs-lookup"><span data-stu-id="d945a-102">The <xref:System.ServiceModel.Channels.IChannelListener> interface represents the base interface for channel listeners.</span></span>  
  
 <span data-ttu-id="d945a-103">Los servicios que reciben las comunicaciones iniciadas por clientes utilizan generalmente los agentes de escucha del canal y sus canales asociados.</span><span class="sxs-lookup"><span data-stu-id="d945a-103">Channel listeners and their associated channels are generally used by services that receive communications initiated by clients.</span></span> <span data-ttu-id="d945a-104">Los generadores de canales que implementan la interfaz <xref:System.ServiceModel.Channels.IChannelFactory>, por contraste, proporcionan los mecanismos utilizados para crear los canales a través de los cuales se inicia la comunicación con un servicio.</span><span class="sxs-lookup"><span data-stu-id="d945a-104">Channel factories that implement the <xref:System.ServiceModel.Channels.IChannelFactory> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeginWaitForChannel">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWaitForChannel(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForChannel (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForChannel(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWaitForChannel : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iChannelListener.BeginWaitForChannel (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d945a-105"><see cref="T:System.TimeSpan" /> que especifica cuánto tiempo tiene la espera por una operación del canal para completarse antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="d945a-105">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <param name="callback"><span data-ttu-id="d945a-106">El delegado <see cref="T:System.AsyncCallback" /> que recibe la notificación de la realización asincrónica de la espera por una operación del canal.</span><span class="sxs-lookup"><span data-stu-id="d945a-106">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</span></span></param>
        <param name="state"><span data-ttu-id="d945a-107">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación asincrónica de espera por un canal.</span><span class="sxs-lookup"><span data-stu-id="d945a-107">An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</span></span></param>
        <summary><span data-ttu-id="d945a-108">Comienza una operación asincrónica para esperar a que llegue un canal que se debe completar dentro de un intervalo de tiempo especificado.</span><span class="sxs-lookup"><span data-stu-id="d945a-108">Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.</span></span></summary>
        <returns><span data-ttu-id="d945a-109"><see cref="T:System.IAsyncResult" /> que hace referencia a la espera asincrónica por una operación del canal.</span><span class="sxs-lookup"><span data-stu-id="d945a-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous wait for a channel operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForChannel">
      <MemberSignature Language="C#" Value="public bool EndWaitForChannel (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndWaitForChannel(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndWaitForChannel (result As IAsyncResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndWaitForChannel(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWaitForChannel : IAsyncResult -&gt; bool" Usage="iChannelListener.EndWaitForChannel result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="d945a-110">El <see cref="T:System.IAsyncResult" /> devuelto por una llamada al método <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" />.</span><span class="sxs-lookup"><span data-stu-id="d945a-110">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)" /> method.</span></span></param>
        <summary><span data-ttu-id="d945a-111">Completa una operación asincrónica de espera por la llegada de canales.</span><span class="sxs-lookup"><span data-stu-id="d945a-111">Completes an asynchronous operation to wait for channels to arrive.</span></span></summary>
        <returns><span data-ttu-id="d945a-112"><see langword="true" /> si un mensaje llegara; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d945a-112"><see langword="true" /> if a message arrived; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="iChannelListener.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T"><span data-ttu-id="d945a-113">El objeto con tipo que está consultando el método.</span><span class="sxs-lookup"><span data-stu-id="d945a-113">The typed object for which the method is querying.</span></span></typeparam>
        <summary><span data-ttu-id="d945a-114">Devuelve un objeto escrito solicitado de la capa adecuada en la pila del canal si está presente.</span><span class="sxs-lookup"><span data-stu-id="d945a-114">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span></span></summary>
        <returns><span data-ttu-id="d945a-115">El objeto escrito solicitado <paramref name="T" />, si está presente, o <see langword="null" /> si no lo está.</span><span class="sxs-lookup"><span data-stu-id="d945a-115">The typed object <paramref name="T" /> requested, if it is present or <see langword="null" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d945a-116">Utilice este método para solicitar un objeto escrito como una interfaz para establecer propiedades o recibir el estado de la capa adecuada en la pila del canal.</span><span class="sxs-lookup"><span data-stu-id="d945a-116">Use this method to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="d945a-117">Si una capa permite devolver el objeto solicitado, lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="d945a-117">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="d945a-118">Si no, delega la llamada bajando a la capa siguiente de la pila.</span><span class="sxs-lookup"><span data-stu-id="d945a-118">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="d945a-119">Si se llega a la parte inferior de la pila y ninguna capa del canal permite el objeto solicitado, a continuación, el método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="d945a-119">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IChannelListener.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri" Usage="System.ServiceModel.Channels.IChannelListener.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d945a-120">Obtiene el URI en el que realizan escuchas los agentes de escucha generados por el generador.</span><span class="sxs-lookup"><span data-stu-id="d945a-120">Gets the URI on which the listeners that are generated by the factory listen.</span></span></summary>
        <value><span data-ttu-id="d945a-121">El <see cref="T:System.Uri" /> en el que realizan escuchas los agentes de escucha generados por el generador.</span><span class="sxs-lookup"><span data-stu-id="d945a-121">The <see cref="T:System.Uri" /> on which the listeners that are generated by the factory listen.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d945a-122">Este URI representa la dirección de transporte en la que <xref:System.ServiceModel.Channels.IChannelListener> está escuchando los mensajes.</span><span class="sxs-lookup"><span data-stu-id="d945a-122">This URI represents the transport address on which the <xref:System.ServiceModel.Channels.IChannelListener> is listening for messages.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForChannel">
      <MemberSignature Language="C#" Value="public bool WaitForChannel (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForChannel(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChannel (timeout As TimeSpan) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForChannel(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member WaitForChannel : TimeSpan -&gt; bool" Usage="iChannelListener.WaitForChannel timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d945a-123"><see cref="T:System.TimeSpan" /> que especifica cuánto tiempo tiene la espera por una operación del canal para completarse antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="d945a-123">The <see cref="T:System.TimeSpan" /> that specifies how long the wait for a channel operation has to complete before timing out.</span></span></param>
        <summary><span data-ttu-id="d945a-124">Espera a que llegue un canal.</span><span class="sxs-lookup"><span data-stu-id="d945a-124">Waits for a channel to arrive.</span></span></summary>
        <returns><span data-ttu-id="d945a-125"><see langword="true" /> si un canal llegara antes del intervalo de hora especificado por <paramref name="timeout" />; de lo contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d945a-125"><see langword="true" /> if a channel arrived before the interval of time specified by the <paramref name="timeout" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
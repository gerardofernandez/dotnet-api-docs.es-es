<Type Name="IBindingRuntimePreferences" FullName="System.ServiceModel.Channels.IBindingRuntimePreferences">
  <Metadata><Meta Name="ms.openlocfilehash" Value="32e96da17ebc5c5d535108321675efc9526b07e7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37461077" /></Metadata><TypeSignature Language="C#" Value="public interface IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindingRuntimePreferences" />
  <TypeSignature Language="F#" Value="type IBindingRuntimePreferences = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a4f25-101">Define el contrato opcional que un enlace puede implementar para especificar si el servicio administra de forma asincrónica o asincrónica las solicitudes entrantes.</span><span class="sxs-lookup"><span data-stu-id="a4f25-101">Defines the optional contract that a binding can implement to specify whether incoming requests are handled synchronously or asynchronously by the service.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f25-102">Puede ser más eficaz para un enlace procesar los mensajes con los métodos sincrónicos <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> o <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> en algunos casos.</span><span class="sxs-lookup"><span data-stu-id="a4f25-102">In some cases it may be more efficient for a binding to process messages with the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods.</span></span> <span data-ttu-id="a4f25-103">Una clase <xref:System.ServiceModel.Channels.Binding> puede implementar opcionalmente <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> para indicar a los llamadores que se prefiere esto.</span><span class="sxs-lookup"><span data-stu-id="a4f25-103">A <xref:System.ServiceModel.Channels.Binding> class can optionally implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> to indicate to callers that this is preferred.</span></span>  
  
 <span data-ttu-id="a4f25-104">Si un enlace no implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, la capa de Windows Communication Foundation (WCF) Service Model Runtime utiliza de forma predeterminada las versiones asincrónicas de la `Receive` y `Request` métodos.</span><span class="sxs-lookup"><span data-stu-id="a4f25-104">If a binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the Windows Communication Foundation (WCF) Service Model Runtime layer defaults to using the asynchronous versions of the `Receive` and `Request` methods.</span></span> <span data-ttu-id="a4f25-105">Si un enlace implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, la capa de WCF Service Model Runtime comprueba el valor de <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> y lo usa para determinar si se debe llamar a las versiones sincrónicas de estos métodos (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> o <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) o asincrónico versiones (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> y <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> o <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> y <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span><span class="sxs-lookup"><span data-stu-id="a4f25-105">If a binding does implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, the WCF Service Model Runtime layer checks the value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> and uses that to determine whether to call the synchronous versions of the these methods (<xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> or <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>) or the asynchronous versions (<xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span></span> <span data-ttu-id="a4f25-106">Si <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> es implementado por el enlace y devuelve `true` desde la propiedad <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, se recomienda que utilice los métodos sincrónicos <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> y <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> para recibir los mensajes del canal.</span><span class="sxs-lookup"><span data-stu-id="a4f25-106">If <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> is implemented by the binding and returns `true` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the synchronous <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> methods to receive messages from the channel.</span></span> <span data-ttu-id="a4f25-107">Si el enlace no implementa <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> ni devuelve `false` desde la propiedad <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, se recomienda que utilice los métodos asincrónicos <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> y <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> o <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> y <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29>.</span><span class="sxs-lookup"><span data-stu-id="a4f25-107">If the binding does not implement <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> or returns `false` from the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, it is recommended that you use the asynchronous <xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A> and <xref:System.ServiceModel.Channels.IInputChannel.EndReceive%28System.IAsyncResult%29> or <xref:System.ServiceModel.Channels.IRequestChannel.BeginRequest%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.EndRequest%28System.IAsyncResult%29> methods.</span></span>  
  
 <span data-ttu-id="a4f25-108">Sin tener en cuenta el valor devuelto por la propiedad <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A>, todos los enlaces deben proporcionar implementaciones válidas de la versión sincrónica y de la asincrónica de los métodos `Receive` para los tipos de canal concretos implementados.</span><span class="sxs-lookup"><span data-stu-id="a4f25-108">Regardless of the value returned by the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property, all bindings must still provide valid implementations of both the synchronous and asynchronous versions of the `Receive` methods for the specific channel types implemented.</span></span> <span data-ttu-id="a4f25-109">Para obtener más información acerca de cómo implementar canales personalizados, consulte [desarrollar canales](~/docs/framework/wcf/extending/developing-channels.md).</span><span class="sxs-lookup"><span data-stu-id="a4f25-109">For more information about implementing custom channels, see [Developing Channels](~/docs/framework/wcf/extending/developing-channels.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a4f25-110">El ejemplo siguiente muestra la implementación de un enlace que implementa la interfaz <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>.</span><span class="sxs-lookup"><span data-stu-id="a4f25-110">The following example shows the implementation of a binding that implements the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> interface.</span></span> <span data-ttu-id="a4f25-111">Este código se toma de la [Chunking canal](~/docs/framework/wcf/samples/chunking-channel.md) ejemplo:</span><span class="sxs-lookup"><span data-stu-id="a4f25-111">This code is taken from the [Chunking Channel](~/docs/framework/wcf/samples/chunking-channel.md) sample:</span></span>  
  
 [!code-csharp[S_UE_ChunkingChannel#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveSynchronously : bool" Usage="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a4f25-112">Obtiene un valor que indica si se pueden administrar más eficazmente las solicitudes entrantes de forma sincrónica o asincrónica.</span><span class="sxs-lookup"><span data-stu-id="a4f25-112">Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</span></span></summary>
        <value><span data-ttu-id="a4f25-113"><see langword="true" /> Si las solicitudes se pueden administrar más eficazmente de forma sincrónica; en caso contrario <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a4f25-113"><see langword="true" /> if requests can be handled more efficiently synchronously; otherwise <see langword="false" />.</span></span> <span data-ttu-id="a4f25-114">El valor predeterminado es <see langword="false" />, administrar de forma asincrónica las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="a4f25-114">The default is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a4f25-115">El estándares (sistema) enlaces proporcionados por Windows Communication Foundation (WCF) han implementado esta interfaz y en algunos casos reemplazan el valor predeterminado para procesar los mensajes entrantes de forma sincrónica.</span><span class="sxs-lookup"><span data-stu-id="a4f25-115">The standard (system-provided) bindings provided by Windows Communication Foundation (WCF) have implemented this interface and in some cases override the default value to process incoming messages synchronously.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChunkingChannel#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_chunkingchannel/cs/tcpchunkingbinding.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
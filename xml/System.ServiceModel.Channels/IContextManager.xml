<Type Name="IContextManager" FullName="System.ServiceModel.Channels.IContextManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="201b988b459f1722c1209014d5473e630e59c8f6" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57914845" /></Metadata><TypeSignature Language="C#" Value="public interface IContextManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContextManager" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IContextManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContextManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContextManager" />
  <TypeSignature Language="F#" Value="type IContextManager = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c70a3-101">Define una interfaz que le permite obtener y establecer el contexto en el canal.</span><span class="sxs-lookup"><span data-stu-id="c70a3-101">Defines an interface that allows you to get and set the context on the channel.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70a3-102">Para canales que utilizan <xref:System.ServiceModel.WSHttpContextBinding> con el valor <xref:System.ServiceModel.SessionMode.NotAllowed> establecido, no es posible recuperar el contexto en el cliente mediante <xref:System.ServiceModel.Channels.IContextManager>, porque se crea un nuevo canal que establece una sesión cada vez que se llama a <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> para exigir la semántica <xref:System.ServiceModel.SessionMode.NotAllowed> en un canal.</span><span class="sxs-lookup"><span data-stu-id="c70a3-102">For channels that use <xref:System.ServiceModel.WSHttpContextBinding> with the <xref:System.ServiceModel.SessionMode.NotAllowed> value set, the context cannot be retrieved on the client using <xref:System.ServiceModel.Channels.IContextManager> because a new channel that establishes a session is created each time <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is called to enforce <xref:System.ServiceModel.SessionMode.NotAllowed> semantics on a channel.</span></span> <span data-ttu-id="c70a3-103">Esto significa que aunque el contexto vuelve a propagarse correctamente, en este caso, hacia el cliente, no puede recuperarse utilizando <xref:System.ServiceModel.Channels.IContextManager>.</span><span class="sxs-lookup"><span data-stu-id="c70a3-103">This means that even though the context is properly propagated back to the client in this case, it cannot be retrieved using <xref:System.ServiceModel.Channels.IContextManager>.</span></span> <span data-ttu-id="c70a3-104">Todavía puede recuperarlo mediante <xref:System.ServiceModel.Channels.ContextMessageProperty>, como se muestra en el siguiente código.</span><span class="sxs-lookup"><span data-stu-id="c70a3-104">You can still retrieve it using <xref:System.ServiceModel.Channels.ContextMessageProperty> as shown in the following code.</span></span>  
  
```csharp  
using (new OperationContextScope((IContextChannel)channel))  
{  
    channel.MyChannel("Test");  
    ContextMessageProperty context;  
    if (ContextMessageProperty.TryGet(OperationContext.Current.IncomingMessageProperties, out context))  
    {  
        Console.WriteLine(context.Count);  
    }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IContextManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.ServiceModel.Channels.IContextManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c70a3-105">Obtiene o establece un valor que indica si se ha habilitado la administración del contexto.</span><span class="sxs-lookup"><span data-stu-id="c70a3-105">Gets or sets a value that indicates whether the context management is enabled.</span></span></summary>
        <value><span data-ttu-id="c70a3-106"><see langword="true" /> si el contexto está habilitado; en caso contrario, devuelve el valor <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c70a3-106"><see langword="true" /> if the context is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c70a3-107">Cuando la administración de contexto está habilitada, el canal del contexto almacena en memoria caché el contexto a lo largo de su duración.</span><span class="sxs-lookup"><span data-stu-id="c70a3-107">When context management is enabled the context channel caches the context in its lifetime.</span></span> <span data-ttu-id="c70a3-108">El contexto se puede recuperar desde el canal mediante la propiedad de canal `IContextManager` llamando al método <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="c70a3-108">Context can be retrieved from the channel through the `IContextManager` channel property by calling <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> method on it.</span></span> <span data-ttu-id="c70a3-109">El canal también se puede preinicializar con contexto antes de abrirse llamando al método <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> en la propiedad de canal.</span><span class="sxs-lookup"><span data-stu-id="c70a3-109">The channel can also be pre-initialized with context before being opened by calling the <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> method on the channel property.</span></span> <span data-ttu-id="c70a3-110">Una vez inicializado el canal con contexto no se puede restablecer.</span><span class="sxs-lookup"><span data-stu-id="c70a3-110">Once the channel is initialized with context it cannot be reset.</span></span>  
  
 <span data-ttu-id="c70a3-111">A continuación, se muestra una lista de invariables en este modo:</span><span class="sxs-lookup"><span data-stu-id="c70a3-111">The following are invariants in this mode:</span></span>  
  
-   <span data-ttu-id="c70a3-112">Cualquier llamada a <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> después de que el canal se ha abierto inicia una `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="c70a3-112">Any call to <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> after the channel is open throws an `InvalidOperationException`.</span></span>  
  
-   <span data-ttu-id="c70a3-113">Cualquier intento de enviar el contexto a través de la `ContextMessageProperty` en un mensaje saliente inicia una `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="c70a3-113">Any attempt to send context through the `ContextMessageProperty` in an outgoing message throws `InvalidOperationException`.</span></span>  
  
-   <span data-ttu-id="c70a3-114">Si un mensaje se recibe del servidor con contexto, cuando el canal ya se ha inicializado con un contexto, se produce una `ProtocolException`.</span><span class="sxs-lookup"><span data-stu-id="c70a3-114">If a message is received from the server with context, when the channel is already initialized with a context a `ProtocolException` is thrown.</span></span> <span data-ttu-id="c70a3-115">Observe que puede recibir el contexto inicial de un servidor si el canal se abre sin establecer el contexto explícitamente.</span><span class="sxs-lookup"><span data-stu-id="c70a3-115">Note that you can receive initial context from a server if the channel is opened without explicitly setting the context.</span></span>  
  
-   <span data-ttu-id="c70a3-116">`ContextMessageProperty` en un mensaje entrante siempre es `null`.</span><span class="sxs-lookup"><span data-stu-id="c70a3-116">The `ContextMessageProperty` on an incoming message is always `null`.</span></span>  
  
 <span data-ttu-id="c70a3-117">Cuando la administración del contexto no está habilitada, el canal del contexto no administra el contexto.</span><span class="sxs-lookup"><span data-stu-id="c70a3-117">When context management is not enabled, the context channel does not manage context.</span></span> <span data-ttu-id="c70a3-118">Es responsabilidad de la aplicación el recuperar, administrar y aplicar el contexto mediante la `ContextMessageProperty`.</span><span class="sxs-lookup"><span data-stu-id="c70a3-118">It is the application's responsibility to retrieve, manage and apply context through the `ContextMessageProperty`.</span></span> <span data-ttu-id="c70a3-119">Cualquier intento para llamar a <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> o <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> a través de los resultados de la propiedad de canal `IContextManager` tiene como resultado `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="c70a3-119">Any attempt to call <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> or <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> using through the `IContextManager` channel property results in `InvalidOperationException`.</span></span>  
  
 <span data-ttu-id="c70a3-120">Todas las cookies HTTP, salvo las cookies HTTP de contexto, se controlan en el nivel de canal.</span><span class="sxs-lookup"><span data-stu-id="c70a3-120">All HTTP cookies, except for context HTTP cookies, are handled at the channel level.</span></span> <span data-ttu-id="c70a3-121">Las cookies HTTP del contexto se administran en el nivel de aplicación.</span><span class="sxs-lookup"><span data-stu-id="c70a3-121">Context HTTP cookies are managed at the application level.</span></span> <span data-ttu-id="c70a3-122">Esto puede tener consecuencias inesperadas cuando se comparten los canales para hablar con distintas instancias de destino de <xref:System.ServiceModel.Channels.ContextMessageProperty>.</span><span class="sxs-lookup"><span data-stu-id="c70a3-122">This can have unexpected consequences when channels are shared to talk to different instances targeted by <xref:System.ServiceModel.Channels.ContextMessageProperty>.</span></span> <span data-ttu-id="c70a3-123">La siguiente tabla muestra cómo se ven afectadas las cookies HTTP cuando <xref:System.ServiceModel.Channels.IContextManager.Enabled%2A> está establecido en `true` o `false`.</span><span class="sxs-lookup"><span data-stu-id="c70a3-123">The following table shows how HTTP cookies are affected when <xref:System.ServiceModel.Channels.IContextManager.Enabled%2A> is set to either `true` or `false`.</span></span>  
  
|<span data-ttu-id="c70a3-124">Enlaces</span><span class="sxs-lookup"><span data-stu-id="c70a3-124">Binding</span></span>|<span data-ttu-id="c70a3-125">Valor IContextManager.Enabled</span><span class="sxs-lookup"><span data-stu-id="c70a3-125">IContextManager.Enabled Value</span></span>|<span data-ttu-id="c70a3-126">Ámbito de cookie HTTP de contexto</span><span class="sxs-lookup"><span data-stu-id="c70a3-126">Context HTTP Cookie Scope</span></span>|<span data-ttu-id="c70a3-127">Otro ámbito de cookies HTTP</span><span class="sxs-lookup"><span data-stu-id="c70a3-127">Other HTTP Cookies Scope</span></span>|  
|-------------|-----------------------------------|-------------------------------|------------------------------|  
|<span data-ttu-id="c70a3-128">BasicHttpBinding</span><span class="sxs-lookup"><span data-stu-id="c70a3-128">BasicHttpBinding</span></span>|<span data-ttu-id="c70a3-129">N/D</span><span class="sxs-lookup"><span data-stu-id="c70a3-129">n/a</span></span>|<span data-ttu-id="c70a3-130">ChannelFactory</span><span class="sxs-lookup"><span data-stu-id="c70a3-130">ChannelFactory</span></span>|<span data-ttu-id="c70a3-131">ChannelFactory</span><span class="sxs-lookup"><span data-stu-id="c70a3-131">ChannelFactory</span></span>|  
|<span data-ttu-id="c70a3-132">BasicHttpContextBinding</span><span class="sxs-lookup"><span data-stu-id="c70a3-132">BasicHttpContextBinding</span></span>|<span data-ttu-id="c70a3-133">true</span><span class="sxs-lookup"><span data-stu-id="c70a3-133">true</span></span>|<span data-ttu-id="c70a3-134">Canal</span><span class="sxs-lookup"><span data-stu-id="c70a3-134">Channel</span></span>|<span data-ttu-id="c70a3-135">Canal</span><span class="sxs-lookup"><span data-stu-id="c70a3-135">Channel</span></span>|  
|<span data-ttu-id="c70a3-136">BasicHttpContextBinding</span><span class="sxs-lookup"><span data-stu-id="c70a3-136">BasicHttpContextBinding</span></span>|<span data-ttu-id="c70a3-137">False</span><span class="sxs-lookup"><span data-stu-id="c70a3-137">false</span></span>|<span data-ttu-id="c70a3-138">Para cada mensaje (explícitamente administrado por la aplicación)</span><span class="sxs-lookup"><span data-stu-id="c70a3-138">For each message (explicitly managed by application)</span></span>|<span data-ttu-id="c70a3-139">Canal</span><span class="sxs-lookup"><span data-stu-id="c70a3-139">Channel</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IContextManager.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext();" />
      <MemberSignature Language="F#" Value="abstract member GetContext : unit -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="iContextManager.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c70a3-140">Obtiene el contexto.</span><span class="sxs-lookup"><span data-stu-id="c70a3-140">Gets the context.</span></span></summary>
        <returns><span data-ttu-id="c70a3-141"><see cref="T:System.Collections.Generic.IDictionary`2" /> de pares clave-valor con el espacio de nombres y el nombre del contexto.</span><span class="sxs-lookup"><span data-stu-id="c70a3-141">The <see cref="T:System.Collections.Generic.IDictionary`2" /> of key/value pairs with the namespace and name of the context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c70a3-142">El siguiente código muestra cómo obtener el contexto de una instancia de proxy con tipo en el cliente.</span><span class="sxs-lookup"><span data-stu-id="c70a3-142">The following code shows how the context can be obtained from a typed proxy instance on the client.</span></span>  
  
```  
IDictionary<string, string> context;  
CalculatorProxy proxy;  
IContextManager cm = proxy.InnerChannel.GetProperty<IContextManager>();  
if (cm != null)  
    context = cm.GetContext();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public void SetContext (System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IContextManager.SetContext(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetContext (context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetContext(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="abstract member SetContext : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="iContextManager.SetContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="c70a3-143">La interfaz <see cref="T:System.Collections.Generic.IDictionary`2" /> de pares clave-valor con el espacio de nombres y el nombre del contexto que se establece.</span><span class="sxs-lookup"><span data-stu-id="c70a3-143">The <see cref="T:System.Collections.Generic.IDictionary`2" /> of key/value pairs with the namespace and name of the context that is set.</span></span></param>
        <summary><span data-ttu-id="c70a3-144">Establece el contexto.</span><span class="sxs-lookup"><span data-stu-id="c70a3-144">Sets the context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c70a3-145">El siguiente código muestra cómo puede establecerse el contexto en el cliente.</span><span class="sxs-lookup"><span data-stu-id="c70a3-145">The following code shows how the context can be set on the client.</span></span>  
  
```  
IDictionary<string, string> context;  
CalculatorProxy proxy;  
IContextManager cm = proxy.InnerChannel.GetProperty<IContextManager>();  
if (cm != null)  
    cm.SetContext(context);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
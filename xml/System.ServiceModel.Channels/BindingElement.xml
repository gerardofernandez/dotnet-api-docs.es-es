<Type Name="BindingElement" FullName="System.ServiceModel.Channels.BindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fa4a17ee1470f2e245fc44d5708aa0616bac7330" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57961632" /></Metadata><TypeSignature Language="C#" Value="public abstract class BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingElement abstract" />
  <TypeSignature Language="F#" Value="type BindingElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0659a-101">Los elementos de los enlaces que compilan los generadores de canales y las escuchas del canal para varios tipos de canales que se utilizan para procesar mensajes salientes y entrantes.</span><span class="sxs-lookup"><span data-stu-id="0659a-101">The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0659a-102">Un enlace está compuesto de un conjunto ordenado de elementos de enlace que heredan de esta clase base abstracta.</span><span class="sxs-lookup"><span data-stu-id="0659a-102">A binding consists of an ordered set of binding elements that inherit from this abstract base class.</span></span>  <span data-ttu-id="0659a-103">La clase <xref:System.ServiceModel.Channels.TransportBindingElement> hereda de la clase <xref:System.ServiceModel.Channels.BindingElement>.</span><span class="sxs-lookup"><span data-stu-id="0659a-103">The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.</span></span>  
  
 <span data-ttu-id="0659a-104">Crear un enlace y elemento de enlace para su transporte es opcional si simplemente está utilizando el modelo del canal.</span><span class="sxs-lookup"><span data-stu-id="0659a-104">Creating a binding and binding element for your transport is optional if you are just using the channel model.</span></span> <span data-ttu-id="0659a-105">Es posible hacer todo lo que necesita a través del generador de canales y la escucha siempre que sean públicos.</span><span class="sxs-lookup"><span data-stu-id="0659a-105">It is possible to do everything you need through the channel factory and listener as long as they are made public.</span></span>  
  
 <span data-ttu-id="0659a-106">El modelo de servicio de Windows Communication Foundation (WCF) utiliza un modelo de generador donde el enlace se usa para crear la pila de canales.</span><span class="sxs-lookup"><span data-stu-id="0659a-106">The Windows Communication Foundation (WCF) service model uses a factory pattern where the binding is used to create the channel stack.</span></span> <span data-ttu-id="0659a-107">Si desea utilizar el modelo de servicio WCF, es necesario, a continuación, utilizar un elemento de enlace de transporte.</span><span class="sxs-lookup"><span data-stu-id="0659a-107">If you want to use the WCF service model, then using a transport binding element is required.</span></span> <span data-ttu-id="0659a-108">Colocar este elemento de enlace en un enlace es una buena práctica porque elimina el requisito de que los usuarios creen su propio enlace personalizado para su transporte.</span><span class="sxs-lookup"><span data-stu-id="0659a-108">Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</span></span> <span data-ttu-id="0659a-109">Es mejor crear un enlace y elemento de enlace y ocultar el generador de canales y la escucha dentro del ensamblado.</span><span class="sxs-lookup"><span data-stu-id="0659a-109">It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</span></span>  
  
 <span data-ttu-id="0659a-110">En el lado de envío, se utiliza un enlace para compilar un <xref:System.ServiceModel.Channels.IChannelFactory>, que a su vez compila una pila de canal y devuelve una referencia al canal superior en la pila.</span><span class="sxs-lookup"><span data-stu-id="0659a-110">On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</span></span> <span data-ttu-id="0659a-111">La aplicación puede utilizar a continuación este canal para enviar los mensajes.</span><span class="sxs-lookup"><span data-stu-id="0659a-111">The application can then use this channel to send messages.</span></span>  
  
 <span data-ttu-id="0659a-112">De manera similar, en el lado de la recepción, se usa un enlace para compilar un <xref:System.ServiceModel.Channels.IChannelListener>, que escucha los mensajes entrantes.</span><span class="sxs-lookup"><span data-stu-id="0659a-112">Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages.</span></span> <span data-ttu-id="0659a-113"><xref:System.ServiceModel.Channels.IChannelListener> proporciona mensajes a la aplicación de escucha creando pilas de canal y entregando a la aplicación una referencia al canal superior.</span><span class="sxs-lookup"><span data-stu-id="0659a-113">The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</span></span> <span data-ttu-id="0659a-114">La aplicación utiliza a continuación este canal para recibir mensajes entrantes.</span><span class="sxs-lookup"><span data-stu-id="0659a-114">The application then uses this channel to receive incoming messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0659a-115">Si está agregando los encabezados del mensaje que se deben cifrar debe devolver una instancia <xref:System.ServiceModel.Security.ChannelProtectionRequirements> con sus requisitos del método <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> cuando se pregunte por <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span><span class="sxs-lookup"><span data-stu-id="0659a-115">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0659a-116">El ejemplo siguiente muestra cómo agregar un elemento de enlace del transporte a un enlace personalizado y, a continuación, compilar una escucha del canal que pueda aceptar mensajes entrantes.</span><span class="sxs-lookup"><span data-stu-id="0659a-116">The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</span></span>  
  
 [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]
 [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0659a-117">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0659a-118">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.BindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement(System::ServiceModel::Channels::BindingElement ^ elementToBeCloned);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.BindingElement : System.ServiceModel.Channels.BindingElement -&gt; System.ServiceModel.Channels.BindingElement" Usage="new System.ServiceModel.Channels.BindingElement elementToBeCloned" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned"><span data-ttu-id="0659a-119"><see cref="T:System.ServiceModel.Channels.BindingElement" /> que se va a clonar.</span><span class="sxs-lookup"><span data-stu-id="0659a-119">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</span></span></param>
        <summary><span data-ttu-id="0659a-120">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Channels.BindingElement" /> a partir de un elemento de enlace especificado.</span><span class="sxs-lookup"><span data-stu-id="0659a-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;&#xA;override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="bindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="0659a-121">El tipo de canal que compila el generador.</span><span class="sxs-lookup"><span data-stu-id="0659a-121">The type of channel the factory builds.</span></span></typeparam>
        <param name="context"><span data-ttu-id="0659a-122"><see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto para el elemento de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-122">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="0659a-123">Inicializa un generador de canales para generar canales de un tipo especificado a partir del contexto de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-123">Initializes a channel factory for producing channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="0659a-124"><see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> inicializado a partir de <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-124">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0659a-125"><paramref name="context" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-125"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="0659a-126">El tipo de canal que acepta la escucha.</span><span class="sxs-lookup"><span data-stu-id="0659a-126">The type of channel the listener is built to accept.</span></span></typeparam>
        <param name="context"><span data-ttu-id="0659a-127"><see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto para el elemento de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-127">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="0659a-128">Inicializa una escucha de canales para aceptar canales de un tipo especificado a partir del contexto de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-128">Initializes a channel listener to accept channels of a specified type from the binding context.</span></span></summary>
        <returns><span data-ttu-id="0659a-129"><see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> de tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> inicializado a partir de <paramref name="context" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-129">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0659a-130"><paramref name="context" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-130"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool&#xA;override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="bindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="0659a-131">El tipo de canal que produce el generador de canales.</span><span class="sxs-lookup"><span data-stu-id="0659a-131">The type of channel the channel factory produces.</span></span></typeparam>
        <param name="context"><span data-ttu-id="0659a-132"><see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto para el elemento de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-132">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="0659a-133">Devuelve un valor que indica si el elemento de enlace puede crear un generador de canales para un tipo específico de canal.</span><span class="sxs-lookup"><span data-stu-id="0659a-133">Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</span></span></summary>
        <returns><span data-ttu-id="0659a-134"><see langword="true" /> si <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de tipo <paramref name="TChannel" /> puede ser creado por el elemento de enlace; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-134"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0659a-135">Utilice este método si desea comprobar que el generador de canales para los canales de tipo `TChannel` se puede crear para el `context` proporcionado antes de intentar crear el generador.</span><span class="sxs-lookup"><span data-stu-id="0659a-135">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory.</span></span> <span data-ttu-id="0659a-136">Como alternativa, compile el generador del canal llamando a <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> y detecte la excepción generada si no es posible compilarlo.</span><span class="sxs-lookup"><span data-stu-id="0659a-136">Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0659a-137"><paramref name="context" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-137"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="0659a-138">El tipo de canal que acepta la escucha.</span><span class="sxs-lookup"><span data-stu-id="0659a-138">The type of channel the listener accepts.</span></span></typeparam>
        <param name="context"><span data-ttu-id="0659a-139"><see cref="T:System.ServiceModel.Channels.BindingContext" /> que proporciona el contexto para el elemento de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-139">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span></span></param>
        <summary><span data-ttu-id="0659a-140">Devuelve un valor que indica si el elemento de enlace puede compilar una escucha para un tipo específico de canal.</span><span class="sxs-lookup"><span data-stu-id="0659a-140">Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</span></span></summary>
        <returns><span data-ttu-id="0659a-141"><see langword="true" /> si <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> de tipo <see cref="T:System.ServiceModel.Channels.IChannel" /> puede ser creado por el elemento de enlace; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-141"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0659a-142">Utilice este método si desea comprobar que la escucha del canal para los canales de tipo `TChannel` se puede crear para el `context` proporcionado antes de intentar crear la escucha.</span><span class="sxs-lookup"><span data-stu-id="0659a-142">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener.</span></span> <span data-ttu-id="0659a-143">Como alternativa, compile la escucha del canal llamando a <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> y detecte la excepción generada si no es posible generarla.</span><span class="sxs-lookup"><span data-stu-id="0659a-143">Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0659a-144"><paramref name="context" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0659a-144"><paramref name="context" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="bindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0659a-145">Devuelve una copia del objeto de elemento de enlace cuando se invalida en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="0659a-145">When overridden in a derived class, returns a copy of the binding element object.</span></span></summary>
        <returns><span data-ttu-id="0659a-146">Un objeto <see cref="T:System.ServiceModel.Channels.BindingElement" /> que es un clon profundo del original.</span><span class="sxs-lookup"><span data-stu-id="0659a-146">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0659a-147">Implemente el método <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> para devolver un clon profundo de su elemento de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-147">Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element.</span></span> <span data-ttu-id="0659a-148">Devolver un clon permite habilitar el tiempo de ejecución para admitir el caso en el que varios enlaces personalizados comparten un elemento de enlace personalizado.</span><span class="sxs-lookup"><span data-stu-id="0659a-148">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="0659a-149">Si no se devuelve un clon, el comportamiento en tiempo de ejecución es indefinido.</span><span class="sxs-lookup"><span data-stu-id="0659a-149">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="0659a-150">Un clon profundo de un objeto crea una copia del objeto y una copia de todo aquello a lo que el objeto hace referencia directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="0659a-150">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="0659a-151">(Esto se llama también copiar el gráfico de objetos completo.) Por el contrario, un clon superficial de un objeto es sólo una copia del objeto.</span><span class="sxs-lookup"><span data-stu-id="0659a-151">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="0659a-152">Si el objeto contiene referencias a otros objetos, la copia superficial no crea copias de los objetos a los que se hace referencia, sino que solo copia las referencias a los objetos originales.</span><span class="sxs-lookup"><span data-stu-id="0659a-152">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class abstract T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="bindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="0659a-153">El objeto con tipo que está consultando el método.</span><span class="sxs-lookup"><span data-stu-id="0659a-153">The typed object for which the method is querying.</span></span></typeparam>
        <param name="context"><span data-ttu-id="0659a-154"><see cref="T:System.ServiceModel.Channels.BindingContext" /> del elemento de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-154">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span></span></param>
        <summary><span data-ttu-id="0659a-155">Cuando se invalida en una clase derivada, devuelve un objeto escrito solicitado, de estar presente, del nivel apropiado en la pila de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-155">When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</span></span></summary>
        <returns><span data-ttu-id="0659a-156">El objeto <paramref name="T" /> con tipo solicitado, si está presente, o <see langword="null" />, si no lo está.</span><span class="sxs-lookup"><span data-stu-id="0659a-156">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not present.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0659a-157">Utilice esto para recuperar funciones, requisitos y parámetros de la pila del elemento de enlace.</span><span class="sxs-lookup"><span data-stu-id="0659a-157">Use this to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="0659a-158">Si un elemento de enlace admite la devolución del objeto solicitado, lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="0659a-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="0659a-159">Si no, delega la llamada al siguiente elemento de enlace de la pila.</span><span class="sxs-lookup"><span data-stu-id="0659a-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="0659a-160">Si se llega a la parte inferior de la pila y ningún elemento de enlace admite el objeto solicitado, el método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="0659a-160">If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0659a-161">Si está agregando los encabezados del mensaje que se deben cifrar debe devolver una instancia <xref:System.ServiceModel.Security.ChannelProtectionRequirements> con sus requisitos de este método cuando se pregunte por <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span><span class="sxs-lookup"><span data-stu-id="0659a-161">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1f5db4b7b6124ba86674e426338a65af451dac7" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64038875" /></Metadata><TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="6bee1-101">Especifica si un servicio sólo permite enviar las respuestas a direcciones anónimas, a direcciones no anónimas o a ambas.</span><span class="sxs-lookup"><span data-stu-id="6bee1-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bee1-102">Esta enumeración se utiliza para especificar la capacidad de un servidor que, a su vez, impone un requisito a sus clientes.</span><span class="sxs-lookup"><span data-stu-id="6bee1-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 <span data-ttu-id="6bee1-103">Windows Communication Foundation (WCF) tiene una variedad de controles de direccionamiento para especificar dónde se deberían enviar los mensajes.</span><span class="sxs-lookup"><span data-stu-id="6bee1-103">Windows Communication Foundation (WCF) has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="6bee1-104">Por ejemplo, existe la dirección lógica <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> para el destino del mensaje, la dirección física ("A través de"), que se usa en el transporte, en el que un servicio realiza escuchas, y la dirección <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> del extremo que proporciona la dirección del extremo del cliente.</span><span class="sxs-lookup"><span data-stu-id="6bee1-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="6bee1-105">En el caso más básico, cuando dos partes sólo intercambian mensajes entre ellas, no es necesario especificar estas direcciones por separado.</span><span class="sxs-lookup"><span data-stu-id="6bee1-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="6bee1-106">Pero como los intercambios pueden implicar a otros destinos del mensaje, debe poder especificar cuándo se deben proporcionar las direcciones explícitamente.</span><span class="sxs-lookup"><span data-stu-id="6bee1-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="6bee1-107">En ocasiones, esta capacidad se requiere incluso entre sólo dos partes, como con HTTP dual donde el servidor debe crear su propia solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="6bee1-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="6bee1-108">La enumeración <xref:System.ServiceModel.Channels.SupportedAddressingMode> define los tipos siguientes de relaciones para capturar estos modelos de mensajería:</span><span class="sxs-lookup"><span data-stu-id="6bee1-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="6bee1-109">Direcciones anónimas son la forma más básica de direccionamiento.</span><span class="sxs-lookup"><span data-stu-id="6bee1-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="6bee1-110">El direccionamiento anónimo se utiliza cuando hay una ruta de acceso predeterminada para una respuesta.</span><span class="sxs-lookup"><span data-stu-id="6bee1-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="6bee1-111">TCP es un transporte de comunicación bidireccional y la respuesta a un mensaje TCP se puede devolver al otro lado del socket que envió el mensaje original.</span><span class="sxs-lookup"><span data-stu-id="6bee1-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="6bee1-112">De igual forma, el modelo de respuesta y solicitud de HTTP envía las respuestas a través del canal de respuesta de HTTP.</span><span class="sxs-lookup"><span data-stu-id="6bee1-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="6bee1-113">Ninguna de estas respuestas requiere especificar a dónde van los mensajes de respuesta.</span><span class="sxs-lookup"><span data-stu-id="6bee1-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="6bee1-114">Cuando un servidor requiere respuestas anónimas del cliente, usa el valor de la enumeración anónimo.</span><span class="sxs-lookup"><span data-stu-id="6bee1-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="6bee1-115">WCF proporcionados por el sistema <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> y <xref:System.ServiceModel.WSHttpBinding> enlaces usan siempre direcciones anónimas.</span><span class="sxs-lookup"><span data-stu-id="6bee1-115">The WCF system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="6bee1-116">Las direcciones no anónimas se usan al enviar la respuesta requiere la creación de un nuevo canal de comunicación.</span><span class="sxs-lookup"><span data-stu-id="6bee1-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="6bee1-117">WCF proporcionados por el sistema <xref:System.ServiceModel.WSDualHttpBinding> enlace utiliza una dirección no anónimas.</span><span class="sxs-lookup"><span data-stu-id="6bee1-117">The WCF system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="6bee1-118">Con HTTP dual, el cliente crea una solicitud HTTP para enviar un mensaje y, a continuación, el servidor debe crear su propia solicitud HTTP para enviar una respuesta.</span><span class="sxs-lookup"><span data-stu-id="6bee1-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="6bee1-119">Dado que el servidor está iniciando el envío, debe tener un extremo específico para establecer la conexión.</span><span class="sxs-lookup"><span data-stu-id="6bee1-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="6bee1-120">Debe proporcionar al servidor la dirección de un punto de conexión para su respuesta.</span><span class="sxs-lookup"><span data-stu-id="6bee1-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="6bee1-121">De forma similar, si un servicio debe responder a un mensaje unidireccional que recibió, también se requiere un dirección porque no hay ningún canal secundario disponible para la comunicación.</span><span class="sxs-lookup"><span data-stu-id="6bee1-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="6bee1-122">Si el servidor devuelve un mensaje, se requiere una operación completamente diferente a la utilizada para enviar el primer mensaje.</span><span class="sxs-lookup"><span data-stu-id="6bee1-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="6bee1-123">Mixto es un tercer formato de direccionamiento que combina direcciones, anónima y según el mensaje que se va a enviar.</span><span class="sxs-lookup"><span data-stu-id="6bee1-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="6bee1-124">Un ejemplo típico de direccionamiento de modo mixto es el uso de un equipo dedicado para procesar mensajes de error o confirmación.</span><span class="sxs-lookup"><span data-stu-id="6bee1-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="6bee1-125">Si la secuencia de intercambio estándar para las respuestas es HTTP o TCP, las respuestas utilizan el direccionamiento anónimo, pero los errores utilizan el direccionamiento no anónimo.</span><span class="sxs-lookup"><span data-stu-id="6bee1-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="6bee1-126">Mientras que WCF no proporcionan mixto direccionamiento funcionalidad en uno de sus enlaces estándares, es posible escribir un canal que permite que el servicio envíe respuestas directamente en el canal secundario (cuando la dirección de respuesta es anónimo) o en un canal independiente (cuando la dirección de respuesta es).</span><span class="sxs-lookup"><span data-stu-id="6bee1-126">While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="6bee1-127">En tal caso, el elemento de enlace del canal se usa para establecer <xref:System.ServiceModel.Channels.SupportedAddressingMode> en Mixed.</span><span class="sxs-lookup"><span data-stu-id="6bee1-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6bee1-128">El servidor sólo admite las direcciones anónimas y los clientes deben proporcionar una dirección de respuesta anónima.</span><span class="sxs-lookup"><span data-stu-id="6bee1-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6bee1-129">El servidor admite tanto direcciones anónimas como no anónimas, y los clientes pueden decidir utilizar una de las dos opciones o ambas.</span><span class="sxs-lookup"><span data-stu-id="6bee1-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6bee1-130">El servidor sólo admite las direcciones no anónimas y los clientes deben proporcionar una dirección de respuesta no anónima.</span><span class="sxs-lookup"><span data-stu-id="6bee1-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
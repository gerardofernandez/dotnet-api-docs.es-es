<Type Name="LinqDataSourceInsertEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67819f861e0979851576a6e4db154ea2ffe19135" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64068415" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceInsertEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceInsertEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceInsertEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceInsertEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7b052-101">Proporciona datos para el evento <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" />.</span><span class="sxs-lookup"><span data-stu-id="7b052-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b052-102">El <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> objeto se pasa a cualquier controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos.</span><span class="sxs-lookup"><span data-stu-id="7b052-102">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="7b052-103">El <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propiedad contiene los datos que se van a insertar.</span><span class="sxs-lookup"><span data-stu-id="7b052-103">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.</span></span>  
  
 <span data-ttu-id="7b052-104">Puede usar el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> objeto para examinar los datos antes de ejecuta la operación de inserción en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="7b052-104">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source.</span></span> <span data-ttu-id="7b052-105">A continuación, puede validar los datos, examine los errores de validación de la clase de datos o cambiar un valor antes de la actualización.</span><span class="sxs-lookup"><span data-stu-id="7b052-105">You can then validate the data, examine validation errors from the data class, or change a value before the update.</span></span> <span data-ttu-id="7b052-106">También puede cancelar la operación de inserción.</span><span class="sxs-lookup"><span data-stu-id="7b052-106">You can also cancel the insert operation.</span></span>  
  
 <span data-ttu-id="7b052-107">Si el objeto que representa el origen de datos produce una excepción de validación antes de insertar los datos, el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> propiedad contiene una instancia de la <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> clase.</span><span class="sxs-lookup"><span data-stu-id="7b052-107">If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="7b052-108">Puede recuperar todas las excepciones de validación a través de la <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7b052-108">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="7b052-109">Si se produce ninguna excepción de validación, el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> contiene la propiedad `null`.</span><span class="sxs-lookup"><span data-stu-id="7b052-109">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="7b052-110">Si controla las excepciones de validación y no desea que se vuelvan a lanzar la excepción, establezca el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="7b052-110">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b052-111">El ejemplo siguiente muestra un controlador para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos.</span><span class="sxs-lookup"><span data-stu-id="7b052-111">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="7b052-112">El objeto desde el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propiedad se convierte en un tipo denominado `Product`.</span><span class="sxs-lookup"><span data-stu-id="7b052-112">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="7b052-113">El `DateModified` propiedad de la `Product` objeto se establece en la fecha y hora actuales.</span><span class="sxs-lookup"><span data-stu-id="7b052-113">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="7b052-114">El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos.</span><span class="sxs-lookup"><span data-stu-id="7b052-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="7b052-115">Muestra los mensajes de excepción de validación utilizando un <xref:System.Web.UI.WebControls.Label> control.</span><span class="sxs-lookup"><span data-stu-id="7b052-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7b052-116">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="7b052-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs newObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="newObject"><span data-ttu-id="7b052-117">Objeto que contiene los datos que se van a insertar.</span><span class="sxs-lookup"><span data-stu-id="7b052-117">An object that contains the data to insert.</span></span></param>
        <summary><span data-ttu-id="7b052-118">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="7b052-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceInsertEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceInsertEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="7b052-119">Excepción que se produjo mientras se validaban los datos que se van a insertar.</span><span class="sxs-lookup"><span data-stu-id="7b052-119">The exception that occurred when the data to insert was being validated.</span></span></param>
        <summary><span data-ttu-id="7b052-120">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> y especifica la excepción proporcionada.</span><span class="sxs-lookup"><span data-stu-id="7b052-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b052-121">Obtiene la excepción que se produjo mientras se validaban los datos antes de la operación de inserción.</span><span class="sxs-lookup"><span data-stu-id="7b052-121">Gets the exception that was thrown while the data was being validated before the insert operation.</span></span></summary>
        <value><span data-ttu-id="7b052-122">La excepción si se presenta un error; en caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7b052-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b052-123">Si se produce una excepción de validación antes de realiza la operación de inserción, la excepción se almacena en el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7b052-123">If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="7b052-124">En un controlador para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos, puede recuperar la excepción a través de la <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="7b052-124">In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b052-125">El ejemplo siguiente muestra un controlador para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos.</span><span class="sxs-lookup"><span data-stu-id="7b052-125">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="7b052-126">Muestra los mensajes de excepción de validación utilizando un <xref:System.Web.UI.WebControls.Label> control.</span><span class="sxs-lookup"><span data-stu-id="7b052-126">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b052-127">Obtiene o establece un valor que indica si se controló la excepción y que no se debería iniciar de nuevo.</span><span class="sxs-lookup"><span data-stu-id="7b052-127">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="7b052-128"><see langword="true" /> si se controló la excepción; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7b052-128"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b052-129">Puede crear controladores de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos para examinar las excepciones de validación que se produjeron antes de la operación de inserción.</span><span class="sxs-lookup"><span data-stu-id="7b052-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation.</span></span> <span data-ttu-id="7b052-130">Si controla la excepción y no desea que se produzca de nuevo, establezca el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="7b052-130">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="7b052-131">Si no establece la <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> propiedad `true`, la excepción se propagará al siguiente controlador de eventos en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="7b052-131">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b052-132">El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos.</span><span class="sxs-lookup"><span data-stu-id="7b052-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="7b052-133">Muestra los mensajes de excepción de validación utilizando un <xref:System.Web.UI.WebControls.Label> control.</span><span class="sxs-lookup"><span data-stu-id="7b052-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message + "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7b052-134">Obtiene el objeto que contiene los datos que se van a insertar.</span><span class="sxs-lookup"><span data-stu-id="7b052-134">Gets the object that contains the data to insert.</span></span></summary>
        <value><span data-ttu-id="7b052-135">Objeto que contiene los datos que se van a insertar.</span><span class="sxs-lookup"><span data-stu-id="7b052-135">An object that contains the data to insert.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7b052-136">El <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propiedad contiene los datos que se insertará en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="7b052-136">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source.</span></span> <span data-ttu-id="7b052-137">Cree un controlador para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos y recuperar el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propiedad con el fin de validar los datos, cambiar los datos o cancelar la operación de inserción antes de ejecuta la operación de datos.</span><span class="sxs-lookup"><span data-stu-id="7b052-137">Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.</span></span>  
  
 <span data-ttu-id="7b052-138">El <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propiedad devuelve un objeto de tipo <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="7b052-138">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>.</span></span> <span data-ttu-id="7b052-139">Puede convertir este objeto en el tipo de la clase que representa los datos.</span><span class="sxs-lookup"><span data-stu-id="7b052-139">You can cast this object to the type of the class that represents the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7b052-140">El ejemplo siguiente muestra un controlador para el <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> eventos.</span><span class="sxs-lookup"><span data-stu-id="7b052-140">The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="7b052-141">El objeto desde el <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> propiedad se convierte en un tipo denominado `Product`.</span><span class="sxs-lookup"><span data-stu-id="7b052-141">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="7b052-142">El `DateModified` propiedad de la `Product` objeto se establece en la fecha y hora actuales.</span><span class="sxs-lookup"><span data-stu-id="7b052-142">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="LinqDataSourceUpdateEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5a1b8bd0b4efda23c6f0ffd2b416b4ead20d2a15" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51862887" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceUpdateEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1f5dc-101">Proporciona datos para el evento <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" />.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5dc-102">El <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> objeto se pasa a cualquier controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-102">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1f5dc-103">Puede usar el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> objeto para examinar los datos antes de ejecuta la operación de actualización del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-103">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object to examine the data before the update operation is executed in the data source.</span></span> <span data-ttu-id="1f5dc-104">A continuación, puede validar los datos, examine las excepciones de validación generadas por la clase de datos o cambiar un valor antes de la actualización.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-104">You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</span></span> <span data-ttu-id="1f5dc-105">También puede cancelar la operación de actualización.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-105">You can also cancel the update operation.</span></span>  
  
 <span data-ttu-id="1f5dc-106">La <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> objeto contiene los datos que se recuperaron originalmente del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-106">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> object contains the data that was originally retrieved from the data source.</span></span> <span data-ttu-id="1f5dc-107">La <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> objeto contiene los datos que se guardarán en el origen de datos durante la operación de actualización.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-107">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> object contains the data that will be saved in the data source during the update operation.</span></span>  
  
 <span data-ttu-id="1f5dc-108">Si el objeto que representa el origen de datos produce una excepción de validación antes de actualizar los datos, el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> propiedad contiene una instancia de la <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> clase.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-108">If the object that represents the data source throws a validation exception before updating the data, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="1f5dc-109">Puede recuperar todas las excepciones de validación a través de la <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-109">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="1f5dc-110">Si se produce ninguna excepción de validación, el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> contiene la propiedad `null`.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-110">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="1f5dc-111">Si controla las excepciones de validación y no desea que se vuelvan a lanzar la excepción, establezca el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-111">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="1f5dc-112">De forma predeterminada, el <xref:System.Web.UI.WebControls.LinqDataSource> control almacena los valores originales del origen de datos en la vista de estado en la página Web, excepto aquellos cuya <xref:System.Data.Linq.Mapping.ColumnAttribute> atributo está marcado como `UpdateCheck.Never`.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-112">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values from the data source in view state on the Web page, except those whose <xref:System.Data.Linq.Mapping.ColumnAttribute> attribute is marked as `UpdateCheck.Never`.</span></span> <span data-ttu-id="1f5dc-113">LINQ to SQL comprueba automáticamente la integridad de los datos antes de actualizar los datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-113">LINQ to SQL automatically checks the integrity of the data before updating the data.</span></span> <span data-ttu-id="1f5dc-114">Para ello, compara los valores actuales del origen de datos con los valores originales que se almacena en el estado de vista.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-114">It does this by comparing the current values in the data source with the original values stored in view state.</span></span> <span data-ttu-id="1f5dc-115">LINQ to SQL inicia una excepción si los valores del origen de datos han cambiado.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-115">LINQ to SQL raises an exception if the values in the data source have changed.</span></span> <span data-ttu-id="1f5dc-116">Puede realizar la validación de datos adicionales mediante la creación de un controlador para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-116">You can perform additional data validation by creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5dc-117">El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-117">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1f5dc-118">En el ejemplo se muestra cómo comparar las propiedades de la <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propiedad y el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propiedad para determinar si el valor de la `Category` propiedad ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-118">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="1f5dc-119">Si es así, el `CategoryChanged` propiedad del objeto en el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-119">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="1f5dc-120">El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-120">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1f5dc-121">Muestra los mensajes de excepción de validación utilizando un <xref:System.Web.UI.WebControls.Label> control.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-121">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="1f5dc-122">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="1f5dc-122">LINQ to SQL</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f5dc-123">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-123">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="1f5dc-124">Excepción que se produjo al validar los datos que se van a actualizar.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-124">The exception that occurred when validating the data to update.</span></span></param>
        <summary><span data-ttu-id="1f5dc-125">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> con la excepción especificada.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class with the specified exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (object originalObject, object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject, object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object, newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Object ^ originalObject, System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : obj * obj -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs (originalObject, newObject)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject"><span data-ttu-id="1f5dc-126">Objeto del tipo especificado en la propiedad <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> que contiene los valores iniciales que se recuperaron del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-126">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the initial values that were retrieved from the data source.</span></span></param>
        <param name="newObject"><span data-ttu-id="1f5dc-127">Objeto del tipo especificado en la propiedad <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> que contiene los valores que se guardarán en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-127">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the values that will be saved in the data source.</span></span></param>
        <summary><span data-ttu-id="1f5dc-128">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-128">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f5dc-129">Obtiene la excepción que se produjo mientras se validaban los datos antes de la operación de actualización.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-129">Gets the exception that was thrown while the data was being validated before the update operation.</span></span></summary>
        <value><span data-ttu-id="1f5dc-130">La excepción si se presenta un error; en caso contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-130">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5dc-131">Si se produce una excepción de validación antes de realiza la operación de actualización, la excepción se almacena en el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-131">If a validation exception is raised before the update operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="1f5dc-132">En un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos, puede recuperar la excepción a través de la <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-132">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5dc-133">El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-133">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1f5dc-134">Muestra los mensajes de excepción de validación utilizando un <xref:System.Web.UI.WebControls.Label> control.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-134">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f5dc-135">Obtiene o establece un valor que indica si se controló la excepción y que no se debería iniciar de nuevo.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-135">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="1f5dc-136"><see langword="true" /> si se controló la excepción; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-136"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5dc-137">Puede crear un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos para examinar las excepciones de validación que se produjeron antes de la operación de actualización.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-137">You can create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to examine validation exceptions that occurred before the update operation.</span></span> <span data-ttu-id="1f5dc-138">Si controla la excepción y no desea que se produzca de nuevo, establezca el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-138">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="1f5dc-139">Si no establece la <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> propiedad `true`, la excepción se propagará al siguiente controlador de eventos en la pila de llamadas.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-139">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5dc-140">El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-140">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1f5dc-141">Muestra los mensajes de excepción de validación utilizando un <xref:System.Web.UI.WebControls.Label> control.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-141">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f5dc-142">Obtiene el objeto que contiene los valores que se guardarán en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-142">Gets the object that contains the values that will be saved in the data source.</span></span></summary>
        <value><span data-ttu-id="1f5dc-143">Objeto del tipo especificado en la propiedad <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> que contiene los datos que se van a guardar.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-143">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to save.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5dc-144">Crear un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos y recuperar el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propiedad para validar los datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-144">Create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to validate the data.</span></span> <span data-ttu-id="1f5dc-145">También puede cambiar los datos o cancelar la operación de actualización.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-145">You can also change the data or cancel the update operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5dc-146">El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-146">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1f5dc-147">En el ejemplo se muestra cómo comparar las propiedades de la <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propiedad y el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propiedad para determinar si el valor de la `Category` propiedad ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-147">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="1f5dc-148">Si es así, el `CategoryChanged` propiedad del objeto en el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-148">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f5dc-149">Obtiene el objeto que contiene los valores que se recuperaron originalmente del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-149">Gets the object that contains the values that were originally retrieved from the data source.</span></span></summary>
        <value><span data-ttu-id="1f5dc-150">Objeto del tipo especificado en la propiedad <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> que contiene los datos que se recuperaron del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-150">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data that was retrieved from the data source.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5dc-151">Puede usar el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propiedad para comprobar los valores originales con los valores actuales del origen de datos y para cancelar la operación de actualización o realizar otra acción.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-151">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property to check the original values against the current values in the data source and to cancel the update operation or take other action.</span></span>  
  
 <span data-ttu-id="1f5dc-152">El <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propiedad contiene los valores de solo las propiedades que se conservan en la vista de estado en la página Web.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-152">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property contains values for only the properties that are persisted in view state in the Web page.</span></span> <span data-ttu-id="1f5dc-153">Una propiedad se mantiene en estas circunstancias:</span><span class="sxs-lookup"><span data-stu-id="1f5dc-153">A property is persisted under these circumstances:</span></span>  
  
-   <span data-ttu-id="1f5dc-154">Cuando se muestra en un control enlazado a datos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-154">When it is displayed in a data-bound control.</span></span>  
  
-   <span data-ttu-id="1f5dc-155">Cuando el <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> propiedad de la <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> atributo está establecido en `Always` o `WhenChanged`.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-155">When the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> property of the <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> attribute is set to `Always` or `WhenChanged`.</span></span>  
  
 <span data-ttu-id="1f5dc-156">Si el <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> propiedad está establecida en `Never` y el valor no se muestra en un control enlazado a datos, el valor no se almacena en la página Web.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-156">If the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> property is set to `Never` and the value is not displayed in a data-bound control, the value is not stored in the Web page.</span></span> <span data-ttu-id="1f5dc-157">En ese caso, no puede asignarse a la <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-157">In that case, it cannot be assigned to the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5dc-158">El ejemplo siguiente muestra un controlador de eventos para el <xref:System.Web.UI.WebControls.LinqDataSource.Updating> eventos.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-158">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="1f5dc-159">En el ejemplo se muestra cómo comparar las propiedades de la <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> propiedad y el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propiedad para determinar si el valor de la `Category` propiedad ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-159">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="1f5dc-160">Si es así, el `CategoryChanged` propiedad del objeto en el <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> propiedad está establecida en `true`.</span><span class="sxs-lookup"><span data-stu-id="1f5dc-160">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
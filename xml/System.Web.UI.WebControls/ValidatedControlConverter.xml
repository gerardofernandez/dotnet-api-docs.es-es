<Type Name="ValidatedControlConverter" FullName="System.Web.UI.WebControls.ValidatedControlConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b01a0359e196f9f94c7562389aac52b59949ea3e" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="64994948" /></Metadata><TypeSignature Language="C#" Value="public class ValidatedControlConverter : System.Web.UI.WebControls.ControlIDConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidatedControlConverter extends System.Web.UI.WebControls.ControlIDConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ValidatedControlConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidatedControlConverter&#xA;Inherits ControlIDConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidatedControlConverter : System::Web::UI::WebControls::ControlIDConverter" />
  <TypeSignature Language="F#" Value="type ValidatedControlConverter = class&#xA;    inherit ControlIDConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ControlIDConverter</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.ComponentModel.StringConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8daa6-101">Convierte un control en la página de formularios Web Forms que se puede validar con un control de validación en una cadena que contiene el identificador. del control</span><span class="sxs-lookup"><span data-stu-id="8daa6-101">Converts a control on the Web Forms page that can be validated with a validation control to a string containing the control's ID.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daa6-102">No todos los controles se pueden validar con un control de validación.</span><span class="sxs-lookup"><span data-stu-id="8daa6-102">Not all controls can be validated with a validation control.</span></span> <span data-ttu-id="8daa6-103">Esta clase crea una colección de identificadores de control en la página de formularios Web Forms que puede asociarse con un control de validación.</span><span class="sxs-lookup"><span data-stu-id="8daa6-103">This class creates a collection of control IDs on the Web Forms page that can be associated with a validation control.</span></span> <span data-ttu-id="8daa6-104">Esta colección se utiliza habitualmente en un diseñador para mostrar una lista de controles en la página de formularios Web Forms que puede asociarse con un control de validación.</span><span class="sxs-lookup"><span data-stu-id="8daa6-104">This collection is commonly used in a designer to display a list of controls on the Web Forms page that can be associated with a validation control.</span></span>  
  
 <span data-ttu-id="8daa6-105">Al crear su propio control de validación, puede habilitar el diseñador mostrar una lista de controles que admiten controles de validación.</span><span class="sxs-lookup"><span data-stu-id="8daa6-105">When creating your own validation control, you can enable the designer to display a list of controls that support validation controls.</span></span> <span data-ttu-id="8daa6-106">Simplemente agregue un atributo a la propiedad de cadena que representa el control para validar, como sigue:</span><span class="sxs-lookup"><span data-stu-id="8daa6-106">Simply add an attribute to the string property that represents the control to validate, as follows:</span></span>  
  
```vb  
<TypeConverter(GetType(ValidatedControlConverter))> _  
 Public Property ControlToValidate() As String  
    Get      
       // Add code to get the ID of the control to validate.  
    End Get  
    Set  
       // Add code to set the ID of the control to validate.  
    End Set  
 End Property  
```  
  
```csharp  
[TypeConverter(typeof(ValidatedControlConverter))]  
 public string ControlToValidate  
 {  
    get   
    {  
       // Add code to get the ID of the control to validate.  
    }  
    set  
    {  
       // Add code to set the ID of the control to validate.  
    }  
 }  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidatedControlConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ValidatedControlConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidatedControlConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8daa6-107">Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.ValidatedControlConverter" />.</span><span class="sxs-lookup"><span data-stu-id="8daa6-107">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ValidatedControlConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterControl">
      <MemberSignature Language="C#" Value="protected override bool FilterControl (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FilterControl(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ValidatedControlConverter.FilterControl(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FilterControl(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.FilterControl : System.Web.UI.Control -&gt; bool" Usage="validatedControlConverter.FilterControl control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="8daa6-108">Para comprobar el control.</span><span class="sxs-lookup"><span data-stu-id="8daa6-108">The control to check.</span></span></param>
        <summary><span data-ttu-id="8daa6-109">Devuelve un valor que indica si el control especificado debe agregarse a la lista de controles que se pueden validar.</span><span class="sxs-lookup"><span data-stu-id="8daa6-109">Returns a value indicating whether the specified control should be added to the list of controls that can be validated.</span></span></summary>
        <returns><span data-ttu-id="8daa6-110"><see langword="true" /> Si el control debe agregarse a la lista de controles que se pueden validar; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8daa6-110"><see langword="true" /> if the control should be added to the list of controls that can be validated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8daa6-111">Cuando el <xref:System.Web.UI.WebControls.ValidatedControlConverter.FilterControl%2A> devuelve del método `true`, el <xref:System.Web.UI.WebControls.ValidatedControlConverter> instancia agregará el identificador del control especificado en el parámetro de control a la <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> devuelto por la <xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues%2A> método.</span><span class="sxs-lookup"><span data-stu-id="8daa6-111">When the <xref:System.Web.UI.WebControls.ValidatedControlConverter.FilterControl%2A> method returns `true`, the <xref:System.Web.UI.WebControls.ValidatedControlConverter> instance will add the ID of the control specified in the control parameter to the <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned by the <xref:System.Web.UI.WebControls.ControlIDConverter.GetStandardValues%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="validatedControlConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8daa6-112"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede usarse para extraer información adicional sobre el entorno desde el que se invoca este convertidor de tipos.</span><span class="sxs-lookup"><span data-stu-id="8daa6-112">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="8daa6-113">Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8daa6-113">This parameter or properties of this parameter can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8daa6-114">Devuelve una colección de valores estándar para el tipo de datos para el que está diseñado este convertidor de tipos cuando se proporciona con un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="8daa6-114">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span></span></summary>
        <returns><span data-ttu-id="8daa6-115">Una colección que contiene un conjunto estándar de valores válidos, o <see langword="null" /> si el tipo de datos no admite un conjunto estándar de valores.</span><span class="sxs-lookup"><span data-stu-id="8daa6-115">A collection that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="validatedControlConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8daa6-116"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="8daa6-116">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="8daa6-117">Devuelve un valor que indica si la colección de valores estándar devueltos por <see cref="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> es una lista exclusiva de posibles valores, utilizando el contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="8daa6-117">Returns a value that indicates whether the collection of standard values returned from <see cref="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exclusive list of possible values, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="8daa6-118"><see langword="true" /> Si la colección devuelta por <see cref="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> es una lista exhaustiva de posibles valores; <see langword="false" /> si hay otros valores posibles.</span><span class="sxs-lookup"><span data-stu-id="8daa6-118"><see langword="true" /> if the collection returned from <see cref="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="validatedControlConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" Index="0" FrameworkAlternate="netframework-1.1" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8daa6-119"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="8daa6-119">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="8daa6-120">Devuelve si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista, utilizando el contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="8daa6-120">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="8daa6-121">Es <see langword="true" /> si debe llamarse a <see cref="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8daa6-121"><see langword="true" /> if <see cref="M:System.Web.UI.WebControls.ValidatedControlConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="AsyncOperationManager" FullName="System.ComponentModel.AsyncOperationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c0758038abe314d7edf4ae6dd21fb9aae6a993bd" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63898420" /></Metadata><TypeSignature Language="C#" Value="public static class AsyncOperationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncOperationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncOperationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncOperationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncOperationManager abstract sealed" />
  <TypeSignature Language="F#" Value="type AsyncOperationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e5d88-101">Proporciona administración de simultaneidad para las clases que admiten llamadas de métodos asincrónicos.</span><span class="sxs-lookup"><span data-stu-id="e5d88-101">Provides concurrency management for classes that support asynchronous method calls.</span></span> <span data-ttu-id="e5d88-102">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="e5d88-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d88-103">Si la clase debe proporcionar un comportamiento asincrónico según la [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), encontrará una serie de problemas de administración de simultaneidad.</span><span class="sxs-lookup"><span data-stu-id="e5d88-103">If your class needs to provide asynchronous behavior according to the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), you will encounter a number of concurrency management issues.</span></span> <span data-ttu-id="e5d88-104">Uno de ellos es el requisito para asegurarse de que se llama a los controladores de eventos en un subproceso o contexto adecuado para el modelo de aplicación (por ejemplo, las aplicaciones de Windows Forms, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] aplicaciones, aplicaciones de consola y así sucesivamente).</span><span class="sxs-lookup"><span data-stu-id="e5d88-104">Among these is the requirement to ensure that event handlers are called on a thread or context that is appropriate for the application model (for example, Windows Forms applications, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applications, console applications, and so on).</span></span> <span data-ttu-id="e5d88-105">El <xref:System.ComponentModel.AsyncOperationManager> proporciona una manera cómoda de crear una clase que se ejecuta correctamente en todos los modelos de aplicación compatibles con el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span><span class="sxs-lookup"><span data-stu-id="e5d88-105">The <xref:System.ComponentModel.AsyncOperationManager> provides a convenient way to create a class that runs properly under all application models supported by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)].</span></span>  
  
 <span data-ttu-id="e5d88-106">El <xref:System.ComponentModel.AsyncOperationManager> clase tiene un método <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, que devuelve un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que puede utilizarse para realizar el seguimiento de la duración de una tarea asincrónica determinada.</span><span class="sxs-lookup"><span data-stu-id="e5d88-106">The <xref:System.ComponentModel.AsyncOperationManager> class has one method, <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A>, which returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that can be used to track the duration of a particular asynchronous task.</span></span> <span data-ttu-id="e5d88-107">El <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> para una tarea se puede usar para los clientes de la alerta cuando se complete una tarea.</span><span class="sxs-lookup"><span data-stu-id="e5d88-107">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for a task can be used to alert clients when a task completes.</span></span> <span data-ttu-id="e5d88-108">También puede utilizarse para publicar las actualizaciones de progreso y resultados incrementales sin terminar la operación.</span><span class="sxs-lookup"><span data-stu-id="e5d88-108">It can also be used to post progress updates and incremental results without terminating the operation.</span></span>  
  
 <span data-ttu-id="e5d88-109">Para obtener más información acerca de cómo implementar clases asincrónicas, vea [implementar el modelo asincrónico basado en eventos](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="e5d88-109">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5d88-110">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.ComponentModel.AsyncOperationManager> clase para crear una clase que admita las operaciones asincrónicas para cualquier modelo de aplicación.</span><span class="sxs-lookup"><span data-stu-id="e5d88-110">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager> class to create a class that supports asynchronous operations for any application model.</span></span> <span data-ttu-id="e5d88-111">Muestra cómo implementar una clase que prueba un número para determinar si es primo.</span><span class="sxs-lookup"><span data-stu-id="e5d88-111">It shows how to implement a class that tests a number to determine whether it is prime.</span></span> <span data-ttu-id="e5d88-112">Este cálculo puede llevar mucho tiempo, por lo que se hace en un subproceso independiente.</span><span class="sxs-lookup"><span data-stu-id="e5d88-112">This calculation can be time consuming, so it is done on a separate thread.</span></span> <span data-ttu-id="e5d88-113">Informes de progreso, los resultados incrementales y notificaciones de finalización se controlan mediante el <xref:System.ComponentModel.AsyncOperation> (clase), lo que garantiza que se llama a los controladores de eventos del cliente en el subproceso o contexto apropiados.</span><span class="sxs-lookup"><span data-stu-id="e5d88-113">Progress reports, incremental results, and completion notifications are handled by the <xref:System.ComponentModel.AsyncOperation> class, which ensures that the client's event handlers are called on the proper thread or context.</span></span>  
  
 <span data-ttu-id="e5d88-114">Para obtener una lista de código completo, vea [Cómo: Implementación de un componente que admita el modelo asincrónico basado en eventos](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span><span class="sxs-lookup"><span data-stu-id="e5d88-114">For a full code listing, see [How to: Implement a Component That Supports the Event-based Asynchronous Pattern](https://msdn.microsoft.com/library/3c1aa4d4-da87-4a03-b812-3d167b8c57cf).</span></span> <span data-ttu-id="e5d88-115">Para obtener una lista de código completo de un formulario de cliente, consulte [Cómo: Implementar un cliente en un modelo asincrónico basado en eventos](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="e5d88-115">For a full code listing of a client form, see [How to: Implement a Client of the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/how-to-implement-a-client-of-the-event-based-asynchronous-pattern.md).</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="e5d88-116">Implementar el modelo asincrónico basado en eventos</span><span class="sxs-lookup"><span data-stu-id="e5d88-116">Implementing the Event-based Asynchronous Pattern</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="e5d88-117">Procedimientos recomendados para el subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="e5d88-117">Managed Threading Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CreateOperation">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.AsyncOperation CreateOperation (object userSuppliedState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.AsyncOperation CreateOperation(object userSuppliedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncOperationManager.CreateOperation(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOperation (userSuppliedState As Object) As AsyncOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ComponentModel::AsyncOperation ^ CreateOperation(System::Object ^ userSuppliedState);" />
      <MemberSignature Language="F#" Value="static member CreateOperation : obj -&gt; System.ComponentModel.AsyncOperation" Usage="System.ComponentModel.AsyncOperationManager.CreateOperation userSuppliedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AsyncOperation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userSuppliedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userSuppliedState"><span data-ttu-id="e5d88-118">Objeto que se utiliza para asociar un fragmento de estado del cliente, como un id. de tarea, a una operación asincrónica determinada.</span><span class="sxs-lookup"><span data-stu-id="e5d88-118">An object used to associate a piece of client state, such as a task ID, with a particular asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="e5d88-119">Devuelve un objeto <see cref="T:System.ComponentModel.AsyncOperation" /> para realizar un seguimiento de la duración de una operación asincrónica determinada.</span><span class="sxs-lookup"><span data-stu-id="e5d88-119">Returns an <see cref="T:System.ComponentModel.AsyncOperation" /> for tracking the duration of a particular asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="e5d88-120">Objeto <see cref="T:System.ComponentModel.AsyncOperation" /> que se puede utilizar para realizar un seguimiento de la duración de una invocación a un método asincrónico.</span><span class="sxs-lookup"><span data-stu-id="e5d88-120">An <see cref="T:System.ComponentModel.AsyncOperation" /> that you can use to track the duration of an asynchronous method invocation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d88-121">El <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> método devuelve un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> que puede usar para realizar el seguimiento de la duración de una operación asincrónica determinada y para avisar al modelo de aplicación cuando se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="e5d88-121">The <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method returns an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> that you can use to track the duration of a particular asynchronous operation and to alert the application model when the operation completes.</span></span> <span data-ttu-id="e5d88-122">También puede usar para publicar las actualizaciones de progreso y resultados incrementales sin terminar la operación.</span><span class="sxs-lookup"><span data-stu-id="e5d88-122">You can also use it to post progress updates and incremental results without terminating the operation.</span></span> <span data-ttu-id="e5d88-123">El <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> calculará correctamente las referencias a estas llamadas para el subproceso o contexto adecuado para el modelo de aplicación.</span><span class="sxs-lookup"><span data-stu-id="e5d88-123">The <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> will correctly marshal these calls to the appropriate thread or context for the application model.</span></span>  
  
 <span data-ttu-id="e5d88-124">Si implementa una clase que admita el modelo asincrónico basado en eventos, debe llamar la clase <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> cada vez que su *MethodName* `Async` se llama al método.</span><span class="sxs-lookup"><span data-stu-id="e5d88-124">If you implement a class that supports the Event-based Asynchronous Pattern, your class should call <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> each time your *MethodName*`Async` method is called.</span></span> <span data-ttu-id="e5d88-125">Puede usar la aplicación cliente que realiza llamadas al método el `userSuppliedState` parámetro para identificar de forma única cada invocación, con el fin de distinguir los eventos provocados durante la ejecución de la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="e5d88-125">The client application that makes calls to the method can use the `userSuppliedState` parameter to uniquely identify each invocation, so as to distinguish events raised during the execution of the asynchronous operation.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="e5d88-126">Código de cliente debe proporcionar un valor único para el `userSuppliedState` parámetro.</span><span class="sxs-lookup"><span data-stu-id="e5d88-126">Client code must provide a unique value for the `userSuppliedState` parameter.</span></span> <span data-ttu-id="e5d88-127">Los identificadores de tarea no único pueden hacer que su implementación para informar del progreso y otros eventos de forma incorrecta.</span><span class="sxs-lookup"><span data-stu-id="e5d88-127">Non-unique task IDs may cause your implementation to report progress and other events incorrectly.</span></span> <span data-ttu-id="e5d88-128">El código debe comprobar para un identificador de tarea no es único y generar un <xref:System.ArgumentException?displayProperty=nameWithType> si se detecta una.</span><span class="sxs-lookup"><span data-stu-id="e5d88-128">Your code should check for a non-unique task ID and throw an <xref:System.ArgumentException?displayProperty=nameWithType> if one is detected.</span></span>  
  
 <span data-ttu-id="e5d88-129">El código debe realizar un seguimiento cada <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> devuelto por <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> y usar el objeto en la operación asincrónica subyacente correspondiente para publicar actualizaciones y finalizar la operación.</span><span class="sxs-lookup"><span data-stu-id="e5d88-129">Your code should track every <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> returned by <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> and use the object in the corresponding underlying asynchronous operation to post updates and terminate the operation.</span></span> <span data-ttu-id="e5d88-130">Este seguimiento puede ser tan simple como pasar el <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> como un parámetro entre los delegados.</span><span class="sxs-lookup"><span data-stu-id="e5d88-130">This tracking can be as simple as passing the <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> as a parameter among delegates.</span></span> <span data-ttu-id="e5d88-131">En los diseños más sofisticados, la clase puede mantener una colección de <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objetos, agregar objetos cuando se inician las tareas y quitarlos cuando las tareas se completaban o cancelaban.</span><span class="sxs-lookup"><span data-stu-id="e5d88-131">In more sophisticated designs, your class can maintain a collection of <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> objects, adding objects when tasks are started and removing them when tasks are completed or canceled.</span></span> <span data-ttu-id="e5d88-132">Este enfoque le permite comprobar único `userSuppliedState` parámetro valores y es el método que debe usar al trabajar con clases que admiten varias invocaciones simultáneas.</span><span class="sxs-lookup"><span data-stu-id="e5d88-132">This approach allows you to check for unique `userSuppliedState` parameter values, and is the method you should use when working with classes that support multiple concurrent invocations.</span></span>  
  
 <span data-ttu-id="e5d88-133">Para obtener más información acerca de cómo implementar clases asincrónicas, vea [implementar el modelo asincrónico basado en eventos](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span><span class="sxs-lookup"><span data-stu-id="e5d88-133">For more information about implementing asynchronous classes, see [Implementing the Event-based Asynchronous Pattern](~/docs/standard/asynchronous-programming-patterns/implementing-the-event-based-asynchronous-pattern.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5d88-134">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> método para crear un <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> para realizar el seguimiento de la duración de las operaciones asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="e5d88-134">The following code example demonstrates using the <xref:System.ComponentModel.AsyncOperationManager.CreateOperation%2A> method to create an <xref:System.ComponentModel.AsyncOperation?displayProperty=nameWithType> for tracking the duration of asynchronous operations.</span></span> <span data-ttu-id="e5d88-135">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.ComponentModel.AsyncOperationManager> clase.</span><span class="sxs-lookup"><span data-stu-id="e5d88-135">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#3)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="e5d88-136">Implementar el modelo asincrónico basado en eventos</span><span class="sxs-lookup"><span data-stu-id="e5d88-136">Implementing the Event-based Asynchronous Pattern</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/e51988e7-7f4b-4646-a06d-1416cee8d557"><span data-ttu-id="e5d88-137">Procedimientos recomendados para el subprocesamiento administrado</span><span class="sxs-lookup"><span data-stu-id="e5d88-137">Managed Threading Best Practices</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="SynchronizationContext">
      <MemberSignature Language="C#" Value="public static System.Threading.SynchronizationContext SynchronizationContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Threading.SynchronizationContext SynchronizationContext" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizationContext As SynchronizationContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Threading::SynchronizationContext ^ SynchronizationContext { System::Threading::SynchronizationContext ^ get(); void set(System::Threading::SynchronizationContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SynchronizationContext : System.Threading.SynchronizationContext with get, set" Usage="System.ComponentModel.AsyncOperationManager.SynchronizationContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.SynchronizationContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e5d88-138">Obtiene o establece el contexto de sincronización de la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="e5d88-138">Gets or sets the synchronization context for the asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="e5d88-139">Contexto de sincronización de la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="e5d88-139">The synchronization context for the asynchronous operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5d88-140">La implementación predeterminada es la implementación de subprocesamiento libre.</span><span class="sxs-lookup"><span data-stu-id="e5d88-140">The default implementation is the free-threaded implementation.</span></span>  
  
 <span data-ttu-id="e5d88-141">Un subproceso debe establecer el <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> propiedad `null` para liberar el generador de subprocesamiento libre cuando se hace, o bien su fábrica nunca se eliminará.</span><span class="sxs-lookup"><span data-stu-id="e5d88-141">A thread should set the <xref:System.ComponentModel.AsyncOperationManager.SynchronizationContext%2A> property to `null` to release the free-threaded factory when it is done, or else its factory will never be disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.NamedPermissionSet"><span data-ttu-id="e5d88-142">Para establecer el contexto de sincronización.</span><span class="sxs-lookup"><span data-stu-id="e5d88-142">for setting the synchronization context.</span></span> <span data-ttu-id="e5d88-143">Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span><span class="sxs-lookup"><span data-stu-id="e5d88-143">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="e5d88-144">Estado asociado:</span><span class="sxs-lookup"><span data-stu-id="e5d88-144">Associated state:</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>
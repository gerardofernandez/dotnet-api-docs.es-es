<Type Name="AsyncCompletedEventArgs" FullName="System.ComponentModel.AsyncCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e72949dd0dfa648237a0e28fd82566e090518381" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58729411" /></Metadata><TypeSignature Language="C#" Value="public class AsyncCompletedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncCompletedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncCompletedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncCompletedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type AsyncCompletedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1d642-101">Proporciona datos para el evento *MethodName*<see langword="Completed" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-101">Provides data for the *MethodName*<see langword="Completed" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d642-102">Si usa una clase que implementa el [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), la clase proporcionará un *MethodName* `Completed` eventos.</span><span class="sxs-lookup"><span data-stu-id="1d642-102">If you are using a class that implements the [Event-based Asynchronous Pattern Overview](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-overview.md), the class will provide a *MethodName*`Completed` event.</span></span> <span data-ttu-id="1d642-103">Si agrega una instancia de la <xref:System.ComponentModel.AsyncCompletedEventHandler?displayProperty=nameWithType> delegado al evento, recibirá información sobre el resultado de operaciones asincrónicas en el <xref:System.ComponentModel.AsyncCompletedEventArgs> parámetro del método de controlador de eventos correspondiente.</span><span class="sxs-lookup"><span data-stu-id="1d642-103">If you add an instance of the <xref:System.ComponentModel.AsyncCompletedEventHandler?displayProperty=nameWithType> delegate to the event, you will receive information about the outcome of asynchronous operations in the <xref:System.ComponentModel.AsyncCompletedEventArgs> parameter of the corresponding event-handler method.</span></span>  
  
 <span data-ttu-id="1d642-104">Delegado de controlador de eventos de la aplicación cliente puede comprobar la <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propiedad para determinar si se canceló la tarea asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-104">The client application's event-handler delegate can check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property to determine if the asynchronous task was cancelled.</span></span>  
  
 <span data-ttu-id="1d642-105">Delegado de controlador de eventos de la aplicación cliente puede comprobar la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad para determinar si se produjo una excepción durante la ejecución de la tarea asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-105">The client application's event-handler delegate can check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property to determine if an exception occurred during execution of the asynchronous task.</span></span>  
  
 <span data-ttu-id="1d642-106">Si la clase admite varios métodos asincrónicos o varias llamadas al mismo método asincrónico, se puede determinar qué tarea provocó el *MethodName* `Completed` evento comprobando el valor de la <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1d642-106">If the class supports multiple asynchronous methods, or multiple calls to the same asynchronous method, you can determine which task raised the *MethodName*`Completed` event by checking the value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="1d642-107">El código debe realizar un seguimiento de estos tokens, conocidos como Id. de tarea, como sus correspondientes tareas asincrónicas se inician y se completan.</span><span class="sxs-lookup"><span data-stu-id="1d642-107">Your code will need to track these tokens, known as task IDs, as their corresponding asynchronous tasks start and complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d642-108">En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.ComponentModel.AsyncOperation> para realizar el seguimiento de la duración de las operaciones asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="1d642-108">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="1d642-109">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="1d642-109">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="1d642-110">Las clases que siguen el modelo asincrónico basado en eventos pueden provocar eventos a los clientes de alerta sobre el estado de las operaciones asincrónicas pendientes.</span><span class="sxs-lookup"><span data-stu-id="1d642-110">Classes that follow the Event-based Asynchronous Pattern can raise events to alert clients about the status of pending asynchronous operations.</span></span> <span data-ttu-id="1d642-111">Si la clase proporciona un *MethodName* <see langword="Completed" /> eventos, puede usar el <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> indique a los clientes sobre el resultado de las operaciones asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="1d642-111">If the class provides a *MethodName*<see langword="Completed" /> event, you can use the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> to tell clients about the outcome of asynchronous operations.</span></span>  
  
<span data-ttu-id="1d642-112">Es posible que desee comunicar a los clientes obtener más información sobre el resultado de una operación asincrónica que un <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> admite.</span><span class="sxs-lookup"><span data-stu-id="1d642-112">You may want to communicate to clients more information about the outcome of an asynchronous operation than an <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> accommodates.</span></span> <span data-ttu-id="1d642-113">En este caso, puede derivar su propia clase de la <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> clase y proporcionar las variables de instancia privados adicionales y propiedades públicas de solo lectura correspondientes.</span><span class="sxs-lookup"><span data-stu-id="1d642-113">In this case, you can derive your own class from the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class and provide additional private instance variables and corresponding read-only public properties.</span></span> <span data-ttu-id="1d642-114">Llame a la <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> método antes de devolver el valor de propiedad, en caso de la operación se canceló o se produjo un error.</span><span class="sxs-lookup"><span data-stu-id="1d642-114">Call the <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> method before returning the property value, in case the operation was canceled or an error occurred.</span></span></para></block>
    <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
    <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
    <altmember cref="T:System.ComponentModel.AsyncOperation" />
    <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="1d642-115">Implementar el modelo asincrónico basado en eventos</span><span class="sxs-lookup"><span data-stu-id="1d642-115">Implementing the Event-based Asynchronous Pattern</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1d642-116">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-116">Initializes a new instance of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncCompletedEventArgs ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncCompletedEventArgs();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d642-117">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-117">Initializes a new instance of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncCompletedEventArgs (Exception error, bool cancelled, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception error, bool cancelled, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.#ctor(System.Exception,System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (error As Exception, cancelled As Boolean, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncCompletedEventArgs(Exception ^ error, bool cancelled, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.AsyncCompletedEventArgs : Exception * bool * obj -&gt; System.ComponentModel.AsyncCompletedEventArgs" Usage="new System.ComponentModel.AsyncCompletedEventArgs (error, cancelled, userState)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" />
        <Parameter Name="cancelled" Type="System.Boolean" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="1d642-118">Cualquier error que se haya producido durante la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-118">Any error that occurred during the asynchronous operation.</span></span></param>
        <param name="cancelled"><span data-ttu-id="1d642-119">Valor que indica si se canceló la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-119">A value indicating whether the asynchronous operation was canceled.</span></span></param>
        <param name="userState"><span data-ttu-id="1d642-120">Objeto de estado opcional proporcionado por el usuario que se ha pasado al método <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-120">The optional user-supplied state object passed to the <see cref="M:System.ComponentModel.BackgroundWorker.RunWorkerAsync(System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="1d642-121">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-121">Initializes a new instance of the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancelled">
      <MemberSignature Language="C#" Value="public bool Cancelled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Cancelled" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cancelled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Cancelled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Cancelled : bool" Usage="System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d642-122">Obtiene un valor que indica si se ha cancelado una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-122">Gets a value indicating whether an asynchronous operation has been canceled.</span></span></summary>
        <value><span data-ttu-id="1d642-123">Es <see langword="true" /> si se canceló la operación en segundo plano; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-123"><see langword="true" /> if the background operation has been canceled; otherwise <see langword="false" />.</span></span> <span data-ttu-id="1d642-124">De manera predeterminada, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-124">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d642-125">Cuando el <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propiedad es `true`, se interrumpió la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-125">When the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property is `true`, the asynchronous operation was interrupted.</span></span>  
  
 <span data-ttu-id="1d642-126">Delegado de controlador de eventos de la aplicación cliente debe comprobar la <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> propiedad antes de acceder a las propiedades en una clase derivada de <xref:System.ComponentModel.AsyncCompletedEventArgs>; de lo contrario, la propiedad, se producirá un <xref:System.InvalidOperationException> si la operación asincrónica era interrumpido.</span><span class="sxs-lookup"><span data-stu-id="1d642-126">The client application's event-handler delegate should check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> property before accessing any properties in a class derived from <xref:System.ComponentModel.AsyncCompletedEventArgs>; otherwise, the property will raise an <xref:System.InvalidOperationException> if the asynchronous operation was interrupted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d642-127">En el ejemplo de código siguiente se muestra el uso de un <xref:System.ComponentModel.AsyncOperation> para realizar el seguimiento de la duración de las operaciones asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="1d642-127">The following code example demonstrates the using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="1d642-128">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="1d642-128">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d642-129">Si se proporcionan propiedades de solo lectura en una clase derivada, asegúrese de llamar a la <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> método.</span><span class="sxs-lookup"><span data-stu-id="1d642-129">If you provide read-only properties in a derived class, be sure to call the <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> method.</span></span> <span data-ttu-id="1d642-130">Esto evita que los clientes acceso a las propiedades que puede que no son válidas debido a un error en la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-130">This prevents clients from accessing properties that are potentially not valid due to a failure in the asynchronous operation.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="1d642-131">Implementar el modelo asincrónico basado en eventos</span><span class="sxs-lookup"><span data-stu-id="1d642-131">Implementing the Event-based Asynchronous Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Error { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Error : Exception" Usage="System.ComponentModel.AsyncCompletedEventArgs.Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d642-132">Obtiene un valor que indica el error que se produjo durante una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-132">Gets a value indicating which error occurred during an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="1d642-133">Instancia de <see cref="T:System.Exception" />, si se ha producido un error durante una operación asincrónica; de lo contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-133">An <see cref="T:System.Exception" /> instance, if an error occurred during an asynchronous operation; otherwise <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d642-134">Si se produce una excepción durante una operación asincrónica, la clase asignará la excepción a la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1d642-134">If an exception is raised during an asynchronous operation, the class will assign the exception to the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property.</span></span> <span data-ttu-id="1d642-135">Delegado de controlador de eventos de la aplicación cliente debe comprobar la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad antes de acceder a las propiedades en una clase derivada de <xref:System.ComponentModel.AsyncCompletedEventArgs>; de lo contrario, la propiedad, se producirá un <xref:System.Reflection.TargetInvocationException> con su <xref:System.Exception.InnerException%2A> explotación de propiedad un referencia a <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>.</span><span class="sxs-lookup"><span data-stu-id="1d642-135">The client application's event-handler delegate should check the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property before accessing any properties in a class derived from <xref:System.ComponentModel.AsyncCompletedEventArgs>; otherwise, the property will raise a <xref:System.Reflection.TargetInvocationException> with its <xref:System.Exception.InnerException%2A> property holding a reference to <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>.</span></span>  
  
 <span data-ttu-id="1d642-136">El valor de la <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> propiedad es `null` si se ha cancelado la operación.</span><span class="sxs-lookup"><span data-stu-id="1d642-136">The value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> property is `null` if the operation was canceled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d642-137">En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.ComponentModel.AsyncOperation> para realizar el seguimiento de la duración de las operaciones asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="1d642-137">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="1d642-138">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="1d642-138">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d642-139">Si se proporcionan propiedades de solo lectura en una clase derivada, asegúrese de llamar a la <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> método en la implementación de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="1d642-139">If you provide read-only properties in a derived class, be sure to call the <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> method in your property implementation.</span></span> <span data-ttu-id="1d642-140">Esto evita que los clientes acceso a las propiedades que puede que no son válidas debido a un error en la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-140">This prevents clients from accessing properties that are potentially not valid due to a failure in the asynchronous operation.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="1d642-141">Implementar el modelo asincrónico basado en eventos</span><span class="sxs-lookup"><span data-stu-id="1d642-141">Implementing the Event-based Asynchronous Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RaiseExceptionIfNecessary">
      <MemberSignature Language="C#" Value="protected void RaiseExceptionIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseExceptionIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseExceptionIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseExceptionIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.RaiseExceptionIfNecessary : unit -&gt; unit" Usage="asyncCompletedEventArgs.RaiseExceptionIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1d642-142">Genera una excepción proporcionada por el usuario si se ha producido un error en una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-142">Raises a user-supplied exception if an asynchronous operation failed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1d642-143">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary%2A> en derivadas propiedades de la clase.</span><span class="sxs-lookup"><span data-stu-id="1d642-143">The following code example demonstrates using <xref:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary%2A> in derived class properties.</span></span>  
  
  
[!code-csharp[System.ComponentModel.AsyncOperationManager#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#6)]
[!code-vb[System.ComponentModel.AsyncOperationManager#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="1d642-144">La propiedad <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-144">The <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> property is <see langword="true" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="1d642-145">La operación asincrónica ha establecido la propiedad <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-145">The <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property has been set by the asynchronous operation.</span></span> <span data-ttu-id="1d642-146">La propiedad <see cref="P:System.Exception.InnerException" /> contiene una referencia a <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</span><span class="sxs-lookup"><span data-stu-id="1d642-146">The <see cref="P:System.Exception.InnerException" /> property holds a reference to <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="1d642-147">Si ha derivado la propia clase desde el <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> (clase), deben llamar las propiedades de solo lectura del <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> método antes de devolver el valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="1d642-147">If you have derived your own class from the <see cref="T:System.ComponentModel.AsyncCompletedEventArgs" /> class, your read-only properties should call the <see cref="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" /> method before returning the property value.</span></span> <span data-ttu-id="1d642-148">Si el componente asincrónico Value de código de trabajo asigna una excepción a la <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> propiedad o establece el <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> propiedad a <see langword="true" />, la propiedad, producirá una excepción si un cliente intenta leer su valor.</span><span class="sxs-lookup"><span data-stu-id="1d642-148">If the component's asynchronous worker code assigns an exception to the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property or sets the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" /> property to <see langword="true" />, the property will raise an exception if a client tries to read its value.</span></span> <span data-ttu-id="1d642-149">Esto evita que los clientes acceso a las propiedades que puede que no son válidas debido a un error en la operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-149">This prevents clients from accessing properties that are potentially not valid due to a failure in the asynchronous operation.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="1d642-150">Implementar el modelo asincrónico basado en eventos</span><span class="sxs-lookup"><span data-stu-id="1d642-150">Implementing the Event-based Asynchronous Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UserState">
      <MemberSignature Language="C#" Value="public object UserState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object UserState" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ UserState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserState : obj" Usage="System.ComponentModel.AsyncCompletedEventArgs.UserState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1d642-151">Obtiene el identificador único de la tarea asincrónica.</span><span class="sxs-lookup"><span data-stu-id="1d642-151">Gets the unique identifier for the asynchronous task.</span></span></summary>
        <value><span data-ttu-id="1d642-152">Referencia a un objeto que identifica de forma única la tarea asincrónica; de lo contrario, <see langword="null" /> si no se ha establecido ningún valor.</span><span class="sxs-lookup"><span data-stu-id="1d642-152">An object reference that uniquely identifies the asynchronous task; otherwise, <see langword="null" /> if no value has been set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1d642-153">Si una clase admite varios métodos asincrónicos o varias invocaciones de un único método, puede determinar qué tarea provocó el *MethodName* `Completed` evento comprobando el valor de la <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="1d642-153">If a class supports multiple asynchronous methods, or multiple invocations of a single method, you can determine which task raised the *MethodName*`Completed` event by checking the value of the <xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A> property.</span></span> <span data-ttu-id="1d642-154">El código necesita hará un seguimiento estos tokens, conocidos como Id. de tarea, como sus correspondientes tareas asincrónicas se inician y se completan.</span><span class="sxs-lookup"><span data-stu-id="1d642-154">Your code will need track these tokens, known as task IDs, as their corresponding asynchronous tasks start and complete.</span></span>  
  
 <span data-ttu-id="1d642-155">El valor de esta propiedad se establece durante la llamada al método asincrónico que se inició la tarea original.</span><span class="sxs-lookup"><span data-stu-id="1d642-155">The value of this property is set during the original call to the asynchronous method that started the task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1d642-156">En el ejemplo de código siguiente se muestra cómo utilizar un <xref:System.ComponentModel.AsyncOperation> para realizar el seguimiento de la duración de las operaciones asincrónicas.</span><span class="sxs-lookup"><span data-stu-id="1d642-156">The following code example demonstrates using an <xref:System.ComponentModel.AsyncOperation> to track the lifetime of asynchronous operations.</span></span> <span data-ttu-id="1d642-157">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> clase.</span><span class="sxs-lookup"><span data-stu-id="1d642-157">This code example is part of a larger example provided for the <xref:System.ComponentModel.AsyncOperationManager?displayProperty=nameWithType> class.</span></span>  
  
 [!code-csharp[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#11)]
 [!code-vb[System.ComponentModel.AsyncOperationManager#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#11)]  
[!code-csharp[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/CS/primenumbercalculatormain.cs#12)]
[!code-vb[System.ComponentModel.AsyncOperationManager#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.AsyncOperationManager/VB/primenumbercalculatormain.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.AsyncCompletedEventHandler" />
        <altmember cref="T:System.ComponentModel.AsyncOperationManager" />
        <altmember cref="T:System.ComponentModel.AsyncOperation" />
        <related type="Article" href="https://msdn.microsoft.com/library/43402d19-8d30-426d-8785-1a4478233bfa"><span data-ttu-id="1d642-158">Implementar el modelo asincrónico basado en eventos</span><span class="sxs-lookup"><span data-stu-id="1d642-158">Implementing the Event-based Asynchronous Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
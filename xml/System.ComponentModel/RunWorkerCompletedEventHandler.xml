<Type Name="RunWorkerCompletedEventHandler" FullName="System.ComponentModel.RunWorkerCompletedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e6793f4c2251f60a3d85c1e6bfe7ec75d42c020" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37690809" /></Metadata><TypeSignature Language="C#" Value="public delegate void RunWorkerCompletedEventHandler(object sender, RunWorkerCompletedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RunWorkerCompletedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.RunWorkerCompletedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RunWorkerCompletedEventHandler(sender As Object, e As RunWorkerCompletedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RunWorkerCompletedEventHandler(System::Object ^ sender, RunWorkerCompletedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RunWorkerCompletedEventHandler = delegate of obj * RunWorkerCompletedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.EventBasedAsync</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ComponentModel.RunWorkerCompletedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="80c01-101">Origen del evento.</span><span class="sxs-lookup"><span data-stu-id="80c01-101">The source of the event.</span></span></param>
    <param name="e"><span data-ttu-id="80c01-102">Objeto <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="80c01-102">A <see cref="T:System.ComponentModel.RunWorkerCompletedEventArgs" /> that contains the event data.</span></span></param>
    <summary><span data-ttu-id="80c01-103">Representa el método que controlará el evento <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> de una clase <see cref="T:System.ComponentModel.BackgroundWorker" />.</span><span class="sxs-lookup"><span data-stu-id="80c01-103">Represents the method that will handle the <see cref="E:System.ComponentModel.BackgroundWorker.RunWorkerCompleted" /> event of a <see cref="T:System.ComponentModel.BackgroundWorker" /> class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80c01-104">Cuando creas un <xref:System.ComponentModel.RunWorkerCompletedEventHandler> delegado, identifica un método para controlar el evento.</span><span class="sxs-lookup"><span data-stu-id="80c01-104">When you create a <xref:System.ComponentModel.RunWorkerCompletedEventHandler> delegate, you identify a method to handle the event.</span></span> <span data-ttu-id="80c01-105">Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento.</span><span class="sxs-lookup"><span data-stu-id="80c01-105">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="80c01-106">Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.</span><span class="sxs-lookup"><span data-stu-id="80c01-106">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="80c01-107">Para obtener más información sobre los delegados de controlador de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="80c01-107">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80c01-108">En el ejemplo de código siguiente se muestra un método que puede usarse como un controlador para <xref:System.ComponentModel.RunWorkerCompletedEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="80c01-108">The following code example shows a method that can be used as a handler for <xref:System.ComponentModel.RunWorkerCompletedEventHandler>.</span></span> <span data-ttu-id="80c01-109">Este ejemplo forma parte de un ejemplo mayor para el <xref:System.ComponentModel.BackgroundWorker> clase.</span><span class="sxs-lookup"><span data-stu-id="80c01-109">This example is part of a larger sample for the <xref:System.ComponentModel.BackgroundWorker> class.</span></span>  
  
 [!code-cpp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CPP/fibonacciform.cpp#6)]
 [!code-csharp[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/CS/fibonacciform.cs#6)]
 [!code-vb[System.ComponentModel.BackgroundWorker#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.BackgroundWorker/VB/fibonacciform.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
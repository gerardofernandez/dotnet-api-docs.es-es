<Type Name="ReadOnlyAttribute" FullName="System.ComponentModel.ReadOnlyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="320ee091c6a8f9dd3ae6c633cf2599ab47ab2f7e" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63866216" /></Metadata><TypeSignature Language="C#" Value="public sealed class ReadOnlyAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReadOnlyAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ReadOnlyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReadOnlyAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReadOnlyAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ReadOnlyAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.All)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1865e-101">Especifica si la propiedad a la que está enlazado este atributo es de sólo lectura o de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="1865e-101">Specifies whether the property this attribute is bound to is read-only or read/write.</span></span> <span data-ttu-id="1865e-102">Esta clase no se puede heredar.</span><span class="sxs-lookup"><span data-stu-id="1865e-102">This class cannot be inherited</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1865e-103">Los miembros marcados con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `true` o que no tienen un `Set` método no se puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="1865e-103">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="1865e-104">Los miembros que no tienen este atributo o que están marcados con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `false` son de lectura y escritura, y puede cambiarse.</span><span class="sxs-lookup"><span data-stu-id="1865e-104">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="1865e-105">De manera predeterminada, es <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="1865e-105">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1865e-106">El <xref:System.ComponentModel.PropertyDescriptor> clase exige el <xref:System.ComponentModel.ReadOnlyAttribute> en el entorno de diseño y en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="1865e-106">The <xref:System.ComponentModel.PropertyDescriptor> class enforces the <xref:System.ComponentModel.ReadOnlyAttribute> in the design environment and at run time.</span></span> <span data-ttu-id="1865e-107">Cuando se marca una propiedad con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `true`, el valor de este atributo se establece en el miembro constante <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="1865e-107">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="1865e-108">Para una propiedad marcada con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `false`, el valor es <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="1865e-108">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="1865e-109">Por lo tanto, cuando desee comprobar el valor de este atributo en el código, debe especificar el atributo como <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> o <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1865e-109">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1865e-110">Para obtener más información, consulte [Attributes](~/docs/standard/attributes/index.md) (Atributos).</span><span class="sxs-lookup"><span data-stu-id="1865e-110">For more information, see [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1865e-111">En el ejemplo de código siguiente se marca una propiedad como de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1865e-111">The following code example marks a property as read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 <span data-ttu-id="1865e-112">El ejemplo de código siguiente muestra cómo comprobar el valor de la <xref:System.ComponentModel.ReadOnlyAttribute> para `MyProperty`.</span><span class="sxs-lookup"><span data-stu-id="1865e-112">The next code example shows how to check the value of the <xref:System.ComponentModel.ReadOnlyAttribute> for `MyProperty`.</span></span> <span data-ttu-id="1865e-113">En primer lugar, el código obtiene una <xref:System.ComponentModel.PropertyDescriptorCollection> con todas las propiedades del objeto.</span><span class="sxs-lookup"><span data-stu-id="1865e-113">First, the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span> <span data-ttu-id="1865e-114">A continuación, indiza en la <xref:System.ComponentModel.PropertyDescriptorCollection> obtener `MyProperty`.</span><span class="sxs-lookup"><span data-stu-id="1865e-114">Next, it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span> <span data-ttu-id="1865e-115">A continuación, devuelve los atributos de esta propiedad y los guarda en la variable de atributos.</span><span class="sxs-lookup"><span data-stu-id="1865e-115">Then it returns the attributes for this property and saves them in the attributes variable.</span></span>  
  
 <span data-ttu-id="1865e-116">En el ejemplo se muestra dos formas diferentes de comprobar el valor de la <xref:System.ComponentModel.ReadOnlyAttribute>.</span><span class="sxs-lookup"><span data-stu-id="1865e-116">The example presents two different ways of checking the value of the <xref:System.ComponentModel.ReadOnlyAttribute>.</span></span> <span data-ttu-id="1865e-117">En el segundo fragmento de código, se llama el <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="1865e-117">In the second code fragment, the example calls the <xref:System.ComponentModel.ReadOnlyAttribute.Equals%2A> method.</span></span> <span data-ttu-id="1865e-118">En el último fragmento de código, el ejemplo se usa el <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> propiedad para comprobar el valor.</span><span class="sxs-lookup"><span data-stu-id="1865e-118">In the last code fragment, the example uses the <xref:System.ComponentModel.ReadOnlyAttribute.IsReadOnly%2A> property to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#2)]
 [!code-csharp[Classic ReadOnlyAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#2)]
 [!code-vb[Classic ReadOnlyAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#2)]  
  
 <span data-ttu-id="1865e-119">Si marca una clase con el <xref:System.ComponentModel.ReadOnlyAttribute>, utilice el siguiente ejemplo de código para comprobar el valor.</span><span class="sxs-lookup"><span data-stu-id="1865e-119">If you marked a class with the <xref:System.ComponentModel.ReadOnlyAttribute>, use the following code example to check the value.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CPP/source.cpp#3)]
 [!code-csharp[Classic ReadOnlyAttribute Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/CS/source.cs#3)]
 [!code-vb[Classic ReadOnlyAttribute Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute Example/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.AttributeCollection" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyAttribute (bool isReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ReadOnlyAttribute(bool isReadOnly);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.ReadOnlyAttribute : bool -&gt; System.ComponentModel.ReadOnlyAttribute" Usage="new System.ComponentModel.ReadOnlyAttribute isReadOnly" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isReadOnly"><span data-ttu-id="1865e-120"><see langword="true" /> para mostrar que la propiedad a la que está enlazado este atributo es de sólo lectura; <see langword="false" /> para mostrar que la propiedad es de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="1865e-120"><see langword="true" /> to show that the property this attribute is bound to is read-only; <see langword="false" /> to show that the property is read/write.</span></span></param>
        <summary><span data-ttu-id="1865e-121">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="1865e-121">Initializes a new instance of the <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1865e-122">Los miembros marcados con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `true` o que no tienen un `Set` método no se puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="1865e-122">Members that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true` or that do not have a `Set` method cannot be changed.</span></span> <span data-ttu-id="1865e-123">Los miembros que no tienen este atributo o que están marcados con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `false` son de lectura y escritura, y puede cambiarse.</span><span class="sxs-lookup"><span data-stu-id="1865e-123">Members that do not have this attribute or that are marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false` are read/write, and they can be changed.</span></span> <span data-ttu-id="1865e-124">De manera predeterminada, es <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="1865e-124">The default is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1865e-125">Cuando se marca una propiedad con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `true`, el valor de este atributo se establece en el miembro constante <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="1865e-125">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="1865e-126">Para una propiedad marcada con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `false`, el valor es <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="1865e-126">For a property marked with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value is <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="1865e-127">Por lo tanto, cuando desee comprobar el valor de este atributo en el código, debe especificar el atributo como <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> o <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1865e-127">Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType> or <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1865e-128">En el ejemplo de código siguiente se marca una propiedad como de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1865e-128">The following code example marks a property as read-only.</span></span> <span data-ttu-id="1865e-129">Este código crea un nuevo <xref:System.ComponentModel.ReadOnlyAttribute>, establece su valor en <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>y lo enlaza a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="1865e-129">This code creates a new <xref:System.ComponentModel.ReadOnlyAttribute>, sets its value to <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>, and binds it to the property.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.ReadOnlyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.ReadOnlyAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1865e-130">Especifica el valor predeterminado de <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, que es <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (es decir, la propiedad a la que está enlazado este atributo es de lectura y escritura).</span><span class="sxs-lookup"><span data-stu-id="1865e-130">Specifies the default value for the <see cref="T:System.ComponentModel.ReadOnlyAttribute" />, which is <see cref="F:System.ComponentModel.ReadOnlyAttribute.No" /> (that is, the property this attribute is bound to is read/write).</span></span> <span data-ttu-id="1865e-131">Este campo <see langword="static" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1865e-131">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1865e-132">Cuando se marca una propiedad con este valor, este atributo se establece en el miembro constante <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="1865e-132">When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="1865e-133">Por lo tanto, cuando desee comprobar si el atributo está establecido en este valor en el código, debe especificar el atributo como <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1865e-133">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="readOnlyAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1865e-134">Otro objeto con el que se va a realizar la comparación.</span><span class="sxs-lookup"><span data-stu-id="1865e-134">Another object to compare to.</span></span></param>
        <summary><span data-ttu-id="1865e-135">Indica si esta instancia y un objeto especificado son iguales.</span><span class="sxs-lookup"><span data-stu-id="1865e-135">Indicates whether this instance and a specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="1865e-136"><see langword="true" /> si <paramref name="value" /> es igual a esta instancia; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1865e-136"><see langword="true" /> if <paramref name="value" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="readOnlyAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1865e-137">Devuelve el código hash de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="1865e-137">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="1865e-138">Código hash para el objeto <see cref="T:System.ComponentModel.ReadOnlyAttribute" /> actual.</span><span class="sxs-lookup"><span data-stu-id="1865e-138">A hash code for the current <see cref="T:System.ComponentModel.ReadOnlyAttribute" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultAttribute">
      <MemberSignature Language="C#" Value="public override bool IsDefaultAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefaultAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ReadOnlyAttribute.IsDefaultAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefaultAttribute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefaultAttribute();" />
      <MemberSignature Language="F#" Value="override this.IsDefaultAttribute : unit -&gt; bool" Usage="readOnlyAttribute.IsDefaultAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1865e-139">Determina si este atributo es el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="1865e-139">Determines if this attribute is the default.</span></span></summary>
        <returns><span data-ttu-id="1865e-140"><see langword="true" /> si el atributo es el valor predeterminado de esta clase de atributos; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1865e-140"><see langword="true" /> if the attribute is the default value for this attribute class; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.ReadOnlyAttribute.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1865e-141">Obtiene un valor que indica si la propiedad a la que está enlazado este atributo es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="1865e-141">Gets a value indicating whether the property this attribute is bound to is read-only.</span></span></summary>
        <value><span data-ttu-id="1865e-142"><see langword="true" /> si la propiedad con la que está enlazado este atributo es de sólo lectura; <see langword="false" /> si es de lectura y escritura.</span><span class="sxs-lookup"><span data-stu-id="1865e-142"><see langword="true" /> if the property this attribute is bound to is read-only; <see langword="false" /> if the property is read/write.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1865e-143">El siguiente código de ejemplo se comprueba para ver si `MyProperty` es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1865e-143">The following code example checks to see whether `MyProperty` is read-only.</span></span> <span data-ttu-id="1865e-144">En primer lugar, el código obtiene los atributos de `MyProperty` haciendo lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="1865e-144">First, the code gets the attributes for `MyProperty` by doing the following:</span></span>  
  
-   <span data-ttu-id="1865e-145">Recuperar un <xref:System.ComponentModel.PropertyDescriptorCollection> con todas las propiedades del objeto.</span><span class="sxs-lookup"><span data-stu-id="1865e-145">Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.</span></span>  
  
-   <span data-ttu-id="1865e-146">Indexación en el <xref:System.ComponentModel.PropertyDescriptorCollection> obtener `MyProperty`.</span><span class="sxs-lookup"><span data-stu-id="1865e-146">Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.</span></span>  
  
-   <span data-ttu-id="1865e-147">Guardando los atributos de esta propiedad en la variable de atributos.</span><span class="sxs-lookup"><span data-stu-id="1865e-147">Saving the attributes for this property in the attributes variable.</span></span>  
  
 <span data-ttu-id="1865e-148">A continuación, el código establece `myAttribute` al valor de la <xref:System.ComponentModel.ReadOnlyAttribute> en el <xref:System.ComponentModel.AttributeCollection> y comprueba si la propiedad es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1865e-148">Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.ReadOnlyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is read-only.</span></span>  
  
 [!code-cpp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic ReadOnlyAttribute.IsReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ReadOnlyAttribute.IsReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="T:System.Attribute" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.AttributeCollection" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
    <Member MemberName="No">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute No;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute No" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly No As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ No;" />
      <MemberSignature Language="F#" Value=" staticval mutable No : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.No" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1865e-149">Especifica que la propiedad a la que está enlazado este atributo es de lectura y escritura y se puede modificar.</span><span class="sxs-lookup"><span data-stu-id="1865e-149">Specifies that the property this attribute is bound to is read/write and can be modified.</span></span> <span data-ttu-id="1865e-150">Este campo <see langword="static" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1865e-150">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1865e-151">Este campo es el valor predeterminado para este atributo.</span><span class="sxs-lookup"><span data-stu-id="1865e-151">This field is the default setting for this attribute.</span></span>  
  
 <span data-ttu-id="1865e-152">Cuando se marca una propiedad con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `false`, el valor de este atributo se establece en el miembro constante <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span><span class="sxs-lookup"><span data-stu-id="1865e-152">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.No>.</span></span> <span data-ttu-id="1865e-153">Por lo tanto, cuando desee comprobar si el atributo está establecido en este valor en el código, debe especificar el atributo como <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1865e-153">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.No?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      </Docs>
    </Member>
    <Member MemberName="Yes">
      <MemberSignature Language="C#" Value="public static readonly System.ComponentModel.ReadOnlyAttribute Yes;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.ComponentModel.ReadOnlyAttribute Yes" />
      <MemberSignature Language="DocId" Value="F:System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Yes As ReadOnlyAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::ComponentModel::ReadOnlyAttribute ^ Yes;" />
      <MemberSignature Language="F#" Value=" staticval mutable Yes : System.ComponentModel.ReadOnlyAttribute" Usage="System.ComponentModel.ReadOnlyAttribute.Yes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ReadOnlyAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1865e-154">Especifica que la propiedad a la que está enlazado este atributo es de sólo lectura y no se puede modificar en el explorador de servidores.</span><span class="sxs-lookup"><span data-stu-id="1865e-154">Specifies that the property this attribute is bound to is read-only and cannot be modified in the server explorer.</span></span> <span data-ttu-id="1865e-155">Este campo <see langword="static" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="1865e-155">This <see langword="static" /> field is read-only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1865e-156">Cuando se marca una propiedad con el <xref:System.ComponentModel.ReadOnlyAttribute> establecido en `true`, el valor de este atributo se establece en el miembro constante <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span><span class="sxs-lookup"><span data-stu-id="1865e-156">When you mark a property with the <xref:System.ComponentModel.ReadOnlyAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.ReadOnlyAttribute.Yes>.</span></span> <span data-ttu-id="1865e-157">Por lo tanto, cuando desee comprobar si el atributo está establecido en este valor en el código, debe especificar el atributo como <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1865e-157">Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.ReadOnlyAttribute.Yes?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
        <altmember cref="F:System.ComponentModel.ReadOnlyAttribute.No" />
      </Docs>
    </Member>
  </Members>
</Type>
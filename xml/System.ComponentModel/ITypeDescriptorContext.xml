<Type Name="ITypeDescriptorContext" FullName="System.ComponentModel.ITypeDescriptorContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fe1459e8b08a0b7da2cb531b9bda2003e326dee6" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58743256" /></Metadata><TypeSignature Language="C#" Value="public interface ITypeDescriptorContext : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITypeDescriptorContext implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.ITypeDescriptorContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeDescriptorContext&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeDescriptorContext : IServiceProvider" />
  <TypeSignature Language="F#" Value="type ITypeDescriptorContext = interface&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="77b64-101">Proporciona información contextual sobre un componente, como su contenedor y descriptor de propiedades.</span><span class="sxs-lookup"><span data-stu-id="77b64-101">Provides contextual information about a component, such as its container and property descriptor.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77b64-102">El <xref:System.ComponentModel.ITypeDescriptorContext> interfaz proporciona información contextual sobre un componente.</span><span class="sxs-lookup"><span data-stu-id="77b64-102">The <xref:System.ComponentModel.ITypeDescriptorContext> interface provides contextual information about a component.</span></span> <span data-ttu-id="77b64-103"><xref:System.ComponentModel.ITypeDescriptorContext> se utiliza normalmente en tiempo de diseño para proporcionar información sobre un contenedor en tiempo de diseño.</span><span class="sxs-lookup"><span data-stu-id="77b64-103"><xref:System.ComponentModel.ITypeDescriptorContext> is typically used at design time to provide information about a design-time container.</span></span> <span data-ttu-id="77b64-104">Esta interfaz se utiliza normalmente en la conversión de tipos.</span><span class="sxs-lookup"><span data-stu-id="77b64-104">This interface is commonly used in type conversion.</span></span> <span data-ttu-id="77b64-105">Para obtener información detallada, vea <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="77b64-105">For details, see <xref:System.ComponentModel.TypeConverter>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="77b64-106">No confíe en la presencia de esta interfaz cuando se diseña un convertidor de tipos.</span><span class="sxs-lookup"><span data-stu-id="77b64-106">Do not rely on the presence of this interface when you design a type converter.</span></span> <span data-ttu-id="77b64-107">Si una interfaz determinada, la propiedad o el servicio es necesario, pero no está disponible, el convertidor de tipos debe devolver `null` en lugar de producir una excepción.</span><span class="sxs-lookup"><span data-stu-id="77b64-107">If a particular interface, property, or service is necessary but not available, the type converter should return `null` rather than throw an exception.</span></span> <span data-ttu-id="77b64-108">Pueden devolver propiedades de esta interfaz `null` en cualquier momento, y esto debe planear.</span><span class="sxs-lookup"><span data-stu-id="77b64-108">This interface's properties can return `null` at any time, and you should plan for this.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="77b64-109">En el ejemplo de código siguiente se muestra cómo usar el <xref:System.ComponentModel.ITypeDescriptorContext> interfaz para admitir la conversión de tipos.</span><span class="sxs-lookup"><span data-stu-id="77b64-109">The following code example demonstrates how to use the <xref:System.ComponentModel.ITypeDescriptorContext> interface to support type conversion.</span></span>  
  
 [!code-cpp[InstanceDescriptorSample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/InstanceDescriptorSample/CPP/instancedescriptor.cpp#1)]
 [!code-csharp[InstanceDescriptorSample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/InstanceDescriptorSample/CS/instancedescriptor.cs#1)]
 [!code-vb[InstanceDescriptorSample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/InstanceDescriptorSample/VB/instancedescriptor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public System.ComponentModel.IContainer Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IContainer Container" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As IContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::IContainer ^ Container { System::ComponentModel::IContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : System.ComponentModel.IContainer" Usage="System.ComponentModel.ITypeDescriptorContext.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77b64-110">Obtiene el contenedor que representa esta solicitud <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="77b64-110">Gets the container representing this <see cref="T:System.ComponentModel.TypeDescriptor" /> request.</span></span></summary>
        <value><span data-ttu-id="77b64-111">Interfaz <see cref="T:System.ComponentModel.IContainer" /> con el conjunto de objetos de este objeto <see cref="T:System.ComponentModel.TypeDescriptor" />; de lo contrario, <see langword="null" />, si no hay ningún contenedor o si el objeto <see cref="T:System.ComponentModel.TypeDescriptor" /> no utiliza objetos externos.</span><span class="sxs-lookup"><span data-stu-id="77b64-111">An <see cref="T:System.ComponentModel.IContainer" /> with the set of objects for this <see cref="T:System.ComponentModel.TypeDescriptor" />; otherwise, <see langword="null" /> if there is no container or if the <see cref="T:System.ComponentModel.TypeDescriptor" /> does not use outside objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77b64-112">El <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A> propiedad obtiene el contenedor lógico del componente asociado con el descriptor de tipos.</span><span class="sxs-lookup"><span data-stu-id="77b64-112">The <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A> property gets the logical container of the component associated with the type descriptor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IContainer" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public object Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Instance" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.Instance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Instance As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Instance { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Instance : obj" Usage="System.ComponentModel.ITypeDescriptorContext.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77b64-113">Obtiene el objeto que se conecta a esta solicitud del descriptor de tipos.</span><span class="sxs-lookup"><span data-stu-id="77b64-113">Gets the object that is connected with this type descriptor request.</span></span></summary>
        <value><span data-ttu-id="77b64-114">Objeto que invoca al método en el objeto <see cref="T:System.ComponentModel.TypeDescriptor" />; de lo contrario, <see langword="null" />, si no hay ningún objeto responsable de la llamada.</span><span class="sxs-lookup"><span data-stu-id="77b64-114">The object that invokes the method on the <see cref="T:System.ComponentModel.TypeDescriptor" />; otherwise, <see langword="null" /> if there is no object responsible for the call.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77b64-115">El <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> propiedad obtiene el objeto que invoca la <xref:System.ComponentModel.ITypeDescriptorContext> interfaz.</span><span class="sxs-lookup"><span data-stu-id="77b64-115">The <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> property gets the object that is invoking the <xref:System.ComponentModel.ITypeDescriptorContext> interface.</span></span> <span data-ttu-id="77b64-116">Por ejemplo, si se proporciona un convertidor de tipos un <xref:System.Drawing.Color> para convertir, <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> devuelve la instancia real del control que está usando el <xref:System.Drawing.Color>.</span><span class="sxs-lookup"><span data-stu-id="77b64-116">For example, if a type converter is given a <xref:System.Drawing.Color> to convert, <xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A> returns the actual instance of the control that is using the <xref:System.Drawing.Color>.</span></span> <span data-ttu-id="77b64-117">Puede consultar posteriormente el control para obtener más información acerca de sus servicios y su <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.</span><span class="sxs-lookup"><span data-stu-id="77b64-117">You can subsequently query the control for further information about its services and its <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Component" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public void OnComponentChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnComponentChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnComponentChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanged : unit -&gt; unit" Usage="iTypeDescriptorContext.OnComponentChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77b64-118">Genera el evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />.</span><span class="sxs-lookup"><span data-stu-id="77b64-118">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77b64-119">Use el <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> método para enviar una notificación que una instancia de un objeto ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="77b64-119">Use the <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> method to send notification that an instance of an object has changed.</span></span>  
  
 <span data-ttu-id="77b64-120">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="77b64-120">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="77b64-121">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="77b64-121">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="77b64-122">El método <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="77b64-122">The <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="77b64-123">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="77b64-123">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="77b64-124">Cuando se reemplaza <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> método para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="77b64-124">When overriding <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
        <altmember cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public bool OnComponentChanging ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnComponentChanging() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" />
      <MemberSignature Language="VB.NET" Value="Public Function OnComponentChanging () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnComponentChanging();" />
      <MemberSignature Language="F#" Value="abstract member OnComponentChanging : unit -&gt; bool" Usage="iTypeDescriptorContext.OnComponentChanging " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="77b64-125">Genera el evento <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />.</span><span class="sxs-lookup"><span data-stu-id="77b64-125">Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</span></span></summary>
        <returns><span data-ttu-id="77b64-126"><see langword="true" /> si se puede cambiar este objeto; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="77b64-126"><see langword="true" /> if this object can be changed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="77b64-127">Use el <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> método para enviar la notificación de que una instancia de un objeto está a punto de modificarse.</span><span class="sxs-lookup"><span data-stu-id="77b64-127">Use the <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> method to send notification that an instance of an object is about to be changed.</span></span> <span data-ttu-id="77b64-128">Este método también devuelve un valor que indica si este objeto se puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="77b64-128">This method also returns a value indicating whether this object can be changed.</span></span> <span data-ttu-id="77b64-129">Cuando `false` es devuelto, no cambie el objeto.</span><span class="sxs-lookup"><span data-stu-id="77b64-129">When `false` is returned, do not change the object.</span></span>  
  
 <span data-ttu-id="77b64-130">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="77b64-130">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="77b64-131">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="77b64-131">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="77b64-132">El método <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> también permite que las clases derivadas controlen el evento sin adjuntar ningún delegado.</span><span class="sxs-lookup"><span data-stu-id="77b64-132">The <xref:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="77b64-133">Ésta es la técnica preferida para controlar el evento en una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="77b64-133">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="77b64-134">Cuando se reemplaza <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> método para que los delegados registrados reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="77b64-134">When overriding <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> in a derived class, be sure to call the base class' <see cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanging" /> method so that registered delegates receive the event.</span></span></para></block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" />
        <altmember cref="M:System.ComponentModel.ITypeDescriptorContext.OnComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyDescriptor : System.ComponentModel.PropertyDescriptor" Usage="System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="77b64-135">Obtiene el objeto <see cref="T:System.ComponentModel.PropertyDescriptor" /> que está asociado al elemento de contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="77b64-135">Gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> that is associated with the given context item.</span></span></summary>
        <value><span data-ttu-id="77b64-136">Objeto <see cref="T:System.ComponentModel.PropertyDescriptor" /> que describe el elemento de contexto especificado; de lo contrario, <see langword="null" /> si no hay un objeto <see cref="T:System.ComponentModel.PropertyDescriptor" /> responsable de la llamada.</span><span class="sxs-lookup"><span data-stu-id="77b64-136">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the given context item; otherwise, <see langword="null" /> if there is no <see cref="T:System.ComponentModel.PropertyDescriptor" /> responsible for the call.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>
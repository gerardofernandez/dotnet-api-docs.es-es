<Type Name="TypeDescriptionProvider" FullName="System.ComponentModel.TypeDescriptionProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23912b55bce31e7aec4da3c275f573b11b991f8d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57931238" /></Metadata><TypeSignature Language="C#" Value="public abstract class TypeDescriptionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDescriptionProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeDescriptionProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDescriptionProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeDescriptionProvider abstract" />
  <TypeSignature Language="F#" Value="type TypeDescriptionProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="17986-101">Proporciona metadatos complementarios a la clase <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="17986-101">Provides supplemental metadata to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-102">La <xref:System.ComponentModel.TypeDescriptionProvider> clase extiende dinámicamente la información de tipo asociada con un tipo u objeto agregando, modificando o ocultando características como atributos, propiedades y eventos.</span><span class="sxs-lookup"><span data-stu-id="17986-102">The <xref:System.ComponentModel.TypeDescriptionProvider> class dynamically extends the type information associated with a type or object by adding, modifying, or hiding characteristics such as attributes, properties, and events.</span></span> <span data-ttu-id="17986-103">Puede haber varias clases de proveedor de descripción de tipo que ofrecen los metadatos para un único <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="17986-103">There can be multiple type description provider classes that offer metadata to a single <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
 <span data-ttu-id="17986-104">Hay dos formas de asociar un <xref:System.ComponentModel.TypeDescriptionProvider> con un <xref:System.ComponentModel.TypeDescriptor>:</span><span class="sxs-lookup"><span data-stu-id="17986-104">There are two ways to associate a <xref:System.ComponentModel.TypeDescriptionProvider> with a <xref:System.ComponentModel.TypeDescriptor>:</span></span>  
  
-   <span data-ttu-id="17986-105">En tiempo de diseño, cuando la clase de destino se puede asignar adecuado <xref:System.ComponentModel.TypeDescriptionProviderAttribute> etiqueta.</span><span class="sxs-lookup"><span data-stu-id="17986-105">At design time, when the target class can be assigned the appropriate <xref:System.ComponentModel.TypeDescriptionProviderAttribute> tag.</span></span>  
  
-   <span data-ttu-id="17986-106">En tiempo de ejecución, cuando uno de los <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> métodos de la <xref:System.ComponentModel.TypeDescriptor> puede llamar a la clase.</span><span class="sxs-lookup"><span data-stu-id="17986-106">At run time, when one of the <xref:System.ComponentModel.TypeDescriptor.AddProvider%2A> methods of the <xref:System.ComponentModel.TypeDescriptor> class can be called.</span></span> <span data-ttu-id="17986-107">Estos métodos sobrecargados requieren el objeto de destino o su tipo de clase.</span><span class="sxs-lookup"><span data-stu-id="17986-107">These overloaded methods require either the target object or its class type.</span></span>  
  
 <span data-ttu-id="17986-108">La <xref:System.ComponentModel.TypeDescriptionProvider> clase se basa en un objeto primario del mismo tipo, proporcionado durante la construcción.</span><span class="sxs-lookup"><span data-stu-id="17986-108">The <xref:System.ComponentModel.TypeDescriptionProvider> class relies on a parent object of the same type, supplied during construction.</span></span> <span data-ttu-id="17986-109">Esto permite que las clases que derivan de <xref:System.ComponentModel.CustomTypeDescriptor> para invalidar los métodos de forma selectiva.</span><span class="sxs-lookup"><span data-stu-id="17986-109">This allows classes that derive from <xref:System.ComponentModel.CustomTypeDescriptor> to selectively override methods.</span></span>  
  
 <span data-ttu-id="17986-110">Las instancias de <xref:System.ComponentModel.TypeDescriptionProvider> solo se generan a petición, minimiza el impacto de la información de tipo personalizado en el rendimiento.</span><span class="sxs-lookup"><span data-stu-id="17986-110">Instances of <xref:System.ComponentModel.TypeDescriptionProvider> are only built upon demand, minimizing the impact of custom type information on performance.</span></span>  
  
 <span data-ttu-id="17986-111">Esta clase no puede heredarse.</span><span class="sxs-lookup"><span data-stu-id="17986-111">This class cannot be inherited.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="17986-112">El tipo derivado puede marcarse como <see langword="internal" /> o <see langword="private" />, pero se puede crear una instancia del tipo con el <see cref="T:System.ComponentModel.TypeDescriptor" /> clase.</span><span class="sxs-lookup"><span data-stu-id="17986-112">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span></span> <span data-ttu-id="17986-113">No escriba código inseguro pensando que el llamador es de confianza.</span><span class="sxs-lookup"><span data-stu-id="17986-113">Do not write insecure code by assuming the caller is trusted.</span></span> <span data-ttu-id="17986-114">En su lugar, se supone que los llamadores pueden crear instancias del tipo en confianza parcial.</span><span class="sxs-lookup"><span data-stu-id="17986-114">Assume instead that callers might create instances of your type in partial trust.</span></span></para></block>
    <altmember cref="Overload:System.ComponentModel.TypeDescriptor.AddProvider" />
    <altmember cref="T:System.ComponentModel.TypeDescriptionProviderAttribute" />
    <altmember cref="T:System.ComponentModel.ICustomTypeDescriptor" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17986-115">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span><span class="sxs-lookup"><span data-stu-id="17986-115">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17986-116">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.TypeDescriptionProvider" />.</span><span class="sxs-lookup"><span data-stu-id="17986-116">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-117">Este constructor es equivalente a llamar al otro <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor con un valor de parámetro es `null`.</span><span class="sxs-lookup"><span data-stu-id="17986-117">This constructor is equivalent to calling the other <xref:System.ComponentModel.TypeDescriptionProvider.%23ctor%28System.ComponentModel.TypeDescriptionProvider%29> constructor with a parameter value that is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TypeDescriptionProvider (System.ComponentModel.TypeDescriptionProvider parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.TypeDescriptionProvider parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.#ctor(System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parent As TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TypeDescriptionProvider(System::ComponentModel::TypeDescriptionProvider ^ parent);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.TypeDescriptionProvider : System.ComponentModel.TypeDescriptionProvider -&gt; System.ComponentModel.TypeDescriptionProvider" Usage="new System.ComponentModel.TypeDescriptionProvider parent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="17986-118">Proveedor de descripción de tipo primario.</span><span class="sxs-lookup"><span data-stu-id="17986-118">The parent type description provider.</span></span></param>
        <summary><span data-ttu-id="17986-119">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> con un proveedor de descripción de tipo primario.</span><span class="sxs-lookup"><span data-stu-id="17986-119">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> class using a parent type description provider.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-120">Si el `parent` parámetro es `null`, todos los <xref:System.ComponentModel.TypeDescriptionProvider> métodos devolverán valores predeterminados.</span><span class="sxs-lookup"><span data-stu-id="17986-120">If the `parent` parameter is `null`, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will return default values.</span></span> <span data-ttu-id="17986-121">De lo contrario, todos los <xref:System.ComponentModel.TypeDescriptionProvider> delegarán métodos a los métodos de `parent`.</span><span class="sxs-lookup"><span data-stu-id="17986-121">Otherwise, all <xref:System.ComponentModel.TypeDescriptionProvider> methods will delegate to the methods of `parent`.</span></span>  
  
 <span data-ttu-id="17986-122">La tabla siguiente muestran los valores devueltos de forma predeterminada para <xref:System.ComponentModel.TypeDescriptionProvider> métodos.</span><span class="sxs-lookup"><span data-stu-id="17986-122">The following table shows the default return values for <xref:System.ComponentModel.TypeDescriptionProvider> methods.</span></span>  
  
|<span data-ttu-id="17986-123">Método</span><span class="sxs-lookup"><span data-stu-id="17986-123">Method</span></span>|<span data-ttu-id="17986-124">Valor devuelto predeterminado</span><span class="sxs-lookup"><span data-stu-id="17986-124">Default return value</span></span>|  
|------------|--------------------------|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A>|`null`|  
|<xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A>|<span data-ttu-id="17986-125">Un objeto recién creado mediante una llamada a la <xref:System.Activator.CreateInstance%2A> método.</span><span class="sxs-lookup"><span data-stu-id="17986-125">A newly created object through a call to the <xref:System.Activator.CreateInstance%2A> method.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A>|<span data-ttu-id="17986-126">Una instancia predeterminada de un <xref:System.ComponentModel.CustomTypeDescriptor> clase.</span><span class="sxs-lookup"><span data-stu-id="17986-126">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A>|<span data-ttu-id="17986-127">Una instancia predeterminada de un <xref:System.ComponentModel.CustomTypeDescriptor> clase.</span><span class="sxs-lookup"><span data-stu-id="17986-127">A default instance of a <xref:System.ComponentModel.CustomTypeDescriptor> class.</span></span>|  
|<xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A>|<span data-ttu-id="17986-128">El `objectType` primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="17986-128">The `objectType` first parameter.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.CustomTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (IServiceProvider provider, Type objectType, Type[] argTypes, object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.IServiceProvider provider, class System.Type objectType, class System.Type[] argTypes, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (provider As IServiceProvider, objectType As Type, argTypes As Type(), args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(IServiceProvider ^ provider, Type ^ objectType, cli::array &lt;Type ^&gt; ^ argTypes, cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj&#xA;override this.CreateInstance : IServiceProvider * Type * Type[] * obj[] -&gt; obj" Usage="typeDescriptionProvider.CreateInstance (provider, objectType, argTypes, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IServiceProvider" />
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="argTypes" Type="System.Type[]" />
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="17986-129">Proveedor de servicios opcional.</span><span class="sxs-lookup"><span data-stu-id="17986-129">An optional service provider.</span></span></param>
        <param name="objectType"><span data-ttu-id="17986-130">Tipo de objeto que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="17986-130">The type of object to create.</span></span> <span data-ttu-id="17986-131">Este parámetro nunca es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-131">This parameter is never <see langword="null" />.</span></span></param>
        <param name="argTypes"><span data-ttu-id="17986-132">Matriz opcional de tipos que representan los tipos de parámetro que se van a pasar al constructor del objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-132">An optional array of types that represent the parameter types to be passed to the object's constructor.</span></span> <span data-ttu-id="17986-133">Esta matriz puede ser <see langword="null" /> o de longitud cero.</span><span class="sxs-lookup"><span data-stu-id="17986-133">This array can be <see langword="null" /> or of zero length.</span></span></param>
        <param name="args"><span data-ttu-id="17986-134">Matriz opcional de valores de parámetros que se pasarán al constructor del objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-134">An optional array of parameter values to pass to the object's constructor.</span></span></param>
        <summary><span data-ttu-id="17986-135">Crea un objeto que puede sustituir a otro tipo de datos.</span><span class="sxs-lookup"><span data-stu-id="17986-135">Creates an object that can substitute for another data type.</span></span></summary>
        <returns><span data-ttu-id="17986-136">Objeto <see cref="T:System.Object" /> sustituto.</span><span class="sxs-lookup"><span data-stu-id="17986-136">The substitute <see cref="T:System.Object" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-137">El <xref:System.IServiceProvider> especificado por el `provider` parámetro se pasa el <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> método de la <xref:System.ComponentModel.TypeDescriptor> clase.</span><span class="sxs-lookup"><span data-stu-id="17986-137">The <xref:System.IServiceProvider> specified by the `provider` parameter is passed in by the <xref:System.ComponentModel.TypeDescriptor.CreateInstance%2A?displayProperty=nameWithType> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="17986-138">Si `provider` no `null`, el proveedor de servicios puede usarse por el proveedor de descripción de tipo para obtener contexto adicional sobre la llamada de creación.</span><span class="sxs-lookup"><span data-stu-id="17986-138">If `provider` is not `null`, the service provider can be used by the type description provider to obtain additional context about the creation call.</span></span>  
  
 <span data-ttu-id="17986-139">El <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> método es `virtual` y, de forma predeterminada, devuelve el resultado de la <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> método si `provider` es `null`.</span><span class="sxs-lookup"><span data-stu-id="17986-139">The <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method is `virtual` and, by default, returns the result of the <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType> method if `provider` is `null`.</span></span> <span data-ttu-id="17986-140">Si `provider` es `null`, este método invocará el <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> método del proveedor del elemento primario.</span><span class="sxs-lookup"><span data-stu-id="17986-140">If `provider` is `null`, this method will invoke the <xref:System.ComponentModel.TypeDescriptionProvider.CreateInstance%2A> method of the parent provider.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="17986-141">Si la clase derivada no está interesada en proporcionar una instancia sustituta, simplemente debe llamar a la implementación base.</span><span class="sxs-lookup"><span data-stu-id="17986-141">If the derived class is not interested in providing a substitute instance, it should just call the base implementation.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptor.CreateInstance(System.IServiceProvider,System.Type,System.Type[],System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="GetCache">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary GetCache (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionary GetCache(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetCache(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCache (instance As Object) As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionary ^ GetCache(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetCache : obj -&gt; System.Collections.IDictionary&#xA;override this.GetCache : obj -&gt; System.Collections.IDictionary" Usage="typeDescriptionProvider.GetCache instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="17986-142">Objeto para el que se va a obtener la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="17986-142">The object for which to get the cache.</span></span></param>
        <summary><span data-ttu-id="17986-143">Obtiene una memoria caché por cada objeto, a la que se obtiene acceso como una interfaz <see cref="T:System.Collections.IDictionary" /> de pares de clave y valor.</span><span class="sxs-lookup"><span data-stu-id="17986-143">Gets a per-object cache, accessed as an <see cref="T:System.Collections.IDictionary" /> of key/value pairs.</span></span></summary>
        <returns><span data-ttu-id="17986-144">Interfaz <see cref="T:System.Collections.IDictionary" /> si el objeto proporcionado admite almacenamiento en caché; de lo contrario, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-144">An <see cref="T:System.Collections.IDictionary" /> if the provided object supports caching; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-145">Un <xref:System.ComponentModel.TypeDescriptor> que necesite realizar operaciones complejas en las colecciones de metadatos.</span><span class="sxs-lookup"><span data-stu-id="17986-145">A <xref:System.ComponentModel.TypeDescriptor> may need to perform complex operations on collections of metadata.</span></span> <span data-ttu-id="17986-146">Dado que los tipos no se descargan durante la vida de un dominio, el <xref:System.ComponentModel.TypeDescriptor> clase almacenará automáticamente en caché los resultados de estas operaciones en función de tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-146">Because types are not unloaded for the life of a domain, the <xref:System.ComponentModel.TypeDescriptor> class will automatically cache the results of these operations based on type.</span></span> <span data-ttu-id="17986-147">Sin embargo, algunas operaciones de usar las instancias del objeto activo.</span><span class="sxs-lookup"><span data-stu-id="17986-147">However, some operations use live object instances.</span></span> <span data-ttu-id="17986-148">No se puede almacenar en caché estas operaciones dentro de la <xref:System.ComponentModel.TypeDescriptor> clase porque almacenarlos en memoria caché podrían impedir el objeto recolectado.</span><span class="sxs-lookup"><span data-stu-id="17986-148">These operations cannot be cached within the <xref:System.ComponentModel.TypeDescriptor> class because caching them would prevent the object from being garbage collected.</span></span> <span data-ttu-id="17986-149">En su lugar, el <xref:System.ComponentModel.TypeDescriptor> clase permite que una memoria caché por cada objeto, puede tener acceso como una <xref:System.Collections.IDictionary> de pares clave/valor, que existe en un objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-149">Instead, the <xref:System.ComponentModel.TypeDescriptor> class allows for a per-object cache, accessed as an <xref:System.Collections.IDictionary> of key/value pairs, to exist on an object.</span></span> <span data-ttu-id="17986-150">El <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> método devuelve una instancia de esta caché.</span><span class="sxs-lookup"><span data-stu-id="17986-150">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method returns an instance of this cache.</span></span> <span data-ttu-id="17986-151">El <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> método devolverá `null` si no hay ninguna caché compatible para un objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-151">The <xref:System.ComponentModel.TypeDescriptionProvider.GetCache%2A> method will return `null` if there is no supported cache for an object.</span></span>  
  
 <span data-ttu-id="17986-152">El valor predeterminado <xref:System.ComponentModel.TypeDescriptionProvider> usando <xref:System.ComponentModel.TypeDescriptor> examina el objeto para ver si es un componente basado en el que implementa el <xref:System.ComponentModel.Design.IDictionaryService> interfaz.</span><span class="sxs-lookup"><span data-stu-id="17986-152">The default <xref:System.ComponentModel.TypeDescriptionProvider> used by <xref:System.ComponentModel.TypeDescriptor> examines the object to see if it is a sited component that implements the <xref:System.ComponentModel.Design.IDictionaryService> interface.</span></span> <span data-ttu-id="17986-153">Si el objeto es, usa el servicio de diccionario para almacenar la caché del objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-153">If the object is, it uses the dictionary service to store the object's cache.</span></span> <span data-ttu-id="17986-154">De lo contrario, el objeto devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="17986-154">Otherwise, the object it returns `null`.</span></span> <span data-ttu-id="17986-155">Otros proveedores de descripción de tipo pueden proporcionar su propia implementación aquí.</span><span class="sxs-lookup"><span data-stu-id="17986-155">Other type description providers may provide their own implementation here.</span></span> <span data-ttu-id="17986-156">Por ejemplo, los objetos de dependencia solo pueden adjuntar una propiedad de tipo <xref:System.Collections.IDictionary>.</span><span class="sxs-lookup"><span data-stu-id="17986-156">For example, dependency objects can just attach a property of type <xref:System.Collections.IDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.ComponentModel.Design.IDictionaryService" />
      </Docs>
    </Member>
    <Member MemberName="GetExtendedTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetExtendedTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExtendedTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetExtendedTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetExtendedTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetExtendedTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="17986-157">Objeto para el que se va a obtener el descriptor de tipos extendido.</span><span class="sxs-lookup"><span data-stu-id="17986-157">The object for which to get the extended type descriptor.</span></span></param>
        <summary><span data-ttu-id="17986-158">Obtiene un descriptor de tipos extendido personalizado para el objeto dado.</span><span class="sxs-lookup"><span data-stu-id="17986-158">Gets an extended custom type descriptor for the given object.</span></span></summary>
        <returns><span data-ttu-id="17986-159">Interfaz <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que puede proporcionar metadatos extendidos para el objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-159">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide extended metadata for the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-160">Un descriptor de tipos extendido es un descriptor de tipos personalizado que ofrece propiedades que se agregaron otros objetos a este objeto, pero que no están definidos realmente en el objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-160">An extended type descriptor is a custom type descriptor that offers properties that other objects have added to this object, but that are not actually defined on the object.</span></span> <span data-ttu-id="17986-161">Por ejemplo, en el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modelo de componentes, los objetos que implementan la <xref:System.ComponentModel.IExtenderProvider> interfaz puede adjuntar propiedades a otros objetos que residen en el mismo contenedor lógico.</span><span class="sxs-lookup"><span data-stu-id="17986-161">For example, in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model, objects that implement the <xref:System.ComponentModel.IExtenderProvider> interface can attach properties to other objects that reside in the same logical container.</span></span> <span data-ttu-id="17986-162">Sobrecargado <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> métodos no devuelven un descriptor de tipo que proporciona estas propiedades extendidas adicionales.</span><span class="sxs-lookup"><span data-stu-id="17986-162">The overloaded <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> methods do not return a type descriptor that provides these extra extended properties.</span></span> <span data-ttu-id="17986-163">El <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> método devuelve el conjunto de estas propiedades extendidas.</span><span class="sxs-lookup"><span data-stu-id="17986-163">The <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method returns the set of these extended properties.</span></span> <span data-ttu-id="17986-164">El <xref:System.ComponentModel.TypeDescriptor> combinará automáticamente los resultados de estas dos colecciones de propiedades.</span><span class="sxs-lookup"><span data-stu-id="17986-164">The <xref:System.ComponentModel.TypeDescriptor> will automatically merge the results of these two property collections.</span></span> <span data-ttu-id="17986-165">Mientras el [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] modelo de componentes admite solo las propiedades extendidas, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> puede usarse para los atributos extendidos, así como eventos, si lo admite el proveedor de descripción de tipos.</span><span class="sxs-lookup"><span data-stu-id="17986-165">While the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] component model supports only extended properties, <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> can be used for extended attributes as well as events, if the type description provider supports it.</span></span>  
  
 <span data-ttu-id="17986-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> es `virtual` y, de forma predeterminada, devuelve un descriptor de tipos personalizado que devuelve resultados vacíos si se ha pasado ningún proveedor primario.</span><span class="sxs-lookup"><span data-stu-id="17986-166"><xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> is `virtual` and, by default, returns a custom type descriptor that returns empty results if no parent provider was passed.</span></span> <span data-ttu-id="17986-167">Si se ha pasado un proveedor primario, este método invocará el proveedor primario <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="17986-167">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetExtenderProviders">
      <MemberSignature Language="C#" Value="protected internal virtual System.ComponentModel.IExtenderProvider[] GetExtenderProviders (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.ComponentModel.IExtenderProvider[] GetExtenderProviders(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetExtenderProviders(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetExtenderProviders (instance As Object) As IExtenderProvider()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::ComponentModel::IExtenderProvider ^&gt; ^ GetExtenderProviders(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]&#xA;override this.GetExtenderProviders : obj -&gt; System.ComponentModel.IExtenderProvider[]" Usage="typeDescriptionProvider.GetExtenderProviders instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IExtenderProvider[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="17986-168">Objeto para el que se van a obtener proveedores extensores.</span><span class="sxs-lookup"><span data-stu-id="17986-168">The object to get extender providers for.</span></span></param>
        <summary><span data-ttu-id="17986-169">Obtiene los proveedores extensores del objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="17986-169">Gets the extender providers for the specified object.</span></span></summary>
        <returns><span data-ttu-id="17986-170">Matriz de proveedores extensores para <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="17986-170">An array of extender providers for <paramref name="instance" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17986-171"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-171"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFullComponentName">
      <MemberSignature Language="C#" Value="public virtual string GetFullComponentName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetFullComponentName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetFullComponentName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFullComponentName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetFullComponentName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetFullComponentName : obj -&gt; string&#xA;override this.GetFullComponentName : obj -&gt; string" Usage="typeDescriptionProvider.GetFullComponentName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="17986-172">Componente especificado.</span><span class="sxs-lookup"><span data-stu-id="17986-172">The specified component.</span></span></param>
        <summary><span data-ttu-id="17986-173">Obtiene el nombre del componente especificado o <see langword="null" /> si el componente no tiene nombre.</span><span class="sxs-lookup"><span data-stu-id="17986-173">Gets the name of the specified component, or <see langword="null" /> if the component has no name.</span></span></summary>
        <returns><span data-ttu-id="17986-174">Nombre del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="17986-174">The name of the specified component.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17986-175"><paramref name="component" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-175"><paramref name="component" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetReflectionType">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17986-176">Realiza una reflexión normal en un objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-176">Performs normal reflection against an object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="17986-177">Instancia del tipo (no debe ser <see langword="null" />).</span><span class="sxs-lookup"><span data-stu-id="17986-177">An instance of the type (should not be <see langword="null" />).</span></span></param>
        <summary><span data-ttu-id="17986-178">Realiza una reflexión normal en el objeto indicado.</span><span class="sxs-lookup"><span data-stu-id="17986-178">Performs normal reflection against the given object.</span></span></summary>
        <returns><span data-ttu-id="17986-179">El tipo de reflexión para esta <paramref name="instance" />.</span><span class="sxs-lookup"><span data-stu-id="17986-179">The type of reflection for this <paramref name="instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-180">El <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método es una versión de nivel inferior de la <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="17986-180">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="17986-181">Si no puede encontrarse ningún descriptor de tipos personalizado para un objeto, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> se llama para realizar una reflexión normal en el objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-181">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="17986-182">Utilice esta sobrecarga del método si ha llamado a un miembro del descriptor de tipo que usa una instancia en lugar de un tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-182">Use this method overload if you have called a type descriptor member that uses an instance instead of a type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17986-183"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-183"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public Type GetReflectionType (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetReflectionType(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReflectionType (objectType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetReflectionType(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetReflectionType : Type -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="17986-184">Tipo de objeto para el que va a recuperar la interfaz <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="17986-184">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span></span></param>
        <summary><span data-ttu-id="17986-185">Realiza una reflexión normal en un tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-185">Performs normal reflection against a type.</span></span></summary>
        <returns><span data-ttu-id="17986-186">El tipo de reflexión para esta <paramref name="objectType" />.</span><span class="sxs-lookup"><span data-stu-id="17986-186">The type of reflection for this <paramref name="objectType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-187">El <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método es una versión de nivel inferior de la <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="17986-187">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="17986-188">Si no puede encontrarse ningún descriptor de tipos personalizado para un objeto, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> se llama para realizar una reflexión normal en el objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-188">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 <span data-ttu-id="17986-189">Utilice esta sobrecarga del método si ha llamado a un miembro del descriptor de tipo que utiliza un tipo en lugar de una instancia.</span><span class="sxs-lookup"><span data-stu-id="17986-189">Use this method overload if you have called a type descriptor member that uses a type instead of an instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17986-190"><paramref name="objectType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-190"><paramref name="objectType" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetReflectionType">
      <MemberSignature Language="C#" Value="public virtual Type GetReflectionType (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetReflectionType(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetReflectionType(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReflectionType (objectType As Type, instance As Object) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetReflectionType(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetReflectionType : Type * obj -&gt; Type&#xA;override this.GetReflectionType : Type * obj -&gt; Type" Usage="typeDescriptionProvider.GetReflectionType (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="17986-191">Tipo de objeto para el que va a recuperar la interfaz <see cref="T:System.Reflection.IReflect" />.</span><span class="sxs-lookup"><span data-stu-id="17986-191">The type of object for which to retrieve the <see cref="T:System.Reflection.IReflect" />.</span></span></param>
        <param name="instance"><span data-ttu-id="17986-192">Instancia del tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-192">An instance of the type.</span></span> <span data-ttu-id="17986-193">Puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-193">Can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="17986-194">Realiza una reflexión normal en el objeto indicado con el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="17986-194">Performs normal reflection against the given object with the given type.</span></span></summary>
        <returns><span data-ttu-id="17986-195">El tipo de reflexión para esta <paramref name="objectType" />.</span><span class="sxs-lookup"><span data-stu-id="17986-195">The type of reflection for this <paramref name="objectType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-196">El <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> método es una versión de nivel inferior de la <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="17986-196">The <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method is a lower-level version of the <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span> <span data-ttu-id="17986-197">Si no puede encontrarse ningún descriptor de tipos personalizado para un objeto, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> se llama para realizar una reflexión normal en el objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-197">If no custom type descriptor can be located for an object, <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> is called to perform normal reflection against the object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="17986-198">Este método es un prototipo <see langword="virtual" />y de forma predeterminada devuelve <paramref name="objectType" /> si se ha pasado ningún proveedor primario.</span><span class="sxs-lookup"><span data-stu-id="17986-198">This method is prototyped as <see langword="virtual" />, and by default returns <paramref name="objectType" /> if no parent provider was passed.</span></span> <span data-ttu-id="17986-199">Si se ha pasado un proveedor primario, este método invocará el proveedor primario <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> método.</span><span class="sxs-lookup"><span data-stu-id="17986-199">If a parent provider was passed, this method will invoke the parent provider's <see cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetReflectionType" /> method.</span></span></para></block>
        <altmember cref="Overload:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeType">
      <MemberSignature Language="C#" Value="public virtual Type GetRuntimeType (Type reflectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetRuntimeType(class System.Type reflectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRuntimeType (reflectionType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetRuntimeType(Type ^ reflectionType);" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeType : Type -&gt; Type&#xA;override this.GetRuntimeType : Type -&gt; Type" Usage="typeDescriptionProvider.GetRuntimeType reflectionType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reflectionType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="reflectionType"><span data-ttu-id="17986-200">Tipo que se va a convertir en su equivalente en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="17986-200">The type to convert to its runtime equivalent.</span></span></param>
        <summary><span data-ttu-id="17986-201">Convierte un tipo de reflexión en un tipo en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="17986-201">Converts a reflection type into a runtime type.</span></span></summary>
        <returns><span data-ttu-id="17986-202"><see cref="T:System.Type" /> que representa el equivalente en tiempo de ejecución de <paramref name="reflectionType" />.</span><span class="sxs-lookup"><span data-stu-id="17986-202">A <see cref="T:System.Type" /> that represents the runtime equivalent of <paramref name="reflectionType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-203">El <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> método invierte la <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> hacer una copia de método para convertir un tipo de reflexión en un tipo en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="17986-203">The <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method reverses the <xref:System.ComponentModel.TypeDescriptionProvider.GetReflectionType%2A> method to convert a reflection type back into a runtime type.</span></span> <span data-ttu-id="17986-204">Mediante el <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> método es preferible el <xref:System.Type.UnderlyingSystemType%2A> propiedad, que se utilizó en versiones anteriores para devolver el tipo en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="17986-204">Using the <xref:System.ComponentModel.TypeDescriptionProvider.GetRuntimeType%2A> method is preferred over using the <xref:System.Type.UnderlyingSystemType%2A> property, which was used in earlier versions to return the runtime type.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17986-205"><paramref name="reflectionType" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-205"><paramref name="reflectionType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTypeDescriptor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="17986-206">Obtiene un descriptor de tipos personalizado para el tipo o el objeto indicado.</span><span class="sxs-lookup"><span data-stu-id="17986-206">Gets a custom type descriptor for the given type or object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="17986-207">Instancia del tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-207">An instance of the type.</span></span> <span data-ttu-id="17986-208">Puede ser <see langword="null" /> si no se ha pasado ninguna instancia a la clase <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="17986-208">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="17986-209">Obtiene un descriptor de tipos personalizado para el objeto indicado.</span><span class="sxs-lookup"><span data-stu-id="17986-209">Gets a custom type descriptor for the given object.</span></span></summary>
        <returns><span data-ttu-id="17986-210">Interfaz <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que puede proporcionar metadatos para el tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-210">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17986-211"><paramref name="instance" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-211"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeDescriptor (objectType As Type) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType);" />
      <MemberSignature Language="F#" Value="member this.GetTypeDescriptor : Type -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor objectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="17986-212">Tipo de objeto para el que se va a recuperar el descriptor de tipos.</span><span class="sxs-lookup"><span data-stu-id="17986-212">The type of object for which to retrieve the type descriptor.</span></span></param>
        <summary><span data-ttu-id="17986-213">Obtiene un descriptor de tipos personalizado para el tipo indicado.</span><span class="sxs-lookup"><span data-stu-id="17986-213">Gets a custom type descriptor for the given type.</span></span></summary>
        <returns><span data-ttu-id="17986-214">Interfaz <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que puede proporcionar metadatos para el tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-214">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor (Type objectType, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.ICustomTypeDescriptor GetTypeDescriptor(class System.Type objectType, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypeDescriptor (objectType As Type, instance As Object) As ICustomTypeDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::ICustomTypeDescriptor ^ GetTypeDescriptor(Type ^ objectType, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor&#xA;override this.GetTypeDescriptor : Type * obj -&gt; System.ComponentModel.ICustomTypeDescriptor" Usage="typeDescriptionProvider.GetTypeDescriptor (objectType, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ICustomTypeDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="17986-215">Tipo de objeto para el que se va a recuperar el descriptor de tipos.</span><span class="sxs-lookup"><span data-stu-id="17986-215">The type of object for which to retrieve the type descriptor.</span></span></param>
        <param name="instance"><span data-ttu-id="17986-216">Instancia del tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-216">An instance of the type.</span></span> <span data-ttu-id="17986-217">Puede ser <see langword="null" /> si no se ha pasado ninguna instancia a la clase <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="17986-217">Can be <see langword="null" /> if no instance was passed to the <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="17986-218">Obtiene un descriptor de tipos personalizado para el tipo y el objeto indicados.</span><span class="sxs-lookup"><span data-stu-id="17986-218">Gets a custom type descriptor for the given type and object.</span></span></summary>
        <returns><span data-ttu-id="17986-219">Interfaz <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> que puede proporcionar metadatos para el tipo.</span><span class="sxs-lookup"><span data-stu-id="17986-219">An <see cref="T:System.ComponentModel.ICustomTypeDescriptor" /> that can provide metadata for the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="17986-220">Este método es un prototipo `virtual` y, de forma predeterminada, devuelve un descriptor vacío si se ha pasado ningún proveedor primario.</span><span class="sxs-lookup"><span data-stu-id="17986-220">This method is prototyped as `virtual` and, by default, returns an empty descriptor if no parent provider was passed.</span></span> <span data-ttu-id="17986-221">Si se ha pasado un proveedor primario, este método invocará el proveedor primario <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> método.</span><span class="sxs-lookup"><span data-stu-id="17986-221">If a parent provider was passed, this method will invoke the parent provider's <xref:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="17986-222">El <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> método debe devolver un descriptor de tipos personalizado para el objeto.</span><span class="sxs-lookup"><span data-stu-id="17986-222">The <see cref="M:System.ComponentModel.TypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)" /> method should return a custom type descriptor for the object.</span></span> <span data-ttu-id="17986-223">Si el método no proporciona información de tipo para el objeto, debe devolver <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-223">If the method does not provide type information for the object, it should return <see langword="null" />.</span></span></para></block>
        <altmember cref="M:System.ComponentModel.TypeDescriptionProvider.GetExtendedTypeDescriptor(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsSupportedType">
      <MemberSignature Language="C#" Value="public virtual bool IsSupportedType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSupportedType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeDescriptionProvider.IsSupportedType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSupportedType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsSupportedType : Type -&gt; bool&#xA;override this.IsSupportedType : Type -&gt; bool" Usage="typeDescriptionProvider.IsSupportedType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="17986-224">Tipo cuya compatibilidad se va a probar.</span><span class="sxs-lookup"><span data-stu-id="17986-224">The type to test for compatibility.</span></span></param>
        <summary><span data-ttu-id="17986-225">Obtiene un valor que indica si el tipo especificado es compatible con la descripción de tipos y su cadena de proveedores de descripción de tipos.</span><span class="sxs-lookup"><span data-stu-id="17986-225">Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</span></span></summary>
        <returns><span data-ttu-id="17986-226">Es <see langword="true" /> si <paramref name="type" /> es compatible con la descripción de tipos y su cadena de proveedores de descripción de tipos; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="17986-226"><see langword="true" /> if <paramref name="type" /> is compatible with the type description and its chain of type description providers; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17986-227"><paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17986-227"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
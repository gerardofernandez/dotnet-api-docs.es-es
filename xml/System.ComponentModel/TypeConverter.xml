<Type Name="TypeConverter" FullName="System.ComponentModel.TypeConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23fa8a81e0239bcb3921e94c8dfedd4d5e641b65" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52604240" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TypeConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.TypeConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverter" />
  <TypeSignature Language="F#" Value="type TypeConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e5061-101">Proporciona un modo unificado para convertir los tipos de valores en otros tipos, así como para obtener acceso a valores estándar y a subpropiedades.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5061-101">Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-102">El tipo de convertidor más común es que convierte a y desde una representación de texto.</span><span class="sxs-lookup"><span data-stu-id="e5061-102">The most common type of converter is one that converts to and from a text representation.</span></span> <span data-ttu-id="e5061-103">El convertidor de tipos para una clase está enlazado a la clase con un <xref:System.ComponentModel.TypeConverterAttribute>.</span><span class="sxs-lookup"><span data-stu-id="e5061-103">The type converter for a class is bound to the class with a <xref:System.ComponentModel.TypeConverterAttribute>.</span></span> <span data-ttu-id="e5061-104">A menos que se reemplace este atributo, todas las clases que heredan de esta clase usan el mismo convertidor de tipos como clase base.</span><span class="sxs-lookup"><span data-stu-id="e5061-104">Unless this attribute is overridden, all classes that inherit from this class use the same type converter as the base class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e5061-105">Para fines de tipo general del sistema, no tienen acceso a un convertidor de tipos directamente.</span><span class="sxs-lookup"><span data-stu-id="e5061-105">For general type system purposes, do not access a type converter directly.</span></span> <span data-ttu-id="e5061-106">En su lugar, tener acceso al convertidor apropiado mediante <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="e5061-106">Instead, access the appropriate converter by using <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="e5061-107">Para obtener más información, vea los ejemplos de código proporcionados.</span><span class="sxs-lookup"><span data-stu-id="e5061-107">For more information, see the code examples provided.</span></span>  
  
 <span data-ttu-id="e5061-108">**Tenga en cuenta** para fines XAML, un procesador XAML busca el <xref:System.ComponentModel.TypeConverterAttribute> directamente, en lugar de pasar a través de <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="e5061-108">**Note** For XAML purposes, a XAML processor searches for the <xref:System.ComponentModel.TypeConverterAttribute> directly, instead of going through <xref:System.ComponentModel.TypeDescriptor>.</span></span> <span data-ttu-id="e5061-109">Para los casos donde desee un <xref:System.ComponentModel.TypeDescriptor> instancia desde el código, o donde se crea una instancia compartida en WPF recursos, es aceptable construirlo directamente sin hacer referencia a <xref:System.ComponentModel.TypeDescriptor> u otro sistema de reflexión y el tipo de soporte técnico.</span><span class="sxs-lookup"><span data-stu-id="e5061-109">For cases where you do want a <xref:System.ComponentModel.TypeDescriptor> instance from code, or where you create a shared instance in WPF resources, it is acceptable to construct it directly without referencing <xref:System.ComponentModel.TypeDescriptor> or other reflection and type system support.</span></span>  
  
 <span data-ttu-id="e5061-110">Las clases derivadas de <xref:System.ComponentModel.TypeConverter> se suele hacer referencia como parte de cómo un procesador XAML convierte un valor de texto de inicialización o atributo de marcado (que es intrínsecamente una cadena) y genera un objeto para obtener una representación en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="e5061-110">Classes derived from <xref:System.ComponentModel.TypeConverter> are often referenced as part of how a XAML processor converts an attribute or initialization text value from markup (which is inherently a string) and generates an object for a run-time representation.</span></span> <span data-ttu-id="e5061-111">Los autores de tipo personalizado que tenga intención de admitir un comportamiento de conversión de tipos para XAML normalmente implementan un <xref:System.ComponentModel.TypeConverter> clase que admite su propio único `ConvertFrom` comportamiento de una cadena.</span><span class="sxs-lookup"><span data-stu-id="e5061-111">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports their own unique `ConvertFrom` behavior from a string.</span></span> <span data-ttu-id="e5061-112">Este comportamiento permite la conversión de tipo de la cadena proporcionada como un valor de atributo XAML y proporciona un procesador XAML con la compatibilidad necesaria para crear un objeto de la cadena, por lo que puede producir el objeto en un gráfico de objetos analizado.</span><span class="sxs-lookup"><span data-stu-id="e5061-112">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="e5061-113">Tipos personalizados o los miembros de tipos personalizados que se indican mediante la aplicación <xref:System.ComponentModel.TypeConverterAttribute> a las definiciones, con el atributo hace referencia a la personalizada <xref:System.ComponentModel.TypeConverter> implementación.</span><span class="sxs-lookup"><span data-stu-id="e5061-113">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span> <span data-ttu-id="e5061-114">Para obtener más información, consulte [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e5061-114">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5061-115">El ejemplo de código siguiente muestra cómo crear una instancia de un convertidor de tipos y enlazarla a una clase.</span><span class="sxs-lookup"><span data-stu-id="e5061-115">The following code example shows how to create an instance of a type converter and bind it to a class.</span></span> <span data-ttu-id="e5061-116">La clase que implementa el convertidor, `MyClassConverter`, debe heredar de la <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="e5061-116">The class implementing the converter, `MyClassConverter`, must inherit from the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TypeConverter Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#1)]
 [!code-vb[Classic TypeConverter Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#1)]  
  
 <span data-ttu-id="e5061-117">Cuando tenga una propiedad que tiene una enumeración, compruebe si un valor de enumeración es válido antes de establecer la propiedad.</span><span class="sxs-lookup"><span data-stu-id="e5061-117">When you have a property that has an enumeration, check to see whether an enumeration value is valid before setting the property.</span></span> <span data-ttu-id="e5061-118">El siguiente ejemplo de código requiere que una enumeración denominada `MyPropertyEnum` se ha declarado.</span><span class="sxs-lookup"><span data-stu-id="e5061-118">The next code example requires that an enumeration called `MyPropertyEnum` has been declared.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#2)]
 [!code-csharp[Classic TypeConverter Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#2)]
 [!code-vb[Classic TypeConverter Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#2)]  
  
 <span data-ttu-id="e5061-119">Otro uso del convertidor de tipos común consiste en convertir un objeto en una cadena.</span><span class="sxs-lookup"><span data-stu-id="e5061-119">Another common type converter usage is to convert an object to a string.</span></span> <span data-ttu-id="e5061-120">En el ejemplo de código siguiente se imprime el nombre de la <xref:System.Drawing.Color> almacenado en la variable `c`.</span><span class="sxs-lookup"><span data-stu-id="e5061-120">The following code example prints out the name of the <xref:System.Drawing.Color> stored in the variable `c`.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#3)]
 [!code-csharp[Classic TypeConverter Example#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#3)]
 [!code-vb[Classic TypeConverter Example#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#3)]  
  
 <span data-ttu-id="e5061-121">También puede utilizar un convertidor de tipos para convertir un valor por su nombre, como se muestra en el siguiente ejemplo de código.</span><span class="sxs-lookup"><span data-stu-id="e5061-121">You can also use a type converter to convert a value from its name, as shown in the next code example.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#4](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#4)]
 [!code-csharp[Classic TypeConverter Example#4](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#4)]
 [!code-vb[Classic TypeConverter Example#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#4)]  
  
 <span data-ttu-id="e5061-122">En el siguiente ejemplo de código, puede usar un convertidor de tipos para imprimir el conjunto de valores estándares compatibles con el objeto.</span><span class="sxs-lookup"><span data-stu-id="e5061-122">In the following code example, you can use a type converter to print out the set of standard values that the object supports.</span></span>  
  
 [!code-cpp[Classic TypeConverter Example#5](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic TypeConverter Example/CPP/source.cpp#5)]
 [!code-csharp[Classic TypeConverter Example#5](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic TypeConverter Example/CS/source.cs#5)]
 [!code-vb[Classic TypeConverter Example#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic TypeConverter Example/VB/source.vb#5)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="e5061-123">Heredar de <see cref="T:System.ComponentModel.TypeConverter" /> para implementar sus propios requisitos de conversión.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-123">Inherit from <see cref="T:System.ComponentModel.TypeConverter" /> to implement your own conversion requirements.</span>
        </span>
        <span data-ttu-id="e5061-124">Al heredar de esta clase, puede invalidar los métodos siguientes:</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-124">When you inherit from this class, you can override the following methods:</span>
        </span>
        <span data-ttu-id="e5061-125">-Para admitir la conversión de tipos personalizada, invalide el <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, y <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-125">-   To support custom type conversion, override the <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />, <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />, and <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" /> methods.</span>
        </span>
        <span data-ttu-id="e5061-126">-Para convertir los tipos que se deben volver a crear el objeto para cambiar su valor, reemplace el <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> y <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-126">-   To convert types that must re-create the object to change its value, override the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" /> methods.</span>
        </span>
        <span data-ttu-id="e5061-127">-Para convertir tipos que admiten propiedades, reemplace el <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> y <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-127">-   To convert types that support properties, override the <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> and <see cref="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" /> methods.</span>
        </span>
        <span data-ttu-id="e5061-128">Si la clase que está convirtiendo no tiene propiedades y necesita implementar las propiedades, puede usar el <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> clase como base para implementar los descriptores de propiedad.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-128">If the class you are converting does not have properties, and you need to implement properties, you can use the <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" /> class as a base for implementing the property descriptors.</span>
        </span>
        <span data-ttu-id="e5061-129">Al heredar de <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, debe invalidar el <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> y <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-129">When you inherit from <see cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />, you must override the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> and <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods.</span>
        </span>
        <span data-ttu-id="e5061-130">-Para convertir tipos que admiten valores estándar, reemplace el <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> y <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> métodos.</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-130">-   To convert types that support standard values, override the <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />, <see cref="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" /> and <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> methods.</span>
        </span>
        <block subset="none" type="note">
          <para>
            <span data-ttu-id="e5061-131">El tipo derivado puede marcarse como <see langword="internal" /> o <see langword="private" />, pero se puede crear una instancia del tipo con el <see cref="T:System.ComponentModel.TypeDescriptor" /> clase.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-131">Your derived type might be marked as <see langword="internal" /> or <see langword="private" />, but an instance of your type can be created with the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</span>
            </span>
            <span data-ttu-id="e5061-132">No escriba código inseguro pensando que el llamador es de confianza.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-132">Do not write insecure code by assuming the caller is trusted.</span>
            </span>
            <span data-ttu-id="e5061-133">En su lugar, se supone que los llamadores pueden crear instancias del tipo en confianza parcial.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-133">Assume instead that callers might create instances of your type in partial trust.</span>
            </span>
          </para>
        </block>
        <span data-ttu-id="e5061-134">Para obtener más información sobre los convertidores de tipos para fines generales (que no sean de XAML), consulte [Cómo: implementar un convertidor de tipos](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) o [conversión de tipos generalizada](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span>
        <span class="sxs-lookup">
          <span data-stu-id="e5061-134">For more information about type converters for general (non-XAML) purposes, see [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)) or [Generalized Type Conversion](https://msdn.microsoft.com/library/49253ae6-7657-4810-82ab-1176a6feeada).</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.ComponentModel.TypeConverterAttribute" />
    <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
    <altmember cref="T:System.ComponentModel.TypeConverter.SimplePropertyDescriptor" />
    <altmember cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
      <span data-ttu-id="e5061-135">Información general sobre los convertidores de tipos para XAML</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5061-135">Type Converters for XAML Overview</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1">
      <span data-ttu-id="e5061-136">Atributos CLR relacionados con XAML para los tipos y bibliotecas personalizados</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5061-136">XAML-Related CLR Attributes For Custom Types and Libraries</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4">
      <span data-ttu-id="e5061-137">Definir tipos personalizados para usarlos con los servicios XAML de .NET Framework</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5061-137">Defining Custom Types for Use with .NET Framework XAML Services</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211">
      <span data-ttu-id="e5061-138">Documentación Conceptual de los servicios XAML de NET</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5061-138">NET XAML Services Conceptual Documentation</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5061-139">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-139">Initializes a new instance of the <see cref="T:System.ComponentModel.TypeConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-140">Devuelve si este convertidor puede convertir un objeto de un tipo al tipo de este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-140">Returns whether this converter can convert an object of one type to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public bool CanConvertFrom (Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertFrom(class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertFrom (sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertFrom(Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertFrom : Type -&gt; bool" Usage="typeConverter.CanConvertFrom sourceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sourceType">
          <span data-ttu-id="e5061-141">
            <see cref="T:System.Type" /> que representa el tipo desde el que se quiere convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-141">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-142">Devuelve si este convertidor puede convertir un objeto del tipo dado al tipo de este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-142">Returns whether this converter can convert an object of the given type to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-143">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-143">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-144">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-144">As implemented in this class, this method always returns `false`.</span></span> <span data-ttu-id="e5061-145">Nunca devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="e5061-145">It never returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-146">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-146">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="e5061-147">
            <see cref="T:System.Type" /> que representa el tipo desde el que se quiere convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-147">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-148">Devuelve si este convertidor puede convertir un objeto del tipo especificado al tipo de este convertidor, mediante el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-148">Returns whether this converter can convert an object of the given type to the type of this converter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-149">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-149">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-150">Como se implementa en esta clase, este método devuelve `false`, a menos que `sourceType` es un <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="e5061-150">As implemented in this class, this method returns `false`, unless `sourceType` is an <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-151">Invalide este método para proporcionar sus propios requisitos de conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-151">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="e5061-152">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-152">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="e5061-153">Este parámetro puede ser <see langword="null" />, así que compruébelo siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-153">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="e5061-154">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-154">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-155">Devuelve si este convertidor puede convertir el objeto al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-155">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public bool CanConvertTo (Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanConvertTo(class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanConvertTo (destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanConvertTo(Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.CanConvertTo : Type -&gt; bool" Usage="typeConverter.CanConvertTo destinationType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="destinationType">
          <span data-ttu-id="e5061-156">
            <see cref="T:System.Type" /> que representa el tipo al que se quiere convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-156">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-157">Devuelve si este convertidor puede convertir el objeto al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-157">Returns whether this converter can convert the object to the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-158">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-158">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-159">Si `destinationType` es una cadena, la implementación predeterminada de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="e5061-159">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public virtual bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="typeConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-160">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-160">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="e5061-161">
            <see cref="T:System.Type" /> que representa el tipo al que se quiere convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-161">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-162">Devuelve si este convertidor puede convertir el objeto al tipo especificado, con el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-162">Returns whether this converter can convert the object to the specified type, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-163">
            <see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-163">
              <see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-164">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-164">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-165">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-165">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-166">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-166">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="e5061-167">Si `destinationType` es una cadena, la implementación predeterminada de <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="e5061-167">If `destinationType` is a string, the default implementation of <xref:System.ComponentModel.TypeConverter.CanConvertTo%2A> always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-168">Invalide este método para proporcionar sus propios requisitos de conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-168">Override this method to provide your own conversion requirements.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFrom">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-169">Convierte el valor especificado en el tipo de este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-169">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public object ConvertFrom (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFrom(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFrom (value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFrom(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertFrom : obj -&gt; obj" Usage="typeConverter.ConvertFrom value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e5061-170">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-170">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-171">Convierte el valor especificado en el tipo de este convertidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-171">Converts the given value to the type of this converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-172">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-172">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-173">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-173">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public virtual object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="typeConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-174">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-174">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e5061-175">
            <see cref="T:System.Globalization.CultureInfo" /> que se va a usar como referencia cultural actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-175">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e5061-176">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-176">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-177">Convierte el objeto determinado al tipo de este convertidor usando el contexto especificado y la información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-177">Converts the given object to the type of this converter, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-178">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-178">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-179">Los autores de tipo personalizado que tenga intención de admitir un comportamiento de conversión de tipos para XAML normalmente implementan un <xref:System.ComponentModel.TypeConverter> clase que admita <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportamiento de una cadena.</span><span class="sxs-lookup"><span data-stu-id="e5061-179">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="e5061-180">Este comportamiento permite la conversión de tipo de la cadena proporcionada como un valor de atributo XAML y proporciona un procesador XAML con la compatibilidad necesaria para crear un objeto de la cadena, por lo que puede producir el objeto en un gráfico de objetos analizado.</span><span class="sxs-lookup"><span data-stu-id="e5061-180">This behavior enables type conversion from the string provided as a XAML attribute value and provides a XAML processor with the support needed to create an object from the string, so that the object can be produced in a parsed object graph.</span></span> <span data-ttu-id="e5061-181">Tipos personalizados o los miembros de tipos personalizados que se indican mediante la aplicación <xref:System.ComponentModel.TypeConverterAttribute> a las definiciones, con el atributo hace referencia a la personalizada <xref:System.ComponentModel.TypeConverter> implementación.</span><span class="sxs-lookup"><span data-stu-id="e5061-181">Custom types or members of custom types are indicated by applying <xref:System.ComponentModel.TypeConverterAttribute> to the definitions, with the attribute referencing the custom <xref:System.ComponentModel.TypeConverter> implementation.</span></span>  
  
 <span data-ttu-id="e5061-182">Para fines XAML, no se suelen proporcionar implementaciones de la bifurcación en función de `culture`.</span><span class="sxs-lookup"><span data-stu-id="e5061-182">For XAML purposes, you do not typically provide branching implementations based on `culture`.</span></span> <span data-ttu-id="e5061-183">Esto es porque XAML se precompila en un contexto de entorno de desarrollo y la información específica de la referencia cultural para tiempo de ejecución de XAML no es relevante para la conversión de tipos XAML.</span><span class="sxs-lookup"><span data-stu-id="e5061-183">This is because XAML is precompiled in a development environment context, and culture-specific information for runtime XAML is not relevant for XAML type conversion.</span></span> <span data-ttu-id="e5061-184">Para obtener más información, consulte [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e5061-184">For more information, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-185">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-185">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-186">Invalide este método para proporcionar sus propios requisitos de conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-186">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="e5061-187">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-187">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="e5061-188">Este parámetro puede ser <see langword="null" />, así que compruébelo siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-188">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="e5061-189">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-189">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="e5061-190">Para los modelos de implementación para los convertidores de tipos que se utilizan para admitir XAML y tipos personalizados, vea [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-190">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
          <span data-ttu-id="e5061-191">Información general sobre los convertidores de tipos para XAML</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-191">Type Converters for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-192">Convierte el valor a un tipo de este convertidor, utilizando la referencia cultural invariable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-192">Converts the value to a type of this converter, using the invariant culture.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="e5061-193">
            <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-193">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-194">Convierte la cadena dada al tipo de este convertidor, utilizando la referencia cultural invariable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-194">Converts the given string to the type of this converter, using the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-195">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-195">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-196">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-196">The default implementation always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-197">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-197">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public object ConvertFromInvariantString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromInvariantString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromInvariantString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromInvariantString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromInvariantString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-198">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-198">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="e5061-199">
            <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-199">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-200">Convierte la cadena dada en el tipo de este convertidor, utilizando el contexto especificado y la referencia cultural invariable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-200">Converts the given string to the type of this converter, using the invariant culture and the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-201">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-201">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-202">Se produce una excepción si no se puede convertir la cadena en el objeto apropiado.</span><span class="sxs-lookup"><span data-stu-id="e5061-202">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="e5061-203">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-203">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="e5061-204">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-204">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-205">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-205">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-206">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-206">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-207">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-207">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertFromString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-208">Convierte el texto especificado a un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-208">Converts the specified text to an object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : string -&gt; obj" Usage="typeConverter.ConvertFromString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="e5061-209">Representación de texto del objeto que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-209">The text representation of the object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-210">Convierte el texto especificado a un objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-210">Converts the specified text to an object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-211">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-211">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-212">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-212">The default implementation always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5061-213">Para obtener un ejemplo de esta función, vea el <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="e5061-213">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-214">No se puede convertir la cadena en el objeto apropiado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-214">The string cannot be converted into the appropriate object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-215">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-215">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="e5061-216">
            <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-216">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-217">Convierte el texto dado a un objeto, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-217">Converts the given text to an object, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-218">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-218">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-219">Se produce una excepción si no se puede convertir la cadena en el objeto apropiado.</span><span class="sxs-lookup"><span data-stu-id="e5061-219">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="e5061-220">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-220">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="e5061-221">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-221">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-222">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-222">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-223">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-223">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-224">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-224">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFromString">
      <MemberSignature Language="C#" Value="public object ConvertFromString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertFromString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertFromString (context As ITypeDescriptorContext, culture As CultureInfo, text As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertFromString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::String ^ text);" />
      <MemberSignature Language="F#" Value="member this.ConvertFromString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * string -&gt; obj" Usage="typeConverter.ConvertFromString (context, culture, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-225">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-225">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e5061-226">Objeto <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-226">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="e5061-227">Si se pasa <see langword="null" />, se supone que se va a usar la referencia cultural actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-227">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="e5061-228">
            <see cref="T:System.String" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-228">The <see cref="T:System.String" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-229">Convierte el texto dado a un objeto, utilizando el contexto especificado y la información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-229">Converts the given text to an object, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-230">
            <see cref="T:System.Object" /> que representa el texto convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-230">An <see cref="T:System.Object" /> that represents the converted text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-231">Se produce una excepción si no se puede convertir la cadena en el objeto apropiado.</span><span class="sxs-lookup"><span data-stu-id="e5061-231">An exception is raised if the string cannot be converted into the appropriate object.</span></span> <span data-ttu-id="e5061-232">La implementación predeterminada siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-232">The default implementation always returns `null`.</span></span>  
  
 <span data-ttu-id="e5061-233">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-233">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-234">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-234">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-235">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-235">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-236">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-236">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertTo">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-237">Convierte el objeto de valor dado al tipo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-237">Converts the given value object to the specified type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public object ConvertTo (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertTo(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertTo (value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertTo(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.ConvertTo : obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e5061-238">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-238">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="e5061-239">
            <see cref="T:System.Type" /> al que se va a convertir el parámetro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-239">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-240">Convierte el objeto de valor dado al tipo especificado, utilizando los argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-240">Converts the given value object to the specified type, using the arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-241">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-241">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-242">El tipo más común para convertir a y desde es un objeto de cadena.</span><span class="sxs-lookup"><span data-stu-id="e5061-242">The most common type to convert to and from is a string object.</span></span> <span data-ttu-id="e5061-243">Esta implementación llama <xref:System.Object.ToString%2A> en el objeto, si el objeto es válido y si el tipo de destino es una cadena.</span><span class="sxs-lookup"><span data-stu-id="e5061-243">This implementation calls <xref:System.Object.ToString%2A> on the object, if the object is valid and if the destination type is a string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5061-244">El parámetro <paramref name="destinationType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-244">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-245">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-245">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public virtual object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="typeConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-246">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-246">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e5061-247">Objeto <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-247">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="e5061-248">Si se pasa <see langword="null" />, se supone que se va a usar la referencia cultural actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-248">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e5061-249">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-249">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="e5061-250">
            <see cref="T:System.Type" /> al que se va a convertir el parámetro <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-250">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-251">Convierte el objeto de valor determinado al tipo especificado usando el contexto y la información de referencia cultural especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-251">Converts the given value object to the specified type, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-252">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-252">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-253">Las conversiones de tipos más frecuentes son las conversiones a objetos de cadena y desde objetos de cadena.</span><span class="sxs-lookup"><span data-stu-id="e5061-253">The most common types to convert are to and from a string object.</span></span> <span data-ttu-id="e5061-254">Esta implementación llama <xref:System.Object.ToString%2A> en el objeto si el objeto es válido y si el tipo de destino es una cadena.</span><span class="sxs-lookup"><span data-stu-id="e5061-254">This implementation calls <xref:System.Object.ToString%2A> on the object if the object is valid and if the destination type is a string.</span></span>  
  
 <span data-ttu-id="e5061-255">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-255">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-256">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-256">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-257">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-257">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="e5061-258">Los autores de tipo personalizado que tenga intención de admitir un comportamiento de conversión de tipos para XAML normalmente implementan un <xref:System.ComponentModel.TypeConverter> clase que admita <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> comportamiento de una cadena.</span><span class="sxs-lookup"><span data-stu-id="e5061-258">Custom type authors that intend to support a type conversion behavior for XAML typically implement a <xref:System.ComponentModel.TypeConverter> class that supports <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> behavior from a string.</span></span> <span data-ttu-id="e5061-259">También pueden implementar estos convertidores de tipos <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> para admitir la serialización a XAML.</span><span class="sxs-lookup"><span data-stu-id="e5061-259">These type converters might also implement <xref:System.ComponentModel.TypeConverter.ConvertTo%2A> to support serialization back to XAML.</span></span>  
  
 <span data-ttu-id="e5061-260">Algunos escenarios de serialización de XAML no se pueden resolver adecuadamente con <xref:System.ComponentModel.TypeConverter> por sí solo.</span><span class="sxs-lookup"><span data-stu-id="e5061-260">Some XAML serialization scenarios cannot be adequately addressed with <xref:System.ComponentModel.TypeConverter> alone.</span></span> <span data-ttu-id="e5061-261">En estos casos, puede ser necesario definir también una <xref:System.Windows.Markup.ValueSerializer> que controla los casos de serialización que de lo contrario se controlaría desde <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span><span class="sxs-lookup"><span data-stu-id="e5061-261">In these cases, it may be necessary to also define a <xref:System.Windows.Markup.ValueSerializer> that handles the serialization cases that would otherwise be handled by <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>.</span></span> <span data-ttu-id="e5061-262">Para obtener más información, vea <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="e5061-262">For more information, see <xref:System.Windows.Markup.ValueSerializer>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e5061-263">El parámetro <paramref name="destinationType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-263">The <paramref name="destinationType" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-264">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-264">The conversion cannot be performed.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-265">Invalide este método para proporcionar sus propios requisitos de conversión.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-265">Override this method to provide your own conversion requirements.</span>
            </span>
            <span data-ttu-id="e5061-266">Para los modelos de implementación para los convertidores de tipos que se utilizan para admitir XAML y tipos personalizados, vea [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-266">For implementation patterns for type converters that are used to support XAML and custom types, see [Type Converters for XAML Overview](~/docs/framework/xaml-services/type-converters-for-xaml-overview.md).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <related type="Article" href="https://msdn.microsoft.com/library/51a65860-efcb-4fe0-95a0-1c679cde66b7">
          <span data-ttu-id="e5061-267">Información general sobre los convertidores de tipos para XAML</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-267">Type Converters for XAML Overview</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToInvariantString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-268">Convierte el valor especificado a una representación de cadena invariable de la referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-268">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : obj -&gt; string" Usage="typeConverter.ConvertToInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e5061-269">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-269">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-270">Convierte el valor especificado a una representación de cadena invariable de la referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-270">Converts the specified value to a culture-invariant string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-271">Una clase <see cref="T:System.String" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-271">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-272">El `context` parámetro puede usarse para extraer información adicional sobre el entorno desde el que se está invocando este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-272">The `context` parameter can be used to extract additional information about the environment from which this converter is being invoked.</span></span> <span data-ttu-id="e5061-273">Puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-273">This can be `null`, so always check.</span></span> <span data-ttu-id="e5061-274">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-274">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="e5061-275">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="e5061-275">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-276">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-276">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToInvariantString">
      <MemberSignature Language="C#" Value="public string ConvertToInvariantString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToInvariantString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToInvariantString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToInvariantString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToInvariantString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToInvariantString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-277">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-277">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e5061-278">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-278">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-279">Convierte el valor especificado a una representación de cadena invariable de la referencia cultural, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-279">Converts the specified value to a culture-invariant string representation, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-280">Una clase <see cref="T:System.String" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-280">A <see cref="T:System.String" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-281">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-281">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-282">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-282">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-283">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-283">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="e5061-284">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="e5061-284">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-285">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-285">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConvertToString">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-286">Convierte el valor especificado a una representación de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-286">Converts the specified value to a string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : obj -&gt; string" Usage="typeConverter.ConvertToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e5061-287">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-287">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-288">Convierte el valor especificado a una representación de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-288">Converts the specified value to a string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-289">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-289">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-290">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="e5061-290">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5061-291">Para obtener un ejemplo de esta función, vea el <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="e5061-291">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-292">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-292">The conversion cannot be performed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * obj -&gt; string" Usage="typeConverter.ConvertToString (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-293">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-293">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e5061-294">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-294">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-295">Convierte el valor dado a una representación de cadena, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-295">Converts the given value to a string representation, using the given context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-296">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-296">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-297">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-297">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-298">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-298">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-299">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-299">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="e5061-300">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="e5061-300">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-301">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-301">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="ConvertToString">
      <MemberSignature Language="C#" Value="public string ConvertToString (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ConvertToString(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToString (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ConvertToString(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.ConvertToString : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; string" Usage="typeConverter.ConvertToString (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-302">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-302">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e5061-303">Objeto <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-303">A <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="e5061-304">Si se pasa <see langword="null" />, se supone que se va a usar la referencia cultural actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-304">If <see langword="null" /> is passed, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e5061-305">
            <see cref="T:System.Object" /> que se va a convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-305">The <see cref="T:System.Object" /> to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-306">Convierte el valor dado a una representación de cadena, utilizando el contexto especificado y la información de referencia cultural.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-306">Converts the given value to a string representation, using the specified context and culture information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-307">
            <see cref="T:System.Object" /> que representa el valor convertido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-307">An <see cref="T:System.Object" /> that represents the converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-308">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-308">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-309">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-309">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-310">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-310">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="e5061-311">Dependiendo de la implementación del formateador de valor, es posible pasar la cadena devuelta en el formateador de valor para volver a crear una instancia del objeto.</span><span class="sxs-lookup"><span data-stu-id="e5061-311">Depending on the implementation of the value formatter, it might be possible to pass the returned string back into the value formatter to re-create an instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-312">No se puede realizar la conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-312">The conversion cannot be performed.</span>
          </span>
        </exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-313">Vuelve a crear un <see cref="T:System.Object" /> dado un conjunto de valores de propiedad del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-313">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object CreateInstance(class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ CreateInstance(System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance propertyValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="propertyValues">
          <span data-ttu-id="e5061-314">
            <see cref="T:System.Collections.IDictionary" /> que representa un diccionario de nuevos valores de propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-314">An <see cref="T:System.Collections.IDictionary" /> that represents a dictionary of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-315">Vuelve a crear un <see cref="T:System.Object" /> dado un conjunto de valores de propiedad del objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-315">Re-creates an <see cref="T:System.Object" /> given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-316">Clase <see cref="T:System.Object" /> que representa la interfaz <see cref="T:System.Collections.IDictionary" /> especificada o <see langword="null" /> si no se puede crear el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-316">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="e5061-317">Este método devuelve siempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-317">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-318">Utilice este método para objetos que son inmutables, pero para el que desea proporcionar propiedades modificables.</span><span class="sxs-lookup"><span data-stu-id="e5061-318">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 <span data-ttu-id="e5061-319">El diccionario proporcionado por el `propertyValues` parámetro tiene una serie de pares de nombre-valor, uno para cada propiedad devuelta desde <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span><span class="sxs-lookup"><span data-stu-id="e5061-319">The dictionary provided by the `propertyValues` parameter has a series of name/value pairs, one for each property returned from <xref:System.ComponentModel.TypeConverter.GetProperties%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(class System.ComponentModel.ITypeDescriptorContext context, class System.Collections.IDictionary propertyValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (context As ITypeDescriptorContext, propertyValues As IDictionary) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::ComponentModel::ITypeDescriptorContext ^ context, System::Collections::IDictionary ^ propertyValues);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj&#xA;override this.CreateInstance : System.ComponentModel.ITypeDescriptorContext * System.Collections.IDictionary -&gt; obj" Usage="typeConverter.CreateInstance (context, propertyValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propertyValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-320">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-320">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="propertyValues">
          <span data-ttu-id="e5061-321">Interfaz<see cref="T:System.Collections.IDictionary" /> de nuevos valores de propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-321">An <see cref="T:System.Collections.IDictionary" /> of new property values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-322">Crea una instancia del tipo al que está asociado este <see cref="T:System.ComponentModel.TypeConverter" />, mediante el contexto especificado, según un conjunto de valores de propiedad para el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-322">Creates an instance of the type that this <see cref="T:System.ComponentModel.TypeConverter" /> is associated with, using the specified context, given a set of property values for the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-323">Clase <see cref="T:System.Object" /> que representa la interfaz <see cref="T:System.Collections.IDictionary" /> especificada o <see langword="null" /> si no se puede crear el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-323">An <see cref="T:System.Object" /> representing the given <see cref="T:System.Collections.IDictionary" />, or <see langword="null" /> if the object cannot be created.</span>
          </span>
          <span data-ttu-id="e5061-324">Este método devuelve siempre <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-324">This method always returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-325">Utilice este método para objetos que son inmutables, pero para el que desea proporcionar propiedades modificables.</span><span class="sxs-lookup"><span data-stu-id="e5061-325">Use this method for objects that are immutable, but for which you want to provide changeable properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-326">Invalide este método si el tipo que desea convertir debe volver a crear el objeto para cambiar su valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-326">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="e5061-327">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-327">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="e5061-328">Este parámetro puede ser <see langword="null" />, así que compruébelo siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-328">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="e5061-329">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-329">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="e5061-330">El diccionario proporcionado por el <paramref name="propertyValues" /> parámetro tiene una serie de pares de nombre-valor, uno para cada propiedad devuelta desde <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-330">The dictionary provided by the <paramref name="propertyValues" /> parameter has a series of name/value pairs, one for each property returned from <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="GetConvertFromException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertFromException (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertFromException(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertFromException (value As Object) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertFromException(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetConvertFromException : obj -&gt; Exception" Usage="typeConverter.GetConvertFromException value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e5061-331">
            <see cref="T:System.Object" /> que se va a convertir, o <see langword="null" /> si no está disponible el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-331">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-332">Devuelve una excepción que se debe iniciar cuando no se puede realizar una conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-332">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-333">
            <see cref="T:System.Exception" /> que representa la excepción que se va a producir cuando no se puede realizar una conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-333">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-334">Este método la produce automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-334">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetConvertToException">
      <MemberSignature Language="C#" Value="protected Exception GetConvertToException (object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Exception GetConvertToException(object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetConvertToException (value As Object, destinationType As Type) As Exception" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Exception ^ GetConvertToException(System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="member this.GetConvertToException : obj * Type -&gt; Exception" Usage="typeConverter.GetConvertToException (value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e5061-335">
            <see cref="T:System.Object" /> que se va a convertir, o <see langword="null" /> si no está disponible el objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-335">The <see cref="T:System.Object" /> to convert, or <see langword="null" /> if the object is not available.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="e5061-336">
            <see cref="T:System.Type" /> que representa el tipo al que se intenta convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-336">A <see cref="T:System.Type" /> that represents the type the conversion was trying to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-337">Devuelve una excepción que se debe iniciar cuando no se puede realizar una conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-337">Returns an exception to throw when a conversion cannot be performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-338">
            <see cref="T:System.Exception" /> que representa la excepción que se va a producir cuando no se puede realizar una conversión.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-338">An <see cref="T:System.Exception" /> that represents the exception to throw when a conversion cannot be performed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="e5061-339">Este método la produce automáticamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-339">Automatically thrown by this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCreateInstanceSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-340">Devuelve un valor que indica si, al cambiar un valor en este objeto, es necesario llamar al método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-340">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public bool GetCreateInstanceSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetCreateInstanceSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreateInstanceSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetCreateInstanceSupported();" />
      <MemberSignature Language="F#" Value="member this.GetCreateInstanceSupported : unit -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5061-341">Devuelve un valor que indica si, al cambiar un valor en este objeto, es necesario llamar al método <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-341">Returns whether changing a value on this object requires a call to the <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> method to create a new value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-342">
            <see langword="true" /> si al cambiar una propiedad de este objeto es necesario llamar a <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-342">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreateInstanceSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCreateInstanceSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCreateInstanceSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCreateInstanceSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetCreateInstanceSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetCreateInstanceSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-343">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-343">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-344">Devuelve si el cambio de un valor en este objeto requiere una llamada a <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor, mediante el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-344">Returns whether changing a value on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-345">
            <see langword="true" /> si al cambiar una propiedad de este objeto es necesario llamar a <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> para crear un nuevo valor; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-345">
              <see langword="true" /> if changing a property on this object requires a call to <see cref="M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)" /> to create a new value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-346">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-346">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-347">Invalide este método si el tipo que desea convertir debe volver a crear el objeto para cambiar su valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-347">Override this method if the type you want to convert must re-create the object to change its value.</span>
            </span>
            <span data-ttu-id="e5061-348">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-348">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="e5061-349">Este parámetro puede ser <see langword="null" />, así que compruébelo siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-349">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="e5061-350">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-350">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-351">Devuelve una colección de propiedades para el tipo de matriz especificado por el valor del parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-351">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e5061-352">
            <see cref="T:System.Object" /> que especifica el tipo de matriz para el que se van a obtener propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-352">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-353">Devuelve una colección de propiedades para el tipo de matriz especificado por el valor del parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-353">Returns a collection of properties for the type of array specified by the value parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-354">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades expuestas para este tipo de datos o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-354">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-355">De la forma implementada en esta clase, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-355">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="e5061-356">De forma predeterminada, un tipo no devuelve las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e5061-356">By default, a type does not return properties.</span></span> <span data-ttu-id="e5061-357">Una implementación sencilla de este método puede llamar a <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para el tipo de datos correcto.</span><span class="sxs-lookup"><span data-stu-id="e5061-357">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (context As ITypeDescriptorContext, value As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-358">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-358">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e5061-359">
            <see cref="T:System.Object" /> que especifica el tipo de matriz para el que se van a obtener propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-359">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-360">Devuelve una colección de propiedades para el tipo de matriz especificado por valor del parámetro, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-360">Returns a collection of properties for the type of array specified by the value parameter, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-361">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades expuestas para este tipo de datos o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-361">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-362">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-362">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-363">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-363">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-364">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-364">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="e5061-365">De la forma implementada en esta clase, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-365">As implemented in this class, this method always returns `null`.</span></span>  
  
 <span data-ttu-id="e5061-366">De forma predeterminada, un tipo no devuelve las propiedades.</span><span class="sxs-lookup"><span data-stu-id="e5061-366">By default, a type does not return properties.</span></span> <span data-ttu-id="e5061-367">Una implementación sencilla de este método puede llamar a <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> para el tipo de datos correcto.</span><span class="sxs-lookup"><span data-stu-id="e5061-367">An easy implementation of this method can call <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetProperties : System.ComponentModel.ITypeDescriptorContext * obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.GetProperties (context, value, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-368">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-368">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e5061-369">
            <see cref="T:System.Object" /> que especifica el tipo de matriz para el que se van a obtener propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-369">An <see cref="T:System.Object" /> that specifies the type of array for which to get properties.</span>
          </span>
        </param>
        <param name="attributes">
          <span data-ttu-id="e5061-370">Matriz de tipo <see cref="T:System.Attribute" /> que se usa como filtro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-370">An array of type <see cref="T:System.Attribute" /> that is used as a filter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-371">Devuelve una colección de propiedades para el tipo de matriz especificado por el parámetro de valor, usando el contexto y los atributos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-371">Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-372">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades expuestas para este tipo de datos o <see langword="null" /> si no hay propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-372">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that are exposed for this data type, or <see langword="null" /> if there are no properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-373">De la forma implementada en esta clase, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-373">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-374">Invalide este método si el tipo que desea convertir admite propiedades.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-374">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="e5061-375">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-375">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="e5061-376">Este parámetro puede ser <see langword="null" />, así que compruébelo siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-376">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="e5061-377">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-377">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
            <span data-ttu-id="e5061-378">La matriz de atributos se utiliza para filtrar la matriz.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-378">The attributes array is used to filter the array.</span>
            </span>
            <span data-ttu-id="e5061-379">Los atributos pueden tener una combinación de <see cref="T:System.Type" /> y <see cref="T:System.Attribute" /> objetos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-379">The attributes can have a mix of <see cref="T:System.Type" /> and <see cref="T:System.Attribute" /> objects.</span>
            </span>
            <span data-ttu-id="e5061-380">El filtrado se define mediante las siguientes reglas:</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-380">Filtering is defined by the following rules:</span>
            </span>
            <span data-ttu-id="e5061-381">-A <see cref="T:System.Type" /> se trata como un carácter comodín: coincide con una propiedad que tiene el <see cref="T:System.Type" /> en su conjunto de atributos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-381">-   A <see cref="T:System.Type" /> is treated as a wildcard; it matches a property that has the <see cref="T:System.Type" /> in its set of attributes.</span>
            </span>
            <span data-ttu-id="e5061-382">-Si no tiene una propiedad de un <see cref="T:System.Attribute" /> de la misma clase, la propiedad no se incluye en la matriz devuelta.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-382">-   If a property does not have an <see cref="T:System.Attribute" /> of the same class, the property is not included in the returned array.</span>
            </span>
            <span data-ttu-id="e5061-383">-Si el atributo es una instancia de <see cref="T:System.Attribute" />, la propiedad debe ser una coincidencia exacta o no se incluye en la matriz devuelta.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-383">-   If the attribute is an instance of <see cref="T:System.Attribute" />, the property must be an exact match or it is not included in the returned array.</span>
            </span>
            <span data-ttu-id="e5061-384">-If un <see cref="T:System.Attribute" /> se especifica la instancia y es la propiedad predeterminada, se incluye en la matriz devuelta incluso si no hay ninguna instancia de la <see cref="T:System.Attribute" /> en la propiedad.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-384">-   If an <see cref="T:System.Attribute" /> instance is specified and it is the default property, it is included in the returned array even if there is no instance of the <see cref="T:System.Attribute" /> in the property.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertiesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-385">Devuelve si este objeto admite propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-385">Returns whether this object supports properties.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public bool GetPropertiesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetPropertiesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertiesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetPropertiesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetPropertiesSupported : unit -&gt; bool" Usage="typeConverter.GetPropertiesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5061-386">Devuelve si este objeto admite propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-386">Returns whether this object supports properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-387">
            <see langword="true" /> si se ha de llamar a <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> para buscar las propiedades de este objeto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-387">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-388">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-388">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetPropertiesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetPropertiesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-389">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-389">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-390">Devuelve si este objeto admite propiedades, mediante el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-390">Returns whether this object supports properties, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-391">
            <see langword="true" /> si se ha de llamar a <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> para buscar las propiedades de este objeto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-391">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)" /> should be called to find the properties of this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-392">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-392">As implemented in this class, this method always returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-393">Invalide este método si el tipo que desea convertir admite propiedades.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-393">Override this method if the type you want to convert supports properties.</span>
            </span>
            <span data-ttu-id="e5061-394">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-394">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="e5061-395">Este parámetro puede ser <see langword="null" />, así que compruébelo siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-395">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="e5061-396">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-396">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValues">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-397">Devuelve una colección de valores estándar para el tipo de datos para el que está diseñado este convertidor de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-397">Returns a collection of standard values for the data type this type converter is designed for.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetStandardValues ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetStandardValues() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValues () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetStandardValues();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValues : unit -&gt; System.Collections.ICollection" Usage="typeConverter.GetStandardValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5061-398">Devuelve una colección de valores estándar del contexto predeterminado para el tipo de datos para el que está diseñado este convertidor de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-398">Returns a collection of standard values from the default context for the data type this type converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-399">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto estándar de valores válidos o <see langword="null" /> si el tipo de datos no es compatible con un conjunto estándar de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-399">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-400">De la forma implementada en esta clase, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-400">As implemented in this class, this method always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection&#xA;override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="typeConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-401">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato que puede usarse para extraer información adicional sobre el entorno desde el que se invoca este convertidor de tipos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-401">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked.</span>
          </span>
          <span data-ttu-id="e5061-402">Este parámetro o las propiedades de este parámetro pueden ser <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-402">This parameter or properties of this parameter can be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-403">Devuelve una colección de valores estándar para el tipo de datos para el que está diseñado este convertidor de tipos cuando se proporciona con un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-403">Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-404">
            <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto estándar de valores válidos o <see langword="null" /> si el tipo de datos no admite un conjunto estándar de valores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-404">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or <see langword="null" /> if the data type does not support a standard set of values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-405">Como se implementa en <xref:System.ComponentModel.TypeConverter>, este método siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-405">As implemented in <xref:System.ComponentModel.TypeConverter>, this method always returns `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e5061-406">Para obtener un ejemplo de esta función, vea el <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="e5061-406">For an example on this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-407">Invalide este método si el tipo que desea convertir admite valores estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-407">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesExclusive">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-408">Devuelve si la colección de valores estándar devueltos por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-408">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesExclusive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesExclusive() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesExclusive () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesExclusive();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesExclusive : unit -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5061-409">Devuelve si la colección de valores estándar devueltos por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-409">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-410">
            <see langword="true" />si el <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> devuelto por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exhaustiva de posibles valores; <see langword="false" />si hay otros valores posibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-410">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-411">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-411">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="e5061-412">Si la lista es exclusiva, como ocurre en el caso de un tipo de datos de enumeración, entonces no será válido ningún otro valor.</span><span class="sxs-lookup"><span data-stu-id="e5061-412">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="e5061-413">Si la lista no es exclusiva, puede haber otros valores válidos además de la lista de valores estándar que proporciona el método <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="e5061-413">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="e5061-414">Si los valores son exclusivos, la lista devuelta por <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> no debe permitir que se editen estos valores.</span><span class="sxs-lookup"><span data-stu-id="e5061-414">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-415">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-415">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-416">Devuelve si la colección de valores estándar devueltos por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exclusiva de posibles valores, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-416">Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of possible values, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-417">
            <see langword="true" />si el <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> devuelto por <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> es una lista exhaustiva de posibles valores; <see langword="false" />si hay otros valores posibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-417">
              <see langword="true" /> if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exhaustive list of possible values; <see langword="false" /> if other values are possible.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-418">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-418">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="e5061-419">Si la lista es exclusiva, como ocurre en el caso de un tipo de datos de enumeración, entonces no será válido ningún otro valor.</span><span class="sxs-lookup"><span data-stu-id="e5061-419">If the list is exclusive, such as in an enumeration data type, then no other values are valid.</span></span> <span data-ttu-id="e5061-420">Si la lista no es exclusiva, puede haber otros valores válidos además de la lista de valores estándar que proporciona el método <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="e5061-420">If the list is not exclusive, then other valid values might exist in addition to the list of standard values that the <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> method provides.</span></span> <span data-ttu-id="e5061-421">Si los valores son exclusivos, la lista devuelta por <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> no debe permitir que se editen estos valores.</span><span class="sxs-lookup"><span data-stu-id="e5061-421">If the values are exclusive, the list returned by <xref:System.ComponentModel.TypeConverter.GetStandardValues%2A> should not allow these values to be edited.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-422">Invalide este método si el tipo que desea convertir admite valores estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-422">Override this method if the type you want to convert supports standard values.</span>
            </span>
            <span data-ttu-id="e5061-423">Utilice el parámetro <paramref name="context" /> para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-423">Use the <paramref name="context" /> parameter to extract additional information about the environment from which this converter is invoked.</span>
            </span>
            <span data-ttu-id="e5061-424">Este parámetro puede ser <see langword="null" />, así que compruébelo siempre.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-424">This parameter can be <see langword="null" />, so always check it.</span>
            </span>
            <span data-ttu-id="e5061-425">Asimismo, las propiedades del objeto de contexto pueden devolver <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-425">Also, properties on the context object can return <see langword="null" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStandardValuesSupported">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-426">Devuelve si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-426">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public bool GetStandardValuesSupported ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetStandardValuesSupported() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStandardValuesSupported () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetStandardValuesSupported();" />
      <MemberSignature Language="F#" Value="member this.GetStandardValuesSupported : unit -&gt; bool" Usage="typeConverter.GetStandardValuesSupported " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e5061-427">Devuelve si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-427">Returns whether this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-428">Es <see langword="true" /> si debe llamarse a <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-428">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public virtual bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool&#xA;override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="typeConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-429">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-429">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-430">Devuelve si este objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista, utilizando el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-430">Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-431">Es <see langword="true" /> si debe llamarse a <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> para buscar un conjunto común de valores que sea compatible con el objeto; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-431">
              <see langword="true" /> if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-432">De la forma implementada en esta clase, este método siempre devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-432">As implemented in this class, this method always returns `false`.</span></span>  
  
 <span data-ttu-id="e5061-433">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-433">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-434">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-434">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-435">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-435">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-436">Invalide este método si el tipo que desea convertir admite valores estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-436">Override this method if the type you want to convert supports standard values.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsValid">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e5061-437">Devuelve si el valor de objeto dado es válido para este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-437">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.IsValid : obj -&gt; bool" Usage="typeConverter.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e5061-438">Objeto cuya validez se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-438">The object to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-439">Devuelve si el valor de objeto dado es válido para este tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-439">Returns whether the given value object is valid for this type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-440">
            <see langword="true" /> si el valor especificado es válido para este objeto; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-440">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-441">A partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> método detecta las excepciones de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> y <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e5061-441">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="e5061-442">Si el tipo de valor de entrada hace <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> para devolver `false`, o si el valor de entrada hace que <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> para generar una excepción, el <xref:System.ComponentModel.TypeConverter.IsValid%2A> devuelve del método `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-442">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="e5061-443">Para habilitar el comportamiento heredado, inserte las líneas siguientes en el archivo de configuración de la aplicación, por ejemplo, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="e5061-443">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-444">Invalide este método si el tipo que desea convertir admite valores estándar que se pueden validar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-444">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="e5061-445">El <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> método se utiliza para validar un valor dentro del tipo en lugar de determinar si <paramref name="value" /> se puede convertir al tipo especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-445">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="e5061-446">Por ejemplo, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> puede usarse para determinar si un valor determinado es válido para un tipo de enumeración.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-446">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="e5061-447">Para obtener un ejemplo, consulta <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-447">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
            <span data-ttu-id="e5061-448">Puede escribir su propio <c>WillConvertSucceed</c> método ajustando el <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> y <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> métodos en bloques de excepción.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-448">You can write your own <c>WillConvertSucceed</c> method by wrapping the <see cref="Overload:System.ComponentModel.TypeConverter.ConvertTo" /> and <see cref="Overload:System.ComponentModel.TypeConverter.ConvertFrom" /> methods in exception blocks.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValid(class System.ComponentModel.ITypeDescriptorContext context, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValid (context As ITypeDescriptorContext, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValid(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool&#xA;override this.IsValid : System.ComponentModel.ITypeDescriptorContext * obj -&gt; bool" Usage="typeConverter.IsValid (context, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="e5061-449">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-449">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e5061-450">
            <see cref="T:System.Object" /> para comprobar la validez.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-450">The <see cref="T:System.Object" /> to test for validity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-451">Indica si el objeto de valor especificado es válido para este tipo y para el contexto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-451">Returns whether the given value object is valid for this type and for the specified context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-452">
            <see langword="true" /> si el valor especificado es válido para este objeto; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-452">
              <see langword="true" /> if the specified value is valid for this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-453">Utilice el parámetro `context` para extraer información adicional sobre el entorno desde el que se llama a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="e5061-453">Use the `context` parameter to extract additional information about the environment from which this converter is invoked.</span></span> <span data-ttu-id="e5061-454">Este parámetro puede ser `null`, así que compruébelo siempre.</span><span class="sxs-lookup"><span data-stu-id="e5061-454">This parameter can be `null`, so always check it.</span></span> <span data-ttu-id="e5061-455">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="e5061-455">Also, properties on the context object can return `null`.</span></span>  
  
 <span data-ttu-id="e5061-456">A partir de [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.ComponentModel.TypeConverter.IsValid%2A> método detecta las excepciones de la <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> y <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="e5061-456">Starting in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method catches exceptions from the <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> and <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> methods.</span></span> <span data-ttu-id="e5061-457">Si el tipo de valor de entrada hace <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> para devolver `false`, o si el valor de entrada hace que <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> para generar una excepción, el <xref:System.ComponentModel.TypeConverter.IsValid%2A> devuelve del método `false`.</span><span class="sxs-lookup"><span data-stu-id="e5061-457">If the input value type causes <xref:System.ComponentModel.TypeConverter.CanConvertFrom%2A> to return `false`, or if the input value causes <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A> to raise an exception, the <xref:System.ComponentModel.TypeConverter.IsValid%2A> method returns `false`.</span></span>  
  
 <span data-ttu-id="e5061-458">Para habilitar el comportamiento heredado, inserte las líneas siguientes en el archivo de configuración de la aplicación, por ejemplo, application1.exe.config.</span><span class="sxs-lookup"><span data-stu-id="e5061-458">To enable the legacy behavior, insert the following lines into the configuration file of the application, for example, application1.exe.config.</span></span>  
  
```xml  
<configuration>  
  <appSettings>  
    <add key="UseCompatibleTypeConverterBehavior" value="true" />  
  </appSettings>  
</configuration>  
```  
  
   
  
## Examples  
 <span data-ttu-id="e5061-459">Para obtener un ejemplo de esta función, vea el <xref:System.ComponentModel.TypeConverter> clase.</span><span class="sxs-lookup"><span data-stu-id="e5061-459">For an example of this function, see the <xref:System.ComponentModel.TypeConverter> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="e5061-460">Invalide este método si el tipo que desea convertir admite valores estándar que se pueden validar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-460">Override this method if the type you want to convert supports standard values that can be validated.</span>
            </span>
            <span data-ttu-id="e5061-461">El <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> método se utiliza para validar un valor dentro del tipo en lugar de determinar si <paramref name="value" /> se puede convertir al tipo especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-461">The <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> method is used to validate a value within the type rather than to determine if <paramref name="value" /> can be converted to the given type.</span>
            </span>
            <span data-ttu-id="e5061-462">Por ejemplo, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> puede usarse para determinar si un valor determinado es válido para un tipo de enumeración.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-462">For example, <see cref="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" /> can be used to determine if a given value is valid for an enumeration type.</span>
            </span>
            <span data-ttu-id="e5061-463">Para obtener un ejemplo, consulta <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="e5061-463">For an example, see <see cref="T:System.ComponentModel.EnumConverter" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.ComponentModel.EnumConverter" />
      </Docs>
    </Member>
    <Member MemberName="SortProperties">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.PropertyDescriptorCollection SortProperties (System.ComponentModel.PropertyDescriptorCollection props, string[] names);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.ComponentModel.PropertyDescriptorCollection SortProperties(class System.ComponentModel.PropertyDescriptorCollection props, string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function SortProperties (props As PropertyDescriptorCollection, names As String()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ SortProperties(System::ComponentModel::PropertyDescriptorCollection ^ props, cli::array &lt;System::String ^&gt; ^ names);" />
      <MemberSignature Language="F#" Value="member this.SortProperties : System.ComponentModel.PropertyDescriptorCollection * string[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="typeConverter.SortProperties (props, names)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="props" Type="System.ComponentModel.PropertyDescriptorCollection" />
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="props">
          <span data-ttu-id="e5061-464">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades que se van a ordenar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-464">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that has the properties to sort.</span>
          </span>
        </param>
        <param name="names">
          <span data-ttu-id="e5061-465">Matriz de nombres que aparecen en el orden en el que desea que aparezcan las propiedades en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-465">An array of names in the order you want the properties to appear in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e5061-466">Ordena una colección de propiedades.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-466">Sorts a collection of properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e5061-467">
            <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que contiene las propiedades ordenadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5061-467">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the sorted properties.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5061-468">Todas las propiedades de la colección que ya no están en la matriz de nombres se agregan alfabéticamente al final.</span><span class="sxs-lookup"><span data-stu-id="e5061-468">All properties in the collection that are not already in the array of names are added alphabetically to the end.</span></span> <span data-ttu-id="e5061-469">Si el `names` parámetro es una matriz vacía o `null`, todas las propiedades de la colección se ordenan alfabéticamente.</span><span class="sxs-lookup"><span data-stu-id="e5061-469">If the `names` parameter is an empty array or `null`, all the properties in the collection are sorted alphabetically.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="PropertyDescriptor" FullName="System.ComponentModel.PropertyDescriptor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6cabed547af9c8bf6b56294a93caa10480f8a2e3" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58717653" /></Metadata><TypeSignature Language="C#" Value="public abstract class PropertyDescriptor : System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyDescriptor extends System.ComponentModel.MemberDescriptor" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.PropertyDescriptor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyDescriptor&#xA;Inherits MemberDescriptor" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyDescriptor abstract : System::ComponentModel::MemberDescriptor" />
  <TypeSignature Language="F#" Value="type PropertyDescriptor = class&#xA;    inherit MemberDescriptor" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MemberDescriptor</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5e524-101">Proporciona una abstracción de una propiedad en una clase.</span><span class="sxs-lookup"><span data-stu-id="5e524-101">Provides an abstraction of a property on a class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-102">Una descripción de una propiedad consta de un nombre, sus atributos, la clase de componente que está asociada la propiedad y el tipo de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-102">A description of a property consists of a name, its attributes, the component class that the property is associated with, and the type of the property.</span></span>  
  
 <span data-ttu-id="5e524-103"><xref:System.ComponentModel.PropertyDescriptor> Proporciona los siguientes métodos y propiedades:</span><span class="sxs-lookup"><span data-stu-id="5e524-103"><xref:System.ComponentModel.PropertyDescriptor> provides the following properties and methods:</span></span>  
  
-   <span data-ttu-id="5e524-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contiene el <xref:System.ComponentModel.TypeConverter> para esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-104"><xref:System.ComponentModel.PropertyDescriptor.Converter%2A> contains the <xref:System.ComponentModel.TypeConverter> for this property.</span></span>  
  
-   <span data-ttu-id="5e524-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indica si esta propiedad se debe traducir.</span><span class="sxs-lookup"><span data-stu-id="5e524-105"><xref:System.ComponentModel.PropertyDescriptor.IsLocalizable%2A> indicates whether this property should be localized.</span></span>  
  
-   <span data-ttu-id="5e524-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> Devuelve un editor del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="5e524-106"><xref:System.ComponentModel.PropertyDescriptor.GetEditor%2A> returns an editor of the specified type.</span></span>  
  
 <span data-ttu-id="5e524-107"><xref:System.ComponentModel.PropertyDescriptor> También proporciona las siguientes `abstract` propiedades y métodos:</span><span class="sxs-lookup"><span data-stu-id="5e524-107"><xref:System.ComponentModel.PropertyDescriptor> also provides the following `abstract` properties and methods:</span></span>  
  
-   <span data-ttu-id="5e524-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contiene el tipo de componente que está enlazada esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-108"><xref:System.ComponentModel.PropertyDescriptor.ComponentType%2A> contains the type of component this property is bound to.</span></span>  
  
-   <span data-ttu-id="5e524-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indica si esta propiedad es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="5e524-109"><xref:System.ComponentModel.PropertyDescriptor.IsReadOnly%2A> indicates whether this property is read-only.</span></span>  
  
-   <span data-ttu-id="5e524-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> Obtiene el tipo de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-110"><xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> gets the type of the property.</span></span>  
  
-   <span data-ttu-id="5e524-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indica si al restablecer el componente cambia el valor del componente.</span><span class="sxs-lookup"><span data-stu-id="5e524-111"><xref:System.ComponentModel.PropertyDescriptor.CanResetValue%2A> indicates whether resetting the component changes the value of the component.</span></span>  
  
-   <span data-ttu-id="5e524-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> Devuelve el valor actual de la propiedad en un componente.</span><span class="sxs-lookup"><span data-stu-id="5e524-112"><xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> returns the current value of the property on a component.</span></span>  
  
-   <span data-ttu-id="5e524-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> Restablece el valor de esta propiedad del componente.</span><span class="sxs-lookup"><span data-stu-id="5e524-113"><xref:System.ComponentModel.PropertyDescriptor.ResetValue%2A> resets the value for this property of the component.</span></span>  
  
-   <span data-ttu-id="5e524-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> establece el valor del componente en un valor diferente.</span><span class="sxs-lookup"><span data-stu-id="5e524-114"><xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> sets the value of the component to a different value.</span></span>  
  
-   <span data-ttu-id="5e524-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indica si debe conservarse el valor de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-115"><xref:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue%2A> indicates whether the value of this property needs to be persisted.</span></span>  
  
 <span data-ttu-id="5e524-116">Normalmente, el `abstract` miembros se implementan mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="5e524-116">Typically, the `abstract` members are implemented through reflection.</span></span> <span data-ttu-id="5e524-117">Para obtener más información sobre la reflexión, vea los temas de [reflexión](~/docs/framework/reflection-and-codedom/reflection.md).</span><span class="sxs-lookup"><span data-stu-id="5e524-117">For more information about reflection, see the topics in [Reflection](~/docs/framework/reflection-and-codedom/reflection.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5e524-118">El siguiente ejemplo de código se basa en el ejemplo de la <xref:System.ComponentModel.PropertyDescriptorCollection> clase.</span><span class="sxs-lookup"><span data-stu-id="5e524-118">The following code example is built upon the example in the <xref:System.ComponentModel.PropertyDescriptorCollection> class.</span></span> <span data-ttu-id="5e524-119">Imprime la información (categoría, descripción, nombre para mostrar) del texto de un botón en un cuadro de texto.</span><span class="sxs-lookup"><span data-stu-id="5e524-119">It prints the information (category, description, display name) of the text of a button in a text box.</span></span> <span data-ttu-id="5e524-120">Se supone que `button1` y `textbox1` se han creado instancias en un formulario.</span><span class="sxs-lookup"><span data-stu-id="5e524-120">It assumes that `button1` and `textbox1` have been instantiated on a form.</span></span>  
  
 [!code-cpp[PropertyDescriptor#1](~/samples/snippets/cpp/VS_Snippets_Winforms/PropertyDescriptor/CPP/propertydescriptor.cpp#1)]
 [!code-csharp[PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/PropertyDescriptor/CS/propertydescriptor.cs#1)]
 [!code-vb[PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/PropertyDescriptor/VB/propertydescriptor.vb#1)]  
  
 <span data-ttu-id="5e524-121">En el ejemplo de código siguiente se muestra cómo implementar un descriptor de propiedad personalizada que proporciona un contenedor en torno a una propiedad de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="5e524-121">The following code example shows how to implement a custom property descriptor that provides a read-only wrapper around a property.</span></span> <span data-ttu-id="5e524-122">El `SerializeReadOnlyPropertyDescriptor` se utiliza en un diseñador personalizado para proporcionar un descriptor de propiedad de solo lectura para el control <xref:System.Windows.Forms.Control.Size%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-122">The `SerializeReadOnlyPropertyDescriptor` is used in a custom designer to provide a read-only property descriptor for the control's <xref:System.Windows.Forms.Control.Size%2A> property.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/SerializeReadOnlyPropertyDescriptor.cs#1)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/SerializeReadOnlyPropertyDescriptor.vb#1)]  
  
 <span data-ttu-id="5e524-123">Ejemplos de código siguientes muestran cómo usar el `SerializeReadOnlyPropertyDescriptor` en un diseñador personalizado.</span><span class="sxs-lookup"><span data-stu-id="5e524-123">The following code examples show how to use the `SerializeReadOnlyPropertyDescriptor` in a custom designer.</span></span>  
  
 [!code-csharp[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControlDesigner.cs#10)]
 [!code-vb[System.ComponentModel.PropertyDescriptor#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControlDesigner.vb#10)]  
[!code-csharp[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/csharp/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/CS/DemoControl.cs#100)]
[!code-vb[System.ComponentModel.PropertyDescriptor#100](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.ComponentModel.PropertyDescriptor/VB/DemoControl.vb#100)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.MemberDescriptor" />
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.ComponentModel.DefaultValueAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e524-124">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-124">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : System.ComponentModel.MemberDescriptor -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor descr" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="5e524-125"><see cref="T:System.ComponentModel.MemberDescriptor" /> que contiene el nombre de la propiedad y sus atributos.</span><span class="sxs-lookup"><span data-stu-id="5e524-125">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that contains the name of the property and its attributes.</span></span></param>
        <summary><span data-ttu-id="5e524-126">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.PropertyDescriptor" /> con el nombre y los atributos del <see cref="T:System.ComponentModel.MemberDescriptor" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="5e524-126">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name and attributes in the specified <see cref="T:System.ComponentModel.MemberDescriptor" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.MemberDescriptor descr, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (descr As MemberDescriptor, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::ComponentModel::MemberDescriptor ^ descr, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : System.ComponentModel.MemberDescriptor * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor (descr, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descr" Type="System.ComponentModel.MemberDescriptor" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="descr"><span data-ttu-id="5e524-127"><see cref="T:System.ComponentModel.MemberDescriptor" /> que contiene el nombre del miembro y sus atributos.</span><span class="sxs-lookup"><span data-stu-id="5e524-127">A <see cref="T:System.ComponentModel.MemberDescriptor" /> containing the name of the member and its attributes.</span></span></param>
        <param name="attrs"><span data-ttu-id="5e524-128">Matriz <see cref="T:System.Attribute" /> que contiene los atributos que se desea asociar a la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-128">An <see cref="T:System.Attribute" /> array containing the attributes you want to associate with the property.</span></span></param>
        <summary><span data-ttu-id="5e524-129">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.PropertyDescriptor" /> con el nombre del <see cref="T:System.ComponentModel.MemberDescriptor" /> especificado y los atributos de <see cref="T:System.ComponentModel.MemberDescriptor" /> y la matriz <see cref="T:System.Attribute" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-129">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the name in the specified <see cref="T:System.ComponentModel.MemberDescriptor" /> and the attributes in both the <see cref="T:System.ComponentModel.MemberDescriptor" /> and the <see cref="T:System.Attribute" /> array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-130">Este constructor agrega los atributos de la <xref:System.Attribute> matriz a los atributos de la <xref:System.ComponentModel.MemberDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="5e524-130">This constructor appends the attributes in the <xref:System.Attribute> array to the attributes in the <xref:System.ComponentModel.MemberDescriptor>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.MemberDescriptor" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyDescriptor (string name, Attribute[] attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name, class System.Attribute[] attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.#ctor(System.String,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String, attrs As Attribute())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyDescriptor(System::String ^ name, cli::array &lt;Attribute ^&gt; ^ attrs);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.PropertyDescriptor : string * Attribute[] -&gt; System.ComponentModel.PropertyDescriptor" Usage="new System.ComponentModel.PropertyDescriptor (name, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5e524-131">Nombre de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-131">The name of the property.</span></span></param>
        <param name="attrs"><span data-ttu-id="5e524-132">Matriz de tipo <see cref="T:System.Attribute" /> que contiene los atributos de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-132">An array of type <see cref="T:System.Attribute" /> that contains the property attributes.</span></span></param>
        <summary><span data-ttu-id="5e524-133">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.PropertyDescriptor" /> con el nombre y los atributos especificados.</span><span class="sxs-lookup"><span data-stu-id="5e524-133">Initializes a new instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class with the specified name and attributes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="AddValueChanged">
      <MemberSignature Language="C#" Value="public virtual void AddValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddValueChanged : obj * EventHandler -&gt; unit&#xA;override this.AddValueChanged : obj * EventHandler -&gt; unit" Usage="propertyDescriptor.AddValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-134">Componente para el cual se va a agregar el controlador.</span><span class="sxs-lookup"><span data-stu-id="5e524-134">The component to add the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="5e524-135">Delegado que se va a agregar como agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="5e524-135">The delegate to add as a listener.</span></span></param>
        <summary><span data-ttu-id="5e524-136">Habilita la notificación a otros objetos cuando cambia esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-136">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e524-137"><paramref name="component" /> o <paramref name="handler" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-137"><paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CanResetValue">
      <MemberSignature Language="C#" Value="public abstract bool CanResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CanResetValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool CanResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member CanResetValue : obj -&gt; bool" Usage="propertyDescriptor.CanResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-138">Componente cuya capacidad de restablecerse se va a probar.</span><span class="sxs-lookup"><span data-stu-id="5e524-138">The component to test for reset capability.</span></span></param>
        <summary><span data-ttu-id="5e524-139">Cuando se reemplaza en una clase derivada, devuelve si al restablecer un objeto cambia su valor.</span><span class="sxs-lookup"><span data-stu-id="5e524-139">When overridden in a derived class, returns whether resetting an object changes its value.</span></span></summary>
        <returns><span data-ttu-id="5e524-140"><see langword="true" /> si al restablecer el componente cambia su valor; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-140"><see langword="true" /> if resetting the component changes its value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-141">Normalmente, este método se implementa mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="5e524-141">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e524-142">Cuando se invalida en una clase derivada, este método busca un <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-142">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="5e524-143">Si encuentra uno, compara el valor del atributo con el valor actual de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-143">If it finds one, it compares the value of the attribute with the property's current value.</span></span> <span data-ttu-id="5e524-144">Devuelve <see langword="true" /> cuando el valor predeterminado no coincide con el valor la propiedad actual.</span><span class="sxs-lookup"><span data-stu-id="5e524-144">It returns <see langword="true" /> when the default value does not match the property's current value.</span></span> <span data-ttu-id="5e524-145">Si este método no se puede encontrar un <see cref="T:System.ComponentModel.DefaultValueAttribute" />, busca un método "ShouldPersistMyProperty" que se debe implementar por sí mismo.</span><span class="sxs-lookup"><span data-stu-id="5e524-145">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldPersistMyProperty" method that you need to implement yourself.</span></span> <span data-ttu-id="5e524-146">Si lo encuentra, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> devuelve lo que devuelve "ShouldPersistMyProperty".</span><span class="sxs-lookup"><span data-stu-id="5e524-146">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns what "ShouldPersistMyProperty" returns.</span></span> <span data-ttu-id="5e524-147">En caso contrario, busca un método "ResetMyProperty" que se debe implementar por sí mismo.</span><span class="sxs-lookup"><span data-stu-id="5e524-147">Otherwise, it looks for a "ResetMyProperty" method that you need to implement yourself.</span></span> <span data-ttu-id="5e524-148">Si lo encuentra, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> devuelve <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-148">If this is found, <see cref="M:System.ComponentModel.PropertyDescriptor.CanResetValue(System.Object)" /> returns <see langword="true" />.</span></span> <span data-ttu-id="5e524-149">Si no encuentra un <see cref="T:System.ComponentModel.DefaultValueAttribute" />, un método "ShouldPersistMyProperty", o un método "ResetMyProperty", entonces devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-149">If it cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, a "ShouldPersistMyProperty" method, or a "ResetMyProperty" method, then it returns <see langword="false" />.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ComponentType">
      <MemberSignature Language="C#" Value="public abstract Type ComponentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ComponentType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ComponentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ComponentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComponentType : Type" Usage="System.ComponentModel.PropertyDescriptor.ComponentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e524-150">Cuando se reemplaza en una clase derivada, obtiene el tipo de componente al que está enlazada esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-150">When overridden in a derived class, gets the type of the component this property is bound to.</span></span></summary>
        <value><span data-ttu-id="5e524-151"><see cref="T:System.Type" /> que representa el tipo de componente al que está enlazada esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-151">A <see cref="T:System.Type" /> that represents the type of component this property is bound to.</span></span> <span data-ttu-id="5e524-152">Cuando se llama al método <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> o al método <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />, el objeto especificado puede ser una instancia de este tipo.</span><span class="sxs-lookup"><span data-stu-id="5e524-152">When the <see cref="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" /> or <see cref="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" /> methods are invoked, the object specified might be an instance of this type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-153">Normalmente, esta propiedad se implementa mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="5e524-153">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.TypeConverter Converter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.TypeConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Converter As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::TypeConverter ^ Converter { System::ComponentModel::TypeConverter ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Converter : System.ComponentModel.TypeConverter" Usage="System.ComponentModel.PropertyDescriptor.Converter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e524-154">Obtiene el convertidor de tipos de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-154">Gets the type converter for this property.</span></span></summary>
        <value><span data-ttu-id="5e524-155"><see cref="T:System.ComponentModel.TypeConverter" /> que se utiliza para convertir el <see cref="T:System.Type" /> de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-155">A <see cref="T:System.ComponentModel.TypeConverter" /> that is used to convert the <see cref="T:System.Type" /> of this property.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected object CreateInstance (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object CreateInstance(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.CreateInstance(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ CreateInstance(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : Type -&gt; obj" Usage="propertyDescriptor.CreateInstance type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5e524-156"><see cref="T:System.Type" /> que representa el tipo que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="5e524-156">A <see cref="T:System.Type" /> that represents the type to create.</span></span></param>
        <summary><span data-ttu-id="5e524-157">Crea una instancia del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="5e524-157">Creates an instance of the specified type.</span></span></summary>
        <returns><span data-ttu-id="5e524-158">Nueva instancia del tipo.</span><span class="sxs-lookup"><span data-stu-id="5e524-158">A new instance of the type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> Busca un constructor que toma el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="5e524-159"><xref:System.ComponentModel.PropertyDescriptor.CreateInstance%2A> looks for a constructor that takes the specified type.</span></span> <span data-ttu-id="5e524-160">Si encuentra un constructor, se pasa el tipo de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-160">If it finds a constructor, the type of the property is passed in.</span></span>  
  
 <span data-ttu-id="5e524-161">Convertidores y editores de usar este método para crear versiones de un componente.</span><span class="sxs-lookup"><span data-stu-id="5e524-161">Converters and editors use this method to create versions of a component.</span></span> <span data-ttu-id="5e524-162">Este método permite que un componente único para reutilizarse en más de un tipo.</span><span class="sxs-lookup"><span data-stu-id="5e524-162">This method enables a single component to be reused for more than one type.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="5e524-163">Para obtener acceso a los miembros de clase privada y metadatos.</span><span class="sxs-lookup"><span data-stu-id="5e524-163">for access to private class members and metadata.</span></span> <span data-ttu-id="5e524-164">Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="5e524-164">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
        <altmember cref="T:System.Drawing.Design.UITypeEditor" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyDescriptor.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="5e524-165">Objeto que se va a comparar con <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-165">The object to compare to this <see cref="T:System.ComponentModel.PropertyDescriptor" />.</span></span></param>
        <summary><span data-ttu-id="5e524-166">Compara esto con otro objeto para ver si son equivalentes.</span><span class="sxs-lookup"><span data-stu-id="5e524-166">Compares this to another object to see if they are equivalent.</span></span></summary>
        <returns><span data-ttu-id="5e524-167"><see langword="true" /> si los valores son equivalentes; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-167"><see langword="true" /> if the values are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillAttributes">
      <MemberSignature Language="C#" Value="protected override void FillAttributes (System.Collections.IList attributeList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void FillAttributes(class System.Collections.IList attributeList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.FillAttributes(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub FillAttributes (attributeList As IList)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void FillAttributes(System::Collections::IList ^ attributeList);" />
      <MemberSignature Language="F#" Value="override this.FillAttributes : System.Collections.IList -&gt; unit" Usage="propertyDescriptor.FillAttributes attributeList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeList" Type="System.Collections.IList" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="attributeList"><span data-ttu-id="5e524-168"><see cref="T:System.Collections.IList" /> que enumera los atributos de la clase principal.</span><span class="sxs-lookup"><span data-stu-id="5e524-168">An <see cref="T:System.Collections.IList" /> that lists the attributes in the parent class.</span></span> <span data-ttu-id="5e524-169">Inicialmente, se encuentra vacío.</span><span class="sxs-lookup"><span data-stu-id="5e524-169">Initially, this is empty.</span></span></param>
        <summary><span data-ttu-id="5e524-170">Agrega los atributos de <see cref="T:System.ComponentModel.PropertyDescriptor" /> a la lista de atributos especificada en la clase principal.</span><span class="sxs-lookup"><span data-stu-id="5e524-170">Adds the attributes of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the specified list of attributes in the parent class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-171">Para los atributos duplicados, se conservará la última de ellas agregada a la lista.</span><span class="sxs-lookup"><span data-stu-id="5e524-171">For duplicate attributes, the last one added to the list will be kept.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildProperties">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5e524-172">Devuelve un <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-172">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties () As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties();" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : unit -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e524-173">Devuelve el valor predeterminado de <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-173">Returns the default <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</span></span></summary>
        <returns><span data-ttu-id="5e524-174">Colección de descriptor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-174">A collection of property descriptor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-175">Este método pasa `null` tanto para el `instance` parámetro y el `filter` parámetro.</span><span class="sxs-lookup"><span data-stu-id="5e524-175">This method passes `null` for both the `instance` parameter and the `filter` parameter.</span></span>  
  
 <span data-ttu-id="5e524-176">Las propiedades de la `instance` parámetro puede diferir de las propiedades de una clase, porque el contenedor puede agregar o quitar propiedades si el `instance` se basa en un parámetro.</span><span class="sxs-lookup"><span data-stu-id="5e524-176">The properties for the `instance` parameter can differ from the properties of a class, because the container can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="5e524-177">El `filter` puede mezclar parámetro <xref:System.Type> y <xref:System.Attribute> objetos.</span><span class="sxs-lookup"><span data-stu-id="5e524-177">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="5e524-178">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="5e524-178">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="5e524-179">Un <xref:System.Type> objeto se trata como un carácter comodín; coincide con cualquier propiedad que tenga el <xref:System.Type> en su conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="5e524-179">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="5e524-180">Si no tiene una propiedad de un <xref:System.Attribute> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="5e524-180">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="5e524-181">Si el atributo es una instancia de <xref:System.Attribute>, la propiedad debe ser una coincidencia exacta que se incluirán en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="5e524-181">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="5e524-182">Si especifica un <xref:System.Attribute> y es la propiedad predeterminada, se incluirán en la matriz devuelta, incluso si no hay ninguna instancia de <xref:System.Attribute> en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-182">If you specify an <xref:System.Attribute> and it is the default property, it will be included in the returned array, even if there is no instance of <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="5e524-183">Matriz de tipo <see cref="T:System.Attribute" /> que se va a utilizar como filtro.</span><span class="sxs-lookup"><span data-stu-id="5e524-183">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="5e524-184">Devuelve <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> utilizando una matriz especificada de atributos como filtro.</span><span class="sxs-lookup"><span data-stu-id="5e524-184">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="5e524-185"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades que coinciden con los atributos especificados.</span><span class="sxs-lookup"><span data-stu-id="5e524-185">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-186">Este método pasa `null` para el `instance` parámetro.</span><span class="sxs-lookup"><span data-stu-id="5e524-186">This method passes `null` for the `instance` parameter.</span></span>  
  
 <span data-ttu-id="5e524-187">Las propiedades de la `instance` parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el `instance` se basa en un parámetro.</span><span class="sxs-lookup"><span data-stu-id="5e524-187">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="5e524-188">El `filter` puede mezclar parámetro <xref:System.Type> y <xref:System.Attribute> objetos.</span><span class="sxs-lookup"><span data-stu-id="5e524-188">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="5e524-189">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="5e524-189">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="5e524-190">Un <xref:System.Type> objeto se trata como un carácter comodín; coincide con cualquier propiedad que tenga el <xref:System.Type> en su conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="5e524-190">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="5e524-191">Si no tiene una propiedad de un <xref:System.Attribute> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="5e524-191">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="5e524-192">Si el atributo es una instancia de <xref:System.Attribute>, la propiedad debe ser una coincidencia exacta que se incluirán en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="5e524-192">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="5e524-193">Si especifica un <xref:System.Attribute> instancia y es la propiedad predeterminada, se incluirán en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-193">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildProperties (instance As Object) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="member this.GetChildProperties : obj -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="5e524-194">Componente del que se van a obtener las propiedades.</span><span class="sxs-lookup"><span data-stu-id="5e524-194">A component to get the properties for.</span></span></param>
        <summary><span data-ttu-id="5e524-195">Devuelve <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> para un objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="5e524-195">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object.</span></span></summary>
        <returns><span data-ttu-id="5e524-196"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="5e524-196">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-197">Este método pasa `null` para el `filter` parámetro.</span><span class="sxs-lookup"><span data-stu-id="5e524-197">This method passes `null` for the `filter` parameter.</span></span>  
  
 <span data-ttu-id="5e524-198">Las propiedades de la `instance` parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el `instance` se basa en un parámetro.</span><span class="sxs-lookup"><span data-stu-id="5e524-198">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="5e524-199">El `filter` puede mezclar parámetro <xref:System.Type> y <xref:System.Attribute> objetos.</span><span class="sxs-lookup"><span data-stu-id="5e524-199">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="5e524-200">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="5e524-200">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="5e524-201">Un <xref:System.Type> objeto se trata como un carácter comodín; coincide con cualquier propiedad que tenga el <xref:System.Type> en su conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="5e524-201">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="5e524-202">Si no tiene una propiedad de un <xref:System.Attribute> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="5e524-202">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="5e524-203">Si el atributo es una instancia de <xref:System.Attribute>, la propiedad debe ser una coincidencia exacta que se incluirán en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="5e524-203">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="5e524-204">Si especifica un <xref:System.Attribute> instancia y es la propiedad predeterminada, se incluirán en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-204">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetChildProperties">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptorCollection GetChildProperties (object instance, Attribute[] filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetChildProperties(object instance, class System.Attribute[] filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetChildProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetChildProperties (instance As Object, filter As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ComponentModel::PropertyDescriptorCollection ^ GetChildProperties(System::Object ^ instance, cli::array &lt;Attribute ^&gt; ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection&#xA;override this.GetChildProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="propertyDescriptor.GetChildProperties (instance, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="filter" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="5e524-205">Componente del que se van a obtener las propiedades.</span><span class="sxs-lookup"><span data-stu-id="5e524-205">A component to get the properties for.</span></span></param>
        <param name="filter"><span data-ttu-id="5e524-206">Matriz de tipo <see cref="T:System.Attribute" /> que se va a utilizar como filtro.</span><span class="sxs-lookup"><span data-stu-id="5e524-206">An array of type <see cref="T:System.Attribute" /> to use as a filter.</span></span></param>
        <summary><span data-ttu-id="5e524-207">Devuelve <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> de un objeto dado utilizando como filtro una matriz especificada de atributos.</span><span class="sxs-lookup"><span data-stu-id="5e524-207">Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> for a given object using a specified array of attributes as a filter.</span></span></summary>
        <returns><span data-ttu-id="5e524-208"><see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> con las propiedades que coinciden con los atributos especificados del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="5e524-208">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the specified attributes for the specified component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-209">Las propiedades de la `instance` parámetro puede diferir de las propiedades de una clase, porque el sitio puede agregar o quitar propiedades si el `instance` se basa en un parámetro.</span><span class="sxs-lookup"><span data-stu-id="5e524-209">The properties for the `instance` parameter can differ from the properties of a class, because the site can add or remove properties if the `instance` parameter is sited.</span></span>  
  
 <span data-ttu-id="5e524-210">El `filter` puede mezclar parámetro <xref:System.Type> y <xref:System.Attribute> objetos.</span><span class="sxs-lookup"><span data-stu-id="5e524-210">The `filter` parameter can mix <xref:System.Type> and <xref:System.Attribute> objects.</span></span> <span data-ttu-id="5e524-211">El filtrado se define mediante las siguientes reglas:</span><span class="sxs-lookup"><span data-stu-id="5e524-211">Filtering is defined by the following rules:</span></span>  
  
-   <span data-ttu-id="5e524-212">Un <xref:System.Type> objeto se trata como un carácter comodín; coincide con cualquier propiedad que tenga el <xref:System.Type> en su conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="5e524-212">A <xref:System.Type> object is treated as a wildcard; it matches any property that has the <xref:System.Type> in its set of attributes.</span></span>  
  
-   <span data-ttu-id="5e524-213">Si no tiene una propiedad de un <xref:System.Attribute> de la misma clase, la propiedad no se incluirán en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="5e524-213">If a property does not have an <xref:System.Attribute> of the same class, the property will not be included in the returned array.</span></span>  
  
-   <span data-ttu-id="5e524-214">Si el atributo es una instancia de <xref:System.Attribute>, la propiedad debe ser una coincidencia exacta que se incluirán en la matriz devuelta.</span><span class="sxs-lookup"><span data-stu-id="5e524-214">If the attribute is an instance of <xref:System.Attribute>, the property must be an exact match to be included in the returned array.</span></span>  
  
-   <span data-ttu-id="5e524-215">Si especifica un <xref:System.Attribute> instancia y es la propiedad predeterminada, se incluirán en la matriz devuelta incluso si no hay ninguna instancia de la <xref:System.Attribute> en la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-215">If you specify an <xref:System.Attribute> instance and it is the default property, it will be included in the returned array even if there is no instance of the <xref:System.Attribute> in the property.</span></span>  
  
 <span data-ttu-id="5e524-216">Por lo general, se deben devolver las propiedades secundarias mediante la implementación de la <xref:System.ComponentModel.TypeConverter.GetProperties%2A> miembro de la <xref:System.ComponentModel.TypeConverter> devuelto por esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-216">Generally, child properties should be returned by implementing the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> member of the <xref:System.ComponentModel.TypeConverter> returned from this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeDescriptor" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public virtual object GetEditor (Type editorBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(class System.Type editorBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetEditor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditor (editorBaseType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetEditor(Type ^ editorBaseType);" />
      <MemberSignature Language="F#" Value="abstract member GetEditor : Type -&gt; obj&#xA;override this.GetEditor : Type -&gt; obj" Usage="propertyDescriptor.GetEditor editorBaseType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editorBaseType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="editorBaseType"><span data-ttu-id="5e524-217">Tipo base del editor que se utiliza para diferenciar entre varios editores compatibles con una propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-217">The base type of editor, which is used to differentiate between multiple editors that a property supports.</span></span></param>
        <summary><span data-ttu-id="5e524-218">Obtiene un editor del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="5e524-218">Gets an editor of the specified type.</span></span></summary>
        <returns><span data-ttu-id="5e524-219">Instancia del tipo de editor solicitado o <see langword="null" /> si no se encuentra ningún editor.</span><span class="sxs-lookup"><span data-stu-id="5e524-219">An instance of the requested editor type, or <see langword="null" /> if an editor cannot be found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyDescriptor.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5e524-220">Devuelve el código hash de este objeto.</span><span class="sxs-lookup"><span data-stu-id="5e524-220">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="5e524-221">El código hash de este objeto.</span><span class="sxs-lookup"><span data-stu-id="5e524-221">The hash code for this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationTarget">
      <MemberSignature Language="C#" Value="protected override object GetInvocationTarget (Type type, object instance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetInvocationTarget(class System.Type type, object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetInvocationTarget(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ GetInvocationTarget(Type ^ type, System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="override this.GetInvocationTarget : Type * obj -&gt; obj" Usage="propertyDescriptor.GetInvocationTarget (type, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="instance" Type="System.Object" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="5e524-222"><see cref="T:System.Type" /> del destino de la invocación.</span><span class="sxs-lookup"><span data-stu-id="5e524-222">The <see cref="T:System.Type" /> of the invocation target.</span></span></param>
        <param name="instance"><span data-ttu-id="5e524-223">Destino de la invocación potencial.</span><span class="sxs-lookup"><span data-stu-id="5e524-223">The potential invocation target.</span></span></param>
        <summary><span data-ttu-id="5e524-224">Este método devuelve el objeto que se debe utilizar durante la invocación de miembros.</span><span class="sxs-lookup"><span data-stu-id="5e524-224">This method returns the object that should be used during invocation of members.</span></span></summary>
        <returns><span data-ttu-id="5e524-225">La clase <see cref="T:System.Object" /> que se debe utilizar durante la invocación de miembros.</span><span class="sxs-lookup"><span data-stu-id="5e524-225">The <see cref="T:System.Object" /> that should be used during invocation of members.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-226">Normalmente, el valor devuelto será el mismo que el `instance` pasado.</span><span class="sxs-lookup"><span data-stu-id="5e524-226">Typically, the return value will be the same as the `instance` passed in.</span></span> <span data-ttu-id="5e524-227">Si alguien asociado a otro objeto de esta instancia, o si la instancia es un descriptor de tipos personalizado, el <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> método puede devolver un valor diferente.</span><span class="sxs-lookup"><span data-stu-id="5e524-227">If someone associated another object with this instance, or if the instance is a custom type descriptor, the <xref:System.ComponentModel.PropertyDescriptor.GetInvocationTarget%2A> method may return a different value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeFromName">
      <MemberSignature Language="C#" Value="protected Type GetTypeFromName (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Type GetTypeFromName(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetTypeFromName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetTypeFromName (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Type ^ GetTypeFromName(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="member this.GetTypeFromName : string -&gt; Type" Usage="propertyDescriptor.GetTypeFromName typeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="5e524-228">Nombre calificado con el ensamblado del tipo que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="5e524-228">The assembly-qualified name of the type to retrieve.</span></span></param>
        <summary><span data-ttu-id="5e524-229">Devuelve un tipo mediante su nombre.</span><span class="sxs-lookup"><span data-stu-id="5e524-229">Returns a type using its name.</span></span></summary>
        <returns><span data-ttu-id="5e524-230"><see cref="T:System.Type" /> que coincide con el nombre de tipo especificado, o <see langword="null" /> si no se encuentra ninguna coincidencia.</span><span class="sxs-lookup"><span data-stu-id="5e524-230">A <see cref="T:System.Type" /> that matches the given type name, or <see langword="null" /> if a match cannot be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-231">Para buscar el tipo adecuado, este método comprueba primero el ensamblado del tipo que este <xref:System.ComponentModel.PropertyDescriptor> referencias.</span><span class="sxs-lookup"><span data-stu-id="5e524-231">To find the appropriate type, this method first checks the assembly of the type that this <xref:System.ComponentModel.PropertyDescriptor> references.</span></span> <span data-ttu-id="5e524-232">Si no se encuentra el tipo en el ensamblado, llama a <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="5e524-232">If it does not find the type in the assembly, it calls <xref:System.Type.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (component As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj" Usage="propertyDescriptor.GetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-233">Componente con la propiedad cuyo valor se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="5e524-233">The component with the property for which to retrieve the value.</span></span></param>
        <summary><span data-ttu-id="5e524-234">Cuando se reemplaza en una clase derivada, obtiene el valor actual de la propiedad de un componente.</span><span class="sxs-lookup"><span data-stu-id="5e524-234">When overridden in a derived class, gets the current value of the property on a component.</span></span></summary>
        <returns><span data-ttu-id="5e524-235">Valor de una propiedad de un componente dado.</span><span class="sxs-lookup"><span data-stu-id="5e524-235">The value of a property for a given component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-236">Normalmente, este método se implementa mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="5e524-236">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="5e524-237">Este método llama automáticamente al método anterior al cambio, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>y después del método, cambio <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, de la <xref:System.ComponentModel.Design.IComponentChangeService>.</span><span class="sxs-lookup"><span data-stu-id="5e524-237">This method automatically calls the pre-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A>, and post-change method, <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A>, of the <xref:System.ComponentModel.Design.IComponentChangeService>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e524-238">Cuando se reemplaza este método, obtiene el valor actual de la propiedad invocando un método "GetMyProperty" que se debe implementar.</span><span class="sxs-lookup"><span data-stu-id="5e524-238">When you override this method, it gets the current value of the property by invoking a "GetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="5e524-239">Debe pasar una excepción en ese método.</span><span class="sxs-lookup"><span data-stu-id="5e524-239">An exception in that method should pass through.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetValueChangedHandler">
      <MemberSignature Language="C#" Value="protected internal EventHandler GetValueChangedHandler (object component);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.EventHandler GetValueChangedHandler(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.GetValueChangedHandler(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetValueChangedHandler (component As Object) As EventHandler" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; EventHandler ^ GetValueChangedHandler(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetValueChangedHandler : obj -&gt; EventHandler" Usage="propertyDescriptor.GetValueChangedHandler component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-240">Componente para el que se recuperan controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="5e524-240">The component for which to retrieve event handlers.</span></span></param>
        <summary><span data-ttu-id="5e524-241">Recupera el conjunto actual de controladores de eventos <c>ValueChanged</c> para un componente concreto</span><span class="sxs-lookup"><span data-stu-id="5e524-241">Retrieves the current set of <c>ValueChanged</c> event handlers for a specific component</span></span></summary>
        <returns><span data-ttu-id="5e524-242">Un controlador de eventos de multidifusión combinado, o <see langword="null" /> si ningún controlador de eventos está asignado actualmente a <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-242">A combined multicast event handler, or <see langword="null" /> if no event handlers are currently assigned to <paramref name="component" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLocalizable">
      <MemberSignature Language="C#" Value="public virtual bool IsLocalizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocalizable" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLocalizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLocalizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocalizable : bool" Usage="System.ComponentModel.PropertyDescriptor.IsLocalizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e524-243">Obtiene un valor que indica si esta propiedad se debe traducir, según se especifica en <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-243">Gets a value indicating whether this property should be localized, as specified in the <see cref="T:System.ComponentModel.LocalizableAttribute" />.</span></span></summary>
        <value><span data-ttu-id="5e524-244"><see langword="true" /> si el miembro está marcado con el valor <see cref="T:System.ComponentModel.LocalizableAttribute" /> establecido en <see langword="true" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-244"><see langword="true" /> if the member is marked with the <see cref="T:System.ComponentModel.LocalizableAttribute" /> set to <see langword="true" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-245">Cuando se marca una propiedad con el <xref:System.ComponentModel.LocalizableAttribute> establecido en `true` y se usa en un diseñador visual, sus valores se guardan en un archivo de recursos.</span><span class="sxs-lookup"><span data-stu-id="5e524-245">When a property is marked with the <xref:System.ComponentModel.LocalizableAttribute> set to `true` and used in a visual designer, its values are saved in a resource file.</span></span> <span data-ttu-id="5e524-246">Si marca una propiedad con el atributo y, a continuación, establezca la propiedad en el código, no se usan archivos de recursos.</span><span class="sxs-lookup"><span data-stu-id="5e524-246">If you mark a property with the attribute and then set the property in code, resource files are not used.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.LocalizableAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.ComponentModel.PropertyDescriptor.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e524-247">Cuando se reemplaza en una clase derivada, obtiene un valor que indica si esta propiedad es de sólo lectura.</span><span class="sxs-lookup"><span data-stu-id="5e524-247">When overridden in a derived class, gets a value indicating whether this property is read-only.</span></span></summary>
        <value><span data-ttu-id="5e524-248"><see langword="true" /> si la propiedad es de sólo lectura; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-248"><see langword="true" /> if the property is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.ReadOnlyAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnValueChanged (object component, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValueChanged(object component, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.OnValueChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValueChanged (component As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValueChanged(System::Object ^ component, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnValueChanged : obj * EventArgs -&gt; unit&#xA;override this.OnValueChanged : obj * EventArgs -&gt; unit" Usage="propertyDescriptor.OnValueChanged (component, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-249">Objeto que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="5e524-249">The object that raises the event.</span></span></param>
        <param name="e"><span data-ttu-id="5e524-250">Objeto <see cref="T:System.EventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="5e524-250">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="5e524-251">Provoca el evento <c>ValueChanged</c> que se ha implementado.</span><span class="sxs-lookup"><span data-stu-id="5e524-251">Raises the <c>ValueChanged</c> event that you implemented.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-252">La implementación del descriptor de propiedad debe llamar a este método cuando el valor de propiedad ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="5e524-252">This method should be called by your property descriptor implementation when the property value has changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.ComponentModel.PropertyDescriptor.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e524-253">Cuando se reemplaza en una clase derivada, obtiene el tipo de propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-253">When overridden in a derived class, gets the type of the property.</span></span></summary>
        <value><span data-ttu-id="5e524-254"><see cref="T:System.Type" /> que representa el tipo de propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-254">A <see cref="T:System.Type" /> that represents the type of the property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-255">Normalmente, esta propiedad se implementa mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="5e524-255">Typically, this property is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveValueChanged">
      <MemberSignature Language="C#" Value="public virtual void RemoveValueChanged (object component, EventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveValueChanged(object component, class System.EventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveValueChanged (component As Object, handler As EventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveValueChanged(System::Object ^ component, EventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveValueChanged : obj * EventHandler -&gt; unit&#xA;override this.RemoveValueChanged : obj * EventHandler -&gt; unit" Usage="propertyDescriptor.RemoveValueChanged (component, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="handler" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-256">Componente para el cual se va a quitar el controlador.</span><span class="sxs-lookup"><span data-stu-id="5e524-256">The component to remove the handler for.</span></span></param>
        <param name="handler"><span data-ttu-id="5e524-257">Delegado que se va a quitar como agente de escucha.</span><span class="sxs-lookup"><span data-stu-id="5e524-257">The delegate to remove as a listener.</span></span></param>
        <summary><span data-ttu-id="5e524-258">Habilita la notificación a otros objetos cuando cambia esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-258">Enables other objects to be notified when this property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5e524-259"><paramref name="component" /> o <paramref name="handler" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-259"><paramref name="component" /> or <paramref name="handler" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ResetValue">
      <MemberSignature Language="C#" Value="public abstract void ResetValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ResetValue (component As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ResetValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ResetValue : obj -&gt; unit" Usage="propertyDescriptor.ResetValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-260">Componente cuyo valor de propiedad se va a restablecer en el valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="5e524-260">The component with the property value that is to be reset to the default value.</span></span></param>
        <summary><span data-ttu-id="5e524-261">Cuando se reemplaza en una clase derivada, restablece el valor predeterminado de esta propiedad del componente.</span><span class="sxs-lookup"><span data-stu-id="5e524-261">When overridden in a derived class, resets the value for this property of the component to the default value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-262">Normalmente, este método se implementa mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="5e524-262">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="5e524-263">Este método determina el valor para restablecer la propiedad en el orden de precedencia siguiente:</span><span class="sxs-lookup"><span data-stu-id="5e524-263">This method determines the value to reset the property to in the following order of precedence:</span></span>  
  
1.  <span data-ttu-id="5e524-264">Hay una propiedad sombreada para esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-264">There is a shadowed property for this property.</span></span>  
  
2.  <span data-ttu-id="5e524-265">Hay un <xref:System.ComponentModel.DefaultValueAttribute> para esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-265">There is a <xref:System.ComponentModel.DefaultValueAttribute> for this property.</span></span>  
  
3.  <span data-ttu-id="5e524-266">Hay un método "ResetMyProperty" que se haya implementado, donde "MyProperty" es el nombre de la propiedad que se pasa a él.</span><span class="sxs-lookup"><span data-stu-id="5e524-266">There is a "ResetMyProperty" method that you have implemented, where "MyProperty" is the name of the property you pass to it.</span></span>  
  
 <span data-ttu-id="5e524-267">Este método crea un <xref:System.ComponentModel.Design.DesignerTransaction> automáticamente en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="5e524-267">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="5e524-268">Las llamadas al método el <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> método para crear un nuevo <xref:System.ComponentModel.Design.DesignerTransaction> para representar los cambios.</span><span class="sxs-lookup"><span data-stu-id="5e524-268">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="5e524-269">Las llamadas al método el <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> método para indicar que la transacción ha comenzado y los cambios están a punto de producirse.</span><span class="sxs-lookup"><span data-stu-id="5e524-269">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="5e524-270">El método restablece la propiedad en el valor determinado por el orden de comprobación de este método.</span><span class="sxs-lookup"><span data-stu-id="5e524-270">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="5e524-271">Las llamadas al método el <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> método para indicar que se han producido los cambios.</span><span class="sxs-lookup"><span data-stu-id="5e524-271">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="5e524-272">Las llamadas al método <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> para indicar que la transacción se ha completado.</span><span class="sxs-lookup"><span data-stu-id="5e524-272">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is completed.</span></span>  
  
 <span data-ttu-id="5e524-273">El propósito de la transacción es admitir `Undo` y `Redo` funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="5e524-273">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e524-274">Cuando se invalida en una clase derivada, este método busca un <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-274">When overridden in a derived class, this method looks for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="5e524-275">Si encuentra uno, Establece el valor de la propiedad a la <see cref="T:System.ComponentModel.DefaultValueAttribute" /> se encuentra.</span><span class="sxs-lookup"><span data-stu-id="5e524-275">If it finds one, it sets the value of the property to the <see cref="T:System.ComponentModel.DefaultValueAttribute" /> it found.</span></span> <span data-ttu-id="5e524-276">Si este método no se puede encontrar un <see cref="T:System.ComponentModel.DefaultValueAttribute" />, busca un método "ResetMyProperty" que se debe implementar.</span><span class="sxs-lookup"><span data-stu-id="5e524-276">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ResetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="5e524-277">Si lo encuentra, el <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> método lo invoca.</span><span class="sxs-lookup"><span data-stu-id="5e524-277">If this is found, the <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> method invokes it.</span></span> <span data-ttu-id="5e524-278">Si <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> no se puede encontrar un <see cref="T:System.ComponentModel.DefaultValueAttribute" /> o un método "ResetMyProperty" que se ha implementado, no realiza una operación.</span><span class="sxs-lookup"><span data-stu-id="5e524-278">If <see cref="M:System.ComponentModel.PropertyDescriptor.ResetValue(System.Object)" /> cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ResetMyProperty" method that you implemented, it does not perform an operation.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberSignature Language="F#" Value="member this.SerializationVisibility : System.ComponentModel.DesignerSerializationVisibility" Usage="System.ComponentModel.PropertyDescriptor.SerializationVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e524-279">Obtiene un valor que indica si esta propiedad se debe serializar, según se especifica en <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-279">Gets a value indicating whether this property should be serialized, as specified in the <see cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />.</span></span></summary>
        <value><span data-ttu-id="5e524-280">Uno de los valores de enumeración de <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> que especifica si esta propiedad se debe serializar.</span><span class="sxs-lookup"><span data-stu-id="5e524-280">One of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration values that specifies whether this property should be serialized.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibilityAttribute" />
        <altmember cref="T:System.ComponentModel.DesignerSerializationVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object component, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object component, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (component As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ component, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit" Usage="propertyDescriptor.SetValue (component, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-281">Componente con el valor de propiedad que se va a establecer.</span><span class="sxs-lookup"><span data-stu-id="5e524-281">The component with the property value that is to be set.</span></span></param>
        <param name="value"><span data-ttu-id="5e524-282">Nuevo valor.</span><span class="sxs-lookup"><span data-stu-id="5e524-282">The new value.</span></span></param>
        <summary><span data-ttu-id="5e524-283">Cuando se reemplaza en una clase derivada, establece el valor del componente en otro diferente.</span><span class="sxs-lookup"><span data-stu-id="5e524-283">When overridden in a derived class, sets the value of the component to a different value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-284">Normalmente, este método se implementa mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="5e524-284">Typically, this method is implemented through reflection.</span></span>  
  
 <span data-ttu-id="5e524-285">Este método crea un <xref:System.ComponentModel.Design.DesignerTransaction> automáticamente en el orden siguiente:</span><span class="sxs-lookup"><span data-stu-id="5e524-285">This method creates a <xref:System.ComponentModel.Design.DesignerTransaction> automatically in the following order:</span></span>  
  
1.  <span data-ttu-id="5e524-286">Las llamadas al método el <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> método para crear un nuevo <xref:System.ComponentModel.Design.DesignerTransaction> para representar los cambios.</span><span class="sxs-lookup"><span data-stu-id="5e524-286">The method calls the <xref:System.ComponentModel.Design.IDesignerHost.CreateTransaction%2A?displayProperty=nameWithType> method to create a new <xref:System.ComponentModel.Design.DesignerTransaction> to represent the changes.</span></span>  
  
2.  <span data-ttu-id="5e524-287">Las llamadas al método el <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> método para indicar que la transacción ha comenzado y los cambios están a punto de producirse.</span><span class="sxs-lookup"><span data-stu-id="5e524-287">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanging%2A?displayProperty=nameWithType> method to indicate that the transaction has begun and the changes are about to occur.</span></span>  
  
3.  <span data-ttu-id="5e524-288">El método restablece la propiedad en el valor determinado por el orden de comprobación de este método.</span><span class="sxs-lookup"><span data-stu-id="5e524-288">The method resets the property to the value determined by this method's checking order.</span></span>  
  
4.  <span data-ttu-id="5e524-289">Las llamadas al método el <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> método para indicar que se han producido los cambios.</span><span class="sxs-lookup"><span data-stu-id="5e524-289">The method calls the <xref:System.ComponentModel.Design.IComponentChangeService.OnComponentChanged%2A?displayProperty=nameWithType> method to indicate that the changes have occurred.</span></span>  
  
5.  <span data-ttu-id="5e524-290">Las llamadas al método <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> para indicar que la transacción ha finalizado.</span><span class="sxs-lookup"><span data-stu-id="5e524-290">The method calls <xref:System.ComponentModel.Design.DesignerTransaction.Commit%2A?displayProperty=nameWithType> to indicate that the transaction is complete.</span></span>  
  
 <span data-ttu-id="5e524-291">El propósito de la transacción es admitir `Undo` y `Redo` funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="5e524-291">The purpose of the transaction is to support `Undo` and `Redo` functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e524-292">Cuando se reemplaza este método, debe establecer el valor de la propiedad invocando el método "SetMyProperty" adecuado que deba implementar.</span><span class="sxs-lookup"><span data-stu-id="5e524-292">When you override this method, it should set the value of the property by invoking the appropriate "SetMyProperty" method that you need to implement.</span></span> <span data-ttu-id="5e524-293">Si el valor especificado no es válido, el componente debe producir una excepción, que se pase.</span><span class="sxs-lookup"><span data-stu-id="5e524-293">If the value specified is not valid, the component should throw an exception, which is passed up.</span></span> <span data-ttu-id="5e524-294">La propiedad debe diseñarse para que un método "GetMyProperty" (que se haya implementado) siguiendo un método "SetMyProperty" devuelve el valor pasado al método "SetMyProperty" no produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="5e524-294">You should design the property so that a "GetMyProperty" method (that you have implemented) following a "SetMyProperty" method returns the value passed in when the "SetMyProperty" method does not throw an exception.</span></span></para></block>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public abstract bool ShouldSerializeValue (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldSerializeValue(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ShouldSerializeValue (component As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool ShouldSerializeValue(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; bool" Usage="propertyDescriptor.ShouldSerializeValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="5e524-295">Componente con la propiedad cuya persistencia se va a examinar.</span><span class="sxs-lookup"><span data-stu-id="5e524-295">The component with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="5e524-296">Cuando se reemplaza en una clase derivada, determina un valor que indica si el valor de esta propiedad debe almacenarse.</span><span class="sxs-lookup"><span data-stu-id="5e524-296">When overridden in a derived class, determines a value indicating whether the value of this property needs to be persisted.</span></span></summary>
        <returns><span data-ttu-id="5e524-297"><see langword="true" /> si se debe almacenar la propiedad; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-297"><see langword="true" /> if the property should be persisted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-298">Normalmente, este método se implementa mediante reflexión.</span><span class="sxs-lookup"><span data-stu-id="5e524-298">Typically, this method is implemented through reflection.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="5e524-299">Cuando se invalida en una clase derivada, este método devuelve <see langword="true" /> si el valor actual de la propiedad es diferente de su valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="5e524-299">When overridden in a derived class, this method returns <see langword="true" /> if the current value of the property is different from its default value.</span></span> <span data-ttu-id="5e524-300">Busca un valor predeterminado buscando primero una <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-300">It looks for a default value by first looking for a <see cref="T:System.ComponentModel.DefaultValueAttribute" />.</span></span> <span data-ttu-id="5e524-301">Si el método encuentra este atributo, compara el valor del atributo con el valor actual de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-301">If the method finds this attribute, it compares the value of the attribute with the property's current value.</span></span> <span data-ttu-id="5e524-302">Si este método no se puede encontrar un <see cref="T:System.ComponentModel.DefaultValueAttribute" />, busca un método "ShouldSerializeMyProperty" que se debe implementar.</span><span class="sxs-lookup"><span data-stu-id="5e524-302">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" />, it looks for a "ShouldSerializeMyProperty" method that you need to implement.</span></span> <span data-ttu-id="5e524-303">Si se encuentra, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> lo invoca.</span><span class="sxs-lookup"><span data-stu-id="5e524-303">If it is found, <see cref="M:System.ComponentModel.PropertyDescriptor.ShouldSerializeValue(System.Object)" /> invokes it.</span></span> <span data-ttu-id="5e524-304">Si este método no se puede encontrar un <see cref="T:System.ComponentModel.DefaultValueAttribute" /> o un método "ShouldSerializeMyProperty", no puede crear las optimizaciones y devolverá <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-304">If this method cannot find a <see cref="T:System.ComponentModel.DefaultValueAttribute" /> or a "ShouldSerializeMyProperty" method, it cannot create optimizations and it returns <see langword="true" />.</span></span>
 
 <block subset="none" type="note"><para>  
 <span data-ttu-id="5e524-305">La <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> clase implementa la lógica de serialización especial para los componentes heredados.</span><span class="sxs-lookup"><span data-stu-id="5e524-305">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class implements special serialization logic for inherited components.</span></span> <span data-ttu-id="5e524-306">Para obtener más información, vea <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-306">For more information, see <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</span></span>  
</para></block></para></block>
        <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SupportsChangeEvents">
      <MemberSignature Language="C#" Value="public virtual bool SupportsChangeEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsChangeEvents" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsChangeEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsChangeEvents { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsChangeEvents : bool" Usage="System.ComponentModel.PropertyDescriptor.SupportsChangeEvents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5e524-307">Obtiene un valor que indica si las notificaciones de cambios de valores para esta propiedad se pueden originar fuera del descriptor de propiedades.</span><span class="sxs-lookup"><span data-stu-id="5e524-307">Gets a value indicating whether value change notifications for this property may originate from outside the property descriptor.</span></span></summary>
        <value><span data-ttu-id="5e524-308"><see langword="true" /> si las notificaciones de cambios de valores se pueden originar fuera del descriptor de propiedades; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5e524-308"><see langword="true" /> if value change notifications may originate from outside the property descriptor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e524-309">El <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> propiedad indica si las notificaciones de cambio de valor de esta propiedad pueden originarse fuera del descriptor de propiedad, como desde el propio componente o si las notificaciones se originarán únicamente en las llamadas directas realizadas a la <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5e524-309">The <xref:System.ComponentModel.PropertyDescriptor.SupportsChangeEvents%2A> property indicates whether value change notifications for this property may originate from outside the property descriptor, such as from the component itself, or whether notifications will only originate from direct calls made to the <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A> method.</span></span> <span data-ttu-id="5e524-310">Por ejemplo, puede implementar el componente la <xref:System.ComponentModel.INotifyPropertyChanged> interfaz, o ser explícita `name.Changed` eventos para esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="5e524-310">For example, the component may implement the <xref:System.ComponentModel.INotifyPropertyChanged> interface, or may have an explicit `name.Changed` event for this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
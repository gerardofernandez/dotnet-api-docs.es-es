<Type Name="IComNativeDescriptorHandler" FullName="System.ComponentModel.IComNativeDescriptorHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="173aeb129fb3bd91b1f6b61dcf828dec2980f3b4" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52209602" /></Metadata><TypeSignature Language="C#" Value="public interface IComNativeDescriptorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComNativeDescriptorHandler" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.IComNativeDescriptorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComNativeDescriptorHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IComNativeDescriptorHandler" />
  <TypeSignature Language="F#" Value="type IComNativeDescriptorHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.Obsolete("This interface has been deprecated. Add a TypeDescriptionProvider to handle type TypeDescriptor.ComObjectType instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="15dd8-101">Proporciona una capa de asignación de nivel superior entre un objeto COM y <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-101">Provides a top-level mapping layer between a COM object and a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-102">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-102">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-103">Agregar un <xref:System.ComponentModel.TypeDescriptionProvider> para controlar un <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="15dd8-103">Add a <xref:System.ComponentModel.TypeDescriptionProvider> to handle a <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A> instead.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAttributes">
      <MemberSignature Language="C#" Value="public System.ComponentModel.AttributeCollection GetAttributes (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.AttributeCollection GetAttributes(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetAttributes(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributes (component As Object) As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::AttributeCollection ^ GetAttributes(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributes : obj -&gt; System.ComponentModel.AttributeCollection" Usage="iComNativeDescriptorHandler.GetAttributes component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-104">Componente para el que se van a obtener atributos.</span><span class="sxs-lookup"><span data-stu-id="15dd8-104">The component to get attributes for.</span></span></param>
        <summary><span data-ttu-id="15dd8-105">Obtiene los atributos del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-105">Gets the attributes for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-106">Colección de atributos para <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-106">A collection of attributes for <paramref name="component" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-107">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-107">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-108">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-108">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassName">
      <MemberSignature Language="C#" Value="public string GetClassName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetClassName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetClassName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClassName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClassName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetClassName : obj -&gt; string" Usage="iComNativeDescriptorHandler.GetClassName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-109">Componente para el que se va a obtener el nombre de clase.</span><span class="sxs-lookup"><span data-stu-id="15dd8-109">The component to get the class name for.</span></span></param>
        <summary><span data-ttu-id="15dd8-110">Obtiene el nombre de la clase para el componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-110">Gets the class name for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-111">Nombre de la clase correspondiente a <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-111">The name of the class that corresponds with <paramref name="component" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-112">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-112">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-113">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-113">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConverter">
      <MemberSignature Language="C#" Value="public System.ComponentModel.TypeConverter GetConverter (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.TypeConverter GetConverter(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetConverter(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConverter (component As Object) As TypeConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::TypeConverter ^ GetConverter(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetConverter : obj -&gt; System.ComponentModel.TypeConverter" Usage="iComNativeDescriptorHandler.GetConverter component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-114">Componente para el que se va a obtener <see cref="T:System.ComponentModel.TypeConverter" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-114">The component to get the <see cref="T:System.ComponentModel.TypeConverter" /> for.</span></span></param>
        <summary><span data-ttu-id="15dd8-115">Obtiene el convertidor de tipos para el componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-115">Gets the type converter for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-116">El objeto <see cref="T:System.ComponentModel.TypeConverter" /> para <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-116">The <see cref="T:System.ComponentModel.TypeConverter" /> for <paramref name="component" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-117">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-117">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-118">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-118">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultEvent">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptor GetDefaultEvent (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptor GetDefaultEvent(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultEvent(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultEvent (component As Object) As EventDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptor ^ GetDefaultEvent(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultEvent : obj -&gt; System.ComponentModel.EventDescriptor" Usage="iComNativeDescriptorHandler.GetDefaultEvent component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-119">Componente para el que se va a obtener el evento predeterminado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-119">The component to get the default event for.</span></span></param>
        <summary><span data-ttu-id="15dd8-120">Obtiene el evento predeterminado para el componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-120">Gets the default event for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-121"><see cref="T:System.ComponentModel.EventDescriptor" /> que representa el evento predeterminado de <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-121">An <see cref="T:System.ComponentModel.EventDescriptor" /> that represents <paramref name="component" />'s default event.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-122">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-122">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-123">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-123">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultProperty">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor GetDefaultProperty (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptor GetDefaultProperty(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetDefaultProperty(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultProperty (component As Object) As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptor ^ GetDefaultProperty(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultProperty : obj -&gt; System.ComponentModel.PropertyDescriptor" Usage="iComNativeDescriptorHandler.GetDefaultProperty component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-124">Componente para el que obtener la propiedad predeterminada.</span><span class="sxs-lookup"><span data-stu-id="15dd8-124">The component to get the default property for.</span></span></param>
        <summary><span data-ttu-id="15dd8-125">Obtiene la propiedad predeterminada del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-125">Gets the default property for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-126"><see cref="T:System.ComponentModel.PropertyDescriptor" /> que representa la propiedad predeterminada de <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-126">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents <paramref name="component" />'s default property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-127">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-127">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-128">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-128">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEditor">
      <MemberSignature Language="C#" Value="public object GetEditor (object component, Type baseEditorType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEditor(object component, class System.Type baseEditorType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetEditor(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEditor (component As Object, baseEditorType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEditor(System::Object ^ component, Type ^ baseEditorType);" />
      <MemberSignature Language="F#" Value="abstract member GetEditor : obj * Type -&gt; obj" Usage="iComNativeDescriptorHandler.GetEditor (component, baseEditorType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="baseEditorType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-129">Componente para el que se obtendrá el editor.</span><span class="sxs-lookup"><span data-stu-id="15dd8-129">The component to get the editor for.</span></span></param>
        <param name="baseEditorType"><span data-ttu-id="15dd8-130">Tipo base del editor de <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-130">The base type of the editor for <paramref name="component" />.</span></span></param>
        <summary><span data-ttu-id="15dd8-131">Obtiene el editor para el componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-131">Gets the editor for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-132">Editor de <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-132">The editor for <paramref name="component" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-133">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-133">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-134">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-134">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvents">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15dd8-135">Obtiene los eventos del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-135">Gets the events for the specified component.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptorCollection GetEvents (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection GetEvents(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents (component As Object) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : obj -&gt; System.ComponentModel.EventDescriptorCollection" Usage="iComNativeDescriptorHandler.GetEvents component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-136">Componente cuyos eventos se van a obtener.</span><span class="sxs-lookup"><span data-stu-id="15dd8-136">The component to get events for.</span></span></param>
        <summary><span data-ttu-id="15dd8-137">Obtiene los eventos del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-137">Gets the events for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-138">Colección de descriptores de eventos para <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-138">A collection of event descriptors for <paramref name="component" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-139">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-139">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-140">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-140">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public System.ComponentModel.EventDescriptorCollection GetEvents (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.EventDescriptorCollection GetEvents(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetEvents(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvents (component As Object, attributes As Attribute()) As EventDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::EventDescriptorCollection ^ GetEvents(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : obj * Attribute[] -&gt; System.ComponentModel.EventDescriptorCollection" Usage="iComNativeDescriptorHandler.GetEvents (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-141">Componente cuyos eventos se van a obtener.</span><span class="sxs-lookup"><span data-stu-id="15dd8-141">The component to get events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="15dd8-142">Atributos usados para filtrar eventos.</span><span class="sxs-lookup"><span data-stu-id="15dd8-142">The attributes used to filter events.</span></span></param>
        <summary><span data-ttu-id="15dd8-143">Obtiene los eventos con los atributos especificados del componente indicado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-143">Gets the events with the specified attributes for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-144">Colección de descriptores de eventos para <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-144">A collection of event descriptors for <paramref name="component" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-145">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-145">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-146">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-146">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetName(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (component As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="abstract member GetName : obj -&gt; string" Usage="iComNativeDescriptorHandler.GetName component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-147">Componente cuyo nombre se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="15dd8-147">The component to get the name of.</span></span></param>
        <summary><span data-ttu-id="15dd8-148">Obtiene el nombre del componente especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-148">Gets the name of the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-149">Nombre de <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-149">The name of <paramref name="component" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-150">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-150">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-151">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-151">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection GetProperties (object component, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(object component, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetProperties(System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties (component As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::Object ^ component, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : obj * Attribute[] -&gt; System.ComponentModel.PropertyDescriptorCollection" Usage="iComNativeDescriptorHandler.GetProperties (component, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-152">Componente cuyos eventos se van a obtener.</span><span class="sxs-lookup"><span data-stu-id="15dd8-152">The component to get events for.</span></span></param>
        <param name="attributes"><span data-ttu-id="15dd8-153">Atributos usados para filtrar propiedades.</span><span class="sxs-lookup"><span data-stu-id="15dd8-153">The attributes used to filter properties.</span></span></param>
        <summary><span data-ttu-id="15dd8-154">Obtiene las propiedades con los atributos especificados del componente indicado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-154">Gets the properties with the specified attributes for the specified component.</span></span></summary>
        <returns><span data-ttu-id="15dd8-155">Colección de descriptores de propiedades para <paramref name="component" />.</span><span class="sxs-lookup"><span data-stu-id="15dd8-155">A collection of property descriptors for <paramref name="component" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-156">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-156">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-157">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-157">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="15dd8-158">Obtiene el valor de la propiedad especificada.</span><span class="sxs-lookup"><span data-stu-id="15dd8-158">Gets the value of the specified property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (object component, int dispid, ref bool success);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyValue(object component, int32 dispid, bool&amp; success) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.Int32,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (component As Object, dispid As Integer, ByRef success As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::Object ^ component, int dispid, bool % success);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : obj * int *  -&gt; obj" Usage="iComNativeDescriptorHandler.GetPropertyValue (component, dispid, success)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="dispid" Type="System.Int32" />
        <Parameter Name="success" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-159">Objeto al que pertenece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="15dd8-159">The object to which the property belongs.</span></span></param>
        <param name="dispid"><span data-ttu-id="15dd8-160">Identificador de envío.</span><span class="sxs-lookup"><span data-stu-id="15dd8-160">The dispatch identifier.</span></span></param>
        <param name="success"><span data-ttu-id="15dd8-161"><see cref="T:System.Boolean" />, pasado por referencia, que representa si la propiedad se ha recuperado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-161">A <see cref="T:System.Boolean" />, passed by reference, that represents whether the property was retrieved.</span></span></param>
        <summary><span data-ttu-id="15dd8-162">Obtiene el valor de la propiedad que tiene el identificador de envío especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-162">Gets the value of the property that has the specified dispatch identifier.</span></span></summary>
        <returns><span data-ttu-id="15dd8-163">Valor de la propiedad que tiene el identificador de envío especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-163">The value of the property that has the specified dispatch identifier.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-164">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-164">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-165">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-165">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (object component, string propertyName, ref bool success);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetPropertyValue(object component, string propertyName, bool&amp; success) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.IComNativeDescriptorHandler.GetPropertyValue(System.Object,System.String,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (component As Object, propertyName As String, ByRef success As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::Object ^ component, System::String ^ propertyName, bool % success);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValue : obj * string *  -&gt; obj" Usage="iComNativeDescriptorHandler.GetPropertyValue (component, propertyName, success)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="success" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="component"><span data-ttu-id="15dd8-166">Objeto al que pertenece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="15dd8-166">The object to which the property belongs.</span></span></param>
        <param name="propertyName"><span data-ttu-id="15dd8-167">Nombre de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="15dd8-167">The name of the property.</span></span></param>
        <param name="success"><span data-ttu-id="15dd8-168"><see cref="T:System.Boolean" />, pasado por referencia, que representa si la propiedad se ha recuperado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-168">A <see cref="T:System.Boolean" />, passed by reference, that represents whether the property was retrieved.</span></span></param>
        <summary><span data-ttu-id="15dd8-169">Obtiene el valor de la propiedad que tiene el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-169">Gets the value of the property that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="15dd8-170">Valor de la propiedad que tiene el nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="15dd8-170">The value of the property that has the specified name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="15dd8-171">Esta API ya está obsoleta.</span><span class="sxs-lookup"><span data-stu-id="15dd8-171">This API is now obsolete.</span></span> <span data-ttu-id="15dd8-172">La alternativa no obsoleta es el método <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span><span class="sxs-lookup"><span data-stu-id="15dd8-172">The non-obsolete alternative is <xref:System.ComponentModel.TypeDescriptor.ComObjectType%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
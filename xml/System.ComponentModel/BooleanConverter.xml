<Type Name="BooleanConverter" FullName="System.ComponentModel.BooleanConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d027c69be474f4745639815e1884e742bfa94e55" /><Meta Name="ms.sourcegitcommit" Value="cbcba80f998e27b87425ad54726bdb684fb3a932" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="09/04/2018" /><Meta Name="ms.locfileid" Value="43646476" /></Metadata><TypeSignature Language="C#" Value="public class BooleanConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BooleanConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.BooleanConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class BooleanConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BooleanConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type BooleanConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9dab7-101">Proporciona un convertidor de tipos para convertir objetos <see cref="T:System.Boolean" /> a otras representaciones y desde otras representaciones.</span><span class="sxs-lookup"><span data-stu-id="9dab7-101">Provides a type converter to convert <see cref="T:System.Boolean" /> objects to and from various other representations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dab7-102">Este convertidor puede convertir sólo un <xref:System.Boolean> objetos hacia y desde una cadena.</span><span class="sxs-lookup"><span data-stu-id="9dab7-102">This converter can only convert a <xref:System.Boolean> object to and from a string.</span></span>  
  
 <span data-ttu-id="9dab7-103">Para obtener más información sobre los convertidores de tipos, vea la <xref:System.ComponentModel.TypeConverter> clase base y [Cómo: implementar un convertidor de tipos](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span><span class="sxs-lookup"><span data-stu-id="9dab7-103">For more information about type converters, see the <xref:System.ComponentModel.TypeConverter> base class and [How to: Implement a Type Converter](https://docs.microsoft.com/previous-versions/visualstudio/visual-studio-2013/ayybcxe5(v=vs.120)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9dab7-104">Nunca se debe crear una instancia de un <xref:System.ComponentModel.BooleanConverter>.</span><span class="sxs-lookup"><span data-stu-id="9dab7-104">You should never create an instance of a <xref:System.ComponentModel.BooleanConverter>.</span></span> <span data-ttu-id="9dab7-105">En su lugar, se llama al método <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> de la clase <xref:System.ComponentModel.TypeDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="9dab7-105">Instead, call the <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> method of the <xref:System.ComponentModel.TypeDescriptor> class.</span></span> <span data-ttu-id="9dab7-106">Para obtener más información, vea los ejemplos en la <xref:System.ComponentModel.TypeConverter> clase base.</span><span class="sxs-lookup"><span data-stu-id="9dab7-106">For more information, see the examples in the <xref:System.ComponentModel.TypeConverter> base class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9dab7-107">El ejemplo de código siguiente convierte una variable de tipo <xref:System.Boolean> hacia y desde una cadena.</span><span class="sxs-lookup"><span data-stu-id="9dab7-107">The following code example converts a variable of type <xref:System.Boolean> to and from a string.</span></span>  
  
 [!code-cpp[Converters#3](~/samples/snippets/cpp/VS_Snippets_Winforms/Converters/CPP/converters.cpp#3)]
 [!code-csharp[Converters#3](~/samples/snippets/csharp/VS_Snippets_Winforms/Converters/CS/converters.cs#3)]
 [!code-vb[Converters#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Converters/VB/converters.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BooleanConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BooleanConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9dab7-108">Inicializa una nueva instancia de la clase <see cref="T:System.ComponentModel.BooleanConverter" />.</span><span class="sxs-lookup"><span data-stu-id="9dab7-108">Initializes a new instance of the <see cref="T:System.ComponentModel.BooleanConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="booleanConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="9dab7-109">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="9dab7-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="9dab7-110"><see cref="T:System.Type" /> que representa el tipo de origen de la conversión.</span><span class="sxs-lookup"><span data-stu-id="9dab7-110">A <see cref="T:System.Type" /> that represents the type you wish to convert from.</span></span></param>
        <summary><span data-ttu-id="9dab7-111">Obtiene un valor que indica si este convertidor puede convertir un objeto del tipo de origen especificado en un objeto Boolean mediante el contexto especificado.</span><span class="sxs-lookup"><span data-stu-id="9dab7-111">Gets a value indicating whether this converter can convert an object in the given source type to a Boolean object using the specified context.</span></span></summary>
        <returns><span data-ttu-id="9dab7-112">Es <see langword="true" /> si este objeto puede realizar la conversión; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dab7-112"><see langword="true" /> if this object can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dab7-113">Este convertidor solo puede convertir un objeto Boolean hacia y desde una cadena.</span><span class="sxs-lookup"><span data-stu-id="9dab7-113">This converter can only convert a Boolean object to and from a string.</span></span>  
  
 <span data-ttu-id="9dab7-114">El parámetro `context` puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="9dab7-114">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="9dab7-115">Puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="9dab7-115">This can be `null`, so always check.</span></span> <span data-ttu-id="9dab7-116">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="9dab7-116">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="booleanConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="9dab7-117">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="9dab7-117">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="9dab7-118">Clase <see cref="T:System.Globalization.CultureInfo" /> que especifica la referencia cultural a la que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="9dab7-118">A <see cref="T:System.Globalization.CultureInfo" /> that specifies the culture to which to convert.</span></span></param>
        <param name="value"><span data-ttu-id="9dab7-119"><see cref="T:System.Object" /> que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="9dab7-119">The <see cref="T:System.Object" /> to convert.</span></span></param>
        <summary><span data-ttu-id="9dab7-120">Convierte el objeto de valor especificado en un objeto Boolean.</span><span class="sxs-lookup"><span data-stu-id="9dab7-120">Converts the given value object to a Boolean object.</span></span></summary>
        <returns><span data-ttu-id="9dab7-121"><see cref="T:System.Object" /> que representa el parámetro <paramref name="value" /> convertido.</span><span class="sxs-lookup"><span data-stu-id="9dab7-121">An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dab7-122">Este convertidor solo puede convertir un objeto Boolean hacia y desde una cadena.</span><span class="sxs-lookup"><span data-stu-id="9dab7-122">This converter can only convert a Boolean object to and from a string.</span></span>  
  
 <span data-ttu-id="9dab7-123">El parámetro `context` puede utilizarse para extraer información adicional acerca del entorno desde el que se está llamando a este convertidor.</span><span class="sxs-lookup"><span data-stu-id="9dab7-123">The `context` parameter can be used to extract additional information about the environment this converter is being invoked from.</span></span> <span data-ttu-id="9dab7-124">Puede ser `null`, por lo que debe comprobarse siempre.</span><span class="sxs-lookup"><span data-stu-id="9dab7-124">This can be `null`, so always check.</span></span> <span data-ttu-id="9dab7-125">Asimismo, las propiedades del objeto de contexto pueden devolver `null`.</span><span class="sxs-lookup"><span data-stu-id="9dab7-125">Also, properties on the context object can return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="9dab7-126"><paramref name="value" /> no es un valor válido para el tipo de destino.</span><span class="sxs-lookup"><span data-stu-id="9dab7-126"><paramref name="value" /> is not a valid value for the target type.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="9dab7-127">No se puede realizar la conversión.</span><span class="sxs-lookup"><span data-stu-id="9dab7-127">The conversion cannot be performed.</span></span></exception>
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValues : System.ComponentModel.ITypeDescriptorContext -&gt; System.ComponentModel.TypeConverter.StandardValuesCollection" Usage="booleanConverter.GetStandardValues context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="9dab7-128">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="9dab7-128">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="9dab7-129">Obtiene una colección de valores estándar para el tipo de datos Boolean.</span><span class="sxs-lookup"><span data-stu-id="9dab7-129">Gets a collection of standard values for the Boolean data type.</span></span></summary>
        <returns><span data-ttu-id="9dab7-130">Una clase <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> que contiene un conjunto estándar de valores válidos.</span><span class="sxs-lookup"><span data-stu-id="9dab7-130">A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dab7-131">El tipo de datos Boolean tiene dos valores estándares, `true` y `false`.</span><span class="sxs-lookup"><span data-stu-id="9dab7-131">The Boolean data type has two standard values, `true` and `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesExclusive : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="booleanConverter.GetStandardValuesExclusive context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="9dab7-132">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="9dab7-132">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="9dab7-133">Obtiene un valor que indica si la lista de valores estándar devuelta por el método <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> es una lista exclusiva.</span><span class="sxs-lookup"><span data-stu-id="9dab7-133">Gets a value indicating whether the list of standard values returned from the <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> method is an exclusive list.</span></span></summary>
        <returns><span data-ttu-id="9dab7-134"><see langword="true" /> porque la clase <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> devuelta por el método <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> es una lista exhaustiva de valores posibles.</span><span class="sxs-lookup"><span data-stu-id="9dab7-134"><see langword="true" /> because the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> is an exhaustive list of possible values.</span></span> <span data-ttu-id="9dab7-135">Este método nunca devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dab7-135">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dab7-136">El tipo de datos Boolean tiene solo dos valores estándares, `true` y `false`.</span><span class="sxs-lookup"><span data-stu-id="9dab7-136">The Boolean data type has only two standard values, `true` and `false`.</span></span> <span data-ttu-id="9dab7-137">El <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> devueltos desde este método tiene todos los valores posibles.</span><span class="sxs-lookup"><span data-stu-id="9dab7-137">The <xref:System.ComponentModel.TypeConverter.StandardValuesCollection> returned from this method has all possible values.</span></span> <span data-ttu-id="9dab7-138">Por lo tanto, este método siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="9dab7-138">Therefore, this method always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.BooleanConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetStandardValuesSupported : System.ComponentModel.ITypeDescriptorContext -&gt; bool" Usage="booleanConverter.GetStandardValuesSupported context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.TypeConverter</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="9dab7-139">Objeto <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que proporciona un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="9dab7-139">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <summary><span data-ttu-id="9dab7-140">Obtiene un valor que indica si el objeto admite un conjunto estándar de valores que se pueden seleccionar de una lista.</span><span class="sxs-lookup"><span data-stu-id="9dab7-140">Gets a value indicating whether this object supports a standard set of values that can be picked from a list.</span></span></summary>
        <returns><span data-ttu-id="9dab7-141"><see langword="true" /> porque se puede llamar al método <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> para buscar un conjunto común de valores que sea compatible con el objeto.</span><span class="sxs-lookup"><span data-stu-id="9dab7-141"><see langword="true" /> because <see cref="M:System.ComponentModel.BooleanConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" /> can be called to find a common set of values the object supports.</span></span> <span data-ttu-id="9dab7-142">Este método nunca devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9dab7-142">This method never returns <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9dab7-143">El tipo de datos Boolean admite valores estándar, porque sólo puede ser un valor booleano `true` o `false`.</span><span class="sxs-lookup"><span data-stu-id="9dab7-143">The Boolean data type supports standard values, because a Boolean can only be `true` or `false`.</span></span> <span data-ttu-id="9dab7-144">Por lo tanto, este método siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="9dab7-144">Therefore, this method always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ServiceProviders" FullName="System.Windows.Markup.ServiceProviders">
  <Metadata><Meta Name="ms.openlocfilehash" Value="52f7ab79ea634b1991f583b83223dcf87ae0b582" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48627586" /></Metadata><TypeSignature Language="C#" Value="public class ServiceProviders : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceProviders extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.ServiceProviders" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceProviders&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceProviders : IServiceProvider" />
  <TypeSignature Language="F#" Value="type ServiceProviders = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9622b-101">Proporciona a una implementación de la interfaz <see cref="T:System.IServiceProvider" /> con los métodos que habilitan los servicios de la adición.</span><span class="sxs-lookup"><span data-stu-id="9622b-101">Provides an implementation for the <see cref="T:System.IServiceProvider" /> interface with methods that enable adding services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9622b-102">Esto es una clase de utilidad para su uso cuando se serializa el contenido.</span><span class="sxs-lookup"><span data-stu-id="9622b-102">This is a utility class for use when serializing content.</span></span> <span data-ttu-id="9622b-103">La clase es básicamente un diccionario solo de entrada para almacenar servicios con clave por su tipo de servicio, que implementa <xref:System.IServiceProvider> para su recuperación posterior del mismo diccionario.</span><span class="sxs-lookup"><span data-stu-id="9622b-103">The class is basically an input-only dictionary for storing services keyed by their service type, which implements <xref:System.IServiceProvider> for later retrieval from the same dictionary.</span></span> <span data-ttu-id="9622b-104">Mediante el diccionario evita consultar varias veces para el mismo servicio.</span><span class="sxs-lookup"><span data-stu-id="9622b-104">Using the dictionary avoids querying for the same service repeatedly.</span></span> <span data-ttu-id="9622b-105">Esta clase es la clase base de <xref:System.Windows.Markup.XamlDesignerSerializationManager>, que es el servicio utiliza para `ShouldSerialize` las implementaciones de método en otras partes de WPF.</span><span class="sxs-lookup"><span data-stu-id="9622b-105">This class is the base class of <xref:System.Windows.Markup.XamlDesignerSerializationManager>, which is the service used for `ShouldSerialize` method implementations in other parts of WPF.</span></span>  
  
 <span data-ttu-id="9622b-106">Uso de esta clase requiere que hacen referencia a ensamblados de WPF, no está pensado para escenarios de servicios XAML de .NET Framework generales.</span><span class="sxs-lookup"><span data-stu-id="9622b-106">Using this class requires referencing WPF assemblies, it is not intended for general .NET Framework XAML Services scenarios.</span></span> <span data-ttu-id="9622b-107">El escenario aquí es para la implementación interna de WPF de características de servicio intensivo durante la serialización, como al procesar el `ShouldSerialize` las implementaciones de determinados tipos.</span><span class="sxs-lookup"><span data-stu-id="9622b-107">The scenario here is for WPF internal implementation of service-intensive features during serialization, such as when processing the `ShouldSerialize` implementations of certain types.</span></span> <span data-ttu-id="9622b-108">La clase práctica implicada en este escenario es la clase derivada <xref:System.Windows.Markup.XamlDesignerSerializationManager>.</span><span class="sxs-lookup"><span data-stu-id="9622b-108">The practical class involved in this scenario is the derived class <xref:System.Windows.Markup.XamlDesignerSerializationManager>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceProviders ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceProviders();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9622b-109">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.ServiceProviders" />.</span><span class="sxs-lookup"><span data-stu-id="9622b-109">Initializes a new instance of the <see cref="T:System.Windows.Markup.ServiceProviders" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddService">
      <MemberSignature Language="C#" Value="public void AddService (Type serviceType, object service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddService(class System.Type serviceType, object service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddService (serviceType As Type, service As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddService(Type ^ serviceType, System::Object ^ service);" />
      <MemberSignature Language="F#" Value="member this.AddService : Type * obj -&gt; unit" Usage="serviceProviders.AddService (serviceType, service)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="service" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="9622b-110">Tipo de servicio del nuevo servicio.</span><span class="sxs-lookup"><span data-stu-id="9622b-110">Service type of the new service.</span></span></param>
        <param name="service"><span data-ttu-id="9622b-111">Clase de implementación del servicio.</span><span class="sxs-lookup"><span data-stu-id="9622b-111">The service implementation class.</span></span></param>
        <summary><span data-ttu-id="9622b-112">Agrega un servicio a la lista.</span><span class="sxs-lookup"><span data-stu-id="9622b-112">Adds a service to the list.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9622b-113"><paramref name="serviceType" /> o <paramref name="service" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="9622b-113"><paramref name="serviceType" /> or <paramref name="service" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9622b-114">Se intenta agregar un servicio que ya existe en el diccionario.</span><span class="sxs-lookup"><span data-stu-id="9622b-114">Attempted to add a service that already exists in the dictionary.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="serviceProviders.GetService serviceType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="9622b-115">Tipo de objeto de servicio que se va a obtener.</span><span class="sxs-lookup"><span data-stu-id="9622b-115">The type of service object to get.</span></span></param>
        <summary><span data-ttu-id="9622b-116">Obtiene el objeto de servicio del tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="9622b-116">Gets the service object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="9622b-117">Implementación del servicio para el tipo <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="9622b-117">A service implementation for the type <paramref name="serviceType" />.</span></span> <span data-ttu-id="9622b-118">Puede ser <see langword="null" /> si no hay ningún servicio almacenado para el tipo <paramref name="serviceType" />.</span><span class="sxs-lookup"><span data-stu-id="9622b-118">May be <see langword="null" /> if there is no service stored for type <paramref name="serviceType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
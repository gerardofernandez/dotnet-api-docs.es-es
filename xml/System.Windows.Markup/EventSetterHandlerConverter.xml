<Type Name="EventSetterHandlerConverter" FullName="System.Windows.Markup.EventSetterHandlerConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f81495779d6305af4ceb4a750bb4feb33eb22121" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52243243" /></Metadata><TypeSignature Language="C#" Value="public sealed class EventSetterHandlerConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventSetterHandlerConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.EventSetterHandlerConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventSetterHandlerConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetterHandlerConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type EventSetterHandlerConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c42d4-101">Convierte el nombre de cadena de un controlador de establecedores de eventos en la representación de un delegado.</span><span class="sxs-lookup"><span data-stu-id="c42d4-101">Converts the string name of an event setter handler to a delegate representation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42d4-102">Para obtener más información acerca de cómo el XAML para WPF procesa los nombres de controlador de eventos, consulte [información general sobre XAML (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="c42d4-102">For more information about how XAML for WPF processes event handler names, see [XAML Overview (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetterHandlerConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetterHandlerConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c42d4-103">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" />.</span><span class="sxs-lookup"><span data-stu-id="c42d4-103">Initializes a new instance of the <see cref="T:System.Windows.Markup.EventSetterHandlerConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (typeDescriptorContext As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="eventSetterHandlerConverter.CanConvertFrom (typeDescriptorContext, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext"><span data-ttu-id="c42d4-104"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="c42d4-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="c42d4-105"><see cref="T:System.Type" /> que representa el tipo desde el que se quiere convertir.</span><span class="sxs-lookup"><span data-stu-id="c42d4-105">A <see cref="T:System.Type" /> that represents the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="c42d4-106">Devuelve si este convertidor puede convertir un objeto de un tipo en un objeto <see cref="T:System.Delegate" />.</span><span class="sxs-lookup"><span data-stu-id="c42d4-106">Returns whether this converter can convert an object of one type to a <see cref="T:System.Delegate" />.</span></span></summary>
        <returns><span data-ttu-id="c42d4-107"><see langword="true" /> si este convertidor puede realizar la conversión; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c42d4-107"><see langword="true" /> if this converter can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42d4-108">Este método devuelve `true` solo cuando `sourceType` es un <xref:System.String> tipo.</span><span class="sxs-lookup"><span data-stu-id="c42d4-108">This method returns `true` only when `sourceType` is a <xref:System.String> type.</span></span> <span data-ttu-id="c42d4-109">Todos los demás `sourceType` tipos devuelven `false`.</span><span class="sxs-lookup"><span data-stu-id="c42d4-109">All other `sourceType` types return `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (typeDescriptorContext As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="eventSetterHandlerConverter.CanConvertTo (typeDescriptorContext, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext"><span data-ttu-id="c42d4-110"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="c42d4-110">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="c42d4-111"><see cref="T:System.Type" /> que representa el tipo al que se quiere convertir.</span><span class="sxs-lookup"><span data-stu-id="c42d4-111">A <see cref="T:System.Type" /> that represents the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="c42d4-112">Devuelve si este convertidor puede convertir el objeto al tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="c42d4-112">Returns whether this converter can convert the object to the specified type.</span></span></summary>
        <returns><span data-ttu-id="c42d4-113">Siempre devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c42d4-113">Always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, System::Globalization::CultureInfo ^ cultureInfo, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="eventSetterHandlerConverter.ConvertFrom (typeDescriptorContext, cultureInfo, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext"><span data-ttu-id="c42d4-114"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="c42d4-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="c42d4-115"><see cref="T:System.Globalization.CultureInfo" /> que se va a usar como referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="c42d4-115">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="source"><span data-ttu-id="c42d4-116">Cadena de origen que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="c42d4-116">The source string to convert.</span></span></param>
        <summary><span data-ttu-id="c42d4-117">Convierte la cadena especificada en un nuevo objeto <see cref="T:System.Delegate" /> para el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="c42d4-117">Converts the specified string to a new <see cref="T:System.Delegate" /> for the event handler.</span></span></summary>
        <returns><span data-ttu-id="c42d4-118">Nuevo objeto <see cref="T:System.Delegate" /> que representa el controlador de eventos al que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="c42d4-118">A new <see cref="T:System.Delegate" /> that represents the referenced event handler.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c42d4-119">El `typeDescriptorContext` debe proporcionar servicios para <xref:System.Xaml.IRootObjectProvider> y <xref:System.Windows.Markup.IProvideValueTarget>.</span><span class="sxs-lookup"><span data-stu-id="c42d4-119">The `typeDescriptorContext` must provide services for <xref:System.Xaml.IRootObjectProvider> and <xref:System.Windows.Markup.IProvideValueTarget>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c42d4-120">Los servicios necesarios no están disponibles.</span><span class="sxs-lookup"><span data-stu-id="c42d4-120">The necessary services are not available.</span></span>  
  
<span data-ttu-id="c42d4-121">O bien</span><span class="sxs-lookup"><span data-stu-id="c42d4-121">-or-</span></span> 
<span data-ttu-id="c42d4-122">No se pudo realizar la conversión específica.</span><span class="sxs-lookup"><span data-stu-id="c42d4-122">Could not perform the specific conversion.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c42d4-123"><paramref name="typeDescriptorContext" /> o <paramref name="source" /> son <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c42d4-123"><paramref name="typeDescriptorContext" /> or <paramref name="source" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, class System.Globalization.CultureInfo cultureInfo, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.EventSetterHandlerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ typeDescriptorContext, System::Globalization::CultureInfo ^ cultureInfo, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="eventSetterHandlerConverter.ConvertTo (typeDescriptorContext, cultureInfo, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeDescriptorContext" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeDescriptorContext"><span data-ttu-id="c42d4-124"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> que ofrece un contexto de formato.</span><span class="sxs-lookup"><span data-stu-id="c42d4-124">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="cultureInfo"><span data-ttu-id="c42d4-125"><see cref="T:System.Globalization.CultureInfo" /> que se va a usar como referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="c42d4-125">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</span></span></param>
        <param name="value"><span data-ttu-id="c42d4-126">Valor que se va a convertir.</span><span class="sxs-lookup"><span data-stu-id="c42d4-126">The value to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="c42d4-127">Tipo al que se va a convertir el parámetro <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="c42d4-127">The type to convert the <paramref name="value" /> parameter to.</span></span></param>
        <summary><span data-ttu-id="c42d4-128">Convierte el objeto de valor especificado al tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="c42d4-128">Converts the specified value object to the specified type.</span></span> <span data-ttu-id="c42d4-129">Siempre produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c42d4-129">Always throws an exception.</span></span></summary>
        <returns><span data-ttu-id="c42d4-130">Siempre produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c42d4-130">Always throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="c42d4-131">Se produce en todos los casos.</span><span class="sxs-lookup"><span data-stu-id="c42d4-131">Thrown in all cases.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
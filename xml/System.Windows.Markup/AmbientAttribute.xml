<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a4ff60fed16d6cce41ca00324ef7bc44fc9a77f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51924139" /></Metadata><TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="62071-101">Especifica que una propiedad o un tipo debe tratarse como ambiente.</span><span class="sxs-lookup"><span data-stu-id="62071-101">Specifies that a property or type should be treated as ambient.</span></span> <span data-ttu-id="62071-102">El concepto de ambiente se relaciona con la forma en que los procesadores XAML determinan los propietarios de tipos de los miembros.</span><span class="sxs-lookup"><span data-stu-id="62071-102">The ambient concept relates to how XAML processors determine type owners of members.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62071-103">Una propiedad de ambiente es una propiedad donde el valor debe estar disponible en el contexto del analizador al crear un gráfico de objetos, pero donde se suspende la búsqueda de miembros de tipo típico para fines de conjunto que se crea el nodo XAML más próximo.</span><span class="sxs-lookup"><span data-stu-id="62071-103">An ambient property is a property where the value is expected to be available in the parser context when creating an object graph, but where typical type-member lookup is suspended for purposes of the immediate XAML node set being created.</span></span> <span data-ttu-id="62071-104">Hay dos escenarios principales para el concepto de ambiente:</span><span class="sxs-lookup"><span data-stu-id="62071-104">There are two main scenarios for the ambient concept:</span></span>  
  
-   <span data-ttu-id="62071-105">Otra propiedad del mismo objeto influye y califica el funcionamiento de que la búsqueda de objetos y propiedades.</span><span class="sxs-lookup"><span data-stu-id="62071-105">Some other property of the same object influences and qualifies how that object-property lookup should work.</span></span>  
  
-   <span data-ttu-id="62071-106">La propiedad representa un mecanismo de aplazamiento mayor y amplían las capacidades de ambiente para buscar un valor de miembro a todos los objetos contenidos dentro del objeto actual.</span><span class="sxs-lookup"><span data-stu-id="62071-106">The property represents a larger deferral mechanism and the ambient capabilities for looking up a member value extend to all objects contained within the current object.</span></span>  
  
 <span data-ttu-id="62071-107">Este atributo puede aplicarse a las propiedades específicas que han esperado contenedores que permiten un comportamiento de búsqueda de la propiedad de ambiente o se puede aplicar a una clase para habilitar el comportamiento de la propiedad de ambiente en todos los casos de ese tipo de valor para una propiedad.</span><span class="sxs-lookup"><span data-stu-id="62071-107">This attribute can be applied to specific properties that have expected containers that enable an ambient property lookup behavior, or can be applied to a class to enable the ambient property behavior in all cases of that value type for a property.</span></span>  
  
 <span data-ttu-id="62071-108"><xref:System.Windows.Markup.AmbientAttribute> También puede aplicarse a un método CLR, para admitir la atribución de una propiedad adjuntable XAML como ambiente.</span><span class="sxs-lookup"><span data-stu-id="62071-108"><xref:System.Windows.Markup.AmbientAttribute> can also be applied to a CLR method, to support attributing a XAML attachable property as ambient.</span></span> <span data-ttu-id="62071-109">Esto es potencialmente necesario porque en una implementación de CLR un XAML propiedad adjunta se implementa/representa a la reflexión como un patrón de descriptor de acceso con `get` y `set` métodos.</span><span class="sxs-lookup"><span data-stu-id="62071-109">This is potentially necessary because in a CLR implementation a XAML attached property is implemented/represented to reflection as an accessor pattern with `get` and `set` methods.</span></span> <span data-ttu-id="62071-110">No existe ninguna propiedad CLR real al atributo, por lo que restringe el uso de <xref:System.AttributeTargets> a `Property` no habría permitido especificar un miembro adjuntable como ambiente.</span><span class="sxs-lookup"><span data-stu-id="62071-110">No actual CLR property to attribute exists, so restricting usage for <xref:System.AttributeTargets> to `Property` would not have enabled specifying an attachable member as ambient.</span></span> <span data-ttu-id="62071-111">Para un miembro adjuntable que desea notificar como ambiente, atributo el `get` descriptor de acceso.</span><span class="sxs-lookup"><span data-stu-id="62071-111">For an attachable member that you want to report as ambient, attribute the `get` accessor.</span></span> <span data-ttu-id="62071-112">No debe intentar los métodos de atributos que no son específicamente los métodos de compatibilidad de miembros adjuntables.</span><span class="sxs-lookup"><span data-stu-id="62071-112">You should not attempt to attribute methods that are not specifically support methods of attachable members.</span></span>  
  
 <span data-ttu-id="62071-113">En versiones anteriores de .NET Framework, esta clase existía en el ensamblado específico de WPF WindowsBase.</span><span class="sxs-lookup"><span data-stu-id="62071-113">In previous versions of the .NET Framework, this class existed in the WPF-specific assembly WindowsBase.</span></span> <span data-ttu-id="62071-114">En [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> está en el ensamblado System.Xaml.</span><span class="sxs-lookup"><span data-stu-id="62071-114">In [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> is in the System.Xaml assembly.</span></span> <span data-ttu-id="62071-115">Para obtener más información, consulta [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="62071-115">For more information, see [Types Migrated from WPF to System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).</span></span>  
  
 <span data-ttu-id="62071-116">Tipos de ambiente (tipos where <xref:System.Windows.Markup.AmbientAttribute> se aplica en el nivel de tipo) puede utilizarse en determinadas situaciones de procesamiento de XAML donde el tipo de una propiedad debe resolverse en el orden correcto.</span><span class="sxs-lookup"><span data-stu-id="62071-116">Ambient types (types where <xref:System.Windows.Markup.AmbientAttribute> is applied at type level) can be used for certain XAML processing situations where the type of a property needs to be resolved out of order.</span></span>  
  
## <a name="object-writer-scenarios"></a><span data-ttu-id="62071-117">Escenarios del escritor de objetos</span><span class="sxs-lookup"><span data-stu-id="62071-117">Object Writer Scenarios</span></span>  
 <span data-ttu-id="62071-118">Si está definiendo un escritor de objetos XAML, y encuentra un tipo, método o propiedad donde <xref:System.Windows.Markup.AmbientAttribute> es aplican, normalmente debe acceder a un servicio para determinar el comportamiento de búsqueda de la propiedad de ambiente deseada que se necesita para escribir objetos.</span><span class="sxs-lookup"><span data-stu-id="62071-118">If you are defining a XAML object writer, and you encounter a property, method or type where <xref:System.Windows.Markup.AmbientAttribute> is applied, you typically must access a service to determine the intended ambient property lookup behavior that is needed for writing out objects.</span></span> <span data-ttu-id="62071-119">Para obtener más información, vea <xref:System.Xaml.IAmbientProvider>.</span><span class="sxs-lookup"><span data-stu-id="62071-119">For more information, see <xref:System.Xaml.IAmbientProvider>.</span></span>  
  
## <a name="value-converters"></a><span data-ttu-id="62071-120">Convertidores de valores</span><span class="sxs-lookup"><span data-stu-id="62071-120">Value Converters</span></span>  
 <span data-ttu-id="62071-121">Convertidores de tipos o extensiones de marcado que necesite conocer la información de ambiente para procesar las propiedades que representan las asignaciones de tipos indirecta, como las propiedades que especifican los miembros o tipos por los nombres de cadena con o sin calificación.</span><span class="sxs-lookup"><span data-stu-id="62071-121">Type converters or markup extensions might need to know the ambient information in order to process properties that represent indirect type mappings, such as properties that specify members or types by string names with or without qualification.</span></span> <span data-ttu-id="62071-122">En este escenario, <xref:System.Windows.Markup.AmbientAttribute> no está pensado para usarse directamente para la lógica de código del convertidor de valores.</span><span class="sxs-lookup"><span data-stu-id="62071-122">In this scenario, <xref:System.Windows.Markup.AmbientAttribute> is not intended to be used directly for value converter code logic.</span></span> <span data-ttu-id="62071-123">En su lugar, el convertidor de valores debe confiar en el comportamiento de procesamiento de escritor XAML, que pasará <xref:System.Xaml.IAmbientProvider> en sus contextos de servicio a los métodos de convertidor de tipos de valor cuando se llama.</span><span class="sxs-lookup"><span data-stu-id="62071-123">Rather, the value converter should rely on the XAML writer processing behavior, which will pass <xref:System.Xaml.IAmbientProvider> in its service contexts to your value converter methods when called.</span></span>  
  
## <a name="wpf-scenarios-for-ambientattribute"></a><span data-ttu-id="62071-124">Escenarios de WPF para AmbientAttribute</span><span class="sxs-lookup"><span data-stu-id="62071-124">WPF Scenarios for AmbientAttribute</span></span>  
  
-   <span data-ttu-id="62071-125">Una propiedad de un <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) puede calificar las búsquedas de nombre de propiedad necesarios que son necesarios para buscar las referencias de respaldo para los nombres de propiedad en <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> valores.</span><span class="sxs-lookup"><span data-stu-id="62071-125">A property of a <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) can qualify the necessary property name lookups that are needed to find the backing references for property names in <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> values.</span></span>  
  
-   <span data-ttu-id="62071-126">Todo el contenido dentro de un `Resources` propiedad (elementos de un <xref:System.Windows.ResourceDictionary>), así como contenido de la plantilla, debe poder tener acceso a otros elementos del mismo nivel como valores.</span><span class="sxs-lookup"><span data-stu-id="62071-126">All content within a `Resources` property (items of a <xref:System.Windows.ResourceDictionary>) as well as template content, should be able to access other peers as values.</span></span> <span data-ttu-id="62071-127">Declarar toda la `Resources` propiedad como ambiente invoca la lógica que permite esto en el analizador de WPF XAML.</span><span class="sxs-lookup"><span data-stu-id="62071-127">Declaring the entire `Resources` property as ambient invokes logic that enables this in the WPF XAML parser.</span></span>  
  
 <span data-ttu-id="62071-128">Consulte <xref:System.Windows.ResourceDictionary> para obtener un ejemplo de un escenario de configuración <xref:System.Windows.Markup.AmbientAttribute> en nivel de tipo.</span><span class="sxs-lookup"><span data-stu-id="62071-128">See <xref:System.Windows.ResourceDictionary> for an example of a scenario for setting <xref:System.Windows.Markup.AmbientAttribute> at type level.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
    <related type="Article" href="https://msdn.microsoft.com/library/5dfb299a-b6e2-41b8-8694-e6ac987547f1"><span data-ttu-id="62071-129">Atributos CLR relacionados con XAML para los tipos y bibliotecas personalizados</span><span class="sxs-lookup"><span data-stu-id="62071-129">XAML-Related CLR Attributes For Custom Types and Libraries</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/c2667cbd-2f46-4a7f-9dfc-53696e35e8e4"><span data-ttu-id="62071-130">Definir tipos personalizados para usarlos con los servicios XAML de .NET Framework</span><span class="sxs-lookup"><span data-stu-id="62071-130">Defining Custom Types for Use with .NET Framework XAML Services</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0e11f386-808c-4eae-9ba6-029ad7ba2211"><span data-ttu-id="62071-131">Documentación Conceptual de los servicios XAML de NET</span><span class="sxs-lookup"><span data-stu-id="62071-131">NET XAML Services Conceptual Documentation</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62071-132">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Markup.AmbientAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="62071-132">Initializes a new instance of the <see cref="T:System.Windows.Markup.AmbientAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="XsdDataContractExporter" FullName="System.Runtime.Serialization.XsdDataContractExporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="70e5b35b1f21e29d8ad104f104e7aaf4ea37d635" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58731763" /></Metadata><TypeSignature Language="C#" Value="public class XsdDataContractExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XsdDataContractExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.XsdDataContractExporter" />
  <TypeSignature Language="VB.NET" Value="Public Class XsdDataContractExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XsdDataContractExporter" />
  <TypeSignature Language="F#" Value="type XsdDataContractExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
    <AssemblyVersion>4.1.3.0</AssemblyVersion>
    <AssemblyVersion>4.1.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a29c8-101">Permite la transformación de un conjunto de tipos de .NET Framework que se usan en contratos de datos en un archivo de esquema XML (.xsd).</span><span class="sxs-lookup"><span data-stu-id="a29c8-101">Allows the transformation of a set of .NET Framework types that are used in data contracts into an XML schema file (.xsd).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a29c8-102">Use la clase <xref:System.Runtime.Serialization.XsdDataContractExporter> cuando haya creado un servicio Web que incorpore datos representados por tipos de Common Language Runtime (CLR) y cuando necesite exportar esquemas XML para cada tipo que vayan a usar otros servicios Web.</span><span class="sxs-lookup"><span data-stu-id="a29c8-102">Use the <xref:System.Runtime.Serialization.XsdDataContractExporter> class when you have created a Web service that incorporates data represented by common language runtime (CLR) types and when you need to export XML schemas for each type to be consumed by other Web services.</span></span> <span data-ttu-id="a29c8-103">Es decir, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforma un conjunto de tipos de CLR en esquemas XML.</span><span class="sxs-lookup"><span data-stu-id="a29c8-103">That is, <xref:System.Runtime.Serialization.XsdDataContractExporter> transforms a set of CLR types into XML schemas.</span></span> <span data-ttu-id="a29c8-104">(Para obtener más información acerca de los tipos que se puede usar, consulte [tipos admitidos por el serializador de contratos de datos](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) Los esquemas se pueden exponer, a continuación, a través de un documento de lenguaje de descripción de servicios Web (WSDL) para que los puedan usar otros usuarios que necesiten interoperar con su servicio.</span><span class="sxs-lookup"><span data-stu-id="a29c8-104">(For more information about the types that can be used, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).) The schemas can then be exposed through a Web Services Description Language (WSDL) document for use by others who need to interoperate with your service.</span></span>  
  
 <span data-ttu-id="a29c8-105">Por el contrario, si está creando un servicio Web que debe interoperar con un servicio Web existente, use <xref:System.Runtime.Serialization.XsdDataContractImporter> para transformar los esquemas XML y crear los tipos de CLR que representan los datos en un lenguaje de programación seleccionado.</span><span class="sxs-lookup"><span data-stu-id="a29c8-105">Conversely, if you are creating a Web service that must interoperate with an existing Web service, use the <xref:System.Runtime.Serialization.XsdDataContractImporter> to transform XML schemas and create the CLR types that represent the data in a selected programming language.</span></span>  
  
 <span data-ttu-id="a29c8-106"><xref:System.Runtime.Serialization.XsdDataContractExporter> genera un objeto <xref:System.Xml.Schema.XmlSchemaSet> que contiene la colección de esquemas.</span><span class="sxs-lookup"><span data-stu-id="a29c8-106">The <xref:System.Runtime.Serialization.XsdDataContractExporter> generates an <xref:System.Xml.Schema.XmlSchemaSet> object that contains the collection of schemas.</span></span> <span data-ttu-id="a29c8-107">Obtenga acceso al conjunto de esquemas a través de la propiedad <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-107">Access the set of schemas through the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a29c8-108">Para generar rápidamente archivos de definición del esquema XML (XSD) que otros servicios Web pueden usar, use <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-108">To quickly generate XML schema definition (XSD) files that other Web services can consume, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
## <a name="exporting-schemas-into-an-xmlschemaset"></a><span data-ttu-id="a29c8-109">Exportar esquemas a un XmlSchemaSet</span><span class="sxs-lookup"><span data-stu-id="a29c8-109">Exporting Schemas Into an XmlSchemaSet</span></span>  
 <span data-ttu-id="a29c8-110">Para crear una instancia de la clase <xref:System.Xml.Schema.XmlSchemaSet> que contiene archivos de esquema XML, deberá tener en cuenta lo siguiente.</span><span class="sxs-lookup"><span data-stu-id="a29c8-110">To create an instance of the <xref:System.Xml.Schema.XmlSchemaSet> class that contains XML schema files, you should be aware of the following.</span></span>  
  
 <span data-ttu-id="a29c8-111">El conjunto de tipos que está exportando se registra como un conjunto interno de contratos de datos.</span><span class="sxs-lookup"><span data-stu-id="a29c8-111">The set of types you are exporting are recorded as an internal set of data contracts.</span></span> <span data-ttu-id="a29c8-112">De este modo, puede llamar varias veces al método <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> para agregar tipos nuevos al conjunto de esquemas establecido sin que se reduzca el rendimiento porque sólo los tipos nuevos se agregarán al conjunto.</span><span class="sxs-lookup"><span data-stu-id="a29c8-112">Thus, you can call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> method multiple times to add new types to the schema set without degrading performance because only the new types will be added to the set.</span></span> <span data-ttu-id="a29c8-113">Durante la operación <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>, los esquemas existentes se comparan con los nuevos esquemas que se agregan.</span><span class="sxs-lookup"><span data-stu-id="a29c8-113">During the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> operation, the existing schemas are compared to the new schemas being added.</span></span> <span data-ttu-id="a29c8-114">Si hay conflictos, se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="a29c8-114">If there are conflicts, an exception will be thrown.</span></span> <span data-ttu-id="a29c8-115">Normalmente se detecta un conflicto si una misma instancia <xref:System.Runtime.Serialization.XsdDataContractExporter> exporta dos tipos con el mismo nombre de contrato de datos pero con contratos diferentes (miembros diferentes).</span><span class="sxs-lookup"><span data-stu-id="a29c8-115">A conflict is usually detected if two types with the same data contract name but different contracts (different members) are exported by the same <xref:System.Runtime.Serialization.XsdDataContractExporter> instance.</span></span>  
  
## <a name="using-the-exporter"></a><span data-ttu-id="a29c8-116">Uso del exportador</span><span class="sxs-lookup"><span data-stu-id="a29c8-116">Using the Exporter</span></span>  
 <span data-ttu-id="a29c8-117">Una manera recomendada de usar esta clase es como sigue:</span><span class="sxs-lookup"><span data-stu-id="a29c8-117">A recommended way of using this class is as follows:</span></span>  
  
1.  <span data-ttu-id="a29c8-118">Use una de las sobrecargas <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> para determinar si se puede exportar el tipo o conjunto de tipos especificado.</span><span class="sxs-lookup"><span data-stu-id="a29c8-118">Use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span> <span data-ttu-id="a29c8-119">Use una de las sobrecargas que se ajuste a sus requisitos.</span><span class="sxs-lookup"><span data-stu-id="a29c8-119">Use one of the overloads that is appropriate to your requirements.</span></span>  
  
2.  <span data-ttu-id="a29c8-120">Llame al método <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> correspondiente.</span><span class="sxs-lookup"><span data-stu-id="a29c8-120">Call the corresponding <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method.</span></span>  
  
3.  <span data-ttu-id="a29c8-121">Recupere los esquemas de la propiedad <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-121">Retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a29c8-122">En el ejemplo siguiente, se crea una instancia de <xref:System.Runtime.Serialization.XsdDataContractExporter> y se llama al método <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-122">The following example creates an instance of the <xref:System.Runtime.Serialization.XsdDataContractExporter> and calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#0](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#0)]
 [!code-vb[XsdDataContractExporter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md"><span data-ttu-id="a29c8-123">Tipos admitidos por el serializador de contrato de datos</span><span class="sxs-lookup"><span data-stu-id="a29c8-123">Types Supported by the Data Contract Serializer</span></span></related>
    <related type="Article" href="~/docs/framework/wcf/feature-details/serialization-and-deserialization.md"><span data-ttu-id="a29c8-124">Serialización y deserialización</span><span class="sxs-lookup"><span data-stu-id="a29c8-124">Serialization and Deserialization</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a29c8-125">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-125">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a29c8-126">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-126">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XsdDataContractExporter (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.#ctor(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XsdDataContractExporter(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Serialization.XsdDataContractExporter : System.Xml.Schema.XmlSchemaSet -&gt; System.Runtime.Serialization.XsdDataContractExporter" Usage="new System.Runtime.Serialization.XsdDataContractExporter schemas" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="a29c8-127"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas que se van a exportar.</span><span class="sxs-lookup"><span data-stu-id="a29c8-127">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas to be exported.</span></span></param>
        <summary><span data-ttu-id="a29c8-128">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> con el conjunto de esquemas especificado.</span><span class="sxs-lookup"><span data-stu-id="a29c8-128">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.XsdDataContractExporter" /> class with the specified set of schemas.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a29c8-129">Use esta sobrecarga cuando tenga un <xref:System.Xml.Schema.XmlSchemaSet> existente al que desee agregar esquemas nuevos.</span><span class="sxs-lookup"><span data-stu-id="a29c8-129">Use this overload when you have an existing <xref:System.Xml.Schema.XmlSchemaSet> to which you want to add new schemas.</span></span> <span data-ttu-id="a29c8-130">Después de construir <xref:System.Runtime.Serialization.XsdDataContractExporter> con esta sobrecarga, llame al método <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> para agregar tipos nuevos al conjunto existente.</span><span class="sxs-lookup"><span data-stu-id="a29c8-130">After you construct a <xref:System.Runtime.Serialization.XsdDataContractExporter> with this overload, call the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method to add new types to the existing set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanExport">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a29c8-131">Obtiene un valor que indica si se puede exportar un tipo (o conjunto de tipos) Common Language Runtime (CLR).</span><span class="sxs-lookup"><span data-stu-id="a29c8-131">Gets a value that indicates whether a common language runtime (CLR) type (or set of types) can be exported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a29c8-132">No todos los tipos de CLR se pueden usar en contratos de datos.</span><span class="sxs-lookup"><span data-stu-id="a29c8-132">Not all CLR types can be used in data contracts.</span></span> <span data-ttu-id="a29c8-133">Para obtener más información sobre lo que se puede serializar, consulte [tipos admitidos por el serializador de contratos de datos](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span><span class="sxs-lookup"><span data-stu-id="a29c8-133">For more information about what can be serialized, see [Types Supported by the Data Contract Serializer](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (assemblies As ICollection(Of Assembly)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies"><span data-ttu-id="a29c8-134"><see cref="T:System.Collections.Generic.ICollection`1" /> de <see cref="T:System.Reflection.Assembly" /> que contiene los ensamblados con los tipos para exportar.</span><span class="sxs-lookup"><span data-stu-id="a29c8-134">A <see cref="T:System.Collections.Generic.ICollection`1" /> of <see cref="T:System.Reflection.Assembly" /> that contains the assemblies with the types to export.</span></span></param>
        <summary><span data-ttu-id="a29c8-135">Obtiene un valor que indica si se puede exportar el conjunto de tipos de Common Language Runtime (CLR) incluidos en un conjunto de ensamblados.</span><span class="sxs-lookup"><span data-stu-id="a29c8-135">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a set of assemblies can be exported.</span></span></summary>
        <returns><span data-ttu-id="a29c8-136"><see langword="true" /> si se pueden exportar los tipos; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-136"><see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExport (types As ICollection(Of Type)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.CanExport : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; bool" Usage="xsdDataContractExporter.CanExport types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="a29c8-137"><see cref="T:System.Collections.Generic.ICollection`1" /> que contiene los tipos especificados para exportar.</span><span class="sxs-lookup"><span data-stu-id="a29c8-137">A <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the specified types to export.</span></span></param>
        <summary><span data-ttu-id="a29c8-138">Obtiene un valor que indica si se puede exportar el conjunto tipos de Common Language Runtime (CLR) incluidos en un <see cref="T:System.Collections.Generic.ICollection`1" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-138">Gets a value that indicates whether the set of .common language runtime (CLR) types contained in a <see cref="T:System.Collections.Generic.ICollection`1" /> can be exported.</span></span></summary>
        <returns><span data-ttu-id="a29c8-139"><see langword="true" /> si se pueden exportar los tipos; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-139"><see langword="true" /> if the types can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExport">
      <MemberSignature Language="C#" Value="public bool CanExport (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanExport(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.CanExport(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExport(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.CanExport : Type -&gt; bool" Usage="xsdDataContractExporter.CanExport type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a29c8-140"><see cref="T:System.Type" /> para exportar.</span><span class="sxs-lookup"><span data-stu-id="a29c8-140">The <see cref="T:System.Type" /> to export.</span></span></param>
        <summary><span data-ttu-id="a29c8-141">Obtiene un valor que indica si se puede exportar el tipo de Common Language Runtime (CLR) especificado.</span><span class="sxs-lookup"><span data-stu-id="a29c8-141">Gets a value that indicates whether the specified common language runtime (CLR) type can be exported.</span></span></summary>
        <returns><span data-ttu-id="a29c8-142"><see langword="true" /> si se puede exportar el tipo; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-142"><see langword="true" /> if the type can be exported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a29c8-143">En el ejemplo siguiente se llama al método <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> antes de llamar al método <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-143">The following example calls the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%28System.Type%29> method before calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%28System.Type%29> method.</span></span>  
  
 [!code-csharp[XsdDataContractExporter#1](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractexporter/cs/overview.cs#1)]
 [!code-vb[XsdDataContractExporter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractexporter/vb/overview.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Export">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a29c8-144">Transforma el tipo, o conjunto de tipos, de Common Language Runtime (CLR), en un conjunto de esquemas XML.</span><span class="sxs-lookup"><span data-stu-id="a29c8-144">Transforms the common language runtime (CLR) type, or set of types, into a set of XML schemas.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a29c8-145">Como práctica recomendada, use una de las sobrecargas <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> para determinar si se puede exportar el tipo o conjunto de tipos especificado.</span><span class="sxs-lookup"><span data-stu-id="a29c8-145">As a recommended practice, use one of the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> overloads to determine whether the specified type or set of types can be exported.</span></span>  
  
 <span data-ttu-id="a29c8-146">Después de llamar al método <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>, recupere los esquemas de la propiedad <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-146">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, retrieve the schemas from the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; assemblies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Reflection.Assembly&gt; assemblies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Reflection.Assembly})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (assemblies As ICollection(Of Assembly))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;System::Reflection::Assembly ^&gt; ^ assemblies);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt; -&gt; unit" Usage="xsdDataContractExporter.Export assemblies" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblies" Type="System.Collections.Generic.ICollection&lt;System.Reflection.Assembly&gt;" />
      </Parameters>
      <Docs>
        <param name="assemblies"><span data-ttu-id="a29c8-147"><see cref="T:System.Collections.Generic.ICollection`1" /> (de <see cref="T:System.Reflection.Assembly" />) que contiene los tipos para exportar.</span><span class="sxs-lookup"><span data-stu-id="a29c8-147">A <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Reflection.Assembly" />) that contains the types to export.</span></span></param>
        <summary><span data-ttu-id="a29c8-148">Transforma los tipos contenidos en la colección especificada de ensamblados.</span><span class="sxs-lookup"><span data-stu-id="a29c8-148">Transforms the types contained in the specified collection of assemblies.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a29c8-149">El argumento <paramref name="assemblies" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-149">The <paramref name="assemblies" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a29c8-150">Un <see cref="T:System.Reflection.Assembly" /> de la colección es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-150">An <see cref="T:System.Reflection.Assembly" /> in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (System.Collections.Generic.ICollection&lt;Type&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Collections.Generic.ICollection{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Export (types As ICollection(Of Type))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(System::Collections::Generic::ICollection&lt;Type ^&gt; ^ types);" />
      <MemberSignature Language="F#" Value="member this.Export : System.Collections.Generic.ICollection&lt;Type&gt; -&gt; unit" Usage="xsdDataContractExporter.Export types" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="types" Type="System.Collections.Generic.ICollection&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="types"><span data-ttu-id="a29c8-151"><see cref="T:System.Collections.Generic.ICollection`1" /> (de tipo <see cref="T:System.Type" />) que contiene los tipos que se van a exportar.</span><span class="sxs-lookup"><span data-stu-id="a29c8-151">A  <see cref="T:System.Collections.Generic.ICollection`1" /> (of <see cref="T:System.Type" />) that contains the types to export.</span></span></param>
        <summary><span data-ttu-id="a29c8-152">Transforma los tipos contenidos en <see cref="T:System.Collections.Generic.ICollection`1" /> pasados a este método.</span><span class="sxs-lookup"><span data-stu-id="a29c8-152">Transforms the types contained in the <see cref="T:System.Collections.Generic.ICollection`1" /> passed to this method.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a29c8-153">El argumento <paramref name="types" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-153">The <paramref name="types" /> argument is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a29c8-154">Un tipo de la colección es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-154">A type in the collection is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public void Export (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Export(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.Export(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Export(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.Export : Type -&gt; unit" Usage="xsdDataContractExporter.Export type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a29c8-155"><see cref="T:System.Type" /> para transformar en un esquema XML.</span><span class="sxs-lookup"><span data-stu-id="a29c8-155">The <see cref="T:System.Type" /> to transform into an XML schema.</span></span></param>
        <summary><span data-ttu-id="a29c8-156">Transforma el tipo [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] especificado en un esquema del lenguaje de definición de esquemas XML (XSD).</span><span class="sxs-lookup"><span data-stu-id="a29c8-156">Transforms the specified [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] type into an XML schema definition language (XSD) schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a29c8-157">Para determinar si se puede exportar el tipo, llame al método <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-157">Call the <xref:System.Runtime.Serialization.XsdDataContractExporter.CanExport%2A> to determine whether the type can be exported.</span></span> <span data-ttu-id="a29c8-158">Tras llamar al método <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A>, el esquema se puede recuperar a través de la propiedad <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-158">After calling the <xref:System.Runtime.Serialization.XsdDataContractExporter.Export%2A> method, the schema can be retrieved through the <xref:System.Runtime.Serialization.XsdDataContractExporter.Schemas%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a29c8-159">El argumento <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-159">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRootElementName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetRootElementName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetRootElementName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetRootElementName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetRootElementName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetRootElementName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetRootElementName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a29c8-160"><see cref="T:System.Type" /> que se va a consultar.</span><span class="sxs-lookup"><span data-stu-id="a29c8-160">The <see cref="T:System.Type" /> to query.</span></span></param>
        <summary><span data-ttu-id="a29c8-161">Devuelve el nombre de nivel superior y el espacio de nombres para <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-161">Returns the top-level name and namespace for the <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="a29c8-162">El <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre de nivel superior y el espacio de nombres para este <see cref="T:System.Type" />, que se escribe en la secuencia al escribir este objeto.</span><span class="sxs-lookup"><span data-stu-id="a29c8-162">The <see cref="T:System.Xml.XmlQualifiedName" /> that represents the top-level name and namespace for this <see cref="T:System.Type" />, which is written to the stream when writing this object.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a29c8-163">El argumento <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-163">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaType GetSchemaType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaType GetSchemaType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaType ^ GetSchemaType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaType : Type -&gt; System.Xml.Schema.XmlSchemaType" Usage="xsdDataContractExporter.GetSchemaType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a29c8-164">El tipo para el que se va a devolver un esquema.</span><span class="sxs-lookup"><span data-stu-id="a29c8-164">The type to return a schema for.</span></span></param>
        <summary><span data-ttu-id="a29c8-165">Devuelve un tipo de esquema XML para el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="a29c8-165">Returns the XML schema type for the specified type.</span></span></summary>
        <returns><span data-ttu-id="a29c8-166">Un <see cref="T:System.Xml.Schema.XmlSchemaType" /> que contiene el esquema XML.</span><span class="sxs-lookup"><span data-stu-id="a29c8-166">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> that contains the XML schema.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a29c8-167">El objetivo principal de este método es permitir los tipos anónimos en esquema XML que se va a representar.</span><span class="sxs-lookup"><span data-stu-id="a29c8-167">The main purpose of this method is to allow anonymous types in XML schema to be represented.</span></span> <span data-ttu-id="a29c8-168">Dado que los tipos anónimos no tienen ningún nombre de contrato ni espacio de nombres, no se pueden buscar con el <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span><span class="sxs-lookup"><span data-stu-id="a29c8-168">Because anonymous types do not have a contract name and namespace, they cannot be looked up using the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A>.</span></span> <span data-ttu-id="a29c8-169">Este método devuelve la definición <xref:System.Xml.Schema.XmlSchemaType> para tales tipos.</span><span class="sxs-lookup"><span data-stu-id="a29c8-169">This method returns the <xref:System.Xml.Schema.XmlSchemaType> definition for such types.</span></span> <span data-ttu-id="a29c8-170">Los tipos para los que el método <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> devuelve un nombre válido, este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="a29c8-170">The types for which the <xref:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName%2A> method returns a valid name, this method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a29c8-171">El argumento <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-171">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTypeName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName GetSchemaTypeName (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlQualifiedName GetSchemaTypeName(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.XsdDataContractExporter.GetSchemaTypeName(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlQualifiedName ^ GetSchemaTypeName(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSchemaTypeName : Type -&gt; System.Xml.XmlQualifiedName" Usage="xsdDataContractExporter.GetSchemaTypeName type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a29c8-172">El <see cref="T:System.Type" /> que se exportó.</span><span class="sxs-lookup"><span data-stu-id="a29c8-172">The <see cref="T:System.Type" /> that was exported.</span></span></param>
        <summary><span data-ttu-id="a29c8-173">Devuelve el nombre del contrato el espacio de nombres del contrato para el <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-173">Returns the contract name and contract namespace for the <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="a29c8-174">Un <see cref="T:System.Xml.XmlQualifiedName" /> que representa el nombre del contrato del tipo y su espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="a29c8-174">An <see cref="T:System.Xml.XmlQualifiedName" /> that represents the contract name of the type and its namespace.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a29c8-175">El argumento <paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-175">The <paramref name="type" /> argument is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.ExportOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.ExportOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As ExportOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::ExportOptions ^ Options { System::Runtime::Serialization::ExportOptions ^ get(); void set(System::Runtime::Serialization::ExportOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Runtime.Serialization.ExportOptions with get, set" Usage="System.Runtime.Serialization.XsdDataContractExporter.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.ExportOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a29c8-176">Obtiene o establece un <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contiene opciones que se pueden establecer para la operación de exportación.</span><span class="sxs-lookup"><span data-stu-id="a29c8-176">Gets or sets an <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options that can be set for the export operation.</span></span></summary>
        <value><span data-ttu-id="a29c8-177">Un <see cref="T:System.Runtime.Serialization.ExportOptions" /> que contiene las opciones usadas para personalizar cómo se exportan los tipos a los esquemas.</span><span class="sxs-lookup"><span data-stu-id="a29c8-177">An <see cref="T:System.Runtime.Serialization.ExportOptions" /> that contains options used to customize how types are exported to schemas.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet Schemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet Schemas" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ Schemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schemas : System.Xml.Schema.XmlSchemaSet" Usage="System.Runtime.Serialization.XsdDataContractExporter.Schemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Xml</AssemblyName>
        <AssemblyVersion>4.1.3.0</AssemblyVersion>
        <AssemblyVersion>4.1.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a29c8-178">Obtiene la colección de esquemas XML exportados.</span><span class="sxs-lookup"><span data-stu-id="a29c8-178">Gets the collection of exported XML schemas.</span></span></summary>
        <value><span data-ttu-id="a29c8-179">Un <see cref="T:System.Xml.Schema.XmlSchemaSet" /> que contiene los esquemas transformados del conjunto de tipos de Common Language Runtime (CLR) después de llamar al método <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" />.</span><span class="sxs-lookup"><span data-stu-id="a29c8-179">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that contains the schemas transformed from the set of common language runtime (CLR) types after calling the <see cref="Overload:System.Runtime.Serialization.XsdDataContractExporter.Export" /> method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
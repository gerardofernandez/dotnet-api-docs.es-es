<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04f43e13932813858f7d993ace2fae4b629cc17e" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52241982" /></Metadata><TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0;netframework-4.8;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ca48d-101">Especifica que el tipo define o implementa un contrato de datos y los puede serializar un serializador como, por ejemplo <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span><span class="sxs-lookup"><span data-stu-id="ca48d-101">Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</span></span> <span data-ttu-id="ca48d-102">Para que hacer su tipo sea serializable, los autores del tipo deben definir un contrato de datos para dicho tipo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-102">To make their type serializable, type authors must define a data contract for their type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca48d-103">Aplique el atributo <xref:System.Runtime.Serialization.DataContractAttribute> a los tipos (clases, estructuras o enumeraciones) que usa <xref:System.Runtime.Serialization.DataContractSerializer> en serialización y operaciones de la deserialización</span><span class="sxs-lookup"><span data-stu-id="ca48d-103">Apply the <xref:System.Runtime.Serialization.DataContractAttribute> attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <xref:System.Runtime.Serialization.DataContractSerializer>.</span></span> <span data-ttu-id="ca48d-104">Si enviar o recibir mensajes mediante la infraestructura de Windows Communication Foundation (WCF), también debe aplicar la <xref:System.Runtime.Serialization.DataContractAttribute> a cualquier clase que contenga y manipule datos enviados en mensajes.</span><span class="sxs-lookup"><span data-stu-id="ca48d-104">If you send or receive messages by using the Windows Communication Foundation (WCF) infrastructure, you should also apply the <xref:System.Runtime.Serialization.DataContractAttribute> to any classes that hold and manipulate data sent in messages.</span></span> <span data-ttu-id="ca48d-105">Para obtener más información acerca de los contratos de datos, vea [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="ca48d-105">For more information about data contracts, see [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
 <span data-ttu-id="ca48d-106">También se debe aplicar <xref:System.Runtime.Serialization.DataMemberAttribute> a cualquier campo, propiedad o evento que contenga los valores que desee serializar.</span><span class="sxs-lookup"><span data-stu-id="ca48d-106">You must also apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to any field, property, or event that holds values you want to serialize.</span></span> <span data-ttu-id="ca48d-107">Si se aplica <xref:System.Runtime.Serialization.DataContractAttribute>, se permite explícitamente <xref:System.Runtime.Serialization.DataContractSerializer> serializar y deserializar los datos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-107">By applying the <xref:System.Runtime.Serialization.DataContractAttribute>, you explicitly enable the <xref:System.Runtime.Serialization.DataContractSerializer> to serialize and deserialize the data.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ca48d-108">Puede aplicar <xref:System.Runtime.Serialization.DataMemberAttribute> a campos privados.</span><span class="sxs-lookup"><span data-stu-id="ca48d-108">You can apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to private fields.</span></span> <span data-ttu-id="ca48d-109">Tenga en cuenta que los datos devueltos por el campo (aun cuando es privado) se serializan y deserializan, de modo que un usuario o proceso malintencionado puede verlos o interceptarlos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-109">Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.</span></span>  
  
 <span data-ttu-id="ca48d-110">Para obtener más información acerca de los contratos de datos, vea los temas enumerados en [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span><span class="sxs-lookup"><span data-stu-id="ca48d-110">For more information about data contracts, see the topics listed in [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).</span></span>  
  
## <a name="data-contracts"></a><span data-ttu-id="ca48d-111">Contratos de datos</span><span class="sxs-lookup"><span data-stu-id="ca48d-111">Data Contracts</span></span>  
 <span data-ttu-id="ca48d-112">Un *contrato de datos* es una descripción abstracta de un conjunto de campos con un nombre y tipo de datos para cada campo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-112">A *data contract* is an abstract description of a set of fields with a name and data type for each field.</span></span> <span data-ttu-id="ca48d-113">El contrato de datos existe fuera de cualquier implementación única para permitir la interoperación de servicios en plataformas diferentes.</span><span class="sxs-lookup"><span data-stu-id="ca48d-113">The data contract exists outside of any single implementation to allow services on different platforms to interoperate.</span></span> <span data-ttu-id="ca48d-114">Siempre y cuando los datos que se pasen entre los servicios se ajusten al mismo contrato, todos los servicios podrán procesar los datos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-114">As long as the data passed between the services conforms to the same contract, all the services can process the data.</span></span> <span data-ttu-id="ca48d-115">Este procesamiento es también se denomina un *sistema flojamente acoplado*.</span><span class="sxs-lookup"><span data-stu-id="ca48d-115">This processing is also known as a *loosely coupled system*.</span></span> <span data-ttu-id="ca48d-116">Un contrato de datos también es similar a una interfaz en la que el contrato especifica cómo se deben entregar los datos para que los pueda procesar una aplicación.</span><span class="sxs-lookup"><span data-stu-id="ca48d-116">A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application.</span></span> <span data-ttu-id="ca48d-117">Por ejemplo, el contrato de datos puede llamar a un tipo de datos denominado "Persona" que tiene dos campos de texto, denominados "Nombre" y "Apellidos".</span><span class="sxs-lookup"><span data-stu-id="ca48d-117">For example, the data contract may call for a data type named "Person" that has two text fields, named "FirstName" and "LastName".</span></span> <span data-ttu-id="ca48d-118">Para crear un contrato de datos, aplique <xref:System.Runtime.Serialization.DataContractAttribute> a la clase y aplique <xref:System.Runtime.Serialization.DataMemberAttribute> a cualquier campo o propiedad que se deba serializar.</span><span class="sxs-lookup"><span data-stu-id="ca48d-118">To create a data contract, apply the <xref:System.Runtime.Serialization.DataContractAttribute> to the class and apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to any fields or properties that must be serialized.</span></span> <span data-ttu-id="ca48d-119">Cuando esté serializado, los datos se ajustarán al contrato de datos que está integrado implícitamente en el tipo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-119">When serialized, the data conforms to the data contract that is implicitly built into the type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca48d-120">Un contrato de datos difiere significativamente de una interfaz real en su comportamiento con las herencias.</span><span class="sxs-lookup"><span data-stu-id="ca48d-120">A data contract differs significantly from an actual interface in its inheritance behavior.</span></span> <span data-ttu-id="ca48d-121">Las interfaces se heredan mediante cualquiera de los tipos derivados.</span><span class="sxs-lookup"><span data-stu-id="ca48d-121">Interfaces are inherited by any derived types.</span></span> <span data-ttu-id="ca48d-122">Al aplicar <xref:System.Runtime.Serialization.DataContractAttribute> a una clase base, los tipos derivados no heredan el atributo ni el comportamiento.</span><span class="sxs-lookup"><span data-stu-id="ca48d-122">When you apply the <xref:System.Runtime.Serialization.DataContractAttribute> to a base class, the derived types do not inherit the attribute or the behavior.</span></span> <span data-ttu-id="ca48d-123">Sin embargo, si un tipo derivado tiene un contrato de datos, se serializan los miembros de datos de la clase base.</span><span class="sxs-lookup"><span data-stu-id="ca48d-123">However, if a derived type has a data contract, the data members of the base class are serialized.</span></span> <span data-ttu-id="ca48d-124">No obstante, debe aplicar <xref:System.Runtime.Serialization.DataMemberAttribute> a los nuevos miembros en una clase derivada para que se puedan serializar.</span><span class="sxs-lookup"><span data-stu-id="ca48d-124">However, you must apply the <xref:System.Runtime.Serialization.DataMemberAttribute> to new members in a derived class to make them serializable.</span></span>  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a><span data-ttu-id="ca48d-125">Documentos de esquema XML y la herramienta SvcUtil</span><span class="sxs-lookup"><span data-stu-id="ca48d-125">XML Schema Documents and the SvcUtil Tool</span></span>  
 <span data-ttu-id="ca48d-126">Si está intercambiando datos con otros servicios, debe describir el contrato de datos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-126">If you are exchanging data with other services, you must describe the data contract.</span></span> <span data-ttu-id="ca48d-127">Para la versión actual de <xref:System.Runtime.Serialization.DataContractSerializer>, se puede usar un esquema XML para definir los contratos de datos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-127">For the current version of the <xref:System.Runtime.Serialization.DataContractSerializer>, an XML schema can be used to define data contracts.</span></span> <span data-ttu-id="ca48d-128">(También se podrían usar otras formas de metadatos/descripción con la misma finalidad.) Para crear un esquema XML de la aplicación, use la [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) con el **/dconly** opción de línea de comandos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-128">(Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) with the **/dconly** command line option.</span></span> <span data-ttu-id="ca48d-129">Cuando la entrada a la herramienta es un ensamblado, de forma predeterminada, la herramienta genera un conjunto de esquemas XML que define todos los tipos de contrato de datos situados en ese ensamblado.</span><span class="sxs-lookup"><span data-stu-id="ca48d-129">When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly.</span></span> <span data-ttu-id="ca48d-130">A la inversa, también puede usar la herramienta Svcutil.exe para crear definiciones de clase de Visual Basic o de C# que se ajusten a los requisitos de esquemas XML que usan estructuras que pueden expresarse mediante contratos de datos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-130">Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts.</span></span> <span data-ttu-id="ca48d-131">En este caso, el **/dconly** opción de línea de comandos no es necesaria.</span><span class="sxs-lookup"><span data-stu-id="ca48d-131">In this case, the **/dconly** command line option is not required.</span></span>  
  
 <span data-ttu-id="ca48d-132">Si la entrada a la herramienta Svcutil.exe es un esquema XML, de forma predeterminada, la herramienta crea un conjunto de clases.</span><span class="sxs-lookup"><span data-stu-id="ca48d-132">If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes.</span></span> <span data-ttu-id="ca48d-133">Si examina esas clases, observará que se ha aplicado <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ca48d-133">If you examine those classes, you find that the <xref:System.Runtime.Serialization.DataContractAttribute> has been applied.</span></span> <span data-ttu-id="ca48d-134">Puede usar esas clases para crear una nueva aplicación para procesar datos que se deben intercambiar con otros servicios.</span><span class="sxs-lookup"><span data-stu-id="ca48d-134">You can use those classes to create a new application to process data that must be exchanged with other services.</span></span>  
  
 <span data-ttu-id="ca48d-135">También puede ejecutar la herramienta en un punto de conexión que devuelve un documento de lenguaje de descripción de servicios Web (WSDL) para generar automáticamente el código y configuración para crear a un cliente de Windows Communication Foundation (WCF).</span><span class="sxs-lookup"><span data-stu-id="ca48d-135">You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an Windows Communication Foundation (WCF) client.</span></span> <span data-ttu-id="ca48d-136">Los tipos de inclusiones de código generados que se marcan con <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ca48d-136">The generated code includes types that are marked with the <xref:System.Runtime.Serialization.DataContractAttribute>.</span></span>  
  
## <a name="reusing-existing-types"></a><span data-ttu-id="ca48d-137">Reutilizar tipos existentes</span><span class="sxs-lookup"><span data-stu-id="ca48d-137">Reusing Existing Types</span></span>  
 <span data-ttu-id="ca48d-138">Un contrato de datos tiene dos requisitos básicos: un nombre estable y una lista de miembros.</span><span class="sxs-lookup"><span data-stu-id="ca48d-138">A data contract has two basic requirements: a stable name and a list of members.</span></span> <span data-ttu-id="ca48d-139">El nombre estable consta del identificador uniforme de recursos (URI) para el espacio de nombres y el nombre local del contrato.</span><span class="sxs-lookup"><span data-stu-id="ca48d-139">The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract.</span></span> <span data-ttu-id="ca48d-140">De forma predeterminada, al aplicar el <xref:System.Runtime.Serialization.DataContractAttribute> a una clase, usa el nombre de clase como el nombre local y espacio de nombres de la clase (con el prefijo "http://schemas.datacontract.org/2004/07/") como el URI de espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="ca48d-140">By default, when you apply the <xref:System.Runtime.Serialization.DataContractAttribute> to a class, it uses the class name as the local name and the class's namespace (prefixed with "http://schemas.datacontract.org/2004/07/") as the namespace URI.</span></span> <span data-ttu-id="ca48d-141">Los valores predeterminados se pueden invalidar estableciendo las propiedades <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> y <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca48d-141">You can override the defaults by setting the <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> and <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> properties.</span></span> <span data-ttu-id="ca48d-142">También se puede cambiar el espacio de nombres aplicando <xref:System.Runtime.Serialization.ContractNamespaceAttribute> al espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="ca48d-142">You can also change the namespace by applying the <xref:System.Runtime.Serialization.ContractNamespaceAttribute> to the namespace.</span></span> <span data-ttu-id="ca48d-143">Use esta función cuando tenga un tipo existente que procese datos exactamente como los necesita pero que tienen un espacio de nombres y un nombre de clase diferentes a los del contrato de datos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-143">Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract.</span></span> <span data-ttu-id="ca48d-144">Mediante la invalidación de los valores predeterminados, puede reutilizar el tipo existente y hacer que los datos serializados se ajusten al contrato de datos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-144">By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ca48d-145">En cualquier código, puede usar la palabra `DataContract` en lugar de la forma más larga <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ca48d-145">In any code, you can use the word `DataContract` instead of the longer <xref:System.Runtime.Serialization.DataContractAttribute>.</span></span>  
  
## <a name="versioning"></a><span data-ttu-id="ca48d-146">Control de versiones</span><span class="sxs-lookup"><span data-stu-id="ca48d-146">Versioning</span></span>  
 <span data-ttu-id="ca48d-147">Un contrato de datos también puede alojar versiones posteriores de sí mismo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-147">A data contract can also accommodate later versions of itself.</span></span> <span data-ttu-id="ca48d-148">Es decir, cuando una versión posterior del contrato incluye datos adicionales, esos datos se almacenan y se devuelven a un remitente intactos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-148">That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched.</span></span> <span data-ttu-id="ca48d-149">Para ello, implemente la interfaz <xref:System.Runtime.Serialization.IExtensibleDataObject>.</span><span class="sxs-lookup"><span data-stu-id="ca48d-149">To do this, implement the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface.</span></span>  
  
 <span data-ttu-id="ca48d-150">Para obtener más información acerca de las versiones, vea [versiones de contratos de datos](~/docs/framework/wcf/feature-details/data-contract-versioning.md).</span><span class="sxs-lookup"><span data-stu-id="ca48d-150">For more information about versioning, see [Data Contract Versioning](~/docs/framework/wcf/feature-details/data-contract-versioning.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ca48d-151">En el siguiente ejemplo, se serializa y deserializa una clase denominada `Person` a la que se ha aplicado <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ca48d-151">The following example serializes and deserializes a class named `Person` to which the <xref:System.Runtime.Serialization.DataContractAttribute> has been applied.</span></span> <span data-ttu-id="ca48d-152">Observe que <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> y las propiedades <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> se han establecido en los valores que reemplazan la configuración predeterminada.</span><span class="sxs-lookup"><span data-stu-id="ca48d-152">Note that the <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> and <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> properties have been set to values that override the default settings.</span></span>  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
    <related type="Article" href="~/docs/framework/wcf/feature-details/using-data-contracts.md"><span data-ttu-id="ca48d-153">Utilización de contratos de datos</span><span class="sxs-lookup"><span data-stu-id="ca48d-153">Using Data Contracts</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ca48d-154">Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Serialization.DataContractAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="ca48d-154">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca48d-155">Obtiene si <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> se estableció explícitamente.</span><span class="sxs-lookup"><span data-stu-id="ca48d-155">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="ca48d-156">Devuelve <see langword="true" /> si el nombre se estableció explícitamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca48d-156">Returns <see langword="true" /> if the name has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca48d-157">Obtiene si <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> se estableció explícitamente.</span><span class="sxs-lookup"><span data-stu-id="ca48d-157">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="ca48d-158">Devuelve <see langword="true" /> si el espacio de nombres se estableció explícitamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca48d-158">Returns <see langword="true" /> if the namespace has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca48d-159">Obtiene o establece un valor que indica si conservar los datos de referencia al objeto.</span><span class="sxs-lookup"><span data-stu-id="ca48d-159">Gets or sets a value that indicates whether to preserve object reference data.</span></span></summary>
        <value><span data-ttu-id="ca48d-160"><see langword="true" /> mantiene los datos de referencia al objeto mediante XML estándar; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca48d-160"><see langword="true" /> to keep object reference data using standard XML; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="ca48d-161">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca48d-161">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca48d-162">Utilice la propiedad `IsReference` para indicar a <xref:System.Runtime.Serialization.DataContractSerializer> que inserte construcciones XML que conserven información de referencia al objeto.</span><span class="sxs-lookup"><span data-stu-id="ca48d-162">Use the `IsReference` property to instruct the <xref:System.Runtime.Serialization.DataContractSerializer> to insert XML constructs that preserve object reference information.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca48d-163">Obtiene si <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> se estableció explícitamente.</span><span class="sxs-lookup"><span data-stu-id="ca48d-163">Gets whether <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> has been explicitly set.</span></span></summary>
        <value><span data-ttu-id="ca48d-164"><see langword="true" /> si la referencia se estableció explícitamente; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ca48d-164"><see langword="true" /> if the reference has been explicitly set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca48d-165">Obtiene o establece el nombre del contrato de datos para el tipo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-165">Gets or sets the name of the data contract for the type.</span></span></summary>
        <value><span data-ttu-id="ca48d-166">El nombre local del contrato de datos.</span><span class="sxs-lookup"><span data-stu-id="ca48d-166">The local name of a data contract.</span></span> <span data-ttu-id="ca48d-167">El valor predeterminado es el nombre de la clase a la que se aplica el atributo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-167">The default is the name of the class that the attribute is applied to.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca48d-168">La propiedad <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> se usa para dar un nombre a un contrato de datos, cuyo nombre también es el del tipo del esquema XML.</span><span class="sxs-lookup"><span data-stu-id="ca48d-168">The <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> property is used to give a name to a data contract, which is the name of the type in XML schema.</span></span> <span data-ttu-id="ca48d-169">Para obtener más información, consulte [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md).</span><span class="sxs-lookup"><span data-stu-id="ca48d-169">For more information, see [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md).</span></span>  
  
 <span data-ttu-id="ca48d-170">De forma predeterminada, el nombre de un contrato de datos es el nombre del tipo al que se aplica <xref:System.Runtime.Serialization.DataContractAttribute>.</span><span class="sxs-lookup"><span data-stu-id="ca48d-170">By default, the name of a data contract is the name of the type that the <xref:System.Runtime.Serialization.DataContractAttribute> is applied to.</span></span> <span data-ttu-id="ca48d-171">Sin embargo, puede haber razones para cambiar este nombre predeterminado.</span><span class="sxs-lookup"><span data-stu-id="ca48d-171">However, there may be reasons to change this default name.</span></span> <span data-ttu-id="ca48d-172">Una razón es permitir que un tipo existente procese datos que deben ajustarse a un contrato de datos existentes.</span><span class="sxs-lookup"><span data-stu-id="ca48d-172">One reason is to allow an existing type to process data that must conform to an existing data contract.</span></span> <span data-ttu-id="ca48d-173">Por ejemplo, existe un tipo denominado `Person` pero el contrato de datos, contenido en un esquema XML, solicita que el nombre sea `Customer`.</span><span class="sxs-lookup"><span data-stu-id="ca48d-173">For example, there exists a type named `Person` but the data contract, embodied in an XML schema, requires that the name be `Customer`.</span></span> <span data-ttu-id="ca48d-174">El contrato se puede satisfacer estableciendo el valor de propiedad en `Customer`.</span><span class="sxs-lookup"><span data-stu-id="ca48d-174">The contract can be satisfied by setting the property value to `Customer`.</span></span>  
  
 <span data-ttu-id="ca48d-175">Una segunda razón es permitir la generación de nombres que no son válidos como nombres de tipo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-175">A second reason is to allow the generation of names that are invalid as type names.</span></span> <span data-ttu-id="ca48d-176">Por ejemplo, si un contrato de datos exige un nombre que no es permitido como nombre de tipo, establezca el valor de propiedad en dicho nombre denegado.</span><span class="sxs-lookup"><span data-stu-id="ca48d-176">For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name.</span></span> <span data-ttu-id="ca48d-177">Por ejemplo, la cadena "$valor" se deniega como nombre de tipo pero se permite como valor de la propiedad <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="ca48d-177">For instance, the string "$value" is disallowed as a type name but is allowed as a <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> property value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ca48d-178">Obtiene o establece el espacio de nombres del contrato de datos para el tipo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-178">Gets or sets the namespace for the data contract for the type.</span></span></summary>
        <value><span data-ttu-id="ca48d-179">Espacio de nombres del contrato.</span><span class="sxs-lookup"><span data-stu-id="ca48d-179">The namespace of the contract.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ca48d-180">Use esta propiedad para especificar un espacio de nombres determinado si su tipo debe devolver datos que obedezcan a un contrato de datos concreto.</span><span class="sxs-lookup"><span data-stu-id="ca48d-180">Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="ca48d-181">Para que los datos se transmitan correctamente, el nombre de los datos en un contrato de datos debe ser el mismo tanto para el cliente como para el servidor.</span><span class="sxs-lookup"><span data-stu-id="ca48d-181">For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server.</span></span> <span data-ttu-id="ca48d-182">De forma predeterminada, los proyectos de Visual Basic, agregue un prefijo al espacio de nombres definido en cada archivo (denominado "espacio de nombres raíz," con el nombre del proyecto).</span><span class="sxs-lookup"><span data-stu-id="ca48d-182">Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the "root namespace," named after the project).</span></span> <span data-ttu-id="ca48d-183">Agregar este prefijo hace que los espacios de nombres de servidor y cliente sean diferentes para el mismo tipo.</span><span class="sxs-lookup"><span data-stu-id="ca48d-183">Adding this prefix causes the client and server namespaces to be different for the same type.</span></span> <span data-ttu-id="ca48d-184">La solución consiste en establecer el <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> propiedad en "", o para establecer explícitamente el espacio de nombres de contrato de datos en esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="ca48d-184">The solution is to set the <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> property to "", or to explicitly set the data contract namespace in this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="ViewStateService" FullName="System.Activities.Presentation.View.ViewStateService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c0b0a35d67bc5d96069716512a11ca0d899870e" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52602222" /></Metadata><TypeSignature Language="C#" Value="public abstract class ViewStateService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewStateService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ViewStateService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewStateService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateService abstract" />
  <TypeSignature Language="F#" Value="type ViewStateService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="373cc-101">Habilita la conservación y el acceso a todos los valores de datos asociados con los componentes de interacción con el usuario de una aplicación de flujo de trabajo, en un momento determinado durante la ejecución de una aplicación de flujo de trabajo.</span><span class="sxs-lookup"><span data-stu-id="373cc-101">Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application.</span></span> <span data-ttu-id="373cc-102">Una instancia de <see cref="T:System.Activities.Presentation.View.ViewStateService" /> almacena los estados de vista de los elementos de modelo.</span><span class="sxs-lookup"><span data-stu-id="373cc-102">A <see cref="T:System.Activities.Presentation.View.ViewStateService" /> stores view states for model items.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="373cc-103">Esto resulta útil para poder seguir recuperando el estado cuando el control de la aplicación va y viene con postbacks.</span><span class="sxs-lookup"><span data-stu-id="373cc-103">This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks.</span></span> <span data-ttu-id="373cc-104"><xref:System.Activities.Presentation.View.ViewStateService> es una clase abstracta.</span><span class="sxs-lookup"><span data-stu-id="373cc-104"><xref:System.Activities.Presentation.View.ViewStateService> is an abstract class.</span></span> <span data-ttu-id="373cc-105">Las clases derivadas deben almacenar los estados de vista cuando se llama al método <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A>, y deben recuperarlos cuando se llama al método <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A>.</span><span class="sxs-lookup"><span data-stu-id="373cc-105">Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewStateService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewStateService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="373cc-106">Inicializa una nueva instancia de la clase <see cref="T:System.Activities.Presentation.View.ViewStateService" />.</span><span class="sxs-lookup"><span data-stu-id="373cc-106">Initiates a new instance of the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveViewState">
      <MemberSignature Language="C#" Value="public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RemoveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RemoveViewState : System.Activities.Presentation.Model.ModelItem * string -&gt; bool" Usage="viewStateService.RemoveViewState (modelItem, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="373cc-107">La instancia de <see cref="T:System.Activities.Presentation.Model.ModelItem" /> correspondiente a la actividad de flujo de trabajo asociada con el estado de vista actual.</span><span class="sxs-lookup"><span data-stu-id="373cc-107">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span></span></param>
        <param name="key"><span data-ttu-id="373cc-108">El valor de tipo <see cref="T:System.String" /> que identifica el elemento de estado de vista que está almacenado.</span><span class="sxs-lookup"><span data-stu-id="373cc-108">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span></span></param>
        <summary><span data-ttu-id="373cc-109">Cuando se implementa en una clase derivada, quita el estado de vista representado por la clave especificada y asociado al elemento de modelo especificado.</span><span class="sxs-lookup"><span data-stu-id="373cc-109">When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.</span></span></summary>
        <returns><span data-ttu-id="373cc-110"><see langword="true" /> si se ha quitado el estado de vista; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="373cc-110"><see langword="true" /> if the view state was removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAllViewState">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.Dictionary&lt;string,object&gt; RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ RetrieveAllViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberSignature Language="F#" Value="abstract member RetrieveAllViewState : System.Activities.Presentation.Model.ModelItem -&gt; System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="viewStateService.RetrieveAllViewState modelItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="373cc-111">El objeto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> al que se aplica el estado de vista.</span><span class="sxs-lookup"><span data-stu-id="373cc-111">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span></span></param>
        <summary><span data-ttu-id="373cc-112">Devuelve un aspecto del estado de vista almacenado para el objeto <paramref name="modelItem" /> especificado, que coincide con el valor de <paramref name="key" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="373cc-112">Returns an aspect of the view state that was stored for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span></span></summary>
        <returns><span data-ttu-id="373cc-113">Devuelve <see cref="T:System.Collections.Generic.Dictionary`2" />.</span><span class="sxs-lookup"><span data-stu-id="373cc-113">Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="373cc-114">Llame al método <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> para almacenar inicialmente información del estado de vista con el fin de recuperarla posteriormente.</span><span class="sxs-lookup"><span data-stu-id="373cc-114">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveViewState">
      <MemberSignature Language="C#" Value="public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ RetrieveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member RetrieveViewState : System.Activities.Presentation.Model.ModelItem * string -&gt; obj" Usage="viewStateService.RetrieveViewState (modelItem, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="373cc-115">La instancia de <see cref="T:System.Activities.Presentation.Model.ModelItem" /> correspondiente a la actividad de flujo de trabajo asociada con el estado de vista actual.</span><span class="sxs-lookup"><span data-stu-id="373cc-115">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span></span></param>
        <param name="key"><span data-ttu-id="373cc-116">El valor de tipo <see cref="T:System.String" /> que identifica el aspecto del estado de vista que se va a recuperar.</span><span class="sxs-lookup"><span data-stu-id="373cc-116">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be retrieved.</span></span></param>
        <summary><span data-ttu-id="373cc-117">Recupera un aspecto del estado de vista para el objeto <paramref name="modelItem" /> especificado, que coincide con el valor de <paramref name="key" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="373cc-117">Retrieves an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span></span></summary>
        <returns><span data-ttu-id="373cc-118">Aspecto del estado de vista como una instancia de <see cref="T:System.Object" /> o <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="373cc-118">The aspect of the view state as an <see cref="T:System.Object" />,or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="373cc-119">Llame al método <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> para almacenar inicialmente información del estado de vista con el fin de recuperarla posteriormente.</span><span class="sxs-lookup"><span data-stu-id="373cc-119">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewState">
      <MemberSignature Language="C#" Value="public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member StoreViewState : System.Activities.Presentation.Model.ModelItem * string * obj -&gt; unit" Usage="viewStateService.StoreViewState (modelItem, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="373cc-120">El objeto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> al que se aplica el estado de vista.</span><span class="sxs-lookup"><span data-stu-id="373cc-120">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span></span></param>
        <param name="key"><span data-ttu-id="373cc-121">El valor de tipo <see cref="T:System.String" /> que identifica el aspecto del estado de vista que se va a almacenar.</span><span class="sxs-lookup"><span data-stu-id="373cc-121">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span></span></param>
        <param name="value"><span data-ttu-id="373cc-122">Instancia de <see cref="T:System.Object" /> que se va a almacenar.</span><span class="sxs-lookup"><span data-stu-id="373cc-122">An <see cref="T:System.Object" /> to be stored.</span></span></param>
        <summary><span data-ttu-id="373cc-123">Almacena un aspecto del estado de vista para el objeto <paramref name="modelItem" /> especificado, que coincide con el valor de <paramref name="key" /> especificado.</span><span class="sxs-lookup"><span data-stu-id="373cc-123">Stores an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="373cc-124">Puede recuperar el objeto almacenado llamando al método <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> y pasando los mismos valores de `modelItem` y `key`.</span><span class="sxs-lookup"><span data-stu-id="373cc-124">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewStateWithUndo">
      <MemberSignature Language="C#" Value="public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewStateWithUndo(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member StoreViewStateWithUndo : System.Activities.Presentation.Model.ModelItem * string * obj -&gt; unit" Usage="viewStateService.StoreViewStateWithUndo (modelItem, key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem"><span data-ttu-id="373cc-125">El objeto <see cref="T:System.Activities.Presentation.Model.ModelItem" /> al que se aplica el estado de vista.</span><span class="sxs-lookup"><span data-stu-id="373cc-125">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span></span></param>
        <param name="key"><span data-ttu-id="373cc-126">El valor de tipo <see cref="T:System.String" /> que identifica el aspecto del estado de vista que se va a almacenar.</span><span class="sxs-lookup"><span data-stu-id="373cc-126">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span></span> <span data-ttu-id="373cc-127">El valor de tipo <see cref="T:System.String" /> que identifica el elemento de estado de vista que está almacenado.</span><span class="sxs-lookup"><span data-stu-id="373cc-127">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span></span></param>
        <param name="value"><span data-ttu-id="373cc-128">Instancia de <see cref="T:System.Object" /> que se va a almacenar.</span><span class="sxs-lookup"><span data-stu-id="373cc-128">An <see cref="T:System.Object" /> to be stored.</span></span></param>
        <summary><span data-ttu-id="373cc-129">Cuando se implementa en una clase derivada, registra la configuración actual del elemento representado por la clave especificada para que esté disponible para una operación de deshacer.</span><span class="sxs-lookup"><span data-stu-id="373cc-129">When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation.</span></span> <span data-ttu-id="373cc-130">A continuación, el elemento representado por la clave especificada se almacena en el estado de vista del elemento de modelo especificado.</span><span class="sxs-lookup"><span data-stu-id="373cc-130">The item represented by the specified key is then stored in the view state of the specified model item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="373cc-131">Puede recuperar el objeto almacenado llamando al método <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> y pasando los mismos valores de `modelItem` y `key`.</span><span class="sxs-lookup"><span data-stu-id="373cc-131">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoableViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event UndoableViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ UndoableViewStateChanged;" />
      <MemberSignature Language="F#" Value="member this.UndoableViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " Usage="member this.UndoableViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="373cc-132">Cuando se implementa en una clase derivada, declara un evento que indica que se ha realizado un cambio en el estado de vista que no se puede deshacer del control.</span><span class="sxs-lookup"><span data-stu-id="373cc-132">When implemented in a derived class, declares an event that signals that a change has been made to the control's undoable view state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.ViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ ViewStateChanged;" />
      <MemberSignature Language="F#" Value="member this.ViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " Usage="member this.ViewStateChanged : System.Activities.Presentation.View.ViewStateChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="373cc-133">Cuando se implementa en una clase derivada, declara un evento que indica que se ha realizado un cambio en el estado de vista del control.</span><span class="sxs-lookup"><span data-stu-id="373cc-133">When implemented in a derived class, declares an event that signals that a change has been made to the control's view state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
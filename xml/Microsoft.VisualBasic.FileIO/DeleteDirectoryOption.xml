<Type Name="DeleteDirectoryOption" FullName="Microsoft.VisualBasic.FileIO.DeleteDirectoryOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7c068b237798b4d34f40a4083703df1868c8958" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37710426" /></Metadata><TypeSignature Language="C#" Value="public enum DeleteDirectoryOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DeleteDirectoryOption extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption" />
  <TypeSignature Language="VB.NET" Value="Public Enum DeleteDirectoryOption" />
  <TypeSignature Language="C++ CLI" Value="public enum class DeleteDirectoryOption" />
  <TypeSignature Language="F#" Value="type DeleteDirectoryOption = " />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="60a16-101">Especifica qué se hace cuando un directorio que se va a eliminar contiene archivos o directorios.</span><span class="sxs-lookup"><span data-stu-id="60a16-101">Specifies what should be done when a directory that is to be deleted contains files or directories.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60a16-102">Esta enumeración se utiliza con el <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> método.</span><span class="sxs-lookup"><span data-stu-id="60a16-102">This enumeration is used with the <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory%2A> method.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)" />
  </Docs>
  <Members>
    <Member MemberName="DeleteAllContents">
      <MemberSignature Language="C#" Value="DeleteAllContents" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption DeleteAllContents = int32(5)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents" />
      <MemberSignature Language="VB.NET" Value="DeleteAllContents" />
      <MemberSignature Language="C++ CLI" Value="DeleteAllContents" />
      <MemberSignature Language="F#" Value="DeleteAllContents = 5" Usage="Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.DeleteAllContents" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.DeleteDirectoryOption</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary><span data-ttu-id="60a16-103">Elimine el contenido del directorio junto con el directorio.</span><span class="sxs-lookup"><span data-stu-id="60a16-103">Delete the contents of the directory along with the directory.</span></span> <span data-ttu-id="60a16-104">Predeterminado</span><span class="sxs-lookup"><span data-stu-id="60a16-104">Default.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ThrowIfDirectoryNonEmpty">
      <MemberSignature Language="C#" Value="ThrowIfDirectoryNonEmpty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.VisualBasic.FileIO.DeleteDirectoryOption ThrowIfDirectoryNonEmpty = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty" />
      <MemberSignature Language="VB.NET" Value="ThrowIfDirectoryNonEmpty" />
      <MemberSignature Language="C++ CLI" Value="ThrowIfDirectoryNonEmpty" />
      <MemberSignature Language="F#" Value="ThrowIfDirectoryNonEmpty = 4" Usage="Microsoft.VisualBasic.FileIO.DeleteDirectoryOption.ThrowIfDirectoryNonEmpty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.FileIO.DeleteDirectoryOption</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="60a16-105">Produzca <see cref="T:System.IO.IOException" /> si el directorio no se encuentra vacío.</span><span class="sxs-lookup"><span data-stu-id="60a16-105">Throw an <see cref="T:System.IO.IOException" /> if the directory is not empty.</span></span> <span data-ttu-id="60a16-106">La propiedad <see langword="Data" /> de la excepción muestra una lista de los archivos que no se pudieron eliminar.</span><span class="sxs-lookup"><span data-stu-id="60a16-106">The <see langword="Data" /> property of the exception lists the file(s) that could not be deleted.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
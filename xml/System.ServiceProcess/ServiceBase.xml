<Type Name="ServiceBase" FullName="System.ServiceProcess.ServiceBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15095204d9fc579de13f7d400c3e24b4339f5ab4" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52906766" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceBase : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceBase extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.ServiceProcess.ServiceBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceBase&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceBase : System::ComponentModel::Component" />
  <TypeSignature Language="F#" Value="type ServiceBase = class&#xA;    inherit Component" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.InstallerType(typeof(System.ServiceProcess.ServiceProcessInstaller))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("Microsoft.VisualStudio.Install.UserNTServiceDesigner, Microsoft.VisualStudio, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.IRootDesigner")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c08f5-101">Proporciona una clase base para un servicio que existirá como parte de una aplicación de servicio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c08f5-101">Provides a base class for a service that will exist as part of a service application.</span>
      </span>
      <span data-ttu-id="c08f5-102">Deberá derivarse de <see cref="T:System.ServiceProcess.ServiceBase" /> cuando se cree una nueva clase de servicio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c08f5-102">
          <see cref="T:System.ServiceProcess.ServiceBase" /> must be derived from when creating a new service class.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-103">Derivar de <xref:System.ServiceProcess.ServiceBase> al definir la clase de servicio en una aplicación de servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-103">Derive from <xref:System.ServiceProcess.ServiceBase> when defining your service class in a service application.</span></span> <span data-ttu-id="c08f5-104">Cualquier servicio útil reemplaza el <xref:System.ServiceProcess.ServiceBase.OnStart%2A> y <xref:System.ServiceProcess.ServiceBase.OnStop%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="c08f5-104">Any useful service overrides the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods.</span></span> <span data-ttu-id="c08f5-105">Para obtener funcionalidad adicional, puede invalidar <xref:System.ServiceProcess.ServiceBase.OnPause%2A> y <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> con un comportamiento específico en respuesta a cambios en el estado del servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-105">For additional functionality, you can override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> with specific behavior in response to changes in the service state.</span></span>  
  
 <span data-ttu-id="c08f5-106">Un servicio es un ejecutable de larga ejecución que no es compatible con una interfaz de usuario y que podría no ejecutarse bajo la cuenta de usuario con sesión iniciada.</span><span class="sxs-lookup"><span data-stu-id="c08f5-106">A service is a long-running executable that does not support a user interface, and which might not run under the logged-on user account.</span></span> <span data-ttu-id="c08f5-107">El servicio puede ejecutarse sin que ningún usuario que se inició sesión en el equipo.</span><span class="sxs-lookup"><span data-stu-id="c08f5-107">The service can run without any user being logged on to the computer.</span></span>  
  
 <span data-ttu-id="c08f5-108">De forma predeterminada, los servicios se ejecutan bajo la cuenta del sistema, que no es igual que la cuenta de administrador.</span><span class="sxs-lookup"><span data-stu-id="c08f5-108">By default, services run under the System account, which is not the same as the Administrator account.</span></span> <span data-ttu-id="c08f5-109">No se puede cambiar los derechos de la cuenta del sistema.</span><span class="sxs-lookup"><span data-stu-id="c08f5-109">You cannot change the rights of the System account.</span></span> <span data-ttu-id="c08f5-110">Como alternativa, puede usar un <xref:System.ServiceProcess.ServiceProcessInstaller> para especificar una cuenta de usuario bajo la que se ejecutará el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-110">Alternatively, you can use a <xref:System.ServiceProcess.ServiceProcessInstaller> to specify a user account under which the service will run.</span></span>  
  
 <span data-ttu-id="c08f5-111">Un ejecutable puede contener más de un servicio, pero debe contener un independiente <xref:System.ServiceProcess.ServiceInstaller> para cada servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-111">An executable can contain more than one service but must contain a separate <xref:System.ServiceProcess.ServiceInstaller> for each service.</span></span> <span data-ttu-id="c08f5-112">El <xref:System.ServiceProcess.ServiceInstaller> instancia registra el servicio con el sistema.</span><span class="sxs-lookup"><span data-stu-id="c08f5-112">The <xref:System.ServiceProcess.ServiceInstaller> instance registers the service with the system.</span></span> <span data-ttu-id="c08f5-113">El instalador también asocia cada servicio con un registro de eventos que puede usar para registrar comandos de servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-113">The installer also associates each service with an event log that you can use to record service commands.</span></span> <span data-ttu-id="c08f5-114">El `main()` función en el archivo ejecutable define qué servicios deben ejecutarse.</span><span class="sxs-lookup"><span data-stu-id="c08f5-114">The `main()` function in the executable defines which services should run.</span></span> <span data-ttu-id="c08f5-115">El directorio de trabajo actual del servicio es el directorio del sistema, no el directorio donde se encuentra el archivo ejecutable.</span><span class="sxs-lookup"><span data-stu-id="c08f5-115">The current working directory of the service is the system directory, not the directory in which the executable is located.</span></span>  
  
 <span data-ttu-id="c08f5-116">Cuando se inicia un servicio, el sistema busca el ejecutable y se ejecuta el <xref:System.ServiceProcess.ServiceBase.OnStart%2A> método para el servicio, incluido en el archivo ejecutable.</span><span class="sxs-lookup"><span data-stu-id="c08f5-116">When you start a service, the system locates the executable and runs the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method for that service, contained within the executable.</span></span> <span data-ttu-id="c08f5-117">Sin embargo, que ejecuta el servicio no es igual que la ejecución del ejecutable.</span><span class="sxs-lookup"><span data-stu-id="c08f5-117">However, running the service is not the same as running the executable.</span></span> <span data-ttu-id="c08f5-118">El archivo ejecutable carga solo el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-118">The executable only loads the service.</span></span> <span data-ttu-id="c08f5-119">Se accede al servicio (por ejemplo, iniciar y detener) mediante el Administrador de Control de servicios.</span><span class="sxs-lookup"><span data-stu-id="c08f5-119">The service is accessed (for example, started and stopped) through the Service Control Manager.</span></span>  
  
 <span data-ttu-id="c08f5-120">El ejecutable llama el <xref:System.ServiceProcess.ServiceBase> derivada tiempo el primer constructor de la clase se llama a Start para el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-120">The executable calls the <xref:System.ServiceProcess.ServiceBase> derived class's constructor the first time you call Start on the service.</span></span> <span data-ttu-id="c08f5-121">El <xref:System.ServiceProcess.ServiceBase.OnStart%2A> se llama al método de control de comandos inmediatamente después de que se ejecuta el constructor.</span><span class="sxs-lookup"><span data-stu-id="c08f5-121">The <xref:System.ServiceProcess.ServiceBase.OnStart%2A> command-handling method is called immediately after the constructor executes.</span></span> <span data-ttu-id="c08f5-122">No se ejecuta el constructor de nuevo después de la primera vez que se ha cargado el servicio, por lo que es necesario separar el procesamiento realizado por el constructor del realizado por <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-122">The constructor is not executed again after the first time the service has been loaded, so it is necessary to separate the processing performed by the constructor from that performed by <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="c08f5-123">Todos los recursos que se pueden liberar por <xref:System.ServiceProcess.ServiceBase.OnStop%2A> debe crearse en <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-123">Any resources that can be released by <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should be created in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="c08f5-124">Creación de recursos en el constructor impide que se creen correctamente si el servicio se inicia después de volver a <xref:System.ServiceProcess.ServiceBase.OnStop%2A> ha liberado los recursos.</span><span class="sxs-lookup"><span data-stu-id="c08f5-124">Creating resources in the constructor prevents them from being created properly if the service is started again after <xref:System.ServiceProcess.ServiceBase.OnStop%2A> has released the resources.</span></span>  
  
 <span data-ttu-id="c08f5-125">El Administrador de Control de servicios (SCM) proporciona una manera de interactuar con el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-125">The Service Control Manager (SCM) provides a way to interact with the service.</span></span> <span data-ttu-id="c08f5-126">Puede utilizar el SCM para pasar iniciar, detener, pausar, continuar o comandos personalizados en el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-126">You can use the SCM to pass Start, Stop, Pause, Continue, or custom commands into the service.</span></span> <span data-ttu-id="c08f5-127">El SCM utiliza los valores de <xref:System.ServiceProcess.ServiceBase.CanStop%2A> y <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> para determinar si el servicio acepta detener, pausar o continuar comandos.</span><span class="sxs-lookup"><span data-stu-id="c08f5-127">The SCM uses the values of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> and <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to determine whether the service accepts Stop, Pause, or Continue commands.</span></span> <span data-ttu-id="c08f5-128">Detener, pausar y continuar están habilitadas en solo si en del SCM contexto menús la propiedad correspondiente <xref:System.ServiceProcess.ServiceBase.CanStop%2A> o <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `true` en la clase de servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-128">Stop, Pause, and Continue are enabled in the SCM's context menus only if the corresponding property <xref:System.ServiceProcess.ServiceBase.CanStop%2A> or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` in the service class.</span></span> <span data-ttu-id="c08f5-129">Si está habilitada, el comando se pasa al servicio, y <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, o <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> se llama.</span><span class="sxs-lookup"><span data-stu-id="c08f5-129">If enabled, the command is passed to the service, and <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is called.</span></span> <span data-ttu-id="c08f5-130">Si <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, o <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `false`, el método de control de comandos correspondiente (como <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) no se procesarán, incluso si ha implementado el método.</span><span class="sxs-lookup"><span data-stu-id="c08f5-130">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) will not be processed, even if you have implemented the method.</span></span>  
  
 <span data-ttu-id="c08f5-131">Puede usar el <xref:System.ServiceProcess.ServiceController> clase hacer mediante programación qué SCM realiza mediante una interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="c08f5-131">You can use the <xref:System.ServiceProcess.ServiceController> class to do programmatically what the SCM does using a user interface.</span></span> <span data-ttu-id="c08f5-132">Puede automatizar las tareas disponibles en la consola.</span><span class="sxs-lookup"><span data-stu-id="c08f5-132">You can automate the tasks available in the console.</span></span> <span data-ttu-id="c08f5-133">Si <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, o <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `true` pero no ha implementado un método de control de comandos correspondiente (como <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) el sistema produce una excepción y omite el comando.</span><span class="sxs-lookup"><span data-stu-id="c08f5-133">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A>, <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A>, or <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true` but you have not implemented a corresponding command-handling method (such as <xref:System.ServiceProcess.ServiceBase.OnStop%2A>) the system throws an exception and ignores the command.</span></span>  
  
 <span data-ttu-id="c08f5-134">No es necesario implementar <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, o cualquier otro método en <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-134">You do not have to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, <xref:System.ServiceProcess.ServiceBase.OnStop%2A>, or any other method in <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="c08f5-135">Sin embargo, se describe el comportamiento del servicio en <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, por lo que como mínimo, se debe invalidar este miembro.</span><span class="sxs-lookup"><span data-stu-id="c08f5-135">However, the service's behavior is described in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, so at minimum, this member should be overridden.</span></span> <span data-ttu-id="c08f5-136">El `main()` función del ejecutable registra el servicio en el archivo ejecutable con el Administrador de Control de servicio mediante una llamada a la <xref:System.ServiceProcess.ServiceBase.Run%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c08f5-136">The `main()` function of the executable registers the service in the executable with the Service Control Manager by calling the <xref:System.ServiceProcess.ServiceBase.Run%2A> method.</span></span> <span data-ttu-id="c08f5-137">El <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> propiedad de la <xref:System.ServiceProcess.ServiceBase> objeto pasa a la <xref:System.ServiceProcess.ServiceBase.Run%2A> método debe coincidir con el <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> propiedad del instalador del servicio para ese servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-137">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> property of the <xref:System.ServiceProcess.ServiceBase> object passed to the <xref:System.ServiceProcess.ServiceBase.Run%2A> method must match the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A> property of the service installer for that service.</span></span>  
  
 <span data-ttu-id="c08f5-138">Puede usar `InstallUtil.exe` para instalar servicios del sistema.</span><span class="sxs-lookup"><span data-stu-id="c08f5-138">You can use `InstallUtil.exe` to install services on your system.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c08f5-139">Puede especificar un registro distinto del registro de eventos de aplicación para recibir la notificación de llamadas de servicio, pero ninguna de ellas el <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> ni <xref:System.ServiceProcess.ServiceBase.EventLog%2A> propiedad puede escribir en un registro personalizado.</span><span class="sxs-lookup"><span data-stu-id="c08f5-139">You can specify a log other than the Application event log to receive notification of service calls, but neither the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> nor the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property can write to a custom log.</span></span> <span data-ttu-id="c08f5-140">Establecer <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> a `false` si no desea utilizar el registro automático.</span><span class="sxs-lookup"><span data-stu-id="c08f5-140">Set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` if you do not want to use automatic logging.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceProcess.ServiceProcessInstaller" />
    <altmember cref="T:System.ServiceProcess.ServiceInstaller" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-141">Crea una nueva instancia de la clase <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-141">Creates a new instance of the <see cref="T:System.ServiceProcess.ServiceBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-142">No cree una instancia de la <xref:System.ServiceProcess.ServiceBase> clase.</span><span class="sxs-lookup"><span data-stu-id="c08f5-142">Do not create an instance of the <xref:System.ServiceProcess.ServiceBase> class.</span></span> <span data-ttu-id="c08f5-143">En su lugar, se derivan de <xref:System.ServiceProcess.ServiceBase> y crear una instancia de la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c08f5-143">Instead, derive from <xref:System.ServiceProcess.ServiceBase> and instantiate your derived class.</span></span> <span data-ttu-id="c08f5-144">El mínimo necesario implementar en el constructor para una clase heredada de <xref:System.ServiceProcess.ServiceBase> consiste en establecer el <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> en el componente.</span><span class="sxs-lookup"><span data-stu-id="c08f5-144">The minimum you need to implement in the constructor for a class inherited from <xref:System.ServiceProcess.ServiceBase> is to set the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> on your component.</span></span> <span data-ttu-id="c08f5-145">En concreto no se requiere ningún otro procesamiento en el constructor.</span><span class="sxs-lookup"><span data-stu-id="c08f5-145">No other processing is specifically required in the constructor.</span></span> <span data-ttu-id="c08f5-146">Debe controlar la inicialización de la mayoría de <xref:System.ServiceProcess.ServiceBase.OnStart%2A> en lugar de en el constructor.</span><span class="sxs-lookup"><span data-stu-id="c08f5-146">You should handle most initialization in <xref:System.ServiceProcess.ServiceBase.OnStart%2A> rather than in the constructor.</span></span> <span data-ttu-id="c08f5-147">En caso contrario, no hay ninguna garantía de que los objetos se reinicializarán al reiniciar un servicio después de que se ha detenido.</span><span class="sxs-lookup"><span data-stu-id="c08f5-147">Otherwise, there is no guarantee the objects will be reinitialized when you restart a service after it has been stopped.</span></span>  
  
 <span data-ttu-id="c08f5-148">Si reemplaza el constructor de la clase derivada, llame al constructor de clase base en el código.</span><span class="sxs-lookup"><span data-stu-id="c08f5-148">If you override the constructor in your derived class, call the base class constructor in your code.</span></span>  
  
 <span data-ttu-id="c08f5-149">El <xref:System.ServiceProcess.ServiceBase> constructor establece <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-149">The <xref:System.ServiceProcess.ServiceBase> constructor sets <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true`.</span></span> <span data-ttu-id="c08f5-150">Si no desea que se inicie automáticamente las llamadas al servicio desde el Administrador de Control de servicios (SCM), establezca <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> a `false`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-150">If you do not want to automatically log calls to the service from the Service Control Manager (SCM), set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false`.</span></span>  
  
 <span data-ttu-id="c08f5-151">Si el archivo ejecutable contiene un único servicio, el sistema llama al constructor del servicio cuando inicio está seleccionado en el SCM y ejecuta el destructor si se llama a detener.</span><span class="sxs-lookup"><span data-stu-id="c08f5-151">If the executable contains a single service, the system calls the service's constructor when Start is selected from the SCM, and runs the destructor if Stop is called.</span></span>  
  
 <span data-ttu-id="c08f5-152">Si el archivo ejecutable contiene varios servicios, al llamar a iniciar en un servicio, los constructores que se llamará para todos los servicios en el archivo ejecutable, pero se inicia el servicio especificado.</span><span class="sxs-lookup"><span data-stu-id="c08f5-152">If the executable contains multiple services, calling Start on one service causes the constructors to be called for all services in the executable, but only the specified service is started.</span></span> <span data-ttu-id="c08f5-153">Los destructores para los servicios se ejecutan juntos cuando todos los servicios se han detenido, no de manera individual cuando se detiene cada servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-153">Destructors for the services are run together when all services have been stopped, not individually when each service is stopped.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c08f5-154">Si invalida el constructor de clase base, se debe llamar explícitamente en el constructor de la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c08f5-154">If you override the base class constructor, you should explicitly call it in the constructor of your derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      </Docs>
    </Member>
    <Member MemberName="AutoLog">
      <MemberSignature Language="C#" Value="public bool AutoLog { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoLog As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoLog { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoLog : bool with get, set" Usage="System.ServiceProcess.ServiceBase.AutoLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBAutoLog")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-155">Indica si los comandos Iniciar, Detener, Pausar y Continuar deben notificarse en el registro de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-155">Indicates whether to report Start, Stop, Pause, and Continue commands in the event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-156">
            <see langword="true" /> para notificar información en el registro de eventos; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-156">
              <see langword="true" /> to report information in the event log; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-157">Establecer <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> a `true` indica al servicio que utilice el registro de eventos de aplicación para notificar errores de comandos, así como información de cambio de estado para iniciar, detener, pausar y continuar con los eventos en el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-157">Setting <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `true` instructs the service to use the Application event log to report command failures, as well as state change information for Start, Stop, Pause, and Continue events on the service.</span></span> <span data-ttu-id="c08f5-158">El nombre del servicio se utiliza como el registro <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-158">The name of the service is used as the log's <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c08f5-159">Para notificar información a un registro de eventos personalizado en lugar de con el registro de aplicación, establezca <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> a `false` y escribir las instrucciones incluidas en los métodos de control de comandos <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, o <xref:System.ServiceProcess.ServiceBase.OnStop%2A> para publicar en el registro adecuado.</span><span class="sxs-lookup"><span data-stu-id="c08f5-159">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c08f5-160">El <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, que proporciona la cadena de origen para el registro de eventos, debe establecerse antes de que el servicio intenta escribir en el registro de eventos.</span><span class="sxs-lookup"><span data-stu-id="c08f5-160">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service attempts to write to the event log.</span></span> <span data-ttu-id="c08f5-161">Intenta obtener acceso al registro de eventos antes de establece el nombre del origen, produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c08f5-161">Trying to access the event log before the source name is set throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.EventLog" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandlePowerEvent">
      <MemberSignature Language="C#" Value="public bool CanHandlePowerEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandlePowerEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandlePowerEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandlePowerEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanHandlePowerEvent : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-162">Obtiene o establece un valor que indica si el servicio puede controlar notificaciones de los cambios de estado de la alimentación del equipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-162">Gets or sets a value indicating whether the service can handle notifications of computer power status changes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-163">
            <see langword="true" /> si el servicio controla los cambios de estado de la alimentación del equipo indicados en la clase <see cref="T:System.ServiceProcess.PowerBroadcastStatus" />; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-163">
              <see langword="true" /> if the service handles the computer power status changes indicated in the <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> class, otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-164">Cuando los cambios de estado de energía de equipo en que el Administrador de Control de servicios (SCM) comprueba de si el servicio acepta comandos de eventos de energía con el valor de <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-164">When the computer power status changes, the Service Control Manager (SCM) verifies whether the service accepts power event commands using the value of <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A>.</span></span>  
  
 <span data-ttu-id="c08f5-165">Si <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> es `true`, el comando se pasa al servicio y el <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> se llama al método si ha definido.</span><span class="sxs-lookup"><span data-stu-id="c08f5-165">If <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> is `true`, the command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> method is called if defined.</span></span> <span data-ttu-id="c08f5-166">Si <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> no está implementada en la clase derivada, el SCM controla el evento de energía a través de la clase base vacía <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c08f5-166">If <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is not implemented in the derived class, the SCM handles the power event through the empty base class <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c08f5-167">Esta propiedad se modifica después de haber iniciado el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-167">This property is modified after the service was started.</span>
          </span>
        </exception>
        <altmember cref="T:System.ServiceProcess.PowerBroadcastStatus" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
      </Docs>
    </Member>
    <Member MemberName="CanHandleSessionChangeEvent">
      <MemberSignature Language="C#" Value="public bool CanHandleSessionChangeEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHandleSessionChangeEvent" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHandleSessionChangeEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHandleSessionChangeEvent { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanHandleSessionChangeEvent : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-168">Obtiene o establece un valor que indica si el servicio puede controlar eventos de cambio de sesión recibidos de una sesión de Terminal Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-168">Gets or sets a value that indicates whether the service can handle session change events received from a Terminal Server session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-169">
            <see langword="true" /> si el servicio puede controlar eventos de cambio de sesión de Terminal Server; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-169">
              <see langword="true" /> if the service can handle Terminal Server session change events; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c08f5-170">Esta propiedad se modifica después de haber iniciado el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-170">This property is modified after the service was started.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanPauseAndContinue">
      <MemberSignature Language="C#" Value="public bool CanPauseAndContinue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPauseAndContinue" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberSignature Language="VB.NET" Value="Public Property CanPauseAndContinue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanPauseAndContinue { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanPauseAndContinue : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-171">Obtiene o establece un valor que indica si se puede pausar y reanudar el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-171">Gets or sets a value indicating whether the service can be paused and resumed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-172">
            <see langword="true" /> si se puede pausar el servicio; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-172">
              <see langword="true" /> if the service can be paused; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-173">Establezca el valor de la <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> propiedad en el constructor para el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-173">Set the value of the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property in the constructor for the service.</span></span>  
  
 <span data-ttu-id="c08f5-174">Cuando se pausa un servicio, se detiene lo que está haciendo.</span><span class="sxs-lookup"><span data-stu-id="c08f5-174">When a service is paused, it halts what it is doing.</span></span> <span data-ttu-id="c08f5-175">Al continuar el servicio (ya sea mediante el Administrador de Control de servicios o mediante programación), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> se ejecuta.</span><span class="sxs-lookup"><span data-stu-id="c08f5-175">When you continue the service (either through the Service Control Manager or programmatically), <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> runs.</span></span>  
  
 <span data-ttu-id="c08f5-176">Enviar una solicitud de pausa en el servicio puede ahorrar recursos del sistema.</span><span class="sxs-lookup"><span data-stu-id="c08f5-176">Sending a Pause request to the service can conserve system resources.</span></span> <span data-ttu-id="c08f5-177">Pausa no puede liberar todos los recursos del sistema, pero sí de detención.</span><span class="sxs-lookup"><span data-stu-id="c08f5-177">Pause may not release all system resources, but Stop does.</span></span> <span data-ttu-id="c08f5-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> y <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> a menudo se implementan para llevar a cabo un procesamiento menor que <xref:System.ServiceProcess.ServiceBase.OnStop%2A> y <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-178"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> are often implemented to perform less processing than <xref:System.ServiceProcess.ServiceBase.OnStop%2A> and <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span>  
  
 <span data-ttu-id="c08f5-179">Cuando <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `true`, invalidar <xref:System.ServiceProcess.ServiceBase.OnPause%2A> y <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> para especificar el procesamiento que debe producirse cuando el Administrador de Control de servicios (SCM) pasa una solicitud Pausar o continuar al servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-179">When <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `true`, override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the Service Control Manager (SCM) passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="c08f5-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> debe implementarse para deshacer el procesamiento en <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-180"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="c08f5-181">Si <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `false`, el SCM no pasará pausar o continuar solicitudes al servicio, por lo que el <xref:System.ServiceProcess.ServiceBase.OnPause%2A> y <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> métodos no se llamará incluso si se implementan.</span><span class="sxs-lookup"><span data-stu-id="c08f5-181">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="c08f5-182">En el SCM, la `Pause` y `Continue` controles están deshabilitados cuando <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-182">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c08f5-183">Ya se inició el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-183">The service has already been started.</span>
          </span>
          <span data-ttu-id="c08f5-184">La propiedad <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> no puede cambiarse una vez iniciado el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-184">The <see cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" /> property cannot be changed once the service has started.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanShutdown">
      <MemberSignature Language="C#" Value="public bool CanShutdown { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanShutdown" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Property CanShutdown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanShutdown { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanShutdown : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanShutdown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-185">Obtiene o establece un valor que indica si se debe informar al servicio de que el sistema se está cerrando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-185">Gets or sets a value indicating whether the service should be notified when the system is shutting down.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-186">
            <see langword="true" /> si se debe notificar al servicio cuando se está cerrando el sistema; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-186">
              <see langword="true" /> if the service should be notified when the system is shutting down; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="c08f5-187">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-187">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-188">Si <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> es `true`, el servicio se notifica cuando se está cerrando el sistema.</span><span class="sxs-lookup"><span data-stu-id="c08f5-188">If <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> is `true`, the service is notified when the system is shutting down.</span></span> <span data-ttu-id="c08f5-189">Al apagar el equipo, el <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> se llama al método si se ha implementado en la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c08f5-189">At shutdown, the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method is called if it has been implemented in your derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c08f5-190">Solo el sistema debe hacer el <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> método se debe ejecutar; el servicio puede llamarlo, pero esto no es recomendable.</span><span class="sxs-lookup"><span data-stu-id="c08f5-190">Only the system should cause the <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> method to execute; the service can call it, but this is not recommended.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c08f5-191">Ya se inició el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-191">The service has already been started.</span>
          </span>
          <span data-ttu-id="c08f5-192">La propiedad <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> no puede cambiarse una vez iniciado el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-192">The <see cref="P:System.ServiceProcess.ServiceBase.CanShutdown" /> property cannot be changed once the service has started.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="CanStop">
      <MemberSignature Language="C#" Value="public bool CanStop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanStop" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.CanStop" />
      <MemberSignature Language="VB.NET" Value="Public Property CanStop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanStop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CanStop : bool with get, set" Usage="System.ServiceProcess.ServiceBase.CanStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-193">Obtiene o establece un valor que indica si puede detenerse el servicio una vez se ha iniciado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-193">Gets or sets a value indicating whether the service can be stopped once it has started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-194">
            <see langword="true" /> si se puede detener el servicio y llamar al método <see cref="M:System.ServiceProcess.ServiceBase.OnStop" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-194">
              <see langword="true" /> if the service can be stopped and the <see cref="M:System.ServiceProcess.ServiceBase.OnStop" /> method called; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-195">Cuando se llama a detener en un servicio, el Administrador de Control de servicios (SCM) comprueba si el servicio acepta comandos Detener con el valor de <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-195">When Stop is called on a service, the Service Control Manager (SCM) verifies whether the service accepts Stop commands using the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A>.</span></span> <span data-ttu-id="c08f5-196">Para la mayoría de los servicios, el valor de <xref:System.ServiceProcess.ServiceBase.CanStop%2A> es `true`, pero algunos servicios del sistema operativo, por ejemplo, no permiten al usuario detenerlos.</span><span class="sxs-lookup"><span data-stu-id="c08f5-196">For most services, the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, but some operating system services, for example, do not allow the user to stop them.</span></span>  
  
 <span data-ttu-id="c08f5-197">Si <xref:System.ServiceProcess.ServiceBase.CanStop%2A> es `true`, el comando Detener se pasa al servicio y el <xref:System.ServiceProcess.ServiceBase.OnStop%2A> se llama al método si se ha definido.</span><span class="sxs-lookup"><span data-stu-id="c08f5-197">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="c08f5-198">Si <xref:System.ServiceProcess.ServiceBase.OnStop%2A> no está implementada en la clase derivada, el SCM controla el comando Detener mediante la clase base vacía <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="c08f5-198">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the derived class, the SCM handles the Stop command through the empty base class <xref:System.ServiceProcess.ServiceBase.OnStop%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c08f5-199">Ya se inició el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-199">The service has already been started.</span>
          </span>
          <span data-ttu-id="c08f5-200">La propiedad <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> no puede cambiarse una vez iniciado el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-200">The <see cref="P:System.ServiceProcess.ServiceBase.CanStop" /> property cannot be changed once the service has started.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="serviceBase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c08f5-201">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-201">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-202">Se deshace de los recursos (distintos de la memoria) que usa <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-202">Disposes of the resources (other than memory) used by the <see cref="T:System.ServiceProcess.ServiceBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-203">Llame a <xref:System.ServiceProcess.ServiceBase.Dispose%2A> en su clase derivada (y a través de él, en el <xref:System.ServiceProcess.ServiceBase> clase) cuando haya terminado de utilizar la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c08f5-203">Call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> in your derived class (and through it, in the <xref:System.ServiceProcess.ServiceBase> class) when you are finished using the derived class.</span></span> <span data-ttu-id="c08f5-204">El <xref:System.ServiceProcess.ServiceBase.Dispose%2A> método deja la clase derivada en un estado inutilizable.</span><span class="sxs-lookup"><span data-stu-id="c08f5-204">The <xref:System.ServiceProcess.ServiceBase.Dispose%2A> method leaves the derived class in an unusable state.</span></span> <span data-ttu-id="c08f5-205">Después de llamar a <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, debe liberar todas las referencias a la clase derivada y <xref:System.ServiceProcess.ServiceBase> por lo que la memoria que se estaba ocupando pueda ser reclamada por la recolección.</span><span class="sxs-lookup"><span data-stu-id="c08f5-205">After calling <xref:System.ServiceProcess.ServiceBase.Dispose%2A>, you must release all references to the derived class and <xref:System.ServiceProcess.ServiceBase> so the memory they were occupying can be reclaimed by garbage collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c08f5-206">Llame siempre a <xref:System.ServiceProcess.ServiceBase.Dispose%2A> antes de liberar la última referencia a la clase derivada de <xref:System.ServiceProcess.ServiceBase>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-206">Always call <xref:System.ServiceProcess.ServiceBase.Dispose%2A> before you release your last reference to the class derived from <xref:System.ServiceProcess.ServiceBase>.</span></span> <span data-ttu-id="c08f5-207">En caso contrario, los recursos <xref:System.ServiceProcess.ServiceBase> y la clase derivada usa will no liberarse hasta que la colección de elementos no utilizados llama a los destructores de los objetos.</span><span class="sxs-lookup"><span data-stu-id="c08f5-207">Otherwise, the resources <xref:System.ServiceProcess.ServiceBase> and the derived class are using will not be freed until garbage collection calls the objects' destructors.</span></span>  
  
 <span data-ttu-id="c08f5-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> a menudo se implementa para procesar el código en <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, combinado con una llamada a <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-208"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is often implemented to process the code in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, combined with a call to <xref:System.ServiceProcess.ServiceBase.Dispose%2A>.</span></span> <span data-ttu-id="c08f5-209">Si decide hacer esto en su clase derivada, lo habitual es implementar <xref:System.ServiceProcess.ServiceBase.OnStart%2A> para asignar cualquier <xref:System.ServiceProcess.ServiceBase.Dispose%2A> publicado.</span><span class="sxs-lookup"><span data-stu-id="c08f5-209">If you choose to do this in your derived class, it is customary to implement <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to allocate whatever <xref:System.ServiceProcess.ServiceBase.Dispose%2A> released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="EventLog">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.EventLog EventLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.EventLog EventLog" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.EventLog" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EventLog As EventLog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::EventLog ^ EventLog { System::Diagnostics::EventLog ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventLog : System.Diagnostics.EventLog" Usage="System.ServiceProcess.ServiceBase.EventLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.EventLog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-210">Obtiene un registro de eventos que se puede utilizar para escribir la notificación de llamadas de comandos de servicio, como Iniciar y Detener, en el registro de eventos de aplicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-210">Gets an event log you can use to write notification of service command calls, such as Start and Stop, to the Application event log.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-211">Instancia de <see cref="T:System.Diagnostics.EventLog" /> cuyo origen se encuentra registrado en el registro de aplicaciones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-211">An <see cref="T:System.Diagnostics.EventLog" /> instance whose source is registered to the Application log.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-212">El constructor inicializa el <xref:System.ServiceProcess.ServiceBase.EventLog%2A> propiedad a una instancia con el <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> y <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> conjunto de propiedades.</span><span class="sxs-lookup"><span data-stu-id="c08f5-212">The constructor initializes the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to an instance with the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> and <xref:System.Diagnostics.EventLog.Log%2A?displayProperty=nameWithType> properties set.</span></span> <span data-ttu-id="c08f5-213">El origen es el <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> del servicio, y el registro es el registro de aplicación del equipo.</span><span class="sxs-lookup"><span data-stu-id="c08f5-213">The source is the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service, and the log is the computer's Application log.</span></span> <span data-ttu-id="c08f5-214">Estos valores se establecen automáticamente y no pueden cambiarse en el registro automático de los comandos de servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-214">These values are set automatically and cannot be changed for automatic logging of service commands.</span></span>  
  
 <span data-ttu-id="c08f5-215">Cuando <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> es `true`, iniciar, detener, pausar, continuar y comandos personalizados se registran automáticamente en el registro de eventos de aplicación.</span><span class="sxs-lookup"><span data-stu-id="c08f5-215">When <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, Start, Stop, Pause, Continue, and custom commands are recorded automatically in the Application event log.</span></span> <span data-ttu-id="c08f5-216">Puede usar el <xref:System.ServiceProcess.ServiceBase.EventLog%2A> propiedad para escribir mensajes adicionales en ese registro.</span><span class="sxs-lookup"><span data-stu-id="c08f5-216">You can use the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property to write additional messages to that log as well.</span></span> <span data-ttu-id="c08f5-217">Las llamadas de componente <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> mediante este <xref:System.ServiceProcess.ServiceBase.EventLog%2A> miembro.</span><span class="sxs-lookup"><span data-stu-id="c08f5-217">The component calls <xref:System.Diagnostics.EventLog.WriteEntry%2A?displayProperty=nameWithType> using this <xref:System.ServiceProcess.ServiceBase.EventLog%2A> member.</span></span>  
  
 <span data-ttu-id="c08f5-218">Para notificar información a un registro de eventos personalizado en lugar de con el registro de aplicación, establezca <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> a `false` y escribir las instrucciones incluidas en los métodos de control de comandos <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, o <xref:System.ServiceProcess.ServiceBase.OnStop%2A> para publicar en el registro adecuado.</span><span class="sxs-lookup"><span data-stu-id="c08f5-218">To report information to a custom event log rather than the Application log, set <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> to `false` and write instructions within the command-handling methods <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to post to the appropriate log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.AutoLog" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
        <altmember cref="T:System.Diagnostics.EventLog" />
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int with get, set" Usage="System.ServiceProcess.ServiceBase.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-219">Obtiene o establece el código de salida para el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-219">Gets or sets the exit code for the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-220">El código de salida para el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-220">The exit code for the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-221">Establecer el <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> propiedad en un valor distinto de cero antes de detener el servicio para indicar un error con el Administrador de Control de servicios.</span><span class="sxs-lookup"><span data-stu-id="c08f5-221">Set the <xref:System.ServiceProcess.ServiceBase.ExitCode%2A> property to a non-zero value before stopping the service to indicate an error to the Service Control Manager.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxNameLength">
      <MemberSignature Language="C#" Value="public const int MaxNameLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxNameLength = (80)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxNameLength As Integer  = 80" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxNameLength = 80;" />
      <MemberSignature Language="F#" Value="val mutable MaxNameLength : int" Usage="System.ServiceProcess.ServiceBase.MaxNameLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-222">Indica el tamaño máximo de un nombre de servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-222">Indicates the maximum size for a service name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-223">ServiceName y DisplayName tienen restricciones de tamaño que deben tenerse en cuenta al establecer las propiedades de la clase de servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-223">ServiceName and DisplayName both have size restrictions that must be observed when setting the properties on your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.ServiceName" />
      </Docs>
    </Member>
    <Member MemberName="OnContinue">
      <MemberSignature Language="C#" Value="protected virtual void OnContinue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContinue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnContinue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContinue ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContinue();" />
      <MemberSignature Language="F#" Value="abstract member OnContinue : unit -&gt; unit&#xA;override this.OnContinue : unit -&gt; unit" Usage="serviceBase.OnContinue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-224">Si se implementa en una clase derivada, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> se ejecuta cuando el Administrador de control de servicios (SCM, Service Control Manager) envía un comando Continuar al servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-224">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnContinue" /> runs when a Continue command is sent to the service by the Service Control Manager (SCM).</span>
          </span>
          <span data-ttu-id="c08f5-225">Especifica las acciones que deben realizarse cuando se reanuda el funcionamiento normal de un servicio después de una pausa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-225">Specifies actions to take when a service resumes normal functioning after being paused.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-226">Implemente <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> para reflejar la respuesta de la aplicación a <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-226">Implement <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to mirror your application's response to <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span> <span data-ttu-id="c08f5-227">Al continuar el servicio (ya sea a través de la consola Servicios o mediante programación), el <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> de procesamiento se ejecuta y el servicio vuelve a estar activo.</span><span class="sxs-lookup"><span data-stu-id="c08f5-227">When you continue the service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing runs, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="c08f5-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> se espera que se invalide cuando la <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-228"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="c08f5-229">Si <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `false`, el SCM no pasará pausar o continuar solicitudes al servicio, por lo que el <xref:System.ServiceProcess.ServiceBase.OnPause%2A> y <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> métodos no se llamará incluso si se implementan.</span><span class="sxs-lookup"><span data-stu-id="c08f5-229">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if they are implemented.</span></span> <span data-ttu-id="c08f5-230">En el SCM, la `Pause` y `Continue` controles están deshabilitados cuando <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-230">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnCustomCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCustomCommand (int command);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCustomCommand(int32 command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCustomCommand (command As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCustomCommand(int command);" />
      <MemberSignature Language="F#" Value="abstract member OnCustomCommand : int -&gt; unit&#xA;override this.OnCustomCommand : int -&gt; unit" Usage="serviceBase.OnCustomCommand command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="c08f5-231">Mensaje de comando enviado al servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-231">The command message sent to the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-232">Si se implementa en una clase derivada, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> se ejecuta cuando el Administrador de control de servicios (SCM, Service Control Manager) pasa un comando personalizado al servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-232">When implemented in a derived class, <see cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" /> executes when the Service Control Manager (SCM) passes a custom command to the service.</span>
          </span>
          <span data-ttu-id="c08f5-233">Especifica las acciones que deben realizarse cuando se ejecuta un comando con el valor de parámetro especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-233">Specifies actions to take when a command with the specified parameter value occurs.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> le permite especificar funcionalidad adicional al iniciar, detener, pausar y continuar servicios.</span><span class="sxs-lookup"><span data-stu-id="c08f5-234"><xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> lets you specify additional functionality beyond starting, stopping, pausing and continuing services.</span></span>  
  
 <span data-ttu-id="c08f5-235">El SCM no examina el comando personalizado para comprobar si el servicio admite la `command` parámetro pasado.</span><span class="sxs-lookup"><span data-stu-id="c08f5-235">The SCM does not examine the custom command to verify whether the service supports the `command` parameter passed in.</span></span> <span data-ttu-id="c08f5-236">El comando personalizado pasa directamente al servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-236">It passes the custom command directly to the service.</span></span> <span data-ttu-id="c08f5-237">Si el servicio no reconoce el `command` parámetro, no hace nada.</span><span class="sxs-lookup"><span data-stu-id="c08f5-237">If the service does not recognize the `command` parameter, it does nothing.</span></span>  
  
 <span data-ttu-id="c08f5-238">Comandos personalizados generados por un <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> instrucción en un <xref:System.ServiceProcess.ServiceController> componente.</span><span class="sxs-lookup"><span data-stu-id="c08f5-238">Custom commands are raised by an <xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A> statement in a <xref:System.ServiceProcess.ServiceController> component.</span></span> <span data-ttu-id="c08f5-239">Use una instrucción switch o si... a continuación, la condición que se va a controlar los comandos personalizados que defina en el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-239">Use a switch statement or if..then condition to handle the custom commands you define on your service.</span></span>  
  
 <span data-ttu-id="c08f5-240">Los únicos valores de un comando personalizado que puede definir en la aplicación o usar en <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> son aquellos entre 128 y 255.</span><span class="sxs-lookup"><span data-stu-id="c08f5-240">The only values for a custom command that you can define in your application or use in <xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A> are those between 128 and 255.</span></span> <span data-ttu-id="c08f5-241">Enteros inferiores a 128 corresponden a valores de sistema reservado.</span><span class="sxs-lookup"><span data-stu-id="c08f5-241">Integers below 128 correspond to system-reserved values.</span></span>  
  
 <span data-ttu-id="c08f5-242">Si el <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> propiedad es `true`, comandos personalizados, al igual que todos los otros comandos, escriben entradas en el registro de eventos para notificar si la ejecución del método se realizó correctamente o no.</span><span class="sxs-lookup"><span data-stu-id="c08f5-242">If the <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> property is `true`, custom commands, like all other commands, write entries to the event log to report whether the method execution succeeded or failed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="protected virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPause" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPause ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPause();" />
      <MemberSignature Language="F#" Value="abstract member OnPause : unit -&gt; unit&#xA;override this.OnPause : unit -&gt; unit" Usage="serviceBase.OnPause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-243">Si se implementa en una clase derivada, se ejecuta cuando el Administrador de control de servicios (SCM, Service Control Manager) envía un comando Pausar al servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-243">When implemented in a derived class, executes when a Pause command is sent to the service by the Service Control Manager (SCM).</span>
          </span>
          <span data-ttu-id="c08f5-244">Especifica las acciones que deben realizarse cuando un servicio realiza una pausa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-244">Specifies actions to take when a service pauses.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-245">Use <xref:System.ServiceProcess.ServiceBase.OnPause%2A> para especificar el procesamiento que se produce cuando el servicio recibe un comando de pausa.</span><span class="sxs-lookup"><span data-stu-id="c08f5-245">Use <xref:System.ServiceProcess.ServiceBase.OnPause%2A> to specify the processing that occurs when the service receives a Pause command.</span></span> <span data-ttu-id="c08f5-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> se espera que se invalide cuando la <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-246"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="c08f5-247">Al continuar un servicio en pausa (ya sea a través de la consola Servicios o mediante programación), el <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> procesamiento se ejecuta y el servicio vuelve a estar activo.</span><span class="sxs-lookup"><span data-stu-id="c08f5-247">When you continue a paused service (either through the Services console or programmatically), the <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> processing is run, and the service becomes active again.</span></span>  
  
 <span data-ttu-id="c08f5-248">El comando Pausar sólo permite la aplicación reaccionar ante un evento específico.</span><span class="sxs-lookup"><span data-stu-id="c08f5-248">The Pause command only allows your application to react to a specific event.</span></span> <span data-ttu-id="c08f5-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> no hace nada para el servicio que no definen hacer.</span><span class="sxs-lookup"><span data-stu-id="c08f5-249"><xref:System.ServiceProcess.ServiceBase.OnPause%2A> does nothing to the service that you do not define it to do.</span></span>  
  
 <span data-ttu-id="c08f5-250">Enviar una solicitud de pausa en el servicio puede ahorrar recursos del sistema porque la pausa no necesita liberar todos los recursos del sistema.</span><span class="sxs-lookup"><span data-stu-id="c08f5-250">Sending a Pause request to the service can conserve system resources because Pause need not release all system resources.</span></span> <span data-ttu-id="c08f5-251">Por ejemplo, si se han abierto los subprocesos por el proceso, poner en pausa un servicio en lugar de detenerlo puede permitir que los subprocesos permanezcan abiertos, obviando la necesidad de reasignarlos cuando el servicio continúa.</span><span class="sxs-lookup"><span data-stu-id="c08f5-251">For example, if threads have been opened by the process, pausing a service rather than stopping it can allow the threads to remain open, obviating the need to reallocate them when the service continues.</span></span> <span data-ttu-id="c08f5-252">Si define pausar para liberar todos los recursos del sistema, se comporta como un comando Detener.</span><span class="sxs-lookup"><span data-stu-id="c08f5-252">If you define Pause to release all system resources, it behaves like a Stop command.</span></span>  
  
 <span data-ttu-id="c08f5-253">Establecer <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> a `true`e invalidar <xref:System.ServiceProcess.ServiceBase.OnPause%2A> y <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> para especificar el procesamiento que debe producirse cuando el SCM pasa una solicitud Pausar o continuar al servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-253">Set <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> to `true`, and override <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> to specify the processing that should occur when the SCM passes a Pause or Continue request to your service.</span></span> <span data-ttu-id="c08f5-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> debe implementarse para deshacer el procesamiento en <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-254"><xref:System.ServiceProcess.ServiceBase.OnContinue%2A> should be implemented to undo the processing in <xref:System.ServiceProcess.ServiceBase.OnPause%2A>.</span></span>  
  
 <span data-ttu-id="c08f5-255">Si <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `false`, el SCM no pasará pausar o continuar solicitudes al servicio, por lo que el <xref:System.ServiceProcess.ServiceBase.OnPause%2A> y <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> métodos no se llamará aunque estén implementados.</span><span class="sxs-lookup"><span data-stu-id="c08f5-255">If <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`, the SCM will not pass Pause or Continue requests to the service, so the <xref:System.ServiceProcess.ServiceBase.OnPause%2A> and <xref:System.ServiceProcess.ServiceBase.OnContinue%2A> methods will not be called even if implemented.</span></span> <span data-ttu-id="c08f5-256">En el SCM, la `Pause` y `Continue` controles están deshabilitados cuando <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-256">In the SCM, the `Pause` and `Continue` controls are disabled when <xref:System.ServiceProcess.ServiceBase.CanPauseAndContinue%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanPauseAndContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnPowerEvent">
      <MemberSignature Language="C#" Value="protected virtual bool OnPowerEvent (System.ServiceProcess.PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnPowerEvent(valuetype System.ServiceProcess.PowerBroadcastStatus powerStatus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnPowerEvent (powerStatus As PowerBroadcastStatus) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnPowerEvent(System::ServiceProcess::PowerBroadcastStatus powerStatus);" />
      <MemberSignature Language="F#" Value="abstract member OnPowerEvent : System.ServiceProcess.PowerBroadcastStatus -&gt; bool&#xA;override this.OnPowerEvent : System.ServiceProcess.PowerBroadcastStatus -&gt; bool" Usage="serviceBase.OnPowerEvent powerStatus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="powerStatus" Type="System.ServiceProcess.PowerBroadcastStatus" />
      </Parameters>
      <Docs>
        <param name="powerStatus">
          <span data-ttu-id="c08f5-257">
            <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> que indica una notificación del sistema sobre su estado de la alimentación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-257">A <see cref="T:System.ServiceProcess.PowerBroadcastStatus" /> that indicates a notification from the system about its power status.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-258">Si se implementa en una clase derivada, se ejecuta cuando el estado de la alimentación del equipo cambia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-258">When implemented in a derived class, executes when the computer's power status has changed.</span>
          </span>
          <span data-ttu-id="c08f5-259">Esto se aplica a equipos portátiles cuando entran en modo suspendido, que no es lo mismo que un cierre de sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-259">This applies to laptop computers when they go into suspended mode, which is not the same as a system shutdown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c08f5-260">Cuando se implementa en una clase derivada, las necesidades de la aplicación determinan qué valor se debe devolver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-260">When implemented in a derived class, the needs of your application determine what value to return.</span>
          </span>
          <span data-ttu-id="c08f5-261">Por ejemplo, si se pasa un estado de difusión <see langword="QuerySuspend" />, puede hacerse que la aplicación rechace la consulta mediante un valor devuelto <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-261">For example, if a <see langword="QuerySuspend" /> broadcast status is passed, you could cause your application to reject the query by returning <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-262">Use <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> para especificar el procesamiento que se produce cuando el evento del sistema indicado en el <xref:System.ServiceProcess.PowerBroadcastStatus> enumeración--por ejemplo, se produce cuando el equipo se coloca en modo de suspensión o indica la alimentación de batería baja.</span><span class="sxs-lookup"><span data-stu-id="c08f5-262">Use <xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> to specify the processing that occurs when the system event indicated in the <xref:System.ServiceProcess.PowerBroadcastStatus> enumeration occurs--for example, when the computer is placed in suspended mode or indicates low battery power.</span></span>  
  
 <span data-ttu-id="c08f5-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> se espera que se invalide cuando la <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-263"><xref:System.ServiceProcess.ServiceBase.OnPowerEvent%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanHandlePowerEvent%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandlePowerEvent" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnSessionChange">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionChange (System.ServiceProcess.SessionChangeDescription changeDescription);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionChange(valuetype System.ServiceProcess.SessionChangeDescription changeDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnSessionChange(System.ServiceProcess.SessionChangeDescription)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionChange (changeDescription As SessionChangeDescription)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionChange(System::ServiceProcess::SessionChangeDescription changeDescription);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionChange : System.ServiceProcess.SessionChangeDescription -&gt; unit&#xA;override this.OnSessionChange : System.ServiceProcess.SessionChangeDescription -&gt; unit" Usage="serviceBase.OnSessionChange changeDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeDescription" Type="System.ServiceProcess.SessionChangeDescription" />
      </Parameters>
      <Docs>
        <param name="changeDescription">
          <span data-ttu-id="c08f5-264">Estructura que identifica el tipo de cambio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-264">A structure that identifies the change type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-265">Se ejecuta cuando se recibe un evento de cambio de una sesión de Terminal Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-265">Executes when a change event is received from a Terminal Server session.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-266">Debe establecer el <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> propiedad `true` para habilitar la ejecución de este método.</span><span class="sxs-lookup"><span data-stu-id="c08f5-266">You must set the <xref:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent%2A> property to `true` to enable the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanHandleSessionChangeEvent" />
        <altmember cref="T:System.ServiceProcess.SessionChangeDescription" />
      </Docs>
    </Member>
    <Member MemberName="OnShutdown">
      <MemberSignature Language="C#" Value="protected virtual void OnShutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnShutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnShutdown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnShutdown ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnShutdown();" />
      <MemberSignature Language="F#" Value="abstract member OnShutdown : unit -&gt; unit&#xA;override this.OnShutdown : unit -&gt; unit" Usage="serviceBase.OnShutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-267">Si se implementa en una clase derivada, se ejecuta cuando el sistema se está cerrando.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-267">When implemented in a derived class, executes when the system is shutting down.</span>
          </span>
          <span data-ttu-id="c08f5-268">Especifica lo que tiene que suceder inmediatamente antes de que se cierre el sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-268">Specifies what should occur immediately prior to the system shutting down.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-269">Use <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> para especificar el procesamiento que se produce cuando se cierra el sistema.</span><span class="sxs-lookup"><span data-stu-id="c08f5-269">Use <xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> to specify the processing that occurs when the system shuts down.</span></span>  
  
 <span data-ttu-id="c08f5-270">Este evento se produce únicamente cuando se apaga el sistema operativo, no cuando se apaga el equipo.</span><span class="sxs-lookup"><span data-stu-id="c08f5-270">This event occurs only when the operating system is shut down, not when the computer is turned off.</span></span>  
  
 <span data-ttu-id="c08f5-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> se espera que se invalide cuando la <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-271"><xref:System.ServiceProcess.ServiceBase.OnShutdown%2A> is expected to be overridden when the <xref:System.ServiceProcess.ServiceBase.CanShutdown%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="protected virtual void OnStart (string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStart(string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStart (args As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStart(cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnStart : string[] -&gt; unit&#xA;override this.OnStart : string[] -&gt; unit" Usage="serviceBase.OnStart args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="c08f5-272">Datos pasados por el comando Iniciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-272">Data passed by the start command.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-273">Si se implementa en una clase derivada, se ejecuta cuando el Administrador de control de servicios (SCM, Service Control Manager) envía un comando Iniciar al servicio o cuando se inicia el sistema operativo (en el caso de un servicio que se inicia de forma automática).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-273">When implemented in a derived class, executes when a Start command is sent to the service by the Service Control Manager (SCM) or when the operating system starts (for a service that starts automatically).</span>
          </span>
          <span data-ttu-id="c08f5-274">Especifica las acciones que deben realizarse cuando se inicia el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-274">Specifies actions to take when the service starts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-275">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> para especificar el procesamiento que se produce cuando el servicio recibe un comando de inicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-275">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to specify the processing that occurs when the service receives a Start command.</span></span> <span data-ttu-id="c08f5-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> es el método en el que se especifica el comportamiento del servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-276"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is the method in which you specify the behavior of the service.</span></span> <span data-ttu-id="c08f5-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> puede tomar argumentos como una forma de pasar datos, pero este uso es poco frecuente.</span><span class="sxs-lookup"><span data-stu-id="c08f5-277"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> can take arguments as a way to pass data, but this usage is rare.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="c08f5-278">No utilice el constructor para realizar el procesamiento que debería estar en <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-278">Do not use the constructor to perform processing that should be in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="c08f5-279">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> para controlar toda la inicialización del servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-279">Use <xref:System.ServiceProcess.ServiceBase.OnStart%2A> to handle all initialization of your service.</span></span> <span data-ttu-id="c08f5-280">Se llama al constructor al ejecutable de la aplicación se ejecuta, no cuando se ejecuta el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-280">The constructor is called when the application's executable runs, not when the service runs.</span></span> <span data-ttu-id="c08f5-281">El ejecutable se ejecuta antes de <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-281">The executable runs before <xref:System.ServiceProcess.ServiceBase.OnStart%2A>.</span></span> <span data-ttu-id="c08f5-282">Al continuar, por ejemplo, se llama al constructor no nuevo porque el SCM ya contiene el objeto en memoria.</span><span class="sxs-lookup"><span data-stu-id="c08f5-282">When you continue, for example, the constructor is not called again because the SCM already holds the object in memory.</span></span> <span data-ttu-id="c08f5-283">Si <xref:System.ServiceProcess.ServiceBase.OnStop%2A> libera recursos asignados en el constructor en lugar de en <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, los recursos necesarios no se crearía la segunda vez que se llama al servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-283">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> releases resources allocated in the constructor rather than in <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, the needed resources would not be created again the second time the service is called.</span></span>  
  
 <span data-ttu-id="c08f5-284">Servicios pueden configurarse para iniciarse automáticamente cuando se reinicia el equipo estableciendo el <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> en el instalador del servicio a <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span><span class="sxs-lookup"><span data-stu-id="c08f5-284">Services can be set to start automatically when the computer reboots by setting the <xref:System.ServiceProcess.ServiceInstaller.StartType%2A> on the service's installer to <xref:System.ServiceProcess.ServiceStartMode.Automatic>.</span></span> <span data-ttu-id="c08f5-285">En esta situación, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> se llamaría al iniciar el sistema.</span><span class="sxs-lookup"><span data-stu-id="c08f5-285">In such a situation, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> would be called at system startup.</span></span>  
  
 <span data-ttu-id="c08f5-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> se espera que se invalide en la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c08f5-286"><xref:System.ServiceProcess.ServiceBase.OnStart%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="c08f5-287">Para el servicio sea útil, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> y <xref:System.ServiceProcess.ServiceBase.OnStop%2A> tienen que implementarse en la clase de servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-287">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 <span data-ttu-id="c08f5-288">Procesar argumentos de inicialización para el servicio en la <xref:System.ServiceProcess.ServiceBase.OnStart%2A> método, no en el método Main.</span><span class="sxs-lookup"><span data-stu-id="c08f5-288">Process initialization arguments for the service in the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method, not in the Main method.</span></span> <span data-ttu-id="c08f5-289">Los argumentos de la `args` matriz de parámetros puede establecerse manualmente en la ventana Propiedades para el servicio en la consola de servicios.</span><span class="sxs-lookup"><span data-stu-id="c08f5-289">The arguments in the `args` parameter array can be set manually in the properties window for the service in the Services console.</span></span> <span data-ttu-id="c08f5-290">No se guardan los argumentos especificados en la consola; se pasan al servicio en una sola vez cuando se inicia el servicio desde el panel de control.</span><span class="sxs-lookup"><span data-stu-id="c08f5-290">The arguments entered in the console are not saved; they are passed to the service on a one-time basis when the service is started from the control panel.</span></span> <span data-ttu-id="c08f5-291">Argumentos que deben estar presentes cuando se inicia automáticamente el servicio se pueden colocar en el valor de cadena ImagePath para la clave de registro del servicio (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\  *\< nombre del servicio >*).</span><span class="sxs-lookup"><span data-stu-id="c08f5-291">Arguments that must be present when the service is automatically started can be placed in the ImagePath string value for the service's registry key (HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\\*\<service name>*).</span></span> <span data-ttu-id="c08f5-292">Puede obtener los argumentos del registro mediante el <xref:System.Environment.GetCommandLineArgs%2A> método, por ejemplo: `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span><span class="sxs-lookup"><span data-stu-id="c08f5-292">You can obtain the arguments from the registry using the <xref:System.Environment.GetCommandLineArgs%2A> method, for example:  `string[] imagePathArgs = Environment.GetCommandLineArgs();`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnStop">
      <MemberSignature Language="C#" Value="protected virtual void OnStop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.OnStop" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStop ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStop();" />
      <MemberSignature Language="F#" Value="abstract member OnStop : unit -&gt; unit&#xA;override this.OnStop : unit -&gt; unit" Usage="serviceBase.OnStop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-293">Si se implementa en una clase derivada, se ejecuta cuando el Administrador de control de servicios (SCM, Service Control Manager) envía a un comando Detener al servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-293">When implemented in a derived class, executes when a Stop command is sent to the service by the Service Control Manager (SCM).</span>
          </span>
          <span data-ttu-id="c08f5-294">Especifica las acciones que deben realizarse cuando un servicio deja de ejecutarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-294">Specifies actions to take when a service stops running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-295">Use <xref:System.ServiceProcess.ServiceBase.OnStop%2A> para especificar el procesamiento que se produce cuando el servicio recibe un comando Detener.</span><span class="sxs-lookup"><span data-stu-id="c08f5-295">Use <xref:System.ServiceProcess.ServiceBase.OnStop%2A> to specify the processing that occurs when the service receives a Stop command.</span></span>  
  
 <span data-ttu-id="c08f5-296">Cuando el SCM recibe un comando Detener, utiliza el valor de <xref:System.ServiceProcess.ServiceBase.CanStop%2A> para comprobar si el servicio acepta comandos Detener.</span><span class="sxs-lookup"><span data-stu-id="c08f5-296">When the SCM receives a Stop command, it uses the value of <xref:System.ServiceProcess.ServiceBase.CanStop%2A> to verify whether the service accepts Stop commands.</span></span> <span data-ttu-id="c08f5-297">Si <xref:System.ServiceProcess.ServiceBase.CanStop%2A> es `true`, el comando Detener se pasa al servicio y el <xref:System.ServiceProcess.ServiceBase.OnStop%2A> se llama al método si se ha definido.</span><span class="sxs-lookup"><span data-stu-id="c08f5-297">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `true`, the Stop command is passed to the service, and the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method is called if it is defined.</span></span> <span data-ttu-id="c08f5-298">Si <xref:System.ServiceProcess.ServiceBase.OnStop%2A> no está implementado en el servicio, el SCM controla el comando Detener.</span><span class="sxs-lookup"><span data-stu-id="c08f5-298">If <xref:System.ServiceProcess.ServiceBase.OnStop%2A> is not implemented in the service, the SCM handles the Stop command.</span></span>  
  
 <span data-ttu-id="c08f5-299">Si <xref:System.ServiceProcess.ServiceBase.CanStop%2A> es `false`, el SCM omite el comando Detener.</span><span class="sxs-lookup"><span data-stu-id="c08f5-299">If <xref:System.ServiceProcess.ServiceBase.CanStop%2A> is `false`, the SCM ignores the Stop command.</span></span> <span data-ttu-id="c08f5-300">No se pasa al servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-300">It is not passed to the service.</span></span> <span data-ttu-id="c08f5-301">El comando Detener devuelve y produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c08f5-301">The Stop command returns and throws an exception.</span></span>  
  
 <span data-ttu-id="c08f5-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> se espera que se invalide en la clase derivada.</span><span class="sxs-lookup"><span data-stu-id="c08f5-302"><xref:System.ServiceProcess.ServiceBase.OnStop%2A> is expected to be overridden in the derived class.</span></span> <span data-ttu-id="c08f5-303">Para el servicio sea útil, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> y <xref:System.ServiceProcess.ServiceBase.OnStop%2A> tienen que implementarse en la clase de servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-303">For the service to be useful, <xref:System.ServiceProcess.ServiceBase.OnStart%2A> and <xref:System.ServiceProcess.ServiceBase.OnStop%2A> should both be implemented in your service class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPowerEvent(System.ServiceProcess.PowerBroadcastStatus)" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnShutdown" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnCustomCommand(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RequestAdditionalTime">
      <MemberSignature Language="C#" Value="public void RequestAdditionalTime (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestAdditionalTime(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.RequestAdditionalTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequestAdditionalTime (milliseconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestAdditionalTime(int milliseconds);" />
      <MemberSignature Language="F#" Value="member this.RequestAdditionalTime : int -&gt; unit" Usage="serviceBase.RequestAdditionalTime milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">
          <span data-ttu-id="c08f5-304">Tiempo solicitado en milisegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-304">The requested time in milliseconds.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-305">Solicita tiempo adicional para una operación pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-305">Requests additional time for a pending operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-306">El <xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> método está pensado para ser llamado por invalidado <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, o <xref:System.ServiceProcess.ServiceBase.OnStop%2A> métodos para solicitar más tiempo para que una operación pendiente, para evitar que el Administrador de Control de servicios (SCM) de marcado de la servicio no responde.</span><span class="sxs-lookup"><span data-stu-id="c08f5-306">The <xref:System.ServiceProcess.ServiceBase.RequestAdditionalTime%2A> method is intended to be called by the overridden <xref:System.ServiceProcess.ServiceBase.OnContinue%2A>, <xref:System.ServiceProcess.ServiceBase.OnPause%2A>, <xref:System.ServiceProcess.ServiceBase.OnStart%2A>, or <xref:System.ServiceProcess.ServiceBase.OnStop%2A> methods to request additional time for a pending operation, to prevent the Service Control Manager (SCM) from marking the service as not responding.</span></span>  <span data-ttu-id="c08f5-307">Si la operación pendiente no es un continuar, pausa, inicio o detención, un <xref:System.InvalidOperationException> se produce.</span><span class="sxs-lookup"><span data-stu-id="c08f5-307">If the pending operation is not a continue, pause, start, or stop, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c08f5-308">El servicio no está en estado pendiente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-308">The service is not in a pending state.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnContinue" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnPause" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Run">
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-309">Proporciona el punto de entrada principal para un ejecutable de servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-309">Provides the main entry point for a service executable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase service);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase service) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (service As ServiceBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(System::ServiceProcess::ServiceBase ^ service);" />
      <MemberSignature Language="F#" Value="static member Run : System.ServiceProcess.ServiceBase -&gt; unit" Usage="System.ServiceProcess.ServiceBase.Run service" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="service" Type="System.ServiceProcess.ServiceBase" />
      </Parameters>
      <Docs>
        <param name="service">
          <span data-ttu-id="c08f5-310">
            <see cref="T:System.ServiceProcess.ServiceBase" /> que indica que va a iniciarse un servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-310">A <see cref="T:System.ServiceProcess.ServiceBase" /> which indicates a service to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-311">Registra el ejecutable para un servicio con el Administrador de control de servicios (SCM, Service Control Manager).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-311">Registers the executable for a service with the Service Control Manager (SCM).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-312">Llame a esta sobrecarga en el `main()` funcionamiento del servicio para registrar el servicio con el Administrador de Control de servicio ejecutable.</span><span class="sxs-lookup"><span data-stu-id="c08f5-312">Call this overload in the `main()` function of the service executable to register the service with the Service Control Manager.</span></span> <span data-ttu-id="c08f5-313">Después de llamar a <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, el Administrador de Control de servicio emite un comando de inicio, lo que resulta en una llamada a la <xref:System.ServiceProcess.ServiceBase.OnStart%2A> método en el servicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-313">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%29>, the Service Control Manager issues a Start command, which results in a call to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> method in the service.</span></span> <span data-ttu-id="c08f5-314">El servicio no se inicia hasta que se ejecuta el comando de inicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-314">The service is not started until the Start command is executed.</span></span>  
  
 <span data-ttu-id="c08f5-315">El <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> se llama al método en la misma manera que <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> para aplicaciones de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c08f5-315">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="c08f5-316">Si <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> es `true`, se escribe una entrada en el registro de eventos si el servicio especificado por el `service` parámetro no puede iniciarse.</span><span class="sxs-lookup"><span data-stu-id="c08f5-316">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if the service specified by the `service` parameter fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c08f5-317">El valor de <paramref name="service" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-317">
              <paramref name="service" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Run">
      <MemberSignature Language="C#" Value="public static void Run (System.ServiceProcess.ServiceBase[] services);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Run(class System.ServiceProcess.ServiceBase[] services) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Run(System.ServiceProcess.ServiceBase[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Run (services As ServiceBase())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Run(cli::array &lt;System::ServiceProcess::ServiceBase ^&gt; ^ services);" />
      <MemberSignature Language="F#" Value="static member Run : System.ServiceProcess.ServiceBase[] -&gt; unit" Usage="System.ServiceProcess.ServiceBase.Run services" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="services" Type="System.ServiceProcess.ServiceBase[]" />
      </Parameters>
      <Docs>
        <param name="services">
          <span data-ttu-id="c08f5-318">Una matriz de instancias de ServiceBase, que indica los servicios que se van a iniciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-318">An array of ServiceBase instances, which indicate services to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-319">Registra el ejecutable para varios servicios con el Administrador de control de servicios (SCM, Service Control Manager).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-319">Registers the executable for multiple services with the Service Control Manager (SCM).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-320">Llame a esta sobrecarga en el `main()` funcionamiento del servicio para registrar los servicios con el Administrador de Control de servicio ejecutable.</span><span class="sxs-lookup"><span data-stu-id="c08f5-320">Call this overload in the `main()` function of the service executable to register the services with the Service Control Manager.</span></span> <span data-ttu-id="c08f5-321">Después de llamar a <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, el Administrador de Control de servicio emite comandos de inicio, que producen las llamadas a la <xref:System.ServiceProcess.ServiceBase.OnStart%2A> métodos en los servicios.</span><span class="sxs-lookup"><span data-stu-id="c08f5-321">After you call <xref:System.ServiceProcess.ServiceBase.Run%28System.ServiceProcess.ServiceBase%5B%5D%29>, the Service Control Manager issues Start commands, which result in calls to the <xref:System.ServiceProcess.ServiceBase.OnStart%2A> methods in the services.</span></span> <span data-ttu-id="c08f5-322">Los servicios no se inician hasta que se ejecutan los comandos de inicio.</span><span class="sxs-lookup"><span data-stu-id="c08f5-322">The services are not started until the Start commands are executed.</span></span>  
  
 <span data-ttu-id="c08f5-323">El <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> se llama al método en la misma manera que el <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> método para las aplicaciones de Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="c08f5-323">The <xref:System.ServiceProcess.ServiceBase.Run%2A?displayProperty=nameWithType> method is called in much the same way as the <xref:System.Windows.Forms.Application.Run%2A?displayProperty=nameWithType> method for Windows Forms applications.</span></span>  
  
 <span data-ttu-id="c08f5-324">Si <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> es `true`, se escribe una entrada al registro de eventos si no se puede iniciar cualquier servicio en la matriz.</span><span class="sxs-lookup"><span data-stu-id="c08f5-324">If <xref:System.ServiceProcess.ServiceBase.AutoLog%2A> is `true`, an entry is written to the event log if any service in the array fails to start.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c08f5-325">No proporcionó un servicio para que se inicie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-325">You did not supply a service to start.</span>
          </span>
          <span data-ttu-id="c08f5-326">La matriz podría ser <see langword="null" /> o estar vacía.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-326">The array might be <see langword="null" /> or empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.ServiceProcess.ServiceBase.#ctor" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStart(System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="ServiceHandle">
      <MemberSignature Language="C#" Value="protected IntPtr ServiceHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ServiceHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ServiceHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property IntPtr ServiceHandle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceHandle : nativeint" Usage="System.ServiceProcess.ServiceBase.ServiceHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-327">Obtiene el identificador del control de servicios para el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-327">Gets the service control handle for the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-328">Una estructura <see cref="T:System.IntPtr" /> que contiene el identificador del control de servicios para el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-328">An <see cref="T:System.IntPtr" /> structure that contains the service control handle for the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-329">El identificador del control de servicio se usa para comunicarse con el Administrador de Control de servicios (SCM).</span><span class="sxs-lookup"><span data-stu-id="c08f5-329">The service control handle is used to communicate with the Service Control Manager (SCM).</span></span>  <span data-ttu-id="c08f5-330">El identificador puede usarse para actualizar la información de estado del Administrador de control de servicio para el servicio que realiza la llamada con el no administrado `SetServiceStatus` función.</span><span class="sxs-lookup"><span data-stu-id="c08f5-330">The handle can be used to update the service control manager's status information for the calling service using the unmanaged `SetServiceStatus` function.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="c08f5-331">Para obtener acceso a código no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-331">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="c08f5-332">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-332">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ServiceMainCallback">
      <MemberSignature Language="C#" Value="public void ServiceMainCallback (int argCount, IntPtr argPointer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ServiceMainCallback(int32 argCount, native int argPointer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.ServiceMainCallback(System.Int32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ServiceMainCallback (argCount As Integer, argPointer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ServiceMainCallback(int argCount, IntPtr argPointer);" />
      <MemberSignature Language="F#" Value="member this.ServiceMainCallback : int * nativeint -&gt; unit" Usage="serviceBase.ServiceMainCallback (argCount, argPointer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argCount" Type="System.Int32" />
        <Parameter Name="argPointer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="argCount">
          <span data-ttu-id="c08f5-333">Número de argumentos de la matriz de argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-333">The number of arguments in the argument array.</span>
          </span>
        </param>
        <param name="argPointer">
          <span data-ttu-id="c08f5-334">Estructura <see cref="T:System.IntPtr" /> que señala a una matriz de argumentos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-334">An <see cref="T:System.IntPtr" /> structure that points to an array of arguments.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c08f5-335">Registra el controlador de comandos e inicia el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-335">Registers the command handler and starts the service.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string with get, set" Usage="System.ServiceProcess.ServiceBase.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceProcess.ServiceProcessDescription("SBServiceName")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-336">Obtiene o establece el nombre corto utilizado para identificar el servicio en el sistema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-336">Gets or sets the short name used to identify the service to the system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c08f5-337">Nombre del servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-337">The name of the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-338">El <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> identifica el servicio con el Administrador de Control de servicios.</span><span class="sxs-lookup"><span data-stu-id="c08f5-338">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> identifies the service to the Service Control Manager.</span></span> <span data-ttu-id="c08f5-339">El valor de esta propiedad debe ser idéntico al nombre registrado para el servicio en la <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> propiedad de la clase de instalador correspondiente.</span><span class="sxs-lookup"><span data-stu-id="c08f5-339">The value of this property must be identical to the name recorded for the service in the <xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A?displayProperty=nameWithType> property of the corresponding installer class.</span></span> <span data-ttu-id="c08f5-340">En el código, el <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> del servicio se establece normalmente el `main()` función del archivo ejecutable.</span><span class="sxs-lookup"><span data-stu-id="c08f5-340">In code, the <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> of the service is usually set in the `main()` function of the executable.</span></span>  
  
 <span data-ttu-id="c08f5-341">El <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> también se utiliza para especificar el <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> asociado con el <xref:System.ServiceProcess.ServiceBase.EventLog%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="c08f5-341">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A> is also used to specify the <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=nameWithType> associated with the <xref:System.ServiceProcess.ServiceBase.EventLog%2A> property.</span></span> <span data-ttu-id="c08f5-342">Esto <xref:System.ServiceProcess.ServiceBase.EventLog%2A> es una instancia que escribe información de comandos de servicio en el registro de aplicación.</span><span class="sxs-lookup"><span data-stu-id="c08f5-342">This <xref:System.ServiceProcess.ServiceBase.EventLog%2A> is an instance that writes service command information to the Application log.</span></span>  
  
 <span data-ttu-id="c08f5-343">El <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, que proporciona la cadena de origen para el registro de eventos, debe establecerse antes de que el servicio se escribe en el registro de eventos.</span><span class="sxs-lookup"><span data-stu-id="c08f5-343">The <xref:System.ServiceProcess.ServiceBase.ServiceName%2A>, which supplies the source string for the event log, must be set before the service writes to the event log.</span></span> <span data-ttu-id="c08f5-344">Intenta obtener acceso el registro de eventos antes de que se establece el nombre de origen hace que se produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="c08f5-344">Trying to access the event log before the source name is set causes an exception to be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c08f5-345">Ya se inició el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-345">The service has already been started.</span>
          </span>
          <span data-ttu-id="c08f5-346">La propiedad <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> no puede cambiarse una vez iniciado el servicio.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-346">The <see cref="P:System.ServiceProcess.ServiceBase.ServiceName" /> property cannot be changed once the service has started.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c08f5-347">El nombre especificado es una cadena de longitud cero o es más largo que <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" />, o el nombre especificado contiene caracteres de barra diagonal o barra diagonal inversa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-347">The specified name is a zero-length string or is longer than <see cref="F:System.ServiceProcess.ServiceBase.MaxNameLength" />, or the specified name contains forward slash or backslash characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.ServiceProcess.ServiceInstaller.ServiceName" />
        <altmember cref="P:System.Diagnostics.EventLog.Source" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceProcess.ServiceBase.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="serviceBase.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceProcess.ServiceController</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c08f5-348">Detiene el servicio en ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c08f5-348">Stops the executing service.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c08f5-349">El <xref:System.ServiceProcess.ServiceBase.Stop%2A> método establece el estado del servicio para indicar un delimitador está pendiente y llama el <xref:System.ServiceProcess.ServiceBase.OnStop%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c08f5-349">The <xref:System.ServiceProcess.ServiceBase.Stop%2A> method sets the service state to indicate a stop is pending and calls the <xref:System.ServiceProcess.ServiceBase.OnStop%2A> method.</span></span>  <span data-ttu-id="c08f5-350">Después de la aplicación se detiene, el estado del servicio se establece en detenido.</span><span class="sxs-lookup"><span data-stu-id="c08f5-350">After the application is stopped, the service state is set to stopped.</span></span> <span data-ttu-id="c08f5-351">Si la aplicación es un servicio hospedado, se descarga el dominio de aplicación.</span><span class="sxs-lookup"><span data-stu-id="c08f5-351">If the application is a hosted service, the application domain is unloaded.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceProcess.ServiceBase.CanStop" />
        <altmember cref="M:System.ServiceProcess.ServiceBase.OnStop" />
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="MulticastDelegate" FullName="System.MulticastDelegate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9973e07fbce6416998f6f3811b5f3a7a6c44a503" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52735962" /></Metadata><TypeSignature Language="C#" Value="public abstract class MulticastDelegate : Delegate" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit MulticastDelegate extends System.Delegate" />
  <TypeSignature Language="DocId" Value="T:System.MulticastDelegate" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MulticastDelegate&#xA;Inherits Delegate" />
  <TypeSignature Language="C++ CLI" Value="public ref class MulticastDelegate abstract : Delegate" />
  <TypeSignature Language="F#" Value="type MulticastDelegate = class&#xA;    inherit Delegate" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c7903-101">Representa un delegado multidifusión; es decir, un delegado que puede tener más de un elemento en su lista de invocación.</span><span class="sxs-lookup"><span data-stu-id="c7903-101">Represents a multicast delegate; that is, a delegate that can have more than one element in its invocation list.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-102"><xref:System.MulticastDelegate> es una clase especial.</span><span class="sxs-lookup"><span data-stu-id="c7903-102"><xref:System.MulticastDelegate> is a special class.</span></span> <span data-ttu-id="c7903-103">Los compiladores y otras herramientas pueden derivar de esta clase, pero no se puede derivar de ella explícitamente.</span><span class="sxs-lookup"><span data-stu-id="c7903-103">Compilers and other tools can derive from this class, but you cannot derive from it explicitly.</span></span> <span data-ttu-id="c7903-104">Lo mismo puede decirse de la <xref:System.Delegate> clase.</span><span class="sxs-lookup"><span data-stu-id="c7903-104">The same is true of the <xref:System.Delegate> class.</span></span>  
  
 <span data-ttu-id="c7903-105">Además de los métodos que tipos delegación heredan de <xref:System.MulticastDelegate>, common language runtime proporciona dos métodos especiales: `BeginInvoke` y `EndInvoke`.</span><span class="sxs-lookup"><span data-stu-id="c7903-105">In addition to the methods that delegate types inherit from <xref:System.MulticastDelegate>, the common language runtime provides two special methods: `BeginInvoke` and `EndInvoke`.</span></span> <span data-ttu-id="c7903-106">Para obtener más información acerca de estos métodos, consulte [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="c7903-106">For more information about these methods, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="c7903-107">Un <xref:System.MulticastDelegate> tiene una lista vinculada de delegados, llama a una lista de invocación, que consta de uno o más elementos.</span><span class="sxs-lookup"><span data-stu-id="c7903-107">A <xref:System.MulticastDelegate> has a linked list of delegates, called an invocation list, consisting of one or more elements.</span></span> <span data-ttu-id="c7903-108">Cuando se invoca un delegado de multidifusión, los delegados en la lista de invocaciones se denominan de forma sincrónica en el orden en que aparecen.</span><span class="sxs-lookup"><span data-stu-id="c7903-108">When a multicast delegate is invoked, the delegates in the invocation list are called synchronously in the order in which they appear.</span></span> <span data-ttu-id="c7903-109">Si se produce un error durante la ejecución de la lista, a continuación, se produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c7903-109">If an error occurs during execution of the list then an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c7903-110">En el ejemplo siguiente se define una clase, `StringContainer`, que incluye una colección de cadenas.</span><span class="sxs-lookup"><span data-stu-id="c7903-110">The following example defines a class, `StringContainer`, which includes a collection of strings.</span></span> <span data-ttu-id="c7903-111">Uno de sus miembros es el `CheckAndDisplayDelegate` delegar, que se usa para mostrar las cadenas almacenadas en un `StringContainer` objetos que cumplen determinados criterios.</span><span class="sxs-lookup"><span data-stu-id="c7903-111">One of its members is the `CheckAndDisplayDelegate` delegate, which is used to display strings stored in a `StringContainer` object that satisfy particular criteria.</span></span> <span data-ttu-id="c7903-112">El delegado toma una sola cadena como parámetro y devuelve `void` (o, en Visual Basic, es un `Sub` procedimiento).</span><span class="sxs-lookup"><span data-stu-id="c7903-112">The delegate takes a single string as a parameter and returns `void` (or, in Visual Basic, it's a `Sub` procedure).</span></span> <span data-ttu-id="c7903-113">También incluye un método, `DisplayAllQualified`, que tiene un único parámetro, un `CheckAndDisplayDelegate` delegar.</span><span class="sxs-lookup"><span data-stu-id="c7903-113">It also includes a method, `DisplayAllQualified`, that has a single parameter, a `CheckAndDisplayDelegate` delegate.</span></span> <span data-ttu-id="c7903-114">Esto permite que se llame al método y mostrar un conjunto de cadenas que se filtran en función de los métodos que contiene el delegado.</span><span class="sxs-lookup"><span data-stu-id="c7903-114">This allows the method to be called and to display a set of strings that are filtered based on the methods that the delegate contains.</span></span>  
  
 <span data-ttu-id="c7903-115">El ejemplo también define una clase de utilidad, `StringExtensions`, que tiene dos métodos:</span><span class="sxs-lookup"><span data-stu-id="c7903-115">The example also defines a utility class, `StringExtensions`, that has two methods:</span></span>  
  
-   <span data-ttu-id="c7903-116">`ConStart`, que muestra cadenas que comiencen con una consonante.</span><span class="sxs-lookup"><span data-stu-id="c7903-116">`ConStart`, which displays strings that begin with a consonant.</span></span>  
  
-   <span data-ttu-id="c7903-117">`VowelStart`, que muestra las cadenas que comiencen por vocal.</span><span class="sxs-lookup"><span data-stu-id="c7903-117">`VowelStart`, which displays strings that begin with a vowel.</span></span>  
  
 <span data-ttu-id="c7903-118">Tenga en cuenta que ambos métodos incluyen un parámetro de cadena único y devuelven `void`.</span><span class="sxs-lookup"><span data-stu-id="c7903-118">Note that both methods include a single string parameter and return `void`.</span></span> <span data-ttu-id="c7903-119">En otras palabras, ambos métodos se pueden asignar a la `CheckAndDisplayDelegate` delegar.</span><span class="sxs-lookup"><span data-stu-id="c7903-119">In other words, both methods can be assigned to the  `CheckAndDisplayDelegate` delegate.</span></span>  
  
 <span data-ttu-id="c7903-120">El `Test.Main` método es el punto de entrada de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c7903-120">The `Test.Main` method is the application entry point.</span></span> <span data-ttu-id="c7903-121">Crea una instancia de un `StringContainer` objeto, lo rellena con las cadenas y crea dos `CheckAndDisplayDelegate` delegados, `conStart` y `vowelStart`, que invoca un método único.</span><span class="sxs-lookup"><span data-stu-id="c7903-121">It instantiates a `StringContainer` object, populates it with strings, and creates two `CheckAndDisplayDelegate` delegates, `conStart` and `vowelStart`, that invoke a single method.</span></span> <span data-ttu-id="c7903-122">A continuación, llama el <xref:System.Delegate.Combine%2A?displayProperty=nameWithType> método para crear el `multipleDelegates` delegar, que inicialmente contiene el `ConStart` y `VowelStart` delegados.</span><span class="sxs-lookup"><span data-stu-id="c7903-122">It then calls the <xref:System.Delegate.Combine%2A?displayProperty=nameWithType> method to create the `multipleDelegates` delegate, which initially contains the `ConStart` and  `VowelStart` delegates.</span></span> <span data-ttu-id="c7903-123">Tenga en cuenta que, cuando el `multipleDelegates` se invoca el delegado, que muestra todas las cadenas de la colección en su orden original.</span><span class="sxs-lookup"><span data-stu-id="c7903-123">Note that when the `multipleDelegates` delegate is invoked, it displays all the strings in the collection in their original order.</span></span> <span data-ttu-id="c7903-124">Esto es porque cada letra se pasa por separado a cada delegado, y cada letra cumple los criterios de filtrado de solo uno de los dos delegados.</span><span class="sxs-lookup"><span data-stu-id="c7903-124">This is because each letter is passed separately to each delegate, and each letter meets the filtering criteria of only one of the two delegates.</span></span> <span data-ttu-id="c7903-125">Por último, después de las llamadas a <xref:System.Delegate.Remove%2A?displayProperty=nameWithType> y <xref:System.Delegate.Combine%2A?displayProperty=nameWithType>, `multipleDelegates` contiene dos `conStart` delegados.</span><span class="sxs-lookup"><span data-stu-id="c7903-125">Finally, after calls to <xref:System.Delegate.Remove%2A?displayProperty=nameWithType> and <xref:System.Delegate.Combine%2A?displayProperty=nameWithType>, `multipleDelegates` contains two `conStart` delegates.</span></span> <span data-ttu-id="c7903-126">Cuando se invoca, donde cada cadena en el `StringContainer` objeto aparece dos veces.</span><span class="sxs-lookup"><span data-stu-id="c7903-126">When it is invoked, each string in the `StringContainer` object is displayed twice.</span></span>  
  
 [!code-cpp[Multicast Delegate Introduction#1](~/samples/snippets/cpp/VS_Snippets_CLR/Multicast Delegate Introduction/CPP/delegatestring.cpp#1)]
 [!code-csharp[Multicast Delegate Introduction#1](~/samples/snippets/csharp/VS_Snippets_CLR/Multicast Delegate Introduction/CS/delegatestring.cs#1)]
 [!code-vb[Multicast Delegate Introduction#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Multicast Delegate Introduction/VB/delegatestring.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c7903-127">Inicializa una nueva instancia de la clase <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-127">Initializes a new instance of the <see cref="T:System.MulticastDelegate" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MulticastDelegate (object target, string method);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(object target, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (target As Object, method As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MulticastDelegate(System::Object ^ target, System::String ^ method);" />
      <MemberSignature Language="F#" Value="new MulticastDelegate : obj * string -&gt; MulticastDelegate" Usage="new System.MulticastDelegate (target, method)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c7903-128">Objeto en el que se define <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-128">The object on which <paramref name="method" /> is defined.</span></span></param>
        <param name="method"><span data-ttu-id="c7903-129">Nombre del método para el que se crea el delegado.</span><span class="sxs-lookup"><span data-stu-id="c7903-129">The name of the method for which a delegate is created.</span></span></param>
        <summary><span data-ttu-id="c7903-130">Inicializa una nueva instancia de la clase <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-130">Initializes a new instance of the <see cref="T:System.MulticastDelegate" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-131">Este constructor no se puede usar en código de aplicación.</span><span class="sxs-lookup"><span data-stu-id="c7903-131">This constructor cannot be used in application code.</span></span> <span data-ttu-id="c7903-132">Para crear un delegado especificando el nombre de un método de instancia, use una sobrecarga de la <xref:System.Delegate.CreateDelegate%2A?displayProperty=nameWithType> método que especifica un nombre de método y un objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="c7903-132">To create a delegate by specifying the name of an instance method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=nameWithType> method that specifies a method name and a target object.</span></span> <span data-ttu-id="c7903-133">Por ejemplo, el <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29?displayProperty=nameWithType> sobrecarga del método crea un delegado para un método de instancia con un nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="c7903-133">For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29?displayProperty=nameWithType> method overload creates a delegate for an instance method with a specified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-134">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-134">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-135">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-135">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-136">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-136">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MulticastDelegate (Type target, string method);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type target, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (target As Type, method As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MulticastDelegate(Type ^ target, System::String ^ method);" />
      <MemberSignature Language="F#" Value="new MulticastDelegate : Type * string -&gt; MulticastDelegate" Usage="new System.MulticastDelegate (target, method)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="target" Type="System.Type" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="c7903-137">Tipo de objeto en el que se define <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-137">The type of object on which <paramref name="method" /> is defined.</span></span></param>
        <param name="method"><span data-ttu-id="c7903-138">Nombre del método estático para el que se crea el delegado.</span><span class="sxs-lookup"><span data-stu-id="c7903-138">The name of the static method for which a delegate is created.</span></span></param>
        <summary><span data-ttu-id="c7903-139">Inicializa una nueva instancia de la clase <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-139">Initializes a new instance of the <see cref="T:System.MulticastDelegate" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-140">Este constructor no se puede usar en código de aplicación.</span><span class="sxs-lookup"><span data-stu-id="c7903-140">This constructor cannot be used in application code.</span></span> <span data-ttu-id="c7903-141">Para crear un delegado especificando el nombre de un método estático, use una sobrecarga de la <xref:System.Delegate.CreateDelegate%2A?displayProperty=nameWithType> método que especifica un nombre de método pero no especifica un objeto de destino.</span><span class="sxs-lookup"><span data-stu-id="c7903-141">To create a delegate by specifying the name of a static method, use an overload of the <xref:System.Delegate.CreateDelegate%2A?displayProperty=nameWithType> method that specifies a method name but does not specify a target object.</span></span> <span data-ttu-id="c7903-142">Por ejemplo, el <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29?displayProperty=nameWithType> sobrecarga del método crea un delegado para un método estático con un nombre especificado.</span><span class="sxs-lookup"><span data-stu-id="c7903-142">For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29?displayProperty=nameWithType> method overload creates a static delegate for a method with a specified name.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-143">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-143">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-144">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-144">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-145">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="c7903-145">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CombineImpl">
      <MemberSignature Language="C#" Value="protected override sealed Delegate CombineImpl (Delegate follow);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Delegate CombineImpl(class System.Delegate follow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.CombineImpl(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CombineImpl (follow As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Delegate ^ CombineImpl(Delegate ^ follow);" />
      <MemberSignature Language="F#" Value="override this.CombineImpl : Delegate -&gt; Delegate" Usage="multicastDelegate.CombineImpl follow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="follow" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="follow"><span data-ttu-id="c7903-146">Delegado que se va a combinar con este delegado.</span><span class="sxs-lookup"><span data-stu-id="c7903-146">The delegate to combine with this delegate.</span></span></param>
        <summary><span data-ttu-id="c7903-147">Combina este <see cref="T:System.Delegate" /> con el <see cref="T:System.Delegate" /> especificado para formar un nuevo delegado.</span><span class="sxs-lookup"><span data-stu-id="c7903-147">Combines this <see cref="T:System.Delegate" /> with the specified <see cref="T:System.Delegate" /> to form a new delegate.</span></span></summary>
        <returns><span data-ttu-id="c7903-148">Delegado que es la nueva raíz de la lista de invocación <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-148">A delegate that is the new root of the <see cref="T:System.MulticastDelegate" /> invocation list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7903-149"><paramref name="follow" /> no tiene el mismo tipo que esta instancia.</span><span class="sxs-lookup"><span data-stu-id="c7903-149"><paramref name="follow" /> does not have the same type as this instance.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-150">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-150">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-151">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-151">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-152">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="c7903-152">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DynamicInvokeImpl">
      <MemberSignature Language="C#" Value="protected override sealed object DynamicInvokeImpl (object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object DynamicInvokeImpl(object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.DynamicInvokeImpl(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function DynamicInvokeImpl (args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ DynamicInvokeImpl(cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.DynamicInvokeImpl : obj[] -&gt; obj" Usage="multicastDelegate.DynamicInvokeImpl args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="c7903-153">Argumentos que se van a pasan al método encapsulado.</span><span class="sxs-lookup"><span data-stu-id="c7903-153">The arguments to pass to the encapsulated method.</span></span></param>
        <summary><span data-ttu-id="c7903-154">Procesa toda la lista de invocación.</span><span class="sxs-lookup"><span data-stu-id="c7903-154">Processes the full invocation list.</span></span></summary>
        <returns><span data-ttu-id="c7903-155">Matriz de tipo <see cref="T:System.Object" /> que contiene el valor devuelto del método encapsulado.</span><span class="sxs-lookup"><span data-stu-id="c7903-155">An array of type <see cref="T:System.Object" /> that contains the return value of the encapsulated method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-156">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-156">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span>

<span data-ttu-id="c7903-157">O bien</span><span class="sxs-lookup"><span data-stu-id="c7903-157">-or-</span></span>

<span data-ttu-id="c7903-158">Se ha intentado invocar a un método al que no tiene acceso el llamador (es decir, un método privado).</span><span class="sxs-lookup"><span data-stu-id="c7903-158">There is an attempt to invoke a method to which the caller does not have access (that is, a private method).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7903-159">El número, orden o tipo de parámetros no es válido.</span><span class="sxs-lookup"><span data-stu-id="c7903-159">The number, order, or type of parameters is invalid.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="c7903-160">Un método encapsulado no es estático y el objeto de destino es nulo.</span><span class="sxs-lookup"><span data-stu-id="c7903-160">An encapsulated method is not static, and the target object is null.</span></span>

<span data-ttu-id="c7903-161">O bien</span><span class="sxs-lookup"><span data-stu-id="c7903-161">-or-</span></span>

<span data-ttu-id="c7903-162">Se ha intentado invocar a un método en un objeto o una clase que no admite a este método.</span><span class="sxs-lookup"><span data-stu-id="c7903-162">There is an attempt to invoke a method on an object or class that does not support the method.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="c7903-163">Uno de los métodos encapsulados produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="c7903-163">One of the encapsulated methods throws an exception.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override sealed bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="multicastDelegate.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c7903-164">Objeto que se va a comparar con esta instancia.</span><span class="sxs-lookup"><span data-stu-id="c7903-164">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="c7903-165">Determina si este delegado multidifusión y el objeto especificado son iguales.</span><span class="sxs-lookup"><span data-stu-id="c7903-165">Determines whether this multicast delegate and the specified object are equal.</span></span></summary>
        <returns><span data-ttu-id="c7903-166"><see langword="true" /> si <paramref name="obj" /> y la instancia tienen la mismas listas de invocación; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-166"><see langword="true" /> if <paramref name="obj" /> and this instance have the same invocation lists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-167">Dos delegados son iguales si no son `null` y son exactamente del mismo tipo, sus listas de invocación contienen el mismo número de elementos y todos los elementos de la lista de invocaciones del delegado primer es igual al elemento correspondiente en la invocación lista del segundo delegado.</span><span class="sxs-lookup"><span data-stu-id="c7903-167">Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.</span></span>  
  
 <span data-ttu-id="c7903-168">Dos elementos de lista de invocación son iguales si invocan el mismo método de instancia en la misma instancia de destino o invocan al mismo método estático.</span><span class="sxs-lookup"><span data-stu-id="c7903-168">Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-169">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-169">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-170">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-170">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-171">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="c7903-171">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override sealed int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="multicastDelegate.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7903-172">Devuelve el código hash de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="c7903-172">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="c7903-173">Código hash de un entero de 32 bits con signo.</span><span class="sxs-lookup"><span data-stu-id="c7903-173">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-174">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-174">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-175">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-175">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-176">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="c7903-176">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationList">
      <MemberSignature Language="C#" Value="public override sealed Delegate[] GetInvocationList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Delegate[] GetInvocationList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.GetInvocationList" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetInvocationList () As Delegate()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Delegate ^&gt; ^ GetInvocationList();" />
      <MemberSignature Language="F#" Value="override this.GetInvocationList : unit -&gt; Delegate[]" Usage="multicastDelegate.GetInvocationList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7903-177">Devuelve la lista de invocación de este delegado multidifusión, en el orden de invocación.</span><span class="sxs-lookup"><span data-stu-id="c7903-177">Returns the invocation list of this multicast delegate, in invocation order.</span></span></summary>
        <returns><span data-ttu-id="c7903-178">Matriz de delegados cuyas listas de invocación se corresponden colectivamente con las listas de invocación de esta instancia.</span><span class="sxs-lookup"><span data-stu-id="c7903-178">An array of delegates whose invocation lists collectively match the invocation list of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-179">La matriz contiene un conjunto de delegados, cada uno con una lista de invocaciones de una entrada.</span><span class="sxs-lookup"><span data-stu-id="c7903-179">The array contains a set of delegates, each with an invocation list of one entry.</span></span> <span data-ttu-id="c7903-180">Invocar a estos delegados de manera secuencial, en el orden en que aparecen en la matriz, produce los mismos resultados que la invocación de la instancia actual.</span><span class="sxs-lookup"><span data-stu-id="c7903-180">Invoking these delegates sequentially, in the order they appear in the array, produces the same results as invoking the current instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-181">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-181">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-182">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-182">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-183">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="c7903-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected override System.Reflection.MethodInfo GetMethodImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Reflection.MethodInfo GetMethodImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.GetMethodImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetMethodImpl () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Reflection::MethodInfo ^ GetMethodImpl();" />
      <MemberSignature Language="F#" Value="override this.GetMethodImpl : unit -&gt; System.Reflection.MethodInfo" Usage="multicastDelegate.GetMethodImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7903-184">Devuelve un método estático representado por el <see cref="T:System.MulticastDelegate" /> actual.</span><span class="sxs-lookup"><span data-stu-id="c7903-184">Returns a static method represented by the current <see cref="T:System.MulticastDelegate" />.</span></span></summary>
        <returns><span data-ttu-id="c7903-185">Método estático representado por el objeto <see cref="T:System.MulticastDelegate" /> actual.</span><span class="sxs-lookup"><span data-stu-id="c7903-185">A static method represented by the current <see cref="T:System.MulticastDelegate" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-186">Si el <xref:System.MulticastDelegate> representa varios métodos, se devuelve un único método.</span><span class="sxs-lookup"><span data-stu-id="c7903-186">If the <xref:System.MulticastDelegate> represents multiple methods, only one method is returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="multicastDelegate.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="c7903-187">Objeto que contiene todos los datos necesarios para serializar o deserializar la instancia.</span><span class="sxs-lookup"><span data-stu-id="c7903-187">An object that holds all the data needed to serialize or deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="c7903-188">(Reservado) Ubicación donde se almacenan los datos serializados y de la cual se recuperan.</span><span class="sxs-lookup"><span data-stu-id="c7903-188">(Reserved) The location where serialized data is stored and retrieved.</span></span></param>
        <summary><span data-ttu-id="c7903-189">Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con todos los datos necesarios para serializar la instancia.</span><span class="sxs-lookup"><span data-stu-id="c7903-189">Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with all the data needed to serialize this instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-190">Este método almacena toda la información en `info` es necesaria para serializar esta instancia.</span><span class="sxs-lookup"><span data-stu-id="c7903-190">This method stores all the information in `info` necessary to serialize this instance.</span></span>  
  
 <span data-ttu-id="c7903-191">El `context` parámetro está reservado y no se utiliza actualmente en la ejecución de este método.</span><span class="sxs-lookup"><span data-stu-id="c7903-191">The `context` parameter is reserved and is not currently used in the execution of this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7903-192">El valor de <paramref name="info" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-192"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-193">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-193">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <exception cref="T:System.Runtime.Serialization.SerializationException"><span data-ttu-id="c7903-194">Se ha producido un error de serialización.</span><span class="sxs-lookup"><span data-stu-id="c7903-194">A serialization error occurred.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="c7903-195">requiere plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="c7903-195">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="c7903-196">Este miembro no se puede usar código de confianza parcial o transparente.</span><span class="sxs-lookup"><span data-stu-id="c7903-196">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (MulticastDelegate d1, MulticastDelegate d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.MulticastDelegate d1, class System.MulticastDelegate d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.op_Equality(System.MulticastDelegate,System.MulticastDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As MulticastDelegate, d2 As MulticastDelegate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(MulticastDelegate ^ d1, MulticastDelegate ^ d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : MulticastDelegate * MulticastDelegate -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.MulticastDelegate" />
        <Parameter Name="d2" Type="System.MulticastDelegate" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="c7903-197">Operando izquierdo.</span><span class="sxs-lookup"><span data-stu-id="c7903-197">The left operand.</span></span></param>
        <param name="d2"><span data-ttu-id="c7903-198">Operando derecho.</span><span class="sxs-lookup"><span data-stu-id="c7903-198">The right operand.</span></span></param>
        <summary><span data-ttu-id="c7903-199">Determina si los dos objetos <see cref="T:System.MulticastDelegate" /> son iguales.</span><span class="sxs-lookup"><span data-stu-id="c7903-199">Determines whether two <see cref="T:System.MulticastDelegate" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="c7903-200">Es <see langword="true" /> si <paramref name="d1" /> y <paramref name="d2" /> tienen las mismas listas de invocación; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-200"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> have the same invocation lists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-201">Dos delegados son iguales si no son `null` y son exactamente del mismo tipo, sus listas de invocación contienen el mismo número de elementos y todos los elementos de la lista de invocaciones del delegado primer es igual al elemento correspondiente en la invocación lista del segundo delegado.</span><span class="sxs-lookup"><span data-stu-id="c7903-201">Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.</span></span>  
  
 <span data-ttu-id="c7903-202">Dos elementos de lista de invocación son iguales si invocan el mismo método de instancia en la misma instancia de destino o invocan al mismo método estático.</span><span class="sxs-lookup"><span data-stu-id="c7903-202">Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.</span></span>  
  
 <span data-ttu-id="c7903-203">Es el método equivalente para este operador <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c7903-203">The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-204">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-204">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-205">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-205">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-206">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="c7903-206">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (MulticastDelegate d1, MulticastDelegate d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.MulticastDelegate d1, class System.MulticastDelegate d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.op_Inequality(System.MulticastDelegate,System.MulticastDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As MulticastDelegate, d2 As MulticastDelegate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(MulticastDelegate ^ d1, MulticastDelegate ^ d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : MulticastDelegate * MulticastDelegate -&gt; bool" Usage="System.MulticastDelegate.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.MulticastDelegate" />
        <Parameter Name="d2" Type="System.MulticastDelegate" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="c7903-207">Operando izquierdo.</span><span class="sxs-lookup"><span data-stu-id="c7903-207">The left operand.</span></span></param>
        <param name="d2"><span data-ttu-id="c7903-208">Operando derecho.</span><span class="sxs-lookup"><span data-stu-id="c7903-208">The right operand.</span></span></param>
        <summary><span data-ttu-id="c7903-209">Determina si dos objetos <see cref="T:System.MulticastDelegate" /> no son iguales.</span><span class="sxs-lookup"><span data-stu-id="c7903-209">Determines whether two <see cref="T:System.MulticastDelegate" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="c7903-210">Es <see langword="true" /> si <paramref name="d1" /> y <paramref name="d2" /> no tienen las mismas listas de invocación; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-210"><see langword="true" /> if <paramref name="d1" /> and <paramref name="d2" /> do not have the same invocation lists; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c7903-211">Dos delegados son iguales si no son `null` y son exactamente del mismo tipo, sus listas de invocación contienen el mismo número de elementos y todos los elementos de la lista de invocaciones del delegado primer es igual al elemento correspondiente en la invocación lista del segundo delegado.</span><span class="sxs-lookup"><span data-stu-id="c7903-211">Two delegates are equal if they are not `null` and are of exactly the same type, their invocation lists contain the same number of elements, and every element in the invocation list of the first delegate is equal to the corresponding element in the invocation list of the second delegate.</span></span>  
  
 <span data-ttu-id="c7903-212">Dos elementos de lista de invocación son iguales si invocan el mismo método de instancia en la misma instancia de destino o invocan al mismo método estático.</span><span class="sxs-lookup"><span data-stu-id="c7903-212">Two invocation list elements are equal if they invoke the same instance method on the same target instance, or they invoke the same static method.</span></span>  
  
 <span data-ttu-id="c7903-213">Es el método equivalente para este operador <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="c7903-213">The equivalent method for this operator is <xref:System.MulticastDelegate.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-214">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-214">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-215">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-215">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-216">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="c7903-216">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="RemoveImpl">
      <MemberSignature Language="C#" Value="protected override sealed Delegate RemoveImpl (Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Delegate RemoveImpl(class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.MulticastDelegate.RemoveImpl(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function RemoveImpl (value As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override Delegate ^ RemoveImpl(Delegate ^ value);" />
      <MemberSignature Language="F#" Value="override this.RemoveImpl : Delegate -&gt; Delegate" Usage="multicastDelegate.RemoveImpl value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c7903-217">Delegado que se va a buscar en la lista de invocación.</span><span class="sxs-lookup"><span data-stu-id="c7903-217">The delegate to search for in the invocation list.</span></span></param>
        <summary><span data-ttu-id="c7903-218">Quita un elemento de la lista de invocación de este <see cref="T:System.MulticastDelegate" /> que sea igual al delegado especificado.</span><span class="sxs-lookup"><span data-stu-id="c7903-218">Removes an element from the invocation list of this <see cref="T:System.MulticastDelegate" /> that is equal to the specified delegate.</span></span></summary>
        <returns><span data-ttu-id="c7903-219">Si se encuentra <paramref name="value" /> en la lista de invocación de esta instancia, aparecerá un nuevo <see cref="T:System.Delegate" /> sin <paramref name="value" /> en su lista de invocación; en caso contrario, aparecerá esta instancia con su lista original de invocación.</span><span class="sxs-lookup"><span data-stu-id="c7903-219">If <paramref name="value" /> is found in the invocation list for this instance, then a new <see cref="T:System.Delegate" /> without <paramref name="value" /> in its invocation list; otherwise, this instance with its original invocation list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="c7903-220">No se puede crear una instancia de una clase abstracta o este miembro se invocó mediante un mecanismo de enlace en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="c7903-220">Cannot create an instance of an abstract class, or this member was invoked with a late-binding mechanism.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="c7903-221">Cuando se invoca en tiempo de ejecución a través de mecanismos como <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="c7903-221">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="c7903-222">Enumeración asociada: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="c7903-222">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>